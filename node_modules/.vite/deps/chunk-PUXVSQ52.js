import {
  BusyIndicator_default,
  ItemNavigationBehavior_default,
  ItemNavigation_default,
  ListItemBase_default,
  ListSelectionMode_default,
  List_default,
  NavigationMode_default,
  ResponsivePopover_default
} from "./chunk-5FMKHJ6W.js";
import {
  ARIA_LABEL_LIST_ITEM_CHECKBOX,
  ARIA_LABEL_LIST_ITEM_RADIO_BUTTON,
  Button_default,
  DELETE,
  FORM_CHECKABLE_REQUIRED,
  FORM_SELECTABLE_REQUIRED2,
  Fragment,
  Icon_default,
  JsxRenderer_default,
  LIST_ITEM_NOT_SELECTED,
  LIST_ITEM_SELECTED,
  Label_default,
  MENU_BACK_BUTTON_ARIA_LABEL,
  MENU_CLOSE_BUTTON_ARIA_LABEL,
  MENU_POPOVER_ACCESSIBLE_NAME,
  UI5Element_default,
  VALUE_STATE_ERROR,
  VALUE_STATE_INFORMATION,
  VALUE_STATE_SUCCESS,
  VALUE_STATE_WARNING,
  ValueState_default,
  customElement_default,
  decline_default,
  event_strict_default,
  getActiveElement_default,
  getEffectiveAriaLabelText,
  getFirstFocusableElement,
  i18n_default,
  isDelete,
  isDown,
  isEnter,
  isF2,
  isLeft,
  isRight,
  isSpace,
  isUp,
  jsx,
  jsxs,
  parameters_bundle_css_default,
  parameters_bundle_css_default2,
  property_default,
  slot_default
} from "./chunk-ANJ7DKRT.js";
import {
  ICON_NAV_BACK
} from "./chunk-7MCSUB2E.js";
import {
  registerIcon
} from "./chunk-Y4O442SL.js";
import {
  isDesktop,
  isPhone,
  registerThemePropertiesLoader,
  renderFinished
} from "./chunk-NPG2NGWT.js";

// node_modules/@ui5/webcomponents-icons/dist/v4/nav-back.js
var name = "nav-back";
var pathData = "M375.5 426q9 9 9 22.5t-9 22.5q-10 10-23 10t-23-10l-192-192q-9-9-9-22.5t9-22.5l191-193q10-10 23-10t22 10q10 9 10 22t-10 23l-157 159q-5 5-5 11.5t5 11.5z";
var ltr = false;
var accData = ICON_NAV_BACK;
var collection = "SAP-icons-v4";
var packageName = "@ui5/webcomponents-icons";
registerIcon(name, { pathData, ltr, accData, collection, packageName });

// node_modules/@ui5/webcomponents-icons/dist/v5/nav-back.js
var name2 = "nav-back";
var pathData2 = "M326 96q11 0 18.5 7.5T352 122q0 10-8 18L223 256l121 116q8 8 8 18 0 11-7.5 18.5T326 416q-10 0-17-7L168 274q-8-6-8-18 0-11 8-19l141-134q7-7 17-7z";
var ltr2 = false;
var accData2 = ICON_NAV_BACK;
var collection2 = "SAP-icons-v5";
var packageName2 = "@ui5/webcomponents-icons";
registerIcon(name2, { pathData: pathData2, ltr: ltr2, accData: accData2, collection: collection2, packageName: packageName2 });

// node_modules/@ui5/webcomponents-icons/dist/nav-back.js
var nav_back_default = "nav-back";

// node_modules/@ui5/webcomponents-icons/dist/v4/edit.js
var name3 = "edit";
var pathData3 = "M475 104q5 7 5 12 0 6-5 11L150 453q-4 4-8 4L32 480l22-110q0-5 4-9L384 36q4-4 11-4t11 4zm-121 99l-46-45L84 381l46 46zm87-88l-46-44-64 64 45 45z";
var ltr3 = false;
var collection3 = "SAP-icons-v4";
var packageName3 = "@ui5/webcomponents-icons";
registerIcon(name3, { pathData: pathData3, ltr: ltr3, collection: collection3, packageName: packageName3 });

// node_modules/@ui5/webcomponents-icons/dist/v5/edit.js
var name4 = "edit";
var pathData4 = "M505 94q7 7 7 18t-6 17L130 505q-7 7-18 7H26q-11 0-18.5-7.5T0 486v-86q1-10 6-16L382 7q7-7 18-7t18 7zm-55 18l-50-50-50 50 50 50zm-86 86l-50-50L62 400l50 50z";
var ltr4 = false;
var collection4 = "SAP-icons-v5";
var packageName4 = "@ui5/webcomponents-icons";
registerIcon(name4, { pathData: pathData4, ltr: ltr4, collection: collection4, packageName: packageName4 });

// node_modules/@ui5/webcomponents-icons/dist/edit.js
var edit_default = "edit";

// node_modules/@ui5/webcomponents/dist/types/Highlight.js
var Highlight;
(function(Highlight2) {
  Highlight2["None"] = "None";
  Highlight2["Positive"] = "Positive";
  Highlight2["Critical"] = "Critical";
  Highlight2["Negative"] = "Negative";
  Highlight2["Information"] = "Information";
})(Highlight || (Highlight = {}));
var Highlight_default = Highlight;

// node_modules/@ui5/webcomponents/dist/types/ListItemType.js
var ListItemType;
(function(ListItemType2) {
  ListItemType2["Inactive"] = "Inactive";
  ListItemType2["Active"] = "Active";
  ListItemType2["Detail"] = "Detail";
  ListItemType2["Navigation"] = "Navigation";
})(ListItemType || (ListItemType = {}));
var ListItemType_default = ListItemType;

// node_modules/@ui5/webcomponents/dist/generated/themes/ListItem.css.js
registerThemePropertiesLoader("@ui5/webcomponents-theming", "sap_horizon", async () => parameters_bundle_css_default);
registerThemePropertiesLoader("@ui5/webcomponents", "sap_horizon", async () => parameters_bundle_css_default2);
var ListItem_css_default = `.ui5-hidden-text{position:absolute;clip:rect(1px,1px,1px,1px);user-select:none;left:-1000px;top:-1000px;pointer-events:none;font-size:0}:host([navigated]) .ui5-li-root .ui5-li-navigated{width:.1875rem;position:absolute;right:0;top:0;bottom:0;background-color:var(--sapList_SelectionBorderColor)}:host([active][actionable]) .ui5-li-root .ui5-li-icon{color:var(--sapList_Active_TextColor)}:host([active][actionable]) .ui5-li-title,:host([active][actionable]) .ui5-li-desc,:host([active][actionable]) .ui5-li-additional-text{color:var(--sapList_Active_TextColor)}:host([active][actionable]) .ui5-li-additional-text{text-shadow:none}:host([additional-text-state="Critical"]) .ui5-li-additional-text{color:var(--sapCriticalTextColor)}:host([additional-text-state="Positive"]) .ui5-li-additional-text{color:var(--sapPositiveTextColor)}:host([additional-text-state="Negative"]) .ui5-li-additional-text{color:var(--sapNegativeTextColor)}:host([additional-text-state="Information"]) .ui5-li-additional-text{color:var(--sapInformativeTextColor)}:host([has-title][description]){height:5rem}:host([has-title][image]){height:5rem}:host([_has-image]){height:5rem}:host([image]) .ui5-li-content{height:3rem}::slotted(img[slot="image"]){width:var(--_ui5-v2-8-0_list_item_img_size);height:var(--_ui5-v2-8-0_list_item_img_size);border-radius:var(--ui5-v2-8-0-avatar-border-radius);object-fit:contain}:host([description]) .ui5-li-root{padding:1rem}:host([description]) .ui5-li-content{height:3rem}:host([has-title][description]) .ui5-li-title{padding-bottom:.375rem}.ui5-li-text-wrapper{flex-direction:column}:host([description]) .ui5-li-text-wrapper{height:100%;justify-content:space-between;padding:.125rem 0}.ui5-li-description-info-wrapper{display:flex;justify-content:space-between}.ui5-li-additional-text,:host(:not([wrapping-type="Normal"])) .ui5-li-title,.ui5-li-desc{white-space:nowrap;overflow:hidden;text-overflow:ellipsis}:host([wrapping-type="Normal"]){height:auto}:host([wrapping-type="Normal"]) .ui5-li-content{margin:var(--_ui5-v2-8-0_list_item_content_vertical_offset) 0}.ui5-li-desc{color:var(--sapContent_LabelColor);font-size:var(--sapFontSize)}:host([description]) .ui5-li-additional-text{align-self:flex-end}.ui5-li-image{min-width:var(--_ui5-v2-8-0_list_item_img_size);min-height:var(--_ui5-v2-8-0_list_item_img_size);margin-top:var(--_ui5-v2-8-0_list_item_img_top_margin);margin-bottom:var(--_ui5-v2-8-0_list_item_img_bottom_margin);margin-inline-end:var(--_ui5-v2-8-0_list_item_img_hn_margin)}.ui5-li-icon{min-width:var(--_ui5-v2-8-0_list_item_icon_size);min-height:var(--_ui5-v2-8-0_list_item_icon_size);color:var(--sapContent_NonInteractiveIconColor);padding-inline-end:var(--_ui5-v2-8-0_list_item_icon_padding-inline-end)}.ui5-li-detailbtn,.ui5-li-deletebtn{display:flex;align-items:center;margin-left:var(--_ui5-v2-8-0_list_buttons_left_space)}.ui5-li-multisel-cb,.ui5-li-singlesel-radiobtn{flex-shrink:0}:host([description]) .ui5-li-singlesel-radiobtn{align-self:flex-start;margin-top:var(--_ui5-v2-8-0_list_item_selection_btn_margin_top)}:host([description]) .ui5-li-multisel-cb{align-self:flex-start;margin-top:var(--_ui5-v2-8-0_list_item_selection_btn_margin_top)}:host([_selection-mode="SingleStart"]) .ui5-li-root{padding-inline:0 1rem}:host([_selection-mode="Multiple"]) .ui5-li-root{padding-inline:0 1rem}:host([_selection-mode="SingleEnd"]) .ui5-li-root{padding-inline:1rem 0}:host [ui5-checkbox].ui5-li-singlesel-radiobtn{margin-right:var(--_ui5-v2-8-0_list_item_cb_margin_right)}.ui5-li-highlight{position:absolute;width:.375rem;bottom:0;left:0;top:0;border-inline-end:.0625rem solid var(--ui5-v2-8-0-listitem-background-color);box-sizing:border-box}:host([highlight="Negative"]) .ui5-li-highlight{background:var(--sapNegativeTextColor)}:host([highlight="Critical"]) .ui5-li-highlight{background:var(--sapCriticalTextColor)}:host([highlight="Positive"]) .ui5-li-highlight{background:var(--sapPositiveTextColor)}:host([highlight="Information"]) .ui5-li-highlight{background:var(--sapInformativeTextColor)}
`;

// node_modules/@ui5/webcomponents/dist/generated/themes/ListItemAdditionalText.css.js
registerThemePropertiesLoader("@ui5/webcomponents-theming", "sap_horizon", async () => parameters_bundle_css_default);
registerThemePropertiesLoader("@ui5/webcomponents", "sap_horizon", async () => parameters_bundle_css_default2);
var ListItemAdditionalText_css_default = `.ui5-li-additional-text{margin:0 .25rem;color:var(--sapNeutralTextColor);font-size:var(--sapFontSize);min-width:3.75rem;text-align:end;white-space:nowrap;overflow:hidden;text-overflow:ellipsis}
`;

// node_modules/@ui5/webcomponents-icons/dist/v4/slim-arrow-right.js
var name5 = "slim-arrow-right";
var pathData5 = "M357.5 233q10 10 10 23t-10 23l-165 165q-12 11-23 0t0-23l160-159q6-6 0-12l-159-159q-5-5-5-11t5-11 11-5 11 5z";
var ltr5 = false;
var collection5 = "SAP-icons-v4";
var packageName5 = "@ui5/webcomponents-icons";
registerIcon(name5, { pathData: pathData5, ltr: ltr5, collection: collection5, packageName: packageName5 });

// node_modules/@ui5/webcomponents-icons/dist/v5/slim-arrow-right.js
var name6 = "slim-arrow-right";
var pathData6 = "M186 416q-11 0-18.5-7.5T160 390q0-10 8-18l121-116-121-116q-8-8-8-18 0-11 7.5-18.5T186 96q10 0 17 7l141 134q8 8 8 19 0 12-8 18L203 409q-7 7-17 7z";
var ltr6 = false;
var collection6 = "SAP-icons-v5";
var packageName6 = "@ui5/webcomponents-icons";
registerIcon(name6, { pathData: pathData6, ltr: ltr6, collection: collection6, packageName: packageName6 });

// node_modules/@ui5/webcomponents-icons/dist/slim-arrow-right.js
var slim_arrow_right_default = "slim-arrow-right";

// node_modules/@ui5/webcomponents/dist/ListItem.js
var __decorate = function(decorators, target, key, desc) {
  var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
  if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
  else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
  return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var ListItem_1;
var ListItem = ListItem_1 = class ListItem2 extends ListItemBase_default {
  constructor() {
    super();
    this.type = "Active";
    this.accessibilityAttributes = {};
    this.navigated = false;
    this.active = false;
    this.highlight = "None";
    this.accessibleRole = "ListItem";
    this._selectionMode = "None";
    this.deactivateByKey = (e) => {
      if (isEnter(e)) {
        this.deactivate();
      }
    };
    this.deactivate = () => {
      if (this.active) {
        this.active = false;
      }
    };
  }
  onBeforeRendering() {
    super.onBeforeRendering();
    this.actionable = (this.type === ListItemType_default.Active || this.type === ListItemType_default.Navigation) && this._selectionMode !== ListSelectionMode_default.Delete;
  }
  onEnterDOM() {
    super.onEnterDOM();
    document.addEventListener("mouseup", this.deactivate);
    document.addEventListener("touchend", this.deactivate);
    document.addEventListener("keyup", this.deactivateByKey);
  }
  onExitDOM() {
    document.removeEventListener("mouseup", this.deactivate);
    document.removeEventListener("keyup", this.deactivateByKey);
    document.removeEventListener("touchend", this.deactivate);
  }
  async _onkeydown(e) {
    if ((isSpace(e) || isEnter(e)) && this._isTargetSelfFocusDomRef(e)) {
      return;
    }
    super._onkeydown(e);
    const itemActive = this.type === ListItemType_default.Active, itemNavigated = this.typeNavigation;
    if ((isSpace(e) || isEnter(e)) && (itemActive || itemNavigated)) {
      this.activate();
    }
    if (isF2(e)) {
      const activeElement = getActiveElement_default();
      const focusDomRef = this.getFocusDomRef();
      if (activeElement === focusDomRef) {
        const firstFocusable = await getFirstFocusableElement(focusDomRef);
        firstFocusable == null ? void 0 : firstFocusable.focus();
      } else {
        focusDomRef.focus();
      }
    }
  }
  _onkeyup(e) {
    super._onkeyup(e);
    if (isSpace(e) || isEnter(e)) {
      this.deactivate();
    }
    if (this.modeDelete && isDelete(e)) {
      this.onDelete();
    }
  }
  _onmousedown() {
    this.activate();
  }
  _onmouseup() {
    if (this.getFocusDomRef().matches(":has(:focus-within)")) {
      return;
    }
    this.deactivate();
  }
  _ontouchend() {
    this._onmouseup();
  }
  _onfocusin(e) {
    super._onfocusin(e);
    if (e.target !== this.getFocusDomRef()) {
      this.deactivate();
    }
  }
  _onfocusout(e) {
    if (e.target !== this.getFocusDomRef()) {
      return;
    }
    this.deactivate();
  }
  _ondragstart(e) {
    if (!e.dataTransfer) {
      return;
    }
    if (e.target === this._listItem) {
      this.setAttribute("data-moving", "");
      e.dataTransfer.dropEffect = "move";
      e.dataTransfer.effectAllowed = "move";
    }
  }
  _ondragend(e) {
    if (e.target === this._listItem) {
      this.removeAttribute("data-moving");
    }
  }
  _isTargetSelfFocusDomRef(e) {
    const target = e.target, focusDomRef = this.getFocusDomRef();
    return target !== focusDomRef;
  }
  /**
   * Called when selection components in Single (ui5-radio-button)
   * and Multi (ui5-checkbox) selection modes are used.
   */
  onMultiSelectionComponentPress(e) {
    if (this.isInactive) {
      return;
    }
    this.fireDecoratorEvent("selection-requested", { item: this, selected: e.target.checked, selectionComponentPressed: true });
  }
  onSingleSelectionComponentPress(e) {
    if (this.isInactive) {
      return;
    }
    this.fireDecoratorEvent("selection-requested", { item: this, selected: !e.target.checked, selectionComponentPressed: true });
  }
  activate() {
    if (this.type === ListItemType_default.Active || this.type === ListItemType_default.Navigation) {
      this.active = true;
    }
  }
  onDelete() {
    this.fireDecoratorEvent("selection-requested", { item: this, selectionComponentPressed: false });
  }
  onDetailClick() {
    this.fireDecoratorEvent("detail-click", { item: this, selected: this.selected });
  }
  fireItemPress(e) {
    if (this.isInactive) {
      return;
    }
    super.fireItemPress(e);
    if (document.activeElement !== this) {
      this.focus();
    }
  }
  get isInactive() {
    return this.type === ListItemType_default.Inactive || this.type === ListItemType_default.Detail;
  }
  get placeSelectionElementBefore() {
    return this._selectionMode === ListSelectionMode_default.Multiple || this._selectionMode === ListSelectionMode_default.SingleStart;
  }
  get placeSelectionElementAfter() {
    return !this.placeSelectionElementBefore && (this._selectionMode === ListSelectionMode_default.SingleEnd || this._selectionMode === ListSelectionMode_default.Delete);
  }
  get modeSingleSelect() {
    return [
      ListSelectionMode_default.SingleStart,
      ListSelectionMode_default.SingleEnd,
      ListSelectionMode_default.Single
    ].includes(this._selectionMode);
  }
  get modeMultiple() {
    return this._selectionMode === ListSelectionMode_default.Multiple;
  }
  get modeDelete() {
    return this._selectionMode === ListSelectionMode_default.Delete;
  }
  get typeDetail() {
    return this.type === ListItemType_default.Detail;
  }
  get typeNavigation() {
    return this.type === ListItemType_default.Navigation;
  }
  get typeActive() {
    return this.type === ListItemType_default.Active;
  }
  get _ariaSelected() {
    if (this.modeMultiple || this.modeSingleSelect) {
      return this.selected;
    }
    return void 0;
  }
  get listItemAccessibleRole() {
    return this._forcedAccessibleRole || this.accessibleRole.toLowerCase();
  }
  get ariaSelectedText() {
    let ariaSelectedText;
    if (this._ariaSelected !== void 0) {
      ariaSelectedText = this._ariaSelected ? ListItem_1.i18nBundle.getText(LIST_ITEM_SELECTED) : ListItem_1.i18nBundle.getText(LIST_ITEM_NOT_SELECTED);
    }
    return ariaSelectedText;
  }
  get deleteText() {
    return ListItem_1.i18nBundle.getText(DELETE);
  }
  get hasDeleteButtonSlot() {
    return !!this.deleteButton.length;
  }
  get _accessibleNameRef() {
    if (this.accessibleName) {
      return `${this._id}-invisibleText`;
    }
    return `${this._id}-content ${this._id}-invisibleText`;
  }
  get _accInfo() {
    return {
      role: this.listItemAccessibleRole,
      ariaExpanded: void 0,
      ariaLevel: void 0,
      ariaLabel: ListItem_1.i18nBundle.getText(ARIA_LABEL_LIST_ITEM_CHECKBOX),
      ariaLabelRadioButton: ListItem_1.i18nBundle.getText(ARIA_LABEL_LIST_ITEM_RADIO_BUTTON),
      ariaSelectedText: this.ariaSelectedText,
      ariaHaspopup: this.accessibilityAttributes.hasPopup,
      setsize: this.accessibilityAttributes.ariaSetsize,
      posinset: this.accessibilityAttributes.ariaPosinset,
      tooltip: this.tooltip
    };
  }
  get _hasHighlightColor() {
    return this.highlight !== Highlight_default.None;
  }
  get hasConfigurableMode() {
    return true;
  }
  get _listItem() {
    return this.shadowRoot.querySelector("li");
  }
};
__decorate([
  property_default()
], ListItem.prototype, "type", void 0);
__decorate([
  property_default({ type: Object })
], ListItem.prototype, "accessibilityAttributes", void 0);
__decorate([
  property_default({ type: Boolean })
], ListItem.prototype, "navigated", void 0);
__decorate([
  property_default()
], ListItem.prototype, "tooltip", void 0);
__decorate([
  property_default({ type: Boolean })
], ListItem.prototype, "active", void 0);
__decorate([
  property_default()
], ListItem.prototype, "highlight", void 0);
__decorate([
  property_default({ type: Boolean })
], ListItem.prototype, "selected", void 0);
__decorate([
  property_default()
], ListItem.prototype, "accessibleRole", void 0);
__decorate([
  property_default()
], ListItem.prototype, "_forcedAccessibleRole", void 0);
__decorate([
  property_default()
], ListItem.prototype, "_selectionMode", void 0);
__decorate([
  slot_default()
], ListItem.prototype, "deleteButton", void 0);
__decorate([
  i18n_default("@ui5/webcomponents")
], ListItem, "i18nBundle", void 0);
ListItem = ListItem_1 = __decorate([
  customElement_default({
    languageAware: true,
    renderer: JsxRenderer_default,
    styles: [
      ListItemBase_default.styles,
      ListItemAdditionalText_css_default,
      ListItem_css_default
    ]
  }),
  event_strict_default("detail-click", {
    bubbles: true
  }),
  event_strict_default("selection-requested", {
    bubbles: true
  })
], ListItem);
var ListItem_default = ListItem;

// node_modules/@ui5/webcomponents/dist/RadioButtonGroup.js
var RadioButtonGroup = class {
  static hasGroup(groupName) {
    return this.groups.has(groupName);
  }
  static getGroup(groupName) {
    return this.groups.get(groupName);
  }
  static getCheckedRadioFromGroup(groupName) {
    return this.checkedRadios.get(groupName);
  }
  static removeGroup(groupName) {
    this.checkedRadios.delete(groupName);
    return this.groups.delete(groupName);
  }
  static addToGroup(radioBtn, groupName) {
    if (this.hasGroup(groupName)) {
      this.enforceSingleSelection(radioBtn, groupName);
      if (this.getGroup(groupName)) {
        this.getGroup(groupName).push(radioBtn);
      }
    } else {
      this.createGroup(radioBtn, groupName);
    }
    this.updateTabOrder(groupName);
  }
  static removeFromGroup(radioBtn, groupName) {
    const group = this.getGroup(groupName);
    if (!group) {
      return;
    }
    const checkedRadio = this.getCheckedRadioFromGroup(groupName);
    group.forEach((_radioBtn, idx, arr) => {
      if (radioBtn._id === _radioBtn._id) {
        return arr.splice(idx, 1);
      }
    });
    if (checkedRadio === radioBtn) {
      this.checkedRadios.set(groupName, null);
    }
    if (!group.length) {
      this.removeGroup(groupName);
    }
    this.updateTabOrder(groupName);
  }
  static createGroup(radioBtn, groupName) {
    if (radioBtn.checked) {
      this.checkedRadios.set(groupName, radioBtn);
    }
    this.groups.set(groupName, [radioBtn]);
  }
  static selectNextItem(item, groupName) {
    const group = this.getGroup(groupName);
    if (!group) {
      return;
    }
    const groupLength = group.length, currentItemPosition = group.indexOf(item);
    if (groupLength <= 1) {
      return;
    }
    const nextItemToFocus = this._nextFocusable(currentItemPosition, group);
    if (!nextItemToFocus) {
      return;
    }
    this.updateSelectionInGroup(nextItemToFocus, groupName);
  }
  static updateFormValidity(groupName) {
    const group = this.getGroup(groupName);
    if (!group) {
      return;
    }
    const hasRequired = group.some((r) => r.required);
    const hasChecked = group.some((r) => r.checked);
    group.forEach((r) => {
      r._groupChecked = hasChecked;
      r._groupRequired = hasRequired;
    });
  }
  static updateTabOrder(groupName) {
    const group = this.getGroup(groupName);
    if (!group) {
      return;
    }
    const hasCheckedRadio = group.some((radioBtn) => radioBtn.checked);
    group.filter((radioBtn) => !radioBtn.disabled).forEach((radioBtn, idx) => {
      let activeElement = getActiveElement_default();
      if (activeElement == null ? void 0 : activeElement.classList.contains("ui5-radio-root")) {
        activeElement = activeElement.getRootNode();
        if (activeElement instanceof ShadowRoot) {
          activeElement = activeElement.host;
        }
      }
      if (hasCheckedRadio) {
        if ((activeElement == null ? void 0 : activeElement.hasAttribute("ui5-radio-button")) && activeElement.readonly) {
          radioBtn._tabIndex = activeElement === radioBtn && radioBtn.readonly ? 0 : -1;
        } else {
          radioBtn._tabIndex = radioBtn.checked ? 0 : -1;
        }
      } else {
        radioBtn._tabIndex = idx === 0 ? 0 : -1;
      }
    });
  }
  static selectPreviousItem(item, groupName) {
    const group = this.getGroup(groupName);
    if (!group) {
      return;
    }
    const groupLength = group.length, currentItemPosition = group.indexOf(item);
    if (groupLength <= 1) {
      return;
    }
    const previousItemToFocus = this._previousFocusable(currentItemPosition, group);
    if (!previousItemToFocus) {
      return;
    }
    this.updateSelectionInGroup(previousItemToFocus, groupName);
  }
  static selectItem(item, groupName) {
    this.updateSelectionInGroup(item, groupName);
    this.updateTabOrder(groupName);
    this.updateFormValidity(groupName);
  }
  static updateSelectionInGroup(radioBtnToSelect, groupName) {
    const checkedRadio = this.getCheckedRadioFromGroup(groupName);
    if (checkedRadio && !radioBtnToSelect.readonly) {
      this._deselectRadio(checkedRadio);
      this.checkedRadios.set(groupName, radioBtnToSelect);
    }
    if (radioBtnToSelect) {
      radioBtnToSelect.focus();
      if (!radioBtnToSelect.readonly) {
        this._selectRadio(radioBtnToSelect);
      } else {
        setTimeout(() => {
          this.updateTabOrder(groupName);
        }, 0);
      }
    }
  }
  static _deselectRadio(radioBtn) {
    if (radioBtn) {
      radioBtn.checked = false;
    }
  }
  static _selectRadio(radioBtn) {
    radioBtn.checked = true;
    radioBtn._checked = true;
    radioBtn.fireDecoratorEvent("change");
  }
  static _nextFocusable(pos, group) {
    if (!group) {
      return null;
    }
    const groupLength = group.length;
    let nextRadioToFocus = null;
    if (pos === groupLength - 1) {
      if (group[0].disabled) {
        return this._nextFocusable(1, group);
      }
      nextRadioToFocus = group[0];
    } else if (group[pos + 1].disabled) {
      return this._nextFocusable(pos + 1, group);
    } else {
      nextRadioToFocus = group[pos + 1];
    }
    return nextRadioToFocus;
  }
  static _previousFocusable(pos, group) {
    const groupLength = group.length;
    let previousRadioToFocus = null;
    if (pos === 0) {
      if (group[groupLength - 1].disabled) {
        return this._previousFocusable(groupLength - 1, group);
      }
      previousRadioToFocus = group[groupLength - 1];
    } else if (group[pos - 1].disabled) {
      return this._previousFocusable(pos - 1, group);
    } else {
      previousRadioToFocus = group[pos - 1];
    }
    return previousRadioToFocus;
  }
  static enforceSingleSelection(radioBtn, groupName) {
    const checkedRadio = this.getCheckedRadioFromGroup(groupName);
    if (radioBtn.checked) {
      if (!checkedRadio) {
        this.checkedRadios.set(groupName, radioBtn);
      } else if (radioBtn !== checkedRadio) {
        this._deselectRadio(checkedRadio);
        this.checkedRadios.set(groupName, radioBtn);
      }
    } else if (radioBtn === checkedRadio) {
      this.checkedRadios.set(groupName, null);
    }
    this.updateTabOrder(groupName);
    this.updateFormValidity(groupName);
  }
  static get groups() {
    if (!this._groups) {
      this._groups = /* @__PURE__ */ new Map();
    }
    return this._groups;
  }
  static get checkedRadios() {
    if (!this._checkedRadios) {
      this._checkedRadios = /* @__PURE__ */ new Map();
    }
    return this._checkedRadios;
  }
};
var RadioButtonGroup_default = RadioButtonGroup;

// node_modules/@ui5/webcomponents/dist/RadioButtonTemplate.js
function RadioButtonTemplate() {
  return jsxs("div", { role: "radio", class: "ui5-radio-root", "aria-checked": this.checked, "aria-disabled": this.effectiveAriaDisabled, "aria-describedby": this.effectiveAriaDescribedBy, "aria-label": this.ariaLabelText, tabindex: this.effectiveTabIndex, onClick: this._onclick, onKeyDown: this._onkeydown, onKeyUp: this._onkeyup, onMouseDown: this._onmousedown, onMouseUp: this._onmouseup, onFocusOut: this._onfocusout, children: [jsxs("div", { class: {
    "ui5-radio-inner": true,
    "ui5-radio-inner--hoverable": !this.disabled && !this.readonly && isDesktop()
  }, children: [jsxs("svg", { class: "ui5-radio-svg", focusable: "false", "aria-hidden": "true", children: [jsx("circle", { part: "outer-ring", class: "ui5-radio-svg-outer", cx: "50%", cy: "50%", r: "50%" }), jsx("circle", { part: "inner-ring", class: "ui5-radio-svg-inner", cx: "50%", cy: "50%" })] }), jsx("input", { type: "radio", required: this.required, checked: this.checked, readonly: this.readonly, disabled: this.disabled, name: this.name, "data-sap-no-tab-ref": true })] }), this.text && jsx(Label_default, { id: `${this._id}-label`, class: "ui5-radio-label", for: this._id, wrappingType: this.wrappingType, children: this.text }), this.hasValueState && jsx("span", { id: `${this._id}-descr`, class: "ui5-hidden-text", children: this.valueStateText })] });
}

// node_modules/@ui5/webcomponents/dist/generated/themes/RadioButton.css.js
registerThemePropertiesLoader("@ui5/webcomponents-theming", "sap_horizon", async () => parameters_bundle_css_default);
registerThemePropertiesLoader("@ui5/webcomponents", "sap_horizon", async () => parameters_bundle_css_default2);
var RadioButton_css_default = `.ui5-hidden-text{position:absolute;clip:rect(1px,1px,1px,1px);user-select:none;left:-1000px;top:-1000px;pointer-events:none;font-size:0}:host(:not([hidden])){display:inline-block}:host{min-width:var(--_ui5-v2-8-0_radio_button_min_width);max-width:100%;text-overflow:ellipsis;overflow:hidden;color:var(--_ui5-v2-8-0_radio_button_color);border-radius:var(--_ui5-v2-8-0_radio_button_border_radius)}:host(:not([disabled])) .ui5-radio-root{cursor:pointer}:host([checked]){color:var(--_ui5-v2-8-0_radio_button_checked_fill)}:host([checked]) .ui5-radio-svg-inner{fill:var(--_ui5-v2-8-0_radio_button_inner_ring_color)}:host([checked]) .ui5-radio-svg-outer{stroke:var(--_ui5-v2-8-0_radio_button_outer_ring_color)}:host([disabled]) .ui5-radio-root{color:var(--_ui5-v2-8-0_radio_button_color);opacity:var(--sapContent_DisabledOpacity)}:host([disabled][checked]) .ui5-radio-svg-outer{stroke:var(--_ui5-v2-8-0_radio_button_color)}:host(:not([disabled])[desktop]) .ui5-radio-root:focus:before,:host(:not([disabled])) .ui5-radio-root:focus-visible:before{content:"";display:var(--_ui5-v2-8-0_radio_button_focus_outline);position:absolute;inset:var(--_ui5-v2-8-0_radio_button_focus_dist);pointer-events:none;border:var(--_ui5-v2-8-0_radio_button_border_width) var(--sapContent_FocusStyle) var(--sapContent_FocusColor);border-radius:var(--_ui5-v2-8-0_radio_button_border_radius)}:host(:not([value-state="Negative"]):not([value-state="Critical"]):not([value-state="Positive"]):not([value-state="Information"])) .ui5-radio-root:hover .ui5-radio-inner--hoverable .ui5-radio-svg-outer{stroke:var(--_ui5-v2-8-0_radio_button_outer_ring_hover_color)}:host(:not([value-state="Negative"]):not([value-state="Critical"]):not([value-state="Positive"]):not([value-state="Information"])[checked]) .ui5-radio-root:hover .ui5-radio-inner--hoverable .ui5-radio-svg-outer{stroke:var(--_ui5-v2-8-0_radio_button_outer_ring_checked_hover_color)}.ui5-radio-root:hover .ui5-radio-inner--hoverable .ui5-radio-svg-outer,:host([checked]) .ui5-radio-root:hover .ui5-radio-inner--hoverable .ui5-radio-svg-outer{fill:var(--_ui5-v2-8-0_radio_button_hover_fill)}:host([active][checked]:not([value-state]):not([disabled]):not([readonly])) .ui5-radio-svg-outer{stroke:var(--_ui5-v2-8-0_radio_button_outer_ring_checked_hover_color)}:host([active]:not([checked]):not([value-state]):not([disabled]):not([readonly])) .ui5-radio-svg-outer{stroke:var(--_ui5-v2-8-0_radio_button_outer_ring_active_color)}:host([text]) .ui5-radio-root{padding-inline-end:var(--_ui5-v2-8-0_radio_button_border_width)}:host([text][desktop]) .ui5-radio-root:focus:before,:host([text]) .ui5-radio-root:focus-visible:before{inset-inline-end:0px}:host([text]) .ui5-radio-inner{padding:var(--_ui5-v2-8-0_radio_button_outer_ring_padding_with_label)}:host([checked][readonly]) .ui5-radio-svg-inner{fill:var(--_ui5-v2-8-0_radio_button_read_only_inner_ring_color)}:host([readonly]) .ui5-radio-root .ui5-radio-svg-outer{fill:var(--sapField_ReadOnly_Background);stroke:var(--sapField_ReadOnly_BorderColor);stroke-dasharray:var(--_ui5-v2-8-0_radio_button_read_only_border_type);stroke-width:var(--_ui5-v2-8-0_radio_button_read_only_border_width)}:host([value-state="Negative"]) .ui5-radio-svg-outer,:host([value-state="Critical"]) .ui5-radio-svg-outer{stroke-width:var(--sapField_InvalidBorderWidth)}:host([value-state="Information"]) .ui5-radio-svg-outer{stroke-width:var(--_ui5-v2-8-0_radio_button_information_border_width)}:host([value-state="Negative"][checked]) .ui5-radio-svg-inner{fill:var(--_ui5-v2-8-0_radio_button_checked_error_fill)}:host([value-state="Negative"]) .ui5-radio-svg-outer,:host([value-state="Negative"]) .ui5-radio-root:hover .ui5-radio-inner.ui5-radio-inner--hoverable:hover .ui5-radio-svg-outer{stroke:var(--sapField_InvalidColor);fill:var(--sapField_InvalidBackground)}:host([value-state="Negative"]) .ui5-radio-root:hover .ui5-radio-inner.ui5-radio-inner--hoverable .ui5-radio-svg-outer{fill:var(--_ui5-v2-8-0_radio_button_hover_fill_error)}:host([value-state="Critical"][checked]) .ui5-radio-svg-inner{fill:var(--_ui5-v2-8-0_radio_button_checked_warning_fill)}:host([value-state="Critical"]) .ui5-radio-svg-outer,:host([value-state="Critical"]) .ui5-radio-root:hover .ui5-radio-inner.ui5-radio-inner--hoverable:hover .ui5-radio-svg-outer{stroke:var(--sapField_WarningColor);fill:var(--sapField_WarningBackground)}:host([value-state="Critical"]) .ui5-radio-root:hover .ui5-radio-inner.ui5-radio-inner--hoverable .ui5-radio-svg-outer{fill:var(--_ui5-v2-8-0_radio_button_hover_fill_warning)}:host([value-state="Positive"][checked]) .ui5-radio-svg-inner{fill:var(--_ui5-v2-8-0_radio_button_checked_success_fill)}:host([value-state="Positive"]) .ui5-radio-svg-outer,:host([value-state="Positive"]) .ui5-radio-root:hover .ui5-radio-inner.ui5-radio-inner--hoverable:hover .ui5-radio-svg-outer{stroke:var(--sapField_SuccessColor);fill:var(--sapField_SuccessBackground)}:host([value-state="Positive"]) .ui5-radio-root:hover .ui5-radio-inner.ui5-radio-inner--hoverable .ui5-radio-svg-outer{fill:var(--_ui5-v2-8-0_radio_button_hover_fill_success)}:host([value-state="Information"][checked]) .ui5-radio-svg-inner{fill:var(--_ui5-v2-8-0_radio_button_checked_information_fill)}:host([value-state="Information"]) .ui5-radio-svg-outer,:host([value-state="Information"]) .ui5-radio-root:hover .ui5-radio-inner.ui5-radio-inner--hoverable:hover .ui5-radio-svg-outer{stroke:var(--sapField_InformationColor);fill:var(--sapField_InformationBackground)}:host([value-state="Information"]) .ui5-radio-root:hover .ui5-radio-inner.ui5-radio-inner--hoverable .ui5-radio-svg-outer{fill:var(--_ui5-v2-8-0_radio_button_hover_fill_information)}:host([value-state="Negative"]) .ui5-radio-root,:host([value-state="Critical"]) .ui5-radio-root,:host([value-state="Information"]) .ui5-radio-root{stroke-dasharray:var(--_ui5-v2-8-0_radio_button_warning_error_border_dash)}.ui5-radio-root{height:auto;position:relative;display:inline-flex;flex-wrap:nowrap;outline:none;max-width:100%;box-sizing:border-box;border:var(--_ui5-v2-8-0_radio_button_border);border-radius:var(--_ui5-v2-8-0_radio_button_border_radius)}.ui5-radio-inner{display:flex;align-items:center;padding:var(--_ui5-v2-8-0_radio_button_outer_ring_padding);flex-shrink:0;height:var(--_ui5-v2-8-0_radio_button_inner_size);font-size:1rem;pointer-events:none;vertical-align:top}.ui5-radio-inner{outline:none}.ui5-radio-inner input{-webkit-appearance:none;visibility:hidden;width:0;left:0;position:absolute;font-size:inherit;margin:0}[ui5-label].ui5-radio-label{display:flex;align-items:center;padding-inline-end:var(--_ui5-v2-8-0_radio_button_label_offset);padding-block:var(--_ui5-v2-8-0_radio_button_label_side_padding);vertical-align:top;max-width:100%;pointer-events:none;color:var(--_ui5-v2-8-0_radio_button_label_color);overflow-wrap:break-word}:host([wrapping-type="None"][text]) .ui5-radio-root{height:var(--_ui5-v2-8-0_radio_button_height)}:host([wrapping-type="None"][text]) [ui5-label].ui5-radio-label{text-overflow:ellipsis;overflow:hidden}.ui5-radio-svg{height:var(--_ui5-v2-8-0_radio_button_svg_size);width:var(--_ui5-v2-8-0_radio_button_svg_size);overflow:visible;pointer-events:none}.ui5-radio-svg-outer{fill:var(--_ui5-v2-8-0_radio_button_outer_ring_bg);stroke:currentColor;stroke-width:var(--_ui5-v2-8-0_radio_button_outer_ring_width)}.ui5-radio-svg-inner{fill:none;r:var(--_ui5-v2-8-0_radio_button_inner_ring_radius)}.ui5-radio-svg-outer,.ui5-radio-svg-inner{flex-shrink:0}:host(.ui5-li-singlesel-radiobtn) .ui5-radio-root .ui5-radio-inner .ui5-radio-svg-outer{fill:var(--sapList_Background)}
`;

// node_modules/@ui5/webcomponents/dist/RadioButton.js
var __decorate2 = function(decorators, target, key, desc) {
  var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
  if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
  else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
  return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var RadioButton_1;
var isGlobalHandlerAttached = false;
var activeRadio;
var RadioButton = RadioButton_1 = class RadioButton2 extends UI5Element_default {
  get formValidityMessage() {
    return RadioButton_1.i18nBundle.getText(FORM_SELECTABLE_REQUIRED2);
  }
  get formValidity() {
    return { valueMissing: this._groupRequired && !this._groupChecked };
  }
  async formElementAnchor() {
    return this.getFocusDomRefAsync();
  }
  get formFormattedValue() {
    return this.checked ? this.value || "on" : null;
  }
  constructor() {
    super();
    this.disabled = false;
    this.readonly = false;
    this.required = false;
    this.checked = false;
    this.valueState = "None";
    this.value = "";
    this.wrappingType = "Normal";
    this.active = false;
    this._groupChecked = false;
    this._groupRequired = false;
    this._name = "";
    this._checked = false;
    this._deactivate = () => {
      if (activeRadio) {
        activeRadio.active = false;
      }
    };
    if (!isGlobalHandlerAttached) {
      document.addEventListener("mouseup", this._deactivate);
      isGlobalHandlerAttached = true;
    }
  }
  onAfterRendering() {
    this.syncGroup();
  }
  onEnterDOM() {
    if (isDesktop()) {
      this.setAttribute("desktop", "");
    }
  }
  onExitDOM() {
    this.syncGroup(true);
  }
  syncGroup(forceRemove) {
    const oldGroup = this._name;
    const currentGroup = this.name;
    const oldChecked = this._checked;
    const currentChecked = this.checked;
    if (forceRemove) {
      RadioButtonGroup_default.removeFromGroup(this, oldGroup);
    }
    if (currentGroup !== oldGroup) {
      if (oldGroup) {
        RadioButtonGroup_default.removeFromGroup(this, oldGroup);
      }
      if (currentGroup) {
        RadioButtonGroup_default.addToGroup(this, currentGroup);
      }
    } else if (currentGroup && this.isConnected) {
      RadioButtonGroup_default.enforceSingleSelection(this, currentGroup);
    }
    if (this.name && currentChecked !== oldChecked) {
      RadioButtonGroup_default.updateTabOrder(this.name);
    }
    this._name = this.name || "";
    this._checked = this.checked;
  }
  _onclick() {
    return this.toggle();
  }
  _handleDown(e) {
    const currentGroup = this.name;
    if (!currentGroup) {
      return;
    }
    e.preventDefault();
    RadioButtonGroup_default.selectNextItem(this, currentGroup);
  }
  _handleUp(e) {
    const currentGroup = this.name;
    if (!currentGroup) {
      return;
    }
    e.preventDefault();
    RadioButtonGroup_default.selectPreviousItem(this, currentGroup);
  }
  _onkeydown(e) {
    if (isSpace(e)) {
      this.active = true;
      return e.preventDefault();
    }
    if (isEnter(e)) {
      this.active = true;
      return this.toggle();
    }
    const isRTL = this.effectiveDir === "rtl";
    if (isDown(e) || !isRTL && isRight(e) || isRTL && isLeft(e)) {
      this._handleDown(e);
    }
    if (isUp(e) || !isRTL && isLeft(e) || isRTL && isRight(e)) {
      this._handleUp(e);
    }
  }
  _onkeyup(e) {
    if (isSpace(e)) {
      this.toggle();
    }
    this.active = false;
  }
  _onmousedown() {
    this.active = true;
    activeRadio = this;
  }
  _onmouseup() {
    this.active = false;
  }
  _onfocusout() {
    this.active = false;
  }
  toggle() {
    if (!this.canToggle()) {
      return this;
    }
    if (!this.name) {
      this.checked = !this.checked;
      this.fireDecoratorEvent("change");
      return this;
    }
    RadioButtonGroup_default.selectItem(this, this.name);
    return this;
  }
  canToggle() {
    return !(this.disabled || this.readonly || this.checked);
  }
  get effectiveAriaDisabled() {
    return this.disabled || this.readonly ? true : void 0;
  }
  get ariaLabelText() {
    return [getEffectiveAriaLabelText(this), this.text].filter(Boolean).join(" ");
  }
  get effectiveAriaDescribedBy() {
    return this.hasValueState ? `${this._id}-descr` : void 0;
  }
  get hasValueState() {
    return this.valueState !== ValueState_default.None;
  }
  get valueStateText() {
    switch (this.valueState) {
      case ValueState_default.Negative:
        return RadioButton_1.i18nBundle.getText(VALUE_STATE_ERROR);
      case ValueState_default.Critical:
        return RadioButton_1.i18nBundle.getText(VALUE_STATE_WARNING);
      case ValueState_default.Positive:
        return RadioButton_1.i18nBundle.getText(VALUE_STATE_SUCCESS);
      case ValueState_default.Information:
        return RadioButton_1.i18nBundle.getText(VALUE_STATE_INFORMATION);
      default:
        return "";
    }
  }
  get effectiveTabIndex() {
    const tabindex = this.getAttribute("tabindex");
    if (this.disabled) {
      return -1;
    }
    if (this.name) {
      return this._tabIndex;
    }
    return tabindex ? parseInt(tabindex) : 0;
  }
};
__decorate2([
  property_default({ type: Boolean })
], RadioButton.prototype, "disabled", void 0);
__decorate2([
  property_default({ type: Boolean })
], RadioButton.prototype, "readonly", void 0);
__decorate2([
  property_default({ type: Boolean })
], RadioButton.prototype, "required", void 0);
__decorate2([
  property_default({ type: Boolean })
], RadioButton.prototype, "checked", void 0);
__decorate2([
  property_default()
], RadioButton.prototype, "text", void 0);
__decorate2([
  property_default()
], RadioButton.prototype, "valueState", void 0);
__decorate2([
  property_default()
], RadioButton.prototype, "name", void 0);
__decorate2([
  property_default()
], RadioButton.prototype, "value", void 0);
__decorate2([
  property_default()
], RadioButton.prototype, "wrappingType", void 0);
__decorate2([
  property_default()
], RadioButton.prototype, "accessibleName", void 0);
__decorate2([
  property_default()
], RadioButton.prototype, "accessibleNameRef", void 0);
__decorate2([
  property_default({ type: Number })
], RadioButton.prototype, "_tabIndex", void 0);
__decorate2([
  property_default({ type: Boolean })
], RadioButton.prototype, "active", void 0);
__decorate2([
  property_default({ type: Boolean, noAttribute: true })
], RadioButton.prototype, "_groupChecked", void 0);
__decorate2([
  property_default({ type: Boolean, noAttribute: true })
], RadioButton.prototype, "_groupRequired", void 0);
__decorate2([
  i18n_default("@ui5/webcomponents")
], RadioButton, "i18nBundle", void 0);
RadioButton = RadioButton_1 = __decorate2([
  customElement_default({
    tag: "ui5-radio-button",
    languageAware: true,
    formAssociated: true,
    renderer: JsxRenderer_default,
    template: RadioButtonTemplate,
    styles: RadioButton_css_default
  }),
  event_strict_default("change", {
    bubbles: true
  })
], RadioButton);
RadioButton.define();
var RadioButton_default = RadioButton;

// node_modules/@ui5/webcomponents/dist/generated/themes/CheckBox.css.js
registerThemePropertiesLoader("@ui5/webcomponents-theming", "sap_horizon", async () => parameters_bundle_css_default);
registerThemePropertiesLoader("@ui5/webcomponents", "sap_horizon", async () => parameters_bundle_css_default2);
var CheckBox_css_default = `.ui5-hidden-text{position:absolute;clip:rect(1px,1px,1px,1px);user-select:none;left:-1000px;top:-1000px;pointer-events:none;font-size:0}:host{-webkit-tap-highlight-color:rgba(0,0,0,0)}:host(:not([hidden])){display:inline-block}:host{overflow:hidden;max-width:100%;outline:none;border-radius:var(--_ui5-v2-8-0_checkbox_border_radius);transition:var(--_ui5-v2-8-0_checkbox_transition);cursor:pointer;user-select:none;-moz-user-select:none;-webkit-user-select:none;-ms-user-select:none}:host([disabled]){cursor:default}:host([disabled]) .ui5-checkbox-root{opacity:var(--_ui5-v2-8-0_checkbox_disabled_opacity)}:host([disabled]) .ui5-checkbox-inner{border-color:var(--_ui5-v2-8-0_checkbox_inner_disabled_border_color)}:host([disabled]) .ui5-checkbox-label{color:var(--_ui5-v2-8-0_checkbox_disabled_label_color)}:host([readonly]:not([value-state="Critical"]):not([value-state="Negative"])) .ui5-checkbox-inner{background:var(--sapField_ReadOnly_Background);border:var(--_ui5-v2-8-0_checkbox_inner_readonly_border);color:var(--sapField_TextColor)}:host(:not([wrapping-type="None"])[text]) .ui5-checkbox-root{min-height:auto;box-sizing:border-box;align-items:flex-start;padding-top:var(--_ui5-v2-8-0_checkbox_root_side_padding);padding-bottom:var(--_ui5-v2-8-0_checkbox_root_side_padding)}:host(:not([wrapping-type="None"])[text]) .ui5-checkbox-root .ui5-checkbox-label{overflow-wrap:break-word;align-self:center}:host([desktop][text]:not([wrapping-type="None"])) .ui5-checkbox-root:focus:before,.ui5-checkbox-root[text]:focus-visible:before{inset-block:var(--_ui5-v2-8-0_checkbox_wrapped_focus_inset_block)}:host([value-state="Negative"]) .ui5-checkbox-inner,:host([value-state="Negative"]) .ui5-checkbox--hoverable:hover .ui5-checkbox-inner{background:var(--sapField_InvalidBackground);border:var(--_ui5-v2-8-0_checkbox_inner_error_border);color:var(--sapField_InvalidColor)}:host([value-state="Negative"]) .ui5-checkbox--hoverable:hover .ui5-checkbox-inner{background:var(--_ui5-v2-8-0_checkbox_inner_error_background_hover)}:host([value-state="Critical"]) .ui5-checkbox-inner,:host([value-state="Critical"]) .ui5-checkbox--hoverable:hover .ui5-checkbox-inner{background:var(--sapField_WarningBackground);border:var(--_ui5-v2-8-0_checkbox_inner_warning_border);color:var(--_ui5-v2-8-0_checkbox_inner_warning_color)}:host([value-state="Critical"]) .ui5-checkbox--hoverable:hover .ui5-checkbox-inner{background:var(--_ui5-v2-8-0_checkbox_inner_warning_background_hover)}:host([value-state="Information"]) .ui5-checkbox-inner,:host([value-state="Information"]) .ui5-checkbox--hoverable:hover .ui5-checkbox-inner{background:var(--sapField_InformationBackground);border:var(--_ui5-v2-8-0_checkbox_inner_information_border);color:var(--_ui5-v2-8-0_checkbox_inner_information_color)}:host([value-state="Information"]) .ui5-checkbox--hoverable:hover .ui5-checkbox-inner{background:var(--_ui5-v2-8-0_checkbox_inner_information_background_hover)}:host([value-state="Positive"]) .ui5-checkbox-inner,:host([value-state="Positive"]) .ui5-checkbox--hoverable:hover .ui5-checkbox-inner{background:var(--sapField_SuccessBackground);border:var(--_ui5-v2-8-0_checkbox_inner_success_border);color:var(--sapField_SuccessColor)}:host([value-state="Positive"]) .ui5-checkbox--hoverable:hover .ui5-checkbox-inner{background:var(--_ui5-v2-8-0_checkbox_inner_success_background_hover)}:host([value-state="Critical"]) .ui5-checkbox-icon,:host([value-state="Critical"][indeterminate]) .ui5-checkbox-inner:after{color:var(--_ui5-v2-8-0_checkbox_checkmark_warning_color)}.ui5-checkbox-root{position:relative;display:inline-flex;align-items:center;max-width:100%;min-height:var(--_ui5-v2-8-0_checkbox_width_height);min-width:var(--_ui5-v2-8-0_checkbox_width_height);padding:0 var(--_ui5-v2-8-0_checkbox_wrapper_padding);outline:none;transition:var(--_ui5-v2-8-0_checkbox_transition);border:var(--_ui5-v2-8-0_checkbox_default_focus_border);border-radius:var(--_ui5-v2-8-0_checkbox_border_radius);box-sizing:border-box}:host([desktop]) .ui5-checkbox-root:focus:before,.ui5-checkbox-root:focus-visible:before{display:var(--_ui5-v2-8-0_checkbox_focus_outline_display);content:"";position:absolute;inset-inline:var(--_ui5-v2-8-0_checkbox_focus_position);inset-block:var(--_ui5-v2-8-0_checkbox_focus_position);border:var(--_ui5-v2-8-0_checkbox_focus_outline);border-radius:var(--_ui5-v2-8-0_checkbox_focus_border_radius)}:host([text]) .ui5-checkbox-root{padding-inline-end:var(--_ui5-v2-8-0_checkbox_right_focus_distance)}:host([text]) .ui5-checkbox-root:focus:before,:host([text]) .ui5-checkbox-root:focus-visible:before{inset-inline-end:0}:host(:hover:not([disabled])){background:var(--_ui5-v2-8-0_checkbox_outer_hover_background)}.ui5-checkbox--hoverable .ui5-checkbox-label:hover{color:var(--_ui5-v2-8-0_checkbox_label_color)}:host(:not([active]):not([checked]):not([value-state])) .ui5-checkbox--hoverable:hover .ui5-checkbox-inner,:host(:not([active]):not([checked])[value-state="None"]) .ui5-checkbox--hoverable:hover .ui5-checkbox-inner{background:var(--_ui5-v2-8-0_checkbox_hover_background);border-color:var(--_ui5-v2-8-0_checkbox_inner_hover_border_color)}:host(:not([active])[checked]:not([value-state])) .ui5-checkbox--hoverable:hover .ui5-checkbox-inner,:host(:not([active])[checked][value-state="None"]) .ui5-checkbox--hoverable:hover .ui5-checkbox-inner{background:var(--_ui5-v2-8-0_checkbox_hover_background);border-color:var(--_ui5-v2-8-0_checkbox_inner_hover_checked_border_color)}:host([checked]:not([value-state])) .ui5-checkbox-inner,:host([checked][value-state="None"]) .ui5-checkbox-inner{border-color:var(--_ui5-v2-8-0_checkbox_inner_selected_border_color)}:host([active]:not([checked]):not([value-state]):not([disabled])) .ui5-checkbox-inner,:host([active]:not([checked])[value-state="None"]:not([disabled])) .ui5-checkbox-inner{border-color:var(--_ui5-v2-8-0_checkbox_inner_active_border_color);background-color:var(--_ui5-v2-8-0_checkbox_active_background)}:host([active][checked]:not([value-state]):not([disabled])) .ui5-checkbox-inner,:host([active][checked][value-state="None"]:not([disabled])) .ui5-checkbox-inner{border-color:var(--_ui5-v2-8-0_checkbox_inner_selected_border_color);background-color:var(--_ui5-v2-8-0_checkbox_active_background)}.ui5-checkbox-inner{min-width:var(--_ui5-v2-8-0_checkbox_inner_width_height);max-width:var(--_ui5-v2-8-0_checkbox_inner_width_height);height:var(--_ui5-v2-8-0_checkbox_inner_width_height);max-height:var(--_ui5-v2-8-0_checkbox_inner_width_height);border:var(--_ui5-v2-8-0_checkbox_inner_border);border-radius:var(--_ui5-v2-8-0_checkbox_inner_border_radius);background:var(--_ui5-v2-8-0_checkbox_inner_background);color:var(--_ui5-v2-8-0_checkbox_checkmark_color);box-sizing:border-box;position:relative;cursor:inherit}:host([indeterminate][checked]) .ui5-checkbox-inner:after{content:"";background-color:currentColor;position:absolute;left:50%;top:50%;transform:translate(-50%,-50%);width:var(--_ui5-v2-8-0_checkbox_partially_icon_size);height:var(--_ui5-v2-8-0_checkbox_partially_icon_size)}:host input{-webkit-appearance:none;visibility:hidden;width:0;left:0;position:absolute;font-size:inherit}.ui5-checkbox-root .ui5-checkbox-label{margin-inline-start:var(--_ui5-v2-8-0_checkbox_label_offset);cursor:inherit;text-overflow:ellipsis;overflow:hidden;pointer-events:none;color:var(--_ui5-v2-8-0_checkbox_label_color)}.ui5-checkbox-icon{width:var(--_ui5-v2-8-0_checkbox_icon_size);height:var(--_ui5-v2-8-0_checkbox_icon_size);color:currentColor;cursor:inherit;position:absolute;left:50%;top:50%;transform:translate(-50%,-50%)}:host([display-only]){cursor:default}:host([display-only]) .ui5-checkbox-display-only-icon-inner [ui5-icon]{color:var(--sapTextColor)}:host([display-only]) .ui5-checkbox-display-only-icon-inner{min-width:var(--_ui5-v2-8-0_checkbox_inner_width_height);max-width:var(--_ui5-v2-8-0_checkbox_inner_width_height);height:var(--_ui5-v2-8-0_checkbox_inner_width_height);max-height:var(--_ui5-v2-8-0_checkbox_inner_width_height);display:flex;align-items:center;justify-content:center}
`;

// node_modules/@ui5/webcomponents-icons/dist/v4/accept.js
var name7 = "accept";
var pathData7 = "M455.8 94q9 9 3 19l-222 326q-4 8-12 9t-14-5l-151-167q-5-5-4.5-11t5.5-11l25-25q12-12 23 0l96 96q5 5 13 4.5t12-8.5l175-249q4-7 11.5-8t13.5 4z";
var ltr7 = true;
var collection7 = "SAP-icons-v4";
var packageName7 = "@ui5/webcomponents-icons";
registerIcon(name7, { pathData: pathData7, ltr: ltr7, collection: collection7, packageName: packageName7 });

// node_modules/@ui5/webcomponents-icons/dist/v5/accept.js
var name8 = "accept";
var pathData8 = "M187 416q-12 0-20-9L71 299q-7-7-7-17 0-11 7.5-18.5T90 256q12 0 19 9l77 87 217-247q8-9 19-9t18.5 7.5T448 122q0 10-6 16L206 407q-7 9-19 9z";
var ltr8 = true;
var collection8 = "SAP-icons-v5";
var packageName8 = "@ui5/webcomponents-icons";
registerIcon(name8, { pathData: pathData8, ltr: ltr8, collection: collection8, packageName: packageName8 });

// node_modules/@ui5/webcomponents-icons/dist/accept.js
var accept_default = "accept";

// node_modules/@ui5/webcomponents-icons/dist/v4/complete.js
var name9 = "complete";
var pathData9 = "M431.958 320h32v128q0 14-9.5 23t-22.5 9h-384q-14 0-23-9t-9-23V64q0-13 9-22.5t23-9.5h128v32h-128v384h384V320zm60-295q7 7 2 16l-185 272q-3 6-10 7t-12-4l-125-139q-9-9 0-18l21-21q10-10 19 0l80 80q5 5 11.5 4t9.5-8l146-207q3-6 9.5-7t11.5 4z";
var ltr9 = true;
var collection9 = "SAP-icons-v4";
var packageName9 = "@ui5/webcomponents-icons";
registerIcon(name9, { pathData: pathData9, ltr: ltr9, collection: collection9, packageName: packageName9 });

// node_modules/@ui5/webcomponents-icons/dist/v5/complete.js
var name10 = "complete";
var pathData10 = "M438 224q11 0 18.5 7.5T464 250v140q0 38-26 64t-64 26H106q-38 0-64-26t-26-64V122q0-38 26-64t64-26h237q11 0 18 7.5t7 18.5-7 18-18 7H106q-16 0-27.5 11.5T67 122v268q0 16 11.5 27.5T106 429h268q16 0 27.5-11.5T413 390V250q0-11 7-18.5t18-7.5zm32-192q11 0 18.5 7.5T496 58q0 10-7 17L257 312q-6 8-18 8-10 0-18-8l-70-71q-7-7-7-18t7.5-18 18.5-7 18 7l51 53L452 40q8-8 18-8z";
var ltr10 = true;
var collection10 = "SAP-icons-v5";
var packageName10 = "@ui5/webcomponents-icons";
registerIcon(name10, { pathData: pathData10, ltr: ltr10, collection: collection10, packageName: packageName10 });

// node_modules/@ui5/webcomponents-icons/dist/complete.js
var complete_default = "complete";

// node_modules/@ui5/webcomponents-icons/dist/v4/border.js
var name11 = "border";
var pathData11 = "M448 32q13 0 22.5 9t9.5 23v384q0 14-9.5 23t-22.5 9H64q-14 0-23-9t-9-23V64q0-14 9-23t23-9h384zm0 32H64v384h384V64z";
var ltr11 = false;
var collection11 = "SAP-icons-v4";
var packageName11 = "@ui5/webcomponents-icons";
registerIcon(name11, { pathData: pathData11, ltr: ltr11, collection: collection11, packageName: packageName11 });

// node_modules/@ui5/webcomponents-icons/dist/v5/border.js
var name12 = "border";
var pathData12 = "M390 480H122q-38 0-64-26t-26-64V122q0-38 26-64t64-26h268q38 0 64 26t26 64v268q0 38-26 64t-64 26zM122 83q-17 0-28 11t-11 28v268q0 17 11 28t28 11h268q17 0 28-11t11-28V122q0-17-11-28t-28-11H122z";
var ltr12 = false;
var collection12 = "SAP-icons-v5";
var packageName12 = "@ui5/webcomponents-icons";
registerIcon(name12, { pathData: pathData12, ltr: ltr12, collection: collection12, packageName: packageName12 });

// node_modules/@ui5/webcomponents-icons/dist/border.js
var border_default = "border";

// node_modules/@ui5/webcomponents-icons/dist/v4/tri-state.js
var name13 = "tri-state";
var pathData13 = "M448 32q13 0 22.5 9.5T480 64v384q0 14-9.5 23t-22.5 9H64q-14 0-23-9t-9-23V64q0-13 9-22.5T64 32h384zm0 32H64v384h384V64zM160 345V169q0-8 8-8h176q8 0 8 8v176q0 8-8 8H168q-8 0-8-8z";
var ltr13 = false;
var collection13 = "SAP-icons-v4";
var packageName13 = "@ui5/webcomponents-icons";
registerIcon(name13, { pathData: pathData13, ltr: ltr13, collection: collection13, packageName: packageName13 });

// node_modules/@ui5/webcomponents-icons/dist/v5/tri-state.js
var name14 = "tri-state";
var pathData14 = "M390 32q38 0 64 26t26 64v268q0 38-26 64t-64 26H122q-38 0-64-26t-26-64V122q0-38 26-64t64-26h268zm39 90q0-17-11-28t-28-11H122q-17 0-28 11t-11 28v268q0 17 11 28t28 11h268q17 0 28-11t11-28V122zm-77 38v192H160V160h192z";
var ltr14 = false;
var collection14 = "SAP-icons-v5";
var packageName14 = "@ui5/webcomponents-icons";
registerIcon(name14, { pathData: pathData14, ltr: ltr14, collection: collection14, packageName: packageName14 });

// node_modules/@ui5/webcomponents-icons/dist/tri-state.js
var tri_state_default = "tri-state";

// node_modules/@ui5/webcomponents/dist/CheckBoxTemplate.js
function CheckBoxTemplate() {
  return jsxs("div", { class: {
    "ui5-checkbox-root": true,
    "ui5-checkbox--hoverable": !this.disabled && !this.readonly && isDesktop()
  }, role: "checkbox", part: "root", "aria-checked": this.effectiveAriaChecked, "aria-readonly": this.ariaReadonly, "aria-disabled": this.effectiveAriaDisabled, "aria-label": this.ariaLabelText, "aria-labelledby": this.ariaLabelledBy, "aria-describedby": this.ariaDescribedBy, "aria-required": this.required, tabindex: this.effectiveTabIndex, onMouseDown: this._onmousedown, onMouseUp: this._onmouseup, onKeyDown: this._onkeydown, onKeyUp: this._onkeyup, onClick: this._onclick, onFocusOut: this._onfocusout, children: [this.isDisplayOnly ? jsx("div", { class: "ui5-checkbox-display-only-icon-inner", children: jsx(Icon_default, { "aria-hidden": "true", name: displayOnlyIcon.call(this), class: "ui5-checkbox-display-only-icon", part: "icon" }) }) : jsx("div", { id: `${this._id}-CbBg`, class: "ui5-checkbox-inner", children: this.isCompletelyChecked && jsx(Icon_default, { "aria-hidden": "true", name: accept_default, class: "ui5-checkbox-icon", part: "icon" }) }), jsx("input", { id: `${this._id}-CB`, type: "checkbox", checked: this.checked, readonly: this.readonly, disabled: this.disabled, tabindex: -1, "aria-hidden": "true", "data-sap-no-tab-ref": true }), this.text && jsx(Label_default, { id: `${this._id}-label`, part: "label", class: "ui5-checkbox-label", wrappingType: this.wrappingType, children: this.text }), this.hasValueState && jsx("span", { id: `${this._id}-descr`, class: "ui5-hidden-text", children: this.valueStateText })] });
}
function displayOnlyIcon() {
  if (this.isCompletelyChecked) {
    return complete_default;
  }
  if (this.checked && this.indeterminate) {
    return tri_state_default;
  }
  return border_default;
}

// node_modules/@ui5/webcomponents/dist/CheckBox.js
var __decorate3 = function(decorators, target, key, desc) {
  var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
  if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
  else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
  return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var CheckBox_1;
var isGlobalHandlerAttached2 = false;
var activeCb;
var CheckBox = CheckBox_1 = class CheckBox2 extends UI5Element_default {
  get formValidityMessage() {
    return CheckBox_1.i18nBundle.getText(FORM_CHECKABLE_REQUIRED);
  }
  get formValidity() {
    return { valueMissing: this.required && !this.checked };
  }
  async formElementAnchor() {
    return this.getFocusDomRefAsync();
  }
  get formFormattedValue() {
    return this.checked ? "on" : null;
  }
  constructor() {
    super();
    this.disabled = false;
    this.readonly = false;
    this.displayOnly = false;
    this.required = false;
    this.indeterminate = false;
    this.checked = false;
    this.valueState = "None";
    this.wrappingType = "Normal";
    this.active = false;
    this._deactivate = () => {
      if (activeCb) {
        activeCb.active = false;
      }
    };
    if (!isGlobalHandlerAttached2) {
      document.addEventListener("mouseup", this._deactivate);
      isGlobalHandlerAttached2 = true;
    }
  }
  onEnterDOM() {
    if (isDesktop()) {
      this.setAttribute("desktop", "");
    }
  }
  _onclick() {
    this.toggle();
  }
  _onmousedown() {
    if (this.readonly || this.disabled) {
      return;
    }
    this.active = true;
    activeCb = this;
  }
  _onmouseup() {
    this.active = false;
  }
  _onfocusout() {
    this.active = false;
  }
  _onkeydown(e) {
    if (isSpace(e)) {
      e.preventDefault();
    }
    if (this.readonly || this.disabled) {
      return;
    }
    if (isEnter(e)) {
      this.toggle();
    }
    this.active = true;
  }
  _onkeyup(e) {
    if (isSpace(e)) {
      this.toggle();
    }
    this.active = false;
  }
  toggle() {
    if (this.canToggle()) {
      const lastState = {
        checked: this.checked,
        indeterminate: this.indeterminate
      };
      if (this.indeterminate) {
        this.indeterminate = false;
        this.checked = true;
      } else {
        this.checked = !this.checked;
      }
      const changePrevented = !this.fireDecoratorEvent("change");
      const valueChangePrevented = !this.fireDecoratorEvent("value-changed");
      if (changePrevented || valueChangePrevented) {
        this.checked = lastState.checked;
        this.indeterminate = lastState.indeterminate;
      }
    }
    return this;
  }
  canToggle() {
    return !(this.disabled || this.readonly || this.displayOnly);
  }
  valueStateTextMappings() {
    return {
      "Negative": CheckBox_1.i18nBundle.getText(VALUE_STATE_ERROR),
      "Critical": CheckBox_1.i18nBundle.getText(VALUE_STATE_WARNING),
      "Positive": CheckBox_1.i18nBundle.getText(VALUE_STATE_SUCCESS)
    };
  }
  get ariaLabelText() {
    return getEffectiveAriaLabelText(this);
  }
  get classes() {
    return {
      main: {
        "ui5-checkbox--hoverable": !this.disabled && !this.readonly && isDesktop()
      }
    };
  }
  get ariaReadonly() {
    return this.readonly || this.displayOnly ? "true" : void 0;
  }
  get effectiveAriaDisabled() {
    return this.disabled ? "true" : void 0;
  }
  get effectiveAriaChecked() {
    return this.indeterminate && this.checked ? "mixed" : this.checked;
  }
  get ariaLabelledBy() {
    if (!this.ariaLabelText) {
      return this.text ? `${this._id}-label` : void 0;
    }
    return void 0;
  }
  get ariaDescribedBy() {
    return this.hasValueState ? `${this._id}-descr` : void 0;
  }
  get hasValueState() {
    return this.valueState !== ValueState_default.None;
  }
  get valueStateText() {
    if (this.valueState !== ValueState_default.None && this.valueState !== ValueState_default.Information) {
      return this.valueStateTextMappings()[this.valueState];
    }
  }
  get effectiveTabIndex() {
    const tabindex = this.getAttribute("tabindex");
    if (this.tabbable) {
      return tabindex ? parseInt(tabindex) : 0;
    }
  }
  get tabbable() {
    return !this.disabled && !this.displayOnly;
  }
  get isCompletelyChecked() {
    return this.checked && !this.indeterminate;
  }
  get isDisplayOnly() {
    return this.displayOnly && !this.disabled;
  }
};
__decorate3([
  property_default()
], CheckBox.prototype, "accessibleNameRef", void 0);
__decorate3([
  property_default()
], CheckBox.prototype, "accessibleName", void 0);
__decorate3([
  property_default({ type: Boolean })
], CheckBox.prototype, "disabled", void 0);
__decorate3([
  property_default({ type: Boolean })
], CheckBox.prototype, "readonly", void 0);
__decorate3([
  property_default({ type: Boolean })
], CheckBox.prototype, "displayOnly", void 0);
__decorate3([
  property_default({ type: Boolean })
], CheckBox.prototype, "required", void 0);
__decorate3([
  property_default({ type: Boolean })
], CheckBox.prototype, "indeterminate", void 0);
__decorate3([
  property_default({ type: Boolean })
], CheckBox.prototype, "checked", void 0);
__decorate3([
  property_default()
], CheckBox.prototype, "text", void 0);
__decorate3([
  property_default()
], CheckBox.prototype, "valueState", void 0);
__decorate3([
  property_default()
], CheckBox.prototype, "wrappingType", void 0);
__decorate3([
  property_default()
], CheckBox.prototype, "name", void 0);
__decorate3([
  property_default({ type: Boolean })
], CheckBox.prototype, "active", void 0);
__decorate3([
  i18n_default("@ui5/webcomponents")
], CheckBox, "i18nBundle", void 0);
CheckBox = CheckBox_1 = __decorate3([
  customElement_default({
    tag: "ui5-checkbox",
    languageAware: true,
    formAssociated: true,
    renderer: JsxRenderer_default,
    template: CheckBoxTemplate,
    styles: CheckBox_css_default
  }),
  event_strict_default("change", {
    bubbles: true,
    cancelable: true
  }),
  event_strict_default("value-changed", {
    bubbles: true,
    cancelable: true
  })
], CheckBox);
CheckBox.define();
var CheckBox_default = CheckBox;

// node_modules/@ui5/webcomponents/dist/ListItemTemplate.js
var predefinedHooks = {
  listItemPreContent,
  listItemContent,
  imageBegin,
  iconBegin,
  iconEnd,
  selectionElement
};
function ListItemTemplate(hooks) {
  const currentHooks = { ...predefinedHooks, ...hooks };
  return jsxs("li", { part: "native-li", "data-sap-focus-ref": true, tabindex: this._effectiveTabIndex, class: this.classes.main, onFocusIn: this._onfocusin, onFocusOut: this._onfocusout, onKeyUp: this._onkeyup, onKeyDown: this._onkeydown, onMouseUp: this._onmouseup, onMouseDown: this._onmousedown, onTouchStart: this._onmousedown, onTouchEnd: this._ontouchend, onClick: this._onclick, draggable: this.movable, onDragStart: this._ondragstart, onDragEnd: this._ondragend, role: this._accInfo.role, title: this._accInfo.tooltip, "aria-expanded": this._accInfo.ariaExpanded, "aria-level": this._accInfo.ariaLevel, "aria-haspopup": this._accInfo.ariaHaspopup, "aria-posinset": this._accInfo.posinset, "aria-setsize": this._accInfo.setsize, "aria-describedby": `${this._id}-invisibleText-describedby`, "aria-labelledby": this._accessibleNameRef, "aria-disabled": this._ariaDisabled, "aria-selected": this._accInfo.ariaSelected, "aria-checked": this._accInfo.ariaChecked, "aria-owns": this._accInfo.ariaOwns, "aria-keyshortcuts": this._accInfo.ariaKeyShortcuts, children: [currentHooks.listItemPreContent.call(this), this.placeSelectionElementBefore && selectionElement.call(this), this._hasHighlightColor && jsx("div", { class: "ui5-li-highlight" }), jsxs("div", { part: "content", id: `${this._id}-content`, class: "ui5-li-content", children: [currentHooks.imageBegin.call(this), currentHooks.iconBegin.call(this), currentHooks.listItemContent.call(this)] }), currentHooks.iconEnd.call(this), this.typeDetail && jsx("div", { class: "ui5-li-detailbtn", children: jsx(Button_default, { part: "detail-button", design: "Transparent", onClick: this.onDetailClick, icon: edit_default }) }), this.typeNavigation && jsx(Icon_default, { name: slim_arrow_right_default }), this.navigated && jsx("div", { class: "ui5-li-navigated" }), this.placeSelectionElementAfter && currentHooks.selectionElement.call(this), jsxs("span", { id: `${this._id}-invisibleText`, class: "ui5-hidden-text", children: [this._accInfo.listItemAriaLabel, this.accessibleName] }), jsx("span", { id: `${this._id}-invisibleText-describedby`, class: "ui5-hidden-text", children: this._accInfo.ariaSelectedText })] });
}
function listItemPreContent() {
}
function listItemContent() {
}
function imageBegin() {
}
function iconBegin() {
}
function iconEnd() {
}
function selectionElement() {
  switch (true) {
    case this.modeSingleSelect:
      return jsx(RadioButton_default, { part: "radio", disabled: this.isInactive, accessibleName: this._accInfo.ariaLabelRadioButton, tabindex: -1, id: `${this._id}-singleSelectionElement`, class: "ui5-li-singlesel-radiobtn", checked: this.selected, onChange: this.onSingleSelectionComponentPress });
    case this.modeMultiple:
      return jsx(CheckBox_default, { part: "checkbox", disabled: this.isInactive, indeterminate: this.indeterminate, tabindex: -1, id: `${this._id}-multiSelectionElement`, class: "ui5-li-multisel-cb", checked: this.selected, accessibleName: this._accInfo.ariaLabel, onChange: this.onMultiSelectionComponentPress });
    case this.modeDelete:
      return jsx("div", { class: "ui5-li-deletebtn", children: this.hasDeleteButtonSlot ? jsx("slot", { name: "deleteButton" }) : jsx(Button_default, { part: "delete-button", tabindex: -1, "data-sap-no-tab-ref": true, id: `${this._id}-deleteSelectionElement`, design: "Transparent", icon: decline_default, onClick: this.onDelete, tooltip: this.deleteText }) });
  }
}

// node_modules/@ui5/webcomponents/dist/MenuItemTemplate.js
var predefinedHooks2 = {
  listItemContent: listItemContent2,
  iconBegin: iconBegin2
};
function MenuItemTemplate(hooks) {
  const currentHooks = { ...predefinedHooks2, ...hooks };
  return jsxs(Fragment, { children: [ListItemTemplate.call(this, currentHooks), listItemPostContent.call(this)] });
}
function listItemContent2() {
  return jsxs(Fragment, { children: [this.text && jsx("div", { class: "ui5-menu-item-text", children: this.text }), rightContent.call(this)] });
}
function rightContent() {
  switch (true) {
    case this.hasSubmenu:
      return jsx("div", { class: "ui5-menu-item-submenu-icon", children: jsx(Icon_default, { part: "subicon", name: slim_arrow_right_default, class: "ui5-menu-item-icon-end" }) });
    case this.hasEndContent:
      return jsx("slot", { name: "endContent" });
    case !!this.additionalText:
      return jsx("span", { part: "additional-text", class: "ui5-li-additional-text", "aria-hidden": this._accInfo.ariaHidden, children: this.additionalText });
  }
}
function iconBegin2() {
  if (this.hasIcon) {
    return jsx(Icon_default, { class: "ui5-li-icon", name: this.icon });
  }
  if (this._siblingsWithIcon) {
    return jsx("div", { class: "ui5-menu-item-dummy-icon" });
  }
}
function listItemPostContent() {
  return this.hasSubmenu && jsxs(ResponsivePopover_default, { id: `${this._id}-menu-rp`, class: "ui5-menu-rp .ui5-menu-rp-sub-menu", preventInitialFocus: true, preventFocusRestore: true, hideArrow: true, allowTargetOverlap: true, placement: this.placement, verticalAlign: "Top", accessibleName: this.acessibleNameText, onBeforeOpen: this._beforePopoverOpen, onOpen: this._afterPopoverOpen, onBeforeClose: this._beforePopoverClose, onClose: this._afterPopoverClose, children: [this.isPhone && jsx(Fragment, { children: jsxs("div", { slot: "header", class: "ui5-menu-dialog-header", children: [jsx(Button_default, { icon: nav_back_default, class: "ui5-menu-back-button", design: "Transparent", "aria-label": this.labelBack, onClick: this._close }), jsx("div", { class: "ui5-menu-dialog-title", children: jsx("div", { children: this.text }) }), jsx(Button_default, { icon: decline_default, design: "Transparent", "aria-label": this.labelClose, onClick: this._closeAll })] }) }), jsx("div", { id: `${this._id}-menu-main`, children: this.items.length ? jsx(List_default, { id: `${this._id}-menu-list`, selectionMode: "None", separators: "None", accessibleRole: "Menu", loading: this.loading, loadingDelay: this.loadingDelay, "onui5-close-menu": this._close, children: jsx("slot", {}) }) : this.loading && jsx(BusyIndicator_default, { id: `${this._id}-menu-busy-indicator`, delay: this.loadingDelay, class: "ui5-menu-busy-indicator", active: true }) })] });
}

// node_modules/@ui5/webcomponents/dist/generated/themes/MenuItem.css.js
registerThemePropertiesLoader("@ui5/webcomponents-theming", "sap_horizon", async () => parameters_bundle_css_default);
registerThemePropertiesLoader("@ui5/webcomponents", "sap_horizon", async () => parameters_bundle_css_default2);
var MenuItem_css_default = `:host{line-height:initial}::slotted([ui5-menu-item]){line-height:inherit}.ui5-menu-rp[ui5-responsive-popover]::part(header),.ui5-menu-rp[ui5-responsive-popover]::part(content),.ui5-menu-rp[ui5-responsive-popover]::part(footer){padding:0}.ui5-menu-rp[ui5-responsive-popover]{box-shadow:var(--sapContent_Shadow1);border-radius:var(--_ui5-v2-8-0_menu_popover_border_radius)}.ui5-menu-busy-indicator{width:100%}.ui5-menu-dialog-header{display:flex;height:var(--_ui5-v2-8-0-responsive_popover_header_height);align-items:center;justify-content:space-between;padding:0px 1rem;width:100%;overflow:hidden}.ui5-menu-dialog-title{display:flex;flex-direction:row;align-items:center;justify-content:flex-start;width:calc(100% - 6.5rem);padding-right:1rem;font-family:var(--sapFontHeaderFamily)}.ui5-menu-dialog-title>h1{display:inline-block;max-width:100%;overflow:hidden;text-overflow:ellipsis;white-space:nowrap;font-size:var(--sapFontHeader5Size)}.ui5-menu-back-button{margin-right:1rem}.ui5-menu-rp.ui5-menu-rp-sub-menu{margin-top:.25rem;margin-inline:var(--_ui5-v2-8-0_menu_submenu_margin_offset)}.ui5-menu-rp.ui5-menu-rp-sub-menu[actual-placement=Start]{margin-top:.25rem;margin-inline:var(--_ui5-v2-8-0_menu_submenu_placement_type_left_margin_offset)}:host([disabled]){pointer-events:initial;opacity:initial}:host([disabled])::part(content){opacity:var(--_ui5-v2-8-0-listitembase_disabled_opacity)}:host([disabled][actionable]:not([active]):not([selected]):hover),:host([disabled][active][actionable]){background:var(--ui5-v2-8-0-listitem-background-color)}:host([active]:not([disabled])),:host([active]:not([disabled])):hover{background-color:var(--sapList_Active_Background)}:host(:not([active]):not([selected]):not([disabled]):hover){background-color:var(--sapList_Hover_Background)}:host([disabled][active][actionable]) .ui5-li-root .ui5-li-icon{color:var(--sapContent_NonInteractiveIconColor)}:host([active]:not([disabled]))::part(content),:host([active]:not([disabled]))::part(additional-text),:host([active]:not([disabled])) .ui5-li-root .ui5-li-icon{color:var(--sapList_Active_TextColor)}:host([focused]:not([active]):not([disabled])){background-color:var(--sapList_Hover_Background)}:host::part(additional-text){margin:unset;margin-inline-start:1rem;color:var(--sapContent_LabelColor);min-width:max-content}.ui5-menu-item-text{width:100%;overflow:hidden;text-overflow:ellipsis;white-space:nowrap;pointer-events:none;display:inline-block}.ui5-menu-item-dummy-icon{visibility:hidden}:host::part(title){font-size:var(--sapFontSize);padding-top:.125rem}:host([icon]:not([is-phone]))::part(title),:host([is-phone]:not([icon=""]))::part(title){padding-top:0}:host(:not([is-phone]))::part(native-li){padding:var(--_ui5-v2-8-0_menu_item_padding)}:host::part(content){padding-inline-end:.25rem}.ui5-menu-item-submenu-icon{min-width:var(--_ui5-v2-8-0_list_item_icon_size);min-height:var(--_ui5-v2-8-0_list_item_icon_size);display:inline-block;vertical-align:middle;pointer-events:none}.ui5-menu-item-icon-end{display:inline-block;vertical-align:middle;padding-inline-start:.5rem;pointer-events:none;position:absolute;inset-inline-end:var(--_ui5-v2-8-0_menu_item_submenu_icon_right)}.ui5-menu-item-submenu-icon .ui5-menu-item-icon-end{color:var(--sapContent_NonInteractiveIconColor)}.ui5-menu-item-dummy-icon{min-width:var(--_ui5-v2-8-0_list_item_icon_size);min-height:var(--_ui5-v2-8-0_list_item_icon_size);display:inline-block;vertical-align:middle;padding-inline-end:.5rem;pointer-events:none}
`;

// node_modules/@ui5/webcomponents/dist/MenuItem.js
var __decorate4 = function(decorators, target, key, desc) {
  var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
  if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
  else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
  return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var MenuItem_1;
var MenuItem = MenuItem_1 = class MenuItem2 extends ListItem_default {
  constructor() {
    super();
    this.disabled = false;
    this.loading = false;
    this.loadingDelay = 1e3;
    this.accessibilityAttributes = {};
    this._siblingsWithIcon = false;
    this._itemNavigation = new ItemNavigation_default(this, {
      navigationMode: NavigationMode_default.Horizontal,
      behavior: ItemNavigationBehavior_default.Static,
      getItemsCallback: () => this._navigableItems
    });
  }
  get _navigableItems() {
    return [...this.endContent].filter((item) => {
      return item.hasAttribute("ui5-button") || item.hasAttribute("ui5-link") || item.hasAttribute("ui5-icon") && item.getAttribute("mode") === "Interactive";
    });
  }
  _navigateToEndContent(isLast) {
    const item = isLast ? this._navigableItems[this._navigableItems.length - 1] : this._navigableItems[0];
    if (item) {
      this._itemNavigation.setCurrentItem(item);
      this._itemNavigation._focusCurrentItem();
    }
  }
  get placement() {
    return this.isRtl ? "Start" : "End";
  }
  get isRtl() {
    return this.effectiveDir === "rtl";
  }
  get hasSubmenu() {
    return !!(this.items.length || this.loading) && !this.disabled;
  }
  get hasEndContent() {
    return !!this.endContent.length;
  }
  get hasIcon() {
    return !!this.icon;
  }
  get isSubMenuOpen() {
    var _a;
    return (_a = this._popover) == null ? void 0 : _a.open;
  }
  get ariaLabelledByText() {
    return `${this.text} ${this.accessibleName}`.trim();
  }
  get menuHeaderTextPhone() {
    return this.text;
  }
  get isPhone() {
    return isPhone();
  }
  get labelBack() {
    return MenuItem_1.i18nBundle.getText(MENU_BACK_BUTTON_ARIA_LABEL);
  }
  get labelClose() {
    return MenuItem_1.i18nBundle.getText(MENU_CLOSE_BUTTON_ARIA_LABEL);
  }
  get acessibleNameText() {
    return MenuItem_1.i18nBundle.getText(MENU_POPOVER_ACCESSIBLE_NAME);
  }
  get isSeparator() {
    return false;
  }
  onBeforeRendering() {
    super.onBeforeRendering();
    const siblingsWithIcon = this._menuItems.some((menuItem) => !!menuItem.icon);
    this._menuItems.forEach((item) => {
      item._siblingsWithIcon = siblingsWithIcon;
    });
  }
  async focus(focusOptions) {
    await renderFinished();
    if (this.hasSubmenu && this.isSubMenuOpen) {
      return this._menuItems[0].focus(focusOptions);
    }
    return super.focus(focusOptions);
  }
  get _focusable() {
    return true;
  }
  get _accInfo() {
    const accInfoSettings = {
      role: this.accessibilityAttributes.role || "menuitem",
      ariaHaspopup: this.hasSubmenu ? "menu" : void 0,
      ariaKeyShortcuts: this.accessibilityAttributes.ariaKeyShortcuts,
      ariaHidden: !!this.additionalText && !!this.accessibilityAttributes.ariaKeyShortcuts ? true : void 0
    };
    return { ...super._accInfo, ...accInfoSettings };
  }
  get _popover() {
    return this.shadowRoot.querySelector("[ui5-responsive-popover]");
  }
  get _menuItems() {
    return this.items.filter((item) => !item.isSeparator);
  }
  _closeAll() {
    if (this._popover) {
      this._popover.open = false;
    }
    this.selected = false;
    this.fireDecoratorEvent("close-menu");
  }
  _close() {
    if (this._popover) {
      this._popover.open = false;
    }
    this.selected = false;
  }
  _beforePopoverOpen(e) {
    const prevented = !this.fireDecoratorEvent("before-open", {});
    if (prevented) {
      e.preventDefault();
    }
  }
  _afterPopoverOpen() {
    var _a;
    (_a = this.items[0]) == null ? void 0 : _a.focus();
    this.fireDecoratorEvent("open");
  }
  _beforePopoverClose(e) {
    const prevented = !this.fireDecoratorEvent("before-close", { escPressed: e.detail.escPressed });
    if (prevented) {
      e.preventDefault();
      return;
    }
    this.selected = false;
    if (e.detail.escPressed) {
      this.focus();
      if (isPhone()) {
        this.fireDecoratorEvent("close-menu");
      }
    }
  }
  _afterPopoverClose() {
    this.fireDecoratorEvent("close");
  }
};
__decorate4([
  property_default()
], MenuItem.prototype, "text", void 0);
__decorate4([
  property_default()
], MenuItem.prototype, "additionalText", void 0);
__decorate4([
  property_default()
], MenuItem.prototype, "icon", void 0);
__decorate4([
  property_default({ type: Boolean })
], MenuItem.prototype, "disabled", void 0);
__decorate4([
  property_default({ type: Boolean })
], MenuItem.prototype, "loading", void 0);
__decorate4([
  property_default({ type: Number })
], MenuItem.prototype, "loadingDelay", void 0);
__decorate4([
  property_default()
], MenuItem.prototype, "accessibleName", void 0);
__decorate4([
  property_default()
], MenuItem.prototype, "tooltip", void 0);
__decorate4([
  property_default({ type: Object })
], MenuItem.prototype, "accessibilityAttributes", void 0);
__decorate4([
  property_default({ type: Boolean, noAttribute: true })
], MenuItem.prototype, "_siblingsWithIcon", void 0);
__decorate4([
  slot_default({ "default": true, type: HTMLElement, invalidateOnChildChange: true })
], MenuItem.prototype, "items", void 0);
__decorate4([
  slot_default({ type: HTMLElement })
], MenuItem.prototype, "endContent", void 0);
__decorate4([
  i18n_default("@ui5/webcomponents")
], MenuItem, "i18nBundle", void 0);
MenuItem = MenuItem_1 = __decorate4([
  customElement_default({
    tag: "ui5-menu-item",
    renderer: JsxRenderer_default,
    template: MenuItemTemplate,
    styles: [ListItem_default.styles, MenuItem_css_default]
  }),
  event_strict_default("before-open", {
    cancelable: true
  }),
  event_strict_default("open"),
  event_strict_default("close-menu", {
    bubbles: true
  }),
  event_strict_default("before-close", {
    cancelable: true
  }),
  event_strict_default("close")
], MenuItem);
MenuItem.define();
var MenuItem_default = MenuItem;

export {
  accept_default,
  CheckBox_default,
  edit_default,
  ListItemType_default,
  ListItemAdditionalText_css_default,
  slim_arrow_right_default,
  ListItem_default,
  RadioButton_default,
  ListItemTemplate,
  nav_back_default,
  MenuItemTemplate,
  MenuItem_default
};
//# sourceMappingURL=chunk-PUXVSQ52.js.map
