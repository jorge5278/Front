{
  "version": 3,
  "sources": ["../../@ui5/webcomponents-base/src/asset-registries/LocaleData.ts"],
  "sourcesContent": ["import { attachLanguageChange } from \"../locale/languageChange.js\";\nimport getLocale from \"../locale/getLocale.js\";\nimport { DEFAULT_LOCALE, SUPPORTED_LOCALES } from \"../generated/AssetParameters.js\";\nimport { getFeature } from \"../FeaturesRegistry.js\";\nimport type OpenUI5Support from \"../features/OpenUI5Support.js\";\n\ntype LocaleDataLoader = (locale: string) => Promise<CLDRData>;\ntype CLDRData = Record<string, object | boolean | string>;\n\nconst localeDataMap = new Map<string, CLDRData>();\nconst loaders = new Map<string, LocaleDataLoader>();\nconst cldrPromises = new Map<string, Promise<CLDRData>>();\nconst reportedErrors = new Set<string>();\nlet warningShown = false;\n\nconst M_ISO639_OLD_TO_NEW = {\n\t\"iw\": \"he\",\n\t\"ji\": \"yi\",\n\t\"in\": \"id\",\n};\n\nconst _showAssetsWarningOnce = (localeId: string) => {\n\tif (warningShown) {\n\t\treturn;\n\t}\n\n\tconsole.warn(`[LocaleData] Supported locale \"${localeId}\" not configured, import the \"Assets.js\" module from the webcomponents package you are using.`); /* eslint-disable-line */\n\n\twarningShown = true;\n};\n\nconst calcLocale = (language: string, region: string, script: string) => {\n\t// normalize language and handle special cases\n\tlanguage = (language && M_ISO639_OLD_TO_NEW[language as keyof typeof M_ISO639_OLD_TO_NEW]) || language;\n\t// Special case 1: in an SAP context, the inclusive language code \"no\" always means Norwegian Bokmal (\"nb\")\n\tif (language === \"no\") {\n\t\tlanguage = \"nb\";\n\t}\n\t// Special case 2: for Chinese, derive a default region from the script (this behavior is inherited from Java)\n\tif (language === \"zh\" && !region) {\n\t\tif (script === \"Hans\") {\n\t\t\tregion = \"CN\";\n\t\t} else if (script === \"Hant\") {\n\t\t\tregion = \"TW\";\n\t\t}\n\t}\n\n\t// Special case 3: for Serbian, there are cyrillic and latin scripts, \"sh\" and \"sr-latn\" map to \"latin\", \"sr\" maps to cyrillic.\n\tif (language === \"sh\" || (language === \"sr\" && script === \"Latn\")) {\n\t\tlanguage = \"sr\";\n\t\tregion = \"Latn\";\n\t}\n\n\t// try language + region\n\tlet localeId = `${language}_${region}`;\n\tif (SUPPORTED_LOCALES.includes(localeId)) {\n\t\tif (loaders.has(localeId)) {\n\t\t\t// supported and has loader\n\t\t\treturn localeId;\n\t\t}\n\n\t\t// supported, no loader - fallback to default and warn\n\t\t_showAssetsWarningOnce(localeId);\n\t\treturn DEFAULT_LOCALE;\n\t}\n\n\t// not supported, try language only\n\tlocaleId = language;\n\tif (SUPPORTED_LOCALES.includes(localeId)) {\n\t\tif (loaders.has(localeId)) {\n\t\t\t// supported and has loader\n\t\t\treturn localeId;\n\t\t}\n\n\t\t// supported, no loader - fallback to default and warn\n\t\t_showAssetsWarningOnce(localeId);\n\t\treturn DEFAULT_LOCALE;\n\t}\n\n\t// not supported - fallback to default locale\n\treturn DEFAULT_LOCALE;\n};\n\n// internal set data\nconst setLocaleData = (localeId: string, content: CLDRData) => {\n\tlocaleDataMap.set(localeId, content);\n};\n\n// external getSync\nconst getLocaleData = (localeId: string) => {\n\t// if there is no loader, the default fallback was fetched and a warning was given - use default locale instead\n\tif (!loaders.has(localeId)) {\n\t\tlocaleId = DEFAULT_LOCALE;\n\t}\n\n\tconst content = localeDataMap.get(localeId);\n\tif (!content) {\n\t\tthrow new Error(`CLDR data for locale ${localeId} is not loaded!`);\n\t}\n\n\treturn content;\n};\n\n// load bundle over the network once\nconst _loadCldrOnce = (localeId: string) => {\n\tif (!cldrPromises.get(localeId)) {\n\t\tconst loadCldr = loaders.get(localeId);\n\n\t\tif (!loadCldr) {\n\t\t\tthrow new Error(`CLDR data for locale ${localeId} is not loaded!`);\n\t\t}\n\n\t\tcldrPromises.set(localeId, loadCldr(localeId));\n\t}\n\n\treturn cldrPromises.get(localeId);\n};\n\n// external getAsync\nconst fetchCldr = async (language: string, region: string, script: string) => {\n\tconst localeId = calcLocale(language, region, script);\n\n\t// reuse OpenUI5 CLDR if present\n\tconst openUI5Support = getFeature<typeof OpenUI5Support>(\"OpenUI5Support\");\n\tif (openUI5Support) {\n\t\tconst cldrContent = openUI5Support.getLocaleDataObject();\n\t\tif (cldrContent) {\n\t\t\t// only if openui5 actually returned valid content\n\t\t\tsetLocaleData(localeId, cldrContent);\n\t\t\treturn;\n\t\t}\n\t}\n\n\t// fetch it\n\ttry {\n\t\tconst cldrContent = await _loadCldrOnce(localeId);\n\t\tsetLocaleData(localeId, cldrContent as CLDRData);\n\t} catch (error: unknown) {\n\t\tconst e = error as Error;\n\t\tif (!reportedErrors.has(e.message)) {\n\t\t\treportedErrors.add(e.message);\n\t\t\tconsole.error(e.message); /* eslint-disable-line */\n\t\t}\n\t}\n};\n\nconst registerLocaleDataLoader = (localeId: string, loader: LocaleDataLoader) => {\n\tloaders.set(localeId, loader);\n};\n\n// register default loader for \"en\" from ui5 CDN (dev workflow without assets)\nregisterLocaleDataLoader(\"en\", async () => {\n\tconst cldrContent = await fetch(`https://sdk.openui5.org/1.120.17/resources/sap/ui/core/cldr/en.json`);\n\treturn cldrContent.json() as Promise<CLDRData>;\n});\n\n// When the language changes dynamically (the user calls setLanguage),\n// re-fetch the required CDRD data.\nattachLanguageChange(() => {\n\tconst locale = getLocale();\n\treturn fetchCldr(locale.getLanguage(), locale.getRegion(), locale.getScript());\n});\n\nexport {\n\tregisterLocaleDataLoader,\n\tfetchCldr,\n\tgetLocaleData,\n};\n\nexport type {\n\tCLDRData,\n};\n"],
  "mappings": "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",
  "names": []
}
