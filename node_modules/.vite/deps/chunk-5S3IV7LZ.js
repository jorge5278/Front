import {
  ListItemTemplate,
  ListItem_default
} from "./chunk-PUXVSQ52.js";
import {
  BusyIndicator_default,
  ListItemBase_default,
  List_default,
  ResponsivePopover_default
} from "./chunk-5FMKHJ6W.js";
import {
  Button_default,
  DOMReference_default,
  JsxRenderer_default,
  MENU_CLOSE_BUTTON_ARIA_LABEL,
  MENU_POPOVER_ACCESSIBLE_NAME,
  UI5Element_default,
  customElement_default,
  decline_default,
  event_strict_default,
  i18n_default,
  isDown,
  isEnter,
  isF2,
  isLeft,
  isRight,
  isTabNext,
  isTabPrevious,
  isUp,
  jsx,
  jsxs,
  parameters_bundle_css_default,
  parameters_bundle_css_default2,
  property_default,
  slot_default
} from "./chunk-ANJ7DKRT.js";
import {
  isDesktop,
  isPhone,
  registerThemePropertiesLoader,
  renderFinished
} from "./chunk-NPG2NGWT.js";

// node_modules/@ui5/webcomponents/dist/ListItemCustomTemplate.js
var predefinedHooks = {
  listItemContent
};
function ListItemCustomTemplate(hooks) {
  const currentHooks = { ...predefinedHooks, ...hooks };
  return ListItemTemplate.call(this, currentHooks);
}
function listItemContent() {
  return jsx("slot", {});
}

// node_modules/@ui5/webcomponents/dist/generated/themes/ListItemCustom.css.js
registerThemePropertiesLoader("@ui5/webcomponents-theming", "sap_horizon", async () => parameters_bundle_css_default);
registerThemePropertiesLoader("@ui5/webcomponents", "sap_horizon", async () => parameters_bundle_css_default2);
var ListItemCustom_css_default = `:host(:not([hidden])){display:block}:host{min-height:var(--_ui5-v2-8-0_list_item_base_height);height:auto;box-sizing:border-box}.ui5-li-root.ui5-custom-li-root{pointer-events:inherit;min-height:inherit}.ui5-li-root.ui5-custom-li-root .ui5-li-content{pointer-events:inherit}[ui5-checkbox].ui5-li-singlesel-radiobtn,[ui5-radio-button].ui5-li-singlesel-radiobtn{display:flex;align-items:center}.ui5-li-root.ui5-custom-li-root,[ui5-checkbox].ui5-li-singlesel-radiobtn,[ui5-radio-button].ui5-li-singlesel-radiobtn{min-width:var(--_ui5-v2-8-0_custom_list_item_rb_min_width)}
`;

// node_modules/@ui5/webcomponents/dist/ListItemCustom.js
var __decorate = function(decorators, target, key, desc) {
  var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
  if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
  else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
  return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var ListItemCustom = class ListItemCustom2 extends ListItem_default {
  constructor() {
    super(...arguments);
    this.movable = false;
  }
  async _onkeydown(e) {
    const isTab = isTabNext(e) || isTabPrevious(e);
    const isFocused = this.matches(":focus");
    if (!isTab && !isFocused && !isF2(e)) {
      return;
    }
    await super._onkeydown(e);
  }
  _onkeyup(e) {
    const isTab = isTabNext(e) || isTabPrevious(e);
    const isFocused = this.matches(":focus");
    if (!isTab && !isFocused && !isF2(e)) {
      return;
    }
    super._onkeyup(e);
  }
  get classes() {
    const result = super.classes;
    result.main["ui5-custom-li-root"] = true;
    return result;
  }
};
__decorate([
  property_default({ type: Boolean })
], ListItemCustom.prototype, "movable", void 0);
__decorate([
  property_default()
], ListItemCustom.prototype, "accessibleName", void 0);
ListItemCustom = __decorate([
  customElement_default({
    tag: "ui5-li-custom",
    template: ListItemCustomTemplate,
    renderer: JsxRenderer_default,
    styles: [ListItem_default.styles, ListItemCustom_css_default]
  })
], ListItemCustom);
ListItemCustom.define();
var ListItemCustom_default = ListItemCustom;

// node_modules/@ui5/webcomponents/dist/MenuSeparatorTemplate.js
function MenuSeparatorTemplate() {
  return jsx(ListItemCustom_default, { class: "ui5-menu-separator", _forcedAccessibleRole: "separator", disabled: true });
}

// node_modules/@ui5/webcomponents/dist/generated/themes/MenuSeparator.css.js
registerThemePropertiesLoader("@ui5/webcomponents-theming", "sap_horizon", async () => parameters_bundle_css_default);
registerThemePropertiesLoader("@ui5/webcomponents", "sap_horizon", async () => parameters_bundle_css_default2);
var MenuSeparator_css_default = `:host{border-top:.0625rem solid var(--sapGroup_ContentBorderColor);min-height:.125rem}.ui5-menu-separator{border:inherit;min-height:inherit;background:inherit;opacity:1}
`;

// node_modules/@ui5/webcomponents/dist/MenuSeparator.js
var __decorate2 = function(decorators, target, key, desc) {
  var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
  if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
  else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
  return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var MenuSeparator = class MenuSeparator2 extends ListItemBase_default {
  get isSeparator() {
    return true;
  }
  get classes() {
    return {
      main: {
        "ui5-menu-separator": true
      }
    };
  }
  /**
   * @override
   */
  get _focusable() {
    return false;
  }
  /**
   * @override
   */
  get _pressable() {
    return false;
  }
};
MenuSeparator = __decorate2([
  customElement_default({
    tag: "ui5-menu-separator",
    renderer: JsxRenderer_default,
    styles: [MenuSeparator_css_default],
    template: MenuSeparatorTemplate
  })
], MenuSeparator);
MenuSeparator.define();

// node_modules/@ui5/webcomponents/dist/MenuTemplate.js
function MenuTemplate() {
  return jsxs(ResponsivePopover_default, { id: `${this._id}-menu-rp`, class: "ui5-menu-rp", placement: "Bottom", verticalAlign: "Bottom", opener: this.opener, open: this.open, preventInitialFocus: true, hideArrow: true, allowTargetOverlap: true, accessibleName: this.acessibleNameText, onBeforeOpen: this._beforePopoverOpen, onOpen: this._afterPopoverOpen, onBeforeClose: this._beforePopoverClose, onClose: this._afterPopoverClose, children: [this.isPhone && jsxs("div", { slot: "header", class: "ui5-menu-dialog-header", children: [jsx("div", { class: "ui5-menu-dialog-title", children: jsx("h1", { children: this.headerText }) }), jsx(Button_default, { icon: decline_default, design: "Transparent", "aria-label": this.labelClose, onClick: this._close })] }), jsx("div", { id: `${this._id}-menu-main`, children: this.items.length ? jsx(List_default, { id: `${this._id}- menu-list`, selectionMode: "None", loading: this.loading, loadingDelay: this.loadingDelay, separators: "None", accessibleRole: "Menu", onItemClick: this._itemClick, onMouseOver: this._itemMouseOver, onKeyDown: this._itemKeyDown, "onui5-close-menu": this._close, children: jsx("slot", {}) }) : this.loading && jsx(BusyIndicator_default, { id: `${this._id}-menu-busy-indicator`, delay: this.loadingDelay, class: "ui5-menu-busy-indicator", active: true }) })] });
}

// node_modules/@ui5/webcomponents/dist/generated/themes/Menu.css.js
registerThemePropertiesLoader("@ui5/webcomponents-theming", "sap_horizon", async () => parameters_bundle_css_default);
registerThemePropertiesLoader("@ui5/webcomponents", "sap_horizon", async () => parameters_bundle_css_default2);
var Menu_css_default = `:host{line-height:initial}::slotted([ui5-menu-item]){line-height:inherit}.ui5-menu-rp[ui5-responsive-popover]::part(header),.ui5-menu-rp[ui5-responsive-popover]::part(content),.ui5-menu-rp[ui5-responsive-popover]::part(footer){padding:0}.ui5-menu-rp[ui5-responsive-popover]{box-shadow:var(--sapContent_Shadow1);border-radius:var(--_ui5-v2-8-0_menu_popover_border_radius)}.ui5-menu-busy-indicator{width:100%}.ui5-menu-dialog-header{display:flex;height:var(--_ui5-v2-8-0-responsive_popover_header_height);align-items:center;justify-content:space-between;padding:0px 1rem;width:100%;overflow:hidden}.ui5-menu-dialog-title{display:flex;flex-direction:row;align-items:center;justify-content:flex-start;width:calc(100% - 6.5rem);padding-right:1rem;font-family:var(--sapFontHeaderFamily)}.ui5-menu-dialog-title>h1{display:inline-block;max-width:100%;overflow:hidden;text-overflow:ellipsis;white-space:nowrap;font-size:var(--sapFontHeader5Size)}.ui5-menu-back-button{margin-right:1rem}
`;

// node_modules/@ui5/webcomponents/dist/Menu.js
var __decorate3 = function(decorators, target, key, desc) {
  var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
  if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
  else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
  return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var Menu_1;
var MENU_OPEN_DELAY = 300;
var Menu = Menu_1 = class Menu2 extends UI5Element_default {
  constructor() {
    super(...arguments);
    this.open = false;
    this.loading = false;
    this.loadingDelay = 1e3;
  }
  get isRtl() {
    return this.effectiveDir === "rtl";
  }
  get labelClose() {
    return Menu_1.i18nBundle.getText(MENU_CLOSE_BUTTON_ARIA_LABEL);
  }
  get isPhone() {
    return isPhone();
  }
  get _popover() {
    return this.shadowRoot.querySelector("[ui5-responsive-popover]");
  }
  get _menuItems() {
    return this.items.filter((item) => !item.isSeparator);
  }
  get acessibleNameText() {
    return Menu_1.i18nBundle.getText(MENU_POPOVER_ACCESSIBLE_NAME);
  }
  onBeforeRendering() {
    const siblingsWithIcon = this._menuItems.some((menuItem) => !!menuItem.icon);
    this._menuItems.forEach((item) => {
      item._siblingsWithIcon = siblingsWithIcon;
    });
  }
  _close() {
    this.open = false;
  }
  _openItemSubMenu(item) {
    clearTimeout(this._timeout);
    if (!item._popover || item._popover.open) {
      return;
    }
    this.fireDecoratorEvent("before-open", {
      item
    });
    item._popover.opener = item;
    item._popover.open = true;
    item.selected = true;
  }
  _closeItemSubMenu(item) {
    if (item && item._popover) {
      const openedSibling = item._menuItems.find((menuItem) => menuItem._popover && menuItem._popover.open);
      if (openedSibling) {
        this._closeItemSubMenu(openedSibling);
      }
      item._popover.open = false;
      item.selected = false;
    }
  }
  _itemMouseOver(e) {
    if (isDesktop()) {
      const item = e.target;
      if (item.hasAttribute("ui5-menu-item")) {
        item.focus();
        this._startOpenTimeout(item);
      }
    }
  }
  async focus(focusOptions) {
    await renderFinished();
    const firstMenuItem = this._menuItems[0];
    if (firstMenuItem) {
      return firstMenuItem.focus(focusOptions);
    }
    return super.focus(focusOptions);
  }
  _startOpenTimeout(item) {
    clearTimeout(this._timeout);
    this._timeout = setTimeout(() => {
      const opener = item.parentElement;
      const openedSibling = opener && opener._menuItems.find((menuItem) => menuItem._popover && menuItem._popover.open);
      if (openedSibling) {
        this._closeItemSubMenu(openedSibling);
      }
      this._openItemSubMenu(item);
    }, MENU_OPEN_DELAY);
  }
  _itemClick(e) {
    const item = e.detail.item;
    if (!item._popover) {
      const prevented = !this.fireDecoratorEvent("item-click", {
        "item": item,
        "text": item.text || ""
      });
      if (!prevented && this._popover) {
        item.fireDecoratorEvent("close-menu");
      }
    } else {
      this._openItemSubMenu(item);
    }
  }
  _itemKeyDown(e) {
    const isTabNextPrevious = isTabNext(e) || isTabPrevious(e);
    const item = e.target;
    const parentElement = item.parentElement;
    const shouldItemNavigation = isUp(e) || isDown(e);
    const shouldOpenMenu = this.isRtl ? isLeft(e) : isRight(e);
    const shouldCloseMenu = !shouldItemNavigation && !shouldOpenMenu && parentElement.hasAttribute("ui5-menu-item");
    if (item.hasAttribute("ui5-menu-item")) {
      if (isEnter(e) || isTabNextPrevious) {
        e.preventDefault();
      }
      if (isRight(e) || isLeft(e)) {
        item._navigateToEndContent(isLeft(e));
      }
      if (shouldOpenMenu) {
        this._openItemSubMenu(item);
      } else if ((shouldCloseMenu || isTabNextPrevious) && parentElement._popover) {
        parentElement._popover.open = false;
        parentElement.selected = false;
        parentElement._popover.focusOpener();
      }
    } else if (isUp(e)) {
      this._navigateOutOfEndContent(parentElement);
    } else if (isDown(e)) {
      this._navigateOutOfEndContent(parentElement, true);
    }
  }
  _navigateOutOfEndContent(menuItem, isDownwards) {
    const opener = menuItem == null ? void 0 : menuItem.parentElement;
    const currentIndex = opener._menuItems.indexOf(menuItem);
    const nextItem = isDownwards ? opener._menuItems[currentIndex + 1] : opener._menuItems[currentIndex - 1];
    const itemToFocus = nextItem || opener._menuItems[currentIndex];
    itemToFocus.focus();
  }
  _beforePopoverOpen(e) {
    const prevented = !this.fireDecoratorEvent("before-open", {});
    if (prevented) {
      this.open = false;
      e.preventDefault();
    }
  }
  _afterPopoverOpen() {
    var _a;
    (_a = this._menuItems[0]) == null ? void 0 : _a.focus();
    this.fireDecoratorEvent("open");
  }
  _beforePopoverClose(e) {
    const prevented = !this.fireDecoratorEvent("before-close", { escPressed: e.detail.escPressed });
    if (prevented) {
      this.open = true;
      e.preventDefault();
    }
  }
  _afterPopoverClose() {
    this.open = false;
    this.fireDecoratorEvent("close");
  }
};
__decorate3([
  property_default()
], Menu.prototype, "headerText", void 0);
__decorate3([
  property_default({ type: Boolean })
], Menu.prototype, "open", void 0);
__decorate3([
  property_default({ type: Boolean })
], Menu.prototype, "loading", void 0);
__decorate3([
  property_default({ type: Number })
], Menu.prototype, "loadingDelay", void 0);
__decorate3([
  property_default({ converter: DOMReference_default })
], Menu.prototype, "opener", void 0);
__decorate3([
  slot_default({ "default": true, type: HTMLElement, invalidateOnChildChange: true })
], Menu.prototype, "items", void 0);
__decorate3([
  i18n_default("@ui5/webcomponents")
], Menu, "i18nBundle", void 0);
Menu = Menu_1 = __decorate3([
  customElement_default({
    tag: "ui5-menu",
    renderer: JsxRenderer_default,
    styles: Menu_css_default,
    template: MenuTemplate
  }),
  event_strict_default("item-click", {
    cancelable: true
  }),
  event_strict_default("before-open", {
    bubbles: true,
    cancelable: true
  }),
  event_strict_default("open", {
    bubbles: true
  }),
  event_strict_default("close-menu", {
    bubbles: true
  }),
  event_strict_default("before-close", {
    bubbles: true,
    cancelable: true
  }),
  event_strict_default("close")
], Menu);
Menu.define();
var Menu_default = Menu;

export {
  ListItemCustom_default,
  Menu_css_default,
  Menu_default
};
//# sourceMappingURL=chunk-5S3IV7LZ.js.map
