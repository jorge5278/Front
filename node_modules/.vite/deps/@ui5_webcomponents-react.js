import {
  ListItemCustom_default,
  Menu_css_default,
  Menu_default
} from "./chunk-5S3IV7LZ.js";
import {
  CheckBox_default,
  ListItemAdditionalText_css_default,
  ListItemTemplate,
  ListItemType_default,
  ListItem_default,
  MenuItemTemplate,
  MenuItem_default,
  RadioButton_default,
  accept_default,
  edit_default,
  nav_back_default,
  slim_arrow_right_default
} from "./chunk-PUXVSQ52.js";
import {
  ListItemBaseTemplate,
  ListItemGroupTemplate,
  SuggestionItem_default
} from "./chunk-NZFQHF6I.js";
import {
  BusyIndicator_default,
  DragRegistry_default,
  DraggableElement_css_default,
  DropIndicator_default,
  ItemNavigationBehavior_default,
  ItemNavigation_default,
  ListAccessibleRole_default,
  ListItemBase_default,
  ListItemGroup_default,
  ListSelectionMode_default,
  ListSeparator_default,
  List_default,
  MovePlacement_default,
  NavigationMode_default,
  Orientation_default,
  ResponsivePopover_default,
  debounce_default,
  findClosestPosition,
  findClosestPositionsByKey,
  getTabbableElements,
  handleDragOver_default,
  handleDrop_default
} from "./chunk-5FMKHJ6W.js";
import {
  SliderBaseTemplate,
  SliderBase_default,
  direction_arrows_default
} from "./chunk-4LV27K6S.js";
import {
  Filters_exports,
  InputTemplate,
  InputType_default,
  Input_default,
  ResponsivePopoverCommon_css_default,
  StartsWith,
  StartsWithPerTerm,
  Suggestions_css_default,
  ValueStateMessage_css_default
} from "./chunk-LEMKDM4U.js";
import {
  ARIA_LABEL_CARD_CONTENT,
  ARIA_LABEL_EMPTY_CELL,
  ARIA_LABEL_LIST_ITEM_CHECKBOX,
  ARIA_ROLEDESCRIPTION_CARD,
  ARIA_ROLEDESCRIPTION_CARD_HEADER,
  ARIA_ROLEDESCRIPTION_INTERACTIVE_CARD_HEADER,
  AVATAR_GROUP_ARIA_LABEL_GROUP,
  AVATAR_GROUP_ARIA_LABEL_INDIVIDUAL,
  AVATAR_GROUP_DISPLAYED_HIDDEN_LABEL,
  AVATAR_GROUP_MOVE,
  AVATAR_GROUP_SHOW_COMPLETE_LIST_LABEL,
  AVATAR_TOOLTIP,
  BREADCRUMBS_ARIA_LABEL,
  BREADCRUMBS_CANCEL_BUTTON,
  BREADCRUMBS_OVERFLOW_ARIA_LABEL,
  BREADCRUMB_ITEM_POS,
  ButtonBadgeDesign_default,
  ButtonDesign_default,
  ButtonTemplate,
  Button_default,
  CALENDAR_HEADER_NEXT_BUTTON,
  CALENDAR_HEADER_PREVIOUS_BUTTON,
  CAL_LEGEND_NON_WORKING_DAY_TEXT,
  CAL_LEGEND_ROLE_DESCRIPTION,
  CAL_LEGEND_SELECTED_TEXT,
  CAL_LEGEND_TODAY_TEXT,
  CAL_LEGEND_WORKING_DAY_TEXT,
  CAROUSEL_DOT_TEXT,
  CAROUSEL_NEXT_ARROW_TEXT,
  CAROUSEL_OF_TEXT,
  CAROUSEL_PREVIOUS_ARROW_TEXT,
  COLORPALETTE_COLOR_LABEL,
  COLORPALETTE_CONTAINER_LABEL,
  COLORPALETTE_POPOVER_TITLE,
  COLOR_PALETTE_DEFAULT_COLOR_TEXT,
  COLOR_PALETTE_DIALOG_CANCEL_BUTTON,
  COLOR_PALETTE_DIALOG_OK_BUTTON,
  COLOR_PALETTE_DIALOG_TITLE,
  COLOR_PALETTE_MORE_COLORS_TEXT,
  COMBOBOX_AVAILABLE_OPTIONS,
  DATEPICKER_DATE_DESCRIPTION,
  DATEPICKER_OPEN_ICON_TITLE,
  DATEPICKER_POPOVER_ACCESSIBLE_NAME,
  DATERANGEPICKER_POPOVER_ACCESSIBLE_NAME,
  DATERANGE_DESCRIPTION,
  DATETIMEPICKER_POPOVER_ACCESSIBLE_NAME,
  DATETIME_DESCRIPTION,
  DATETIME_PICKER_DATE_BUTTON,
  DATETIME_PICKER_TIME_BUTTON,
  DAY_PICKER_NON_WORKING_DAY,
  DAY_PICKER_TODAY,
  DAY_PICKER_WEEK_NUMBER_TEXT,
  DOMReference_default,
  Dialog_default,
  EMPTY_INDICATOR_ACCESSIBLE_TEXT,
  EMPTY_INDICATOR_SYMBOL,
  EXPANDABLE_TEXT_CLOSE,
  EXPANDABLE_TEXT_SHOW_LESS,
  EXPANDABLE_TEXT_SHOW_LESS_POPOVER_ARIA_LABEL,
  EXPANDABLE_TEXT_SHOW_MORE,
  EXPANDABLE_TEXT_SHOW_MORE_POPOVER_ARIA_LABEL,
  FILEUPLOADER_TITLE,
  FILEUPLOAD_BROWSE,
  FORM_CHECKABLE_REQUIRED,
  FORM_MIXED_TEXTFIELD_REQUIRED,
  FORM_SELECTABLE_AVALIABLE_VALUES,
  FORM_SELECTABLE_REQUIRED,
  FORM_TEXTFIELD_REQUIRED,
  Fragment,
  INPUT_CLEAR_ICON_ACC_NAME,
  INPUT_SUGGESTIONS_TITLE,
  IconMode_default,
  Icon_default,
  JsxRenderer_default,
  LABEL_COLON,
  LINK_EMPHASIZED,
  LINK_SUBTLE,
  LIST_ITEM_GROUP_HEADER,
  LIST_ITEM_POSITION,
  LIST_ITEM_SELECTED,
  Label_default,
  MCB_SELECTED_ITEMS,
  MESSAGE_STRIP_CLOSABLE,
  MESSAGE_STRIP_CLOSE_BUTTON_CRITICAL,
  MESSAGE_STRIP_CLOSE_BUTTON_CUSTOM,
  MESSAGE_STRIP_CLOSE_BUTTON_INFORMATION,
  MESSAGE_STRIP_CLOSE_BUTTON_NEGATIVE,
  MESSAGE_STRIP_CLOSE_BUTTON_POSITIVE,
  MESSAGE_STRIP_CUSTOM,
  MESSAGE_STRIP_ERROR,
  MESSAGE_STRIP_INFORMATION,
  MESSAGE_STRIP_SUCCESS,
  MESSAGE_STRIP_WARNING,
  MONTH_PICKER_DESCRIPTION,
  MULTICOMBOBOX_DIALOG_OK_BUTTON,
  MULTIINPUT_ROLEDESCRIPTION_TEXT,
  MULTIINPUT_SHOW_MORE_TOKENS,
  MULTIINPUT_VALUE_HELP_LABEL,
  MediaRange_default,
  PANEL_ICON,
  PopoverHorizontalAlign_default,
  PopoverPlacement_default,
  Popover_default,
  PopupAccessibleRole_default,
  RANGE_SLIDER_ARIA_DESCRIPTION,
  RANGE_SLIDER_END_HANDLE_DESCRIPTION,
  RANGE_SLIDER_START_HANDLE_DESCRIPTION,
  RATING_INDICATOR_ARIA_DESCRIPTION,
  RATING_INDICATOR_TEXT,
  RATING_INDICATOR_TOOLTIP_TEXT,
  ResizeHandler_default,
  SEGMENTEDBUTTONITEM_ARIA_DESCRIPTION,
  SEGMENTEDBUTTON_ARIA_DESCRIBEDBY,
  SEGMENTEDBUTTON_ARIA_DESCRIPTION,
  SELECT_OPTIONS,
  SELECT_ROLE_DESCRIPTION,
  SHOW_SELECTED_BUTTON,
  SLIDER_TOOLTIP_INPUT_DESCRIPTION,
  SLIDER_TOOLTIP_INPUT_LABEL,
  SPLIT_BUTTON_ARROW_BUTTON_TOOLTIP,
  SPLIT_BUTTON_DESCRIPTION,
  SPLIT_BUTTON_KEYBOARD_HINT,
  STEPINPUT_DEC_ICON_TITLE,
  STEPINPUT_INC_ICON_TITLE,
  TABCONTAINER_END_OVERFLOW,
  TABCONTAINER_NEXT_ICON_ACC_NAME,
  TABCONTAINER_OVERFLOW_MENU_TITLE,
  TABCONTAINER_POPOVER_CANCEL_BUTTON,
  TABCONTAINER_PREVIOUS_ICON_ACC_NAME,
  TABCONTAINER_SUBTABS_DESCRIPTION,
  TABLE_COLUMN_HEADER_ROW,
  TABLE_MORE,
  TABLE_MORE_DESCRIPTION,
  TABLE_NAVIGATION,
  TABLE_NO_DATA,
  TABLE_ROW_ACTIONS,
  TABLE_ROW_POPIN,
  TABLE_ROW_SELECTOR,
  TABLE_SELECTION,
  TAB_ARIA_DESIGN_CRITICAL,
  TAB_ARIA_DESIGN_NEGATIVE,
  TAB_ARIA_DESIGN_NEUTRAL,
  TAB_ARIA_DESIGN_POSITIVE,
  TAB_SPLIT_ROLE_DESCRIPTION,
  TAG_DESCRIPTION_TAG,
  TAG_ERROR,
  TAG_INFORMATION,
  TAG_ROLE_DESCRIPTION,
  TAG_SUCCESS,
  TAG_WARNING,
  TEXTAREA_CHARACTERS_EXCEEDED,
  TEXTAREA_CHARACTERS_LEFT,
  TIMEPICKER_CANCEL_BUTTON,
  TIMEPICKER_CLOCK_DIAL_LABEL,
  TIMEPICKER_HOURS_LABEL,
  TIMEPICKER_INPUTS_ENTER_HOURS,
  TIMEPICKER_INPUTS_ENTER_MINUTES,
  TIMEPICKER_INPUTS_ENTER_SECONDS,
  TIMEPICKER_INPUT_DESCRIPTION,
  TIMEPICKER_MINUTES_LABEL,
  TIMEPICKER_POPOVER_ACCESSIBLE_NAME,
  TIMEPICKER_SECONDS_LABEL,
  TIMEPICKER_SUBMIT_BUTTON,
  TOKENIZER_ARIA_CONTAIN_ONE_TOKEN,
  TOKENIZER_ARIA_CONTAIN_SEVERAL_TOKENS,
  TOKENIZER_ARIA_CONTAIN_TOKEN,
  TOKENIZER_ARIA_LABEL,
  TOKENIZER_CLEAR_ALL,
  TOKENIZER_POPOVER_REMOVE,
  TOKENIZER_SHOW_ALL_ITEMS,
  TOKEN_ARIA_DELETABLE,
  TOKEN_ARIA_LABEL,
  TOOLBAR_OVERFLOW_BUTTON_ARIA_LABEL,
  TOOLBAR_POPOVER_AVAILABLE_VALUES,
  TREE_ITEM_ARIA_LABEL,
  TREE_ITEM_COLLAPSE_NODE,
  TREE_ITEM_EXPAND_NODE,
  TitleLevel_default,
  Title_default,
  UI5Element_default,
  VALUE_STATE_ERROR,
  VALUE_STATE_ERROR_ALREADY_SELECTED,
  VALUE_STATE_INFORMATION,
  VALUE_STATE_SUCCESS,
  VALUE_STATE_TYPE_ERROR,
  VALUE_STATE_TYPE_INFORMATION,
  VALUE_STATE_TYPE_SUCCESS,
  VALUE_STATE_TYPE_WARNING,
  VALUE_STATE_WARNING,
  ValueState_default,
  YEAR_PICKER_DESCRIPTION,
  addCustomCSS,
  alert_default,
  arraysAreEqual_default,
  clamp_default,
  customElement_default,
  decline_default,
  error_default,
  event_strict_default,
  executeTemplate_default,
  getActiveElement_default,
  getAssociatedLabelForTexts,
  getEffectiveAriaLabelText,
  getEffectiveScrollbarStyle_default,
  getEnableDefaultTooltips,
  getFirstFocusableElement,
  getFocusedElement,
  i18n_default,
  information_default,
  isBackSpace,
  isColon,
  isCtrl,
  isCtrlA,
  isDelete,
  isDeleteShift,
  isDown,
  isDownAlt,
  isDownCtrl,
  isDownShift,
  isDownShiftCtrl,
  isElementHidden_default,
  isEnd,
  isEndCtrl,
  isEndShift,
  isEnter,
  isEnterShift,
  isEscape,
  isF10Shift,
  isF2,
  isF4,
  isF4Shift,
  isF6Next,
  isF6Previous,
  isF7,
  isHome,
  isHomeCtrl,
  isHomeShift,
  isInsertCtrl,
  isInsertShift,
  isKeyA,
  isKeyP,
  isLeft,
  isLeftCtrl,
  isLeftShift,
  isLeftShiftCtrl,
  isMinus,
  isNumber,
  isPageDown,
  isPageDownAlt,
  isPageDownShift,
  isPageDownShiftCtrl,
  isPageUp,
  isPageUpAlt,
  isPageUpShift,
  isPageUpShiftCtrl,
  isPlus,
  isRight,
  isRightCtrl,
  isRightShift,
  isRightShiftCtrl,
  isShift,
  isShow,
  isSpace,
  isSpaceCtrl,
  isSpaceShift,
  isTabNext,
  isTabPrevious,
  isUp,
  isUpAlt,
  isUpCtrl,
  isUpShift,
  isUpShiftCtrl,
  jsx,
  jsxs,
  parameters_bundle_css_default,
  parameters_bundle_css_default2,
  property_default,
  slot_default,
  submitForm,
  sys_enter_2_default,
  toLowercaseEnumValue,
  willShowContent_default
} from "./chunk-ANJ7DKRT.js";
import {
  getLocaleData
} from "./chunk-PWP4D57X.js";
import {
  require_react_dom
} from "./chunk-IYOOVQ6Y.js";
import {
  navigation_right_arrow_default
} from "./chunk-XLG54XXZ.js";
import "./chunk-JD2VQCXH.js";
import {
  clsx
} from "./chunk-FCSS27DJ.js";
import {
  require_jsx_runtime
} from "./chunk-3CY53ZFX.js";
import {
  require_react
} from "./chunk-M3OKNN3J.js";
import {
  add_default
} from "./chunk-7PTAAH6R.js";
import {
  ICON_COLLAPSE_GROUP,
  ICON_DOWN,
  ICON_DRILL_DOWN,
  ICON_EXPAND_GROUP,
  ICON_FILTER,
  ICON_GROUP_2,
  ICON_OVERFLOW,
  ICON_REFRESH,
  ICON_SEARCH,
  ICON_SORT,
  ICON_SORT_ASCENDING,
  ICON_SORT_DESCENDING,
  ICON_UP
} from "./chunk-7MCSUB2E.js";
import {
  getI18nBundle,
  i18nBundle_default,
  registerIcon
} from "./chunk-Y4O442SL.js";
import {
  AnimationMode_default,
  EventProvider_default,
  attachBoot,
  attachConfigurationReset,
  attachLanguageChange,
  attachThemeLoaded,
  createOrUpdateStyle,
  detachLanguageChange,
  detachThemeLoaded,
  getAnimationMode,
  getCalendarType,
  getCurrentRuntimeIndex,
  getCustomElementsScopingSuffix,
  getEffectiveScopingSuffixForTag,
  getLanguage,
  getLocale_default,
  getLocationHostname,
  getLocationPort,
  getLocationProtocol,
  getScopedVarName,
  getSecondaryCalendarType,
  getSharedResource_default,
  getSingletonElementInstance_default,
  getTheme,
  getTimezone,
  internals,
  isAndroid,
  isChrome,
  isCombi,
  isDesktop,
  isFirefox,
  isIOS,
  isLegacyThemeFamily,
  isMac,
  isPhone,
  isSafari,
  isTablet,
  locationOpen,
  registerThemePropertiesLoader,
  removeStyle,
  renderFinished,
  supportsTouch
} from "./chunk-NPG2NGWT.js";
import {
  __commonJS,
  __export,
  __privateAdd,
  __privateMethod,
  __publicField,
  __toESM
} from "./chunk-Q4XP6UTR.js";

// node_modules/@zxing/library/umd/index.min.js
var require_index_min = __commonJS({
  "node_modules/@zxing/library/umd/index.min.js"(exports, module) {
    !function(t, e) {
      "object" == typeof exports && "undefined" != typeof module ? e(exports) : "function" == typeof define && define.amd ? define(["exports"], e) : e((t = "undefined" != typeof globalThis ? globalThis : t || self).ZXing = {});
    }(exports, function(t) {
      "use strict";
      var e, r, n = (e = function(t2, r2) {
        return e = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(t3, e2) {
          t3.__proto__ = e2;
        } || function(t3, e2) {
          for (var r3 in e2) Object.prototype.hasOwnProperty.call(e2, r3) && (t3[r3] = e2[r3]);
        }, e(t2, r2);
      }, function(t2, r2) {
        if ("function" != typeof r2 && null !== r2) throw new TypeError("Class extends value " + String(r2) + " is not a constructor or null");
        function n2() {
          this.constructor = t2;
        }
        e(t2, r2), t2.prototype = null === r2 ? Object.create(r2) : (n2.prototype = r2.prototype, new n2());
      }), i = function(t2) {
        function e2(e3, r2) {
          var n2, i2, s2, o2 = this.constructor, a2 = t2.call(this, e3, r2) || this;
          return Object.defineProperty(a2, "name", { value: o2.name, enumerable: false, configurable: true }), n2 = a2, i2 = o2.prototype, (s2 = Object.setPrototypeOf) ? s2(n2, i2) : n2.__proto__ = i2, function(t3, e4) {
            void 0 === e4 && (e4 = t3.constructor);
            var r3 = Error.captureStackTrace;
            r3 && r3(t3, e4);
          }(a2), a2;
        }
        return n(e2, t2), e2;
      }(Error);
      class s extends i {
        constructor(t2 = void 0) {
          super(t2), this.message = t2;
        }
        getKind() {
          return this.constructor.kind;
        }
      }
      s.kind = "Exception";
      class o extends s {
      }
      o.kind = "ArgumentException";
      class a extends s {
      }
      a.kind = "IllegalArgumentException";
      class h {
        constructor(t2) {
          if (this.binarizer = t2, null === t2) throw new a("Binarizer must be non-null.");
        }
        getWidth() {
          return this.binarizer.getWidth();
        }
        getHeight() {
          return this.binarizer.getHeight();
        }
        getBlackRow(t2, e2) {
          return this.binarizer.getBlackRow(t2, e2);
        }
        getBlackMatrix() {
          return null !== this.matrix && void 0 !== this.matrix || (this.matrix = this.binarizer.getBlackMatrix()), this.matrix;
        }
        isCropSupported() {
          return this.binarizer.getLuminanceSource().isCropSupported();
        }
        crop(t2, e2, r2, n2) {
          const i2 = this.binarizer.getLuminanceSource().crop(t2, e2, r2, n2);
          return new h(this.binarizer.createBinarizer(i2));
        }
        isRotateSupported() {
          return this.binarizer.getLuminanceSource().isRotateSupported();
        }
        rotateCounterClockwise() {
          const t2 = this.binarizer.getLuminanceSource().rotateCounterClockwise();
          return new h(this.binarizer.createBinarizer(t2));
        }
        rotateCounterClockwise45() {
          const t2 = this.binarizer.getLuminanceSource().rotateCounterClockwise45();
          return new h(this.binarizer.createBinarizer(t2));
        }
        toString() {
          try {
            return this.getBlackMatrix().toString();
          } catch (t2) {
            return "";
          }
        }
      }
      class l extends s {
        static getChecksumInstance() {
          return new l();
        }
      }
      l.kind = "ChecksumException";
      class c {
        constructor(t2) {
          this.source = t2;
        }
        getLuminanceSource() {
          return this.source;
        }
        getWidth() {
          return this.source.getWidth();
        }
        getHeight() {
          return this.source.getHeight();
        }
      }
      class d {
        static arraycopy(t2, e2, r2, n2, i2) {
          for (; i2--; ) r2[n2++] = t2[e2++];
        }
        static currentTimeMillis() {
          return Date.now();
        }
      }
      class u extends s {
      }
      u.kind = "IndexOutOfBoundsException";
      class g extends u {
        constructor(t2 = void 0, e2 = void 0) {
          super(e2), this.index = t2, this.message = e2;
        }
      }
      g.kind = "ArrayIndexOutOfBoundsException";
      class f {
        static fill(t2, e2) {
          for (let r2 = 0, n2 = t2.length; r2 < n2; r2++) t2[r2] = e2;
        }
        static fillWithin(t2, e2, r2, n2) {
          f.rangeCheck(t2.length, e2, r2);
          for (let i2 = e2; i2 < r2; i2++) t2[i2] = n2;
        }
        static rangeCheck(t2, e2, r2) {
          if (e2 > r2) throw new a("fromIndex(" + e2 + ") > toIndex(" + r2 + ")");
          if (e2 < 0) throw new g(e2);
          if (r2 > t2) throw new g(r2);
        }
        static asList(...t2) {
          return t2;
        }
        static create(t2, e2, r2) {
          return Array.from({ length: t2 }).map((t3) => Array.from({ length: e2 }).fill(r2));
        }
        static createInt32Array(t2, e2, r2) {
          return Array.from({ length: t2 }).map((t3) => Int32Array.from({ length: e2 }).fill(r2));
        }
        static equals(t2, e2) {
          if (!t2) return false;
          if (!e2) return false;
          if (!t2.length) return false;
          if (!e2.length) return false;
          if (t2.length !== e2.length) return false;
          for (let r2 = 0, n2 = t2.length; r2 < n2; r2++) if (t2[r2] !== e2[r2]) return false;
          return true;
        }
        static hashCode(t2) {
          if (null === t2) return 0;
          let e2 = 1;
          for (const r2 of t2) e2 = 31 * e2 + r2;
          return e2;
        }
        static fillUint8Array(t2, e2) {
          for (let r2 = 0; r2 !== t2.length; r2++) t2[r2] = e2;
        }
        static copyOf(t2, e2) {
          return t2.slice(0, e2);
        }
        static copyOfUint8Array(t2, e2) {
          if (t2.length <= e2) {
            const r2 = new Uint8Array(e2);
            return r2.set(t2), r2;
          }
          return t2.slice(0, e2);
        }
        static copyOfRange(t2, e2, r2) {
          const n2 = r2 - e2, i2 = new Int32Array(n2);
          return d.arraycopy(t2, e2, i2, 0, n2), i2;
        }
        static binarySearch(t2, e2, r2) {
          void 0 === r2 && (r2 = f.numberComparator);
          let n2 = 0, i2 = t2.length - 1;
          for (; n2 <= i2; ) {
            const s2 = i2 + n2 >> 1, o2 = r2(e2, t2[s2]);
            if (o2 > 0) n2 = s2 + 1;
            else {
              if (!(o2 < 0)) return s2;
              i2 = s2 - 1;
            }
          }
          return -n2 - 1;
        }
        static numberComparator(t2, e2) {
          return t2 - e2;
        }
      }
      class w {
        static numberOfTrailingZeros(t2) {
          let e2;
          if (0 === t2) return 32;
          let r2 = 31;
          return e2 = t2 << 16, 0 !== e2 && (r2 -= 16, t2 = e2), e2 = t2 << 8, 0 !== e2 && (r2 -= 8, t2 = e2), e2 = t2 << 4, 0 !== e2 && (r2 -= 4, t2 = e2), e2 = t2 << 2, 0 !== e2 && (r2 -= 2, t2 = e2), r2 - (t2 << 1 >>> 31);
        }
        static numberOfLeadingZeros(t2) {
          if (0 === t2) return 32;
          let e2 = 1;
          return t2 >>> 16 == 0 && (e2 += 16, t2 <<= 16), t2 >>> 24 == 0 && (e2 += 8, t2 <<= 8), t2 >>> 28 == 0 && (e2 += 4, t2 <<= 4), t2 >>> 30 == 0 && (e2 += 2, t2 <<= 2), e2 -= t2 >>> 31, e2;
        }
        static toHexString(t2) {
          return t2.toString(16);
        }
        static toBinaryString(t2) {
          return String(parseInt(String(t2), 2));
        }
        static bitCount(t2) {
          return t2 = (t2 = (858993459 & (t2 -= t2 >>> 1 & 1431655765)) + (t2 >>> 2 & 858993459)) + (t2 >>> 4) & 252645135, t2 += t2 >>> 8, 63 & (t2 += t2 >>> 16);
        }
        static truncDivision(t2, e2) {
          return Math.trunc(t2 / e2);
        }
        static parseInt(t2, e2 = void 0) {
          return parseInt(t2, e2);
        }
      }
      w.MIN_VALUE_32_BITS = -2147483648, w.MAX_VALUE = Number.MAX_SAFE_INTEGER;
      class C {
        constructor(t2, e2) {
          void 0 === t2 ? (this.size = 0, this.bits = new Int32Array(1)) : (this.size = t2, this.bits = null == e2 ? C.makeArray(t2) : e2);
        }
        getSize() {
          return this.size;
        }
        getSizeInBytes() {
          return Math.floor((this.size + 7) / 8);
        }
        ensureCapacity(t2) {
          if (t2 > 32 * this.bits.length) {
            const e2 = C.makeArray(t2);
            d.arraycopy(this.bits, 0, e2, 0, this.bits.length), this.bits = e2;
          }
        }
        get(t2) {
          return !!(this.bits[Math.floor(t2 / 32)] & 1 << (31 & t2));
        }
        set(t2) {
          this.bits[Math.floor(t2 / 32)] |= 1 << (31 & t2);
        }
        flip(t2) {
          this.bits[Math.floor(t2 / 32)] ^= 1 << (31 & t2);
        }
        getNextSet(t2) {
          const e2 = this.size;
          if (t2 >= e2) return e2;
          const r2 = this.bits;
          let n2 = Math.floor(t2 / 32), i2 = r2[n2];
          i2 &= ~((1 << (31 & t2)) - 1);
          const s2 = r2.length;
          for (; 0 === i2; ) {
            if (++n2 === s2) return e2;
            i2 = r2[n2];
          }
          const o2 = 32 * n2 + w.numberOfTrailingZeros(i2);
          return o2 > e2 ? e2 : o2;
        }
        getNextUnset(t2) {
          const e2 = this.size;
          if (t2 >= e2) return e2;
          const r2 = this.bits;
          let n2 = Math.floor(t2 / 32), i2 = ~r2[n2];
          i2 &= ~((1 << (31 & t2)) - 1);
          const s2 = r2.length;
          for (; 0 === i2; ) {
            if (++n2 === s2) return e2;
            i2 = ~r2[n2];
          }
          const o2 = 32 * n2 + w.numberOfTrailingZeros(i2);
          return o2 > e2 ? e2 : o2;
        }
        setBulk(t2, e2) {
          this.bits[Math.floor(t2 / 32)] = e2;
        }
        setRange(t2, e2) {
          if (e2 < t2 || t2 < 0 || e2 > this.size) throw new a();
          if (e2 === t2) return;
          e2--;
          const r2 = Math.floor(t2 / 32), n2 = Math.floor(e2 / 32), i2 = this.bits;
          for (let s2 = r2; s2 <= n2; s2++) {
            const o2 = (2 << (s2 < n2 ? 31 : 31 & e2)) - (1 << (s2 > r2 ? 0 : 31 & t2));
            i2[s2] |= o2;
          }
        }
        clear() {
          const t2 = this.bits.length, e2 = this.bits;
          for (let r2 = 0; r2 < t2; r2++) e2[r2] = 0;
        }
        isRange(t2, e2, r2) {
          if (e2 < t2 || t2 < 0 || e2 > this.size) throw new a();
          if (e2 === t2) return true;
          e2--;
          const n2 = Math.floor(t2 / 32), i2 = Math.floor(e2 / 32), s2 = this.bits;
          for (let o2 = n2; o2 <= i2; o2++) {
            const a2 = (2 << (o2 < i2 ? 31 : 31 & e2)) - (1 << (o2 > n2 ? 0 : 31 & t2)) & 4294967295;
            if ((s2[o2] & a2) !== (r2 ? a2 : 0)) return false;
          }
          return true;
        }
        appendBit(t2) {
          this.ensureCapacity(this.size + 1), t2 && (this.bits[Math.floor(this.size / 32)] |= 1 << (31 & this.size)), this.size++;
        }
        appendBits(t2, e2) {
          if (e2 < 0 || e2 > 32) throw new a("Num bits must be between 0 and 32");
          this.ensureCapacity(this.size + e2);
          for (let r2 = e2; r2 > 0; r2--) this.appendBit(1 == (t2 >> r2 - 1 & 1));
        }
        appendBitArray(t2) {
          const e2 = t2.size;
          this.ensureCapacity(this.size + e2);
          for (let r2 = 0; r2 < e2; r2++) this.appendBit(t2.get(r2));
        }
        xor(t2) {
          if (this.size !== t2.size) throw new a("Sizes don't match");
          const e2 = this.bits;
          for (let r2 = 0, n2 = e2.length; r2 < n2; r2++) e2[r2] ^= t2.bits[r2];
        }
        toBytes(t2, e2, r2, n2) {
          for (let i2 = 0; i2 < n2; i2++) {
            let n3 = 0;
            for (let e3 = 0; e3 < 8; e3++) this.get(t2) && (n3 |= 1 << 7 - e3), t2++;
            e2[r2 + i2] = n3;
          }
        }
        getBitArray() {
          return this.bits;
        }
        reverse() {
          const t2 = new Int32Array(this.bits.length), e2 = Math.floor((this.size - 1) / 32), r2 = e2 + 1, n2 = this.bits;
          for (let i2 = 0; i2 < r2; i2++) {
            let r3 = n2[i2];
            r3 = r3 >> 1 & 1431655765 | (1431655765 & r3) << 1, r3 = r3 >> 2 & 858993459 | (858993459 & r3) << 2, r3 = r3 >> 4 & 252645135 | (252645135 & r3) << 4, r3 = r3 >> 8 & 16711935 | (16711935 & r3) << 8, r3 = r3 >> 16 & 65535 | (65535 & r3) << 16, t2[e2 - i2] = r3;
          }
          if (this.size !== 32 * r2) {
            const e3 = 32 * r2 - this.size;
            let n3 = t2[0] >>> e3;
            for (let i2 = 1; i2 < r2; i2++) {
              const r3 = t2[i2];
              n3 |= r3 << 32 - e3, t2[i2 - 1] = n3, n3 = r3 >>> e3;
            }
            t2[r2 - 1] = n3;
          }
          this.bits = t2;
        }
        static makeArray(t2) {
          return new Int32Array(Math.floor((t2 + 31) / 32));
        }
        equals(t2) {
          if (!(t2 instanceof C)) return false;
          const e2 = t2;
          return this.size === e2.size && f.equals(this.bits, e2.bits);
        }
        hashCode() {
          return 31 * this.size + f.hashCode(this.bits);
        }
        toString() {
          let t2 = "";
          for (let e2 = 0, r2 = this.size; e2 < r2; e2++) 7 & e2 || (t2 += " "), t2 += this.get(e2) ? "X" : ".";
          return t2;
        }
        clone() {
          return new C(this.size, this.bits.slice());
        }
        toArray() {
          let t2 = [];
          for (let e2 = 0, r2 = this.size; e2 < r2; e2++) t2.push(this.get(e2));
          return t2;
        }
      }
      !function(t2) {
        t2[t2.OTHER = 0] = "OTHER", t2[t2.PURE_BARCODE = 1] = "PURE_BARCODE", t2[t2.POSSIBLE_FORMATS = 2] = "POSSIBLE_FORMATS", t2[t2.TRY_HARDER = 3] = "TRY_HARDER", t2[t2.CHARACTER_SET = 4] = "CHARACTER_SET", t2[t2.ALLOWED_LENGTHS = 5] = "ALLOWED_LENGTHS", t2[t2.ASSUME_CODE_39_CHECK_DIGIT = 6] = "ASSUME_CODE_39_CHECK_DIGIT", t2[t2.ENABLE_CODE_39_EXTENDED_MODE = 7] = "ENABLE_CODE_39_EXTENDED_MODE", t2[t2.ASSUME_GS1 = 8] = "ASSUME_GS1", t2[t2.RETURN_CODABAR_START_END = 9] = "RETURN_CODABAR_START_END", t2[t2.NEED_RESULT_POINT_CALLBACK = 10] = "NEED_RESULT_POINT_CALLBACK", t2[t2.ALLOWED_EAN_EXTENSIONS = 11] = "ALLOWED_EAN_EXTENSIONS";
      }(r || (r = {}));
      var A, E = r;
      class m extends s {
        static getFormatInstance() {
          return new m();
        }
      }
      m.kind = "FormatException", function(t2) {
        t2[t2.Cp437 = 0] = "Cp437", t2[t2.ISO8859_1 = 1] = "ISO8859_1", t2[t2.ISO8859_2 = 2] = "ISO8859_2", t2[t2.ISO8859_3 = 3] = "ISO8859_3", t2[t2.ISO8859_4 = 4] = "ISO8859_4", t2[t2.ISO8859_5 = 5] = "ISO8859_5", t2[t2.ISO8859_6 = 6] = "ISO8859_6", t2[t2.ISO8859_7 = 7] = "ISO8859_7", t2[t2.ISO8859_8 = 8] = "ISO8859_8", t2[t2.ISO8859_9 = 9] = "ISO8859_9", t2[t2.ISO8859_10 = 10] = "ISO8859_10", t2[t2.ISO8859_11 = 11] = "ISO8859_11", t2[t2.ISO8859_13 = 12] = "ISO8859_13", t2[t2.ISO8859_14 = 13] = "ISO8859_14", t2[t2.ISO8859_15 = 14] = "ISO8859_15", t2[t2.ISO8859_16 = 15] = "ISO8859_16", t2[t2.SJIS = 16] = "SJIS", t2[t2.Cp1250 = 17] = "Cp1250", t2[t2.Cp1251 = 18] = "Cp1251", t2[t2.Cp1252 = 19] = "Cp1252", t2[t2.Cp1256 = 20] = "Cp1256", t2[t2.UnicodeBigUnmarked = 21] = "UnicodeBigUnmarked", t2[t2.UTF8 = 22] = "UTF8", t2[t2.ASCII = 23] = "ASCII", t2[t2.Big5 = 24] = "Big5", t2[t2.GB18030 = 25] = "GB18030", t2[t2.EUC_KR = 26] = "EUC_KR";
      }(A || (A = {}));
      class I {
        constructor(t2, e2, r2, ...n2) {
          this.valueIdentifier = t2, this.name = r2, this.values = "number" == typeof e2 ? Int32Array.from([e2]) : e2, this.otherEncodingNames = n2, I.VALUE_IDENTIFIER_TO_ECI.set(t2, this), I.NAME_TO_ECI.set(r2, this);
          const i2 = this.values;
          for (let t3 = 0, e3 = i2.length; t3 !== e3; t3++) {
            const e4 = i2[t3];
            I.VALUES_TO_ECI.set(e4, this);
          }
          for (const t3 of n2) I.NAME_TO_ECI.set(t3, this);
        }
        getValueIdentifier() {
          return this.valueIdentifier;
        }
        getName() {
          return this.name;
        }
        getValue() {
          return this.values[0];
        }
        static getCharacterSetECIByValue(t2) {
          if (t2 < 0 || t2 >= 900) throw new m("incorect value");
          const e2 = I.VALUES_TO_ECI.get(t2);
          if (void 0 === e2) throw new m("incorect value");
          return e2;
        }
        static getCharacterSetECIByName(t2) {
          const e2 = I.NAME_TO_ECI.get(t2);
          if (void 0 === e2) throw new m("incorect value");
          return e2;
        }
        equals(t2) {
          if (!(t2 instanceof I)) return false;
          const e2 = t2;
          return this.getName() === e2.getName();
        }
      }
      I.VALUE_IDENTIFIER_TO_ECI = /* @__PURE__ */ new Map(), I.VALUES_TO_ECI = /* @__PURE__ */ new Map(), I.NAME_TO_ECI = /* @__PURE__ */ new Map(), I.Cp437 = new I(A.Cp437, Int32Array.from([0, 2]), "Cp437"), I.ISO8859_1 = new I(A.ISO8859_1, Int32Array.from([1, 3]), "ISO-8859-1", "ISO88591", "ISO8859_1"), I.ISO8859_2 = new I(A.ISO8859_2, 4, "ISO-8859-2", "ISO88592", "ISO8859_2"), I.ISO8859_3 = new I(A.ISO8859_3, 5, "ISO-8859-3", "ISO88593", "ISO8859_3"), I.ISO8859_4 = new I(A.ISO8859_4, 6, "ISO-8859-4", "ISO88594", "ISO8859_4"), I.ISO8859_5 = new I(A.ISO8859_5, 7, "ISO-8859-5", "ISO88595", "ISO8859_5"), I.ISO8859_6 = new I(A.ISO8859_6, 8, "ISO-8859-6", "ISO88596", "ISO8859_6"), I.ISO8859_7 = new I(A.ISO8859_7, 9, "ISO-8859-7", "ISO88597", "ISO8859_7"), I.ISO8859_8 = new I(A.ISO8859_8, 10, "ISO-8859-8", "ISO88598", "ISO8859_8"), I.ISO8859_9 = new I(A.ISO8859_9, 11, "ISO-8859-9", "ISO88599", "ISO8859_9"), I.ISO8859_10 = new I(A.ISO8859_10, 12, "ISO-8859-10", "ISO885910", "ISO8859_10"), I.ISO8859_11 = new I(A.ISO8859_11, 13, "ISO-8859-11", "ISO885911", "ISO8859_11"), I.ISO8859_13 = new I(A.ISO8859_13, 15, "ISO-8859-13", "ISO885913", "ISO8859_13"), I.ISO8859_14 = new I(A.ISO8859_14, 16, "ISO-8859-14", "ISO885914", "ISO8859_14"), I.ISO8859_15 = new I(A.ISO8859_15, 17, "ISO-8859-15", "ISO885915", "ISO8859_15"), I.ISO8859_16 = new I(A.ISO8859_16, 18, "ISO-8859-16", "ISO885916", "ISO8859_16"), I.SJIS = new I(A.SJIS, 20, "SJIS", "Shift_JIS"), I.Cp1250 = new I(A.Cp1250, 21, "Cp1250", "windows-1250"), I.Cp1251 = new I(A.Cp1251, 22, "Cp1251", "windows-1251"), I.Cp1252 = new I(A.Cp1252, 23, "Cp1252", "windows-1252"), I.Cp1256 = new I(A.Cp1256, 24, "Cp1256", "windows-1256"), I.UnicodeBigUnmarked = new I(A.UnicodeBigUnmarked, 25, "UnicodeBigUnmarked", "UTF-16BE", "UnicodeBig"), I.UTF8 = new I(A.UTF8, 26, "UTF8", "UTF-8"), I.ASCII = new I(A.ASCII, Int32Array.from([27, 170]), "ASCII", "US-ASCII"), I.Big5 = new I(A.Big5, 28, "Big5"), I.GB18030 = new I(A.GB18030, 29, "GB18030", "GB2312", "EUC_CN", "GBK"), I.EUC_KR = new I(A.EUC_KR, 30, "EUC_KR", "EUC-KR");
      class _ extends s {
      }
      _.kind = "UnsupportedOperationException";
      class S {
        static decode(t2, e2) {
          const r2 = this.encodingName(e2);
          return this.customDecoder ? this.customDecoder(t2, r2) : "undefined" == typeof TextDecoder || this.shouldDecodeOnFallback(r2) ? this.decodeFallback(t2, r2) : new TextDecoder(r2).decode(t2);
        }
        static shouldDecodeOnFallback(t2) {
          return !S.isBrowser() && "ISO-8859-1" === t2;
        }
        static encode(t2, e2) {
          const r2 = this.encodingName(e2);
          return this.customEncoder ? this.customEncoder(t2, r2) : "undefined" == typeof TextEncoder ? this.encodeFallback(t2) : new TextEncoder().encode(t2);
        }
        static isBrowser() {
          return "undefined" != typeof window && "[object Window]" === {}.toString.call(window);
        }
        static encodingName(t2) {
          return "string" == typeof t2 ? t2 : t2.getName();
        }
        static encodingCharacterSet(t2) {
          return t2 instanceof I ? t2 : I.getCharacterSetECIByName(t2);
        }
        static decodeFallback(t2, e2) {
          const r2 = this.encodingCharacterSet(e2);
          if (S.isDecodeFallbackSupported(r2)) {
            let e3 = "";
            for (let r3 = 0, n2 = t2.length; r3 < n2; r3++) {
              let n3 = t2[r3].toString(16);
              n3.length < 2 && (n3 = "0" + n3), e3 += "%" + n3;
            }
            return decodeURIComponent(e3);
          }
          if (r2.equals(I.UnicodeBigUnmarked)) return String.fromCharCode.apply(null, new Uint16Array(t2.buffer));
          throw new _(`Encoding ${this.encodingName(e2)} not supported by fallback.`);
        }
        static isDecodeFallbackSupported(t2) {
          return t2.equals(I.UTF8) || t2.equals(I.ISO8859_1) || t2.equals(I.ASCII);
        }
        static encodeFallback(t2) {
          const e2 = btoa(unescape(encodeURIComponent(t2))).split(""), r2 = [];
          for (let t3 = 0; t3 < e2.length; t3++) r2.push(e2[t3].charCodeAt(0));
          return new Uint8Array(r2);
        }
      }
      class p {
        static castAsNonUtf8Char(t2, e2 = null) {
          const r2 = e2 ? e2.getName() : this.ISO88591;
          return S.decode(new Uint8Array([t2]), r2);
        }
        static guessEncoding(t2, e2) {
          if (null != e2 && void 0 !== e2.get(E.CHARACTER_SET)) return e2.get(E.CHARACTER_SET).toString();
          const r2 = t2.length;
          let n2 = true, i2 = true, s2 = true, o2 = 0, a2 = 0, h2 = 0, l2 = 0, c2 = 0, d2 = 0, u2 = 0, g2 = 0, f2 = 0, w2 = 0, C2 = 0;
          const A2 = t2.length > 3 && 239 === t2[0] && 187 === t2[1] && 191 === t2[2];
          for (let e3 = 0; e3 < r2 && (n2 || i2 || s2); e3++) {
            const r3 = 255 & t2[e3];
            s2 && (o2 > 0 ? 128 & r3 ? o2-- : s2 = false : 128 & r3 && (64 & r3 ? (o2++, 32 & r3 ? (o2++, 16 & r3 ? (o2++, 8 & r3 ? s2 = false : l2++) : h2++) : a2++) : s2 = false)), n2 && (r3 > 127 && r3 < 160 ? n2 = false : r3 > 159 && (r3 < 192 || 215 === r3 || 247 === r3) && C2++), i2 && (c2 > 0 ? r3 < 64 || 127 === r3 || r3 > 252 ? i2 = false : c2-- : 128 === r3 || 160 === r3 || r3 > 239 ? i2 = false : r3 > 160 && r3 < 224 ? (d2++, g2 = 0, u2++, u2 > f2 && (f2 = u2)) : r3 > 127 ? (c2++, u2 = 0, g2++, g2 > w2 && (w2 = g2)) : (u2 = 0, g2 = 0));
          }
          return s2 && o2 > 0 && (s2 = false), i2 && c2 > 0 && (i2 = false), s2 && (A2 || a2 + h2 + l2 > 0) ? p.UTF8 : i2 && (p.ASSUME_SHIFT_JIS || f2 >= 3 || w2 >= 3) ? p.SHIFT_JIS : n2 && i2 ? 2 === f2 && 2 === d2 || 10 * C2 >= r2 ? p.SHIFT_JIS : p.ISO88591 : n2 ? p.ISO88591 : i2 ? p.SHIFT_JIS : s2 ? p.UTF8 : p.PLATFORM_DEFAULT_ENCODING;
        }
        static format(t2, ...e2) {
          let r2 = -1;
          return t2.replace(/%(-)?(0?[0-9]+)?([.][0-9]+)?([#][0-9]+)?([scfpexd%])/g, function(t3, n2, i2, s2, o2, a2) {
            if ("%%" === t3) return "%";
            if (void 0 === e2[++r2]) return;
            t3 = s2 ? parseInt(s2.substr(1)) : void 0;
            let h2, l2 = o2 ? parseInt(o2.substr(1)) : void 0;
            switch (a2) {
              case "s":
                h2 = e2[r2];
                break;
              case "c":
                h2 = e2[r2][0];
                break;
              case "f":
                h2 = parseFloat(e2[r2]).toFixed(t3);
                break;
              case "p":
                h2 = parseFloat(e2[r2]).toPrecision(t3);
                break;
              case "e":
                h2 = parseFloat(e2[r2]).toExponential(t3);
                break;
              case "x":
                h2 = parseInt(e2[r2]).toString(l2 || 16);
                break;
              case "d":
                h2 = parseFloat(parseInt(e2[r2], l2 || 10).toPrecision(t3)).toFixed(0);
            }
            h2 = "object" == typeof h2 ? JSON.stringify(h2) : (+h2).toString(l2);
            let c2 = parseInt(i2), d2 = i2 && i2[0] + "" == "0" ? "0" : " ";
            for (; h2.length < c2; ) h2 = void 0 !== n2 ? h2 + d2 : d2 + h2;
            return h2;
          });
        }
        static getBytes(t2, e2) {
          return S.encode(t2, e2);
        }
        static getCharCode(t2, e2 = 0) {
          return t2.charCodeAt(e2);
        }
        static getCharAt(t2) {
          return String.fromCharCode(t2);
        }
      }
      p.SHIFT_JIS = I.SJIS.getName(), p.GB2312 = "GB2312", p.ISO88591 = I.ISO8859_1.getName(), p.EUC_JP = "EUC_JP", p.UTF8 = I.UTF8.getName(), p.PLATFORM_DEFAULT_ENCODING = p.UTF8, p.ASSUME_SHIFT_JIS = false;
      class T {
        constructor(t2 = "") {
          this.value = t2;
        }
        enableDecoding(t2) {
          return this.encoding = t2, this;
        }
        append(t2) {
          return "string" == typeof t2 ? this.value += t2.toString() : this.encoding ? this.value += p.castAsNonUtf8Char(t2, this.encoding) : this.value += String.fromCharCode(t2), this;
        }
        appendChars(t2, e2, r2) {
          for (let n2 = e2; e2 < e2 + r2; n2++) this.append(t2[n2]);
          return this;
        }
        length() {
          return this.value.length;
        }
        charAt(t2) {
          return this.value.charAt(t2);
        }
        deleteCharAt(t2) {
          this.value = this.value.substr(0, t2) + this.value.substring(t2 + 1);
        }
        setCharAt(t2, e2) {
          this.value = this.value.substr(0, t2) + e2 + this.value.substr(t2 + 1);
        }
        substring(t2, e2) {
          return this.value.substring(t2, e2);
        }
        setLengthToZero() {
          this.value = "";
        }
        toString() {
          return this.value;
        }
        insert(t2, e2) {
          this.value = this.value.substring(0, t2) + e2 + this.value.substring(t2);
        }
      }
      class R {
        constructor(t2, e2, r2, n2) {
          if (this.width = t2, this.height = e2, this.rowSize = r2, this.bits = n2, null == e2 && (e2 = t2), this.height = e2, t2 < 1 || e2 < 1) throw new a("Both dimensions must be greater than 0");
          null == r2 && (r2 = Math.floor((t2 + 31) / 32)), this.rowSize = r2, null == n2 && (this.bits = new Int32Array(this.rowSize * this.height));
        }
        static parseFromBooleanArray(t2) {
          const e2 = t2.length, r2 = t2[0].length, n2 = new R(r2, e2);
          for (let i2 = 0; i2 < e2; i2++) {
            const e3 = t2[i2];
            for (let t3 = 0; t3 < r2; t3++) e3[t3] && n2.set(t3, i2);
          }
          return n2;
        }
        static parseFromString(t2, e2, r2) {
          if (null === t2) throw new a("stringRepresentation cannot be null");
          const n2 = new Array(t2.length);
          let i2 = 0, s2 = 0, o2 = -1, h2 = 0, l2 = 0;
          for (; l2 < t2.length; ) if ("\n" === t2.charAt(l2) || "\r" === t2.charAt(l2)) {
            if (i2 > s2) {
              if (-1 === o2) o2 = i2 - s2;
              else if (i2 - s2 !== o2) throw new a("row lengths do not match");
              s2 = i2, h2++;
            }
            l2++;
          } else if (t2.substring(l2, l2 + e2.length) === e2) l2 += e2.length, n2[i2] = true, i2++;
          else {
            if (t2.substring(l2, l2 + r2.length) !== r2) throw new a("illegal character encountered: " + t2.substring(l2));
            l2 += r2.length, n2[i2] = false, i2++;
          }
          if (i2 > s2) {
            if (-1 === o2) o2 = i2 - s2;
            else if (i2 - s2 !== o2) throw new a("row lengths do not match");
            h2++;
          }
          const c2 = new R(o2, h2);
          for (let t3 = 0; t3 < i2; t3++) n2[t3] && c2.set(Math.floor(t3 % o2), Math.floor(t3 / o2));
          return c2;
        }
        get(t2, e2) {
          const r2 = e2 * this.rowSize + Math.floor(t2 / 32);
          return !!(this.bits[r2] >>> (31 & t2) & 1);
        }
        set(t2, e2) {
          const r2 = e2 * this.rowSize + Math.floor(t2 / 32);
          this.bits[r2] |= 1 << (31 & t2) & 4294967295;
        }
        unset(t2, e2) {
          const r2 = e2 * this.rowSize + Math.floor(t2 / 32);
          this.bits[r2] &= ~(1 << (31 & t2) & 4294967295);
        }
        flip(t2, e2) {
          const r2 = e2 * this.rowSize + Math.floor(t2 / 32);
          this.bits[r2] ^= 1 << (31 & t2) & 4294967295;
        }
        xor(t2) {
          if (this.width !== t2.getWidth() || this.height !== t2.getHeight() || this.rowSize !== t2.getRowSize()) throw new a("input matrix dimensions do not match");
          const e2 = new C(Math.floor(this.width / 32) + 1), r2 = this.rowSize, n2 = this.bits;
          for (let i2 = 0, s2 = this.height; i2 < s2; i2++) {
            const s3 = i2 * r2, o2 = t2.getRow(i2, e2).getBitArray();
            for (let t3 = 0; t3 < r2; t3++) n2[s3 + t3] ^= o2[t3];
          }
        }
        clear() {
          const t2 = this.bits, e2 = t2.length;
          for (let r2 = 0; r2 < e2; r2++) t2[r2] = 0;
        }
        setRegion(t2, e2, r2, n2) {
          if (e2 < 0 || t2 < 0) throw new a("Left and top must be nonnegative");
          if (n2 < 1 || r2 < 1) throw new a("Height and width must be at least 1");
          const i2 = t2 + r2, s2 = e2 + n2;
          if (s2 > this.height || i2 > this.width) throw new a("The region must fit inside the matrix");
          const o2 = this.rowSize, h2 = this.bits;
          for (let r3 = e2; r3 < s2; r3++) {
            const e3 = r3 * o2;
            for (let r4 = t2; r4 < i2; r4++) h2[e3 + Math.floor(r4 / 32)] |= 1 << (31 & r4) & 4294967295;
          }
        }
        getRow(t2, e2) {
          null == e2 || e2.getSize() < this.width ? e2 = new C(this.width) : e2.clear();
          const r2 = this.rowSize, n2 = this.bits, i2 = t2 * r2;
          for (let t3 = 0; t3 < r2; t3++) e2.setBulk(32 * t3, n2[i2 + t3]);
          return e2;
        }
        setRow(t2, e2) {
          d.arraycopy(e2.getBitArray(), 0, this.bits, t2 * this.rowSize, this.rowSize);
        }
        rotate180() {
          const t2 = this.getWidth(), e2 = this.getHeight();
          let r2 = new C(t2), n2 = new C(t2);
          for (let t3 = 0, i2 = Math.floor((e2 + 1) / 2); t3 < i2; t3++) r2 = this.getRow(t3, r2), n2 = this.getRow(e2 - 1 - t3, n2), r2.reverse(), n2.reverse(), this.setRow(t3, n2), this.setRow(e2 - 1 - t3, r2);
        }
        getEnclosingRectangle() {
          const t2 = this.width, e2 = this.height, r2 = this.rowSize, n2 = this.bits;
          let i2 = t2, s2 = e2, o2 = -1, a2 = -1;
          for (let t3 = 0; t3 < e2; t3++) for (let e3 = 0; e3 < r2; e3++) {
            const h2 = n2[t3 * r2 + e3];
            if (0 !== h2) {
              if (t3 < s2 && (s2 = t3), t3 > a2 && (a2 = t3), 32 * e3 < i2) {
                let t4 = 0;
                for (; !(h2 << 31 - t4 & 4294967295); ) t4++;
                32 * e3 + t4 < i2 && (i2 = 32 * e3 + t4);
              }
              if (32 * e3 + 31 > o2) {
                let t4 = 31;
                for (; h2 >>> t4 == 0; ) t4--;
                32 * e3 + t4 > o2 && (o2 = 32 * e3 + t4);
              }
            }
          }
          return o2 < i2 || a2 < s2 ? null : Int32Array.from([i2, s2, o2 - i2 + 1, a2 - s2 + 1]);
        }
        getTopLeftOnBit() {
          const t2 = this.rowSize, e2 = this.bits;
          let r2 = 0;
          for (; r2 < e2.length && 0 === e2[r2]; ) r2++;
          if (r2 === e2.length) return null;
          const n2 = r2 / t2;
          let i2 = r2 % t2 * 32;
          const s2 = e2[r2];
          let o2 = 0;
          for (; !(s2 << 31 - o2 & 4294967295); ) o2++;
          return i2 += o2, Int32Array.from([i2, n2]);
        }
        getBottomRightOnBit() {
          const t2 = this.rowSize, e2 = this.bits;
          let r2 = e2.length - 1;
          for (; r2 >= 0 && 0 === e2[r2]; ) r2--;
          if (r2 < 0) return null;
          const n2 = Math.floor(r2 / t2);
          let i2 = 32 * Math.floor(r2 % t2);
          const s2 = e2[r2];
          let o2 = 31;
          for (; s2 >>> o2 == 0; ) o2--;
          return i2 += o2, Int32Array.from([i2, n2]);
        }
        getWidth() {
          return this.width;
        }
        getHeight() {
          return this.height;
        }
        getRowSize() {
          return this.rowSize;
        }
        equals(t2) {
          if (!(t2 instanceof R)) return false;
          const e2 = t2;
          return this.width === e2.width && this.height === e2.height && this.rowSize === e2.rowSize && f.equals(this.bits, e2.bits);
        }
        hashCode() {
          let t2 = this.width;
          return t2 = 31 * t2 + this.width, t2 = 31 * t2 + this.height, t2 = 31 * t2 + this.rowSize, t2 = 31 * t2 + f.hashCode(this.bits), t2;
        }
        toString(t2 = "X ", e2 = "  ", r2 = "\n") {
          return this.buildToString(t2, e2, r2);
        }
        buildToString(t2, e2, r2) {
          let n2 = new T();
          for (let i2 = 0, s2 = this.height; i2 < s2; i2++) {
            for (let r3 = 0, s3 = this.width; r3 < s3; r3++) n2.append(this.get(r3, i2) ? t2 : e2);
            n2.append(r2);
          }
          return n2.toString();
        }
        clone() {
          return new R(this.width, this.height, this.rowSize, this.bits.slice());
        }
      }
      class N extends s {
        static getNotFoundInstance() {
          return new N();
        }
      }
      N.kind = "NotFoundException";
      class y extends c {
        constructor(t2) {
          super(t2), this.luminances = y.EMPTY, this.buckets = new Int32Array(y.LUMINANCE_BUCKETS);
        }
        getBlackRow(t2, e2) {
          const r2 = this.getLuminanceSource(), n2 = r2.getWidth();
          null == e2 || e2.getSize() < n2 ? e2 = new C(n2) : e2.clear(), this.initArrays(n2);
          const i2 = r2.getRow(t2, this.luminances), s2 = this.buckets;
          for (let t3 = 0; t3 < n2; t3++) s2[(255 & i2[t3]) >> y.LUMINANCE_SHIFT]++;
          const o2 = y.estimateBlackPoint(s2);
          if (n2 < 3) for (let t3 = 0; t3 < n2; t3++) (255 & i2[t3]) < o2 && e2.set(t3);
          else {
            let t3 = 255 & i2[0], r3 = 255 & i2[1];
            for (let s3 = 1; s3 < n2 - 1; s3++) {
              const n3 = 255 & i2[s3 + 1];
              (4 * r3 - t3 - n3) / 2 < o2 && e2.set(s3), t3 = r3, r3 = n3;
            }
          }
          return e2;
        }
        getBlackMatrix() {
          const t2 = this.getLuminanceSource(), e2 = t2.getWidth(), r2 = t2.getHeight(), n2 = new R(e2, r2);
          this.initArrays(e2);
          const i2 = this.buckets;
          for (let n3 = 1; n3 < 5; n3++) {
            const s3 = Math.floor(r2 * n3 / 5), o3 = t2.getRow(s3, this.luminances), a2 = Math.floor(4 * e2 / 5);
            for (let t3 = Math.floor(e2 / 5); t3 < a2; t3++) {
              i2[(255 & o3[t3]) >> y.LUMINANCE_SHIFT]++;
            }
          }
          const s2 = y.estimateBlackPoint(i2), o2 = t2.getMatrix();
          for (let t3 = 0; t3 < r2; t3++) {
            const r3 = t3 * e2;
            for (let i3 = 0; i3 < e2; i3++) {
              (255 & o2[r3 + i3]) < s2 && n2.set(i3, t3);
            }
          }
          return n2;
        }
        createBinarizer(t2) {
          return new y(t2);
        }
        initArrays(t2) {
          this.luminances.length < t2 && (this.luminances = new Uint8ClampedArray(t2));
          const e2 = this.buckets;
          for (let t3 = 0; t3 < y.LUMINANCE_BUCKETS; t3++) e2[t3] = 0;
        }
        static estimateBlackPoint(t2) {
          const e2 = t2.length;
          let r2 = 0, n2 = 0, i2 = 0;
          for (let s3 = 0; s3 < e2; s3++) t2[s3] > i2 && (n2 = s3, i2 = t2[s3]), t2[s3] > r2 && (r2 = t2[s3]);
          let s2 = 0, o2 = 0;
          for (let r3 = 0; r3 < e2; r3++) {
            const e3 = r3 - n2, i3 = t2[r3] * e3 * e3;
            i3 > o2 && (s2 = r3, o2 = i3);
          }
          if (n2 > s2) {
            const t3 = n2;
            n2 = s2, s2 = t3;
          }
          if (s2 - n2 <= e2 / 16) throw new N();
          let a2 = s2 - 1, h2 = -1;
          for (let e3 = s2 - 1; e3 > n2; e3--) {
            const i3 = e3 - n2, o3 = i3 * i3 * (s2 - e3) * (r2 - t2[e3]);
            o3 > h2 && (a2 = e3, h2 = o3);
          }
          return a2 << y.LUMINANCE_SHIFT;
        }
      }
      y.LUMINANCE_BITS = 5, y.LUMINANCE_SHIFT = 8 - y.LUMINANCE_BITS, y.LUMINANCE_BUCKETS = 1 << y.LUMINANCE_BITS, y.EMPTY = Uint8ClampedArray.from([0]);
      class D extends y {
        constructor(t2) {
          super(t2), this.matrix = null;
        }
        getBlackMatrix() {
          if (null !== this.matrix) return this.matrix;
          const t2 = this.getLuminanceSource(), e2 = t2.getWidth(), r2 = t2.getHeight();
          if (e2 >= D.MINIMUM_DIMENSION && r2 >= D.MINIMUM_DIMENSION) {
            const n2 = t2.getMatrix();
            let i2 = e2 >> D.BLOCK_SIZE_POWER;
            e2 & D.BLOCK_SIZE_MASK && i2++;
            let s2 = r2 >> D.BLOCK_SIZE_POWER;
            r2 & D.BLOCK_SIZE_MASK && s2++;
            const o2 = D.calculateBlackPoints(n2, i2, s2, e2, r2), a2 = new R(e2, r2);
            D.calculateThresholdForBlock(n2, i2, s2, e2, r2, o2, a2), this.matrix = a2;
          } else this.matrix = super.getBlackMatrix();
          return this.matrix;
        }
        createBinarizer(t2) {
          return new D(t2);
        }
        static calculateThresholdForBlock(t2, e2, r2, n2, i2, s2, o2) {
          const a2 = i2 - D.BLOCK_SIZE, h2 = n2 - D.BLOCK_SIZE;
          for (let i3 = 0; i3 < r2; i3++) {
            let l2 = i3 << D.BLOCK_SIZE_POWER;
            l2 > a2 && (l2 = a2);
            const c2 = D.cap(i3, 2, r2 - 3);
            for (let r3 = 0; r3 < e2; r3++) {
              let i4 = r3 << D.BLOCK_SIZE_POWER;
              i4 > h2 && (i4 = h2);
              const a3 = D.cap(r3, 2, e2 - 3);
              let d2 = 0;
              for (let t3 = -2; t3 <= 2; t3++) {
                const e3 = s2[c2 + t3];
                d2 += e3[a3 - 2] + e3[a3 - 1] + e3[a3] + e3[a3 + 1] + e3[a3 + 2];
              }
              const u2 = d2 / 25;
              D.thresholdBlock(t2, i4, l2, u2, n2, o2);
            }
          }
        }
        static cap(t2, e2, r2) {
          return t2 < e2 ? e2 : t2 > r2 ? r2 : t2;
        }
        static thresholdBlock(t2, e2, r2, n2, i2, s2) {
          for (let o2 = 0, a2 = r2 * i2 + e2; o2 < D.BLOCK_SIZE; o2++, a2 += i2) for (let i3 = 0; i3 < D.BLOCK_SIZE; i3++) (255 & t2[a2 + i3]) <= n2 && s2.set(e2 + i3, r2 + o2);
        }
        static calculateBlackPoints(t2, e2, r2, n2, i2) {
          const s2 = i2 - D.BLOCK_SIZE, o2 = n2 - D.BLOCK_SIZE, a2 = new Array(r2);
          for (let i3 = 0; i3 < r2; i3++) {
            a2[i3] = new Int32Array(e2);
            let r3 = i3 << D.BLOCK_SIZE_POWER;
            r3 > s2 && (r3 = s2);
            for (let s3 = 0; s3 < e2; s3++) {
              let e3 = s3 << D.BLOCK_SIZE_POWER;
              e3 > o2 && (e3 = o2);
              let h2 = 0, l2 = 255, c2 = 0;
              for (let i4 = 0, s4 = r3 * n2 + e3; i4 < D.BLOCK_SIZE; i4++, s4 += n2) {
                for (let e4 = 0; e4 < D.BLOCK_SIZE; e4++) {
                  const r4 = 255 & t2[s4 + e4];
                  h2 += r4, r4 < l2 && (l2 = r4), r4 > c2 && (c2 = r4);
                }
                if (c2 - l2 > D.MIN_DYNAMIC_RANGE) for (i4++, s4 += n2; i4 < D.BLOCK_SIZE; i4++, s4 += n2) for (let e4 = 0; e4 < D.BLOCK_SIZE; e4++) h2 += 255 & t2[s4 + e4];
              }
              let d2 = h2 >> 2 * D.BLOCK_SIZE_POWER;
              if (c2 - l2 <= D.MIN_DYNAMIC_RANGE && (d2 = l2 / 2, i3 > 0 && s3 > 0)) {
                const t3 = (a2[i3 - 1][s3] + 2 * a2[i3][s3 - 1] + a2[i3 - 1][s3 - 1]) / 4;
                l2 < t3 && (d2 = t3);
              }
              a2[i3][s3] = d2;
            }
          }
          return a2;
        }
      }
      D.BLOCK_SIZE_POWER = 3, D.BLOCK_SIZE = 1 << D.BLOCK_SIZE_POWER, D.BLOCK_SIZE_MASK = D.BLOCK_SIZE - 1, D.MINIMUM_DIMENSION = 5 * D.BLOCK_SIZE, D.MIN_DYNAMIC_RANGE = 24;
      class O {
        constructor(t2, e2) {
          this.width = t2, this.height = e2;
        }
        getWidth() {
          return this.width;
        }
        getHeight() {
          return this.height;
        }
        isCropSupported() {
          return false;
        }
        crop(t2, e2, r2, n2) {
          throw new _("This luminance source does not support cropping.");
        }
        isRotateSupported() {
          return false;
        }
        rotateCounterClockwise() {
          throw new _("This luminance source does not support rotation by 90 degrees.");
        }
        rotateCounterClockwise45() {
          throw new _("This luminance source does not support rotation by 45 degrees.");
        }
        toString() {
          const t2 = new Uint8ClampedArray(this.width);
          let e2 = new T();
          for (let r2 = 0; r2 < this.height; r2++) {
            const n2 = this.getRow(r2, t2);
            for (let t3 = 0; t3 < this.width; t3++) {
              const r3 = 255 & n2[t3];
              let i2;
              i2 = r3 < 64 ? "#" : r3 < 128 ? "+" : r3 < 192 ? "." : " ", e2.append(i2);
            }
            e2.append("\n");
          }
          return e2.toString();
        }
      }
      class M extends O {
        constructor(t2) {
          super(t2.getWidth(), t2.getHeight()), this.delegate = t2;
        }
        getRow(t2, e2) {
          const r2 = this.delegate.getRow(t2, e2), n2 = this.getWidth();
          for (let t3 = 0; t3 < n2; t3++) r2[t3] = 255 - (255 & r2[t3]);
          return r2;
        }
        getMatrix() {
          const t2 = this.delegate.getMatrix(), e2 = this.getWidth() * this.getHeight(), r2 = new Uint8ClampedArray(e2);
          for (let n2 = 0; n2 < e2; n2++) r2[n2] = 255 - (255 & t2[n2]);
          return r2;
        }
        isCropSupported() {
          return this.delegate.isCropSupported();
        }
        crop(t2, e2, r2, n2) {
          return new M(this.delegate.crop(t2, e2, r2, n2));
        }
        isRotateSupported() {
          return this.delegate.isRotateSupported();
        }
        invert() {
          return this.delegate;
        }
        rotateCounterClockwise() {
          return new M(this.delegate.rotateCounterClockwise());
        }
        rotateCounterClockwise45() {
          return new M(this.delegate.rotateCounterClockwise45());
        }
      }
      class b extends O {
        constructor(t2, e2 = false) {
          super(t2.width, t2.height), this.canvas = t2, this.tempCanvasElement = null, this.buffer = b.makeBufferFromCanvasImageData(t2, e2);
        }
        static makeBufferFromCanvasImageData(t2, e2 = false) {
          const r2 = t2.getContext("2d").getImageData(0, 0, t2.width, t2.height);
          return b.toGrayscaleBuffer(r2.data, t2.width, t2.height, e2);
        }
        static toGrayscaleBuffer(t2, e2, r2, n2 = false) {
          const i2 = new Uint8ClampedArray(e2 * r2);
          if (b.FRAME_INDEX = !b.FRAME_INDEX, b.FRAME_INDEX || !n2) for (let e3 = 0, r3 = 0, n3 = t2.length; e3 < n3; e3 += 4, r3++) {
            let n4;
            if (0 === t2[e3 + 3]) n4 = 255;
            else {
              n4 = 306 * t2[e3] + 601 * t2[e3 + 1] + 117 * t2[e3 + 2] + 512 >> 10;
            }
            i2[r3] = n4;
          }
          else for (let e3 = 0, r3 = 0, n3 = t2.length; e3 < n3; e3 += 4, r3++) {
            let n4;
            if (0 === t2[e3 + 3]) n4 = 255;
            else {
              n4 = 306 * t2[e3] + 601 * t2[e3 + 1] + 117 * t2[e3 + 2] + 512 >> 10;
            }
            i2[r3] = 255 - n4;
          }
          return i2;
        }
        getRow(t2, e2) {
          if (t2 < 0 || t2 >= this.getHeight()) throw new a("Requested row is outside the image: " + t2);
          const r2 = this.getWidth(), n2 = t2 * r2;
          return null === e2 ? e2 = this.buffer.slice(n2, n2 + r2) : (e2.length < r2 && (e2 = new Uint8ClampedArray(r2)), e2.set(this.buffer.slice(n2, n2 + r2))), e2;
        }
        getMatrix() {
          return this.buffer;
        }
        isCropSupported() {
          return true;
        }
        crop(t2, e2, r2, n2) {
          return super.crop(t2, e2, r2, n2), this;
        }
        isRotateSupported() {
          return true;
        }
        rotateCounterClockwise() {
          return this.rotate(-90), this;
        }
        rotateCounterClockwise45() {
          return this.rotate(-45), this;
        }
        getTempCanvasElement() {
          if (null === this.tempCanvasElement) {
            const t2 = this.canvas.ownerDocument.createElement("canvas");
            t2.width = this.canvas.width, t2.height = this.canvas.height, this.tempCanvasElement = t2;
          }
          return this.tempCanvasElement;
        }
        rotate(t2) {
          const e2 = this.getTempCanvasElement(), r2 = e2.getContext("2d"), n2 = t2 * b.DEGREE_TO_RADIANS, i2 = this.canvas.width, s2 = this.canvas.height, o2 = Math.ceil(Math.abs(Math.cos(n2)) * i2 + Math.abs(Math.sin(n2)) * s2), a2 = Math.ceil(Math.abs(Math.sin(n2)) * i2 + Math.abs(Math.cos(n2)) * s2);
          return e2.width = o2, e2.height = a2, r2.translate(o2 / 2, a2 / 2), r2.rotate(n2), r2.drawImage(this.canvas, i2 / -2, s2 / -2), this.buffer = b.makeBufferFromCanvasImageData(e2), this;
        }
        invert() {
          return new M(this);
        }
      }
      b.DEGREE_TO_RADIANS = Math.PI / 180, b.FRAME_INDEX = true;
      class B {
        constructor(t2, e2, r2) {
          this.deviceId = t2, this.label = e2, this.kind = "videoinput", this.groupId = r2 || void 0;
        }
        toJSON() {
          return { kind: this.kind, groupId: this.groupId, deviceId: this.deviceId, label: this.label };
        }
      }
      var P, L = (globalThis || global || self || window ? (globalThis || global || self || window || void 0).__awaiter : void 0) || function(t2, e2, r2, n2) {
        return new (r2 || (r2 = Promise))(function(i2, s2) {
          function o2(t3) {
            try {
              h2(n2.next(t3));
            } catch (t4) {
              s2(t4);
            }
          }
          function a2(t3) {
            try {
              h2(n2.throw(t3));
            } catch (t4) {
              s2(t4);
            }
          }
          function h2(t3) {
            var e3;
            t3.done ? i2(t3.value) : (e3 = t3.value, e3 instanceof r2 ? e3 : new r2(function(t4) {
              t4(e3);
            })).then(o2, a2);
          }
          h2((n2 = n2.apply(t2, e2 || [])).next());
        });
      };
      class F {
        constructor(t2, e2 = 500, r2) {
          this.reader = t2, this.timeBetweenScansMillis = e2, this._hints = r2, this._stopContinuousDecode = false, this._stopAsyncDecode = false, this._timeBetweenDecodingAttempts = 0;
        }
        get hasNavigator() {
          return "undefined" != typeof navigator;
        }
        get isMediaDevicesSuported() {
          return this.hasNavigator && !!navigator.mediaDevices;
        }
        get canEnumerateDevices() {
          return !(!this.isMediaDevicesSuported || !navigator.mediaDevices.enumerateDevices);
        }
        get timeBetweenDecodingAttempts() {
          return this._timeBetweenDecodingAttempts;
        }
        set timeBetweenDecodingAttempts(t2) {
          this._timeBetweenDecodingAttempts = t2 < 0 ? 0 : t2;
        }
        set hints(t2) {
          this._hints = t2 || null;
        }
        get hints() {
          return this._hints;
        }
        listVideoInputDevices() {
          return L(this, void 0, void 0, function* () {
            if (!this.hasNavigator) throw new Error("Can't enumerate devices, navigator is not present.");
            if (!this.canEnumerateDevices) throw new Error("Can't enumerate devices, method not supported.");
            const t2 = yield navigator.mediaDevices.enumerateDevices(), e2 = [];
            for (const r2 of t2) {
              const t3 = "video" === r2.kind ? "videoinput" : r2.kind;
              if ("videoinput" !== t3) continue;
              const n2 = { deviceId: r2.deviceId || r2.id, label: r2.label || `Video device ${e2.length + 1}`, kind: t3, groupId: r2.groupId };
              e2.push(n2);
            }
            return e2;
          });
        }
        getVideoInputDevices() {
          return L(this, void 0, void 0, function* () {
            return (yield this.listVideoInputDevices()).map((t2) => new B(t2.deviceId, t2.label));
          });
        }
        findDeviceById(t2) {
          return L(this, void 0, void 0, function* () {
            const e2 = yield this.listVideoInputDevices();
            return e2 ? e2.find((e3) => e3.deviceId === t2) : null;
          });
        }
        decodeFromInputVideoDevice(t2, e2) {
          return L(this, void 0, void 0, function* () {
            return yield this.decodeOnceFromVideoDevice(t2, e2);
          });
        }
        decodeOnceFromVideoDevice(t2, e2) {
          return L(this, void 0, void 0, function* () {
            let r2;
            this.reset(), r2 = t2 ? { deviceId: { exact: t2 } } : { facingMode: "environment" };
            const n2 = { video: r2 };
            return yield this.decodeOnceFromConstraints(n2, e2);
          });
        }
        decodeOnceFromConstraints(t2, e2) {
          return L(this, void 0, void 0, function* () {
            const r2 = yield navigator.mediaDevices.getUserMedia(t2);
            return yield this.decodeOnceFromStream(r2, e2);
          });
        }
        decodeOnceFromStream(t2, e2) {
          return L(this, void 0, void 0, function* () {
            this.reset();
            const r2 = yield this.attachStreamToVideo(t2, e2);
            return yield this.decodeOnce(r2);
          });
        }
        decodeFromInputVideoDeviceContinuously(t2, e2, r2) {
          return L(this, void 0, void 0, function* () {
            return yield this.decodeFromVideoDevice(t2, e2, r2);
          });
        }
        decodeFromVideoDevice(t2, e2, r2) {
          return L(this, void 0, void 0, function* () {
            let n2;
            n2 = t2 ? { deviceId: { exact: t2 } } : { facingMode: "environment" };
            const i2 = { video: n2 };
            return yield this.decodeFromConstraints(i2, e2, r2);
          });
        }
        decodeFromConstraints(t2, e2, r2) {
          return L(this, void 0, void 0, function* () {
            const n2 = yield navigator.mediaDevices.getUserMedia(t2);
            return yield this.decodeFromStream(n2, e2, r2);
          });
        }
        decodeFromStream(t2, e2, r2) {
          return L(this, void 0, void 0, function* () {
            this.reset();
            const n2 = yield this.attachStreamToVideo(t2, e2);
            return yield this.decodeContinuously(n2, r2);
          });
        }
        stopAsyncDecode() {
          this._stopAsyncDecode = true;
        }
        stopContinuousDecode() {
          this._stopContinuousDecode = true;
        }
        attachStreamToVideo(t2, e2) {
          return L(this, void 0, void 0, function* () {
            const r2 = this.prepareVideoElement(e2);
            return this.addVideoSource(r2, t2), this.videoElement = r2, this.stream = t2, yield this.playVideoOnLoadAsync(r2), r2;
          });
        }
        playVideoOnLoadAsync(t2) {
          return new Promise((e2, r2) => this.playVideoOnLoad(t2, () => e2()));
        }
        playVideoOnLoad(t2, e2) {
          this.videoEndedListener = () => this.stopStreams(), this.videoCanPlayListener = () => this.tryPlayVideo(t2), t2.addEventListener("ended", this.videoEndedListener), t2.addEventListener("canplay", this.videoCanPlayListener), t2.addEventListener("playing", e2), this.tryPlayVideo(t2);
        }
        isVideoPlaying(t2) {
          return t2.currentTime > 0 && !t2.paused && !t2.ended && t2.readyState > 2;
        }
        tryPlayVideo(t2) {
          return L(this, void 0, void 0, function* () {
            if (this.isVideoPlaying(t2)) console.warn("Trying to play video that is already playing.");
            else try {
              yield t2.play();
            } catch (t3) {
              console.warn("It was not possible to play the video.");
            }
          });
        }
        getMediaElement(t2, e2) {
          const r2 = document.getElementById(t2);
          if (!r2) throw new o(`element with id '${t2}' not found`);
          if (r2.nodeName.toLowerCase() !== e2.toLowerCase()) throw new o(`element with id '${t2}' must be an ${e2} element`);
          return r2;
        }
        decodeFromImage(t2, e2) {
          if (!t2 && !e2) throw new o("either imageElement with a src set or an url must be provided");
          return e2 && !t2 ? this.decodeFromImageUrl(e2) : this.decodeFromImageElement(t2);
        }
        decodeFromVideo(t2, e2) {
          if (!t2 && !e2) throw new o("Either an element with a src set or an URL must be provided");
          return e2 && !t2 ? this.decodeFromVideoUrl(e2) : this.decodeFromVideoElement(t2);
        }
        decodeFromVideoContinuously(t2, e2, r2) {
          if (void 0 === t2 && void 0 === e2) throw new o("Either an element with a src set or an URL must be provided");
          return e2 && !t2 ? this.decodeFromVideoUrlContinuously(e2, r2) : this.decodeFromVideoElementContinuously(t2, r2);
        }
        decodeFromImageElement(t2) {
          if (!t2) throw new o("An image element must be provided.");
          this.reset();
          const e2 = this.prepareImageElement(t2);
          let r2;
          return this.imageElement = e2, r2 = this.isImageLoaded(e2) ? this.decodeOnce(e2, false, true) : this._decodeOnLoadImage(e2), r2;
        }
        decodeFromVideoElement(t2) {
          const e2 = this._decodeFromVideoElementSetup(t2);
          return this._decodeOnLoadVideo(e2);
        }
        decodeFromVideoElementContinuously(t2, e2) {
          const r2 = this._decodeFromVideoElementSetup(t2);
          return this._decodeOnLoadVideoContinuously(r2, e2);
        }
        _decodeFromVideoElementSetup(t2) {
          if (!t2) throw new o("A video element must be provided.");
          this.reset();
          const e2 = this.prepareVideoElement(t2);
          return this.videoElement = e2, e2;
        }
        decodeFromImageUrl(t2) {
          if (!t2) throw new o("An URL must be provided.");
          this.reset();
          const e2 = this.prepareImageElement();
          this.imageElement = e2;
          const r2 = this._decodeOnLoadImage(e2);
          return e2.src = t2, r2;
        }
        decodeFromVideoUrl(t2) {
          if (!t2) throw new o("An URL must be provided.");
          this.reset();
          const e2 = this.prepareVideoElement(), r2 = this.decodeFromVideoElement(e2);
          return e2.src = t2, r2;
        }
        decodeFromVideoUrlContinuously(t2, e2) {
          if (!t2) throw new o("An URL must be provided.");
          this.reset();
          const r2 = this.prepareVideoElement(), n2 = this.decodeFromVideoElementContinuously(r2, e2);
          return r2.src = t2, n2;
        }
        _decodeOnLoadImage(t2) {
          return new Promise((e2, r2) => {
            this.imageLoadedListener = () => this.decodeOnce(t2, false, true).then(e2, r2), t2.addEventListener("load", this.imageLoadedListener);
          });
        }
        _decodeOnLoadVideo(t2) {
          return L(this, void 0, void 0, function* () {
            return yield this.playVideoOnLoadAsync(t2), yield this.decodeOnce(t2);
          });
        }
        _decodeOnLoadVideoContinuously(t2, e2) {
          return L(this, void 0, void 0, function* () {
            yield this.playVideoOnLoadAsync(t2), this.decodeContinuously(t2, e2);
          });
        }
        isImageLoaded(t2) {
          return !!t2.complete && 0 !== t2.naturalWidth;
        }
        prepareImageElement(t2) {
          let e2;
          return void 0 === t2 && (e2 = document.createElement("img"), e2.width = 200, e2.height = 200), "string" == typeof t2 && (e2 = this.getMediaElement(t2, "img")), t2 instanceof HTMLImageElement && (e2 = t2), e2;
        }
        prepareVideoElement(t2) {
          let e2;
          return t2 || "undefined" == typeof document || (e2 = document.createElement("video"), e2.width = 200, e2.height = 200), "string" == typeof t2 && (e2 = this.getMediaElement(t2, "video")), t2 instanceof HTMLVideoElement && (e2 = t2), e2.setAttribute("autoplay", "true"), e2.setAttribute("muted", "true"), e2.setAttribute("playsinline", "true"), e2;
        }
        decodeOnce(t2, e2 = true, r2 = true) {
          this._stopAsyncDecode = false;
          const n2 = (i2, s2) => {
            if (this._stopAsyncDecode) return s2(new N("Video stream has ended before any code could be detected.")), void (this._stopAsyncDecode = void 0);
            try {
              i2(this.decode(t2));
            } catch (t3) {
              if (e2 && t3 instanceof N || (t3 instanceof l || t3 instanceof m) && r2) return setTimeout(n2, this._timeBetweenDecodingAttempts, i2, s2);
              s2(t3);
            }
          };
          return new Promise((t3, e3) => n2(t3, e3));
        }
        decodeContinuously(t2, e2) {
          this._stopContinuousDecode = false;
          const r2 = () => {
            if (this._stopContinuousDecode) this._stopContinuousDecode = void 0;
            else try {
              const n2 = this.decode(t2);
              e2(n2, null), setTimeout(r2, this.timeBetweenScansMillis);
            } catch (t3) {
              e2(null, t3);
              (t3 instanceof l || t3 instanceof m || t3 instanceof N) && setTimeout(r2, this._timeBetweenDecodingAttempts);
            }
          };
          r2();
        }
        decode(t2) {
          const e2 = this.createBinaryBitmap(t2);
          return this.decodeBitmap(e2);
        }
        createBinaryBitmap(t2) {
          this.getCaptureCanvasContext(t2);
          let e2 = false;
          t2 instanceof HTMLVideoElement ? (this.drawFrameOnCanvas(t2), e2 = true) : this.drawImageOnCanvas(t2);
          const r2 = this.getCaptureCanvas(t2), n2 = new b(r2, e2), i2 = new D(n2);
          return new h(i2);
        }
        getCaptureCanvasContext(t2) {
          if (!this.captureCanvasContext) {
            const e2 = this.getCaptureCanvas(t2);
            let r2;
            try {
              r2 = e2.getContext("2d", { willReadFrequently: true });
            } catch (t3) {
              r2 = e2.getContext("2d");
            }
            this.captureCanvasContext = r2;
          }
          return this.captureCanvasContext;
        }
        getCaptureCanvas(t2) {
          if (!this.captureCanvas) {
            const e2 = this.createCaptureCanvas(t2);
            this.captureCanvas = e2;
          }
          return this.captureCanvas;
        }
        drawFrameOnCanvas(t2, e2 = { sx: 0, sy: 0, sWidth: t2.videoWidth, sHeight: t2.videoHeight, dx: 0, dy: 0, dWidth: t2.videoWidth, dHeight: t2.videoHeight }, r2 = this.captureCanvasContext) {
          r2.drawImage(t2, e2.sx, e2.sy, e2.sWidth, e2.sHeight, e2.dx, e2.dy, e2.dWidth, e2.dHeight);
        }
        drawImageOnCanvas(t2, e2 = { sx: 0, sy: 0, sWidth: t2.naturalWidth, sHeight: t2.naturalHeight, dx: 0, dy: 0, dWidth: t2.naturalWidth, dHeight: t2.naturalHeight }, r2 = this.captureCanvasContext) {
          r2.drawImage(t2, e2.sx, e2.sy, e2.sWidth, e2.sHeight, e2.dx, e2.dy, e2.dWidth, e2.dHeight);
        }
        decodeBitmap(t2) {
          return this.reader.decode(t2, this._hints);
        }
        createCaptureCanvas(t2) {
          if ("undefined" == typeof document) return this._destroyCaptureCanvas(), null;
          const e2 = document.createElement("canvas");
          let r2, n2;
          return void 0 !== t2 && (t2 instanceof HTMLVideoElement ? (r2 = t2.videoWidth, n2 = t2.videoHeight) : t2 instanceof HTMLImageElement && (r2 = t2.naturalWidth || t2.width, n2 = t2.naturalHeight || t2.height)), e2.style.width = r2 + "px", e2.style.height = n2 + "px", e2.width = r2, e2.height = n2, e2;
        }
        stopStreams() {
          this.stream && (this.stream.getVideoTracks().forEach((t2) => t2.stop()), this.stream = void 0), false === this._stopAsyncDecode && this.stopAsyncDecode(), false === this._stopContinuousDecode && this.stopContinuousDecode();
        }
        reset() {
          this.stopStreams(), this._destroyVideoElement(), this._destroyImageElement(), this._destroyCaptureCanvas();
        }
        _destroyVideoElement() {
          this.videoElement && (void 0 !== this.videoEndedListener && this.videoElement.removeEventListener("ended", this.videoEndedListener), void 0 !== this.videoPlayingEventListener && this.videoElement.removeEventListener("playing", this.videoPlayingEventListener), void 0 !== this.videoCanPlayListener && this.videoElement.removeEventListener("loadedmetadata", this.videoCanPlayListener), this.cleanVideoSource(this.videoElement), this.videoElement = void 0);
        }
        _destroyImageElement() {
          this.imageElement && (void 0 !== this.imageLoadedListener && this.imageElement.removeEventListener("load", this.imageLoadedListener), this.imageElement.src = void 0, this.imageElement.removeAttribute("src"), this.imageElement = void 0);
        }
        _destroyCaptureCanvas() {
          this.captureCanvasContext = void 0, this.captureCanvas = void 0;
        }
        addVideoSource(t2, e2) {
          try {
            t2.srcObject = e2;
          } catch (r2) {
            t2.src = URL.createObjectURL(e2);
          }
        }
        cleanVideoSource(t2) {
          try {
            t2.srcObject = null;
          } catch (e2) {
            t2.src = "";
          }
          this.videoElement.removeAttribute("src");
        }
      }
      class v {
        constructor(t2, e2, r2 = null == e2 ? 0 : 8 * e2.length, n2, i2, s2 = d.currentTimeMillis()) {
          this.text = t2, this.rawBytes = e2, this.numBits = r2, this.resultPoints = n2, this.format = i2, this.timestamp = s2, this.text = t2, this.rawBytes = e2, this.numBits = null == r2 ? null == e2 ? 0 : 8 * e2.length : r2, this.resultPoints = n2, this.format = i2, this.resultMetadata = null, this.timestamp = null == s2 ? d.currentTimeMillis() : s2;
        }
        getText() {
          return this.text;
        }
        getRawBytes() {
          return this.rawBytes;
        }
        getNumBits() {
          return this.numBits;
        }
        getResultPoints() {
          return this.resultPoints;
        }
        getBarcodeFormat() {
          return this.format;
        }
        getResultMetadata() {
          return this.resultMetadata;
        }
        putMetadata(t2, e2) {
          null === this.resultMetadata && (this.resultMetadata = /* @__PURE__ */ new Map()), this.resultMetadata.set(t2, e2);
        }
        putAllMetadata(t2) {
          null !== t2 && (null === this.resultMetadata ? this.resultMetadata = t2 : this.resultMetadata = new Map(t2));
        }
        addResultPoints(t2) {
          const e2 = this.resultPoints;
          if (null === e2) this.resultPoints = t2;
          else if (null !== t2 && t2.length > 0) {
            const r2 = new Array(e2.length + t2.length);
            d.arraycopy(e2, 0, r2, 0, e2.length), d.arraycopy(t2, 0, r2, e2.length, t2.length), this.resultPoints = r2;
          }
        }
        getTimestamp() {
          return this.timestamp;
        }
        toString() {
          return this.text;
        }
      }
      !function(t2) {
        t2[t2.AZTEC = 0] = "AZTEC", t2[t2.CODABAR = 1] = "CODABAR", t2[t2.CODE_39 = 2] = "CODE_39", t2[t2.CODE_93 = 3] = "CODE_93", t2[t2.CODE_128 = 4] = "CODE_128", t2[t2.DATA_MATRIX = 5] = "DATA_MATRIX", t2[t2.EAN_8 = 6] = "EAN_8", t2[t2.EAN_13 = 7] = "EAN_13", t2[t2.ITF = 8] = "ITF", t2[t2.MAXICODE = 9] = "MAXICODE", t2[t2.PDF_417 = 10] = "PDF_417", t2[t2.QR_CODE = 11] = "QR_CODE", t2[t2.RSS_14 = 12] = "RSS_14", t2[t2.RSS_EXPANDED = 13] = "RSS_EXPANDED", t2[t2.UPC_A = 14] = "UPC_A", t2[t2.UPC_E = 15] = "UPC_E", t2[t2.UPC_EAN_EXTENSION = 16] = "UPC_EAN_EXTENSION";
      }(P || (P = {}));
      var k, x = P;
      !function(t2) {
        t2[t2.OTHER = 0] = "OTHER", t2[t2.ORIENTATION = 1] = "ORIENTATION", t2[t2.BYTE_SEGMENTS = 2] = "BYTE_SEGMENTS", t2[t2.ERROR_CORRECTION_LEVEL = 3] = "ERROR_CORRECTION_LEVEL", t2[t2.ISSUE_NUMBER = 4] = "ISSUE_NUMBER", t2[t2.SUGGESTED_PRICE = 5] = "SUGGESTED_PRICE", t2[t2.POSSIBLE_COUNTRY = 6] = "POSSIBLE_COUNTRY", t2[t2.UPC_EAN_EXTENSION = 7] = "UPC_EAN_EXTENSION", t2[t2.PDF417_EXTRA_METADATA = 8] = "PDF417_EXTRA_METADATA", t2[t2.STRUCTURED_APPEND_SEQUENCE = 9] = "STRUCTURED_APPEND_SEQUENCE", t2[t2.STRUCTURED_APPEND_PARITY = 10] = "STRUCTURED_APPEND_PARITY";
      }(k || (k = {}));
      var V, H, U, X, G, W, z = k;
      class Y {
        constructor(t2, e2, r2, n2, i2 = -1, s2 = -1) {
          this.rawBytes = t2, this.text = e2, this.byteSegments = r2, this.ecLevel = n2, this.structuredAppendSequenceNumber = i2, this.structuredAppendParity = s2, this.numBits = null == t2 ? 0 : 8 * t2.length;
        }
        getRawBytes() {
          return this.rawBytes;
        }
        getNumBits() {
          return this.numBits;
        }
        setNumBits(t2) {
          this.numBits = t2;
        }
        getText() {
          return this.text;
        }
        getByteSegments() {
          return this.byteSegments;
        }
        getECLevel() {
          return this.ecLevel;
        }
        getErrorsCorrected() {
          return this.errorsCorrected;
        }
        setErrorsCorrected(t2) {
          this.errorsCorrected = t2;
        }
        getErasures() {
          return this.erasures;
        }
        setErasures(t2) {
          this.erasures = t2;
        }
        getOther() {
          return this.other;
        }
        setOther(t2) {
          this.other = t2;
        }
        hasStructuredAppend() {
          return this.structuredAppendParity >= 0 && this.structuredAppendSequenceNumber >= 0;
        }
        getStructuredAppendParity() {
          return this.structuredAppendParity;
        }
        getStructuredAppendSequenceNumber() {
          return this.structuredAppendSequenceNumber;
        }
      }
      class Z {
        exp(t2) {
          return this.expTable[t2];
        }
        log(t2) {
          if (0 === t2) throw new a();
          return this.logTable[t2];
        }
        static addOrSubtract(t2, e2) {
          return t2 ^ e2;
        }
      }
      class K {
        constructor(t2, e2) {
          if (0 === e2.length) throw new a();
          this.field = t2;
          const r2 = e2.length;
          if (r2 > 1 && 0 === e2[0]) {
            let t3 = 1;
            for (; t3 < r2 && 0 === e2[t3]; ) t3++;
            t3 === r2 ? this.coefficients = Int32Array.from([0]) : (this.coefficients = new Int32Array(r2 - t3), d.arraycopy(e2, t3, this.coefficients, 0, this.coefficients.length));
          } else this.coefficients = e2;
        }
        getCoefficients() {
          return this.coefficients;
        }
        getDegree() {
          return this.coefficients.length - 1;
        }
        isZero() {
          return 0 === this.coefficients[0];
        }
        getCoefficient(t2) {
          return this.coefficients[this.coefficients.length - 1 - t2];
        }
        evaluateAt(t2) {
          if (0 === t2) return this.getCoefficient(0);
          const e2 = this.coefficients;
          let r2;
          if (1 === t2) {
            r2 = 0;
            for (let t3 = 0, n3 = e2.length; t3 !== n3; t3++) {
              const n4 = e2[t3];
              r2 = Z.addOrSubtract(r2, n4);
            }
            return r2;
          }
          r2 = e2[0];
          const n2 = e2.length, i2 = this.field;
          for (let s2 = 1; s2 < n2; s2++) r2 = Z.addOrSubtract(i2.multiply(t2, r2), e2[s2]);
          return r2;
        }
        addOrSubtract(t2) {
          if (!this.field.equals(t2.field)) throw new a("GenericGFPolys do not have same GenericGF field");
          if (this.isZero()) return t2;
          if (t2.isZero()) return this;
          let e2 = this.coefficients, r2 = t2.coefficients;
          if (e2.length > r2.length) {
            const t3 = e2;
            e2 = r2, r2 = t3;
          }
          let n2 = new Int32Array(r2.length);
          const i2 = r2.length - e2.length;
          d.arraycopy(r2, 0, n2, 0, i2);
          for (let t3 = i2; t3 < r2.length; t3++) n2[t3] = Z.addOrSubtract(e2[t3 - i2], r2[t3]);
          return new K(this.field, n2);
        }
        multiply(t2) {
          if (!this.field.equals(t2.field)) throw new a("GenericGFPolys do not have same GenericGF field");
          if (this.isZero() || t2.isZero()) return this.field.getZero();
          const e2 = this.coefficients, r2 = e2.length, n2 = t2.coefficients, i2 = n2.length, s2 = new Int32Array(r2 + i2 - 1), o2 = this.field;
          for (let t3 = 0; t3 < r2; t3++) {
            const r3 = e2[t3];
            for (let e3 = 0; e3 < i2; e3++) s2[t3 + e3] = Z.addOrSubtract(s2[t3 + e3], o2.multiply(r3, n2[e3]));
          }
          return new K(o2, s2);
        }
        multiplyScalar(t2) {
          if (0 === t2) return this.field.getZero();
          if (1 === t2) return this;
          const e2 = this.coefficients.length, r2 = this.field, n2 = new Int32Array(e2), i2 = this.coefficients;
          for (let s2 = 0; s2 < e2; s2++) n2[s2] = r2.multiply(i2[s2], t2);
          return new K(r2, n2);
        }
        multiplyByMonomial(t2, e2) {
          if (t2 < 0) throw new a();
          if (0 === e2) return this.field.getZero();
          const r2 = this.coefficients, n2 = r2.length, i2 = new Int32Array(n2 + t2), s2 = this.field;
          for (let t3 = 0; t3 < n2; t3++) i2[t3] = s2.multiply(r2[t3], e2);
          return new K(s2, i2);
        }
        divide(t2) {
          if (!this.field.equals(t2.field)) throw new a("GenericGFPolys do not have same GenericGF field");
          if (t2.isZero()) throw new a("Divide by 0");
          const e2 = this.field;
          let r2 = e2.getZero(), n2 = this;
          const i2 = t2.getCoefficient(t2.getDegree()), s2 = e2.inverse(i2);
          for (; n2.getDegree() >= t2.getDegree() && !n2.isZero(); ) {
            const i3 = n2.getDegree() - t2.getDegree(), o2 = e2.multiply(n2.getCoefficient(n2.getDegree()), s2), a2 = t2.multiplyByMonomial(i3, o2), h2 = e2.buildMonomial(i3, o2);
            r2 = r2.addOrSubtract(h2), n2 = n2.addOrSubtract(a2);
          }
          return [r2, n2];
        }
        toString() {
          let t2 = "";
          for (let e2 = this.getDegree(); e2 >= 0; e2--) {
            let r2 = this.getCoefficient(e2);
            if (0 !== r2) {
              if (r2 < 0 ? (t2 += " - ", r2 = -r2) : t2.length > 0 && (t2 += " + "), 0 === e2 || 1 !== r2) {
                const e3 = this.field.log(r2);
                0 === e3 ? t2 += "1" : 1 === e3 ? t2 += "a" : (t2 += "a^", t2 += e3);
              }
              0 !== e2 && (1 === e2 ? t2 += "x" : (t2 += "x^", t2 += e2));
            }
          }
          return t2;
        }
      }
      class q extends s {
      }
      q.kind = "ArithmeticException";
      class Q extends Z {
        constructor(t2, e2, r2) {
          super(), this.primitive = t2, this.size = e2, this.generatorBase = r2;
          const n2 = new Int32Array(e2);
          let i2 = 1;
          for (let r3 = 0; r3 < e2; r3++) n2[r3] = i2, i2 *= 2, i2 >= e2 && (i2 ^= t2, i2 &= e2 - 1);
          this.expTable = n2;
          const s2 = new Int32Array(e2);
          for (let t3 = 0; t3 < e2 - 1; t3++) s2[n2[t3]] = t3;
          this.logTable = s2, this.zero = new K(this, Int32Array.from([0])), this.one = new K(this, Int32Array.from([1]));
        }
        getZero() {
          return this.zero;
        }
        getOne() {
          return this.one;
        }
        buildMonomial(t2, e2) {
          if (t2 < 0) throw new a();
          if (0 === e2) return this.zero;
          const r2 = new Int32Array(t2 + 1);
          return r2[0] = e2, new K(this, r2);
        }
        inverse(t2) {
          if (0 === t2) throw new q();
          return this.expTable[this.size - this.logTable[t2] - 1];
        }
        multiply(t2, e2) {
          return 0 === t2 || 0 === e2 ? 0 : this.expTable[(this.logTable[t2] + this.logTable[e2]) % (this.size - 1)];
        }
        getSize() {
          return this.size;
        }
        getGeneratorBase() {
          return this.generatorBase;
        }
        toString() {
          return "GF(0x" + w.toHexString(this.primitive) + "," + this.size + ")";
        }
        equals(t2) {
          return t2 === this;
        }
      }
      Q.AZTEC_DATA_12 = new Q(4201, 4096, 1), Q.AZTEC_DATA_10 = new Q(1033, 1024, 1), Q.AZTEC_DATA_6 = new Q(67, 64, 1), Q.AZTEC_PARAM = new Q(19, 16, 1), Q.QR_CODE_FIELD_256 = new Q(285, 256, 0), Q.DATA_MATRIX_FIELD_256 = new Q(301, 256, 1), Q.AZTEC_DATA_8 = Q.DATA_MATRIX_FIELD_256, Q.MAXICODE_FIELD_64 = Q.AZTEC_DATA_6;
      class j extends s {
      }
      j.kind = "ReedSolomonException";
      class J extends s {
      }
      J.kind = "IllegalStateException";
      class $ {
        constructor(t2) {
          this.field = t2;
        }
        decode(t2, e2) {
          const r2 = this.field, n2 = new K(r2, t2), i2 = new Int32Array(e2);
          let s2 = true;
          for (let t3 = 0; t3 < e2; t3++) {
            const e3 = n2.evaluateAt(r2.exp(t3 + r2.getGeneratorBase()));
            i2[i2.length - 1 - t3] = e3, 0 !== e3 && (s2 = false);
          }
          if (s2) return;
          const o2 = new K(r2, i2), a2 = this.runEuclideanAlgorithm(r2.buildMonomial(e2, 1), o2, e2), h2 = a2[0], l2 = a2[1], c2 = this.findErrorLocations(h2), d2 = this.findErrorMagnitudes(l2, c2);
          for (let e3 = 0; e3 < c2.length; e3++) {
            const n3 = t2.length - 1 - r2.log(c2[e3]);
            if (n3 < 0) throw new j("Bad error location");
            t2[n3] = Q.addOrSubtract(t2[n3], d2[e3]);
          }
        }
        runEuclideanAlgorithm(t2, e2, r2) {
          if (t2.getDegree() < e2.getDegree()) {
            const r3 = t2;
            t2 = e2, e2 = r3;
          }
          const n2 = this.field;
          let i2 = t2, s2 = e2, o2 = n2.getZero(), a2 = n2.getOne();
          for (; s2.getDegree() >= (r2 / 2 | 0); ) {
            let t3 = i2, e3 = o2;
            if (i2 = s2, o2 = a2, i2.isZero()) throw new j("r_{i-1} was zero");
            s2 = t3;
            let r3 = n2.getZero();
            const h3 = i2.getCoefficient(i2.getDegree()), l3 = n2.inverse(h3);
            for (; s2.getDegree() >= i2.getDegree() && !s2.isZero(); ) {
              const t4 = s2.getDegree() - i2.getDegree(), e4 = n2.multiply(s2.getCoefficient(s2.getDegree()), l3);
              r3 = r3.addOrSubtract(n2.buildMonomial(t4, e4)), s2 = s2.addOrSubtract(i2.multiplyByMonomial(t4, e4));
            }
            if (a2 = r3.multiply(o2).addOrSubtract(e3), s2.getDegree() >= i2.getDegree()) throw new J("Division algorithm failed to reduce polynomial?");
          }
          const h2 = a2.getCoefficient(0);
          if (0 === h2) throw new j("sigmaTilde(0) was zero");
          const l2 = n2.inverse(h2);
          return [a2.multiplyScalar(l2), s2.multiplyScalar(l2)];
        }
        findErrorLocations(t2) {
          const e2 = t2.getDegree();
          if (1 === e2) return Int32Array.from([t2.getCoefficient(1)]);
          const r2 = new Int32Array(e2);
          let n2 = 0;
          const i2 = this.field;
          for (let s2 = 1; s2 < i2.getSize() && n2 < e2; s2++) 0 === t2.evaluateAt(s2) && (r2[n2] = i2.inverse(s2), n2++);
          if (n2 !== e2) throw new j("Error locator degree does not match number of roots");
          return r2;
        }
        findErrorMagnitudes(t2, e2) {
          const r2 = e2.length, n2 = new Int32Array(r2), i2 = this.field;
          for (let s2 = 0; s2 < r2; s2++) {
            const o2 = i2.inverse(e2[s2]);
            let a2 = 1;
            for (let t3 = 0; t3 < r2; t3++) if (s2 !== t3) {
              const r3 = i2.multiply(e2[t3], o2), n3 = 1 & r3 ? -2 & r3 : 1 | r3;
              a2 = i2.multiply(a2, n3);
            }
            n2[s2] = i2.multiply(t2.evaluateAt(o2), i2.inverse(a2)), 0 !== i2.getGeneratorBase() && (n2[s2] = i2.multiply(n2[s2], o2));
          }
          return n2;
        }
      }
      !function(t2) {
        t2[t2.UPPER = 0] = "UPPER", t2[t2.LOWER = 1] = "LOWER", t2[t2.MIXED = 2] = "MIXED", t2[t2.DIGIT = 3] = "DIGIT", t2[t2.PUNCT = 4] = "PUNCT", t2[t2.BINARY = 5] = "BINARY";
      }(V || (V = {}));
      class tt {
        decode(t2) {
          this.ddata = t2;
          let e2 = t2.getBits(), r2 = this.extractBits(e2), n2 = this.correctBits(r2), i2 = tt.convertBoolArrayToByteArray(n2), s2 = tt.getEncodedData(n2), o2 = new Y(i2, s2, null, null);
          return o2.setNumBits(n2.length), o2;
        }
        static highLevelDecode(t2) {
          return this.getEncodedData(t2);
        }
        static getEncodedData(t2) {
          let e2 = t2.length, r2 = V.UPPER, n2 = V.UPPER, i2 = "", s2 = 0;
          for (; s2 < e2; ) if (n2 === V.BINARY) {
            if (e2 - s2 < 5) break;
            let o2 = tt.readCode(t2, s2, 5);
            if (s2 += 5, 0 === o2) {
              if (e2 - s2 < 11) break;
              o2 = tt.readCode(t2, s2, 11) + 31, s2 += 11;
            }
            for (let r3 = 0; r3 < o2; r3++) {
              if (e2 - s2 < 8) {
                s2 = e2;
                break;
              }
              const r4 = tt.readCode(t2, s2, 8);
              i2 += p.castAsNonUtf8Char(r4), s2 += 8;
            }
            n2 = r2;
          } else {
            let o2 = n2 === V.DIGIT ? 4 : 5;
            if (e2 - s2 < o2) break;
            let a2 = tt.readCode(t2, s2, o2);
            s2 += o2;
            let h2 = tt.getCharacter(n2, a2);
            h2.startsWith("CTRL_") ? (r2 = n2, n2 = tt.getTable(h2.charAt(5)), "L" === h2.charAt(6) && (r2 = n2)) : (i2 += h2, n2 = r2);
          }
          return i2;
        }
        static getTable(t2) {
          switch (t2) {
            case "L":
              return V.LOWER;
            case "P":
              return V.PUNCT;
            case "M":
              return V.MIXED;
            case "D":
              return V.DIGIT;
            case "B":
              return V.BINARY;
            default:
              return V.UPPER;
          }
        }
        static getCharacter(t2, e2) {
          switch (t2) {
            case V.UPPER:
              return tt.UPPER_TABLE[e2];
            case V.LOWER:
              return tt.LOWER_TABLE[e2];
            case V.MIXED:
              return tt.MIXED_TABLE[e2];
            case V.PUNCT:
              return tt.PUNCT_TABLE[e2];
            case V.DIGIT:
              return tt.DIGIT_TABLE[e2];
            default:
              throw new J("Bad table");
          }
        }
        correctBits(t2) {
          let e2, r2;
          this.ddata.getNbLayers() <= 2 ? (r2 = 6, e2 = Q.AZTEC_DATA_6) : this.ddata.getNbLayers() <= 8 ? (r2 = 8, e2 = Q.AZTEC_DATA_8) : this.ddata.getNbLayers() <= 22 ? (r2 = 10, e2 = Q.AZTEC_DATA_10) : (r2 = 12, e2 = Q.AZTEC_DATA_12);
          let n2 = this.ddata.getNbDatablocks(), i2 = t2.length / r2;
          if (i2 < n2) throw new m();
          let s2 = t2.length % r2, o2 = new Int32Array(i2);
          for (let e3 = 0; e3 < i2; e3++, s2 += r2) o2[e3] = tt.readCode(t2, s2, r2);
          try {
            new $(e2).decode(o2, i2 - n2);
          } catch (t3) {
            throw new m(t3);
          }
          let a2 = (1 << r2) - 1, h2 = 0;
          for (let t3 = 0; t3 < n2; t3++) {
            let e3 = o2[t3];
            if (0 === e3 || e3 === a2) throw new m();
            1 !== e3 && e3 !== a2 - 1 || h2++;
          }
          let l2 = new Array(n2 * r2 - h2), c2 = 0;
          for (let t3 = 0; t3 < n2; t3++) {
            let e3 = o2[t3];
            if (1 === e3 || e3 === a2 - 1) l2.fill(e3 > 1, c2, c2 + r2 - 1), c2 += r2 - 1;
            else for (let t4 = r2 - 1; t4 >= 0; --t4) l2[c2++] = !!(e3 & 1 << t4);
          }
          return l2;
        }
        extractBits(t2) {
          let e2 = this.ddata.isCompact(), r2 = this.ddata.getNbLayers(), n2 = (e2 ? 11 : 14) + 4 * r2, i2 = new Int32Array(n2), s2 = new Array(this.totalBitsInLayer(r2, e2));
          if (e2) for (let t3 = 0; t3 < i2.length; t3++) i2[t3] = t3;
          else {
            let t3 = n2 + 1 + 2 * w.truncDivision(w.truncDivision(n2, 2) - 1, 15), e3 = n2 / 2, r3 = w.truncDivision(t3, 2);
            for (let t4 = 0; t4 < e3; t4++) {
              let n3 = t4 + w.truncDivision(t4, 15);
              i2[e3 - t4 - 1] = r3 - n3 - 1, i2[e3 + t4] = r3 + n3 + 1;
            }
          }
          for (let o2 = 0, a2 = 0; o2 < r2; o2++) {
            let h2 = 4 * (r2 - o2) + (e2 ? 9 : 12), l2 = 2 * o2, c2 = n2 - 1 - l2;
            for (let e3 = 0; e3 < h2; e3++) {
              let r3 = 2 * e3;
              for (let n3 = 0; n3 < 2; n3++) s2[a2 + r3 + n3] = t2.get(i2[l2 + n3], i2[l2 + e3]), s2[a2 + 2 * h2 + r3 + n3] = t2.get(i2[l2 + e3], i2[c2 - n3]), s2[a2 + 4 * h2 + r3 + n3] = t2.get(i2[c2 - n3], i2[c2 - e3]), s2[a2 + 6 * h2 + r3 + n3] = t2.get(i2[c2 - e3], i2[l2 + n3]);
            }
            a2 += 8 * h2;
          }
          return s2;
        }
        static readCode(t2, e2, r2) {
          let n2 = 0;
          for (let i2 = e2; i2 < e2 + r2; i2++) n2 <<= 1, t2[i2] && (n2 |= 1);
          return n2;
        }
        static readByte(t2, e2) {
          let r2 = t2.length - e2;
          return r2 >= 8 ? tt.readCode(t2, e2, 8) : tt.readCode(t2, e2, r2) << 8 - r2;
        }
        static convertBoolArrayToByteArray(t2) {
          let e2 = new Uint8Array((t2.length + 7) / 8);
          for (let r2 = 0; r2 < e2.length; r2++) e2[r2] = tt.readByte(t2, 8 * r2);
          return e2;
        }
        totalBitsInLayer(t2, e2) {
          return ((e2 ? 88 : 112) + 16 * t2) * t2;
        }
      }
      tt.UPPER_TABLE = ["CTRL_PS", " ", "A", "B", "C", "D", "E", "F", "G", "H", "I", "J", "K", "L", "M", "N", "O", "P", "Q", "R", "S", "T", "U", "V", "W", "X", "Y", "Z", "CTRL_LL", "CTRL_ML", "CTRL_DL", "CTRL_BS"], tt.LOWER_TABLE = ["CTRL_PS", " ", "a", "b", "c", "d", "e", "f", "g", "h", "i", "j", "k", "l", "m", "n", "o", "p", "q", "r", "s", "t", "u", "v", "w", "x", "y", "z", "CTRL_US", "CTRL_ML", "CTRL_DL", "CTRL_BS"], tt.MIXED_TABLE = ["CTRL_PS", " ", "", "", "", "", "", "", "\x07", "\b", "	", "\n", "\v", "\f", "\r", "\x1B", "", "", "", "", "@", "\\", "^", "_", "`", "|", "~", "", "CTRL_LL", "CTRL_UL", "CTRL_PL", "CTRL_BS"], tt.PUNCT_TABLE = ["", "\r", "\r\n", ". ", ", ", ": ", "!", '"', "#", "$", "%", "&", "'", "(", ")", "*", "+", ",", "-", ".", "/", ":", ";", "<", "=", ">", "?", "[", "]", "{", "}", "CTRL_UL"], tt.DIGIT_TABLE = ["CTRL_PS", " ", "0", "1", "2", "3", "4", "5", "6", "7", "8", "9", ",", ".", "CTRL_UL", "CTRL_US"];
      class et {
        constructor() {
        }
        static round(t2) {
          return isNaN(t2) ? 0 : t2 <= Number.MIN_SAFE_INTEGER ? Number.MIN_SAFE_INTEGER : t2 >= Number.MAX_SAFE_INTEGER ? Number.MAX_SAFE_INTEGER : t2 + (t2 < 0 ? -0.5 : 0.5) | 0;
        }
        static distance(t2, e2, r2, n2) {
          const i2 = t2 - r2, s2 = e2 - n2;
          return Math.sqrt(i2 * i2 + s2 * s2);
        }
        static sum(t2) {
          let e2 = 0;
          for (let r2 = 0, n2 = t2.length; r2 !== n2; r2++) {
            e2 += t2[r2];
          }
          return e2;
        }
      }
      class rt {
        static floatToIntBits(t2) {
          return t2;
        }
      }
      rt.MAX_VALUE = Number.MAX_SAFE_INTEGER;
      class nt {
        constructor(t2, e2) {
          this.x = t2, this.y = e2;
        }
        getX() {
          return this.x;
        }
        getY() {
          return this.y;
        }
        equals(t2) {
          if (t2 instanceof nt) {
            const e2 = t2;
            return this.x === e2.x && this.y === e2.y;
          }
          return false;
        }
        hashCode() {
          return 31 * rt.floatToIntBits(this.x) + rt.floatToIntBits(this.y);
        }
        toString() {
          return "(" + this.x + "," + this.y + ")";
        }
        static orderBestPatterns(t2) {
          const e2 = this.distance(t2[0], t2[1]), r2 = this.distance(t2[1], t2[2]), n2 = this.distance(t2[0], t2[2]);
          let i2, s2, o2;
          if (r2 >= e2 && r2 >= n2 ? (s2 = t2[0], i2 = t2[1], o2 = t2[2]) : n2 >= r2 && n2 >= e2 ? (s2 = t2[1], i2 = t2[0], o2 = t2[2]) : (s2 = t2[2], i2 = t2[0], o2 = t2[1]), this.crossProductZ(i2, s2, o2) < 0) {
            const t3 = i2;
            i2 = o2, o2 = t3;
          }
          t2[0] = i2, t2[1] = s2, t2[2] = o2;
        }
        static distance(t2, e2) {
          return et.distance(t2.x, t2.y, e2.x, e2.y);
        }
        static crossProductZ(t2, e2, r2) {
          const n2 = e2.x, i2 = e2.y;
          return (r2.x - n2) * (t2.y - i2) - (r2.y - i2) * (t2.x - n2);
        }
      }
      class it {
        constructor(t2, e2) {
          this.bits = t2, this.points = e2;
        }
        getBits() {
          return this.bits;
        }
        getPoints() {
          return this.points;
        }
      }
      class st extends it {
        constructor(t2, e2, r2, n2, i2) {
          super(t2, e2), this.compact = r2, this.nbDatablocks = n2, this.nbLayers = i2;
        }
        getNbLayers() {
          return this.nbLayers;
        }
        getNbDatablocks() {
          return this.nbDatablocks;
        }
        isCompact() {
          return this.compact;
        }
      }
      class ot {
        constructor(t2, e2, r2, n2) {
          this.image = t2, this.height = t2.getHeight(), this.width = t2.getWidth(), null == e2 && (e2 = ot.INIT_SIZE), null == r2 && (r2 = t2.getWidth() / 2 | 0), null == n2 && (n2 = t2.getHeight() / 2 | 0);
          const i2 = e2 / 2 | 0;
          if (this.leftInit = r2 - i2, this.rightInit = r2 + i2, this.upInit = n2 - i2, this.downInit = n2 + i2, this.upInit < 0 || this.leftInit < 0 || this.downInit >= this.height || this.rightInit >= this.width) throw new N();
        }
        detect() {
          let t2 = this.leftInit, e2 = this.rightInit, r2 = this.upInit, n2 = this.downInit, i2 = false, s2 = true, o2 = false, a2 = false, h2 = false, l2 = false, c2 = false;
          const d2 = this.width, u2 = this.height;
          for (; s2; ) {
            s2 = false;
            let g2 = true;
            for (; (g2 || !a2) && e2 < d2; ) g2 = this.containsBlackPoint(r2, n2, e2, false), g2 ? (e2++, s2 = true, a2 = true) : a2 || e2++;
            if (e2 >= d2) {
              i2 = true;
              break;
            }
            let f2 = true;
            for (; (f2 || !h2) && n2 < u2; ) f2 = this.containsBlackPoint(t2, e2, n2, true), f2 ? (n2++, s2 = true, h2 = true) : h2 || n2++;
            if (n2 >= u2) {
              i2 = true;
              break;
            }
            let w2 = true;
            for (; (w2 || !l2) && t2 >= 0; ) w2 = this.containsBlackPoint(r2, n2, t2, false), w2 ? (t2--, s2 = true, l2 = true) : l2 || t2--;
            if (t2 < 0) {
              i2 = true;
              break;
            }
            let C2 = true;
            for (; (C2 || !c2) && r2 >= 0; ) C2 = this.containsBlackPoint(t2, e2, r2, true), C2 ? (r2--, s2 = true, c2 = true) : c2 || r2--;
            if (r2 < 0) {
              i2 = true;
              break;
            }
            s2 && (o2 = true);
          }
          if (!i2 && o2) {
            const i3 = e2 - t2;
            let s3 = null;
            for (let e3 = 1; null === s3 && e3 < i3; e3++) s3 = this.getBlackPointOnSegment(t2, n2 - e3, t2 + e3, n2);
            if (null == s3) throw new N();
            let o3 = null;
            for (let e3 = 1; null === o3 && e3 < i3; e3++) o3 = this.getBlackPointOnSegment(t2, r2 + e3, t2 + e3, r2);
            if (null == o3) throw new N();
            let a3 = null;
            for (let t3 = 1; null === a3 && t3 < i3; t3++) a3 = this.getBlackPointOnSegment(e2, r2 + t3, e2 - t3, r2);
            if (null == a3) throw new N();
            let h3 = null;
            for (let t3 = 1; null === h3 && t3 < i3; t3++) h3 = this.getBlackPointOnSegment(e2, n2 - t3, e2 - t3, n2);
            if (null == h3) throw new N();
            return this.centerEdges(h3, s3, a3, o3);
          }
          throw new N();
        }
        getBlackPointOnSegment(t2, e2, r2, n2) {
          const i2 = et.round(et.distance(t2, e2, r2, n2)), s2 = (r2 - t2) / i2, o2 = (n2 - e2) / i2, a2 = this.image;
          for (let r3 = 0; r3 < i2; r3++) {
            const n3 = et.round(t2 + r3 * s2), i3 = et.round(e2 + r3 * o2);
            if (a2.get(n3, i3)) return new nt(n3, i3);
          }
          return null;
        }
        centerEdges(t2, e2, r2, n2) {
          const i2 = t2.getX(), s2 = t2.getY(), o2 = e2.getX(), a2 = e2.getY(), h2 = r2.getX(), l2 = r2.getY(), c2 = n2.getX(), d2 = n2.getY(), u2 = ot.CORR;
          return i2 < this.width / 2 ? [new nt(c2 - u2, d2 + u2), new nt(o2 + u2, a2 + u2), new nt(h2 - u2, l2 - u2), new nt(i2 + u2, s2 - u2)] : [new nt(c2 + u2, d2 + u2), new nt(o2 + u2, a2 - u2), new nt(h2 - u2, l2 + u2), new nt(i2 - u2, s2 - u2)];
        }
        containsBlackPoint(t2, e2, r2, n2) {
          const i2 = this.image;
          if (n2) {
            for (let n3 = t2; n3 <= e2; n3++) if (i2.get(n3, r2)) return true;
          } else for (let n3 = t2; n3 <= e2; n3++) if (i2.get(r2, n3)) return true;
          return false;
        }
      }
      ot.INIT_SIZE = 10, ot.CORR = 1;
      class at {
        static checkAndNudgePoints(t2, e2) {
          const r2 = t2.getWidth(), n2 = t2.getHeight();
          let i2 = true;
          for (let t3 = 0; t3 < e2.length && i2; t3 += 2) {
            const s2 = Math.floor(e2[t3]), o2 = Math.floor(e2[t3 + 1]);
            if (s2 < -1 || s2 > r2 || o2 < -1 || o2 > n2) throw new N();
            i2 = false, -1 === s2 ? (e2[t3] = 0, i2 = true) : s2 === r2 && (e2[t3] = r2 - 1, i2 = true), -1 === o2 ? (e2[t3 + 1] = 0, i2 = true) : o2 === n2 && (e2[t3 + 1] = n2 - 1, i2 = true);
          }
          i2 = true;
          for (let t3 = e2.length - 2; t3 >= 0 && i2; t3 -= 2) {
            const s2 = Math.floor(e2[t3]), o2 = Math.floor(e2[t3 + 1]);
            if (s2 < -1 || s2 > r2 || o2 < -1 || o2 > n2) throw new N();
            i2 = false, -1 === s2 ? (e2[t3] = 0, i2 = true) : s2 === r2 && (e2[t3] = r2 - 1, i2 = true), -1 === o2 ? (e2[t3 + 1] = 0, i2 = true) : o2 === n2 && (e2[t3 + 1] = n2 - 1, i2 = true);
          }
        }
      }
      class ht {
        constructor(t2, e2, r2, n2, i2, s2, o2, a2, h2) {
          this.a11 = t2, this.a21 = e2, this.a31 = r2, this.a12 = n2, this.a22 = i2, this.a32 = s2, this.a13 = o2, this.a23 = a2, this.a33 = h2;
        }
        static quadrilateralToQuadrilateral(t2, e2, r2, n2, i2, s2, o2, a2, h2, l2, c2, d2, u2, g2, f2, w2) {
          const C2 = ht.quadrilateralToSquare(t2, e2, r2, n2, i2, s2, o2, a2);
          return ht.squareToQuadrilateral(h2, l2, c2, d2, u2, g2, f2, w2).times(C2);
        }
        transformPoints(t2) {
          const e2 = t2.length, r2 = this.a11, n2 = this.a12, i2 = this.a13, s2 = this.a21, o2 = this.a22, a2 = this.a23, h2 = this.a31, l2 = this.a32, c2 = this.a33;
          for (let d2 = 0; d2 < e2; d2 += 2) {
            const e3 = t2[d2], u2 = t2[d2 + 1], g2 = i2 * e3 + a2 * u2 + c2;
            t2[d2] = (r2 * e3 + s2 * u2 + h2) / g2, t2[d2 + 1] = (n2 * e3 + o2 * u2 + l2) / g2;
          }
        }
        transformPointsWithValues(t2, e2) {
          const r2 = this.a11, n2 = this.a12, i2 = this.a13, s2 = this.a21, o2 = this.a22, a2 = this.a23, h2 = this.a31, l2 = this.a32, c2 = this.a33, d2 = t2.length;
          for (let u2 = 0; u2 < d2; u2++) {
            const d3 = t2[u2], g2 = e2[u2], f2 = i2 * d3 + a2 * g2 + c2;
            t2[u2] = (r2 * d3 + s2 * g2 + h2) / f2, e2[u2] = (n2 * d3 + o2 * g2 + l2) / f2;
          }
        }
        static squareToQuadrilateral(t2, e2, r2, n2, i2, s2, o2, a2) {
          const h2 = t2 - r2 + i2 - o2, l2 = e2 - n2 + s2 - a2;
          if (0 === h2 && 0 === l2) return new ht(r2 - t2, i2 - r2, t2, n2 - e2, s2 - n2, e2, 0, 0, 1);
          {
            const c2 = r2 - i2, d2 = o2 - i2, u2 = n2 - s2, g2 = a2 - s2, f2 = c2 * g2 - d2 * u2, w2 = (h2 * g2 - d2 * l2) / f2, C2 = (c2 * l2 - h2 * u2) / f2;
            return new ht(r2 - t2 + w2 * r2, o2 - t2 + C2 * o2, t2, n2 - e2 + w2 * n2, a2 - e2 + C2 * a2, e2, w2, C2, 1);
          }
        }
        static quadrilateralToSquare(t2, e2, r2, n2, i2, s2, o2, a2) {
          return ht.squareToQuadrilateral(t2, e2, r2, n2, i2, s2, o2, a2).buildAdjoint();
        }
        buildAdjoint() {
          return new ht(this.a22 * this.a33 - this.a23 * this.a32, this.a23 * this.a31 - this.a21 * this.a33, this.a21 * this.a32 - this.a22 * this.a31, this.a13 * this.a32 - this.a12 * this.a33, this.a11 * this.a33 - this.a13 * this.a31, this.a12 * this.a31 - this.a11 * this.a32, this.a12 * this.a23 - this.a13 * this.a22, this.a13 * this.a21 - this.a11 * this.a23, this.a11 * this.a22 - this.a12 * this.a21);
        }
        times(t2) {
          return new ht(this.a11 * t2.a11 + this.a21 * t2.a12 + this.a31 * t2.a13, this.a11 * t2.a21 + this.a21 * t2.a22 + this.a31 * t2.a23, this.a11 * t2.a31 + this.a21 * t2.a32 + this.a31 * t2.a33, this.a12 * t2.a11 + this.a22 * t2.a12 + this.a32 * t2.a13, this.a12 * t2.a21 + this.a22 * t2.a22 + this.a32 * t2.a23, this.a12 * t2.a31 + this.a22 * t2.a32 + this.a32 * t2.a33, this.a13 * t2.a11 + this.a23 * t2.a12 + this.a33 * t2.a13, this.a13 * t2.a21 + this.a23 * t2.a22 + this.a33 * t2.a23, this.a13 * t2.a31 + this.a23 * t2.a32 + this.a33 * t2.a33);
        }
      }
      class lt extends at {
        sampleGrid(t2, e2, r2, n2, i2, s2, o2, a2, h2, l2, c2, d2, u2, g2, f2, w2, C2, A2, E2) {
          const m2 = ht.quadrilateralToQuadrilateral(n2, i2, s2, o2, a2, h2, l2, c2, d2, u2, g2, f2, w2, C2, A2, E2);
          return this.sampleGridWithTransform(t2, e2, r2, m2);
        }
        sampleGridWithTransform(t2, e2, r2, n2) {
          if (e2 <= 0 || r2 <= 0) throw new N();
          const i2 = new R(e2, r2), s2 = new Float32Array(2 * e2);
          for (let e3 = 0; e3 < r2; e3++) {
            const r3 = s2.length, o2 = e3 + 0.5;
            for (let t3 = 0; t3 < r3; t3 += 2) s2[t3] = t3 / 2 + 0.5, s2[t3 + 1] = o2;
            n2.transformPoints(s2), at.checkAndNudgePoints(t2, s2);
            try {
              for (let n3 = 0; n3 < r3; n3 += 2) t2.get(Math.floor(s2[n3]), Math.floor(s2[n3 + 1])) && i2.set(n3 / 2, e3);
            } catch (t3) {
              throw new N();
            }
          }
          return i2;
        }
      }
      class ct {
        static setGridSampler(t2) {
          ct.gridSampler = t2;
        }
        static getInstance() {
          return ct.gridSampler;
        }
      }
      ct.gridSampler = new lt();
      class dt {
        constructor(t2, e2) {
          this.x = t2, this.y = e2;
        }
        toResultPoint() {
          return new nt(this.getX(), this.getY());
        }
        getX() {
          return this.x;
        }
        getY() {
          return this.y;
        }
      }
      class ut {
        constructor(t2) {
          this.EXPECTED_CORNER_BITS = new Int32Array([3808, 476, 2107, 1799]), this.image = t2;
        }
        detect() {
          return this.detectMirror(false);
        }
        detectMirror(t2) {
          let e2 = this.getMatrixCenter(), r2 = this.getBullsEyeCorners(e2);
          if (t2) {
            let t3 = r2[0];
            r2[0] = r2[2], r2[2] = t3;
          }
          this.extractParameters(r2);
          let n2 = this.sampleGrid(this.image, r2[this.shift % 4], r2[(this.shift + 1) % 4], r2[(this.shift + 2) % 4], r2[(this.shift + 3) % 4]), i2 = this.getMatrixCornerPoints(r2);
          return new st(n2, i2, this.compact, this.nbDataBlocks, this.nbLayers);
        }
        extractParameters(t2) {
          if (!(this.isValidPoint(t2[0]) && this.isValidPoint(t2[1]) && this.isValidPoint(t2[2]) && this.isValidPoint(t2[3]))) throw new N();
          let e2 = 2 * this.nbCenterLayers, r2 = new Int32Array([this.sampleLine(t2[0], t2[1], e2), this.sampleLine(t2[1], t2[2], e2), this.sampleLine(t2[2], t2[3], e2), this.sampleLine(t2[3], t2[0], e2)]);
          this.shift = this.getRotation(r2, e2);
          let n2 = 0;
          for (let t3 = 0; t3 < 4; t3++) {
            let e3 = r2[(this.shift + t3) % 4];
            this.compact ? (n2 <<= 7, n2 += e3 >> 1 & 127) : (n2 <<= 10, n2 += (e3 >> 2 & 992) + (e3 >> 1 & 31));
          }
          let i2 = this.getCorrectedParameterData(n2, this.compact);
          this.compact ? (this.nbLayers = 1 + (i2 >> 6), this.nbDataBlocks = 1 + (63 & i2)) : (this.nbLayers = 1 + (i2 >> 11), this.nbDataBlocks = 1 + (2047 & i2));
        }
        getRotation(t2, e2) {
          let r2 = 0;
          t2.forEach((t3, n2, i2) => {
            r2 = (r2 << 3) + ((t3 >> e2 - 2 << 1) + (1 & t3));
          }), r2 = ((1 & r2) << 11) + (r2 >> 1);
          for (let t3 = 0; t3 < 4; t3++) if (w.bitCount(r2 ^ this.EXPECTED_CORNER_BITS[t3]) <= 2) return t3;
          throw new N();
        }
        getCorrectedParameterData(t2, e2) {
          let r2, n2;
          e2 ? (r2 = 7, n2 = 2) : (r2 = 10, n2 = 4);
          let i2 = r2 - n2, s2 = new Int32Array(r2);
          for (let e3 = r2 - 1; e3 >= 0; --e3) s2[e3] = 15 & t2, t2 >>= 4;
          try {
            new $(Q.AZTEC_PARAM).decode(s2, i2);
          } catch (t3) {
            throw new N();
          }
          let o2 = 0;
          for (let t3 = 0; t3 < n2; t3++) o2 = (o2 << 4) + s2[t3];
          return o2;
        }
        getBullsEyeCorners(t2) {
          let e2 = t2, r2 = t2, n2 = t2, i2 = t2, s2 = true;
          for (this.nbCenterLayers = 1; this.nbCenterLayers < 9; this.nbCenterLayers++) {
            let t3 = this.getFirstDifferent(e2, s2, 1, -1), o3 = this.getFirstDifferent(r2, s2, 1, 1), a3 = this.getFirstDifferent(n2, s2, -1, 1), h3 = this.getFirstDifferent(i2, s2, -1, -1);
            if (this.nbCenterLayers > 2) {
              let r3 = this.distancePoint(h3, t3) * this.nbCenterLayers / (this.distancePoint(i2, e2) * (this.nbCenterLayers + 2));
              if (r3 < 0.75 || r3 > 1.25 || !this.isWhiteOrBlackRectangle(t3, o3, a3, h3)) break;
            }
            e2 = t3, r2 = o3, n2 = a3, i2 = h3, s2 = !s2;
          }
          if (5 !== this.nbCenterLayers && 7 !== this.nbCenterLayers) throw new N();
          this.compact = 5 === this.nbCenterLayers;
          let o2 = new nt(e2.getX() + 0.5, e2.getY() - 0.5), a2 = new nt(r2.getX() + 0.5, r2.getY() + 0.5), h2 = new nt(n2.getX() - 0.5, n2.getY() + 0.5), l2 = new nt(i2.getX() - 0.5, i2.getY() - 0.5);
          return this.expandSquare([o2, a2, h2, l2], 2 * this.nbCenterLayers - 3, 2 * this.nbCenterLayers);
        }
        getMatrixCenter() {
          let t2, e2, r2, n2;
          try {
            let i3 = new ot(this.image).detect();
            t2 = i3[0], e2 = i3[1], r2 = i3[2], n2 = i3[3];
          } catch (i3) {
            let s3 = this.image.getWidth() / 2, o2 = this.image.getHeight() / 2;
            t2 = this.getFirstDifferent(new dt(s3 + 7, o2 - 7), false, 1, -1).toResultPoint(), e2 = this.getFirstDifferent(new dt(s3 + 7, o2 + 7), false, 1, 1).toResultPoint(), r2 = this.getFirstDifferent(new dt(s3 - 7, o2 + 7), false, -1, 1).toResultPoint(), n2 = this.getFirstDifferent(new dt(s3 - 7, o2 - 7), false, -1, -1).toResultPoint();
          }
          let i2 = et.round((t2.getX() + n2.getX() + e2.getX() + r2.getX()) / 4), s2 = et.round((t2.getY() + n2.getY() + e2.getY() + r2.getY()) / 4);
          try {
            let o2 = new ot(this.image, 15, i2, s2).detect();
            t2 = o2[0], e2 = o2[1], r2 = o2[2], n2 = o2[3];
          } catch (o2) {
            t2 = this.getFirstDifferent(new dt(i2 + 7, s2 - 7), false, 1, -1).toResultPoint(), e2 = this.getFirstDifferent(new dt(i2 + 7, s2 + 7), false, 1, 1).toResultPoint(), r2 = this.getFirstDifferent(new dt(i2 - 7, s2 + 7), false, -1, 1).toResultPoint(), n2 = this.getFirstDifferent(new dt(i2 - 7, s2 - 7), false, -1, -1).toResultPoint();
          }
          return i2 = et.round((t2.getX() + n2.getX() + e2.getX() + r2.getX()) / 4), s2 = et.round((t2.getY() + n2.getY() + e2.getY() + r2.getY()) / 4), new dt(i2, s2);
        }
        getMatrixCornerPoints(t2) {
          return this.expandSquare(t2, 2 * this.nbCenterLayers, this.getDimension());
        }
        sampleGrid(t2, e2, r2, n2, i2) {
          let s2 = ct.getInstance(), o2 = this.getDimension(), a2 = o2 / 2 - this.nbCenterLayers, h2 = o2 / 2 + this.nbCenterLayers;
          return s2.sampleGrid(t2, o2, o2, a2, a2, h2, a2, h2, h2, a2, h2, e2.getX(), e2.getY(), r2.getX(), r2.getY(), n2.getX(), n2.getY(), i2.getX(), i2.getY());
        }
        sampleLine(t2, e2, r2) {
          let n2 = 0, i2 = this.distanceResultPoint(t2, e2), s2 = i2 / r2, o2 = t2.getX(), a2 = t2.getY(), h2 = s2 * (e2.getX() - t2.getX()) / i2, l2 = s2 * (e2.getY() - t2.getY()) / i2;
          for (let t3 = 0; t3 < r2; t3++) this.image.get(et.round(o2 + t3 * h2), et.round(a2 + t3 * l2)) && (n2 |= 1 << r2 - t3 - 1);
          return n2;
        }
        isWhiteOrBlackRectangle(t2, e2, r2, n2) {
          t2 = new dt(t2.getX() - 3, t2.getY() + 3), e2 = new dt(e2.getX() - 3, e2.getY() - 3), r2 = new dt(r2.getX() + 3, r2.getY() - 3), n2 = new dt(n2.getX() + 3, n2.getY() + 3);
          let i2 = this.getColor(n2, t2);
          if (0 === i2) return false;
          let s2 = this.getColor(t2, e2);
          return s2 === i2 && (s2 = this.getColor(e2, r2), s2 === i2 && (s2 = this.getColor(r2, n2), s2 === i2));
        }
        getColor(t2, e2) {
          let r2 = this.distancePoint(t2, e2), n2 = (e2.getX() - t2.getX()) / r2, i2 = (e2.getY() - t2.getY()) / r2, s2 = 0, o2 = t2.getX(), a2 = t2.getY(), h2 = this.image.get(t2.getX(), t2.getY()), l2 = Math.ceil(r2);
          for (let t3 = 0; t3 < l2; t3++) o2 += n2, a2 += i2, this.image.get(et.round(o2), et.round(a2)) !== h2 && s2++;
          let c2 = s2 / r2;
          return c2 > 0.1 && c2 < 0.9 ? 0 : c2 <= 0.1 === h2 ? 1 : -1;
        }
        getFirstDifferent(t2, e2, r2, n2) {
          let i2 = t2.getX() + r2, s2 = t2.getY() + n2;
          for (; this.isValid(i2, s2) && this.image.get(i2, s2) === e2; ) i2 += r2, s2 += n2;
          for (i2 -= r2, s2 -= n2; this.isValid(i2, s2) && this.image.get(i2, s2) === e2; ) i2 += r2;
          for (i2 -= r2; this.isValid(i2, s2) && this.image.get(i2, s2) === e2; ) s2 += n2;
          return s2 -= n2, new dt(i2, s2);
        }
        expandSquare(t2, e2, r2) {
          let n2 = r2 / (2 * e2), i2 = t2[0].getX() - t2[2].getX(), s2 = t2[0].getY() - t2[2].getY(), o2 = (t2[0].getX() + t2[2].getX()) / 2, a2 = (t2[0].getY() + t2[2].getY()) / 2, h2 = new nt(o2 + n2 * i2, a2 + n2 * s2), l2 = new nt(o2 - n2 * i2, a2 - n2 * s2);
          return i2 = t2[1].getX() - t2[3].getX(), s2 = t2[1].getY() - t2[3].getY(), o2 = (t2[1].getX() + t2[3].getX()) / 2, a2 = (t2[1].getY() + t2[3].getY()) / 2, [h2, new nt(o2 + n2 * i2, a2 + n2 * s2), l2, new nt(o2 - n2 * i2, a2 - n2 * s2)];
        }
        isValid(t2, e2) {
          return t2 >= 0 && t2 < this.image.getWidth() && e2 > 0 && e2 < this.image.getHeight();
        }
        isValidPoint(t2) {
          let e2 = et.round(t2.getX()), r2 = et.round(t2.getY());
          return this.isValid(e2, r2);
        }
        distancePoint(t2, e2) {
          return et.distance(t2.getX(), t2.getY(), e2.getX(), e2.getY());
        }
        distanceResultPoint(t2, e2) {
          return et.distance(t2.getX(), t2.getY(), e2.getX(), e2.getY());
        }
        getDimension() {
          return this.compact ? 4 * this.nbLayers + 11 : this.nbLayers <= 4 ? 4 * this.nbLayers + 15 : 4 * this.nbLayers + 2 * (w.truncDivision(this.nbLayers - 4, 8) + 1) + 15;
        }
      }
      class gt {
        decode(t2, e2 = null) {
          let r2 = null, n2 = new ut(t2.getBlackMatrix()), i2 = null, s2 = null;
          try {
            let t3 = n2.detectMirror(false);
            i2 = t3.getPoints(), this.reportFoundResultPoints(e2, i2), s2 = new tt().decode(t3);
          } catch (t3) {
            r2 = t3;
          }
          if (null == s2) try {
            let t3 = n2.detectMirror(true);
            i2 = t3.getPoints(), this.reportFoundResultPoints(e2, i2), s2 = new tt().decode(t3);
          } catch (t3) {
            if (null != r2) throw r2;
            throw t3;
          }
          let o2 = new v(s2.getText(), s2.getRawBytes(), s2.getNumBits(), i2, x.AZTEC, d.currentTimeMillis()), a2 = s2.getByteSegments();
          null != a2 && o2.putMetadata(z.BYTE_SEGMENTS, a2);
          let h2 = s2.getECLevel();
          return null != h2 && o2.putMetadata(z.ERROR_CORRECTION_LEVEL, h2), o2;
        }
        reportFoundResultPoints(t2, e2) {
          if (null != t2) {
            let r2 = t2.get(E.NEED_RESULT_POINT_CALLBACK);
            null != r2 && e2.forEach((t3, e3, n2) => {
              r2.foundPossibleResultPoint(t3);
            });
          }
        }
        reset() {
        }
      }
      class ft {
        decode(t2, e2) {
          try {
            return this.doDecode(t2, e2);
          } catch (r2) {
            if (e2 && true === e2.get(E.TRY_HARDER) && t2.isRotateSupported()) {
              const r3 = t2.rotateCounterClockwise(), n2 = this.doDecode(r3, e2), i2 = n2.getResultMetadata();
              let s2 = 270;
              null !== i2 && true === i2.get(z.ORIENTATION) && (s2 += i2.get(z.ORIENTATION) % 360), n2.putMetadata(z.ORIENTATION, s2);
              const o2 = n2.getResultPoints();
              if (null !== o2) {
                const t3 = r3.getHeight();
                for (let e3 = 0; e3 < o2.length; e3++) o2[e3] = new nt(t3 - o2[e3].getY() - 1, o2[e3].getX());
              }
              return n2;
            }
            throw new N();
          }
        }
        reset() {
        }
        doDecode(t2, e2) {
          const r2 = t2.getWidth(), n2 = t2.getHeight();
          let i2 = new C(r2);
          const s2 = e2 && true === e2.get(E.TRY_HARDER), o2 = Math.max(1, n2 >> (s2 ? 8 : 5));
          let a2;
          a2 = s2 ? n2 : 15;
          const h2 = Math.trunc(n2 / 2);
          for (let s3 = 0; s3 < a2; s3++) {
            const a3 = Math.trunc((s3 + 1) / 2), l2 = h2 + o2 * (!(1 & s3) ? a3 : -a3);
            if (l2 < 0 || l2 >= n2) break;
            try {
              i2 = t2.getBlackRow(l2, i2);
            } catch (t3) {
              continue;
            }
            for (let t3 = 0; t3 < 2; t3++) {
              if (1 === t3 && (i2.reverse(), e2 && true === e2.get(E.NEED_RESULT_POINT_CALLBACK))) {
                const t4 = /* @__PURE__ */ new Map();
                e2.forEach((e3, r3) => t4.set(r3, e3)), t4.delete(E.NEED_RESULT_POINT_CALLBACK), e2 = t4;
              }
              try {
                const n3 = this.decodeRow(l2, i2, e2);
                if (1 === t3) {
                  n3.putMetadata(z.ORIENTATION, 180);
                  const t4 = n3.getResultPoints();
                  null !== t4 && (t4[0] = new nt(r2 - t4[0].getX() - 1, t4[0].getY()), t4[1] = new nt(r2 - t4[1].getX() - 1, t4[1].getY()));
                }
                return n3;
              } catch (t4) {
              }
            }
          }
          throw new N();
        }
        static recordPattern(t2, e2, r2) {
          const n2 = r2.length;
          for (let t3 = 0; t3 < n2; t3++) r2[t3] = 0;
          const i2 = t2.getSize();
          if (e2 >= i2) throw new N();
          let s2 = !t2.get(e2), o2 = 0, a2 = e2;
          for (; a2 < i2; ) {
            if (t2.get(a2) !== s2) r2[o2]++;
            else {
              if (++o2 === n2) break;
              r2[o2] = 1, s2 = !s2;
            }
            a2++;
          }
          if (o2 !== n2 && (o2 !== n2 - 1 || a2 !== i2)) throw new N();
        }
        static recordPatternInReverse(t2, e2, r2) {
          let n2 = r2.length, i2 = t2.get(e2);
          for (; e2 > 0 && n2 >= 0; ) t2.get(--e2) !== i2 && (n2--, i2 = !i2);
          if (n2 >= 0) throw new N();
          ft.recordPattern(t2, e2 + 1, r2);
        }
        static patternMatchVariance(t2, e2, r2) {
          const n2 = t2.length;
          let i2 = 0, s2 = 0;
          for (let r3 = 0; r3 < n2; r3++) i2 += t2[r3], s2 += e2[r3];
          if (i2 < s2) return Number.POSITIVE_INFINITY;
          const o2 = i2 / s2;
          r2 *= o2;
          let a2 = 0;
          for (let i3 = 0; i3 < n2; i3++) {
            const n3 = t2[i3], s3 = e2[i3] * o2, h2 = n3 > s3 ? n3 - s3 : s3 - n3;
            if (h2 > r2) return Number.POSITIVE_INFINITY;
            a2 += h2;
          }
          return a2 / i2;
        }
      }
      class wt extends ft {
        static findStartPattern(t2) {
          const e2 = t2.getSize(), r2 = t2.getNextSet(0);
          let n2 = 0, i2 = Int32Array.from([0, 0, 0, 0, 0, 0]), s2 = r2, o2 = false;
          for (let a2 = r2; a2 < e2; a2++) if (t2.get(a2) !== o2) i2[n2]++;
          else {
            if (5 === n2) {
              let e3 = wt.MAX_AVG_VARIANCE, r3 = -1;
              for (let t3 = wt.CODE_START_A; t3 <= wt.CODE_START_C; t3++) {
                const n3 = ft.patternMatchVariance(i2, wt.CODE_PATTERNS[t3], wt.MAX_INDIVIDUAL_VARIANCE);
                n3 < e3 && (e3 = n3, r3 = t3);
              }
              if (r3 >= 0 && t2.isRange(Math.max(0, s2 - (a2 - s2) / 2), s2, false)) return Int32Array.from([s2, a2, r3]);
              s2 += i2[0] + i2[1], i2 = i2.slice(2, i2.length), i2[n2 - 1] = 0, i2[n2] = 0, n2--;
            } else n2++;
            i2[n2] = 1, o2 = !o2;
          }
          throw new N();
        }
        static decodeCode(t2, e2, r2) {
          ft.recordPattern(t2, r2, e2);
          let n2 = wt.MAX_AVG_VARIANCE, i2 = -1;
          for (let t3 = 0; t3 < wt.CODE_PATTERNS.length; t3++) {
            const r3 = wt.CODE_PATTERNS[t3], s2 = this.patternMatchVariance(e2, r3, wt.MAX_INDIVIDUAL_VARIANCE);
            s2 < n2 && (n2 = s2, i2 = t3);
          }
          if (i2 >= 0) return i2;
          throw new N();
        }
        decodeRow(t2, e2, r2) {
          const n2 = r2 && true === r2.get(E.ASSUME_GS1), i2 = wt.findStartPattern(e2), s2 = i2[2];
          let o2 = 0;
          const a2 = new Uint8Array(20);
          let h2;
          switch (a2[o2++] = s2, s2) {
            case wt.CODE_START_A:
              h2 = wt.CODE_CODE_A;
              break;
            case wt.CODE_START_B:
              h2 = wt.CODE_CODE_B;
              break;
            case wt.CODE_START_C:
              h2 = wt.CODE_CODE_C;
              break;
            default:
              throw new m();
          }
          let c2 = false, d2 = false, u2 = "", g2 = i2[0], f2 = i2[1];
          const w2 = Int32Array.from([0, 0, 0, 0, 0, 0]);
          let C2 = 0, A2 = 0, I2 = s2, _2 = 0, S2 = true, p2 = false, T2 = false;
          for (; !c2; ) {
            const t3 = d2;
            switch (d2 = false, C2 = A2, A2 = wt.decodeCode(e2, w2, f2), a2[o2++] = A2, A2 !== wt.CODE_STOP && (S2 = true), A2 !== wt.CODE_STOP && (_2++, I2 += _2 * A2), g2 = f2, f2 += w2.reduce((t4, e3) => t4 + e3, 0), A2) {
              case wt.CODE_START_A:
              case wt.CODE_START_B:
              case wt.CODE_START_C:
                throw new m();
            }
            switch (h2) {
              case wt.CODE_CODE_A:
                if (A2 < 64) u2 += T2 === p2 ? String.fromCharCode(" ".charCodeAt(0) + A2) : String.fromCharCode(" ".charCodeAt(0) + A2 + 128), T2 = false;
                else if (A2 < 96) u2 += T2 === p2 ? String.fromCharCode(A2 - 64) : String.fromCharCode(A2 + 64), T2 = false;
                else switch (A2 !== wt.CODE_STOP && (S2 = false), A2) {
                  case wt.CODE_FNC_1:
                    n2 && (0 === u2.length ? u2 += "]C1" : u2 += String.fromCharCode(29));
                    break;
                  case wt.CODE_FNC_2:
                  case wt.CODE_FNC_3:
                    break;
                  case wt.CODE_FNC_4_A:
                    !p2 && T2 ? (p2 = true, T2 = false) : p2 && T2 ? (p2 = false, T2 = false) : T2 = true;
                    break;
                  case wt.CODE_SHIFT:
                    d2 = true, h2 = wt.CODE_CODE_B;
                    break;
                  case wt.CODE_CODE_B:
                    h2 = wt.CODE_CODE_B;
                    break;
                  case wt.CODE_CODE_C:
                    h2 = wt.CODE_CODE_C;
                    break;
                  case wt.CODE_STOP:
                    c2 = true;
                }
                break;
              case wt.CODE_CODE_B:
                if (A2 < 96) u2 += T2 === p2 ? String.fromCharCode(" ".charCodeAt(0) + A2) : String.fromCharCode(" ".charCodeAt(0) + A2 + 128), T2 = false;
                else switch (A2 !== wt.CODE_STOP && (S2 = false), A2) {
                  case wt.CODE_FNC_1:
                    n2 && (0 === u2.length ? u2 += "]C1" : u2 += String.fromCharCode(29));
                    break;
                  case wt.CODE_FNC_2:
                  case wt.CODE_FNC_3:
                    break;
                  case wt.CODE_FNC_4_B:
                    !p2 && T2 ? (p2 = true, T2 = false) : p2 && T2 ? (p2 = false, T2 = false) : T2 = true;
                    break;
                  case wt.CODE_SHIFT:
                    d2 = true, h2 = wt.CODE_CODE_A;
                    break;
                  case wt.CODE_CODE_A:
                    h2 = wt.CODE_CODE_A;
                    break;
                  case wt.CODE_CODE_C:
                    h2 = wt.CODE_CODE_C;
                    break;
                  case wt.CODE_STOP:
                    c2 = true;
                }
                break;
              case wt.CODE_CODE_C:
                if (A2 < 100) A2 < 10 && (u2 += "0"), u2 += A2;
                else switch (A2 !== wt.CODE_STOP && (S2 = false), A2) {
                  case wt.CODE_FNC_1:
                    n2 && (0 === u2.length ? u2 += "]C1" : u2 += String.fromCharCode(29));
                    break;
                  case wt.CODE_CODE_A:
                    h2 = wt.CODE_CODE_A;
                    break;
                  case wt.CODE_CODE_B:
                    h2 = wt.CODE_CODE_B;
                    break;
                  case wt.CODE_STOP:
                    c2 = true;
                }
            }
            t3 && (h2 = h2 === wt.CODE_CODE_A ? wt.CODE_CODE_B : wt.CODE_CODE_A);
          }
          const R2 = f2 - g2;
          if (f2 = e2.getNextUnset(f2), !e2.isRange(f2, Math.min(e2.getSize(), f2 + (f2 - g2) / 2), false)) throw new N();
          if (I2 -= _2 * C2, I2 % 103 !== C2) throw new l();
          const y2 = u2.length;
          if (0 === y2) throw new N();
          y2 > 0 && S2 && (u2 = h2 === wt.CODE_CODE_C ? u2.substring(0, y2 - 2) : u2.substring(0, y2 - 1));
          const D2 = (i2[1] + i2[0]) / 2, O2 = g2 + R2 / 2, M2 = a2.length, b2 = new Uint8Array(M2);
          for (let t3 = 0; t3 < M2; t3++) b2[t3] = a2[t3];
          const B2 = [new nt(D2, t2), new nt(O2, t2)];
          return new v(u2, b2, 0, B2, x.CODE_128, (/* @__PURE__ */ new Date()).getTime());
        }
      }
      wt.CODE_PATTERNS = [Int32Array.from([2, 1, 2, 2, 2, 2]), Int32Array.from([2, 2, 2, 1, 2, 2]), Int32Array.from([2, 2, 2, 2, 2, 1]), Int32Array.from([1, 2, 1, 2, 2, 3]), Int32Array.from([1, 2, 1, 3, 2, 2]), Int32Array.from([1, 3, 1, 2, 2, 2]), Int32Array.from([1, 2, 2, 2, 1, 3]), Int32Array.from([1, 2, 2, 3, 1, 2]), Int32Array.from([1, 3, 2, 2, 1, 2]), Int32Array.from([2, 2, 1, 2, 1, 3]), Int32Array.from([2, 2, 1, 3, 1, 2]), Int32Array.from([2, 3, 1, 2, 1, 2]), Int32Array.from([1, 1, 2, 2, 3, 2]), Int32Array.from([1, 2, 2, 1, 3, 2]), Int32Array.from([1, 2, 2, 2, 3, 1]), Int32Array.from([1, 1, 3, 2, 2, 2]), Int32Array.from([1, 2, 3, 1, 2, 2]), Int32Array.from([1, 2, 3, 2, 2, 1]), Int32Array.from([2, 2, 3, 2, 1, 1]), Int32Array.from([2, 2, 1, 1, 3, 2]), Int32Array.from([2, 2, 1, 2, 3, 1]), Int32Array.from([2, 1, 3, 2, 1, 2]), Int32Array.from([2, 2, 3, 1, 1, 2]), Int32Array.from([3, 1, 2, 1, 3, 1]), Int32Array.from([3, 1, 1, 2, 2, 2]), Int32Array.from([3, 2, 1, 1, 2, 2]), Int32Array.from([3, 2, 1, 2, 2, 1]), Int32Array.from([3, 1, 2, 2, 1, 2]), Int32Array.from([3, 2, 2, 1, 1, 2]), Int32Array.from([3, 2, 2, 2, 1, 1]), Int32Array.from([2, 1, 2, 1, 2, 3]), Int32Array.from([2, 1, 2, 3, 2, 1]), Int32Array.from([2, 3, 2, 1, 2, 1]), Int32Array.from([1, 1, 1, 3, 2, 3]), Int32Array.from([1, 3, 1, 1, 2, 3]), Int32Array.from([1, 3, 1, 3, 2, 1]), Int32Array.from([1, 1, 2, 3, 1, 3]), Int32Array.from([1, 3, 2, 1, 1, 3]), Int32Array.from([1, 3, 2, 3, 1, 1]), Int32Array.from([2, 1, 1, 3, 1, 3]), Int32Array.from([2, 3, 1, 1, 1, 3]), Int32Array.from([2, 3, 1, 3, 1, 1]), Int32Array.from([1, 1, 2, 1, 3, 3]), Int32Array.from([1, 1, 2, 3, 3, 1]), Int32Array.from([1, 3, 2, 1, 3, 1]), Int32Array.from([1, 1, 3, 1, 2, 3]), Int32Array.from([1, 1, 3, 3, 2, 1]), Int32Array.from([1, 3, 3, 1, 2, 1]), Int32Array.from([3, 1, 3, 1, 2, 1]), Int32Array.from([2, 1, 1, 3, 3, 1]), Int32Array.from([2, 3, 1, 1, 3, 1]), Int32Array.from([2, 1, 3, 1, 1, 3]), Int32Array.from([2, 1, 3, 3, 1, 1]), Int32Array.from([2, 1, 3, 1, 3, 1]), Int32Array.from([3, 1, 1, 1, 2, 3]), Int32Array.from([3, 1, 1, 3, 2, 1]), Int32Array.from([3, 3, 1, 1, 2, 1]), Int32Array.from([3, 1, 2, 1, 1, 3]), Int32Array.from([3, 1, 2, 3, 1, 1]), Int32Array.from([3, 3, 2, 1, 1, 1]), Int32Array.from([3, 1, 4, 1, 1, 1]), Int32Array.from([2, 2, 1, 4, 1, 1]), Int32Array.from([4, 3, 1, 1, 1, 1]), Int32Array.from([1, 1, 1, 2, 2, 4]), Int32Array.from([1, 1, 1, 4, 2, 2]), Int32Array.from([1, 2, 1, 1, 2, 4]), Int32Array.from([1, 2, 1, 4, 2, 1]), Int32Array.from([1, 4, 1, 1, 2, 2]), Int32Array.from([1, 4, 1, 2, 2, 1]), Int32Array.from([1, 1, 2, 2, 1, 4]), Int32Array.from([1, 1, 2, 4, 1, 2]), Int32Array.from([1, 2, 2, 1, 1, 4]), Int32Array.from([1, 2, 2, 4, 1, 1]), Int32Array.from([1, 4, 2, 1, 1, 2]), Int32Array.from([1, 4, 2, 2, 1, 1]), Int32Array.from([2, 4, 1, 2, 1, 1]), Int32Array.from([2, 2, 1, 1, 1, 4]), Int32Array.from([4, 1, 3, 1, 1, 1]), Int32Array.from([2, 4, 1, 1, 1, 2]), Int32Array.from([1, 3, 4, 1, 1, 1]), Int32Array.from([1, 1, 1, 2, 4, 2]), Int32Array.from([1, 2, 1, 1, 4, 2]), Int32Array.from([1, 2, 1, 2, 4, 1]), Int32Array.from([1, 1, 4, 2, 1, 2]), Int32Array.from([1, 2, 4, 1, 1, 2]), Int32Array.from([1, 2, 4, 2, 1, 1]), Int32Array.from([4, 1, 1, 2, 1, 2]), Int32Array.from([4, 2, 1, 1, 1, 2]), Int32Array.from([4, 2, 1, 2, 1, 1]), Int32Array.from([2, 1, 2, 1, 4, 1]), Int32Array.from([2, 1, 4, 1, 2, 1]), Int32Array.from([4, 1, 2, 1, 2, 1]), Int32Array.from([1, 1, 1, 1, 4, 3]), Int32Array.from([1, 1, 1, 3, 4, 1]), Int32Array.from([1, 3, 1, 1, 4, 1]), Int32Array.from([1, 1, 4, 1, 1, 3]), Int32Array.from([1, 1, 4, 3, 1, 1]), Int32Array.from([4, 1, 1, 1, 1, 3]), Int32Array.from([4, 1, 1, 3, 1, 1]), Int32Array.from([1, 1, 3, 1, 4, 1]), Int32Array.from([1, 1, 4, 1, 3, 1]), Int32Array.from([3, 1, 1, 1, 4, 1]), Int32Array.from([4, 1, 1, 1, 3, 1]), Int32Array.from([2, 1, 1, 4, 1, 2]), Int32Array.from([2, 1, 1, 2, 1, 4]), Int32Array.from([2, 1, 1, 2, 3, 2]), Int32Array.from([2, 3, 3, 1, 1, 1, 2])], wt.MAX_AVG_VARIANCE = 0.25, wt.MAX_INDIVIDUAL_VARIANCE = 0.7, wt.CODE_SHIFT = 98, wt.CODE_CODE_C = 99, wt.CODE_CODE_B = 100, wt.CODE_CODE_A = 101, wt.CODE_FNC_1 = 102, wt.CODE_FNC_2 = 97, wt.CODE_FNC_3 = 96, wt.CODE_FNC_4_A = 101, wt.CODE_FNC_4_B = 100, wt.CODE_START_A = 103, wt.CODE_START_B = 104, wt.CODE_START_C = 105, wt.CODE_STOP = 106;
      class Ct extends ft {
        constructor(t2 = false, e2 = false) {
          super(), this.usingCheckDigit = t2, this.extendedMode = e2, this.decodeRowResult = "", this.counters = new Int32Array(9);
        }
        decodeRow(t2, e2, r2) {
          let n2 = this.counters;
          n2.fill(0), this.decodeRowResult = "";
          let i2, s2, o2 = Ct.findAsteriskPattern(e2, n2), a2 = e2.getNextSet(o2[1]), h2 = e2.getSize();
          do {
            Ct.recordPattern(e2, a2, n2);
            let t3 = Ct.toNarrowWidePattern(n2);
            if (t3 < 0) throw new N();
            i2 = Ct.patternToChar(t3), this.decodeRowResult += i2, s2 = a2;
            for (let t4 of n2) a2 += t4;
            a2 = e2.getNextSet(a2);
          } while ("*" !== i2);
          this.decodeRowResult = this.decodeRowResult.substring(0, this.decodeRowResult.length - 1);
          let c2, d2 = 0;
          for (let t3 of n2) d2 += t3;
          if (a2 !== h2 && 2 * (a2 - s2 - d2) < d2) throw new N();
          if (this.usingCheckDigit) {
            let t3 = this.decodeRowResult.length - 1, e3 = 0;
            for (let r3 = 0; r3 < t3; r3++) e3 += Ct.ALPHABET_STRING.indexOf(this.decodeRowResult.charAt(r3));
            if (this.decodeRowResult.charAt(t3) !== Ct.ALPHABET_STRING.charAt(e3 % 43)) throw new l();
            this.decodeRowResult = this.decodeRowResult.substring(0, t3);
          }
          if (0 === this.decodeRowResult.length) throw new N();
          c2 = this.extendedMode ? Ct.decodeExtended(this.decodeRowResult) : this.decodeRowResult;
          let u2 = (o2[1] + o2[0]) / 2, g2 = s2 + d2 / 2;
          return new v(c2, null, 0, [new nt(u2, t2), new nt(g2, t2)], x.CODE_39, (/* @__PURE__ */ new Date()).getTime());
        }
        static findAsteriskPattern(t2, e2) {
          let r2 = t2.getSize(), n2 = t2.getNextSet(0), i2 = 0, s2 = n2, o2 = false, a2 = e2.length;
          for (let h2 = n2; h2 < r2; h2++) if (t2.get(h2) !== o2) e2[i2]++;
          else {
            if (i2 === a2 - 1) {
              if (this.toNarrowWidePattern(e2) === Ct.ASTERISK_ENCODING && t2.isRange(Math.max(0, s2 - Math.floor((h2 - s2) / 2)), s2, false)) return [s2, h2];
              s2 += e2[0] + e2[1], e2.copyWithin(0, 2, 2 + i2 - 1), e2[i2 - 1] = 0, e2[i2] = 0, i2--;
            } else i2++;
            e2[i2] = 1, o2 = !o2;
          }
          throw new N();
        }
        static toNarrowWidePattern(t2) {
          let e2, r2 = t2.length, n2 = 0;
          do {
            let i2 = 2147483647;
            for (let e3 of t2) e3 < i2 && e3 > n2 && (i2 = e3);
            n2 = i2, e2 = 0;
            let s2 = 0, o2 = 0;
            for (let i3 = 0; i3 < r2; i3++) {
              let a2 = t2[i3];
              a2 > n2 && (o2 |= 1 << r2 - 1 - i3, e2++, s2 += a2);
            }
            if (3 === e2) {
              for (let i3 = 0; i3 < r2 && e2 > 0; i3++) {
                let r3 = t2[i3];
                if (r3 > n2 && (e2--, 2 * r3 >= s2)) return -1;
              }
              return o2;
            }
          } while (e2 > 3);
          return -1;
        }
        static patternToChar(t2) {
          for (let e2 = 0; e2 < Ct.CHARACTER_ENCODINGS.length; e2++) if (Ct.CHARACTER_ENCODINGS[e2] === t2) return Ct.ALPHABET_STRING.charAt(e2);
          if (t2 === Ct.ASTERISK_ENCODING) return "*";
          throw new N();
        }
        static decodeExtended(t2) {
          let e2 = t2.length, r2 = "";
          for (let n2 = 0; n2 < e2; n2++) {
            let e3 = t2.charAt(n2);
            if ("+" === e3 || "$" === e3 || "%" === e3 || "/" === e3) {
              let i2 = t2.charAt(n2 + 1), s2 = "\0";
              switch (e3) {
                case "+":
                  if (!(i2 >= "A" && i2 <= "Z")) throw new m();
                  s2 = String.fromCharCode(i2.charCodeAt(0) + 32);
                  break;
                case "$":
                  if (!(i2 >= "A" && i2 <= "Z")) throw new m();
                  s2 = String.fromCharCode(i2.charCodeAt(0) - 64);
                  break;
                case "%":
                  if (i2 >= "A" && i2 <= "E") s2 = String.fromCharCode(i2.charCodeAt(0) - 38);
                  else if (i2 >= "F" && i2 <= "J") s2 = String.fromCharCode(i2.charCodeAt(0) - 11);
                  else if (i2 >= "K" && i2 <= "O") s2 = String.fromCharCode(i2.charCodeAt(0) + 16);
                  else if (i2 >= "P" && i2 <= "T") s2 = String.fromCharCode(i2.charCodeAt(0) + 43);
                  else if ("U" === i2) s2 = "\0";
                  else if ("V" === i2) s2 = "@";
                  else if ("W" === i2) s2 = "`";
                  else {
                    if ("X" !== i2 && "Y" !== i2 && "Z" !== i2) throw new m();
                    s2 = "";
                  }
                  break;
                case "/":
                  if (i2 >= "A" && i2 <= "O") s2 = String.fromCharCode(i2.charCodeAt(0) - 32);
                  else {
                    if ("Z" !== i2) throw new m();
                    s2 = ":";
                  }
              }
              r2 += s2, n2++;
            } else r2 += e3;
          }
          return r2;
        }
      }
      Ct.ALPHABET_STRING = "0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ-. $/+%", Ct.CHARACTER_ENCODINGS = [52, 289, 97, 352, 49, 304, 112, 37, 292, 100, 265, 73, 328, 25, 280, 88, 13, 268, 76, 28, 259, 67, 322, 19, 274, 82, 7, 262, 70, 22, 385, 193, 448, 145, 400, 208, 133, 388, 196, 168, 162, 138, 42], Ct.ASTERISK_ENCODING = 148;
      class At extends ft {
        constructor() {
          super(), this.decodeRowResult = "", this.counters = new Int32Array(6);
        }
        decodeRow(t2, e2, r2) {
          let n2, i2, s2 = this.findAsteriskPattern(e2), o2 = e2.getNextSet(s2[1]), a2 = e2.getSize(), h2 = this.counters;
          h2.fill(0), this.decodeRowResult = "";
          do {
            At.recordPattern(e2, o2, h2);
            let t3 = this.toPattern(h2);
            if (t3 < 0) throw new N();
            n2 = this.patternToChar(t3), this.decodeRowResult += n2, i2 = o2;
            for (let t4 of h2) o2 += t4;
            o2 = e2.getNextSet(o2);
          } while ("*" !== n2);
          this.decodeRowResult = this.decodeRowResult.substring(0, this.decodeRowResult.length - 1);
          let l2 = 0;
          for (let t3 of h2) l2 += t3;
          if (o2 === a2 || !e2.get(o2)) throw new N();
          if (this.decodeRowResult.length < 2) throw new N();
          this.checkChecksums(this.decodeRowResult), this.decodeRowResult = this.decodeRowResult.substring(0, this.decodeRowResult.length - 2);
          let c2 = this.decodeExtended(this.decodeRowResult), d2 = (s2[1] + s2[0]) / 2, u2 = i2 + l2 / 2;
          return new v(c2, null, 0, [new nt(d2, t2), new nt(u2, t2)], x.CODE_93, (/* @__PURE__ */ new Date()).getTime());
        }
        findAsteriskPattern(t2) {
          let e2 = t2.getSize(), r2 = t2.getNextSet(0);
          this.counters.fill(0);
          let n2 = this.counters, i2 = r2, s2 = false, o2 = n2.length, a2 = 0;
          for (let h2 = r2; h2 < e2; h2++) if (t2.get(h2) !== s2) n2[a2]++;
          else {
            if (a2 === o2 - 1) {
              if (this.toPattern(n2) === At.ASTERISK_ENCODING) return new Int32Array([i2, h2]);
              i2 += n2[0] + n2[1], n2.copyWithin(0, 2, 2 + a2 - 1), n2[a2 - 1] = 0, n2[a2] = 0, a2--;
            } else a2++;
            n2[a2] = 1, s2 = !s2;
          }
          throw new N();
        }
        toPattern(t2) {
          let e2 = 0;
          for (const r3 of t2) e2 += r3;
          let r2 = 0, n2 = t2.length;
          for (let i2 = 0; i2 < n2; i2++) {
            let n3 = Math.round(9 * t2[i2] / e2);
            if (n3 < 1 || n3 > 4) return -1;
            if (1 & i2) r2 <<= n3;
            else for (let t3 = 0; t3 < n3; t3++) r2 = r2 << 1 | 1;
          }
          return r2;
        }
        patternToChar(t2) {
          for (let e2 = 0; e2 < At.CHARACTER_ENCODINGS.length; e2++) if (At.CHARACTER_ENCODINGS[e2] === t2) return At.ALPHABET_STRING.charAt(e2);
          throw new N();
        }
        decodeExtended(t2) {
          let e2 = t2.length, r2 = "";
          for (let n2 = 0; n2 < e2; n2++) {
            let i2 = t2.charAt(n2);
            if (i2 >= "a" && i2 <= "d") {
              if (n2 >= e2 - 1) throw new m();
              let s2 = t2.charAt(n2 + 1), o2 = "\0";
              switch (i2) {
                case "d":
                  if (!(s2 >= "A" && s2 <= "Z")) throw new m();
                  o2 = String.fromCharCode(s2.charCodeAt(0) + 32);
                  break;
                case "a":
                  if (!(s2 >= "A" && s2 <= "Z")) throw new m();
                  o2 = String.fromCharCode(s2.charCodeAt(0) - 64);
                  break;
                case "b":
                  if (s2 >= "A" && s2 <= "E") o2 = String.fromCharCode(s2.charCodeAt(0) - 38);
                  else if (s2 >= "F" && s2 <= "J") o2 = String.fromCharCode(s2.charCodeAt(0) - 11);
                  else if (s2 >= "K" && s2 <= "O") o2 = String.fromCharCode(s2.charCodeAt(0) + 16);
                  else if (s2 >= "P" && s2 <= "T") o2 = String.fromCharCode(s2.charCodeAt(0) + 43);
                  else if ("U" === s2) o2 = "\0";
                  else if ("V" === s2) o2 = "@";
                  else if ("W" === s2) o2 = "`";
                  else {
                    if (!(s2 >= "X" && s2 <= "Z")) throw new m();
                    o2 = String.fromCharCode(127);
                  }
                  break;
                case "c":
                  if (s2 >= "A" && s2 <= "O") o2 = String.fromCharCode(s2.charCodeAt(0) - 32);
                  else {
                    if ("Z" !== s2) throw new m();
                    o2 = ":";
                  }
              }
              r2 += o2, n2++;
            } else r2 += i2;
          }
          return r2;
        }
        checkChecksums(t2) {
          let e2 = t2.length;
          this.checkOneChecksum(t2, e2 - 2, 20), this.checkOneChecksum(t2, e2 - 1, 15);
        }
        checkOneChecksum(t2, e2, r2) {
          let n2 = 1, i2 = 0;
          for (let s2 = e2 - 1; s2 >= 0; s2--) i2 += n2 * At.ALPHABET_STRING.indexOf(t2.charAt(s2)), ++n2 > r2 && (n2 = 1);
          if (t2.charAt(e2) !== At.ALPHABET_STRING[i2 % 47]) throw new l();
        }
      }
      At.ALPHABET_STRING = "0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ-. $/+%abcd*", At.CHARACTER_ENCODINGS = [276, 328, 324, 322, 296, 292, 290, 336, 274, 266, 424, 420, 418, 404, 402, 394, 360, 356, 354, 308, 282, 344, 332, 326, 300, 278, 436, 434, 428, 422, 406, 410, 364, 358, 310, 314, 302, 468, 466, 458, 366, 374, 430, 294, 474, 470, 306, 350], At.ASTERISK_ENCODING = At.CHARACTER_ENCODINGS[47];
      class Et extends ft {
        constructor() {
          super(...arguments), this.narrowLineWidth = -1;
        }
        decodeRow(t2, e2, r2) {
          let n2 = this.decodeStart(e2), i2 = this.decodeEnd(e2), s2 = new T();
          Et.decodeMiddle(e2, n2[1], i2[0], s2);
          let o2 = s2.toString(), a2 = null;
          null != r2 && (a2 = r2.get(E.ALLOWED_LENGTHS)), null == a2 && (a2 = Et.DEFAULT_ALLOWED_LENGTHS);
          let h2 = o2.length, l2 = false, c2 = 0;
          for (let t3 of a2) {
            if (h2 === t3) {
              l2 = true;
              break;
            }
            t3 > c2 && (c2 = t3);
          }
          if (!l2 && h2 > c2 && (l2 = true), !l2) throw new m();
          const d2 = [new nt(n2[1], t2), new nt(i2[0], t2)];
          return new v(o2, null, 0, d2, x.ITF, (/* @__PURE__ */ new Date()).getTime());
        }
        static decodeMiddle(t2, e2, r2, n2) {
          let i2 = new Int32Array(10), s2 = new Int32Array(5), o2 = new Int32Array(5);
          for (i2.fill(0), s2.fill(0), o2.fill(0); e2 < r2; ) {
            ft.recordPattern(t2, e2, i2);
            for (let t3 = 0; t3 < 5; t3++) {
              let e3 = 2 * t3;
              s2[t3] = i2[e3], o2[t3] = i2[e3 + 1];
            }
            let r3 = Et.decodeDigit(s2);
            n2.append(r3.toString()), r3 = this.decodeDigit(o2), n2.append(r3.toString()), i2.forEach(function(t3) {
              e2 += t3;
            });
          }
        }
        decodeStart(t2) {
          let e2 = Et.skipWhiteSpace(t2), r2 = Et.findGuardPattern(t2, e2, Et.START_PATTERN);
          return this.narrowLineWidth = (r2[1] - r2[0]) / 4, this.validateQuietZone(t2, r2[0]), r2;
        }
        validateQuietZone(t2, e2) {
          let r2 = 10 * this.narrowLineWidth;
          r2 = r2 < e2 ? r2 : e2;
          for (let n2 = e2 - 1; r2 > 0 && n2 >= 0 && !t2.get(n2); n2--) r2--;
          if (0 !== r2) throw new N();
        }
        static skipWhiteSpace(t2) {
          const e2 = t2.getSize(), r2 = t2.getNextSet(0);
          if (r2 === e2) throw new N();
          return r2;
        }
        decodeEnd(t2) {
          t2.reverse();
          try {
            let e2, r2 = Et.skipWhiteSpace(t2);
            try {
              e2 = Et.findGuardPattern(t2, r2, Et.END_PATTERN_REVERSED[0]);
            } catch (n3) {
              n3 instanceof N && (e2 = Et.findGuardPattern(t2, r2, Et.END_PATTERN_REVERSED[1]));
            }
            this.validateQuietZone(t2, e2[0]);
            let n2 = e2[0];
            return e2[0] = t2.getSize() - e2[1], e2[1] = t2.getSize() - n2, e2;
          } finally {
            t2.reverse();
          }
        }
        static findGuardPattern(t2, e2, r2) {
          let n2 = r2.length, i2 = new Int32Array(n2), s2 = t2.getSize(), o2 = false, a2 = 0, h2 = e2;
          i2.fill(0);
          for (let l2 = e2; l2 < s2; l2++) if (t2.get(l2) !== o2) i2[a2]++;
          else {
            if (a2 === n2 - 1) {
              if (ft.patternMatchVariance(i2, r2, Et.MAX_INDIVIDUAL_VARIANCE) < Et.MAX_AVG_VARIANCE) return [h2, l2];
              h2 += i2[0] + i2[1], d.arraycopy(i2, 2, i2, 0, a2 - 1), i2[a2 - 1] = 0, i2[a2] = 0, a2--;
            } else a2++;
            i2[a2] = 1, o2 = !o2;
          }
          throw new N();
        }
        static decodeDigit(t2) {
          let e2 = Et.MAX_AVG_VARIANCE, r2 = -1, n2 = Et.PATTERNS.length;
          for (let i2 = 0; i2 < n2; i2++) {
            let n3 = Et.PATTERNS[i2], s2 = ft.patternMatchVariance(t2, n3, Et.MAX_INDIVIDUAL_VARIANCE);
            s2 < e2 ? (e2 = s2, r2 = i2) : s2 === e2 && (r2 = -1);
          }
          if (r2 >= 0) return r2 % 10;
          throw new N();
        }
      }
      Et.PATTERNS = [Int32Array.from([1, 1, 2, 2, 1]), Int32Array.from([2, 1, 1, 1, 2]), Int32Array.from([1, 2, 1, 1, 2]), Int32Array.from([2, 2, 1, 1, 1]), Int32Array.from([1, 1, 2, 1, 2]), Int32Array.from([2, 1, 2, 1, 1]), Int32Array.from([1, 2, 2, 1, 1]), Int32Array.from([1, 1, 1, 2, 2]), Int32Array.from([2, 1, 1, 2, 1]), Int32Array.from([1, 2, 1, 2, 1]), Int32Array.from([1, 1, 3, 3, 1]), Int32Array.from([3, 1, 1, 1, 3]), Int32Array.from([1, 3, 1, 1, 3]), Int32Array.from([3, 3, 1, 1, 1]), Int32Array.from([1, 1, 3, 1, 3]), Int32Array.from([3, 1, 3, 1, 1]), Int32Array.from([1, 3, 3, 1, 1]), Int32Array.from([1, 1, 1, 3, 3]), Int32Array.from([3, 1, 1, 3, 1]), Int32Array.from([1, 3, 1, 3, 1])], Et.MAX_AVG_VARIANCE = 0.38, Et.MAX_INDIVIDUAL_VARIANCE = 0.5, Et.DEFAULT_ALLOWED_LENGTHS = [6, 8, 10, 12, 14], Et.START_PATTERN = Int32Array.from([1, 1, 1, 1]), Et.END_PATTERN_REVERSED = [Int32Array.from([1, 1, 2]), Int32Array.from([1, 1, 3])];
      class mt extends ft {
        constructor() {
          super(...arguments), this.decodeRowStringBuffer = "";
        }
        static findStartGuardPattern(t2) {
          let e2, r2 = false, n2 = 0, i2 = Int32Array.from([0, 0, 0]);
          for (; !r2; ) {
            i2 = Int32Array.from([0, 0, 0]), e2 = mt.findGuardPattern(t2, n2, false, this.START_END_PATTERN, i2);
            let s2 = e2[0];
            n2 = e2[1];
            let o2 = s2 - (n2 - s2);
            o2 >= 0 && (r2 = t2.isRange(o2, s2, false));
          }
          return e2;
        }
        static checkChecksum(t2) {
          return mt.checkStandardUPCEANChecksum(t2);
        }
        static checkStandardUPCEANChecksum(t2) {
          let e2 = t2.length;
          if (0 === e2) return false;
          let r2 = parseInt(t2.charAt(e2 - 1), 10);
          return mt.getStandardUPCEANChecksum(t2.substring(0, e2 - 1)) === r2;
        }
        static getStandardUPCEANChecksum(t2) {
          let e2 = t2.length, r2 = 0;
          for (let n2 = e2 - 1; n2 >= 0; n2 -= 2) {
            let e3 = t2.charAt(n2).charCodeAt(0) - "0".charCodeAt(0);
            if (e3 < 0 || e3 > 9) throw new m();
            r2 += e3;
          }
          r2 *= 3;
          for (let n2 = e2 - 2; n2 >= 0; n2 -= 2) {
            let e3 = t2.charAt(n2).charCodeAt(0) - "0".charCodeAt(0);
            if (e3 < 0 || e3 > 9) throw new m();
            r2 += e3;
          }
          return (1e3 - r2) % 10;
        }
        static decodeEnd(t2, e2) {
          return mt.findGuardPattern(t2, e2, false, mt.START_END_PATTERN, new Int32Array(mt.START_END_PATTERN.length).fill(0));
        }
        static findGuardPatternWithoutCounters(t2, e2, r2, n2) {
          return this.findGuardPattern(t2, e2, r2, n2, new Int32Array(n2.length));
        }
        static findGuardPattern(t2, e2, r2, n2, i2) {
          let s2 = t2.getSize(), o2 = 0, a2 = e2 = r2 ? t2.getNextUnset(e2) : t2.getNextSet(e2), h2 = n2.length, l2 = r2;
          for (let r3 = e2; r3 < s2; r3++) if (t2.get(r3) !== l2) i2[o2]++;
          else {
            if (o2 === h2 - 1) {
              if (ft.patternMatchVariance(i2, n2, mt.MAX_INDIVIDUAL_VARIANCE) < mt.MAX_AVG_VARIANCE) return Int32Array.from([a2, r3]);
              a2 += i2[0] + i2[1];
              let t3 = i2.slice(2, i2.length);
              for (let e3 = 0; e3 < o2 - 1; e3++) i2[e3] = t3[e3];
              i2[o2 - 1] = 0, i2[o2] = 0, o2--;
            } else o2++;
            i2[o2] = 1, l2 = !l2;
          }
          throw new N();
        }
        static decodeDigit(t2, e2, r2, n2) {
          this.recordPattern(t2, r2, e2);
          let i2 = this.MAX_AVG_VARIANCE, s2 = -1, o2 = n2.length;
          for (let t3 = 0; t3 < o2; t3++) {
            let r3 = n2[t3], o3 = ft.patternMatchVariance(e2, r3, mt.MAX_INDIVIDUAL_VARIANCE);
            o3 < i2 && (i2 = o3, s2 = t3);
          }
          if (s2 >= 0) return s2;
          throw new N();
        }
      }
      mt.MAX_AVG_VARIANCE = 0.48, mt.MAX_INDIVIDUAL_VARIANCE = 0.7, mt.START_END_PATTERN = Int32Array.from([1, 1, 1]), mt.MIDDLE_PATTERN = Int32Array.from([1, 1, 1, 1, 1]), mt.END_PATTERN = Int32Array.from([1, 1, 1, 1, 1, 1]), mt.L_PATTERNS = [Int32Array.from([3, 2, 1, 1]), Int32Array.from([2, 2, 2, 1]), Int32Array.from([2, 1, 2, 2]), Int32Array.from([1, 4, 1, 1]), Int32Array.from([1, 1, 3, 2]), Int32Array.from([1, 2, 3, 1]), Int32Array.from([1, 1, 1, 4]), Int32Array.from([1, 3, 1, 2]), Int32Array.from([1, 2, 1, 3]), Int32Array.from([3, 1, 1, 2])];
      class It {
        constructor() {
          this.CHECK_DIGIT_ENCODINGS = [24, 20, 18, 17, 12, 6, 3, 10, 9, 5], this.decodeMiddleCounters = Int32Array.from([0, 0, 0, 0]), this.decodeRowStringBuffer = "";
        }
        decodeRow(t2, e2, r2) {
          let n2 = this.decodeRowStringBuffer, i2 = this.decodeMiddle(e2, r2, n2), s2 = n2.toString(), o2 = It.parseExtensionString(s2), a2 = [new nt((r2[0] + r2[1]) / 2, t2), new nt(i2, t2)], h2 = new v(s2, null, 0, a2, x.UPC_EAN_EXTENSION, (/* @__PURE__ */ new Date()).getTime());
          return null != o2 && h2.putAllMetadata(o2), h2;
        }
        decodeMiddle(t2, e2, r2) {
          let n2 = this.decodeMiddleCounters;
          n2[0] = 0, n2[1] = 0, n2[2] = 0, n2[3] = 0;
          let i2 = t2.getSize(), s2 = e2[1], o2 = 0;
          for (let e3 = 0; e3 < 5 && s2 < i2; e3++) {
            let i3 = mt.decodeDigit(t2, n2, s2, mt.L_AND_G_PATTERNS);
            r2 += String.fromCharCode("0".charCodeAt(0) + i3 % 10);
            for (let t3 of n2) s2 += t3;
            i3 >= 10 && (o2 |= 1 << 4 - e3), 4 !== e3 && (s2 = t2.getNextSet(s2), s2 = t2.getNextUnset(s2));
          }
          if (5 !== r2.length) throw new N();
          let a2 = this.determineCheckDigit(o2);
          if (It.extensionChecksum(r2.toString()) !== a2) throw new N();
          return s2;
        }
        static extensionChecksum(t2) {
          let e2 = t2.length, r2 = 0;
          for (let n2 = e2 - 2; n2 >= 0; n2 -= 2) r2 += t2.charAt(n2).charCodeAt(0) - "0".charCodeAt(0);
          r2 *= 3;
          for (let n2 = e2 - 1; n2 >= 0; n2 -= 2) r2 += t2.charAt(n2).charCodeAt(0) - "0".charCodeAt(0);
          return r2 *= 3, r2 % 10;
        }
        determineCheckDigit(t2) {
          for (let e2 = 0; e2 < 10; e2++) if (t2 === this.CHECK_DIGIT_ENCODINGS[e2]) return e2;
          throw new N();
        }
        static parseExtensionString(t2) {
          if (5 !== t2.length) return null;
          let e2 = It.parseExtension5String(t2);
          return null == e2 ? null : /* @__PURE__ */ new Map([[z.SUGGESTED_PRICE, e2]]);
        }
        static parseExtension5String(t2) {
          let e2;
          switch (t2.charAt(0)) {
            case "0":
              e2 = "£";
              break;
            case "5":
              e2 = "$";
              break;
            case "9":
              switch (t2) {
                case "90000":
                  return null;
                case "99991":
                  return "0.00";
                case "99990":
                  return "Used";
              }
              e2 = "";
              break;
            default:
              e2 = "";
          }
          let r2 = parseInt(t2.substring(1)), n2 = r2 % 100;
          return e2 + (r2 / 100).toString() + "." + (n2 < 10 ? "0" + n2 : n2.toString());
        }
      }
      class _t {
        constructor() {
          this.decodeMiddleCounters = Int32Array.from([0, 0, 0, 0]), this.decodeRowStringBuffer = "";
        }
        decodeRow(t2, e2, r2) {
          let n2 = this.decodeRowStringBuffer, i2 = this.decodeMiddle(e2, r2, n2), s2 = n2.toString(), o2 = _t.parseExtensionString(s2), a2 = [new nt((r2[0] + r2[1]) / 2, t2), new nt(i2, t2)], h2 = new v(s2, null, 0, a2, x.UPC_EAN_EXTENSION, (/* @__PURE__ */ new Date()).getTime());
          return null != o2 && h2.putAllMetadata(o2), h2;
        }
        decodeMiddle(t2, e2, r2) {
          let n2 = this.decodeMiddleCounters;
          n2[0] = 0, n2[1] = 0, n2[2] = 0, n2[3] = 0;
          let i2 = t2.getSize(), s2 = e2[1], o2 = 0;
          for (let e3 = 0; e3 < 2 && s2 < i2; e3++) {
            let i3 = mt.decodeDigit(t2, n2, s2, mt.L_AND_G_PATTERNS);
            r2 += String.fromCharCode("0".charCodeAt(0) + i3 % 10);
            for (let t3 of n2) s2 += t3;
            i3 >= 10 && (o2 |= 1 << 1 - e3), 1 !== e3 && (s2 = t2.getNextSet(s2), s2 = t2.getNextUnset(s2));
          }
          if (2 !== r2.length) throw new N();
          if (parseInt(r2.toString()) % 4 !== o2) throw new N();
          return s2;
        }
        static parseExtensionString(t2) {
          return 2 !== t2.length ? null : /* @__PURE__ */ new Map([[z.ISSUE_NUMBER, parseInt(t2)]]);
        }
      }
      class St {
        static decodeRow(t2, e2, r2) {
          let n2 = mt.findGuardPattern(e2, r2, false, this.EXTENSION_START_PATTERN, new Int32Array(this.EXTENSION_START_PATTERN.length).fill(0));
          try {
            return new It().decodeRow(t2, e2, n2);
          } catch (r3) {
            return new _t().decodeRow(t2, e2, n2);
          }
        }
      }
      St.EXTENSION_START_PATTERN = Int32Array.from([1, 1, 2]);
      class pt extends mt {
        constructor() {
          super(), this.decodeRowStringBuffer = "", pt.L_AND_G_PATTERNS = pt.L_PATTERNS.map((t2) => Int32Array.from(t2));
          for (let t2 = 10; t2 < 20; t2++) {
            let e2 = pt.L_PATTERNS[t2 - 10], r2 = new Int32Array(e2.length);
            for (let t3 = 0; t3 < e2.length; t3++) r2[t3] = e2[e2.length - t3 - 1];
            pt.L_AND_G_PATTERNS[t2] = r2;
          }
        }
        decodeRow(t2, e2, r2) {
          let n2 = pt.findStartGuardPattern(e2), i2 = null == r2 ? null : r2.get(E.NEED_RESULT_POINT_CALLBACK);
          if (null != i2) {
            const e3 = new nt((n2[0] + n2[1]) / 2, t2);
            i2.foundPossibleResultPoint(e3);
          }
          let s2 = this.decodeMiddle(e2, n2, this.decodeRowStringBuffer), o2 = s2.rowOffset, a2 = s2.resultString;
          if (null != i2) {
            const e3 = new nt(o2, t2);
            i2.foundPossibleResultPoint(e3);
          }
          let h2 = pt.decodeEnd(e2, o2);
          if (null != i2) {
            const e3 = new nt((h2[0] + h2[1]) / 2, t2);
            i2.foundPossibleResultPoint(e3);
          }
          let c2 = h2[1], d2 = c2 + (c2 - h2[0]);
          if (d2 >= e2.getSize() || !e2.isRange(c2, d2, false)) throw new N();
          let u2 = a2.toString();
          if (u2.length < 8) throw new m();
          if (!pt.checkChecksum(u2)) throw new l();
          let g2 = (n2[1] + n2[0]) / 2, f2 = (h2[1] + h2[0]) / 2, w2 = this.getBarcodeFormat(), C2 = [new nt(g2, t2), new nt(f2, t2)], A2 = new v(u2, null, 0, C2, w2, (/* @__PURE__ */ new Date()).getTime()), I2 = 0;
          try {
            let r3 = St.decodeRow(t2, e2, h2[1]);
            A2.putMetadata(z.UPC_EAN_EXTENSION, r3.getText()), A2.putAllMetadata(r3.getResultMetadata()), A2.addResultPoints(r3.getResultPoints()), I2 = r3.getText().length;
          } catch (t3) {
          }
          let _2 = null == r2 ? null : r2.get(E.ALLOWED_EAN_EXTENSIONS);
          if (null != _2) {
            let t3 = false;
            for (let e3 in _2) if (I2.toString() === e3) {
              t3 = true;
              break;
            }
            if (!t3) throw new N();
          }
          return w2 === x.EAN_13 || x.UPC_A, A2;
        }
        static checkChecksum(t2) {
          return pt.checkStandardUPCEANChecksum(t2);
        }
        static checkStandardUPCEANChecksum(t2) {
          let e2 = t2.length;
          if (0 === e2) return false;
          let r2 = parseInt(t2.charAt(e2 - 1), 10);
          return pt.getStandardUPCEANChecksum(t2.substring(0, e2 - 1)) === r2;
        }
        static getStandardUPCEANChecksum(t2) {
          let e2 = t2.length, r2 = 0;
          for (let n2 = e2 - 1; n2 >= 0; n2 -= 2) {
            let e3 = t2.charAt(n2).charCodeAt(0) - "0".charCodeAt(0);
            if (e3 < 0 || e3 > 9) throw new m();
            r2 += e3;
          }
          r2 *= 3;
          for (let n2 = e2 - 2; n2 >= 0; n2 -= 2) {
            let e3 = t2.charAt(n2).charCodeAt(0) - "0".charCodeAt(0);
            if (e3 < 0 || e3 > 9) throw new m();
            r2 += e3;
          }
          return (1e3 - r2) % 10;
        }
        static decodeEnd(t2, e2) {
          return pt.findGuardPattern(t2, e2, false, pt.START_END_PATTERN, new Int32Array(pt.START_END_PATTERN.length).fill(0));
        }
      }
      class Tt extends pt {
        constructor() {
          super(), this.decodeMiddleCounters = Int32Array.from([0, 0, 0, 0]);
        }
        decodeMiddle(t2, e2, r2) {
          let n2 = this.decodeMiddleCounters;
          n2[0] = 0, n2[1] = 0, n2[2] = 0, n2[3] = 0;
          let i2 = t2.getSize(), s2 = e2[1], o2 = 0;
          for (let e3 = 0; e3 < 6 && s2 < i2; e3++) {
            let i3 = pt.decodeDigit(t2, n2, s2, pt.L_AND_G_PATTERNS);
            r2 += String.fromCharCode("0".charCodeAt(0) + i3 % 10);
            for (let t3 of n2) s2 += t3;
            i3 >= 10 && (o2 |= 1 << 5 - e3);
          }
          r2 = Tt.determineFirstDigit(r2, o2), s2 = pt.findGuardPattern(t2, s2, true, pt.MIDDLE_PATTERN, new Int32Array(pt.MIDDLE_PATTERN.length).fill(0))[1];
          for (let e3 = 0; e3 < 6 && s2 < i2; e3++) {
            let e4 = pt.decodeDigit(t2, n2, s2, pt.L_PATTERNS);
            r2 += String.fromCharCode("0".charCodeAt(0) + e4);
            for (let t3 of n2) s2 += t3;
          }
          return { rowOffset: s2, resultString: r2 };
        }
        getBarcodeFormat() {
          return x.EAN_13;
        }
        static determineFirstDigit(t2, e2) {
          for (let r2 = 0; r2 < 10; r2++) if (e2 === this.FIRST_DIGIT_ENCODINGS[r2]) return t2 = String.fromCharCode("0".charCodeAt(0) + r2) + t2;
          throw new N();
        }
      }
      Tt.FIRST_DIGIT_ENCODINGS = [0, 11, 13, 14, 19, 25, 28, 21, 22, 26];
      class Rt extends pt {
        constructor() {
          super(), this.decodeMiddleCounters = Int32Array.from([0, 0, 0, 0]);
        }
        decodeMiddle(t2, e2, r2) {
          const n2 = this.decodeMiddleCounters;
          n2[0] = 0, n2[1] = 0, n2[2] = 0, n2[3] = 0;
          let i2 = t2.getSize(), s2 = e2[1];
          for (let e3 = 0; e3 < 4 && s2 < i2; e3++) {
            let e4 = pt.decodeDigit(t2, n2, s2, pt.L_PATTERNS);
            r2 += String.fromCharCode("0".charCodeAt(0) + e4);
            for (let t3 of n2) s2 += t3;
          }
          s2 = pt.findGuardPattern(t2, s2, true, pt.MIDDLE_PATTERN, new Int32Array(pt.MIDDLE_PATTERN.length).fill(0))[1];
          for (let e3 = 0; e3 < 4 && s2 < i2; e3++) {
            let e4 = pt.decodeDigit(t2, n2, s2, pt.L_PATTERNS);
            r2 += String.fromCharCode("0".charCodeAt(0) + e4);
            for (let t3 of n2) s2 += t3;
          }
          return { rowOffset: s2, resultString: r2 };
        }
        getBarcodeFormat() {
          return x.EAN_8;
        }
      }
      class Nt extends pt {
        constructor() {
          super(...arguments), this.ean13Reader = new Tt();
        }
        getBarcodeFormat() {
          return x.UPC_A;
        }
        decode(t2, e2) {
          return this.maybeReturnResult(this.ean13Reader.decode(t2));
        }
        decodeRow(t2, e2, r2) {
          return this.maybeReturnResult(this.ean13Reader.decodeRow(t2, e2, r2));
        }
        decodeMiddle(t2, e2, r2) {
          return this.ean13Reader.decodeMiddle(t2, e2, r2);
        }
        maybeReturnResult(t2) {
          let e2 = t2.getText();
          if ("0" === e2.charAt(0)) {
            let r2 = new v(e2.substring(1), null, null, t2.getResultPoints(), x.UPC_A);
            return null != t2.getResultMetadata() && r2.putAllMetadata(t2.getResultMetadata()), r2;
          }
          throw new N();
        }
        reset() {
          this.ean13Reader.reset();
        }
      }
      class yt extends pt {
        constructor() {
          super(), this.decodeMiddleCounters = new Int32Array(4);
        }
        decodeMiddle(t2, e2, r2) {
          const n2 = this.decodeMiddleCounters.map((t3) => t3);
          n2[0] = 0, n2[1] = 0, n2[2] = 0, n2[3] = 0;
          const i2 = t2.getSize();
          let s2 = e2[1], o2 = 0;
          for (let e3 = 0; e3 < 6 && s2 < i2; e3++) {
            const i3 = yt.decodeDigit(t2, n2, s2, yt.L_AND_G_PATTERNS);
            r2 += String.fromCharCode("0".charCodeAt(0) + i3 % 10);
            for (let t3 of n2) s2 += t3;
            i3 >= 10 && (o2 |= 1 << 5 - e3);
          }
          return yt.determineNumSysAndCheckDigit(new T(r2), o2), s2;
        }
        decodeEnd(t2, e2) {
          return yt.findGuardPatternWithoutCounters(t2, e2, true, yt.MIDDLE_END_PATTERN);
        }
        checkChecksum(t2) {
          return pt.checkChecksum(yt.convertUPCEtoUPCA(t2));
        }
        static determineNumSysAndCheckDigit(t2, e2) {
          for (let r2 = 0; r2 <= 1; r2++) for (let n2 = 0; n2 < 10; n2++) if (e2 === this.NUMSYS_AND_CHECK_DIGIT_PATTERNS[r2][n2]) return t2.insert(0, "0" + r2), void t2.append("0" + n2);
          throw N.getNotFoundInstance();
        }
        getBarcodeFormat() {
          return x.UPC_E;
        }
        static convertUPCEtoUPCA(t2) {
          const e2 = t2.slice(1, 7).split("").map((t3) => t3.charCodeAt(0)), r2 = new T();
          r2.append(t2.charAt(0));
          let n2 = e2[5];
          switch (n2) {
            case 0:
            case 1:
            case 2:
              r2.appendChars(e2, 0, 2), r2.append(n2), r2.append("0000"), r2.appendChars(e2, 2, 3);
              break;
            case 3:
              r2.appendChars(e2, 0, 3), r2.append("00000"), r2.appendChars(e2, 3, 2);
              break;
            case 4:
              r2.appendChars(e2, 0, 4), r2.append("00000"), r2.append(e2[4]);
              break;
            default:
              r2.appendChars(e2, 0, 5), r2.append("0000"), r2.append(n2);
          }
          return t2.length >= 8 && r2.append(t2.charAt(7)), r2.toString();
        }
      }
      yt.MIDDLE_END_PATTERN = Int32Array.from([1, 1, 1, 1, 1, 1]), yt.NUMSYS_AND_CHECK_DIGIT_PATTERNS = [Int32Array.from([56, 52, 50, 49, 44, 38, 35, 42, 41, 37]), Int32Array.from([7, 11, 13, 14, 19, 25, 28, 21, 22, 1])];
      class Dt extends ft {
        constructor(t2) {
          super();
          let e2 = null == t2 ? null : t2.get(E.POSSIBLE_FORMATS), r2 = [];
          null != e2 && (e2.indexOf(x.EAN_13) > -1 && r2.push(new Tt()), e2.indexOf(x.UPC_A) > -1 && r2.push(new Nt()), e2.indexOf(x.EAN_8) > -1 && r2.push(new Rt()), e2.indexOf(x.UPC_E) > -1 && r2.push(new yt())), 0 === r2.length && (r2.push(new Tt()), r2.push(new Nt()), r2.push(new Rt()), r2.push(new yt())), this.readers = r2;
        }
        decodeRow(t2, e2, r2) {
          for (let n2 of this.readers) try {
            const i2 = n2.decodeRow(t2, e2, r2), s2 = i2.getBarcodeFormat() === x.EAN_13 && "0" === i2.getText().charAt(0), o2 = null == r2 ? null : r2.get(E.POSSIBLE_FORMATS), a2 = null == o2 || o2.includes(x.UPC_A);
            if (s2 && a2) {
              const t3 = i2.getRawBytes(), e3 = new v(i2.getText().substring(1), t3, t3 ? t3.length : null, i2.getResultPoints(), x.UPC_A);
              return e3.putAllMetadata(i2.getResultMetadata()), e3;
            }
            return i2;
          } catch (t3) {
          }
          throw new N();
        }
        reset() {
          for (let t2 of this.readers) t2.reset();
        }
      }
      class Ot extends ft {
        constructor() {
          super(...arguments), this.CODA_BAR_CHAR_SET = { nnnnnww: "0", nnnnwwn: "1", nnnwnnw: "2", wwnnnnn: "3", nnwnnwn: "4", wnnnnwn: "5", nwnnnnw: "6", nwnnwnn: "7", nwwnnnn: "8", wnnwnnn: "9", nnnwwnn: "-", nnwwnnn: "$", wnnnwnw: ":", wnwnnnw: "/", wnwnwnn: ".", nnwwwww: "+", nnwwnwn: "A", nwnwnnw: "B", nnnwnww: "C", nnnwwwn: "D" };
        }
        decodeRow(t2, e2, r2) {
          let n2 = this.getValidRowData(e2);
          if (!n2) throw new N();
          let i2 = this.codaBarDecodeRow(n2.row);
          if (!i2) throw new N();
          return new v(i2, null, 0, [new nt(n2.left, t2), new nt(n2.right, t2)], x.CODABAR, (/* @__PURE__ */ new Date()).getTime());
        }
        getValidRowData(t2) {
          let e2 = t2.toArray(), r2 = e2.indexOf(true);
          if (-1 === r2) return null;
          let n2 = e2.lastIndexOf(true);
          if (n2 <= r2) return null;
          e2 = e2.slice(r2, n2 + 1);
          let i2 = [], s2 = e2[0], o2 = 1;
          for (let t3 = 1; t3 < e2.length; t3++) e2[t3] === s2 ? o2++ : (s2 = e2[t3], i2.push(o2), o2 = 1);
          return i2.push(o2), i2.length < 23 && (i2.length + 1) % 8 != 0 ? null : { row: i2, left: r2, right: n2 };
        }
        codaBarDecodeRow(t2) {
          const e2 = [], r2 = Math.ceil(t2.reduce((t3, e3) => (t3 + e3) / 2, 0));
          for (; t2.length > 0; ) {
            const n3 = t2.splice(0, 8).splice(0, 7).map((t3) => t3 < r2 ? "n" : "w").join("");
            if (void 0 === this.CODA_BAR_CHAR_SET[n3]) return null;
            e2.push(this.CODA_BAR_CHAR_SET[n3]);
          }
          let n2 = e2.join("");
          return this.validCodaBarString(n2) ? n2 : null;
        }
        validCodaBarString(t2) {
          return /^[A-D].{1,}[A-D]$/.test(t2);
        }
      }
      class Mt extends ft {
        constructor() {
          super(), this.decodeFinderCounters = new Int32Array(4), this.dataCharacterCounters = new Int32Array(8), this.oddRoundingErrors = new Array(4), this.evenRoundingErrors = new Array(4), this.oddCounts = new Array(this.dataCharacterCounters.length / 2), this.evenCounts = new Array(this.dataCharacterCounters.length / 2);
        }
        getDecodeFinderCounters() {
          return this.decodeFinderCounters;
        }
        getDataCharacterCounters() {
          return this.dataCharacterCounters;
        }
        getOddRoundingErrors() {
          return this.oddRoundingErrors;
        }
        getEvenRoundingErrors() {
          return this.evenRoundingErrors;
        }
        getOddCounts() {
          return this.oddCounts;
        }
        getEvenCounts() {
          return this.evenCounts;
        }
        parseFinderValue(t2, e2) {
          for (let r2 = 0; r2 < e2.length; r2++) if (ft.patternMatchVariance(t2, e2[r2], Mt.MAX_INDIVIDUAL_VARIANCE) < Mt.MAX_AVG_VARIANCE) return r2;
          throw new N();
        }
        static count(t2) {
          return et.sum(new Int32Array(t2));
        }
        static increment(t2, e2) {
          let r2 = 0, n2 = e2[0];
          for (let i2 = 1; i2 < t2.length; i2++) e2[i2] > n2 && (n2 = e2[i2], r2 = i2);
          t2[r2]++;
        }
        static decrement(t2, e2) {
          let r2 = 0, n2 = e2[0];
          for (let i2 = 1; i2 < t2.length; i2++) e2[i2] < n2 && (n2 = e2[i2], r2 = i2);
          t2[r2]--;
        }
        static isFinderPattern(t2) {
          let e2 = t2[0] + t2[1], r2 = e2 / (e2 + t2[2] + t2[3]);
          if (r2 >= Mt.MIN_FINDER_PATTERN_RATIO && r2 <= Mt.MAX_FINDER_PATTERN_RATIO) {
            let e3 = Number.MAX_SAFE_INTEGER, r3 = Number.MIN_SAFE_INTEGER;
            for (let n2 of t2) n2 > r3 && (r3 = n2), n2 < e3 && (e3 = n2);
            return r3 < 10 * e3;
          }
          return false;
        }
      }
      Mt.MAX_AVG_VARIANCE = 0.2, Mt.MAX_INDIVIDUAL_VARIANCE = 0.45, Mt.MIN_FINDER_PATTERN_RATIO = 9.5 / 12, Mt.MAX_FINDER_PATTERN_RATIO = 12.5 / 14;
      class bt {
        constructor(t2, e2) {
          this.value = t2, this.checksumPortion = e2;
        }
        getValue() {
          return this.value;
        }
        getChecksumPortion() {
          return this.checksumPortion;
        }
        toString() {
          return this.value + "(" + this.checksumPortion + ")";
        }
        equals(t2) {
          if (!(t2 instanceof bt)) return false;
          const e2 = t2;
          return this.value === e2.value && this.checksumPortion === e2.checksumPortion;
        }
        hashCode() {
          return this.value ^ this.checksumPortion;
        }
      }
      class Bt {
        constructor(t2, e2, r2, n2, i2) {
          this.value = t2, this.startEnd = e2, this.value = t2, this.startEnd = e2, this.resultPoints = new Array(), this.resultPoints.push(new nt(r2, i2)), this.resultPoints.push(new nt(n2, i2));
        }
        getValue() {
          return this.value;
        }
        getStartEnd() {
          return this.startEnd;
        }
        getResultPoints() {
          return this.resultPoints;
        }
        equals(t2) {
          if (!(t2 instanceof Bt)) return false;
          const e2 = t2;
          return this.value === e2.value;
        }
        hashCode() {
          return this.value;
        }
      }
      class Pt {
        constructor() {
        }
        static getRSSvalue(t2, e2, r2) {
          let n2 = 0;
          for (let e3 of t2) n2 += e3;
          let i2 = 0, s2 = 0, o2 = t2.length;
          for (let a2 = 0; a2 < o2 - 1; a2++) {
            let h2;
            for (h2 = 1, s2 |= 1 << a2; h2 < t2[a2]; h2++, s2 &= ~(1 << a2)) {
              let t3 = Pt.combins(n2 - h2 - 1, o2 - a2 - 2);
              if (r2 && 0 === s2 && n2 - h2 - (o2 - a2 - 1) >= o2 - a2 - 1 && (t3 -= Pt.combins(n2 - h2 - (o2 - a2), o2 - a2 - 2)), o2 - a2 - 1 > 1) {
                let r3 = 0;
                for (let t4 = n2 - h2 - (o2 - a2 - 2); t4 > e2; t4--) r3 += Pt.combins(n2 - h2 - t4 - 1, o2 - a2 - 3);
                t3 -= r3 * (o2 - 1 - a2);
              } else n2 - h2 > e2 && t3--;
              i2 += t3;
            }
            n2 -= h2;
          }
          return i2;
        }
        static combins(t2, e2) {
          let r2, n2;
          t2 - e2 > e2 ? (n2 = e2, r2 = t2 - e2) : (n2 = t2 - e2, r2 = e2);
          let i2 = 1, s2 = 1;
          for (let e3 = t2; e3 > r2; e3--) i2 *= e3, s2 <= n2 && (i2 /= s2, s2++);
          for (; s2 <= n2; ) i2 /= s2, s2++;
          return i2;
        }
      }
      class Lt {
        static buildBitArray(t2) {
          let e2 = 2 * t2.length - 1;
          null == t2[t2.length - 1].getRightChar() && (e2 -= 1);
          let r2 = new C(12 * e2), n2 = 0, i2 = t2[0].getRightChar().getValue();
          for (let t3 = 11; t3 >= 0; --t3) i2 & 1 << t3 && r2.set(n2), n2++;
          for (let e3 = 1; e3 < t2.length; ++e3) {
            let i3 = t2[e3], s2 = i3.getLeftChar().getValue();
            for (let t3 = 11; t3 >= 0; --t3) s2 & 1 << t3 && r2.set(n2), n2++;
            if (null !== i3.getRightChar()) {
              let t3 = i3.getRightChar().getValue();
              for (let e4 = 11; e4 >= 0; --e4) t3 & 1 << e4 && r2.set(n2), n2++;
            }
          }
          return r2;
        }
      }
      class Ft {
        constructor(t2, e2) {
          e2 ? this.decodedInformation = null : (this.finished = t2, this.decodedInformation = e2);
        }
        getDecodedInformation() {
          return this.decodedInformation;
        }
        isFinished() {
          return this.finished;
        }
      }
      class vt {
        constructor(t2) {
          this.newPosition = t2;
        }
        getNewPosition() {
          return this.newPosition;
        }
      }
      class kt extends vt {
        constructor(t2, e2) {
          super(t2), this.value = e2;
        }
        getValue() {
          return this.value;
        }
        isFNC1() {
          return this.value === kt.FNC1;
        }
      }
      kt.FNC1 = "$";
      class xt extends vt {
        constructor(t2, e2, r2) {
          super(t2), r2 ? (this.remaining = true, this.remainingValue = this.remainingValue) : (this.remaining = false, this.remainingValue = 0), this.newString = e2;
        }
        getNewString() {
          return this.newString;
        }
        isRemaining() {
          return this.remaining;
        }
        getRemainingValue() {
          return this.remainingValue;
        }
      }
      class Vt extends vt {
        constructor(t2, e2, r2) {
          if (super(t2), e2 < 0 || e2 > 10 || r2 < 0 || r2 > 10) throw new m();
          this.firstDigit = e2, this.secondDigit = r2;
        }
        getFirstDigit() {
          return this.firstDigit;
        }
        getSecondDigit() {
          return this.secondDigit;
        }
        getValue() {
          return 10 * this.firstDigit + this.secondDigit;
        }
        isFirstDigitFNC1() {
          return this.firstDigit === Vt.FNC1;
        }
        isSecondDigitFNC1() {
          return this.secondDigit === Vt.FNC1;
        }
        isAnyFNC1() {
          return this.firstDigit === Vt.FNC1 || this.secondDigit === Vt.FNC1;
        }
      }
      Vt.FNC1 = 10;
      class Ht {
        constructor() {
        }
        static parseFieldsInGeneralPurpose(t2) {
          if (!t2) return null;
          if (t2.length < 2) throw new N();
          let e2 = t2.substring(0, 2);
          for (let r3 of Ht.TWO_DIGIT_DATA_LENGTH) if (r3[0] === e2) return r3[1] === Ht.VARIABLE_LENGTH ? Ht.processVariableAI(2, r3[2], t2) : Ht.processFixedAI(2, r3[1], t2);
          if (t2.length < 3) throw new N();
          let r2 = t2.substring(0, 3);
          for (let e3 of Ht.THREE_DIGIT_DATA_LENGTH) if (e3[0] === r2) return e3[1] === Ht.VARIABLE_LENGTH ? Ht.processVariableAI(3, e3[2], t2) : Ht.processFixedAI(3, e3[1], t2);
          for (let e3 of Ht.THREE_DIGIT_PLUS_DIGIT_DATA_LENGTH) if (e3[0] === r2) return e3[1] === Ht.VARIABLE_LENGTH ? Ht.processVariableAI(4, e3[2], t2) : Ht.processFixedAI(4, e3[1], t2);
          if (t2.length < 4) throw new N();
          let n2 = t2.substring(0, 4);
          for (let e3 of Ht.FOUR_DIGIT_DATA_LENGTH) if (e3[0] === n2) return e3[1] === Ht.VARIABLE_LENGTH ? Ht.processVariableAI(4, e3[2], t2) : Ht.processFixedAI(4, e3[1], t2);
          throw new N();
        }
        static processFixedAI(t2, e2, r2) {
          if (r2.length < t2) throw new N();
          let n2 = r2.substring(0, t2);
          if (r2.length < t2 + e2) throw new N();
          let i2 = r2.substring(t2, t2 + e2), s2 = r2.substring(t2 + e2), o2 = "(" + n2 + ")" + i2, a2 = Ht.parseFieldsInGeneralPurpose(s2);
          return null == a2 ? o2 : o2 + a2;
        }
        static processVariableAI(t2, e2, r2) {
          let n2, i2 = r2.substring(0, t2);
          n2 = r2.length < t2 + e2 ? r2.length : t2 + e2;
          let s2 = r2.substring(t2, n2), o2 = r2.substring(n2), a2 = "(" + i2 + ")" + s2, h2 = Ht.parseFieldsInGeneralPurpose(o2);
          return null == h2 ? a2 : a2 + h2;
        }
      }
      Ht.VARIABLE_LENGTH = [], Ht.TWO_DIGIT_DATA_LENGTH = [["00", 18], ["01", 14], ["02", 14], ["10", Ht.VARIABLE_LENGTH, 20], ["11", 6], ["12", 6], ["13", 6], ["15", 6], ["17", 6], ["20", 2], ["21", Ht.VARIABLE_LENGTH, 20], ["22", Ht.VARIABLE_LENGTH, 29], ["30", Ht.VARIABLE_LENGTH, 8], ["37", Ht.VARIABLE_LENGTH, 8], ["90", Ht.VARIABLE_LENGTH, 30], ["91", Ht.VARIABLE_LENGTH, 30], ["92", Ht.VARIABLE_LENGTH, 30], ["93", Ht.VARIABLE_LENGTH, 30], ["94", Ht.VARIABLE_LENGTH, 30], ["95", Ht.VARIABLE_LENGTH, 30], ["96", Ht.VARIABLE_LENGTH, 30], ["97", Ht.VARIABLE_LENGTH, 3], ["98", Ht.VARIABLE_LENGTH, 30], ["99", Ht.VARIABLE_LENGTH, 30]], Ht.THREE_DIGIT_DATA_LENGTH = [["240", Ht.VARIABLE_LENGTH, 30], ["241", Ht.VARIABLE_LENGTH, 30], ["242", Ht.VARIABLE_LENGTH, 6], ["250", Ht.VARIABLE_LENGTH, 30], ["251", Ht.VARIABLE_LENGTH, 30], ["253", Ht.VARIABLE_LENGTH, 17], ["254", Ht.VARIABLE_LENGTH, 20], ["400", Ht.VARIABLE_LENGTH, 30], ["401", Ht.VARIABLE_LENGTH, 30], ["402", 17], ["403", Ht.VARIABLE_LENGTH, 30], ["410", 13], ["411", 13], ["412", 13], ["413", 13], ["414", 13], ["420", Ht.VARIABLE_LENGTH, 20], ["421", Ht.VARIABLE_LENGTH, 15], ["422", 3], ["423", Ht.VARIABLE_LENGTH, 15], ["424", 3], ["425", 3], ["426", 3]], Ht.THREE_DIGIT_PLUS_DIGIT_DATA_LENGTH = [["310", 6], ["311", 6], ["312", 6], ["313", 6], ["314", 6], ["315", 6], ["316", 6], ["320", 6], ["321", 6], ["322", 6], ["323", 6], ["324", 6], ["325", 6], ["326", 6], ["327", 6], ["328", 6], ["329", 6], ["330", 6], ["331", 6], ["332", 6], ["333", 6], ["334", 6], ["335", 6], ["336", 6], ["340", 6], ["341", 6], ["342", 6], ["343", 6], ["344", 6], ["345", 6], ["346", 6], ["347", 6], ["348", 6], ["349", 6], ["350", 6], ["351", 6], ["352", 6], ["353", 6], ["354", 6], ["355", 6], ["356", 6], ["357", 6], ["360", 6], ["361", 6], ["362", 6], ["363", 6], ["364", 6], ["365", 6], ["366", 6], ["367", 6], ["368", 6], ["369", 6], ["390", Ht.VARIABLE_LENGTH, 15], ["391", Ht.VARIABLE_LENGTH, 18], ["392", Ht.VARIABLE_LENGTH, 15], ["393", Ht.VARIABLE_LENGTH, 18], ["703", Ht.VARIABLE_LENGTH, 30]], Ht.FOUR_DIGIT_DATA_LENGTH = [["7001", 13], ["7002", Ht.VARIABLE_LENGTH, 30], ["7003", 10], ["8001", 14], ["8002", Ht.VARIABLE_LENGTH, 20], ["8003", Ht.VARIABLE_LENGTH, 30], ["8004", Ht.VARIABLE_LENGTH, 30], ["8005", 6], ["8006", 18], ["8007", Ht.VARIABLE_LENGTH, 30], ["8008", Ht.VARIABLE_LENGTH, 12], ["8018", 18], ["8020", Ht.VARIABLE_LENGTH, 25], ["8100", 6], ["8101", 10], ["8102", 2], ["8110", Ht.VARIABLE_LENGTH, 70], ["8200", Ht.VARIABLE_LENGTH, 70]];
      class Ut {
        constructor(t2) {
          this.buffer = new T(), this.information = t2;
        }
        decodeAllCodes(t2, e2) {
          let r2 = e2, n2 = null;
          for (; ; ) {
            let e3 = this.decodeGeneralPurposeField(r2, n2), i2 = Ht.parseFieldsInGeneralPurpose(e3.getNewString());
            if (null != i2 && t2.append(i2), n2 = e3.isRemaining() ? "" + e3.getRemainingValue() : null, r2 === e3.getNewPosition()) break;
            r2 = e3.getNewPosition();
          }
          return t2.toString();
        }
        isStillNumeric(t2) {
          if (t2 + 7 > this.information.getSize()) return t2 + 4 <= this.information.getSize();
          for (let e2 = t2; e2 < t2 + 3; ++e2) if (this.information.get(e2)) return true;
          return this.information.get(t2 + 3);
        }
        decodeNumeric(t2) {
          if (t2 + 7 > this.information.getSize()) {
            let e3 = this.extractNumericValueFromBitArray(t2, 4);
            return new Vt(this.information.getSize(), 0 === e3 ? Vt.FNC1 : e3 - 1, Vt.FNC1);
          }
          let e2 = this.extractNumericValueFromBitArray(t2, 7);
          return new Vt(t2 + 7, (e2 - 8) / 11, (e2 - 8) % 11);
        }
        extractNumericValueFromBitArray(t2, e2) {
          return Ut.extractNumericValueFromBitArray(this.information, t2, e2);
        }
        static extractNumericValueFromBitArray(t2, e2, r2) {
          let n2 = 0;
          for (let i2 = 0; i2 < r2; ++i2) t2.get(e2 + i2) && (n2 |= 1 << r2 - i2 - 1);
          return n2;
        }
        decodeGeneralPurposeField(t2, e2) {
          this.buffer.setLengthToZero(), null != e2 && this.buffer.append(e2), this.current.setPosition(t2);
          let r2 = this.parseBlocks();
          return null != r2 && r2.isRemaining() ? new xt(this.current.getPosition(), this.buffer.toString(), r2.getRemainingValue()) : new xt(this.current.getPosition(), this.buffer.toString());
        }
        parseBlocks() {
          let t2, e2;
          do {
            let r2 = this.current.getPosition();
            if (this.current.isAlpha() ? (e2 = this.parseAlphaBlock(), t2 = e2.isFinished()) : this.current.isIsoIec646() ? (e2 = this.parseIsoIec646Block(), t2 = e2.isFinished()) : (e2 = this.parseNumericBlock(), t2 = e2.isFinished()), !(r2 !== this.current.getPosition()) && !t2) break;
          } while (!t2);
          return e2.getDecodedInformation();
        }
        parseNumericBlock() {
          for (; this.isStillNumeric(this.current.getPosition()); ) {
            let t2 = this.decodeNumeric(this.current.getPosition());
            if (this.current.setPosition(t2.getNewPosition()), t2.isFirstDigitFNC1()) {
              let e2;
              return e2 = t2.isSecondDigitFNC1() ? new xt(this.current.getPosition(), this.buffer.toString()) : new xt(this.current.getPosition(), this.buffer.toString(), t2.getSecondDigit()), new Ft(true, e2);
            }
            if (this.buffer.append(t2.getFirstDigit()), t2.isSecondDigitFNC1()) {
              let t3 = new xt(this.current.getPosition(), this.buffer.toString());
              return new Ft(true, t3);
            }
            this.buffer.append(t2.getSecondDigit());
          }
          return this.isNumericToAlphaNumericLatch(this.current.getPosition()) && (this.current.setAlpha(), this.current.incrementPosition(4)), new Ft(false);
        }
        parseIsoIec646Block() {
          for (; this.isStillIsoIec646(this.current.getPosition()); ) {
            let t2 = this.decodeIsoIec646(this.current.getPosition());
            if (this.current.setPosition(t2.getNewPosition()), t2.isFNC1()) {
              let t3 = new xt(this.current.getPosition(), this.buffer.toString());
              return new Ft(true, t3);
            }
            this.buffer.append(t2.getValue());
          }
          return this.isAlphaOr646ToNumericLatch(this.current.getPosition()) ? (this.current.incrementPosition(3), this.current.setNumeric()) : this.isAlphaTo646ToAlphaLatch(this.current.getPosition()) && (this.current.getPosition() + 5 < this.information.getSize() ? this.current.incrementPosition(5) : this.current.setPosition(this.information.getSize()), this.current.setAlpha()), new Ft(false);
        }
        parseAlphaBlock() {
          for (; this.isStillAlpha(this.current.getPosition()); ) {
            let t2 = this.decodeAlphanumeric(this.current.getPosition());
            if (this.current.setPosition(t2.getNewPosition()), t2.isFNC1()) {
              let t3 = new xt(this.current.getPosition(), this.buffer.toString());
              return new Ft(true, t3);
            }
            this.buffer.append(t2.getValue());
          }
          return this.isAlphaOr646ToNumericLatch(this.current.getPosition()) ? (this.current.incrementPosition(3), this.current.setNumeric()) : this.isAlphaTo646ToAlphaLatch(this.current.getPosition()) && (this.current.getPosition() + 5 < this.information.getSize() ? this.current.incrementPosition(5) : this.current.setPosition(this.information.getSize()), this.current.setIsoIec646()), new Ft(false);
        }
        isStillIsoIec646(t2) {
          if (t2 + 5 > this.information.getSize()) return false;
          let e2 = this.extractNumericValueFromBitArray(t2, 5);
          if (e2 >= 5 && e2 < 16) return true;
          if (t2 + 7 > this.information.getSize()) return false;
          let r2 = this.extractNumericValueFromBitArray(t2, 7);
          if (r2 >= 64 && r2 < 116) return true;
          if (t2 + 8 > this.information.getSize()) return false;
          let n2 = this.extractNumericValueFromBitArray(t2, 8);
          return n2 >= 232 && n2 < 253;
        }
        decodeIsoIec646(t2) {
          let e2 = this.extractNumericValueFromBitArray(t2, 5);
          if (15 === e2) return new kt(t2 + 5, kt.FNC1);
          if (e2 >= 5 && e2 < 15) return new kt(t2 + 5, "0" + (e2 - 5));
          let r2, n2 = this.extractNumericValueFromBitArray(t2, 7);
          if (n2 >= 64 && n2 < 90) return new kt(t2 + 7, "" + (n2 + 1));
          if (n2 >= 90 && n2 < 116) return new kt(t2 + 7, "" + (n2 + 7));
          switch (this.extractNumericValueFromBitArray(t2, 8)) {
            case 232:
              r2 = "!";
              break;
            case 233:
              r2 = '"';
              break;
            case 234:
              r2 = "%";
              break;
            case 235:
              r2 = "&";
              break;
            case 236:
              r2 = "'";
              break;
            case 237:
              r2 = "(";
              break;
            case 238:
              r2 = ")";
              break;
            case 239:
              r2 = "*";
              break;
            case 240:
              r2 = "+";
              break;
            case 241:
              r2 = ",";
              break;
            case 242:
              r2 = "-";
              break;
            case 243:
              r2 = ".";
              break;
            case 244:
              r2 = "/";
              break;
            case 245:
              r2 = ":";
              break;
            case 246:
              r2 = ";";
              break;
            case 247:
              r2 = "<";
              break;
            case 248:
              r2 = "=";
              break;
            case 249:
              r2 = ">";
              break;
            case 250:
              r2 = "?";
              break;
            case 251:
              r2 = "_";
              break;
            case 252:
              r2 = " ";
              break;
            default:
              throw new m();
          }
          return new kt(t2 + 8, r2);
        }
        isStillAlpha(t2) {
          if (t2 + 5 > this.information.getSize()) return false;
          let e2 = this.extractNumericValueFromBitArray(t2, 5);
          if (e2 >= 5 && e2 < 16) return true;
          if (t2 + 6 > this.information.getSize()) return false;
          let r2 = this.extractNumericValueFromBitArray(t2, 6);
          return r2 >= 16 && r2 < 63;
        }
        decodeAlphanumeric(t2) {
          let e2 = this.extractNumericValueFromBitArray(t2, 5);
          if (15 === e2) return new kt(t2 + 5, kt.FNC1);
          if (e2 >= 5 && e2 < 15) return new kt(t2 + 5, "0" + (e2 - 5));
          let r2, n2 = this.extractNumericValueFromBitArray(t2, 6);
          if (n2 >= 32 && n2 < 58) return new kt(t2 + 6, "" + (n2 + 33));
          switch (n2) {
            case 58:
              r2 = "*";
              break;
            case 59:
              r2 = ",";
              break;
            case 60:
              r2 = "-";
              break;
            case 61:
              r2 = ".";
              break;
            case 62:
              r2 = "/";
              break;
            default:
              throw new J("Decoding invalid alphanumeric value: " + n2);
          }
          return new kt(t2 + 6, r2);
        }
        isAlphaTo646ToAlphaLatch(t2) {
          if (t2 + 1 > this.information.getSize()) return false;
          for (let e2 = 0; e2 < 5 && e2 + t2 < this.information.getSize(); ++e2) if (2 === e2) {
            if (!this.information.get(t2 + 2)) return false;
          } else if (this.information.get(t2 + e2)) return false;
          return true;
        }
        isAlphaOr646ToNumericLatch(t2) {
          if (t2 + 3 > this.information.getSize()) return false;
          for (let e2 = t2; e2 < t2 + 3; ++e2) if (this.information.get(e2)) return false;
          return true;
        }
        isNumericToAlphaNumericLatch(t2) {
          if (t2 + 1 > this.information.getSize()) return false;
          for (let e2 = 0; e2 < 4 && e2 + t2 < this.information.getSize(); ++e2) if (this.information.get(t2 + e2)) return false;
          return true;
        }
      }
      class Xt {
        constructor(t2) {
          this.information = t2, this.generalDecoder = new Ut(t2);
        }
        getInformation() {
          return this.information;
        }
        getGeneralDecoder() {
          return this.generalDecoder;
        }
      }
      class Gt extends Xt {
        constructor(t2) {
          super(t2);
        }
        encodeCompressedGtin(t2, e2) {
          t2.append("(01)");
          let r2 = t2.length();
          t2.append("9"), this.encodeCompressedGtinWithoutAI(t2, e2, r2);
        }
        encodeCompressedGtinWithoutAI(t2, e2, r2) {
          for (let r3 = 0; r3 < 4; ++r3) {
            let n2 = this.getGeneralDecoder().extractNumericValueFromBitArray(e2 + 10 * r3, 10);
            n2 / 100 == 0 && t2.append("0"), n2 / 10 == 0 && t2.append("0"), t2.append(n2);
          }
          Gt.appendCheckDigit(t2, r2);
        }
        static appendCheckDigit(t2, e2) {
          let r2 = 0;
          for (let n2 = 0; n2 < 13; n2++) {
            let i2 = t2.charAt(n2 + e2).charCodeAt(0) - "0".charCodeAt(0);
            r2 += 1 & n2 ? i2 : 3 * i2;
          }
          r2 = 10 - r2 % 10, 10 === r2 && (r2 = 0), t2.append(r2);
        }
      }
      Gt.GTIN_SIZE = 40;
      class Wt extends Gt {
        constructor(t2) {
          super(t2);
        }
        parseInformation() {
          let t2 = new T();
          t2.append("(01)");
          let e2 = t2.length(), r2 = this.getGeneralDecoder().extractNumericValueFromBitArray(Wt.HEADER_SIZE, 4);
          return t2.append(r2), this.encodeCompressedGtinWithoutAI(t2, Wt.HEADER_SIZE + 4, e2), this.getGeneralDecoder().decodeAllCodes(t2, Wt.HEADER_SIZE + 44);
        }
      }
      Wt.HEADER_SIZE = 4;
      class zt extends Xt {
        constructor(t2) {
          super(t2);
        }
        parseInformation() {
          let t2 = new T();
          return this.getGeneralDecoder().decodeAllCodes(t2, zt.HEADER_SIZE);
        }
      }
      zt.HEADER_SIZE = 5;
      class Yt extends Gt {
        constructor(t2) {
          super(t2);
        }
        encodeCompressedWeight(t2, e2, r2) {
          let n2 = this.getGeneralDecoder().extractNumericValueFromBitArray(e2, r2);
          this.addWeightCode(t2, n2);
          let i2 = this.checkWeight(n2), s2 = 1e5;
          for (let e3 = 0; e3 < 5; ++e3) i2 / s2 == 0 && t2.append("0"), s2 /= 10;
          t2.append(i2);
        }
      }
      class Zt extends Yt {
        constructor(t2) {
          super(t2);
        }
        parseInformation() {
          if (this.getInformation().getSize() !== Zt.HEADER_SIZE + Yt.GTIN_SIZE + Zt.WEIGHT_SIZE) throw new N();
          let t2 = new T();
          return this.encodeCompressedGtin(t2, Zt.HEADER_SIZE), this.encodeCompressedWeight(t2, Zt.HEADER_SIZE + Yt.GTIN_SIZE, Zt.WEIGHT_SIZE), t2.toString();
        }
      }
      Zt.HEADER_SIZE = 5, Zt.WEIGHT_SIZE = 15;
      class Kt extends Zt {
        constructor(t2) {
          super(t2);
        }
        addWeightCode(t2, e2) {
          t2.append("(3103)");
        }
        checkWeight(t2) {
          return t2;
        }
      }
      class qt extends Zt {
        constructor(t2) {
          super(t2);
        }
        addWeightCode(t2, e2) {
          e2 < 1e4 ? t2.append("(3202)") : t2.append("(3203)");
        }
        checkWeight(t2) {
          return t2 < 1e4 ? t2 : t2 - 1e4;
        }
      }
      class Qt extends Gt {
        constructor(t2) {
          super(t2);
        }
        parseInformation() {
          if (this.getInformation().getSize() < Qt.HEADER_SIZE + Gt.GTIN_SIZE) throw new N();
          let t2 = new T();
          this.encodeCompressedGtin(t2, Qt.HEADER_SIZE);
          let e2 = this.getGeneralDecoder().extractNumericValueFromBitArray(Qt.HEADER_SIZE + Gt.GTIN_SIZE, Qt.LAST_DIGIT_SIZE);
          t2.append("(392"), t2.append(e2), t2.append(")");
          let r2 = this.getGeneralDecoder().decodeGeneralPurposeField(Qt.HEADER_SIZE + Gt.GTIN_SIZE + Qt.LAST_DIGIT_SIZE, null);
          return t2.append(r2.getNewString()), t2.toString();
        }
      }
      Qt.HEADER_SIZE = 8, Qt.LAST_DIGIT_SIZE = 2;
      class jt extends Gt {
        constructor(t2) {
          super(t2);
        }
        parseInformation() {
          if (this.getInformation().getSize() < jt.HEADER_SIZE + Gt.GTIN_SIZE) throw new N();
          let t2 = new T();
          this.encodeCompressedGtin(t2, jt.HEADER_SIZE);
          let e2 = this.getGeneralDecoder().extractNumericValueFromBitArray(jt.HEADER_SIZE + Gt.GTIN_SIZE, jt.LAST_DIGIT_SIZE);
          t2.append("(393"), t2.append(e2), t2.append(")");
          let r2 = this.getGeneralDecoder().extractNumericValueFromBitArray(jt.HEADER_SIZE + Gt.GTIN_SIZE + jt.LAST_DIGIT_SIZE, jt.FIRST_THREE_DIGITS_SIZE);
          r2 / 100 == 0 && t2.append("0"), r2 / 10 == 0 && t2.append("0"), t2.append(r2);
          let n2 = this.getGeneralDecoder().decodeGeneralPurposeField(jt.HEADER_SIZE + Gt.GTIN_SIZE + jt.LAST_DIGIT_SIZE + jt.FIRST_THREE_DIGITS_SIZE, null);
          return t2.append(n2.getNewString()), t2.toString();
        }
      }
      jt.HEADER_SIZE = 8, jt.LAST_DIGIT_SIZE = 2, jt.FIRST_THREE_DIGITS_SIZE = 10;
      class Jt extends Yt {
        constructor(t2, e2, r2) {
          super(t2), this.dateCode = r2, this.firstAIdigits = e2;
        }
        parseInformation() {
          if (this.getInformation().getSize() !== Jt.HEADER_SIZE + Jt.GTIN_SIZE + Jt.WEIGHT_SIZE + Jt.DATE_SIZE) throw new N();
          let t2 = new T();
          return this.encodeCompressedGtin(t2, Jt.HEADER_SIZE), this.encodeCompressedWeight(t2, Jt.HEADER_SIZE + Jt.GTIN_SIZE, Jt.WEIGHT_SIZE), this.encodeCompressedDate(t2, Jt.HEADER_SIZE + Jt.GTIN_SIZE + Jt.WEIGHT_SIZE), t2.toString();
        }
        encodeCompressedDate(t2, e2) {
          let r2 = this.getGeneralDecoder().extractNumericValueFromBitArray(e2, Jt.DATE_SIZE);
          if (38400 === r2) return;
          t2.append("("), t2.append(this.dateCode), t2.append(")");
          let n2 = r2 % 32;
          r2 /= 32;
          let i2 = r2 % 12 + 1;
          r2 /= 12;
          let s2 = r2;
          s2 / 10 == 0 && t2.append("0"), t2.append(s2), i2 / 10 == 0 && t2.append("0"), t2.append(i2), n2 / 10 == 0 && t2.append("0"), t2.append(n2);
        }
        addWeightCode(t2, e2) {
          t2.append("("), t2.append(this.firstAIdigits), t2.append(e2 / 1e5), t2.append(")");
        }
        checkWeight(t2) {
          return t2 % 1e5;
        }
      }
      function $t(t2) {
        try {
          if (t2.get(1)) return new Wt(t2);
          if (!t2.get(2)) return new zt(t2);
          switch (Ut.extractNumericValueFromBitArray(t2, 1, 4)) {
            case 4:
              return new Kt(t2);
            case 5:
              return new qt(t2);
          }
          switch (Ut.extractNumericValueFromBitArray(t2, 1, 5)) {
            case 12:
              return new Qt(t2);
            case 13:
              return new jt(t2);
          }
          switch (Ut.extractNumericValueFromBitArray(t2, 1, 7)) {
            case 56:
              return new Jt(t2, "310", "11");
            case 57:
              return new Jt(t2, "320", "11");
            case 58:
              return new Jt(t2, "310", "13");
            case 59:
              return new Jt(t2, "320", "13");
            case 60:
              return new Jt(t2, "310", "15");
            case 61:
              return new Jt(t2, "320", "15");
            case 62:
              return new Jt(t2, "310", "17");
            case 63:
              return new Jt(t2, "320", "17");
          }
        } catch (e2) {
          throw console.log(e2), new J("unknown decoder: " + t2);
        }
      }
      Jt.HEADER_SIZE = 8, Jt.WEIGHT_SIZE = 20, Jt.DATE_SIZE = 16;
      class te {
        constructor(t2, e2, r2, n2) {
          this.leftchar = t2, this.rightchar = e2, this.finderpattern = r2, this.maybeLast = n2;
        }
        mayBeLast() {
          return this.maybeLast;
        }
        getLeftChar() {
          return this.leftchar;
        }
        getRightChar() {
          return this.rightchar;
        }
        getFinderPattern() {
          return this.finderpattern;
        }
        mustBeLast() {
          return null == this.rightchar;
        }
        toString() {
          return "[ " + this.leftchar + ", " + this.rightchar + " : " + (null == this.finderpattern ? "null" : this.finderpattern.getValue()) + " ]";
        }
        static equals(t2, e2) {
          return t2 instanceof te && (te.equalsOrNull(t2.leftchar, e2.leftchar) && te.equalsOrNull(t2.rightchar, e2.rightchar) && te.equalsOrNull(t2.finderpattern, e2.finderpattern));
        }
        static equalsOrNull(t2, e2) {
          return null === t2 ? null === e2 : te.equals(t2, e2);
        }
        hashCode() {
          return this.leftchar.getValue() ^ this.rightchar.getValue() ^ this.finderpattern.getValue();
        }
      }
      class ee {
        constructor(t2, e2, r2) {
          this.pairs = t2, this.rowNumber = e2, this.wasReversed = r2;
        }
        getPairs() {
          return this.pairs;
        }
        getRowNumber() {
          return this.rowNumber;
        }
        isReversed() {
          return this.wasReversed;
        }
        isEquivalent(t2) {
          return this.checkEqualitity(this, t2);
        }
        toString() {
          return "{ " + this.pairs + " }";
        }
        equals(t2, e2) {
          return t2 instanceof ee && (this.checkEqualitity(t2, e2) && t2.wasReversed === e2.wasReversed);
        }
        checkEqualitity(t2, e2) {
          if (!t2 || !e2) return;
          let r2;
          return t2.forEach((t3, n2) => {
            e2.forEach((e3) => {
              t3.getLeftChar().getValue() === e3.getLeftChar().getValue() && t3.getRightChar().getValue() === e3.getRightChar().getValue() && t3.getFinderPatter().getValue() === e3.getFinderPatter().getValue() && (r2 = true);
            });
          }), r2;
        }
      }
      class re extends Mt {
        constructor() {
          super(...arguments), this.pairs = new Array(re.MAX_PAIRS), this.rows = new Array(), this.startEnd = [2];
        }
        decodeRow(t2, e2, r2) {
          this.pairs.length = 0, this.startFromEven = false;
          try {
            return re.constructResult(this.decodeRow2pairs(t2, e2));
          } catch (t3) {
          }
          return this.pairs.length = 0, this.startFromEven = true, re.constructResult(this.decodeRow2pairs(t2, e2));
        }
        reset() {
          this.pairs.length = 0, this.rows.length = 0;
        }
        decodeRow2pairs(t2, e2) {
          let r2, n2 = false;
          for (; !n2; ) try {
            this.pairs.push(this.retrieveNextPair(e2, this.pairs, t2));
          } catch (t3) {
            if (t3 instanceof N) {
              if (!this.pairs.length) throw new N();
              n2 = true;
            }
          }
          if (this.checkChecksum()) return this.pairs;
          if (r2 = !!this.rows.length, this.storeRow(t2, false), r2) {
            let t3 = this.checkRowsBoolean(false);
            if (null != t3) return t3;
            if (t3 = this.checkRowsBoolean(true), null != t3) return t3;
          }
          throw new N();
        }
        checkRowsBoolean(t2) {
          if (this.rows.length > 25) return this.rows.length = 0, null;
          this.pairs.length = 0, t2 && (this.rows = this.rows.reverse());
          let e2 = null;
          try {
            e2 = this.checkRows(new Array(), 0);
          } catch (t3) {
            console.log(t3);
          }
          return t2 && (this.rows = this.rows.reverse()), e2;
        }
        checkRows(t2, e2) {
          for (let r2 = e2; r2 < this.rows.length; r2++) {
            let e3 = this.rows[r2];
            this.pairs.length = 0;
            for (let e4 of t2) this.pairs.push(e4.getPairs());
            if (this.pairs.push(e3.getPairs()), !re.isValidSequence(this.pairs)) continue;
            if (this.checkChecksum()) return this.pairs;
            let n2 = new Array(t2);
            n2.push(e3);
            try {
              return this.checkRows(n2, r2 + 1);
            } catch (t3) {
              console.log(t3);
            }
          }
          throw new N();
        }
        static isValidSequence(t2) {
          for (let e2 of re.FINDER_PATTERN_SEQUENCES) {
            if (t2.length > e2.length) continue;
            let r2 = true;
            for (let n2 = 0; n2 < t2.length; n2++) if (t2[n2].getFinderPattern().getValue() !== e2[n2]) {
              r2 = false;
              break;
            }
            if (r2) return true;
          }
          return false;
        }
        storeRow(t2, e2) {
          let r2 = 0, n2 = false, i2 = false;
          for (; r2 < this.rows.length; ) {
            let e3 = this.rows[r2];
            if (e3.getRowNumber() > t2) {
              i2 = e3.isEquivalent(this.pairs);
              break;
            }
            n2 = e3.isEquivalent(this.pairs), r2++;
          }
          i2 || n2 || re.isPartialRow(this.pairs, this.rows) || (this.rows.push(r2, new ee(this.pairs, t2, e2)), this.removePartialRows(this.pairs, this.rows));
        }
        removePartialRows(t2, e2) {
          for (let r2 of e2) if (r2.getPairs().length !== t2.length) {
            for (let e3 of r2.getPairs()) for (let r3 of t2) if (te.equals(e3, r3)) break;
          }
        }
        static isPartialRow(t2, e2) {
          for (let r2 of e2) {
            let e3 = true;
            for (let n2 of t2) {
              let t3 = false;
              for (let e4 of r2.getPairs()) if (n2.equals(e4)) {
                t3 = true;
                break;
              }
              if (!t3) {
                e3 = false;
                break;
              }
            }
            if (e3) return true;
          }
          return false;
        }
        getRows() {
          return this.rows;
        }
        static constructResult(t2) {
          let e2 = $t(Lt.buildBitArray(t2)).parseInformation(), r2 = t2[0].getFinderPattern().getResultPoints(), n2 = t2[t2.length - 1].getFinderPattern().getResultPoints(), i2 = [r2[0], r2[1], n2[0], n2[1]];
          return new v(e2, null, null, i2, x.RSS_EXPANDED, null);
        }
        checkChecksum() {
          let t2 = this.pairs.get(0), e2 = t2.getLeftChar(), r2 = t2.getRightChar();
          if (null === r2) return false;
          let n2 = r2.getChecksumPortion(), i2 = 2;
          for (let t3 = 1; t3 < this.pairs.size(); ++t3) {
            let e3 = this.pairs.get(t3);
            n2 += e3.getLeftChar().getChecksumPortion(), i2++;
            let r3 = e3.getRightChar();
            null != r3 && (n2 += r3.getChecksumPortion(), i2++);
          }
          return n2 %= 211, 211 * (i2 - 4) + n2 === e2.getValue();
        }
        static getNextSecondBar(t2, e2) {
          let r2;
          return t2.get(e2) ? (r2 = t2.getNextUnset(e2), r2 = t2.getNextSet(r2)) : (r2 = t2.getNextSet(e2), r2 = t2.getNextUnset(r2)), r2;
        }
        retrieveNextPair(t2, e2, r2) {
          let n2, i2 = e2.length % 2 == 0;
          this.startFromEven && (i2 = !i2);
          let s2 = true, o2 = -1;
          do {
            this.findNextPair(t2, e2, o2), n2 = this.parseFoundFinderPattern(t2, r2, i2), null === n2 ? o2 = re.getNextSecondBar(t2, this.startEnd[0]) : s2 = false;
          } while (s2);
          let a2, h2 = this.decodeDataCharacter(t2, n2, i2, true);
          if (!this.isEmptyPair(e2) && e2[e2.length - 1].mustBeLast()) throw new N();
          try {
            a2 = this.decodeDataCharacter(t2, n2, i2, false);
          } catch (t3) {
            a2 = null, console.log(t3);
          }
          return new te(h2, a2, n2, true);
        }
        isEmptyPair(t2) {
          return 0 === t2.length;
        }
        findNextPair(t2, e2, r2) {
          let n2 = this.getDecodeFinderCounters();
          n2[0] = 0, n2[1] = 0, n2[2] = 0, n2[3] = 0;
          let i2, s2 = t2.getSize();
          if (r2 >= 0) i2 = r2;
          else if (this.isEmptyPair(e2)) i2 = 0;
          else {
            i2 = e2[e2.length - 1].getFinderPattern().getStartEnd()[1];
          }
          let o2 = e2.length % 2 != 0;
          this.startFromEven && (o2 = !o2);
          let a2 = false;
          for (; i2 < s2 && (a2 = !t2.get(i2), a2); ) i2++;
          let h2 = 0, l2 = i2;
          for (let e3 = i2; e3 < s2; e3++) if (t2.get(e3) !== a2) n2[h2]++;
          else {
            if (3 === h2) {
              if (o2 && re.reverseCounters(n2), re.isFinderPattern(n2)) return this.startEnd[0] = l2, void (this.startEnd[1] = e3);
              o2 && re.reverseCounters(n2), l2 += n2[0] + n2[1], n2[0] = n2[2], n2[1] = n2[3], n2[2] = 0, n2[3] = 0, h2--;
            } else h2++;
            n2[h2] = 1, a2 = !a2;
          }
          throw new N();
        }
        static reverseCounters(t2) {
          let e2 = t2.length;
          for (let r2 = 0; r2 < e2 / 2; ++r2) {
            let n2 = t2[r2];
            t2[r2] = t2[e2 - r2 - 1], t2[e2 - r2 - 1] = n2;
          }
        }
        parseFoundFinderPattern(t2, e2, r2) {
          let n2, i2, s2;
          if (r2) {
            let e3 = this.startEnd[0] - 1;
            for (; e3 >= 0 && !t2.get(e3); ) e3--;
            e3++, n2 = this.startEnd[0] - e3, i2 = e3, s2 = this.startEnd[1];
          } else i2 = this.startEnd[0], s2 = t2.getNextUnset(this.startEnd[1] + 1), n2 = s2 - this.startEnd[1];
          let o2, a2 = this.getDecodeFinderCounters();
          d.arraycopy(a2, 0, a2, 1, a2.length - 1), a2[0] = n2;
          try {
            o2 = this.parseFinderValue(a2, re.FINDER_PATTERNS);
          } catch (t3) {
            return null;
          }
          return new Bt(o2, [i2, s2], i2, s2, e2);
        }
        decodeDataCharacter(t2, e2, r2, n2) {
          let i2 = this.getDataCharacterCounters();
          for (let t3 = 0; t3 < i2.length; t3++) i2[t3] = 0;
          if (n2) re.recordPatternInReverse(t2, e2.getStartEnd()[0], i2);
          else {
            re.recordPattern(t2, e2.getStartEnd()[1], i2);
            for (let t3 = 0, e3 = i2.length - 1; t3 < e3; t3++, e3--) {
              let r3 = i2[t3];
              i2[t3] = i2[e3], i2[e3] = r3;
            }
          }
          let s2 = et.sum(new Int32Array(i2)) / 17, o2 = (e2.getStartEnd()[1] - e2.getStartEnd()[0]) / 15;
          if (Math.abs(s2 - o2) / o2 > 0.3) throw new N();
          let a2 = this.getOddCounts(), h2 = this.getEvenCounts(), l2 = this.getOddRoundingErrors(), c2 = this.getEvenRoundingErrors();
          for (let t3 = 0; t3 < i2.length; t3++) {
            let e3 = 1 * i2[t3] / s2, r3 = e3 + 0.5;
            if (r3 < 1) {
              if (e3 < 0.3) throw new N();
              r3 = 1;
            } else if (r3 > 8) {
              if (e3 > 8.7) throw new N();
              r3 = 8;
            }
            let n3 = t3 / 2;
            1 & t3 ? (h2[n3] = r3, c2[n3] = e3 - r3) : (a2[n3] = r3, l2[n3] = e3 - r3);
          }
          this.adjustOddEvenCounts(17);
          let d2 = 4 * e2.getValue() + (r2 ? 0 : 2) + (n2 ? 0 : 1) - 1, u2 = 0, g2 = 0;
          for (let t3 = a2.length - 1; t3 >= 0; t3--) {
            if (re.isNotA1left(e2, r2, n2)) {
              let e3 = re.WEIGHTS[d2][2 * t3];
              g2 += a2[t3] * e3;
            }
            u2 += a2[t3];
          }
          let f2 = 0;
          for (let t3 = h2.length - 1; t3 >= 0; t3--) if (re.isNotA1left(e2, r2, n2)) {
            let e3 = re.WEIGHTS[d2][2 * t3 + 1];
            f2 += h2[t3] * e3;
          }
          let w2 = g2 + f2;
          if (1 & u2 || u2 > 13 || u2 < 4) throw new N();
          let C2 = (13 - u2) / 2, A2 = re.SYMBOL_WIDEST[C2], E2 = 9 - A2, m2 = Pt.getRSSvalue(a2, A2, true), I2 = Pt.getRSSvalue(h2, E2, false), _2 = re.EVEN_TOTAL_SUBSET[C2], S2 = re.GSUM[C2];
          return new bt(m2 * _2 + I2 + S2, w2);
        }
        static isNotA1left(t2, e2, r2) {
          return !(0 === t2.getValue() && e2 && r2);
        }
        adjustOddEvenCounts(t2) {
          let e2 = et.sum(new Int32Array(this.getOddCounts())), r2 = et.sum(new Int32Array(this.getEvenCounts())), n2 = false, i2 = false;
          e2 > 13 ? i2 = true : e2 < 4 && (n2 = true);
          let s2 = false, o2 = false;
          r2 > 13 ? o2 = true : r2 < 4 && (s2 = true);
          let a2 = e2 + r2 - t2, h2 = !(1 & ~e2), l2 = !(1 & r2);
          if (1 === a2) if (h2) {
            if (l2) throw new N();
            i2 = true;
          } else {
            if (!l2) throw new N();
            o2 = true;
          }
          else if (-1 === a2) if (h2) {
            if (l2) throw new N();
            n2 = true;
          } else {
            if (!l2) throw new N();
            s2 = true;
          }
          else {
            if (0 !== a2) throw new N();
            if (h2) {
              if (!l2) throw new N();
              e2 < r2 ? (n2 = true, o2 = true) : (i2 = true, s2 = true);
            } else if (l2) throw new N();
          }
          if (n2) {
            if (i2) throw new N();
            re.increment(this.getOddCounts(), this.getOddRoundingErrors());
          }
          if (i2 && re.decrement(this.getOddCounts(), this.getOddRoundingErrors()), s2) {
            if (o2) throw new N();
            re.increment(this.getEvenCounts(), this.getOddRoundingErrors());
          }
          o2 && re.decrement(this.getEvenCounts(), this.getEvenRoundingErrors());
        }
      }
      re.SYMBOL_WIDEST = [7, 5, 4, 3, 1], re.EVEN_TOTAL_SUBSET = [4, 20, 52, 104, 204], re.GSUM = [0, 348, 1388, 2948, 3988], re.FINDER_PATTERNS = [Int32Array.from([1, 8, 4, 1]), Int32Array.from([3, 6, 4, 1]), Int32Array.from([3, 4, 6, 1]), Int32Array.from([3, 2, 8, 1]), Int32Array.from([2, 6, 5, 1]), Int32Array.from([2, 2, 9, 1])], re.WEIGHTS = [[1, 3, 9, 27, 81, 32, 96, 77], [20, 60, 180, 118, 143, 7, 21, 63], [189, 145, 13, 39, 117, 140, 209, 205], [193, 157, 49, 147, 19, 57, 171, 91], [62, 186, 136, 197, 169, 85, 44, 132], [185, 133, 188, 142, 4, 12, 36, 108], [113, 128, 173, 97, 80, 29, 87, 50], [150, 28, 84, 41, 123, 158, 52, 156], [46, 138, 203, 187, 139, 206, 196, 166], [76, 17, 51, 153, 37, 111, 122, 155], [43, 129, 176, 106, 107, 110, 119, 146], [16, 48, 144, 10, 30, 90, 59, 177], [109, 116, 137, 200, 178, 112, 125, 164], [70, 210, 208, 202, 184, 130, 179, 115], [134, 191, 151, 31, 93, 68, 204, 190], [148, 22, 66, 198, 172, 94, 71, 2], [6, 18, 54, 162, 64, 192, 154, 40], [120, 149, 25, 75, 14, 42, 126, 167], [79, 26, 78, 23, 69, 207, 199, 175], [103, 98, 83, 38, 114, 131, 182, 124], [161, 61, 183, 127, 170, 88, 53, 159], [55, 165, 73, 8, 24, 72, 5, 15], [45, 135, 194, 160, 58, 174, 100, 89]], re.FINDER_PAT_A = 0, re.FINDER_PAT_B = 1, re.FINDER_PAT_C = 2, re.FINDER_PAT_D = 3, re.FINDER_PAT_E = 4, re.FINDER_PAT_F = 5, re.FINDER_PATTERN_SEQUENCES = [[re.FINDER_PAT_A, re.FINDER_PAT_A], [re.FINDER_PAT_A, re.FINDER_PAT_B, re.FINDER_PAT_B], [re.FINDER_PAT_A, re.FINDER_PAT_C, re.FINDER_PAT_B, re.FINDER_PAT_D], [re.FINDER_PAT_A, re.FINDER_PAT_E, re.FINDER_PAT_B, re.FINDER_PAT_D, re.FINDER_PAT_C], [re.FINDER_PAT_A, re.FINDER_PAT_E, re.FINDER_PAT_B, re.FINDER_PAT_D, re.FINDER_PAT_D, re.FINDER_PAT_F], [re.FINDER_PAT_A, re.FINDER_PAT_E, re.FINDER_PAT_B, re.FINDER_PAT_D, re.FINDER_PAT_E, re.FINDER_PAT_F, re.FINDER_PAT_F], [re.FINDER_PAT_A, re.FINDER_PAT_A, re.FINDER_PAT_B, re.FINDER_PAT_B, re.FINDER_PAT_C, re.FINDER_PAT_C, re.FINDER_PAT_D, re.FINDER_PAT_D], [re.FINDER_PAT_A, re.FINDER_PAT_A, re.FINDER_PAT_B, re.FINDER_PAT_B, re.FINDER_PAT_C, re.FINDER_PAT_C, re.FINDER_PAT_D, re.FINDER_PAT_E, re.FINDER_PAT_E], [re.FINDER_PAT_A, re.FINDER_PAT_A, re.FINDER_PAT_B, re.FINDER_PAT_B, re.FINDER_PAT_C, re.FINDER_PAT_C, re.FINDER_PAT_D, re.FINDER_PAT_E, re.FINDER_PAT_F, re.FINDER_PAT_F], [re.FINDER_PAT_A, re.FINDER_PAT_A, re.FINDER_PAT_B, re.FINDER_PAT_B, re.FINDER_PAT_C, re.FINDER_PAT_D, re.FINDER_PAT_D, re.FINDER_PAT_E, re.FINDER_PAT_E, re.FINDER_PAT_F, re.FINDER_PAT_F]], re.MAX_PAIRS = 11;
      class ne extends bt {
        constructor(t2, e2, r2) {
          super(t2, e2), this.count = 0, this.finderPattern = r2;
        }
        getFinderPattern() {
          return this.finderPattern;
        }
        getCount() {
          return this.count;
        }
        incrementCount() {
          this.count++;
        }
      }
      class ie extends Mt {
        constructor() {
          super(...arguments), this.possibleLeftPairs = [], this.possibleRightPairs = [];
        }
        decodeRow(t2, e2, r2) {
          const n2 = this.decodePair(e2, false, t2, r2);
          ie.addOrTally(this.possibleLeftPairs, n2), e2.reverse();
          let i2 = this.decodePair(e2, true, t2, r2);
          ie.addOrTally(this.possibleRightPairs, i2), e2.reverse();
          for (let t3 of this.possibleLeftPairs) if (t3.getCount() > 1) {
            for (let e3 of this.possibleRightPairs) if (e3.getCount() > 1 && ie.checkChecksum(t3, e3)) return ie.constructResult(t3, e3);
          }
          throw new N();
        }
        static addOrTally(t2, e2) {
          if (null == e2) return;
          let r2 = false;
          for (let n2 of t2) if (n2.getValue() === e2.getValue()) {
            n2.incrementCount(), r2 = true;
            break;
          }
          r2 || t2.push(e2);
        }
        reset() {
          this.possibleLeftPairs.length = 0, this.possibleRightPairs.length = 0;
        }
        static constructResult(t2, e2) {
          let r2 = 4537077 * t2.getValue() + e2.getValue(), n2 = new String(r2).toString(), i2 = new T();
          for (let t3 = 13 - n2.length; t3 > 0; t3--) i2.append("0");
          i2.append(n2);
          let s2 = 0;
          for (let t3 = 0; t3 < 13; t3++) {
            let e3 = i2.charAt(t3).charCodeAt(0) - "0".charCodeAt(0);
            s2 += 1 & t3 ? e3 : 3 * e3;
          }
          s2 = 10 - s2 % 10, 10 === s2 && (s2 = 0), i2.append(s2.toString());
          let o2 = t2.getFinderPattern().getResultPoints(), a2 = e2.getFinderPattern().getResultPoints();
          return new v(i2.toString(), null, 0, [o2[0], o2[1], a2[0], a2[1]], x.RSS_14, (/* @__PURE__ */ new Date()).getTime());
        }
        static checkChecksum(t2, e2) {
          let r2 = (t2.getChecksumPortion() + 16 * e2.getChecksumPortion()) % 79, n2 = 9 * t2.getFinderPattern().getValue() + e2.getFinderPattern().getValue();
          return n2 > 72 && n2--, n2 > 8 && n2--, r2 === n2;
        }
        decodePair(t2, e2, r2, n2) {
          try {
            let i2 = this.findFinderPattern(t2, e2), s2 = this.parseFoundFinderPattern(t2, r2, e2, i2), o2 = null == n2 ? null : n2.get(E.NEED_RESULT_POINT_CALLBACK);
            if (null != o2) {
              let n3 = (i2[0] + i2[1]) / 2;
              e2 && (n3 = t2.getSize() - 1 - n3), o2.foundPossibleResultPoint(new nt(n3, r2));
            }
            let a2 = this.decodeDataCharacter(t2, s2, true), h2 = this.decodeDataCharacter(t2, s2, false);
            return new ne(1597 * a2.getValue() + h2.getValue(), a2.getChecksumPortion() + 4 * h2.getChecksumPortion(), s2);
          } catch (t3) {
            return null;
          }
        }
        decodeDataCharacter(t2, e2, r2) {
          let n2 = this.getDataCharacterCounters();
          for (let t3 = 0; t3 < n2.length; t3++) n2[t3] = 0;
          if (r2) ft.recordPatternInReverse(t2, e2.getStartEnd()[0], n2);
          else {
            ft.recordPattern(t2, e2.getStartEnd()[1] + 1, n2);
            for (let t3 = 0, e3 = n2.length - 1; t3 < e3; t3++, e3--) {
              let r3 = n2[t3];
              n2[t3] = n2[e3], n2[e3] = r3;
            }
          }
          let i2 = r2 ? 16 : 15, s2 = et.sum(new Int32Array(n2)) / i2, o2 = this.getOddCounts(), a2 = this.getEvenCounts(), h2 = this.getOddRoundingErrors(), l2 = this.getEvenRoundingErrors();
          for (let t3 = 0; t3 < n2.length; t3++) {
            let e3 = n2[t3] / s2, r3 = Math.floor(e3 + 0.5);
            r3 < 1 ? r3 = 1 : r3 > 8 && (r3 = 8);
            let i3 = Math.floor(t3 / 2);
            1 & t3 ? (a2[i3] = r3, l2[i3] = e3 - r3) : (o2[i3] = r3, h2[i3] = e3 - r3);
          }
          this.adjustOddEvenCounts(r2, i2);
          let c2 = 0, d2 = 0;
          for (let t3 = o2.length - 1; t3 >= 0; t3--) d2 *= 9, d2 += o2[t3], c2 += o2[t3];
          let u2 = 0, g2 = 0;
          for (let t3 = a2.length - 1; t3 >= 0; t3--) u2 *= 9, u2 += a2[t3], g2 += a2[t3];
          let f2 = d2 + 3 * u2;
          if (r2) {
            if (1 & c2 || c2 > 12 || c2 < 4) throw new N();
            let t3 = (12 - c2) / 2, e3 = ie.OUTSIDE_ODD_WIDEST[t3], r3 = 9 - e3, n3 = Pt.getRSSvalue(o2, e3, false), i3 = Pt.getRSSvalue(a2, r3, true), s3 = ie.OUTSIDE_EVEN_TOTAL_SUBSET[t3], h3 = ie.OUTSIDE_GSUM[t3];
            return new bt(n3 * s3 + i3 + h3, f2);
          }
          {
            if (1 & g2 || g2 > 10 || g2 < 4) throw new N();
            let t3 = (10 - g2) / 2, e3 = ie.INSIDE_ODD_WIDEST[t3], r3 = 9 - e3, n3 = Pt.getRSSvalue(o2, e3, true), i3 = Pt.getRSSvalue(a2, r3, false), s3 = ie.INSIDE_ODD_TOTAL_SUBSET[t3], h3 = ie.INSIDE_GSUM[t3];
            return new bt(i3 * s3 + n3 + h3, f2);
          }
        }
        findFinderPattern(t2, e2) {
          let r2 = this.getDecodeFinderCounters();
          r2[0] = 0, r2[1] = 0, r2[2] = 0, r2[3] = 0;
          let n2 = t2.getSize(), i2 = false, s2 = 0;
          for (; s2 < n2 && (i2 = !t2.get(s2), e2 !== i2); ) s2++;
          let o2 = 0, a2 = s2;
          for (let e3 = s2; e3 < n2; e3++) if (t2.get(e3) !== i2) r2[o2]++;
          else {
            if (3 === o2) {
              if (Mt.isFinderPattern(r2)) return [a2, e3];
              a2 += r2[0] + r2[1], r2[0] = r2[2], r2[1] = r2[3], r2[2] = 0, r2[3] = 0, o2--;
            } else o2++;
            r2[o2] = 1, i2 = !i2;
          }
          throw new N();
        }
        parseFoundFinderPattern(t2, e2, r2, n2) {
          let i2 = t2.get(n2[0]), s2 = n2[0] - 1;
          for (; s2 >= 0 && i2 !== t2.get(s2); ) s2--;
          s2++;
          const o2 = n2[0] - s2, a2 = this.getDecodeFinderCounters(), h2 = new Int32Array(a2.length);
          d.arraycopy(a2, 0, h2, 1, a2.length - 1), h2[0] = o2;
          const l2 = this.parseFinderValue(h2, ie.FINDER_PATTERNS);
          let c2 = s2, u2 = n2[1];
          return r2 && (c2 = t2.getSize() - 1 - c2, u2 = t2.getSize() - 1 - u2), new Bt(l2, [s2, n2[1]], c2, u2, e2);
        }
        adjustOddEvenCounts(t2, e2) {
          let r2 = et.sum(new Int32Array(this.getOddCounts())), n2 = et.sum(new Int32Array(this.getEvenCounts())), i2 = false, s2 = false, o2 = false, a2 = false;
          t2 ? (r2 > 12 ? s2 = true : r2 < 4 && (i2 = true), n2 > 12 ? a2 = true : n2 < 4 && (o2 = true)) : (r2 > 11 ? s2 = true : r2 < 5 && (i2 = true), n2 > 10 ? a2 = true : n2 < 4 && (o2 = true));
          let h2 = r2 + n2 - e2, l2 = (1 & r2) == (t2 ? 1 : 0), c2 = !(1 & ~n2);
          if (1 === h2) if (l2) {
            if (c2) throw new N();
            s2 = true;
          } else {
            if (!c2) throw new N();
            a2 = true;
          }
          else if (-1 === h2) if (l2) {
            if (c2) throw new N();
            i2 = true;
          } else {
            if (!c2) throw new N();
            o2 = true;
          }
          else {
            if (0 !== h2) throw new N();
            if (l2) {
              if (!c2) throw new N();
              r2 < n2 ? (i2 = true, a2 = true) : (s2 = true, o2 = true);
            } else if (c2) throw new N();
          }
          if (i2) {
            if (s2) throw new N();
            Mt.increment(this.getOddCounts(), this.getOddRoundingErrors());
          }
          if (s2 && Mt.decrement(this.getOddCounts(), this.getOddRoundingErrors()), o2) {
            if (a2) throw new N();
            Mt.increment(this.getEvenCounts(), this.getOddRoundingErrors());
          }
          a2 && Mt.decrement(this.getEvenCounts(), this.getEvenRoundingErrors());
        }
      }
      ie.OUTSIDE_EVEN_TOTAL_SUBSET = [1, 10, 34, 70, 126], ie.INSIDE_ODD_TOTAL_SUBSET = [4, 20, 48, 81], ie.OUTSIDE_GSUM = [0, 161, 961, 2015, 2715], ie.INSIDE_GSUM = [0, 336, 1036, 1516], ie.OUTSIDE_ODD_WIDEST = [8, 6, 4, 3, 1], ie.INSIDE_ODD_WIDEST = [2, 4, 6, 8], ie.FINDER_PATTERNS = [Int32Array.from([3, 8, 2, 1]), Int32Array.from([3, 5, 5, 1]), Int32Array.from([3, 3, 7, 1]), Int32Array.from([3, 1, 9, 1]), Int32Array.from([2, 7, 4, 1]), Int32Array.from([2, 5, 6, 1]), Int32Array.from([2, 3, 8, 1]), Int32Array.from([1, 5, 7, 1]), Int32Array.from([1, 3, 9, 1])];
      class se extends ft {
        constructor(t2) {
          super(), this.readers = [];
          const e2 = t2 ? t2.get(E.POSSIBLE_FORMATS) : null, r2 = t2 && void 0 !== t2.get(E.ASSUME_CODE_39_CHECK_DIGIT), n2 = t2 && void 0 !== t2.get(E.ENABLE_CODE_39_EXTENDED_MODE);
          e2 && ((e2.includes(x.EAN_13) || e2.includes(x.UPC_A) || e2.includes(x.EAN_8) || e2.includes(x.UPC_E)) && this.readers.push(new Dt(t2)), e2.includes(x.CODE_39) && this.readers.push(new Ct(r2, n2)), e2.includes(x.CODE_93) && this.readers.push(new At()), e2.includes(x.CODE_128) && this.readers.push(new wt()), e2.includes(x.ITF) && this.readers.push(new Et()), e2.includes(x.CODABAR) && this.readers.push(new Ot()), e2.includes(x.RSS_14) && this.readers.push(new ie()), e2.includes(x.RSS_EXPANDED) && (console.warn("RSS Expanded reader IS NOT ready for production yet! use at your own risk."), this.readers.push(new re()))), 0 === this.readers.length && (this.readers.push(new Dt(t2)), this.readers.push(new Ct()), this.readers.push(new At()), this.readers.push(new Dt(t2)), this.readers.push(new wt()), this.readers.push(new Et()), this.readers.push(new ie()));
        }
        decodeRow(t2, e2, r2) {
          for (let n2 = 0; n2 < this.readers.length; n2++) try {
            return this.readers[n2].decodeRow(t2, e2, r2);
          } catch (t3) {
          }
          throw new N();
        }
        reset() {
          this.readers.forEach((t2) => t2.reset());
        }
      }
      class oe {
        constructor(t2, e2, r2) {
          this.ecCodewords = t2, this.ecBlocks = [e2], r2 && this.ecBlocks.push(r2);
        }
        getECCodewords() {
          return this.ecCodewords;
        }
        getECBlocks() {
          return this.ecBlocks;
        }
      }
      class ae {
        constructor(t2, e2) {
          this.count = t2, this.dataCodewords = e2;
        }
        getCount() {
          return this.count;
        }
        getDataCodewords() {
          return this.dataCodewords;
        }
      }
      class he {
        constructor(t2, e2, r2, n2, i2, s2) {
          this.versionNumber = t2, this.symbolSizeRows = e2, this.symbolSizeColumns = r2, this.dataRegionSizeRows = n2, this.dataRegionSizeColumns = i2, this.ecBlocks = s2;
          let o2 = 0;
          const a2 = s2.getECCodewords(), h2 = s2.getECBlocks();
          for (let t3 of h2) o2 += t3.getCount() * (t3.getDataCodewords() + a2);
          this.totalCodewords = o2;
        }
        getVersionNumber() {
          return this.versionNumber;
        }
        getSymbolSizeRows() {
          return this.symbolSizeRows;
        }
        getSymbolSizeColumns() {
          return this.symbolSizeColumns;
        }
        getDataRegionSizeRows() {
          return this.dataRegionSizeRows;
        }
        getDataRegionSizeColumns() {
          return this.dataRegionSizeColumns;
        }
        getTotalCodewords() {
          return this.totalCodewords;
        }
        getECBlocks() {
          return this.ecBlocks;
        }
        static getVersionForDimensions(t2, e2) {
          if (1 & t2 || 1 & e2) throw new m();
          for (let r2 of he.VERSIONS) if (r2.symbolSizeRows === t2 && r2.symbolSizeColumns === e2) return r2;
          throw new m();
        }
        toString() {
          return "" + this.versionNumber;
        }
        static buildVersions() {
          return [new he(1, 10, 10, 8, 8, new oe(5, new ae(1, 3))), new he(2, 12, 12, 10, 10, new oe(7, new ae(1, 5))), new he(3, 14, 14, 12, 12, new oe(10, new ae(1, 8))), new he(4, 16, 16, 14, 14, new oe(12, new ae(1, 12))), new he(5, 18, 18, 16, 16, new oe(14, new ae(1, 18))), new he(6, 20, 20, 18, 18, new oe(18, new ae(1, 22))), new he(7, 22, 22, 20, 20, new oe(20, new ae(1, 30))), new he(8, 24, 24, 22, 22, new oe(24, new ae(1, 36))), new he(9, 26, 26, 24, 24, new oe(28, new ae(1, 44))), new he(10, 32, 32, 14, 14, new oe(36, new ae(1, 62))), new he(11, 36, 36, 16, 16, new oe(42, new ae(1, 86))), new he(12, 40, 40, 18, 18, new oe(48, new ae(1, 114))), new he(13, 44, 44, 20, 20, new oe(56, new ae(1, 144))), new he(14, 48, 48, 22, 22, new oe(68, new ae(1, 174))), new he(15, 52, 52, 24, 24, new oe(42, new ae(2, 102))), new he(16, 64, 64, 14, 14, new oe(56, new ae(2, 140))), new he(17, 72, 72, 16, 16, new oe(36, new ae(4, 92))), new he(18, 80, 80, 18, 18, new oe(48, new ae(4, 114))), new he(19, 88, 88, 20, 20, new oe(56, new ae(4, 144))), new he(20, 96, 96, 22, 22, new oe(68, new ae(4, 174))), new he(21, 104, 104, 24, 24, new oe(56, new ae(6, 136))), new he(22, 120, 120, 18, 18, new oe(68, new ae(6, 175))), new he(23, 132, 132, 20, 20, new oe(62, new ae(8, 163))), new he(24, 144, 144, 22, 22, new oe(62, new ae(8, 156), new ae(2, 155))), new he(25, 8, 18, 6, 16, new oe(7, new ae(1, 5))), new he(26, 8, 32, 6, 14, new oe(11, new ae(1, 10))), new he(27, 12, 26, 10, 24, new oe(14, new ae(1, 16))), new he(28, 12, 36, 10, 16, new oe(18, new ae(1, 22))), new he(29, 16, 36, 14, 16, new oe(24, new ae(1, 32))), new he(30, 16, 48, 14, 22, new oe(28, new ae(1, 49)))];
        }
      }
      he.VERSIONS = he.buildVersions();
      class le {
        constructor(t2) {
          const e2 = t2.getHeight();
          if (e2 < 8 || e2 > 144 || 1 & e2) throw new m();
          this.version = le.readVersion(t2), this.mappingBitMatrix = this.extractDataRegion(t2), this.readMappingMatrix = new R(this.mappingBitMatrix.getWidth(), this.mappingBitMatrix.getHeight());
        }
        getVersion() {
          return this.version;
        }
        static readVersion(t2) {
          const e2 = t2.getHeight(), r2 = t2.getWidth();
          return he.getVersionForDimensions(e2, r2);
        }
        readCodewords() {
          const t2 = new Int8Array(this.version.getTotalCodewords());
          let e2 = 0, r2 = 4, n2 = 0;
          const i2 = this.mappingBitMatrix.getHeight(), s2 = this.mappingBitMatrix.getWidth();
          let o2 = false, a2 = false, h2 = false, l2 = false;
          do {
            if (r2 !== i2 || 0 !== n2 || o2) if (r2 === i2 - 2 && 0 === n2 && 3 & s2 && !a2) t2[e2++] = 255 & this.readCorner2(i2, s2), r2 -= 2, n2 += 2, a2 = true;
            else if (r2 !== i2 + 4 || 2 !== n2 || 7 & s2 || h2) if (r2 !== i2 - 2 || 0 !== n2 || 4 != (7 & s2) || l2) {
              do {
                r2 < i2 && n2 >= 0 && !this.readMappingMatrix.get(n2, r2) && (t2[e2++] = 255 & this.readUtah(r2, n2, i2, s2)), r2 -= 2, n2 += 2;
              } while (r2 >= 0 && n2 < s2);
              r2 += 1, n2 += 3;
              do {
                r2 >= 0 && n2 < s2 && !this.readMappingMatrix.get(n2, r2) && (t2[e2++] = 255 & this.readUtah(r2, n2, i2, s2)), r2 += 2, n2 -= 2;
              } while (r2 < i2 && n2 >= 0);
              r2 += 3, n2 += 1;
            } else t2[e2++] = 255 & this.readCorner4(i2, s2), r2 -= 2, n2 += 2, l2 = true;
            else t2[e2++] = 255 & this.readCorner3(i2, s2), r2 -= 2, n2 += 2, h2 = true;
            else t2[e2++] = 255 & this.readCorner1(i2, s2), r2 -= 2, n2 += 2, o2 = true;
          } while (r2 < i2 || n2 < s2);
          if (e2 !== this.version.getTotalCodewords()) throw new m();
          return t2;
        }
        readModule(t2, e2, r2, n2) {
          return t2 < 0 && (t2 += r2, e2 += 4 - (r2 + 4 & 7)), e2 < 0 && (e2 += n2, t2 += 4 - (n2 + 4 & 7)), this.readMappingMatrix.set(e2, t2), this.mappingBitMatrix.get(e2, t2);
        }
        readUtah(t2, e2, r2, n2) {
          let i2 = 0;
          return this.readModule(t2 - 2, e2 - 2, r2, n2) && (i2 |= 1), i2 <<= 1, this.readModule(t2 - 2, e2 - 1, r2, n2) && (i2 |= 1), i2 <<= 1, this.readModule(t2 - 1, e2 - 2, r2, n2) && (i2 |= 1), i2 <<= 1, this.readModule(t2 - 1, e2 - 1, r2, n2) && (i2 |= 1), i2 <<= 1, this.readModule(t2 - 1, e2, r2, n2) && (i2 |= 1), i2 <<= 1, this.readModule(t2, e2 - 2, r2, n2) && (i2 |= 1), i2 <<= 1, this.readModule(t2, e2 - 1, r2, n2) && (i2 |= 1), i2 <<= 1, this.readModule(t2, e2, r2, n2) && (i2 |= 1), i2;
        }
        readCorner1(t2, e2) {
          let r2 = 0;
          return this.readModule(t2 - 1, 0, t2, e2) && (r2 |= 1), r2 <<= 1, this.readModule(t2 - 1, 1, t2, e2) && (r2 |= 1), r2 <<= 1, this.readModule(t2 - 1, 2, t2, e2) && (r2 |= 1), r2 <<= 1, this.readModule(0, e2 - 2, t2, e2) && (r2 |= 1), r2 <<= 1, this.readModule(0, e2 - 1, t2, e2) && (r2 |= 1), r2 <<= 1, this.readModule(1, e2 - 1, t2, e2) && (r2 |= 1), r2 <<= 1, this.readModule(2, e2 - 1, t2, e2) && (r2 |= 1), r2 <<= 1, this.readModule(3, e2 - 1, t2, e2) && (r2 |= 1), r2;
        }
        readCorner2(t2, e2) {
          let r2 = 0;
          return this.readModule(t2 - 3, 0, t2, e2) && (r2 |= 1), r2 <<= 1, this.readModule(t2 - 2, 0, t2, e2) && (r2 |= 1), r2 <<= 1, this.readModule(t2 - 1, 0, t2, e2) && (r2 |= 1), r2 <<= 1, this.readModule(0, e2 - 4, t2, e2) && (r2 |= 1), r2 <<= 1, this.readModule(0, e2 - 3, t2, e2) && (r2 |= 1), r2 <<= 1, this.readModule(0, e2 - 2, t2, e2) && (r2 |= 1), r2 <<= 1, this.readModule(0, e2 - 1, t2, e2) && (r2 |= 1), r2 <<= 1, this.readModule(1, e2 - 1, t2, e2) && (r2 |= 1), r2;
        }
        readCorner3(t2, e2) {
          let r2 = 0;
          return this.readModule(t2 - 1, 0, t2, e2) && (r2 |= 1), r2 <<= 1, this.readModule(t2 - 1, e2 - 1, t2, e2) && (r2 |= 1), r2 <<= 1, this.readModule(0, e2 - 3, t2, e2) && (r2 |= 1), r2 <<= 1, this.readModule(0, e2 - 2, t2, e2) && (r2 |= 1), r2 <<= 1, this.readModule(0, e2 - 1, t2, e2) && (r2 |= 1), r2 <<= 1, this.readModule(1, e2 - 3, t2, e2) && (r2 |= 1), r2 <<= 1, this.readModule(1, e2 - 2, t2, e2) && (r2 |= 1), r2 <<= 1, this.readModule(1, e2 - 1, t2, e2) && (r2 |= 1), r2;
        }
        readCorner4(t2, e2) {
          let r2 = 0;
          return this.readModule(t2 - 3, 0, t2, e2) && (r2 |= 1), r2 <<= 1, this.readModule(t2 - 2, 0, t2, e2) && (r2 |= 1), r2 <<= 1, this.readModule(t2 - 1, 0, t2, e2) && (r2 |= 1), r2 <<= 1, this.readModule(0, e2 - 2, t2, e2) && (r2 |= 1), r2 <<= 1, this.readModule(0, e2 - 1, t2, e2) && (r2 |= 1), r2 <<= 1, this.readModule(1, e2 - 1, t2, e2) && (r2 |= 1), r2 <<= 1, this.readModule(2, e2 - 1, t2, e2) && (r2 |= 1), r2 <<= 1, this.readModule(3, e2 - 1, t2, e2) && (r2 |= 1), r2;
        }
        extractDataRegion(t2) {
          const e2 = this.version.getSymbolSizeRows(), r2 = this.version.getSymbolSizeColumns();
          if (t2.getHeight() !== e2) throw new a("Dimension of bitMatrix must match the version size");
          const n2 = this.version.getDataRegionSizeRows(), i2 = this.version.getDataRegionSizeColumns(), s2 = e2 / n2 | 0, o2 = r2 / i2 | 0, h2 = new R(o2 * i2, s2 * n2);
          for (let e3 = 0; e3 < s2; ++e3) {
            const r3 = e3 * n2;
            for (let s3 = 0; s3 < o2; ++s3) {
              const o3 = s3 * i2;
              for (let a2 = 0; a2 < n2; ++a2) {
                const l2 = e3 * (n2 + 2) + 1 + a2, c2 = r3 + a2;
                for (let e4 = 0; e4 < i2; ++e4) {
                  const r4 = s3 * (i2 + 2) + 1 + e4;
                  if (t2.get(r4, l2)) {
                    const t3 = o3 + e4;
                    h2.set(t3, c2);
                  }
                }
              }
            }
          }
          return h2;
        }
      }
      class ce {
        constructor(t2, e2) {
          this.numDataCodewords = t2, this.codewords = e2;
        }
        static getDataBlocks(t2, e2) {
          const r2 = e2.getECBlocks();
          let n2 = 0;
          const i2 = r2.getECBlocks();
          for (let t3 of i2) n2 += t3.getCount();
          const s2 = new Array(n2);
          let o2 = 0;
          for (let t3 of i2) for (let e3 = 0; e3 < t3.getCount(); e3++) {
            const e4 = t3.getDataCodewords(), n3 = r2.getECCodewords() + e4;
            s2[o2++] = new ce(e4, new Uint8Array(n3));
          }
          const h2 = s2[0].codewords.length - r2.getECCodewords(), l2 = h2 - 1;
          let c2 = 0;
          for (let e3 = 0; e3 < l2; e3++) for (let r3 = 0; r3 < o2; r3++) s2[r3].codewords[e3] = t2[c2++];
          const d2 = 24 === e2.getVersionNumber(), u2 = d2 ? 8 : o2;
          for (let e3 = 0; e3 < u2; e3++) s2[e3].codewords[h2 - 1] = t2[c2++];
          const g2 = s2[0].codewords.length;
          for (let e3 = h2; e3 < g2; e3++) for (let r3 = 0; r3 < o2; r3++) {
            const n3 = d2 ? (r3 + 8) % o2 : r3, i3 = d2 && n3 > 7 ? e3 - 1 : e3;
            s2[n3].codewords[i3] = t2[c2++];
          }
          if (c2 !== t2.length) throw new a();
          return s2;
        }
        getNumDataCodewords() {
          return this.numDataCodewords;
        }
        getCodewords() {
          return this.codewords;
        }
      }
      class de {
        constructor(t2) {
          this.bytes = t2, this.byteOffset = 0, this.bitOffset = 0;
        }
        getBitOffset() {
          return this.bitOffset;
        }
        getByteOffset() {
          return this.byteOffset;
        }
        readBits(t2) {
          if (t2 < 1 || t2 > 32 || t2 > this.available()) throw new a("" + t2);
          let e2 = 0, r2 = this.bitOffset, n2 = this.byteOffset;
          const i2 = this.bytes;
          if (r2 > 0) {
            const s2 = 8 - r2, o2 = t2 < s2 ? t2 : s2, a2 = s2 - o2, h2 = 255 >> 8 - o2 << a2;
            e2 = (i2[n2] & h2) >> a2, t2 -= o2, r2 += o2, 8 === r2 && (r2 = 0, n2++);
          }
          if (t2 > 0) {
            for (; t2 >= 8; ) e2 = e2 << 8 | 255 & i2[n2], n2++, t2 -= 8;
            if (t2 > 0) {
              const s2 = 8 - t2, o2 = 255 >> s2 << s2;
              e2 = e2 << t2 | (i2[n2] & o2) >> s2, r2 += t2;
            }
          }
          return this.bitOffset = r2, this.byteOffset = n2, e2;
        }
        available() {
          return 8 * (this.bytes.length - this.byteOffset) - this.bitOffset;
        }
      }
      !function(t2) {
        t2[t2.PAD_ENCODE = 0] = "PAD_ENCODE", t2[t2.ASCII_ENCODE = 1] = "ASCII_ENCODE", t2[t2.C40_ENCODE = 2] = "C40_ENCODE", t2[t2.TEXT_ENCODE = 3] = "TEXT_ENCODE", t2[t2.ANSIX12_ENCODE = 4] = "ANSIX12_ENCODE", t2[t2.EDIFACT_ENCODE = 5] = "EDIFACT_ENCODE", t2[t2.BASE256_ENCODE = 6] = "BASE256_ENCODE";
      }(H || (H = {}));
      class ue {
        static decode(t2) {
          const e2 = new de(t2), r2 = new T(), n2 = new T(), i2 = new Array();
          let s2 = H.ASCII_ENCODE;
          do {
            if (s2 === H.ASCII_ENCODE) s2 = this.decodeAsciiSegment(e2, r2, n2);
            else {
              switch (s2) {
                case H.C40_ENCODE:
                  this.decodeC40Segment(e2, r2);
                  break;
                case H.TEXT_ENCODE:
                  this.decodeTextSegment(e2, r2);
                  break;
                case H.ANSIX12_ENCODE:
                  this.decodeAnsiX12Segment(e2, r2);
                  break;
                case H.EDIFACT_ENCODE:
                  this.decodeEdifactSegment(e2, r2);
                  break;
                case H.BASE256_ENCODE:
                  this.decodeBase256Segment(e2, r2, i2);
                  break;
                default:
                  throw new m();
              }
              s2 = H.ASCII_ENCODE;
            }
          } while (s2 !== H.PAD_ENCODE && e2.available() > 0);
          return n2.length() > 0 && r2.append(n2.toString()), new Y(t2, r2.toString(), 0 === i2.length ? null : i2, null);
        }
        static decodeAsciiSegment(t2, e2, r2) {
          let n2 = false;
          do {
            let i2 = t2.readBits(8);
            if (0 === i2) throw new m();
            if (i2 <= 128) return n2 && (i2 += 128), e2.append(String.fromCharCode(i2 - 1)), H.ASCII_ENCODE;
            if (129 === i2) return H.PAD_ENCODE;
            if (i2 <= 229) {
              const t3 = i2 - 130;
              t3 < 10 && e2.append("0"), e2.append("" + t3);
            } else switch (i2) {
              case 230:
                return H.C40_ENCODE;
              case 231:
                return H.BASE256_ENCODE;
              case 232:
                e2.append(String.fromCharCode(29));
                break;
              case 233:
              case 234:
              case 241:
                break;
              case 235:
                n2 = true;
                break;
              case 236:
                e2.append("[)>05"), r2.insert(0, "");
                break;
              case 237:
                e2.append("[)>06"), r2.insert(0, "");
                break;
              case 238:
                return H.ANSIX12_ENCODE;
              case 239:
                return H.TEXT_ENCODE;
              case 240:
                return H.EDIFACT_ENCODE;
              default:
                if (254 !== i2 || 0 !== t2.available()) throw new m();
            }
          } while (t2.available() > 0);
          return H.ASCII_ENCODE;
        }
        static decodeC40Segment(t2, e2) {
          let r2 = false;
          const n2 = [];
          let i2 = 0;
          do {
            if (8 === t2.available()) return;
            const s2 = t2.readBits(8);
            if (254 === s2) return;
            this.parseTwoBytes(s2, t2.readBits(8), n2);
            for (let t3 = 0; t3 < 3; t3++) {
              const s3 = n2[t3];
              switch (i2) {
                case 0:
                  if (s3 < 3) i2 = s3 + 1;
                  else {
                    if (!(s3 < this.C40_BASIC_SET_CHARS.length)) throw new m();
                    {
                      const t4 = this.C40_BASIC_SET_CHARS[s3];
                      r2 ? (e2.append(String.fromCharCode(t4.charCodeAt(0) + 128)), r2 = false) : e2.append(t4);
                    }
                  }
                  break;
                case 1:
                  r2 ? (e2.append(String.fromCharCode(s3 + 128)), r2 = false) : e2.append(String.fromCharCode(s3)), i2 = 0;
                  break;
                case 2:
                  if (s3 < this.C40_SHIFT2_SET_CHARS.length) {
                    const t4 = this.C40_SHIFT2_SET_CHARS[s3];
                    r2 ? (e2.append(String.fromCharCode(t4.charCodeAt(0) + 128)), r2 = false) : e2.append(t4);
                  } else switch (s3) {
                    case 27:
                      e2.append(String.fromCharCode(29));
                      break;
                    case 30:
                      r2 = true;
                      break;
                    default:
                      throw new m();
                  }
                  i2 = 0;
                  break;
                case 3:
                  r2 ? (e2.append(String.fromCharCode(s3 + 224)), r2 = false) : e2.append(String.fromCharCode(s3 + 96)), i2 = 0;
                  break;
                default:
                  throw new m();
              }
            }
          } while (t2.available() > 0);
        }
        static decodeTextSegment(t2, e2) {
          let r2 = false, n2 = [], i2 = 0;
          do {
            if (8 === t2.available()) return;
            const s2 = t2.readBits(8);
            if (254 === s2) return;
            this.parseTwoBytes(s2, t2.readBits(8), n2);
            for (let t3 = 0; t3 < 3; t3++) {
              const s3 = n2[t3];
              switch (i2) {
                case 0:
                  if (s3 < 3) i2 = s3 + 1;
                  else {
                    if (!(s3 < this.TEXT_BASIC_SET_CHARS.length)) throw new m();
                    {
                      const t4 = this.TEXT_BASIC_SET_CHARS[s3];
                      r2 ? (e2.append(String.fromCharCode(t4.charCodeAt(0) + 128)), r2 = false) : e2.append(t4);
                    }
                  }
                  break;
                case 1:
                  r2 ? (e2.append(String.fromCharCode(s3 + 128)), r2 = false) : e2.append(String.fromCharCode(s3)), i2 = 0;
                  break;
                case 2:
                  if (s3 < this.TEXT_SHIFT2_SET_CHARS.length) {
                    const t4 = this.TEXT_SHIFT2_SET_CHARS[s3];
                    r2 ? (e2.append(String.fromCharCode(t4.charCodeAt(0) + 128)), r2 = false) : e2.append(t4);
                  } else switch (s3) {
                    case 27:
                      e2.append(String.fromCharCode(29));
                      break;
                    case 30:
                      r2 = true;
                      break;
                    default:
                      throw new m();
                  }
                  i2 = 0;
                  break;
                case 3:
                  if (!(s3 < this.TEXT_SHIFT3_SET_CHARS.length)) throw new m();
                  {
                    const t4 = this.TEXT_SHIFT3_SET_CHARS[s3];
                    r2 ? (e2.append(String.fromCharCode(t4.charCodeAt(0) + 128)), r2 = false) : e2.append(t4), i2 = 0;
                  }
                  break;
                default:
                  throw new m();
              }
            }
          } while (t2.available() > 0);
        }
        static decodeAnsiX12Segment(t2, e2) {
          const r2 = [];
          do {
            if (8 === t2.available()) return;
            const n2 = t2.readBits(8);
            if (254 === n2) return;
            this.parseTwoBytes(n2, t2.readBits(8), r2);
            for (let t3 = 0; t3 < 3; t3++) {
              const n3 = r2[t3];
              switch (n3) {
                case 0:
                  e2.append("\r");
                  break;
                case 1:
                  e2.append("*");
                  break;
                case 2:
                  e2.append(">");
                  break;
                case 3:
                  e2.append(" ");
                  break;
                default:
                  if (n3 < 14) e2.append(String.fromCharCode(n3 + 44));
                  else {
                    if (!(n3 < 40)) throw new m();
                    e2.append(String.fromCharCode(n3 + 51));
                  }
              }
            }
          } while (t2.available() > 0);
        }
        static parseTwoBytes(t2, e2, r2) {
          let n2 = (t2 << 8) + e2 - 1, i2 = Math.floor(n2 / 1600);
          r2[0] = i2, n2 -= 1600 * i2, i2 = Math.floor(n2 / 40), r2[1] = i2, r2[2] = n2 - 40 * i2;
        }
        static decodeEdifactSegment(t2, e2) {
          do {
            if (t2.available() <= 16) return;
            for (let r2 = 0; r2 < 4; r2++) {
              let r3 = t2.readBits(6);
              if (31 === r3) {
                const e3 = 8 - t2.getBitOffset();
                return void (8 !== e3 && t2.readBits(e3));
              }
              32 & r3 || (r3 |= 64), e2.append(String.fromCharCode(r3));
            }
          } while (t2.available() > 0);
        }
        static decodeBase256Segment(t2, e2, r2) {
          let n2 = 1 + t2.getByteOffset();
          const i2 = this.unrandomize255State(t2.readBits(8), n2++);
          let s2;
          if (s2 = 0 === i2 ? t2.available() / 8 | 0 : i2 < 250 ? i2 : 250 * (i2 - 249) + this.unrandomize255State(t2.readBits(8), n2++), s2 < 0) throw new m();
          const o2 = new Uint8Array(s2);
          for (let e3 = 0; e3 < s2; e3++) {
            if (t2.available() < 8) throw new m();
            o2[e3] = this.unrandomize255State(t2.readBits(8), n2++);
          }
          r2.push(o2);
          try {
            e2.append(S.decode(o2, p.ISO88591));
          } catch (t3) {
            throw new J("Platform does not support required encoding: " + t3.message);
          }
        }
        static unrandomize255State(t2, e2) {
          const r2 = t2 - (149 * e2 % 255 + 1);
          return r2 >= 0 ? r2 : r2 + 256;
        }
      }
      ue.C40_BASIC_SET_CHARS = ["*", "*", "*", " ", "0", "1", "2", "3", "4", "5", "6", "7", "8", "9", "A", "B", "C", "D", "E", "F", "G", "H", "I", "J", "K", "L", "M", "N", "O", "P", "Q", "R", "S", "T", "U", "V", "W", "X", "Y", "Z"], ue.C40_SHIFT2_SET_CHARS = ["!", '"', "#", "$", "%", "&", "'", "(", ")", "*", "+", ",", "-", ".", "/", ":", ";", "<", "=", ">", "?", "@", "[", "\\", "]", "^", "_"], ue.TEXT_BASIC_SET_CHARS = ["*", "*", "*", " ", "0", "1", "2", "3", "4", "5", "6", "7", "8", "9", "a", "b", "c", "d", "e", "f", "g", "h", "i", "j", "k", "l", "m", "n", "o", "p", "q", "r", "s", "t", "u", "v", "w", "x", "y", "z"], ue.TEXT_SHIFT2_SET_CHARS = ue.C40_SHIFT2_SET_CHARS, ue.TEXT_SHIFT3_SET_CHARS = ["`", "A", "B", "C", "D", "E", "F", "G", "H", "I", "J", "K", "L", "M", "N", "O", "P", "Q", "R", "S", "T", "U", "V", "W", "X", "Y", "Z", "{", "|", "}", "~", String.fromCharCode(127)];
      class ge {
        constructor() {
          this.rsDecoder = new $(Q.DATA_MATRIX_FIELD_256);
        }
        decode(t2) {
          const e2 = new le(t2), r2 = e2.getVersion(), n2 = e2.readCodewords(), i2 = ce.getDataBlocks(n2, r2);
          let s2 = 0;
          for (let t3 of i2) s2 += t3.getNumDataCodewords();
          const o2 = new Uint8Array(s2), a2 = i2.length;
          for (let t3 = 0; t3 < a2; t3++) {
            const e3 = i2[t3], r3 = e3.getCodewords(), n3 = e3.getNumDataCodewords();
            this.correctErrors(r3, n3);
            for (let e4 = 0; e4 < n3; e4++) o2[e4 * a2 + t3] = r3[e4];
          }
          return ue.decode(o2);
        }
        correctErrors(t2, e2) {
          const r2 = new Int32Array(t2);
          try {
            this.rsDecoder.decode(r2, t2.length - e2);
          } catch (t3) {
            throw new l();
          }
          for (let n2 = 0; n2 < e2; n2++) t2[n2] = r2[n2];
        }
      }
      class fe {
        constructor(t2) {
          this.image = t2, this.rectangleDetector = new ot(this.image);
        }
        detect() {
          const t2 = this.rectangleDetector.detect();
          let e2 = this.detectSolid1(t2);
          if (e2 = this.detectSolid2(e2), e2[3] = this.correctTopRight(e2), !e2[3]) throw new N();
          e2 = this.shiftToModuleCenter(e2);
          const r2 = e2[0], n2 = e2[1], i2 = e2[2], s2 = e2[3];
          let o2 = this.transitionsBetween(r2, s2) + 1, a2 = this.transitionsBetween(i2, s2) + 1;
          1 & ~o2 || (o2 += 1), 1 & ~a2 || (a2 += 1), 4 * o2 < 7 * a2 && 4 * a2 < 7 * o2 && (o2 = a2 = Math.max(o2, a2));
          let h2 = fe.sampleGrid(this.image, r2, n2, i2, s2, o2, a2);
          return new it(h2, [r2, n2, i2, s2]);
        }
        static shiftPoint(t2, e2, r2) {
          let n2 = (e2.getX() - t2.getX()) / (r2 + 1), i2 = (e2.getY() - t2.getY()) / (r2 + 1);
          return new nt(t2.getX() + n2, t2.getY() + i2);
        }
        static moveAway(t2, e2, r2) {
          let n2 = t2.getX(), i2 = t2.getY();
          return n2 < e2 ? n2 -= 1 : n2 += 1, i2 < r2 ? i2 -= 1 : i2 += 1, new nt(n2, i2);
        }
        detectSolid1(t2) {
          let e2 = t2[0], r2 = t2[1], n2 = t2[3], i2 = t2[2], s2 = this.transitionsBetween(e2, r2), o2 = this.transitionsBetween(r2, n2), a2 = this.transitionsBetween(n2, i2), h2 = this.transitionsBetween(i2, e2), l2 = s2, c2 = [i2, e2, r2, n2];
          return l2 > o2 && (l2 = o2, c2[0] = e2, c2[1] = r2, c2[2] = n2, c2[3] = i2), l2 > a2 && (l2 = a2, c2[0] = r2, c2[1] = n2, c2[2] = i2, c2[3] = e2), l2 > h2 && (c2[0] = n2, c2[1] = i2, c2[2] = e2, c2[3] = r2), c2;
        }
        detectSolid2(t2) {
          let e2 = t2[0], r2 = t2[1], n2 = t2[2], i2 = t2[3], s2 = this.transitionsBetween(e2, i2), o2 = fe.shiftPoint(r2, n2, 4 * (s2 + 1)), a2 = fe.shiftPoint(n2, r2, 4 * (s2 + 1));
          return this.transitionsBetween(o2, e2) < this.transitionsBetween(a2, i2) ? (t2[0] = e2, t2[1] = r2, t2[2] = n2, t2[3] = i2) : (t2[0] = r2, t2[1] = n2, t2[2] = i2, t2[3] = e2), t2;
        }
        correctTopRight(t2) {
          let e2 = t2[0], r2 = t2[1], n2 = t2[2], i2 = t2[3], s2 = this.transitionsBetween(e2, i2), o2 = this.transitionsBetween(r2, i2), a2 = fe.shiftPoint(e2, r2, 4 * (o2 + 1)), h2 = fe.shiftPoint(n2, r2, 4 * (s2 + 1));
          s2 = this.transitionsBetween(a2, i2), o2 = this.transitionsBetween(h2, i2);
          let l2 = new nt(i2.getX() + (n2.getX() - r2.getX()) / (s2 + 1), i2.getY() + (n2.getY() - r2.getY()) / (s2 + 1)), c2 = new nt(i2.getX() + (e2.getX() - r2.getX()) / (o2 + 1), i2.getY() + (e2.getY() - r2.getY()) / (o2 + 1));
          return this.isValid(l2) ? this.isValid(c2) ? this.transitionsBetween(a2, l2) + this.transitionsBetween(h2, l2) > this.transitionsBetween(a2, c2) + this.transitionsBetween(h2, c2) ? l2 : c2 : l2 : this.isValid(c2) ? c2 : null;
        }
        shiftToModuleCenter(t2) {
          let e2 = t2[0], r2 = t2[1], n2 = t2[2], i2 = t2[3], s2 = this.transitionsBetween(e2, i2) + 1, o2 = this.transitionsBetween(n2, i2) + 1, a2 = fe.shiftPoint(e2, r2, 4 * o2), h2 = fe.shiftPoint(n2, r2, 4 * s2);
          s2 = this.transitionsBetween(a2, i2) + 1, o2 = this.transitionsBetween(h2, i2) + 1, 1 & ~s2 || (s2 += 1), 1 & ~o2 || (o2 += 1);
          let l2, c2, d2 = (e2.getX() + r2.getX() + n2.getX() + i2.getX()) / 4, u2 = (e2.getY() + r2.getY() + n2.getY() + i2.getY()) / 4;
          return e2 = fe.moveAway(e2, d2, u2), r2 = fe.moveAway(r2, d2, u2), n2 = fe.moveAway(n2, d2, u2), i2 = fe.moveAway(i2, d2, u2), a2 = fe.shiftPoint(e2, r2, 4 * o2), a2 = fe.shiftPoint(a2, i2, 4 * s2), l2 = fe.shiftPoint(r2, e2, 4 * o2), l2 = fe.shiftPoint(l2, n2, 4 * s2), h2 = fe.shiftPoint(n2, i2, 4 * o2), h2 = fe.shiftPoint(h2, r2, 4 * s2), c2 = fe.shiftPoint(i2, n2, 4 * o2), c2 = fe.shiftPoint(c2, e2, 4 * s2), [a2, l2, h2, c2];
        }
        isValid(t2) {
          return t2.getX() >= 0 && t2.getX() < this.image.getWidth() && t2.getY() > 0 && t2.getY() < this.image.getHeight();
        }
        static sampleGrid(t2, e2, r2, n2, i2, s2, o2) {
          return ct.getInstance().sampleGrid(t2, s2, o2, 0.5, 0.5, s2 - 0.5, 0.5, s2 - 0.5, o2 - 0.5, 0.5, o2 - 0.5, e2.getX(), e2.getY(), i2.getX(), i2.getY(), n2.getX(), n2.getY(), r2.getX(), r2.getY());
        }
        transitionsBetween(t2, e2) {
          let r2 = Math.trunc(t2.getX()), n2 = Math.trunc(t2.getY()), i2 = Math.trunc(e2.getX()), s2 = Math.trunc(e2.getY()), o2 = Math.abs(s2 - n2) > Math.abs(i2 - r2);
          if (o2) {
            let t3 = r2;
            r2 = n2, n2 = t3, t3 = i2, i2 = s2, s2 = t3;
          }
          let a2 = Math.abs(i2 - r2), h2 = Math.abs(s2 - n2), l2 = -a2 / 2, c2 = n2 < s2 ? 1 : -1, d2 = r2 < i2 ? 1 : -1, u2 = 0, g2 = this.image.get(o2 ? n2 : r2, o2 ? r2 : n2);
          for (let t3 = r2, e3 = n2; t3 !== i2; t3 += d2) {
            let r3 = this.image.get(o2 ? e3 : t3, o2 ? t3 : e3);
            if (r3 !== g2 && (u2++, g2 = r3), l2 += h2, l2 > 0) {
              if (e3 === s2) break;
              e3 += c2, l2 -= a2;
            }
          }
          return u2;
        }
      }
      class we {
        constructor() {
          this.decoder = new ge();
        }
        decode(t2, e2 = null) {
          let r2, n2;
          if (null != e2 && e2.has(E.PURE_BARCODE)) {
            const e3 = we.extractPureBits(t2.getBlackMatrix());
            r2 = this.decoder.decode(e3), n2 = we.NO_POINTS;
          } else {
            const e3 = new fe(t2.getBlackMatrix()).detect();
            r2 = this.decoder.decode(e3.getBits()), n2 = e3.getPoints();
          }
          const i2 = r2.getRawBytes(), s2 = new v(r2.getText(), i2, 8 * i2.length, n2, x.DATA_MATRIX, d.currentTimeMillis()), o2 = r2.getByteSegments();
          null != o2 && s2.putMetadata(z.BYTE_SEGMENTS, o2);
          const a2 = r2.getECLevel();
          return null != a2 && s2.putMetadata(z.ERROR_CORRECTION_LEVEL, a2), s2;
        }
        reset() {
        }
        static extractPureBits(t2) {
          const e2 = t2.getTopLeftOnBit(), r2 = t2.getBottomRightOnBit();
          if (null == e2 || null == r2) throw new N();
          const n2 = this.moduleSize(e2, t2);
          let i2 = e2[1];
          const s2 = r2[1];
          let o2 = e2[0];
          const a2 = (r2[0] - o2 + 1) / n2, h2 = (s2 - i2 + 1) / n2;
          if (a2 <= 0 || h2 <= 0) throw new N();
          const l2 = n2 / 2;
          i2 += l2, o2 += l2;
          const c2 = new R(a2, h2);
          for (let e3 = 0; e3 < h2; e3++) {
            const r3 = i2 + e3 * n2;
            for (let i3 = 0; i3 < a2; i3++) t2.get(o2 + i3 * n2, r3) && c2.set(i3, e3);
          }
          return c2;
        }
        static moduleSize(t2, e2) {
          const r2 = e2.getWidth();
          let n2 = t2[0];
          const i2 = t2[1];
          for (; n2 < r2 && e2.get(n2, i2); ) n2++;
          if (n2 === r2) throw new N();
          const s2 = n2 - t2[0];
          if (0 === s2) throw new N();
          return s2;
        }
      }
      we.NO_POINTS = [];
      !function(t2) {
        t2[t2.L = 0] = "L", t2[t2.M = 1] = "M", t2[t2.Q = 2] = "Q", t2[t2.H = 3] = "H";
      }(U || (U = {}));
      class Ce {
        constructor(t2, e2, r2) {
          this.value = t2, this.stringValue = e2, this.bits = r2, Ce.FOR_BITS.set(r2, this), Ce.FOR_VALUE.set(t2, this);
        }
        getValue() {
          return this.value;
        }
        getBits() {
          return this.bits;
        }
        static fromString(t2) {
          switch (t2) {
            case "L":
              return Ce.L;
            case "M":
              return Ce.M;
            case "Q":
              return Ce.Q;
            case "H":
              return Ce.H;
            default:
              throw new o(t2 + "not available");
          }
        }
        toString() {
          return this.stringValue;
        }
        equals(t2) {
          if (!(t2 instanceof Ce)) return false;
          const e2 = t2;
          return this.value === e2.value;
        }
        static forBits(t2) {
          if (t2 < 0 || t2 >= Ce.FOR_BITS.size) throw new a();
          return Ce.FOR_BITS.get(t2);
        }
      }
      Ce.FOR_BITS = /* @__PURE__ */ new Map(), Ce.FOR_VALUE = /* @__PURE__ */ new Map(), Ce.L = new Ce(U.L, "L", 1), Ce.M = new Ce(U.M, "M", 0), Ce.Q = new Ce(U.Q, "Q", 3), Ce.H = new Ce(U.H, "H", 2);
      class Ae {
        constructor(t2) {
          this.errorCorrectionLevel = Ce.forBits(t2 >> 3 & 3), this.dataMask = 7 & t2;
        }
        static numBitsDiffering(t2, e2) {
          return w.bitCount(t2 ^ e2);
        }
        static decodeFormatInformation(t2, e2) {
          const r2 = Ae.doDecodeFormatInformation(t2, e2);
          return null !== r2 ? r2 : Ae.doDecodeFormatInformation(t2 ^ Ae.FORMAT_INFO_MASK_QR, e2 ^ Ae.FORMAT_INFO_MASK_QR);
        }
        static doDecodeFormatInformation(t2, e2) {
          let r2 = Number.MAX_SAFE_INTEGER, n2 = 0;
          for (const i2 of Ae.FORMAT_INFO_DECODE_LOOKUP) {
            const s2 = i2[0];
            if (s2 === t2 || s2 === e2) return new Ae(i2[1]);
            let o2 = Ae.numBitsDiffering(t2, s2);
            o2 < r2 && (n2 = i2[1], r2 = o2), t2 !== e2 && (o2 = Ae.numBitsDiffering(e2, s2), o2 < r2 && (n2 = i2[1], r2 = o2));
          }
          return r2 <= 3 ? new Ae(n2) : null;
        }
        getErrorCorrectionLevel() {
          return this.errorCorrectionLevel;
        }
        getDataMask() {
          return this.dataMask;
        }
        hashCode() {
          return this.errorCorrectionLevel.getBits() << 3 | this.dataMask;
        }
        equals(t2) {
          if (!(t2 instanceof Ae)) return false;
          const e2 = t2;
          return this.errorCorrectionLevel === e2.errorCorrectionLevel && this.dataMask === e2.dataMask;
        }
      }
      Ae.FORMAT_INFO_MASK_QR = 21522, Ae.FORMAT_INFO_DECODE_LOOKUP = [Int32Array.from([21522, 0]), Int32Array.from([20773, 1]), Int32Array.from([24188, 2]), Int32Array.from([23371, 3]), Int32Array.from([17913, 4]), Int32Array.from([16590, 5]), Int32Array.from([20375, 6]), Int32Array.from([19104, 7]), Int32Array.from([30660, 8]), Int32Array.from([29427, 9]), Int32Array.from([32170, 10]), Int32Array.from([30877, 11]), Int32Array.from([26159, 12]), Int32Array.from([25368, 13]), Int32Array.from([27713, 14]), Int32Array.from([26998, 15]), Int32Array.from([5769, 16]), Int32Array.from([5054, 17]), Int32Array.from([7399, 18]), Int32Array.from([6608, 19]), Int32Array.from([1890, 20]), Int32Array.from([597, 21]), Int32Array.from([3340, 22]), Int32Array.from([2107, 23]), Int32Array.from([13663, 24]), Int32Array.from([12392, 25]), Int32Array.from([16177, 26]), Int32Array.from([14854, 27]), Int32Array.from([9396, 28]), Int32Array.from([8579, 29]), Int32Array.from([11994, 30]), Int32Array.from([11245, 31])];
      class Ee {
        constructor(t2, ...e2) {
          this.ecCodewordsPerBlock = t2, this.ecBlocks = e2;
        }
        getECCodewordsPerBlock() {
          return this.ecCodewordsPerBlock;
        }
        getNumBlocks() {
          let t2 = 0;
          const e2 = this.ecBlocks;
          for (const r2 of e2) t2 += r2.getCount();
          return t2;
        }
        getTotalECCodewords() {
          return this.ecCodewordsPerBlock * this.getNumBlocks();
        }
        getECBlocks() {
          return this.ecBlocks;
        }
      }
      class me {
        constructor(t2, e2) {
          this.count = t2, this.dataCodewords = e2;
        }
        getCount() {
          return this.count;
        }
        getDataCodewords() {
          return this.dataCodewords;
        }
      }
      class Ie {
        constructor(t2, e2, ...r2) {
          this.versionNumber = t2, this.alignmentPatternCenters = e2, this.ecBlocks = r2;
          let n2 = 0;
          const i2 = r2[0].getECCodewordsPerBlock(), s2 = r2[0].getECBlocks();
          for (const t3 of s2) n2 += t3.getCount() * (t3.getDataCodewords() + i2);
          this.totalCodewords = n2;
        }
        getVersionNumber() {
          return this.versionNumber;
        }
        getAlignmentPatternCenters() {
          return this.alignmentPatternCenters;
        }
        getTotalCodewords() {
          return this.totalCodewords;
        }
        getDimensionForVersion() {
          return 17 + 4 * this.versionNumber;
        }
        getECBlocksForLevel(t2) {
          return this.ecBlocks[t2.getValue()];
        }
        static getProvisionalVersionForDimension(t2) {
          if (t2 % 4 != 1) throw new m();
          try {
            return this.getVersionForNumber((t2 - 17) / 4);
          } catch (t3) {
            throw new m();
          }
        }
        static getVersionForNumber(t2) {
          if (t2 < 1 || t2 > 40) throw new a();
          return Ie.VERSIONS[t2 - 1];
        }
        static decodeVersionInformation(t2) {
          let e2 = Number.MAX_SAFE_INTEGER, r2 = 0;
          for (let n2 = 0; n2 < Ie.VERSION_DECODE_INFO.length; n2++) {
            const i2 = Ie.VERSION_DECODE_INFO[n2];
            if (i2 === t2) return Ie.getVersionForNumber(n2 + 7);
            const s2 = Ae.numBitsDiffering(t2, i2);
            s2 < e2 && (r2 = n2 + 7, e2 = s2);
          }
          return e2 <= 3 ? Ie.getVersionForNumber(r2) : null;
        }
        buildFunctionPattern() {
          const t2 = this.getDimensionForVersion(), e2 = new R(t2);
          e2.setRegion(0, 0, 9, 9), e2.setRegion(t2 - 8, 0, 8, 9), e2.setRegion(0, t2 - 8, 9, 8);
          const r2 = this.alignmentPatternCenters.length;
          for (let t3 = 0; t3 < r2; t3++) {
            const n2 = this.alignmentPatternCenters[t3] - 2;
            for (let i2 = 0; i2 < r2; i2++) 0 === t3 && (0 === i2 || i2 === r2 - 1) || t3 === r2 - 1 && 0 === i2 || e2.setRegion(this.alignmentPatternCenters[i2] - 2, n2, 5, 5);
          }
          return e2.setRegion(6, 9, 1, t2 - 17), e2.setRegion(9, 6, t2 - 17, 1), this.versionNumber > 6 && (e2.setRegion(t2 - 11, 0, 3, 6), e2.setRegion(0, t2 - 11, 6, 3)), e2;
        }
        toString() {
          return "" + this.versionNumber;
        }
      }
      Ie.VERSION_DECODE_INFO = Int32Array.from([31892, 34236, 39577, 42195, 48118, 51042, 55367, 58893, 63784, 68472, 70749, 76311, 79154, 84390, 87683, 92361, 96236, 102084, 102881, 110507, 110734, 117786, 119615, 126325, 127568, 133589, 136944, 141498, 145311, 150283, 152622, 158308, 161089, 167017]), Ie.VERSIONS = [new Ie(1, new Int32Array(0), new Ee(7, new me(1, 19)), new Ee(10, new me(1, 16)), new Ee(13, new me(1, 13)), new Ee(17, new me(1, 9))), new Ie(2, Int32Array.from([6, 18]), new Ee(10, new me(1, 34)), new Ee(16, new me(1, 28)), new Ee(22, new me(1, 22)), new Ee(28, new me(1, 16))), new Ie(3, Int32Array.from([6, 22]), new Ee(15, new me(1, 55)), new Ee(26, new me(1, 44)), new Ee(18, new me(2, 17)), new Ee(22, new me(2, 13))), new Ie(4, Int32Array.from([6, 26]), new Ee(20, new me(1, 80)), new Ee(18, new me(2, 32)), new Ee(26, new me(2, 24)), new Ee(16, new me(4, 9))), new Ie(5, Int32Array.from([6, 30]), new Ee(26, new me(1, 108)), new Ee(24, new me(2, 43)), new Ee(18, new me(2, 15), new me(2, 16)), new Ee(22, new me(2, 11), new me(2, 12))), new Ie(6, Int32Array.from([6, 34]), new Ee(18, new me(2, 68)), new Ee(16, new me(4, 27)), new Ee(24, new me(4, 19)), new Ee(28, new me(4, 15))), new Ie(7, Int32Array.from([6, 22, 38]), new Ee(20, new me(2, 78)), new Ee(18, new me(4, 31)), new Ee(18, new me(2, 14), new me(4, 15)), new Ee(26, new me(4, 13), new me(1, 14))), new Ie(8, Int32Array.from([6, 24, 42]), new Ee(24, new me(2, 97)), new Ee(22, new me(2, 38), new me(2, 39)), new Ee(22, new me(4, 18), new me(2, 19)), new Ee(26, new me(4, 14), new me(2, 15))), new Ie(9, Int32Array.from([6, 26, 46]), new Ee(30, new me(2, 116)), new Ee(22, new me(3, 36), new me(2, 37)), new Ee(20, new me(4, 16), new me(4, 17)), new Ee(24, new me(4, 12), new me(4, 13))), new Ie(10, Int32Array.from([6, 28, 50]), new Ee(18, new me(2, 68), new me(2, 69)), new Ee(26, new me(4, 43), new me(1, 44)), new Ee(24, new me(6, 19), new me(2, 20)), new Ee(28, new me(6, 15), new me(2, 16))), new Ie(11, Int32Array.from([6, 30, 54]), new Ee(20, new me(4, 81)), new Ee(30, new me(1, 50), new me(4, 51)), new Ee(28, new me(4, 22), new me(4, 23)), new Ee(24, new me(3, 12), new me(8, 13))), new Ie(12, Int32Array.from([6, 32, 58]), new Ee(24, new me(2, 92), new me(2, 93)), new Ee(22, new me(6, 36), new me(2, 37)), new Ee(26, new me(4, 20), new me(6, 21)), new Ee(28, new me(7, 14), new me(4, 15))), new Ie(13, Int32Array.from([6, 34, 62]), new Ee(26, new me(4, 107)), new Ee(22, new me(8, 37), new me(1, 38)), new Ee(24, new me(8, 20), new me(4, 21)), new Ee(22, new me(12, 11), new me(4, 12))), new Ie(14, Int32Array.from([6, 26, 46, 66]), new Ee(30, new me(3, 115), new me(1, 116)), new Ee(24, new me(4, 40), new me(5, 41)), new Ee(20, new me(11, 16), new me(5, 17)), new Ee(24, new me(11, 12), new me(5, 13))), new Ie(15, Int32Array.from([6, 26, 48, 70]), new Ee(22, new me(5, 87), new me(1, 88)), new Ee(24, new me(5, 41), new me(5, 42)), new Ee(30, new me(5, 24), new me(7, 25)), new Ee(24, new me(11, 12), new me(7, 13))), new Ie(16, Int32Array.from([6, 26, 50, 74]), new Ee(24, new me(5, 98), new me(1, 99)), new Ee(28, new me(7, 45), new me(3, 46)), new Ee(24, new me(15, 19), new me(2, 20)), new Ee(30, new me(3, 15), new me(13, 16))), new Ie(17, Int32Array.from([6, 30, 54, 78]), new Ee(28, new me(1, 107), new me(5, 108)), new Ee(28, new me(10, 46), new me(1, 47)), new Ee(28, new me(1, 22), new me(15, 23)), new Ee(28, new me(2, 14), new me(17, 15))), new Ie(18, Int32Array.from([6, 30, 56, 82]), new Ee(30, new me(5, 120), new me(1, 121)), new Ee(26, new me(9, 43), new me(4, 44)), new Ee(28, new me(17, 22), new me(1, 23)), new Ee(28, new me(2, 14), new me(19, 15))), new Ie(19, Int32Array.from([6, 30, 58, 86]), new Ee(28, new me(3, 113), new me(4, 114)), new Ee(26, new me(3, 44), new me(11, 45)), new Ee(26, new me(17, 21), new me(4, 22)), new Ee(26, new me(9, 13), new me(16, 14))), new Ie(20, Int32Array.from([6, 34, 62, 90]), new Ee(28, new me(3, 107), new me(5, 108)), new Ee(26, new me(3, 41), new me(13, 42)), new Ee(30, new me(15, 24), new me(5, 25)), new Ee(28, new me(15, 15), new me(10, 16))), new Ie(21, Int32Array.from([6, 28, 50, 72, 94]), new Ee(28, new me(4, 116), new me(4, 117)), new Ee(26, new me(17, 42)), new Ee(28, new me(17, 22), new me(6, 23)), new Ee(30, new me(19, 16), new me(6, 17))), new Ie(22, Int32Array.from([6, 26, 50, 74, 98]), new Ee(28, new me(2, 111), new me(7, 112)), new Ee(28, new me(17, 46)), new Ee(30, new me(7, 24), new me(16, 25)), new Ee(24, new me(34, 13))), new Ie(23, Int32Array.from([6, 30, 54, 78, 102]), new Ee(30, new me(4, 121), new me(5, 122)), new Ee(28, new me(4, 47), new me(14, 48)), new Ee(30, new me(11, 24), new me(14, 25)), new Ee(30, new me(16, 15), new me(14, 16))), new Ie(24, Int32Array.from([6, 28, 54, 80, 106]), new Ee(30, new me(6, 117), new me(4, 118)), new Ee(28, new me(6, 45), new me(14, 46)), new Ee(30, new me(11, 24), new me(16, 25)), new Ee(30, new me(30, 16), new me(2, 17))), new Ie(25, Int32Array.from([6, 32, 58, 84, 110]), new Ee(26, new me(8, 106), new me(4, 107)), new Ee(28, new me(8, 47), new me(13, 48)), new Ee(30, new me(7, 24), new me(22, 25)), new Ee(30, new me(22, 15), new me(13, 16))), new Ie(26, Int32Array.from([6, 30, 58, 86, 114]), new Ee(28, new me(10, 114), new me(2, 115)), new Ee(28, new me(19, 46), new me(4, 47)), new Ee(28, new me(28, 22), new me(6, 23)), new Ee(30, new me(33, 16), new me(4, 17))), new Ie(27, Int32Array.from([6, 34, 62, 90, 118]), new Ee(30, new me(8, 122), new me(4, 123)), new Ee(28, new me(22, 45), new me(3, 46)), new Ee(30, new me(8, 23), new me(26, 24)), new Ee(30, new me(12, 15), new me(28, 16))), new Ie(28, Int32Array.from([6, 26, 50, 74, 98, 122]), new Ee(30, new me(3, 117), new me(10, 118)), new Ee(28, new me(3, 45), new me(23, 46)), new Ee(30, new me(4, 24), new me(31, 25)), new Ee(30, new me(11, 15), new me(31, 16))), new Ie(29, Int32Array.from([6, 30, 54, 78, 102, 126]), new Ee(30, new me(7, 116), new me(7, 117)), new Ee(28, new me(21, 45), new me(7, 46)), new Ee(30, new me(1, 23), new me(37, 24)), new Ee(30, new me(19, 15), new me(26, 16))), new Ie(30, Int32Array.from([6, 26, 52, 78, 104, 130]), new Ee(30, new me(5, 115), new me(10, 116)), new Ee(28, new me(19, 47), new me(10, 48)), new Ee(30, new me(15, 24), new me(25, 25)), new Ee(30, new me(23, 15), new me(25, 16))), new Ie(31, Int32Array.from([6, 30, 56, 82, 108, 134]), new Ee(30, new me(13, 115), new me(3, 116)), new Ee(28, new me(2, 46), new me(29, 47)), new Ee(30, new me(42, 24), new me(1, 25)), new Ee(30, new me(23, 15), new me(28, 16))), new Ie(32, Int32Array.from([6, 34, 60, 86, 112, 138]), new Ee(30, new me(17, 115)), new Ee(28, new me(10, 46), new me(23, 47)), new Ee(30, new me(10, 24), new me(35, 25)), new Ee(30, new me(19, 15), new me(35, 16))), new Ie(33, Int32Array.from([6, 30, 58, 86, 114, 142]), new Ee(30, new me(17, 115), new me(1, 116)), new Ee(28, new me(14, 46), new me(21, 47)), new Ee(30, new me(29, 24), new me(19, 25)), new Ee(30, new me(11, 15), new me(46, 16))), new Ie(34, Int32Array.from([6, 34, 62, 90, 118, 146]), new Ee(30, new me(13, 115), new me(6, 116)), new Ee(28, new me(14, 46), new me(23, 47)), new Ee(30, new me(44, 24), new me(7, 25)), new Ee(30, new me(59, 16), new me(1, 17))), new Ie(35, Int32Array.from([6, 30, 54, 78, 102, 126, 150]), new Ee(30, new me(12, 121), new me(7, 122)), new Ee(28, new me(12, 47), new me(26, 48)), new Ee(30, new me(39, 24), new me(14, 25)), new Ee(30, new me(22, 15), new me(41, 16))), new Ie(36, Int32Array.from([6, 24, 50, 76, 102, 128, 154]), new Ee(30, new me(6, 121), new me(14, 122)), new Ee(28, new me(6, 47), new me(34, 48)), new Ee(30, new me(46, 24), new me(10, 25)), new Ee(30, new me(2, 15), new me(64, 16))), new Ie(37, Int32Array.from([6, 28, 54, 80, 106, 132, 158]), new Ee(30, new me(17, 122), new me(4, 123)), new Ee(28, new me(29, 46), new me(14, 47)), new Ee(30, new me(49, 24), new me(10, 25)), new Ee(30, new me(24, 15), new me(46, 16))), new Ie(38, Int32Array.from([6, 32, 58, 84, 110, 136, 162]), new Ee(30, new me(4, 122), new me(18, 123)), new Ee(28, new me(13, 46), new me(32, 47)), new Ee(30, new me(48, 24), new me(14, 25)), new Ee(30, new me(42, 15), new me(32, 16))), new Ie(39, Int32Array.from([6, 26, 54, 82, 110, 138, 166]), new Ee(30, new me(20, 117), new me(4, 118)), new Ee(28, new me(40, 47), new me(7, 48)), new Ee(30, new me(43, 24), new me(22, 25)), new Ee(30, new me(10, 15), new me(67, 16))), new Ie(40, Int32Array.from([6, 30, 58, 86, 114, 142, 170]), new Ee(30, new me(19, 118), new me(6, 119)), new Ee(28, new me(18, 47), new me(31, 48)), new Ee(30, new me(34, 24), new me(34, 25)), new Ee(30, new me(20, 15), new me(61, 16)))], function(t2) {
        t2[t2.DATA_MASK_000 = 0] = "DATA_MASK_000", t2[t2.DATA_MASK_001 = 1] = "DATA_MASK_001", t2[t2.DATA_MASK_010 = 2] = "DATA_MASK_010", t2[t2.DATA_MASK_011 = 3] = "DATA_MASK_011", t2[t2.DATA_MASK_100 = 4] = "DATA_MASK_100", t2[t2.DATA_MASK_101 = 5] = "DATA_MASK_101", t2[t2.DATA_MASK_110 = 6] = "DATA_MASK_110", t2[t2.DATA_MASK_111 = 7] = "DATA_MASK_111";
      }(X || (X = {}));
      class _e {
        constructor(t2, e2) {
          this.value = t2, this.isMasked = e2;
        }
        unmaskBitMatrix(t2, e2) {
          for (let r2 = 0; r2 < e2; r2++) for (let n2 = 0; n2 < e2; n2++) this.isMasked(r2, n2) && t2.flip(n2, r2);
        }
      }
      _e.values = /* @__PURE__ */ new Map([[X.DATA_MASK_000, new _e(X.DATA_MASK_000, (t2, e2) => !(t2 + e2 & 1))], [X.DATA_MASK_001, new _e(X.DATA_MASK_001, (t2, e2) => !(1 & t2))], [X.DATA_MASK_010, new _e(X.DATA_MASK_010, (t2, e2) => e2 % 3 == 0)], [X.DATA_MASK_011, new _e(X.DATA_MASK_011, (t2, e2) => (t2 + e2) % 3 == 0)], [X.DATA_MASK_100, new _e(X.DATA_MASK_100, (t2, e2) => !(Math.floor(t2 / 2) + Math.floor(e2 / 3) & 1))], [X.DATA_MASK_101, new _e(X.DATA_MASK_101, (t2, e2) => t2 * e2 % 6 == 0)], [X.DATA_MASK_110, new _e(X.DATA_MASK_110, (t2, e2) => t2 * e2 % 6 < 3)], [X.DATA_MASK_111, new _e(X.DATA_MASK_111, (t2, e2) => !(t2 + e2 + t2 * e2 % 3 & 1))]]);
      class Se {
        constructor(t2) {
          const e2 = t2.getHeight();
          if (e2 < 21 || 1 != (3 & e2)) throw new m();
          this.bitMatrix = t2;
        }
        readFormatInformation() {
          if (null !== this.parsedFormatInfo && void 0 !== this.parsedFormatInfo) return this.parsedFormatInfo;
          let t2 = 0;
          for (let e3 = 0; e3 < 6; e3++) t2 = this.copyBit(e3, 8, t2);
          t2 = this.copyBit(7, 8, t2), t2 = this.copyBit(8, 8, t2), t2 = this.copyBit(8, 7, t2);
          for (let e3 = 5; e3 >= 0; e3--) t2 = this.copyBit(8, e3, t2);
          const e2 = this.bitMatrix.getHeight();
          let r2 = 0;
          const n2 = e2 - 7;
          for (let t3 = e2 - 1; t3 >= n2; t3--) r2 = this.copyBit(8, t3, r2);
          for (let t3 = e2 - 8; t3 < e2; t3++) r2 = this.copyBit(t3, 8, r2);
          if (this.parsedFormatInfo = Ae.decodeFormatInformation(t2, r2), null !== this.parsedFormatInfo) return this.parsedFormatInfo;
          throw new m();
        }
        readVersion() {
          if (null !== this.parsedVersion && void 0 !== this.parsedVersion) return this.parsedVersion;
          const t2 = this.bitMatrix.getHeight(), e2 = Math.floor((t2 - 17) / 4);
          if (e2 <= 6) return Ie.getVersionForNumber(e2);
          let r2 = 0;
          const n2 = t2 - 11;
          for (let e3 = 5; e3 >= 0; e3--) for (let i3 = t2 - 9; i3 >= n2; i3--) r2 = this.copyBit(i3, e3, r2);
          let i2 = Ie.decodeVersionInformation(r2);
          if (null !== i2 && i2.getDimensionForVersion() === t2) return this.parsedVersion = i2, i2;
          r2 = 0;
          for (let e3 = 5; e3 >= 0; e3--) for (let i3 = t2 - 9; i3 >= n2; i3--) r2 = this.copyBit(e3, i3, r2);
          if (i2 = Ie.decodeVersionInformation(r2), null !== i2 && i2.getDimensionForVersion() === t2) return this.parsedVersion = i2, i2;
          throw new m();
        }
        copyBit(t2, e2, r2) {
          return (this.isMirror ? this.bitMatrix.get(e2, t2) : this.bitMatrix.get(t2, e2)) ? r2 << 1 | 1 : r2 << 1;
        }
        readCodewords() {
          const t2 = this.readFormatInformation(), e2 = this.readVersion(), r2 = _e.values.get(t2.getDataMask()), n2 = this.bitMatrix.getHeight();
          r2.unmaskBitMatrix(this.bitMatrix, n2);
          const i2 = e2.buildFunctionPattern();
          let s2 = true;
          const o2 = new Uint8Array(e2.getTotalCodewords());
          let a2 = 0, h2 = 0, l2 = 0;
          for (let t3 = n2 - 1; t3 > 0; t3 -= 2) {
            6 === t3 && t3--;
            for (let e3 = 0; e3 < n2; e3++) {
              const r3 = s2 ? n2 - 1 - e3 : e3;
              for (let e4 = 0; e4 < 2; e4++) i2.get(t3 - e4, r3) || (l2++, h2 <<= 1, this.bitMatrix.get(t3 - e4, r3) && (h2 |= 1), 8 === l2 && (o2[a2++] = h2, l2 = 0, h2 = 0));
            }
            s2 = !s2;
          }
          if (a2 !== e2.getTotalCodewords()) throw new m();
          return o2;
        }
        remask() {
          if (null === this.parsedFormatInfo) return;
          const t2 = _e.values.get(this.parsedFormatInfo.getDataMask()), e2 = this.bitMatrix.getHeight();
          t2.unmaskBitMatrix(this.bitMatrix, e2);
        }
        setMirror(t2) {
          this.parsedVersion = null, this.parsedFormatInfo = null, this.isMirror = t2;
        }
        mirror() {
          const t2 = this.bitMatrix;
          for (let e2 = 0, r2 = t2.getWidth(); e2 < r2; e2++) for (let r3 = e2 + 1, n2 = t2.getHeight(); r3 < n2; r3++) t2.get(e2, r3) !== t2.get(r3, e2) && (t2.flip(r3, e2), t2.flip(e2, r3));
        }
      }
      class pe {
        constructor(t2, e2) {
          this.numDataCodewords = t2, this.codewords = e2;
        }
        static getDataBlocks(t2, e2, r2) {
          if (t2.length !== e2.getTotalCodewords()) throw new a();
          const n2 = e2.getECBlocksForLevel(r2);
          let i2 = 0;
          const s2 = n2.getECBlocks();
          for (const t3 of s2) i2 += t3.getCount();
          const o2 = new Array(i2);
          let h2 = 0;
          for (const t3 of s2) for (let e3 = 0; e3 < t3.getCount(); e3++) {
            const e4 = t3.getDataCodewords(), r3 = n2.getECCodewordsPerBlock() + e4;
            o2[h2++] = new pe(e4, new Uint8Array(r3));
          }
          const l2 = o2[0].codewords.length;
          let c2 = o2.length - 1;
          for (; c2 >= 0; ) {
            if (o2[c2].codewords.length === l2) break;
            c2--;
          }
          c2++;
          const d2 = l2 - n2.getECCodewordsPerBlock();
          let u2 = 0;
          for (let e3 = 0; e3 < d2; e3++) for (let r3 = 0; r3 < h2; r3++) o2[r3].codewords[e3] = t2[u2++];
          for (let e3 = c2; e3 < h2; e3++) o2[e3].codewords[d2] = t2[u2++];
          const g2 = o2[0].codewords.length;
          for (let e3 = d2; e3 < g2; e3++) for (let r3 = 0; r3 < h2; r3++) {
            const n3 = r3 < c2 ? e3 : e3 + 1;
            o2[r3].codewords[n3] = t2[u2++];
          }
          return o2;
        }
        getNumDataCodewords() {
          return this.numDataCodewords;
        }
        getCodewords() {
          return this.codewords;
        }
      }
      !function(t2) {
        t2[t2.TERMINATOR = 0] = "TERMINATOR", t2[t2.NUMERIC = 1] = "NUMERIC", t2[t2.ALPHANUMERIC = 2] = "ALPHANUMERIC", t2[t2.STRUCTURED_APPEND = 3] = "STRUCTURED_APPEND", t2[t2.BYTE = 4] = "BYTE", t2[t2.ECI = 5] = "ECI", t2[t2.KANJI = 6] = "KANJI", t2[t2.FNC1_FIRST_POSITION = 7] = "FNC1_FIRST_POSITION", t2[t2.FNC1_SECOND_POSITION = 8] = "FNC1_SECOND_POSITION", t2[t2.HANZI = 9] = "HANZI";
      }(G || (G = {}));
      class Te {
        constructor(t2, e2, r2, n2) {
          this.value = t2, this.stringValue = e2, this.characterCountBitsForVersions = r2, this.bits = n2, Te.FOR_BITS.set(n2, this), Te.FOR_VALUE.set(t2, this);
        }
        static forBits(t2) {
          const e2 = Te.FOR_BITS.get(t2);
          if (void 0 === e2) throw new a();
          return e2;
        }
        getCharacterCountBits(t2) {
          const e2 = t2.getVersionNumber();
          let r2;
          return r2 = e2 <= 9 ? 0 : e2 <= 26 ? 1 : 2, this.characterCountBitsForVersions[r2];
        }
        getValue() {
          return this.value;
        }
        getBits() {
          return this.bits;
        }
        equals(t2) {
          if (!(t2 instanceof Te)) return false;
          const e2 = t2;
          return this.value === e2.value;
        }
        toString() {
          return this.stringValue;
        }
      }
      Te.FOR_BITS = /* @__PURE__ */ new Map(), Te.FOR_VALUE = /* @__PURE__ */ new Map(), Te.TERMINATOR = new Te(G.TERMINATOR, "TERMINATOR", Int32Array.from([0, 0, 0]), 0), Te.NUMERIC = new Te(G.NUMERIC, "NUMERIC", Int32Array.from([10, 12, 14]), 1), Te.ALPHANUMERIC = new Te(G.ALPHANUMERIC, "ALPHANUMERIC", Int32Array.from([9, 11, 13]), 2), Te.STRUCTURED_APPEND = new Te(G.STRUCTURED_APPEND, "STRUCTURED_APPEND", Int32Array.from([0, 0, 0]), 3), Te.BYTE = new Te(G.BYTE, "BYTE", Int32Array.from([8, 16, 16]), 4), Te.ECI = new Te(G.ECI, "ECI", Int32Array.from([0, 0, 0]), 7), Te.KANJI = new Te(G.KANJI, "KANJI", Int32Array.from([8, 10, 12]), 8), Te.FNC1_FIRST_POSITION = new Te(G.FNC1_FIRST_POSITION, "FNC1_FIRST_POSITION", Int32Array.from([0, 0, 0]), 5), Te.FNC1_SECOND_POSITION = new Te(G.FNC1_SECOND_POSITION, "FNC1_SECOND_POSITION", Int32Array.from([0, 0, 0]), 9), Te.HANZI = new Te(G.HANZI, "HANZI", Int32Array.from([8, 10, 12]), 13);
      class Re {
        static decode(t2, e2, r2, n2) {
          const i2 = new de(t2);
          let s2 = new T();
          const o2 = new Array();
          let a2 = -1, h2 = -1;
          try {
            let t3, r3 = null, l2 = false;
            do {
              if (i2.available() < 4) t3 = Te.TERMINATOR;
              else {
                const e3 = i2.readBits(4);
                t3 = Te.forBits(e3);
              }
              switch (t3) {
                case Te.TERMINATOR:
                  break;
                case Te.FNC1_FIRST_POSITION:
                case Te.FNC1_SECOND_POSITION:
                  l2 = true;
                  break;
                case Te.STRUCTURED_APPEND:
                  if (i2.available() < 16) throw new m();
                  a2 = i2.readBits(8), h2 = i2.readBits(8);
                  break;
                case Te.ECI:
                  const c2 = Re.parseECIValue(i2);
                  if (r3 = I.getCharacterSetECIByValue(c2), null === r3) throw new m();
                  break;
                case Te.HANZI:
                  const d2 = i2.readBits(4), u2 = i2.readBits(t3.getCharacterCountBits(e2));
                  d2 === Re.GB2312_SUBSET && Re.decodeHanziSegment(i2, s2, u2);
                  break;
                default:
                  const g2 = i2.readBits(t3.getCharacterCountBits(e2));
                  switch (t3) {
                    case Te.NUMERIC:
                      Re.decodeNumericSegment(i2, s2, g2);
                      break;
                    case Te.ALPHANUMERIC:
                      Re.decodeAlphanumericSegment(i2, s2, g2, l2);
                      break;
                    case Te.BYTE:
                      Re.decodeByteSegment(i2, s2, g2, r3, o2, n2);
                      break;
                    case Te.KANJI:
                      Re.decodeKanjiSegment(i2, s2, g2);
                      break;
                    default:
                      throw new m();
                  }
              }
            } while (t3 !== Te.TERMINATOR);
          } catch (t3) {
            throw new m();
          }
          return new Y(t2, s2.toString(), 0 === o2.length ? null : o2, null === r2 ? null : r2.toString(), a2, h2);
        }
        static decodeHanziSegment(t2, e2, r2) {
          if (13 * r2 > t2.available()) throw new m();
          const n2 = new Uint8Array(2 * r2);
          let i2 = 0;
          for (; r2 > 0; ) {
            const e3 = t2.readBits(13);
            let s2 = e3 / 96 << 8 & 4294967295 | e3 % 96;
            s2 += s2 < 959 ? 41377 : 42657, n2[i2] = s2 >> 8 & 255, n2[i2 + 1] = 255 & s2, i2 += 2, r2--;
          }
          try {
            e2.append(S.decode(n2, p.GB2312));
          } catch (t3) {
            throw new m(t3);
          }
        }
        static decodeKanjiSegment(t2, e2, r2) {
          if (13 * r2 > t2.available()) throw new m();
          const n2 = new Uint8Array(2 * r2);
          let i2 = 0;
          for (; r2 > 0; ) {
            const e3 = t2.readBits(13);
            let s2 = e3 / 192 << 8 & 4294967295 | e3 % 192;
            s2 += s2 < 7936 ? 33088 : 49472, n2[i2] = s2 >> 8, n2[i2 + 1] = s2, i2 += 2, r2--;
          }
          try {
            e2.append(S.decode(n2, p.SHIFT_JIS));
          } catch (t3) {
            throw new m(t3);
          }
        }
        static decodeByteSegment(t2, e2, r2, n2, i2, s2) {
          if (8 * r2 > t2.available()) throw new m();
          const o2 = new Uint8Array(r2);
          for (let e3 = 0; e3 < r2; e3++) o2[e3] = t2.readBits(8);
          let a2;
          a2 = null === n2 ? p.guessEncoding(o2, s2) : n2.getName();
          try {
            e2.append(S.decode(o2, a2));
          } catch (t3) {
            throw new m(t3);
          }
          i2.push(o2);
        }
        static toAlphaNumericChar(t2) {
          if (t2 >= Re.ALPHANUMERIC_CHARS.length) throw new m();
          return Re.ALPHANUMERIC_CHARS[t2];
        }
        static decodeAlphanumericSegment(t2, e2, r2, n2) {
          const i2 = e2.length();
          for (; r2 > 1; ) {
            if (t2.available() < 11) throw new m();
            const n3 = t2.readBits(11);
            e2.append(Re.toAlphaNumericChar(Math.floor(n3 / 45))), e2.append(Re.toAlphaNumericChar(n3 % 45)), r2 -= 2;
          }
          if (1 === r2) {
            if (t2.available() < 6) throw new m();
            e2.append(Re.toAlphaNumericChar(t2.readBits(6)));
          }
          if (n2) for (let t3 = i2; t3 < e2.length(); t3++) "%" === e2.charAt(t3) && (t3 < e2.length() - 1 && "%" === e2.charAt(t3 + 1) ? e2.deleteCharAt(t3 + 1) : e2.setCharAt(t3, String.fromCharCode(29)));
        }
        static decodeNumericSegment(t2, e2, r2) {
          for (; r2 >= 3; ) {
            if (t2.available() < 10) throw new m();
            const n2 = t2.readBits(10);
            if (n2 >= 1e3) throw new m();
            e2.append(Re.toAlphaNumericChar(Math.floor(n2 / 100))), e2.append(Re.toAlphaNumericChar(Math.floor(n2 / 10) % 10)), e2.append(Re.toAlphaNumericChar(n2 % 10)), r2 -= 3;
          }
          if (2 === r2) {
            if (t2.available() < 7) throw new m();
            const r3 = t2.readBits(7);
            if (r3 >= 100) throw new m();
            e2.append(Re.toAlphaNumericChar(Math.floor(r3 / 10))), e2.append(Re.toAlphaNumericChar(r3 % 10));
          } else if (1 === r2) {
            if (t2.available() < 4) throw new m();
            const r3 = t2.readBits(4);
            if (r3 >= 10) throw new m();
            e2.append(Re.toAlphaNumericChar(r3));
          }
        }
        static parseECIValue(t2) {
          const e2 = t2.readBits(8);
          if (!(128 & e2)) return 127 & e2;
          if (128 == (192 & e2)) {
            return (63 & e2) << 8 & 4294967295 | t2.readBits(8);
          }
          if (192 == (224 & e2)) {
            return (31 & e2) << 16 & 4294967295 | t2.readBits(16);
          }
          throw new m();
        }
      }
      Re.ALPHANUMERIC_CHARS = "0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ $%*+-./:", Re.GB2312_SUBSET = 1;
      class Ne {
        constructor(t2) {
          this.mirrored = t2;
        }
        isMirrored() {
          return this.mirrored;
        }
        applyMirroredCorrection(t2) {
          if (!this.mirrored || null === t2 || t2.length < 3) return;
          const e2 = t2[0];
          t2[0] = t2[2], t2[2] = e2;
        }
      }
      class ye {
        constructor() {
          this.rsDecoder = new $(Q.QR_CODE_FIELD_256);
        }
        decodeBooleanArray(t2, e2) {
          return this.decodeBitMatrix(R.parseFromBooleanArray(t2), e2);
        }
        decodeBitMatrix(t2, e2) {
          const r2 = new Se(t2);
          let n2 = null;
          try {
            return this.decodeBitMatrixParser(r2, e2);
          } catch (t3) {
            n2 = t3;
          }
          try {
            r2.remask(), r2.setMirror(true), r2.readVersion(), r2.readFormatInformation(), r2.mirror();
            const t3 = this.decodeBitMatrixParser(r2, e2);
            return t3.setOther(new Ne(true)), t3;
          } catch (t3) {
            if (null !== n2) throw n2;
            throw t3;
          }
        }
        decodeBitMatrixParser(t2, e2) {
          const r2 = t2.readVersion(), n2 = t2.readFormatInformation().getErrorCorrectionLevel(), i2 = t2.readCodewords(), s2 = pe.getDataBlocks(i2, r2, n2);
          let o2 = 0;
          for (const t3 of s2) o2 += t3.getNumDataCodewords();
          const a2 = new Uint8Array(o2);
          let h2 = 0;
          for (const t3 of s2) {
            const e3 = t3.getCodewords(), r3 = t3.getNumDataCodewords();
            this.correctErrors(e3, r3);
            for (let t4 = 0; t4 < r3; t4++) a2[h2++] = e3[t4];
          }
          return Re.decode(a2, r2, n2, e2);
        }
        correctErrors(t2, e2) {
          const r2 = new Int32Array(t2);
          try {
            this.rsDecoder.decode(r2, t2.length - e2);
          } catch (t3) {
            throw new l();
          }
          for (let n2 = 0; n2 < e2; n2++) t2[n2] = r2[n2];
        }
      }
      class De extends nt {
        constructor(t2, e2, r2) {
          super(t2, e2), this.estimatedModuleSize = r2;
        }
        aboutEquals(t2, e2, r2) {
          if (Math.abs(e2 - this.getY()) <= t2 && Math.abs(r2 - this.getX()) <= t2) {
            const e3 = Math.abs(t2 - this.estimatedModuleSize);
            return e3 <= 1 || e3 <= this.estimatedModuleSize;
          }
          return false;
        }
        combineEstimate(t2, e2, r2) {
          const n2 = (this.getX() + e2) / 2, i2 = (this.getY() + t2) / 2, s2 = (this.estimatedModuleSize + r2) / 2;
          return new De(n2, i2, s2);
        }
      }
      class Oe {
        constructor(t2, e2, r2, n2, i2, s2, o2) {
          this.image = t2, this.startX = e2, this.startY = r2, this.width = n2, this.height = i2, this.moduleSize = s2, this.resultPointCallback = o2, this.possibleCenters = [], this.crossCheckStateCount = new Int32Array(3);
        }
        find() {
          const t2 = this.startX, e2 = this.height, r2 = t2 + this.width, n2 = this.startY + e2 / 2, i2 = new Int32Array(3), s2 = this.image;
          for (let o2 = 0; o2 < e2; o2++) {
            const e3 = n2 + (1 & o2 ? -Math.floor((o2 + 1) / 2) : Math.floor((o2 + 1) / 2));
            i2[0] = 0, i2[1] = 0, i2[2] = 0;
            let a2 = t2;
            for (; a2 < r2 && !s2.get(a2, e3); ) a2++;
            let h2 = 0;
            for (; a2 < r2; ) {
              if (s2.get(a2, e3)) if (1 === h2) i2[1]++;
              else if (2 === h2) {
                if (this.foundPatternCross(i2)) {
                  const t3 = this.handlePossibleCenter(i2, e3, a2);
                  if (null !== t3) return t3;
                }
                i2[0] = i2[2], i2[1] = 1, i2[2] = 0, h2 = 1;
              } else i2[++h2]++;
              else 1 === h2 && h2++, i2[h2]++;
              a2++;
            }
            if (this.foundPatternCross(i2)) {
              const t3 = this.handlePossibleCenter(i2, e3, r2);
              if (null !== t3) return t3;
            }
          }
          if (0 !== this.possibleCenters.length) return this.possibleCenters[0];
          throw new N();
        }
        static centerFromEnd(t2, e2) {
          return e2 - t2[2] - t2[1] / 2;
        }
        foundPatternCross(t2) {
          const e2 = this.moduleSize, r2 = e2 / 2;
          for (let n2 = 0; n2 < 3; n2++) if (Math.abs(e2 - t2[n2]) >= r2) return false;
          return true;
        }
        crossCheckVertical(t2, e2, r2, n2) {
          const i2 = this.image, s2 = i2.getHeight(), o2 = this.crossCheckStateCount;
          o2[0] = 0, o2[1] = 0, o2[2] = 0;
          let a2 = t2;
          for (; a2 >= 0 && i2.get(e2, a2) && o2[1] <= r2; ) o2[1]++, a2--;
          if (a2 < 0 || o2[1] > r2) return NaN;
          for (; a2 >= 0 && !i2.get(e2, a2) && o2[0] <= r2; ) o2[0]++, a2--;
          if (o2[0] > r2) return NaN;
          for (a2 = t2 + 1; a2 < s2 && i2.get(e2, a2) && o2[1] <= r2; ) o2[1]++, a2++;
          if (a2 === s2 || o2[1] > r2) return NaN;
          for (; a2 < s2 && !i2.get(e2, a2) && o2[2] <= r2; ) o2[2]++, a2++;
          if (o2[2] > r2) return NaN;
          const h2 = o2[0] + o2[1] + o2[2];
          return 5 * Math.abs(h2 - n2) >= 2 * n2 ? NaN : this.foundPatternCross(o2) ? Oe.centerFromEnd(o2, a2) : NaN;
        }
        handlePossibleCenter(t2, e2, r2) {
          const n2 = t2[0] + t2[1] + t2[2], i2 = Oe.centerFromEnd(t2, r2), s2 = this.crossCheckVertical(e2, i2, 2 * t2[1], n2);
          if (!isNaN(s2)) {
            const e3 = (t2[0] + t2[1] + t2[2]) / 3;
            for (const t3 of this.possibleCenters) if (t3.aboutEquals(e3, s2, i2)) return t3.combineEstimate(s2, i2, e3);
            const r3 = new De(i2, s2, e3);
            this.possibleCenters.push(r3), null !== this.resultPointCallback && void 0 !== this.resultPointCallback && this.resultPointCallback.foundPossibleResultPoint(r3);
          }
          return null;
        }
      }
      class Me extends nt {
        constructor(t2, e2, r2, n2) {
          super(t2, e2), this.estimatedModuleSize = r2, this.count = n2, void 0 === n2 && (this.count = 1);
        }
        getEstimatedModuleSize() {
          return this.estimatedModuleSize;
        }
        getCount() {
          return this.count;
        }
        aboutEquals(t2, e2, r2) {
          if (Math.abs(e2 - this.getY()) <= t2 && Math.abs(r2 - this.getX()) <= t2) {
            const e3 = Math.abs(t2 - this.estimatedModuleSize);
            return e3 <= 1 || e3 <= this.estimatedModuleSize;
          }
          return false;
        }
        combineEstimate(t2, e2, r2) {
          const n2 = this.count + 1, i2 = (this.count * this.getX() + e2) / n2, s2 = (this.count * this.getY() + t2) / n2, o2 = (this.count * this.estimatedModuleSize + r2) / n2;
          return new Me(i2, s2, o2, n2);
        }
      }
      class be {
        constructor(t2) {
          this.bottomLeft = t2[0], this.topLeft = t2[1], this.topRight = t2[2];
        }
        getBottomLeft() {
          return this.bottomLeft;
        }
        getTopLeft() {
          return this.topLeft;
        }
        getTopRight() {
          return this.topRight;
        }
      }
      class Be {
        constructor(t2, e2) {
          this.image = t2, this.resultPointCallback = e2, this.possibleCenters = [], this.crossCheckStateCount = new Int32Array(5), this.resultPointCallback = e2;
        }
        getImage() {
          return this.image;
        }
        getPossibleCenters() {
          return this.possibleCenters;
        }
        find(t2) {
          const e2 = null != t2 && void 0 !== t2.get(E.TRY_HARDER), r2 = null != t2 && void 0 !== t2.get(E.PURE_BARCODE), n2 = this.image, i2 = n2.getHeight(), s2 = n2.getWidth();
          let o2 = Math.floor(3 * i2 / (4 * Be.MAX_MODULES));
          (o2 < Be.MIN_SKIP || e2) && (o2 = Be.MIN_SKIP);
          let a2 = false;
          const h2 = new Int32Array(5);
          for (let t3 = o2 - 1; t3 < i2 && !a2; t3 += o2) {
            h2[0] = 0, h2[1] = 0, h2[2] = 0, h2[3] = 0, h2[4] = 0;
            let e3 = 0;
            for (let i3 = 0; i3 < s2; i3++) if (n2.get(i3, t3)) 1 & ~e3 || e3++, h2[e3]++;
            else if (1 & e3) h2[e3]++;
            else if (4 === e3) if (Be.foundPatternCross(h2)) {
              if (true !== this.handlePossibleCenter(h2, t3, i3, r2)) {
                h2[0] = h2[2], h2[1] = h2[3], h2[2] = h2[4], h2[3] = 1, h2[4] = 0, e3 = 3;
                continue;
              }
              if (o2 = 2, true === this.hasSkipped) a2 = this.haveMultiplyConfirmedCenters();
              else {
                const e4 = this.findRowSkip();
                e4 > h2[2] && (t3 += e4 - h2[2] - o2, i3 = s2 - 1);
              }
              e3 = 0, h2[0] = 0, h2[1] = 0, h2[2] = 0, h2[3] = 0, h2[4] = 0;
            } else h2[0] = h2[2], h2[1] = h2[3], h2[2] = h2[4], h2[3] = 1, h2[4] = 0, e3 = 3;
            else h2[++e3]++;
            if (Be.foundPatternCross(h2)) {
              true === this.handlePossibleCenter(h2, t3, s2, r2) && (o2 = h2[0], this.hasSkipped && (a2 = this.haveMultiplyConfirmedCenters()));
            }
          }
          const l2 = this.selectBestPatterns();
          return nt.orderBestPatterns(l2), new be(l2);
        }
        static centerFromEnd(t2, e2) {
          return e2 - t2[4] - t2[3] - t2[2] / 2;
        }
        static foundPatternCross(t2) {
          let e2 = 0;
          for (let r3 = 0; r3 < 5; r3++) {
            const n3 = t2[r3];
            if (0 === n3) return false;
            e2 += n3;
          }
          if (e2 < 7) return false;
          const r2 = e2 / 7, n2 = r2 / 2;
          return Math.abs(r2 - t2[0]) < n2 && Math.abs(r2 - t2[1]) < n2 && Math.abs(3 * r2 - t2[2]) < 3 * n2 && Math.abs(r2 - t2[3]) < n2 && Math.abs(r2 - t2[4]) < n2;
        }
        getCrossCheckStateCount() {
          const t2 = this.crossCheckStateCount;
          return t2[0] = 0, t2[1] = 0, t2[2] = 0, t2[3] = 0, t2[4] = 0, t2;
        }
        crossCheckDiagonal(t2, e2, r2, n2) {
          const i2 = this.getCrossCheckStateCount();
          let s2 = 0;
          const o2 = this.image;
          for (; t2 >= s2 && e2 >= s2 && o2.get(e2 - s2, t2 - s2); ) i2[2]++, s2++;
          if (t2 < s2 || e2 < s2) return false;
          for (; t2 >= s2 && e2 >= s2 && !o2.get(e2 - s2, t2 - s2) && i2[1] <= r2; ) i2[1]++, s2++;
          if (t2 < s2 || e2 < s2 || i2[1] > r2) return false;
          for (; t2 >= s2 && e2 >= s2 && o2.get(e2 - s2, t2 - s2) && i2[0] <= r2; ) i2[0]++, s2++;
          if (i2[0] > r2) return false;
          const a2 = o2.getHeight(), h2 = o2.getWidth();
          for (s2 = 1; t2 + s2 < a2 && e2 + s2 < h2 && o2.get(e2 + s2, t2 + s2); ) i2[2]++, s2++;
          if (t2 + s2 >= a2 || e2 + s2 >= h2) return false;
          for (; t2 + s2 < a2 && e2 + s2 < h2 && !o2.get(e2 + s2, t2 + s2) && i2[3] < r2; ) i2[3]++, s2++;
          if (t2 + s2 >= a2 || e2 + s2 >= h2 || i2[3] >= r2) return false;
          for (; t2 + s2 < a2 && e2 + s2 < h2 && o2.get(e2 + s2, t2 + s2) && i2[4] < r2; ) i2[4]++, s2++;
          if (i2[4] >= r2) return false;
          const l2 = i2[0] + i2[1] + i2[2] + i2[3] + i2[4];
          return Math.abs(l2 - n2) < 2 * n2 && Be.foundPatternCross(i2);
        }
        crossCheckVertical(t2, e2, r2, n2) {
          const i2 = this.image, s2 = i2.getHeight(), o2 = this.getCrossCheckStateCount();
          let a2 = t2;
          for (; a2 >= 0 && i2.get(e2, a2); ) o2[2]++, a2--;
          if (a2 < 0) return NaN;
          for (; a2 >= 0 && !i2.get(e2, a2) && o2[1] <= r2; ) o2[1]++, a2--;
          if (a2 < 0 || o2[1] > r2) return NaN;
          for (; a2 >= 0 && i2.get(e2, a2) && o2[0] <= r2; ) o2[0]++, a2--;
          if (o2[0] > r2) return NaN;
          for (a2 = t2 + 1; a2 < s2 && i2.get(e2, a2); ) o2[2]++, a2++;
          if (a2 === s2) return NaN;
          for (; a2 < s2 && !i2.get(e2, a2) && o2[3] < r2; ) o2[3]++, a2++;
          if (a2 === s2 || o2[3] >= r2) return NaN;
          for (; a2 < s2 && i2.get(e2, a2) && o2[4] < r2; ) o2[4]++, a2++;
          if (o2[4] >= r2) return NaN;
          const h2 = o2[0] + o2[1] + o2[2] + o2[3] + o2[4];
          return 5 * Math.abs(h2 - n2) >= 2 * n2 ? NaN : Be.foundPatternCross(o2) ? Be.centerFromEnd(o2, a2) : NaN;
        }
        crossCheckHorizontal(t2, e2, r2, n2) {
          const i2 = this.image, s2 = i2.getWidth(), o2 = this.getCrossCheckStateCount();
          let a2 = t2;
          for (; a2 >= 0 && i2.get(a2, e2); ) o2[2]++, a2--;
          if (a2 < 0) return NaN;
          for (; a2 >= 0 && !i2.get(a2, e2) && o2[1] <= r2; ) o2[1]++, a2--;
          if (a2 < 0 || o2[1] > r2) return NaN;
          for (; a2 >= 0 && i2.get(a2, e2) && o2[0] <= r2; ) o2[0]++, a2--;
          if (o2[0] > r2) return NaN;
          for (a2 = t2 + 1; a2 < s2 && i2.get(a2, e2); ) o2[2]++, a2++;
          if (a2 === s2) return NaN;
          for (; a2 < s2 && !i2.get(a2, e2) && o2[3] < r2; ) o2[3]++, a2++;
          if (a2 === s2 || o2[3] >= r2) return NaN;
          for (; a2 < s2 && i2.get(a2, e2) && o2[4] < r2; ) o2[4]++, a2++;
          if (o2[4] >= r2) return NaN;
          const h2 = o2[0] + o2[1] + o2[2] + o2[3] + o2[4];
          return 5 * Math.abs(h2 - n2) >= n2 ? NaN : Be.foundPatternCross(o2) ? Be.centerFromEnd(o2, a2) : NaN;
        }
        handlePossibleCenter(t2, e2, r2, n2) {
          const i2 = t2[0] + t2[1] + t2[2] + t2[3] + t2[4];
          let s2 = Be.centerFromEnd(t2, r2), o2 = this.crossCheckVertical(e2, Math.floor(s2), t2[2], i2);
          if (!isNaN(o2) && (s2 = this.crossCheckHorizontal(Math.floor(s2), Math.floor(o2), t2[2], i2), !isNaN(s2) && (!n2 || this.crossCheckDiagonal(Math.floor(o2), Math.floor(s2), t2[2], i2)))) {
            const t3 = i2 / 7;
            let e3 = false;
            const r3 = this.possibleCenters;
            for (let n3 = 0, i3 = r3.length; n3 < i3; n3++) {
              const i4 = r3[n3];
              if (i4.aboutEquals(t3, o2, s2)) {
                r3[n3] = i4.combineEstimate(o2, s2, t3), e3 = true;
                break;
              }
            }
            if (!e3) {
              const e4 = new Me(s2, o2, t3);
              r3.push(e4), null !== this.resultPointCallback && void 0 !== this.resultPointCallback && this.resultPointCallback.foundPossibleResultPoint(e4);
            }
            return true;
          }
          return false;
        }
        findRowSkip() {
          if (this.possibleCenters.length <= 1) return 0;
          let t2 = null;
          for (const e2 of this.possibleCenters) if (e2.getCount() >= Be.CENTER_QUORUM) {
            if (null != t2) return this.hasSkipped = true, Math.floor((Math.abs(t2.getX() - e2.getX()) - Math.abs(t2.getY() - e2.getY())) / 2);
            t2 = e2;
          }
          return 0;
        }
        haveMultiplyConfirmedCenters() {
          let t2 = 0, e2 = 0;
          const r2 = this.possibleCenters.length;
          for (const r3 of this.possibleCenters) r3.getCount() >= Be.CENTER_QUORUM && (t2++, e2 += r3.getEstimatedModuleSize());
          if (t2 < 3) return false;
          const n2 = e2 / r2;
          let i2 = 0;
          for (const t3 of this.possibleCenters) i2 += Math.abs(t3.getEstimatedModuleSize() - n2);
          return i2 <= 0.05 * e2;
        }
        selectBestPatterns() {
          const t2 = this.possibleCenters.length;
          if (t2 < 3) throw new N();
          const e2 = this.possibleCenters;
          let r2;
          if (t2 > 3) {
            let n2 = 0, i2 = 0;
            for (const t3 of this.possibleCenters) {
              const e3 = t3.getEstimatedModuleSize();
              n2 += e3, i2 += e3 * e3;
            }
            r2 = n2 / t2;
            let s2 = Math.sqrt(i2 / t2 - r2 * r2);
            e2.sort((t3, e3) => {
              const n3 = Math.abs(e3.getEstimatedModuleSize() - r2), i3 = Math.abs(t3.getEstimatedModuleSize() - r2);
              return n3 < i3 ? -1 : n3 > i3 ? 1 : 0;
            });
            const o2 = Math.max(0.2 * r2, s2);
            for (let t3 = 0; t3 < e2.length && e2.length > 3; t3++) {
              const n3 = e2[t3];
              Math.abs(n3.getEstimatedModuleSize() - r2) > o2 && (e2.splice(t3, 1), t3--);
            }
          }
          if (e2.length > 3) {
            let t3 = 0;
            for (const r3 of e2) t3 += r3.getEstimatedModuleSize();
            r2 = t3 / e2.length, e2.sort((t4, e3) => {
              if (e3.getCount() === t4.getCount()) {
                const n2 = Math.abs(e3.getEstimatedModuleSize() - r2), i2 = Math.abs(t4.getEstimatedModuleSize() - r2);
                return n2 < i2 ? 1 : n2 > i2 ? -1 : 0;
              }
              return e3.getCount() - t4.getCount();
            }), e2.splice(3);
          }
          return [e2[0], e2[1], e2[2]];
        }
      }
      Be.CENTER_QUORUM = 2, Be.MIN_SKIP = 3, Be.MAX_MODULES = 57;
      class Pe {
        constructor(t2) {
          this.image = t2;
        }
        getImage() {
          return this.image;
        }
        getResultPointCallback() {
          return this.resultPointCallback;
        }
        detect(t2) {
          this.resultPointCallback = null == t2 ? null : t2.get(E.NEED_RESULT_POINT_CALLBACK);
          const e2 = new Be(this.image, this.resultPointCallback).find(t2);
          return this.processFinderPatternInfo(e2);
        }
        processFinderPatternInfo(t2) {
          const e2 = t2.getTopLeft(), r2 = t2.getTopRight(), n2 = t2.getBottomLeft(), i2 = this.calculateModuleSize(e2, r2, n2);
          if (i2 < 1) throw new N("No pattern found in proccess finder.");
          const s2 = Pe.computeDimension(e2, r2, n2, i2), o2 = Ie.getProvisionalVersionForDimension(s2), a2 = o2.getDimensionForVersion() - 7;
          let h2 = null;
          if (o2.getAlignmentPatternCenters().length > 0) {
            const t3 = r2.getX() - e2.getX() + n2.getX(), s3 = r2.getY() - e2.getY() + n2.getY(), o3 = 1 - 3 / a2, l3 = Math.floor(e2.getX() + o3 * (t3 - e2.getX())), c3 = Math.floor(e2.getY() + o3 * (s3 - e2.getY()));
            for (let t4 = 4; t4 <= 16; t4 <<= 1) try {
              h2 = this.findAlignmentInRegion(i2, l3, c3, t4);
              break;
            } catch (t5) {
              if (!(t5 instanceof N)) throw t5;
            }
          }
          const l2 = Pe.createTransform(e2, r2, n2, h2, s2), c2 = Pe.sampleGrid(this.image, l2, s2);
          let d2;
          return d2 = null === h2 ? [n2, e2, r2] : [n2, e2, r2, h2], new it(c2, d2);
        }
        static createTransform(t2, e2, r2, n2, i2) {
          const s2 = i2 - 3.5;
          let o2, a2, h2, l2;
          return null !== n2 ? (o2 = n2.getX(), a2 = n2.getY(), h2 = s2 - 3, l2 = h2) : (o2 = e2.getX() - t2.getX() + r2.getX(), a2 = e2.getY() - t2.getY() + r2.getY(), h2 = s2, l2 = s2), ht.quadrilateralToQuadrilateral(3.5, 3.5, s2, 3.5, h2, l2, 3.5, s2, t2.getX(), t2.getY(), e2.getX(), e2.getY(), o2, a2, r2.getX(), r2.getY());
        }
        static sampleGrid(t2, e2, r2) {
          return ct.getInstance().sampleGridWithTransform(t2, r2, r2, e2);
        }
        static computeDimension(t2, e2, r2, n2) {
          const i2 = et.round(nt.distance(t2, e2) / n2), s2 = et.round(nt.distance(t2, r2) / n2);
          let o2 = Math.floor((i2 + s2) / 2) + 7;
          switch (3 & o2) {
            case 0:
              o2++;
              break;
            case 2:
              o2--;
              break;
            case 3:
              throw new N("Dimensions could be not found.");
          }
          return o2;
        }
        calculateModuleSize(t2, e2, r2) {
          return (this.calculateModuleSizeOneWay(t2, e2) + this.calculateModuleSizeOneWay(t2, r2)) / 2;
        }
        calculateModuleSizeOneWay(t2, e2) {
          const r2 = this.sizeOfBlackWhiteBlackRunBothWays(Math.floor(t2.getX()), Math.floor(t2.getY()), Math.floor(e2.getX()), Math.floor(e2.getY())), n2 = this.sizeOfBlackWhiteBlackRunBothWays(Math.floor(e2.getX()), Math.floor(e2.getY()), Math.floor(t2.getX()), Math.floor(t2.getY()));
          return isNaN(r2) ? n2 / 7 : isNaN(n2) ? r2 / 7 : (r2 + n2) / 14;
        }
        sizeOfBlackWhiteBlackRunBothWays(t2, e2, r2, n2) {
          let i2 = this.sizeOfBlackWhiteBlackRun(t2, e2, r2, n2), s2 = 1, o2 = t2 - (r2 - t2);
          o2 < 0 ? (s2 = t2 / (t2 - o2), o2 = 0) : o2 >= this.image.getWidth() && (s2 = (this.image.getWidth() - 1 - t2) / (o2 - t2), o2 = this.image.getWidth() - 1);
          let a2 = Math.floor(e2 - (n2 - e2) * s2);
          return s2 = 1, a2 < 0 ? (s2 = e2 / (e2 - a2), a2 = 0) : a2 >= this.image.getHeight() && (s2 = (this.image.getHeight() - 1 - e2) / (a2 - e2), a2 = this.image.getHeight() - 1), o2 = Math.floor(t2 + (o2 - t2) * s2), i2 += this.sizeOfBlackWhiteBlackRun(t2, e2, o2, a2), i2 - 1;
        }
        sizeOfBlackWhiteBlackRun(t2, e2, r2, n2) {
          const i2 = Math.abs(n2 - e2) > Math.abs(r2 - t2);
          if (i2) {
            let i3 = t2;
            t2 = e2, e2 = i3, i3 = r2, r2 = n2, n2 = i3;
          }
          const s2 = Math.abs(r2 - t2), o2 = Math.abs(n2 - e2);
          let a2 = -s2 / 2;
          const h2 = t2 < r2 ? 1 : -1, l2 = e2 < n2 ? 1 : -1;
          let c2 = 0;
          const d2 = r2 + h2;
          for (let r3 = t2, u2 = e2; r3 !== d2; r3 += h2) {
            const h3 = i2 ? u2 : r3, d3 = i2 ? r3 : u2;
            if (1 === c2 === this.image.get(h3, d3)) {
              if (2 === c2) return et.distance(r3, u2, t2, e2);
              c2++;
            }
            if (a2 += o2, a2 > 0) {
              if (u2 === n2) break;
              u2 += l2, a2 -= s2;
            }
          }
          return 2 === c2 ? et.distance(r2 + h2, n2, t2, e2) : NaN;
        }
        findAlignmentInRegion(t2, e2, r2, n2) {
          const i2 = Math.floor(n2 * t2), s2 = Math.max(0, e2 - i2), o2 = Math.min(this.image.getWidth() - 1, e2 + i2);
          if (o2 - s2 < 3 * t2) throw new N("Alignment top exceeds estimated module size.");
          const a2 = Math.max(0, r2 - i2), h2 = Math.min(this.image.getHeight() - 1, r2 + i2);
          if (h2 - a2 < 3 * t2) throw new N("Alignment bottom exceeds estimated module size.");
          return new Oe(this.image, s2, a2, o2 - s2, h2 - a2, t2, this.resultPointCallback).find();
        }
      }
      class Le {
        constructor() {
          this.decoder = new ye();
        }
        getDecoder() {
          return this.decoder;
        }
        decode(t2, e2) {
          let r2, n2;
          if (null != e2 && void 0 !== e2.get(E.PURE_BARCODE)) {
            const i3 = Le.extractPureBits(t2.getBlackMatrix());
            r2 = this.decoder.decodeBitMatrix(i3, e2), n2 = Le.NO_POINTS;
          } else {
            const i3 = new Pe(t2.getBlackMatrix()).detect(e2);
            r2 = this.decoder.decodeBitMatrix(i3.getBits(), e2), n2 = i3.getPoints();
          }
          r2.getOther() instanceof Ne && r2.getOther().applyMirroredCorrection(n2);
          const i2 = new v(r2.getText(), r2.getRawBytes(), void 0, n2, x.QR_CODE, void 0), s2 = r2.getByteSegments();
          null !== s2 && i2.putMetadata(z.BYTE_SEGMENTS, s2);
          const o2 = r2.getECLevel();
          return null !== o2 && i2.putMetadata(z.ERROR_CORRECTION_LEVEL, o2), r2.hasStructuredAppend() && (i2.putMetadata(z.STRUCTURED_APPEND_SEQUENCE, r2.getStructuredAppendSequenceNumber()), i2.putMetadata(z.STRUCTURED_APPEND_PARITY, r2.getStructuredAppendParity())), i2;
        }
        reset() {
        }
        static extractPureBits(t2) {
          const e2 = t2.getTopLeftOnBit(), r2 = t2.getBottomRightOnBit();
          if (null === e2 || null === r2) throw new N();
          const n2 = this.moduleSize(e2, t2);
          let i2 = e2[1], s2 = r2[1], o2 = e2[0], a2 = r2[0];
          if (o2 >= a2 || i2 >= s2) throw new N();
          if (s2 - i2 != a2 - o2 && (a2 = o2 + (s2 - i2), a2 >= t2.getWidth())) throw new N();
          const h2 = Math.round((a2 - o2 + 1) / n2), l2 = Math.round((s2 - i2 + 1) / n2);
          if (h2 <= 0 || l2 <= 0) throw new N();
          if (l2 !== h2) throw new N();
          const c2 = Math.floor(n2 / 2);
          i2 += c2, o2 += c2;
          const d2 = o2 + Math.floor((h2 - 1) * n2) - a2;
          if (d2 > 0) {
            if (d2 > c2) throw new N();
            o2 -= d2;
          }
          const u2 = i2 + Math.floor((l2 - 1) * n2) - s2;
          if (u2 > 0) {
            if (u2 > c2) throw new N();
            i2 -= u2;
          }
          const g2 = new R(h2, l2);
          for (let e3 = 0; e3 < l2; e3++) {
            const r3 = i2 + Math.floor(e3 * n2);
            for (let i3 = 0; i3 < h2; i3++) t2.get(o2 + Math.floor(i3 * n2), r3) && g2.set(i3, e3);
          }
          return g2;
        }
        static moduleSize(t2, e2) {
          const r2 = e2.getHeight(), n2 = e2.getWidth();
          let i2 = t2[0], s2 = t2[1], o2 = true, a2 = 0;
          for (; i2 < n2 && s2 < r2; ) {
            if (o2 !== e2.get(i2, s2)) {
              if (5 == ++a2) break;
              o2 = !o2;
            }
            i2++, s2++;
          }
          if (i2 === n2 || s2 === r2) throw new N();
          return (i2 - t2[0]) / 7;
        }
      }
      Le.NO_POINTS = new Array();
      class Fe {
        PDF417Common() {
        }
        static getBitCountSum(t2) {
          return et.sum(t2);
        }
        static toIntArray(t2) {
          if (null == t2 || !t2.length) return Fe.EMPTY_INT_ARRAY;
          const e2 = new Int32Array(t2.length);
          let r2 = 0;
          for (const n2 of t2) e2[r2++] = n2;
          return e2;
        }
        static getCodeword(t2) {
          const e2 = f.binarySearch(Fe.SYMBOL_TABLE, 262143 & t2);
          return e2 < 0 ? -1 : (Fe.CODEWORD_TABLE[e2] - 1) % Fe.NUMBER_OF_CODEWORDS;
        }
      }
      Fe.NUMBER_OF_CODEWORDS = 929, Fe.MAX_CODEWORDS_IN_BARCODE = Fe.NUMBER_OF_CODEWORDS - 1, Fe.MIN_ROWS_IN_BARCODE = 3, Fe.MAX_ROWS_IN_BARCODE = 90, Fe.MODULES_IN_CODEWORD = 17, Fe.MODULES_IN_STOP_PATTERN = 18, Fe.BARS_IN_MODULE = 8, Fe.EMPTY_INT_ARRAY = new Int32Array([]), Fe.SYMBOL_TABLE = Int32Array.from([66142, 66170, 66206, 66236, 66290, 66292, 66350, 66382, 66396, 66454, 66470, 66476, 66594, 66600, 66614, 66626, 66628, 66632, 66640, 66654, 66662, 66668, 66682, 66690, 66718, 66720, 66748, 66758, 66776, 66798, 66802, 66804, 66820, 66824, 66832, 66846, 66848, 66876, 66880, 66936, 66950, 66956, 66968, 66992, 67006, 67022, 67036, 67042, 67044, 67048, 67062, 67118, 67150, 67164, 67214, 67228, 67256, 67294, 67322, 67350, 67366, 67372, 67398, 67404, 67416, 67438, 67474, 67476, 67490, 67492, 67496, 67510, 67618, 67624, 67650, 67656, 67664, 67678, 67686, 67692, 67706, 67714, 67716, 67728, 67742, 67744, 67772, 67782, 67788, 67800, 67822, 67826, 67828, 67842, 67848, 67870, 67872, 67900, 67904, 67960, 67974, 67992, 68016, 68030, 68046, 68060, 68066, 68068, 68072, 68086, 68104, 68112, 68126, 68128, 68156, 68160, 68216, 68336, 68358, 68364, 68376, 68400, 68414, 68448, 68476, 68494, 68508, 68536, 68546, 68548, 68552, 68560, 68574, 68582, 68588, 68654, 68686, 68700, 68706, 68708, 68712, 68726, 68750, 68764, 68792, 68802, 68804, 68808, 68816, 68830, 68838, 68844, 68858, 68878, 68892, 68920, 68976, 68990, 68994, 68996, 69e3, 69008, 69022, 69024, 69052, 69062, 69068, 69080, 69102, 69106, 69108, 69142, 69158, 69164, 69190, 69208, 69230, 69254, 69260, 69272, 69296, 69310, 69326, 69340, 69386, 69394, 69396, 69410, 69416, 69430, 69442, 69444, 69448, 69456, 69470, 69478, 69484, 69554, 69556, 69666, 69672, 69698, 69704, 69712, 69726, 69754, 69762, 69764, 69776, 69790, 69792, 69820, 69830, 69836, 69848, 69870, 69874, 69876, 69890, 69918, 69920, 69948, 69952, 70008, 70022, 70040, 70064, 70078, 70094, 70108, 70114, 70116, 70120, 70134, 70152, 70174, 70176, 70264, 70384, 70412, 70448, 70462, 70496, 70524, 70542, 70556, 70584, 70594, 70600, 70608, 70622, 70630, 70636, 70664, 70672, 70686, 70688, 70716, 70720, 70776, 70896, 71136, 71180, 71192, 71216, 71230, 71264, 71292, 71360, 71416, 71452, 71480, 71536, 71550, 71554, 71556, 71560, 71568, 71582, 71584, 71612, 71622, 71628, 71640, 71662, 71726, 71732, 71758, 71772, 71778, 71780, 71784, 71798, 71822, 71836, 71864, 71874, 71880, 71888, 71902, 71910, 71916, 71930, 71950, 71964, 71992, 72048, 72062, 72066, 72068, 72080, 72094, 72096, 72124, 72134, 72140, 72152, 72174, 72178, 72180, 72206, 72220, 72248, 72304, 72318, 72416, 72444, 72456, 72464, 72478, 72480, 72508, 72512, 72568, 72588, 72600, 72624, 72638, 72654, 72668, 72674, 72676, 72680, 72694, 72726, 72742, 72748, 72774, 72780, 72792, 72814, 72838, 72856, 72880, 72894, 72910, 72924, 72930, 72932, 72936, 72950, 72966, 72972, 72984, 73008, 73022, 73056, 73084, 73102, 73116, 73144, 73156, 73160, 73168, 73182, 73190, 73196, 73210, 73226, 73234, 73236, 73250, 73252, 73256, 73270, 73282, 73284, 73296, 73310, 73318, 73324, 73346, 73348, 73352, 73360, 73374, 73376, 73404, 73414, 73420, 73432, 73454, 73498, 73518, 73522, 73524, 73550, 73564, 73570, 73572, 73576, 73590, 73800, 73822, 73858, 73860, 73872, 73886, 73888, 73916, 73944, 73970, 73972, 73992, 74014, 74016, 74044, 74048, 74104, 74118, 74136, 74160, 74174, 74210, 74212, 74216, 74230, 74244, 74256, 74270, 74272, 74360, 74480, 74502, 74508, 74544, 74558, 74592, 74620, 74638, 74652, 74680, 74690, 74696, 74704, 74726, 74732, 74782, 74784, 74812, 74992, 75232, 75288, 75326, 75360, 75388, 75456, 75512, 75576, 75632, 75646, 75650, 75652, 75664, 75678, 75680, 75708, 75718, 75724, 75736, 75758, 75808, 75836, 75840, 75896, 76016, 76256, 76736, 76824, 76848, 76862, 76896, 76924, 76992, 77048, 77296, 77340, 77368, 77424, 77438, 77536, 77564, 77572, 77576, 77584, 77600, 77628, 77632, 77688, 77702, 77708, 77720, 77744, 77758, 77774, 77788, 77870, 77902, 77916, 77922, 77928, 77966, 77980, 78008, 78018, 78024, 78032, 78046, 78060, 78074, 78094, 78136, 78192, 78206, 78210, 78212, 78224, 78238, 78240, 78268, 78278, 78284, 78296, 78322, 78324, 78350, 78364, 78448, 78462, 78560, 78588, 78600, 78622, 78624, 78652, 78656, 78712, 78726, 78744, 78768, 78782, 78798, 78812, 78818, 78820, 78824, 78838, 78862, 78876, 78904, 78960, 78974, 79072, 79100, 79296, 79352, 79368, 79376, 79390, 79392, 79420, 79424, 79480, 79600, 79628, 79640, 79664, 79678, 79712, 79740, 79772, 79800, 79810, 79812, 79816, 79824, 79838, 79846, 79852, 79894, 79910, 79916, 79942, 79948, 79960, 79982, 79988, 80006, 80024, 80048, 80062, 80078, 80092, 80098, 80100, 80104, 80134, 80140, 80176, 80190, 80224, 80252, 80270, 80284, 80312, 80328, 80336, 80350, 80358, 80364, 80378, 80390, 80396, 80408, 80432, 80446, 80480, 80508, 80576, 80632, 80654, 80668, 80696, 80752, 80766, 80776, 80784, 80798, 80800, 80828, 80844, 80856, 80878, 80882, 80884, 80914, 80916, 80930, 80932, 80936, 80950, 80962, 80968, 80976, 80990, 80998, 81004, 81026, 81028, 81040, 81054, 81056, 81084, 81094, 81100, 81112, 81134, 81154, 81156, 81160, 81168, 81182, 81184, 81212, 81216, 81272, 81286, 81292, 81304, 81328, 81342, 81358, 81372, 81380, 81384, 81398, 81434, 81454, 81458, 81460, 81486, 81500, 81506, 81508, 81512, 81526, 81550, 81564, 81592, 81602, 81604, 81608, 81616, 81630, 81638, 81644, 81702, 81708, 81722, 81734, 81740, 81752, 81774, 81778, 81780, 82050, 82078, 82080, 82108, 82180, 82184, 82192, 82206, 82208, 82236, 82240, 82296, 82316, 82328, 82352, 82366, 82402, 82404, 82408, 82440, 82448, 82462, 82464, 82492, 82496, 82552, 82672, 82694, 82700, 82712, 82736, 82750, 82784, 82812, 82830, 82882, 82884, 82888, 82896, 82918, 82924, 82952, 82960, 82974, 82976, 83004, 83008, 83064, 83184, 83424, 83468, 83480, 83504, 83518, 83552, 83580, 83648, 83704, 83740, 83768, 83824, 83838, 83842, 83844, 83848, 83856, 83872, 83900, 83910, 83916, 83928, 83950, 83984, 84e3, 84028, 84032, 84088, 84208, 84448, 84928, 85040, 85054, 85088, 85116, 85184, 85240, 85488, 85560, 85616, 85630, 85728, 85756, 85764, 85768, 85776, 85790, 85792, 85820, 85824, 85880, 85894, 85900, 85912, 85936, 85966, 85980, 86048, 86080, 86136, 86256, 86496, 86976, 88160, 88188, 88256, 88312, 88560, 89056, 89200, 89214, 89312, 89340, 89536, 89592, 89608, 89616, 89632, 89664, 89720, 89840, 89868, 89880, 89904, 89952, 89980, 89998, 90012, 90040, 90190, 90204, 90254, 90268, 90296, 90306, 90308, 90312, 90334, 90382, 90396, 90424, 90480, 90494, 90500, 90504, 90512, 90526, 90528, 90556, 90566, 90572, 90584, 90610, 90612, 90638, 90652, 90680, 90736, 90750, 90848, 90876, 90884, 90888, 90896, 90910, 90912, 90940, 90944, 91e3, 91014, 91020, 91032, 91056, 91070, 91086, 91100, 91106, 91108, 91112, 91126, 91150, 91164, 91192, 91248, 91262, 91360, 91388, 91584, 91640, 91664, 91678, 91680, 91708, 91712, 91768, 91888, 91928, 91952, 91966, 92e3, 92028, 92046, 92060, 92088, 92098, 92100, 92104, 92112, 92126, 92134, 92140, 92188, 92216, 92272, 92384, 92412, 92608, 92664, 93168, 93200, 93214, 93216, 93244, 93248, 93304, 93424, 93664, 93720, 93744, 93758, 93792, 93820, 93888, 93944, 93980, 94008, 94064, 94078, 94084, 94088, 94096, 94110, 94112, 94140, 94150, 94156, 94168, 94246, 94252, 94278, 94284, 94296, 94318, 94342, 94348, 94360, 94384, 94398, 94414, 94428, 94440, 94470, 94476, 94488, 94512, 94526, 94560, 94588, 94606, 94620, 94648, 94658, 94660, 94664, 94672, 94686, 94694, 94700, 94714, 94726, 94732, 94744, 94768, 94782, 94816, 94844, 94912, 94968, 94990, 95004, 95032, 95088, 95102, 95112, 95120, 95134, 95136, 95164, 95180, 95192, 95214, 95218, 95220, 95244, 95256, 95280, 95294, 95328, 95356, 95424, 95480, 95728, 95758, 95772, 95800, 95856, 95870, 95968, 95996, 96008, 96016, 96030, 96032, 96060, 96064, 96120, 96152, 96176, 96190, 96220, 96226, 96228, 96232, 96290, 96292, 96296, 96310, 96322, 96324, 96328, 96336, 96350, 96358, 96364, 96386, 96388, 96392, 96400, 96414, 96416, 96444, 96454, 96460, 96472, 96494, 96498, 96500, 96514, 96516, 96520, 96528, 96542, 96544, 96572, 96576, 96632, 96646, 96652, 96664, 96688, 96702, 96718, 96732, 96738, 96740, 96744, 96758, 96772, 96776, 96784, 96798, 96800, 96828, 96832, 96888, 97008, 97030, 97036, 97048, 97072, 97086, 97120, 97148, 97166, 97180, 97208, 97220, 97224, 97232, 97246, 97254, 97260, 97326, 97330, 97332, 97358, 97372, 97378, 97380, 97384, 97398, 97422, 97436, 97464, 97474, 97476, 97480, 97488, 97502, 97510, 97516, 97550, 97564, 97592, 97648, 97666, 97668, 97672, 97680, 97694, 97696, 97724, 97734, 97740, 97752, 97774, 97830, 97836, 97850, 97862, 97868, 97880, 97902, 97906, 97908, 97926, 97932, 97944, 97968, 97998, 98012, 98018, 98020, 98024, 98038, 98618, 98674, 98676, 98838, 98854, 98874, 98892, 98904, 98926, 98930, 98932, 98968, 99006, 99042, 99044, 99048, 99062, 99166, 99194, 99246, 99286, 99350, 99366, 99372, 99386, 99398, 99416, 99438, 99442, 99444, 99462, 99504, 99518, 99534, 99548, 99554, 99556, 99560, 99574, 99590, 99596, 99608, 99632, 99646, 99680, 99708, 99726, 99740, 99768, 99778, 99780, 99784, 99792, 99806, 99814, 99820, 99834, 99858, 99860, 99874, 99880, 99894, 99906, 99920, 99934, 99962, 99970, 99972, 99976, 99984, 99998, 1e5, 100028, 100038, 100044, 100056, 100078, 100082, 100084, 100142, 100174, 100188, 100246, 100262, 100268, 100306, 100308, 100390, 100396, 100410, 100422, 100428, 100440, 100462, 100466, 100468, 100486, 100504, 100528, 100542, 100558, 100572, 100578, 100580, 100584, 100598, 100620, 100656, 100670, 100704, 100732, 100750, 100792, 100802, 100808, 100816, 100830, 100838, 100844, 100858, 100888, 100912, 100926, 100960, 100988, 101056, 101112, 101148, 101176, 101232, 101246, 101250, 101252, 101256, 101264, 101278, 101280, 101308, 101318, 101324, 101336, 101358, 101362, 101364, 101410, 101412, 101416, 101430, 101442, 101448, 101456, 101470, 101478, 101498, 101506, 101508, 101520, 101534, 101536, 101564, 101580, 101618, 101620, 101636, 101640, 101648, 101662, 101664, 101692, 101696, 101752, 101766, 101784, 101838, 101858, 101860, 101864, 101934, 101938, 101940, 101966, 101980, 101986, 101988, 101992, 102030, 102044, 102072, 102082, 102084, 102088, 102096, 102138, 102166, 102182, 102188, 102214, 102220, 102232, 102254, 102282, 102290, 102292, 102306, 102308, 102312, 102326, 102444, 102458, 102470, 102476, 102488, 102514, 102516, 102534, 102552, 102576, 102590, 102606, 102620, 102626, 102632, 102646, 102662, 102668, 102704, 102718, 102752, 102780, 102798, 102812, 102840, 102850, 102856, 102864, 102878, 102886, 102892, 102906, 102936, 102974, 103008, 103036, 103104, 103160, 103224, 103280, 103294, 103298, 103300, 103312, 103326, 103328, 103356, 103366, 103372, 103384, 103406, 103410, 103412, 103472, 103486, 103520, 103548, 103616, 103672, 103920, 103992, 104048, 104062, 104160, 104188, 104194, 104196, 104200, 104208, 104224, 104252, 104256, 104312, 104326, 104332, 104344, 104368, 104382, 104398, 104412, 104418, 104420, 104424, 104482, 104484, 104514, 104520, 104528, 104542, 104550, 104570, 104578, 104580, 104592, 104606, 104608, 104636, 104652, 104690, 104692, 104706, 104712, 104734, 104736, 104764, 104768, 104824, 104838, 104856, 104910, 104930, 104932, 104936, 104968, 104976, 104990, 104992, 105020, 105024, 105080, 105200, 105240, 105278, 105312, 105372, 105410, 105412, 105416, 105424, 105446, 105518, 105524, 105550, 105564, 105570, 105572, 105576, 105614, 105628, 105656, 105666, 105672, 105680, 105702, 105722, 105742, 105756, 105784, 105840, 105854, 105858, 105860, 105864, 105872, 105888, 105932, 105970, 105972, 106006, 106022, 106028, 106054, 106060, 106072, 106100, 106118, 106124, 106136, 106160, 106174, 106190, 106210, 106212, 106216, 106250, 106258, 106260, 106274, 106276, 106280, 106306, 106308, 106312, 106320, 106334, 106348, 106394, 106414, 106418, 106420, 106566, 106572, 106610, 106612, 106630, 106636, 106648, 106672, 106686, 106722, 106724, 106728, 106742, 106758, 106764, 106776, 106800, 106814, 106848, 106876, 106894, 106908, 106936, 106946, 106948, 106952, 106960, 106974, 106982, 106988, 107032, 107056, 107070, 107104, 107132, 107200, 107256, 107292, 107320, 107376, 107390, 107394, 107396, 107400, 107408, 107422, 107424, 107452, 107462, 107468, 107480, 107502, 107506, 107508, 107544, 107568, 107582, 107616, 107644, 107712, 107768, 108016, 108060, 108088, 108144, 108158, 108256, 108284, 108290, 108292, 108296, 108304, 108318, 108320, 108348, 108352, 108408, 108422, 108428, 108440, 108464, 108478, 108494, 108508, 108514, 108516, 108520, 108592, 108640, 108668, 108736, 108792, 109040, 109536, 109680, 109694, 109792, 109820, 110016, 110072, 110084, 110088, 110096, 110112, 110140, 110144, 110200, 110320, 110342, 110348, 110360, 110384, 110398, 110432, 110460, 110478, 110492, 110520, 110532, 110536, 110544, 110558, 110658, 110686, 110714, 110722, 110724, 110728, 110736, 110750, 110752, 110780, 110796, 110834, 110836, 110850, 110852, 110856, 110864, 110878, 110880, 110908, 110912, 110968, 110982, 111e3, 111054, 111074, 111076, 111080, 111108, 111112, 111120, 111134, 111136, 111164, 111168, 111224, 111344, 111372, 111422, 111456, 111516, 111554, 111556, 111560, 111568, 111590, 111632, 111646, 111648, 111676, 111680, 111736, 111856, 112096, 112152, 112224, 112252, 112320, 112440, 112514, 112516, 112520, 112528, 112542, 112544, 112588, 112686, 112718, 112732, 112782, 112796, 112824, 112834, 112836, 112840, 112848, 112870, 112890, 112910, 112924, 112952, 113008, 113022, 113026, 113028, 113032, 113040, 113054, 113056, 113100, 113138, 113140, 113166, 113180, 113208, 113264, 113278, 113376, 113404, 113416, 113424, 113440, 113468, 113472, 113560, 113614, 113634, 113636, 113640, 113686, 113702, 113708, 113734, 113740, 113752, 113778, 113780, 113798, 113804, 113816, 113840, 113854, 113870, 113890, 113892, 113896, 113926, 113932, 113944, 113968, 113982, 114016, 114044, 114076, 114114, 114116, 114120, 114128, 114150, 114170, 114194, 114196, 114210, 114212, 114216, 114242, 114244, 114248, 114256, 114270, 114278, 114306, 114308, 114312, 114320, 114334, 114336, 114364, 114380, 114420, 114458, 114478, 114482, 114484, 114510, 114524, 114530, 114532, 114536, 114842, 114866, 114868, 114970, 114994, 114996, 115042, 115044, 115048, 115062, 115130, 115226, 115250, 115252, 115278, 115292, 115298, 115300, 115304, 115318, 115342, 115394, 115396, 115400, 115408, 115422, 115430, 115436, 115450, 115478, 115494, 115514, 115526, 115532, 115570, 115572, 115738, 115758, 115762, 115764, 115790, 115804, 115810, 115812, 115816, 115830, 115854, 115868, 115896, 115906, 115912, 115920, 115934, 115942, 115948, 115962, 115996, 116024, 116080, 116094, 116098, 116100, 116104, 116112, 116126, 116128, 116156, 116166, 116172, 116184, 116206, 116210, 116212, 116246, 116262, 116268, 116282, 116294, 116300, 116312, 116334, 116338, 116340, 116358, 116364, 116376, 116400, 116414, 116430, 116444, 116450, 116452, 116456, 116498, 116500, 116514, 116520, 116534, 116546, 116548, 116552, 116560, 116574, 116582, 116588, 116602, 116654, 116694, 116714, 116762, 116782, 116786, 116788, 116814, 116828, 116834, 116836, 116840, 116854, 116878, 116892, 116920, 116930, 116936, 116944, 116958, 116966, 116972, 116986, 117006, 117048, 117104, 117118, 117122, 117124, 117136, 117150, 117152, 117180, 117190, 117196, 117208, 117230, 117234, 117236, 117304, 117360, 117374, 117472, 117500, 117506, 117508, 117512, 117520, 117536, 117564, 117568, 117624, 117638, 117644, 117656, 117680, 117694, 117710, 117724, 117730, 117732, 117736, 117750, 117782, 117798, 117804, 117818, 117830, 117848, 117874, 117876, 117894, 117936, 117950, 117966, 117986, 117988, 117992, 118022, 118028, 118040, 118064, 118078, 118112, 118140, 118172, 118210, 118212, 118216, 118224, 118238, 118246, 118266, 118306, 118312, 118338, 118352, 118366, 118374, 118394, 118402, 118404, 118408, 118416, 118430, 118432, 118460, 118476, 118514, 118516, 118574, 118578, 118580, 118606, 118620, 118626, 118628, 118632, 118678, 118694, 118700, 118730, 118738, 118740, 118830, 118834, 118836, 118862, 118876, 118882, 118884, 118888, 118902, 118926, 118940, 118968, 118978, 118980, 118984, 118992, 119006, 119014, 119020, 119034, 119068, 119096, 119152, 119166, 119170, 119172, 119176, 119184, 119198, 119200, 119228, 119238, 119244, 119256, 119278, 119282, 119284, 119324, 119352, 119408, 119422, 119520, 119548, 119554, 119556, 119560, 119568, 119582, 119584, 119612, 119616, 119672, 119686, 119692, 119704, 119728, 119742, 119758, 119772, 119778, 119780, 119784, 119798, 119920, 119934, 120032, 120060, 120256, 120312, 120324, 120328, 120336, 120352, 120384, 120440, 120560, 120582, 120588, 120600, 120624, 120638, 120672, 120700, 120718, 120732, 120760, 120770, 120772, 120776, 120784, 120798, 120806, 120812, 120870, 120876, 120890, 120902, 120908, 120920, 120946, 120948, 120966, 120972, 120984, 121008, 121022, 121038, 121058, 121060, 121064, 121078, 121100, 121112, 121136, 121150, 121184, 121212, 121244, 121282, 121284, 121288, 121296, 121318, 121338, 121356, 121368, 121392, 121406, 121440, 121468, 121536, 121592, 121656, 121730, 121732, 121736, 121744, 121758, 121760, 121804, 121842, 121844, 121890, 121922, 121924, 121928, 121936, 121950, 121958, 121978, 121986, 121988, 121992, 122e3, 122014, 122016, 122044, 122060, 122098, 122100, 122116, 122120, 122128, 122142, 122144, 122172, 122176, 122232, 122246, 122264, 122318, 122338, 122340, 122344, 122414, 122418, 122420, 122446, 122460, 122466, 122468, 122472, 122510, 122524, 122552, 122562, 122564, 122568, 122576, 122598, 122618, 122646, 122662, 122668, 122694, 122700, 122712, 122738, 122740, 122762, 122770, 122772, 122786, 122788, 122792, 123018, 123026, 123028, 123042, 123044, 123048, 123062, 123098, 123146, 123154, 123156, 123170, 123172, 123176, 123190, 123202, 123204, 123208, 123216, 123238, 123244, 123258, 123290, 123314, 123316, 123402, 123410, 123412, 123426, 123428, 123432, 123446, 123458, 123464, 123472, 123486, 123494, 123500, 123514, 123522, 123524, 123528, 123536, 123552, 123580, 123590, 123596, 123608, 123630, 123634, 123636, 123674, 123698, 123700, 123740, 123746, 123748, 123752, 123834, 123914, 123922, 123924, 123938, 123944, 123958, 123970, 123976, 123984, 123998, 124006, 124012, 124026, 124034, 124036, 124048, 124062, 124064, 124092, 124102, 124108, 124120, 124142, 124146, 124148, 124162, 124164, 124168, 124176, 124190, 124192, 124220, 124224, 124280, 124294, 124300, 124312, 124336, 124350, 124366, 124380, 124386, 124388, 124392, 124406, 124442, 124462, 124466, 124468, 124494, 124508, 124514, 124520, 124558, 124572, 124600, 124610, 124612, 124616, 124624, 124646, 124666, 124694, 124710, 124716, 124730, 124742, 124748, 124760, 124786, 124788, 124818, 124820, 124834, 124836, 124840, 124854, 124946, 124948, 124962, 124964, 124968, 124982, 124994, 124996, 125e3, 125008, 125022, 125030, 125036, 125050, 125058, 125060, 125064, 125072, 125086, 125088, 125116, 125126, 125132, 125144, 125166, 125170, 125172, 125186, 125188, 125192, 125200, 125216, 125244, 125248, 125304, 125318, 125324, 125336, 125360, 125374, 125390, 125404, 125410, 125412, 125416, 125430, 125444, 125448, 125456, 125472, 125504, 125560, 125680, 125702, 125708, 125720, 125744, 125758, 125792, 125820, 125838, 125852, 125880, 125890, 125892, 125896, 125904, 125918, 125926, 125932, 125978, 125998, 126002, 126004, 126030, 126044, 126050, 126052, 126056, 126094, 126108, 126136, 126146, 126148, 126152, 126160, 126182, 126202, 126222, 126236, 126264, 126320, 126334, 126338, 126340, 126344, 126352, 126366, 126368, 126412, 126450, 126452, 126486, 126502, 126508, 126522, 126534, 126540, 126552, 126574, 126578, 126580, 126598, 126604, 126616, 126640, 126654, 126670, 126684, 126690, 126692, 126696, 126738, 126754, 126756, 126760, 126774, 126786, 126788, 126792, 126800, 126814, 126822, 126828, 126842, 126894, 126898, 126900, 126934, 127126, 127142, 127148, 127162, 127178, 127186, 127188, 127254, 127270, 127276, 127290, 127302, 127308, 127320, 127342, 127346, 127348, 127370, 127378, 127380, 127394, 127396, 127400, 127450, 127510, 127526, 127532, 127546, 127558, 127576, 127598, 127602, 127604, 127622, 127628, 127640, 127664, 127678, 127694, 127708, 127714, 127716, 127720, 127734, 127754, 127762, 127764, 127778, 127784, 127810, 127812, 127816, 127824, 127838, 127846, 127866, 127898, 127918, 127922, 127924, 128022, 128038, 128044, 128058, 128070, 128076, 128088, 128110, 128114, 128116, 128134, 128140, 128152, 128176, 128190, 128206, 128220, 128226, 128228, 128232, 128246, 128262, 128268, 128280, 128304, 128318, 128352, 128380, 128398, 128412, 128440, 128450, 128452, 128456, 128464, 128478, 128486, 128492, 128506, 128522, 128530, 128532, 128546, 128548, 128552, 128566, 128578, 128580, 128584, 128592, 128606, 128614, 128634, 128642, 128644, 128648, 128656, 128670, 128672, 128700, 128716, 128754, 128756, 128794, 128814, 128818, 128820, 128846, 128860, 128866, 128868, 128872, 128886, 128918, 128934, 128940, 128954, 128978, 128980, 129178, 129198, 129202, 129204, 129238, 129258, 129306, 129326, 129330, 129332, 129358, 129372, 129378, 129380, 129384, 129398, 129430, 129446, 129452, 129466, 129482, 129490, 129492, 129562, 129582, 129586, 129588, 129614, 129628, 129634, 129636, 129640, 129654, 129678, 129692, 129720, 129730, 129732, 129736, 129744, 129758, 129766, 129772, 129814, 129830, 129836, 129850, 129862, 129868, 129880, 129902, 129906, 129908, 129930, 129938, 129940, 129954, 129956, 129960, 129974, 130010]), Fe.CODEWORD_TABLE = Int32Array.from([2627, 1819, 2622, 2621, 1813, 1812, 2729, 2724, 2723, 2779, 2774, 2773, 902, 896, 908, 868, 865, 861, 859, 2511, 873, 871, 1780, 835, 2493, 825, 2491, 842, 837, 844, 1764, 1762, 811, 810, 809, 2483, 807, 2482, 806, 2480, 815, 814, 813, 812, 2484, 817, 816, 1745, 1744, 1742, 1746, 2655, 2637, 2635, 2626, 2625, 2623, 2628, 1820, 2752, 2739, 2737, 2728, 2727, 2725, 2730, 2785, 2783, 2778, 2777, 2775, 2780, 787, 781, 747, 739, 736, 2413, 754, 752, 1719, 692, 689, 681, 2371, 678, 2369, 700, 697, 694, 703, 1688, 1686, 642, 638, 2343, 631, 2341, 627, 2338, 651, 646, 643, 2345, 654, 652, 1652, 1650, 1647, 1654, 601, 599, 2322, 596, 2321, 594, 2319, 2317, 611, 610, 608, 606, 2324, 603, 2323, 615, 614, 612, 1617, 1616, 1614, 1612, 616, 1619, 1618, 2575, 2538, 2536, 905, 901, 898, 909, 2509, 2507, 2504, 870, 867, 864, 860, 2512, 875, 872, 1781, 2490, 2489, 2487, 2485, 1748, 836, 834, 832, 830, 2494, 827, 2492, 843, 841, 839, 845, 1765, 1763, 2701, 2676, 2674, 2653, 2648, 2656, 2634, 2633, 2631, 2629, 1821, 2638, 2636, 2770, 2763, 2761, 2750, 2745, 2753, 2736, 2735, 2733, 2731, 1848, 2740, 2738, 2786, 2784, 591, 588, 576, 569, 566, 2296, 1590, 537, 534, 526, 2276, 522, 2274, 545, 542, 539, 548, 1572, 1570, 481, 2245, 466, 2242, 462, 2239, 492, 485, 482, 2249, 496, 494, 1534, 1531, 1528, 1538, 413, 2196, 406, 2191, 2188, 425, 419, 2202, 415, 2199, 432, 430, 427, 1472, 1467, 1464, 433, 1476, 1474, 368, 367, 2160, 365, 2159, 362, 2157, 2155, 2152, 378, 377, 375, 2166, 372, 2165, 369, 2162, 383, 381, 379, 2168, 1419, 1418, 1416, 1414, 385, 1411, 384, 1423, 1422, 1420, 1424, 2461, 802, 2441, 2439, 790, 786, 783, 794, 2409, 2406, 2403, 750, 742, 738, 2414, 756, 753, 1720, 2367, 2365, 2362, 2359, 1663, 693, 691, 684, 2373, 680, 2370, 702, 699, 696, 704, 1690, 1687, 2337, 2336, 2334, 2332, 1624, 2329, 1622, 640, 637, 2344, 634, 2342, 630, 2340, 650, 648, 645, 2346, 655, 653, 1653, 1651, 1649, 1655, 2612, 2597, 2595, 2571, 2568, 2565, 2576, 2534, 2529, 2526, 1787, 2540, 2537, 907, 904, 900, 910, 2503, 2502, 2500, 2498, 1768, 2495, 1767, 2510, 2508, 2506, 869, 866, 863, 2513, 876, 874, 1782, 2720, 2713, 2711, 2697, 2694, 2691, 2702, 2672, 2670, 2664, 1828, 2678, 2675, 2647, 2646, 2644, 2642, 1823, 2639, 1822, 2654, 2652, 2650, 2657, 2771, 1855, 2765, 2762, 1850, 1849, 2751, 2749, 2747, 2754, 353, 2148, 344, 342, 336, 2142, 332, 2140, 345, 1375, 1373, 306, 2130, 299, 2128, 295, 2125, 319, 314, 311, 2132, 1354, 1352, 1349, 1356, 262, 257, 2101, 253, 2096, 2093, 274, 273, 267, 2107, 263, 2104, 280, 278, 275, 1316, 1311, 1308, 1320, 1318, 2052, 202, 2050, 2044, 2040, 219, 2063, 212, 2060, 208, 2055, 224, 221, 2066, 1260, 1258, 1252, 231, 1248, 229, 1266, 1264, 1261, 1268, 155, 1998, 153, 1996, 1994, 1991, 1988, 165, 164, 2007, 162, 2006, 159, 2003, 2ee3, 997, 38, 1013, 1010, 1932, 1930, 1927, 1934, 941, 939, 936, 933, 6, 930, 3, 951, 948, 944, 1889, 1887, 1884, 1881, 959, 1893, 1891, 35, 1377, 1360, 1358, 1327, 1325, 1322, 1331, 1277, 1275, 1272, 1269, 235, 1284, 2110, 1205, 1204, 1201, 1198, 182, 1195, 179, 1213, 2070, 2067, 1580, 501, 1551, 1548, 440, 437, 1497, 1494, 1490, 1503, 761, 709, 707, 1706, 913, 912, 2198, 1386, 2164, 2161, 1621, 1766, 2103, 1208, 2058, 2054, 1145, 1142, 2005, 2002, 1999, 2009, 1488, 1429, 1426, 2200, 1698, 1659, 1656, 1975, 1053, 1957, 1954, 1001, 998, 1924, 1921, 1918, 1928, 937, 934, 931, 1879, 1876, 1873, 1870, 945, 1885, 1882, 1323, 1273, 1270, 2105, 1202, 1199, 1196, 1211, 2061, 2057, 1576, 1543, 1540, 1484, 1481, 1478, 1491, 1700]);
      class ve {
        constructor(t2, e2) {
          this.bits = t2, this.points = e2;
        }
        getBits() {
          return this.bits;
        }
        getPoints() {
          return this.points;
        }
      }
      class ke {
        static detectMultiple(t2, e2, r2) {
          let n2 = t2.getBlackMatrix(), i2 = ke.detect(r2, n2);
          return i2.length || (n2 = n2.clone(), n2.rotate180(), i2 = ke.detect(r2, n2)), new ve(n2, i2);
        }
        static detect(t2, e2) {
          const r2 = new Array();
          let n2 = 0, i2 = 0, s2 = false;
          for (; n2 < e2.getHeight(); ) {
            const o2 = ke.findVertices(e2, n2, i2);
            if (null != o2[0] || null != o2[3]) {
              if (s2 = true, r2.push(o2), !t2) break;
              null != o2[2] ? (i2 = Math.trunc(o2[2].getX()), n2 = Math.trunc(o2[2].getY())) : (i2 = Math.trunc(o2[4].getX()), n2 = Math.trunc(o2[4].getY()));
            } else {
              if (!s2) break;
              s2 = false, i2 = 0;
              for (const t3 of r2) null != t3[1] && (n2 = Math.trunc(Math.max(n2, t3[1].getY()))), null != t3[3] && (n2 = Math.max(n2, Math.trunc(t3[3].getY())));
              n2 += ke.ROW_STEP;
            }
          }
          return r2;
        }
        static findVertices(t2, e2, r2) {
          const n2 = t2.getHeight(), i2 = t2.getWidth(), s2 = new Array(8);
          return ke.copyToResult(s2, ke.findRowsWithPattern(t2, n2, i2, e2, r2, ke.START_PATTERN), ke.INDEXES_START_PATTERN), null != s2[4] && (r2 = Math.trunc(s2[4].getX()), e2 = Math.trunc(s2[4].getY())), ke.copyToResult(s2, ke.findRowsWithPattern(t2, n2, i2, e2, r2, ke.STOP_PATTERN), ke.INDEXES_STOP_PATTERN), s2;
        }
        static copyToResult(t2, e2, r2) {
          for (let n2 = 0; n2 < r2.length; n2++) t2[r2[n2]] = e2[n2];
        }
        static findRowsWithPattern(t2, e2, r2, n2, i2, s2) {
          const o2 = new Array(4);
          let a2 = false;
          const h2 = new Int32Array(s2.length);
          for (; n2 < e2; n2 += ke.ROW_STEP) {
            let e3 = ke.findGuardPattern(t2, i2, n2, r2, false, s2, h2);
            if (null != e3) {
              for (; n2 > 0; ) {
                const o3 = ke.findGuardPattern(t2, i2, --n2, r2, false, s2, h2);
                if (null == o3) {
                  n2++;
                  break;
                }
                e3 = o3;
              }
              o2[0] = new nt(e3[0], n2), o2[1] = new nt(e3[1], n2), a2 = true;
              break;
            }
          }
          let l2 = n2 + 1;
          if (a2) {
            let n3 = 0, i3 = Int32Array.from([Math.trunc(o2[0].getX()), Math.trunc(o2[1].getX())]);
            for (; l2 < e2; l2++) {
              const e3 = ke.findGuardPattern(t2, i3[0], l2, r2, false, s2, h2);
              if (null != e3 && Math.abs(i3[0] - e3[0]) < ke.MAX_PATTERN_DRIFT && Math.abs(i3[1] - e3[1]) < ke.MAX_PATTERN_DRIFT) i3 = e3, n3 = 0;
              else {
                if (n3 > ke.SKIPPED_ROW_COUNT_MAX) break;
                n3++;
              }
            }
            l2 -= n3 + 1, o2[2] = new nt(i3[0], l2), o2[3] = new nt(i3[1], l2);
          }
          return l2 - n2 < ke.BARCODE_MIN_HEIGHT && f.fill(o2, null), o2;
        }
        static findGuardPattern(t2, e2, r2, n2, i2, s2, o2) {
          f.fillWithin(o2, 0, o2.length, 0);
          let a2 = e2, h2 = 0;
          for (; t2.get(a2, r2) && a2 > 0 && h2++ < ke.MAX_PIXEL_DRIFT; ) a2--;
          let l2 = a2, c2 = 0, u2 = s2.length;
          for (let e3 = i2; l2 < n2; l2++) {
            if (t2.get(l2, r2) !== e3) o2[c2]++;
            else {
              if (c2 === u2 - 1) {
                if (ke.patternMatchVariance(o2, s2, ke.MAX_INDIVIDUAL_VARIANCE) < ke.MAX_AVG_VARIANCE) return new Int32Array([a2, l2]);
                a2 += o2[0] + o2[1], d.arraycopy(o2, 2, o2, 0, c2 - 1), o2[c2 - 1] = 0, o2[c2] = 0, c2--;
              } else c2++;
              o2[c2] = 1, e3 = !e3;
            }
          }
          return c2 === u2 - 1 && ke.patternMatchVariance(o2, s2, ke.MAX_INDIVIDUAL_VARIANCE) < ke.MAX_AVG_VARIANCE ? new Int32Array([a2, l2 - 1]) : null;
        }
        static patternMatchVariance(t2, e2, r2) {
          let n2 = t2.length, i2 = 0, s2 = 0;
          for (let r3 = 0; r3 < n2; r3++) i2 += t2[r3], s2 += e2[r3];
          if (i2 < s2) return 1 / 0;
          let o2 = i2 / s2;
          r2 *= o2;
          let a2 = 0;
          for (let i3 = 0; i3 < n2; i3++) {
            let n3 = t2[i3], s3 = e2[i3] * o2, h2 = n3 > s3 ? n3 - s3 : s3 - n3;
            if (h2 > r2) return 1 / 0;
            a2 += h2;
          }
          return a2 / i2;
        }
      }
      ke.INDEXES_START_PATTERN = Int32Array.from([0, 4, 1, 5]), ke.INDEXES_STOP_PATTERN = Int32Array.from([6, 2, 7, 3]), ke.MAX_AVG_VARIANCE = 0.42, ke.MAX_INDIVIDUAL_VARIANCE = 0.8, ke.START_PATTERN = Int32Array.from([8, 1, 1, 1, 1, 1, 1, 3]), ke.STOP_PATTERN = Int32Array.from([7, 1, 1, 3, 1, 1, 1, 2, 1]), ke.MAX_PIXEL_DRIFT = 3, ke.MAX_PATTERN_DRIFT = 5, ke.SKIPPED_ROW_COUNT_MAX = 25, ke.ROW_STEP = 5, ke.BARCODE_MIN_HEIGHT = 10;
      class xe {
        constructor(t2, e2) {
          if (0 === e2.length) throw new a();
          this.field = t2;
          let r2 = e2.length;
          if (r2 > 1 && 0 === e2[0]) {
            let t3 = 1;
            for (; t3 < r2 && 0 === e2[t3]; ) t3++;
            t3 === r2 ? this.coefficients = new Int32Array([0]) : (this.coefficients = new Int32Array(r2 - t3), d.arraycopy(e2, t3, this.coefficients, 0, this.coefficients.length));
          } else this.coefficients = e2;
        }
        getCoefficients() {
          return this.coefficients;
        }
        getDegree() {
          return this.coefficients.length - 1;
        }
        isZero() {
          return 0 === this.coefficients[0];
        }
        getCoefficient(t2) {
          return this.coefficients[this.coefficients.length - 1 - t2];
        }
        evaluateAt(t2) {
          if (0 === t2) return this.getCoefficient(0);
          if (1 === t2) {
            let t3 = 0;
            for (let e3 of this.coefficients) t3 = this.field.add(t3, e3);
            return t3;
          }
          let e2 = this.coefficients[0], r2 = this.coefficients.length;
          for (let n2 = 1; n2 < r2; n2++) e2 = this.field.add(this.field.multiply(t2, e2), this.coefficients[n2]);
          return e2;
        }
        add(t2) {
          if (!this.field.equals(t2.field)) throw new a("ModulusPolys do not have same ModulusGF field");
          if (this.isZero()) return t2;
          if (t2.isZero()) return this;
          let e2 = this.coefficients, r2 = t2.coefficients;
          if (e2.length > r2.length) {
            let t3 = e2;
            e2 = r2, r2 = t3;
          }
          let n2 = new Int32Array(r2.length), i2 = r2.length - e2.length;
          d.arraycopy(r2, 0, n2, 0, i2);
          for (let t3 = i2; t3 < r2.length; t3++) n2[t3] = this.field.add(e2[t3 - i2], r2[t3]);
          return new xe(this.field, n2);
        }
        subtract(t2) {
          if (!this.field.equals(t2.field)) throw new a("ModulusPolys do not have same ModulusGF field");
          return t2.isZero() ? this : this.add(t2.negative());
        }
        multiply(t2) {
          return t2 instanceof xe ? this.multiplyOther(t2) : this.multiplyScalar(t2);
        }
        multiplyOther(t2) {
          if (!this.field.equals(t2.field)) throw new a("ModulusPolys do not have same ModulusGF field");
          if (this.isZero() || t2.isZero()) return new xe(this.field, new Int32Array([0]));
          let e2 = this.coefficients, r2 = e2.length, n2 = t2.coefficients, i2 = n2.length, s2 = new Int32Array(r2 + i2 - 1);
          for (let t3 = 0; t3 < r2; t3++) {
            let r3 = e2[t3];
            for (let e3 = 0; e3 < i2; e3++) s2[t3 + e3] = this.field.add(s2[t3 + e3], this.field.multiply(r3, n2[e3]));
          }
          return new xe(this.field, s2);
        }
        negative() {
          let t2 = this.coefficients.length, e2 = new Int32Array(t2);
          for (let r2 = 0; r2 < t2; r2++) e2[r2] = this.field.subtract(0, this.coefficients[r2]);
          return new xe(this.field, e2);
        }
        multiplyScalar(t2) {
          if (0 === t2) return new xe(this.field, new Int32Array([0]));
          if (1 === t2) return this;
          let e2 = this.coefficients.length, r2 = new Int32Array(e2);
          for (let n2 = 0; n2 < e2; n2++) r2[n2] = this.field.multiply(this.coefficients[n2], t2);
          return new xe(this.field, r2);
        }
        multiplyByMonomial(t2, e2) {
          if (t2 < 0) throw new a();
          if (0 === e2) return new xe(this.field, new Int32Array([0]));
          let r2 = this.coefficients.length, n2 = new Int32Array(r2 + t2);
          for (let t3 = 0; t3 < r2; t3++) n2[t3] = this.field.multiply(this.coefficients[t3], e2);
          return new xe(this.field, n2);
        }
        toString() {
          let t2 = new T();
          for (let e2 = this.getDegree(); e2 >= 0; e2--) {
            let r2 = this.getCoefficient(e2);
            0 !== r2 && (r2 < 0 ? (t2.append(" - "), r2 = -r2) : t2.length() > 0 && t2.append(" + "), 0 !== e2 && 1 === r2 || t2.append(r2), 0 !== e2 && (1 === e2 ? t2.append("x") : (t2.append("x^"), t2.append(e2))));
          }
          return t2.toString();
        }
      }
      class Ve {
        add(t2, e2) {
          return (t2 + e2) % this.modulus;
        }
        subtract(t2, e2) {
          return (this.modulus + t2 - e2) % this.modulus;
        }
        exp(t2) {
          return this.expTable[t2];
        }
        log(t2) {
          if (0 === t2) throw new a();
          return this.logTable[t2];
        }
        inverse(t2) {
          if (0 === t2) throw new q();
          return this.expTable[this.modulus - this.logTable[t2] - 1];
        }
        multiply(t2, e2) {
          return 0 === t2 || 0 === e2 ? 0 : this.expTable[(this.logTable[t2] + this.logTable[e2]) % (this.modulus - 1)];
        }
        getSize() {
          return this.modulus;
        }
        equals(t2) {
          return t2 === this;
        }
      }
      class He extends Ve {
        constructor(t2, e2) {
          super(), this.modulus = t2, this.expTable = new Int32Array(t2), this.logTable = new Int32Array(t2);
          let r2 = 1;
          for (let n2 = 0; n2 < t2; n2++) this.expTable[n2] = r2, r2 = r2 * e2 % t2;
          for (let e3 = 0; e3 < t2 - 1; e3++) this.logTable[this.expTable[e3]] = e3;
          this.zero = new xe(this, new Int32Array([0])), this.one = new xe(this, new Int32Array([1]));
        }
        getZero() {
          return this.zero;
        }
        getOne() {
          return this.one;
        }
        buildMonomial(t2, e2) {
          if (t2 < 0) throw new a();
          if (0 === e2) return this.zero;
          let r2 = new Int32Array(t2 + 1);
          return r2[0] = e2, new xe(this, r2);
        }
      }
      He.PDF417_GF = new He(Fe.NUMBER_OF_CODEWORDS, 3);
      class Ue {
        constructor() {
          this.field = He.PDF417_GF;
        }
        decode(t2, e2, r2) {
          let n2 = new xe(this.field, t2), i2 = new Int32Array(e2), s2 = false;
          for (let t3 = e2; t3 > 0; t3--) {
            let r3 = n2.evaluateAt(this.field.exp(t3));
            i2[e2 - t3] = r3, 0 !== r3 && (s2 = true);
          }
          if (!s2) return 0;
          let o2 = this.field.getOne();
          if (null != r2) for (const e3 of r2) {
            let r3 = this.field.exp(t2.length - 1 - e3), n3 = new xe(this.field, new Int32Array([this.field.subtract(0, r3), 1]));
            o2 = o2.multiply(n3);
          }
          let a2 = new xe(this.field, i2), h2 = this.runEuclideanAlgorithm(this.field.buildMonomial(e2, 1), a2, e2), c2 = h2[0], d2 = h2[1], u2 = this.findErrorLocations(c2), g2 = this.findErrorMagnitudes(d2, c2, u2);
          for (let e3 = 0; e3 < u2.length; e3++) {
            let r3 = t2.length - 1 - this.field.log(u2[e3]);
            if (r3 < 0) throw l.getChecksumInstance();
            t2[r3] = this.field.subtract(t2[r3], g2[e3]);
          }
          return u2.length;
        }
        runEuclideanAlgorithm(t2, e2, r2) {
          if (t2.getDegree() < e2.getDegree()) {
            let r3 = t2;
            t2 = e2, e2 = r3;
          }
          let n2 = t2, i2 = e2, s2 = this.field.getZero(), o2 = this.field.getOne();
          for (; i2.getDegree() >= Math.round(r2 / 2); ) {
            let t3 = n2, e3 = s2;
            if (n2 = i2, s2 = o2, n2.isZero()) throw l.getChecksumInstance();
            i2 = t3;
            let r3 = this.field.getZero(), a3 = n2.getCoefficient(n2.getDegree()), h3 = this.field.inverse(a3);
            for (; i2.getDegree() >= n2.getDegree() && !i2.isZero(); ) {
              let t4 = i2.getDegree() - n2.getDegree(), e4 = this.field.multiply(i2.getCoefficient(i2.getDegree()), h3);
              r3 = r3.add(this.field.buildMonomial(t4, e4)), i2 = i2.subtract(n2.multiplyByMonomial(t4, e4));
            }
            o2 = r3.multiply(s2).subtract(e3).negative();
          }
          let a2 = o2.getCoefficient(0);
          if (0 === a2) throw l.getChecksumInstance();
          let h2 = this.field.inverse(a2);
          return [o2.multiply(h2), i2.multiply(h2)];
        }
        findErrorLocations(t2) {
          let e2 = t2.getDegree(), r2 = new Int32Array(e2), n2 = 0;
          for (let i2 = 1; i2 < this.field.getSize() && n2 < e2; i2++) 0 === t2.evaluateAt(i2) && (r2[n2] = this.field.inverse(i2), n2++);
          if (n2 !== e2) throw l.getChecksumInstance();
          return r2;
        }
        findErrorMagnitudes(t2, e2, r2) {
          let n2 = e2.getDegree(), i2 = new Int32Array(n2);
          for (let t3 = 1; t3 <= n2; t3++) i2[n2 - t3] = this.field.multiply(t3, e2.getCoefficient(t3));
          let s2 = new xe(this.field, i2), o2 = r2.length, a2 = new Int32Array(o2);
          for (let e3 = 0; e3 < o2; e3++) {
            let n3 = this.field.inverse(r2[e3]), i3 = this.field.subtract(0, t2.evaluateAt(n3)), o3 = this.field.inverse(s2.evaluateAt(n3));
            a2[e3] = this.field.multiply(i3, o3);
          }
          return a2;
        }
      }
      class Xe {
        constructor(t2, e2, r2, n2, i2) {
          t2 instanceof Xe ? this.constructor_2(t2) : this.constructor_1(t2, e2, r2, n2, i2);
        }
        constructor_1(t2, e2, r2, n2, i2) {
          const s2 = null == e2 || null == r2, o2 = null == n2 || null == i2;
          if (s2 && o2) throw new N();
          s2 ? (e2 = new nt(0, n2.getY()), r2 = new nt(0, i2.getY())) : o2 && (n2 = new nt(t2.getWidth() - 1, e2.getY()), i2 = new nt(t2.getWidth() - 1, r2.getY())), this.image = t2, this.topLeft = e2, this.bottomLeft = r2, this.topRight = n2, this.bottomRight = i2, this.minX = Math.trunc(Math.min(e2.getX(), r2.getX())), this.maxX = Math.trunc(Math.max(n2.getX(), i2.getX())), this.minY = Math.trunc(Math.min(e2.getY(), n2.getY())), this.maxY = Math.trunc(Math.max(r2.getY(), i2.getY()));
        }
        constructor_2(t2) {
          this.image = t2.image, this.topLeft = t2.getTopLeft(), this.bottomLeft = t2.getBottomLeft(), this.topRight = t2.getTopRight(), this.bottomRight = t2.getBottomRight(), this.minX = t2.getMinX(), this.maxX = t2.getMaxX(), this.minY = t2.getMinY(), this.maxY = t2.getMaxY();
        }
        static merge(t2, e2) {
          return null == t2 ? e2 : null == e2 ? t2 : new Xe(t2.image, t2.topLeft, t2.bottomLeft, e2.topRight, e2.bottomRight);
        }
        addMissingRows(t2, e2, r2) {
          let n2 = this.topLeft, i2 = this.bottomLeft, s2 = this.topRight, o2 = this.bottomRight;
          if (t2 > 0) {
            let e3 = r2 ? this.topLeft : this.topRight, i3 = Math.trunc(e3.getY() - t2);
            i3 < 0 && (i3 = 0);
            let o3 = new nt(e3.getX(), i3);
            r2 ? n2 = o3 : s2 = o3;
          }
          if (e2 > 0) {
            let t3 = r2 ? this.bottomLeft : this.bottomRight, n3 = Math.trunc(t3.getY() + e2);
            n3 >= this.image.getHeight() && (n3 = this.image.getHeight() - 1);
            let s3 = new nt(t3.getX(), n3);
            r2 ? i2 = s3 : o2 = s3;
          }
          return new Xe(this.image, n2, i2, s2, o2);
        }
        getMinX() {
          return this.minX;
        }
        getMaxX() {
          return this.maxX;
        }
        getMinY() {
          return this.minY;
        }
        getMaxY() {
          return this.maxY;
        }
        getTopLeft() {
          return this.topLeft;
        }
        getTopRight() {
          return this.topRight;
        }
        getBottomLeft() {
          return this.bottomLeft;
        }
        getBottomRight() {
          return this.bottomRight;
        }
      }
      class Ge {
        constructor(t2, e2, r2, n2) {
          this.columnCount = t2, this.errorCorrectionLevel = n2, this.rowCountUpperPart = e2, this.rowCountLowerPart = r2, this.rowCount = e2 + r2;
        }
        getColumnCount() {
          return this.columnCount;
        }
        getErrorCorrectionLevel() {
          return this.errorCorrectionLevel;
        }
        getRowCount() {
          return this.rowCount;
        }
        getRowCountUpperPart() {
          return this.rowCountUpperPart;
        }
        getRowCountLowerPart() {
          return this.rowCountLowerPart;
        }
      }
      class We {
        constructor() {
          this.buffer = "";
        }
        static form(t2, e2) {
          let r2 = -1;
          return t2.replace(/%(-)?(0?[0-9]+)?([.][0-9]+)?([#][0-9]+)?([scfpexd%])/g, function(t3, n2, i2, s2, o2, a2) {
            if ("%%" === t3) return "%";
            if (void 0 === e2[++r2]) return;
            t3 = s2 ? parseInt(s2.substr(1)) : void 0;
            let h2, l2 = o2 ? parseInt(o2.substr(1)) : void 0;
            switch (a2) {
              case "s":
                h2 = e2[r2];
                break;
              case "c":
                h2 = e2[r2][0];
                break;
              case "f":
                h2 = parseFloat(e2[r2]).toFixed(t3);
                break;
              case "p":
                h2 = parseFloat(e2[r2]).toPrecision(t3);
                break;
              case "e":
                h2 = parseFloat(e2[r2]).toExponential(t3);
                break;
              case "x":
                h2 = parseInt(e2[r2]).toString(l2 || 16);
                break;
              case "d":
                h2 = parseFloat(parseInt(e2[r2], l2 || 10).toPrecision(t3)).toFixed(0);
            }
            h2 = "object" == typeof h2 ? JSON.stringify(h2) : (+h2).toString(l2);
            let c2 = parseInt(i2), d2 = i2 && i2[0] + "" == "0" ? "0" : " ";
            for (; h2.length < c2; ) h2 = void 0 !== n2 ? h2 + d2 : d2 + h2;
            return h2;
          });
        }
        format(t2, ...e2) {
          this.buffer += We.form(t2, e2);
        }
        toString() {
          return this.buffer;
        }
      }
      class ze {
        constructor(t2) {
          this.boundingBox = new Xe(t2), this.codewords = new Array(t2.getMaxY() - t2.getMinY() + 1);
        }
        getCodewordNearby(t2) {
          let e2 = this.getCodeword(t2);
          if (null != e2) return e2;
          for (let r2 = 1; r2 < ze.MAX_NEARBY_DISTANCE; r2++) {
            let n2 = this.imageRowToCodewordIndex(t2) - r2;
            if (n2 >= 0 && (e2 = this.codewords[n2], null != e2)) return e2;
            if (n2 = this.imageRowToCodewordIndex(t2) + r2, n2 < this.codewords.length && (e2 = this.codewords[n2], null != e2)) return e2;
          }
          return null;
        }
        imageRowToCodewordIndex(t2) {
          return t2 - this.boundingBox.getMinY();
        }
        setCodeword(t2, e2) {
          this.codewords[this.imageRowToCodewordIndex(t2)] = e2;
        }
        getCodeword(t2) {
          return this.codewords[this.imageRowToCodewordIndex(t2)];
        }
        getBoundingBox() {
          return this.boundingBox;
        }
        getCodewords() {
          return this.codewords;
        }
        toString() {
          const t2 = new We();
          let e2 = 0;
          for (const r2 of this.codewords) null != r2 ? t2.format("%3d: %3d|%3d%n", e2++, r2.getRowNumber(), r2.getValue()) : t2.format("%3d:    |   %n", e2++);
          return t2.toString();
        }
      }
      ze.MAX_NEARBY_DISTANCE = 5;
      class Ye {
        constructor() {
          this.values = /* @__PURE__ */ new Map();
        }
        setValue(t2) {
          t2 = Math.trunc(t2);
          let e2 = this.values.get(t2);
          null == e2 && (e2 = 0), e2++, this.values.set(t2, e2);
        }
        getValue() {
          let t2 = -1, e2 = new Array();
          for (const [r2, n2] of this.values.entries()) {
            const i2 = { getKey: () => r2, getValue: () => n2 };
            i2.getValue() > t2 ? (t2 = i2.getValue(), e2 = [], e2.push(i2.getKey())) : i2.getValue() === t2 && e2.push(i2.getKey());
          }
          return Fe.toIntArray(e2);
        }
        getConfidence(t2) {
          return this.values.get(t2);
        }
      }
      class Ze extends ze {
        constructor(t2, e2) {
          super(t2), this._isLeft = e2;
        }
        setRowNumbers() {
          for (let t2 of this.getCodewords()) null != t2 && t2.setRowNumberAsRowIndicatorColumn();
        }
        adjustCompleteIndicatorColumnRowNumbers(t2) {
          let e2 = this.getCodewords();
          this.setRowNumbers(), this.removeIncorrectCodewords(e2, t2);
          let r2 = this.getBoundingBox(), n2 = this._isLeft ? r2.getTopLeft() : r2.getTopRight(), i2 = this._isLeft ? r2.getBottomLeft() : r2.getBottomRight(), s2 = this.imageRowToCodewordIndex(Math.trunc(n2.getY())), o2 = this.imageRowToCodewordIndex(Math.trunc(i2.getY())), a2 = -1, h2 = 1, l2 = 0;
          for (let r3 = s2; r3 < o2; r3++) {
            if (null == e2[r3]) continue;
            let n3 = e2[r3], i3 = n3.getRowNumber() - a2;
            if (0 === i3) l2++;
            else if (1 === i3) h2 = Math.max(h2, l2), l2 = 1, a2 = n3.getRowNumber();
            else if (i3 < 0 || n3.getRowNumber() >= t2.getRowCount() || i3 > r3) e2[r3] = null;
            else {
              let t3;
              t3 = h2 > 2 ? (h2 - 2) * i3 : i3;
              let s3 = t3 >= r3;
              for (let n4 = 1; n4 <= t3 && !s3; n4++) s3 = null != e2[r3 - n4];
              s3 ? e2[r3] = null : (a2 = n3.getRowNumber(), l2 = 1);
            }
          }
        }
        getRowHeights() {
          let t2 = this.getBarcodeMetadata();
          if (null == t2) return null;
          this.adjustIncompleteIndicatorColumnRowNumbers(t2);
          let e2 = new Int32Array(t2.getRowCount());
          for (let t3 of this.getCodewords()) if (null != t3) {
            let r2 = t3.getRowNumber();
            if (r2 >= e2.length) continue;
            e2[r2]++;
          }
          return e2;
        }
        adjustIncompleteIndicatorColumnRowNumbers(t2) {
          let e2 = this.getBoundingBox(), r2 = this._isLeft ? e2.getTopLeft() : e2.getTopRight(), n2 = this._isLeft ? e2.getBottomLeft() : e2.getBottomRight(), i2 = this.imageRowToCodewordIndex(Math.trunc(r2.getY())), s2 = this.imageRowToCodewordIndex(Math.trunc(n2.getY())), o2 = this.getCodewords(), a2 = -1;
          for (let e3 = i2; e3 < s2; e3++) {
            if (null == o2[e3]) continue;
            let r3 = o2[e3];
            r3.setRowNumberAsRowIndicatorColumn();
            let n3 = r3.getRowNumber() - a2;
            0 === n3 || (1 === n3 ? a2 = r3.getRowNumber() : r3.getRowNumber() >= t2.getRowCount() ? o2[e3] = null : a2 = r3.getRowNumber());
          }
        }
        getBarcodeMetadata() {
          let t2 = this.getCodewords(), e2 = new Ye(), r2 = new Ye(), n2 = new Ye(), i2 = new Ye();
          for (let s3 of t2) {
            if (null == s3) continue;
            s3.setRowNumberAsRowIndicatorColumn();
            let t3 = s3.getValue() % 30, o2 = s3.getRowNumber();
            switch (this._isLeft || (o2 += 2), o2 % 3) {
              case 0:
                r2.setValue(3 * t3 + 1);
                break;
              case 1:
                i2.setValue(t3 / 3), n2.setValue(t3 % 3);
                break;
              case 2:
                e2.setValue(t3 + 1);
            }
          }
          if (0 === e2.getValue().length || 0 === r2.getValue().length || 0 === n2.getValue().length || 0 === i2.getValue().length || e2.getValue()[0] < 1 || r2.getValue()[0] + n2.getValue()[0] < Fe.MIN_ROWS_IN_BARCODE || r2.getValue()[0] + n2.getValue()[0] > Fe.MAX_ROWS_IN_BARCODE) return null;
          let s2 = new Ge(e2.getValue()[0], r2.getValue()[0], n2.getValue()[0], i2.getValue()[0]);
          return this.removeIncorrectCodewords(t2, s2), s2;
        }
        removeIncorrectCodewords(t2, e2) {
          for (let r2 = 0; r2 < t2.length; r2++) {
            let n2 = t2[r2];
            if (null == t2[r2]) continue;
            let i2 = n2.getValue() % 30, s2 = n2.getRowNumber();
            if (s2 > e2.getRowCount()) t2[r2] = null;
            else switch (this._isLeft || (s2 += 2), s2 % 3) {
              case 0:
                3 * i2 + 1 !== e2.getRowCountUpperPart() && (t2[r2] = null);
                break;
              case 1:
                Math.trunc(i2 / 3) === e2.getErrorCorrectionLevel() && i2 % 3 === e2.getRowCountLowerPart() || (t2[r2] = null);
                break;
              case 2:
                i2 + 1 !== e2.getColumnCount() && (t2[r2] = null);
            }
          }
        }
        isLeft() {
          return this._isLeft;
        }
        toString() {
          return "IsLeft: " + this._isLeft + "\n" + super.toString();
        }
      }
      class Ke {
        constructor(t2, e2) {
          this.ADJUST_ROW_NUMBER_SKIP = 2, this.barcodeMetadata = t2, this.barcodeColumnCount = t2.getColumnCount(), this.boundingBox = e2, this.detectionResultColumns = new Array(this.barcodeColumnCount + 2);
        }
        getDetectionResultColumns() {
          this.adjustIndicatorColumnRowNumbers(this.detectionResultColumns[0]), this.adjustIndicatorColumnRowNumbers(this.detectionResultColumns[this.barcodeColumnCount + 1]);
          let t2, e2 = Fe.MAX_CODEWORDS_IN_BARCODE;
          do {
            t2 = e2, e2 = this.adjustRowNumbersAndGetCount();
          } while (e2 > 0 && e2 < t2);
          return this.detectionResultColumns;
        }
        adjustIndicatorColumnRowNumbers(t2) {
          null != t2 && t2.adjustCompleteIndicatorColumnRowNumbers(this.barcodeMetadata);
        }
        adjustRowNumbersAndGetCount() {
          let t2 = this.adjustRowNumbersByRow();
          if (0 === t2) return 0;
          for (let t3 = 1; t3 < this.barcodeColumnCount + 1; t3++) {
            let e2 = this.detectionResultColumns[t3].getCodewords();
            for (let r2 = 0; r2 < e2.length; r2++) null != e2[r2] && (e2[r2].hasValidRowNumber() || this.adjustRowNumbers(t3, r2, e2));
          }
          return t2;
        }
        adjustRowNumbersByRow() {
          return this.adjustRowNumbersFromBothRI(), this.adjustRowNumbersFromLRI() + this.adjustRowNumbersFromRRI();
        }
        adjustRowNumbersFromBothRI() {
          if (null == this.detectionResultColumns[0] || null == this.detectionResultColumns[this.barcodeColumnCount + 1]) return;
          let t2 = this.detectionResultColumns[0].getCodewords(), e2 = this.detectionResultColumns[this.barcodeColumnCount + 1].getCodewords();
          for (let r2 = 0; r2 < t2.length; r2++) if (null != t2[r2] && null != e2[r2] && t2[r2].getRowNumber() === e2[r2].getRowNumber()) for (let e3 = 1; e3 <= this.barcodeColumnCount; e3++) {
            let n2 = this.detectionResultColumns[e3].getCodewords()[r2];
            null != n2 && (n2.setRowNumber(t2[r2].getRowNumber()), n2.hasValidRowNumber() || (this.detectionResultColumns[e3].getCodewords()[r2] = null));
          }
        }
        adjustRowNumbersFromRRI() {
          if (null == this.detectionResultColumns[this.barcodeColumnCount + 1]) return 0;
          let t2 = 0, e2 = this.detectionResultColumns[this.barcodeColumnCount + 1].getCodewords();
          for (let r2 = 0; r2 < e2.length; r2++) {
            if (null == e2[r2]) continue;
            let n2 = e2[r2].getRowNumber(), i2 = 0;
            for (let e3 = this.barcodeColumnCount + 1; e3 > 0 && i2 < this.ADJUST_ROW_NUMBER_SKIP; e3--) {
              let s2 = this.detectionResultColumns[e3].getCodewords()[r2];
              null != s2 && (i2 = Ke.adjustRowNumberIfValid(n2, i2, s2), s2.hasValidRowNumber() || t2++);
            }
          }
          return t2;
        }
        adjustRowNumbersFromLRI() {
          if (null == this.detectionResultColumns[0]) return 0;
          let t2 = 0, e2 = this.detectionResultColumns[0].getCodewords();
          for (let r2 = 0; r2 < e2.length; r2++) {
            if (null == e2[r2]) continue;
            let n2 = e2[r2].getRowNumber(), i2 = 0;
            for (let e3 = 1; e3 < this.barcodeColumnCount + 1 && i2 < this.ADJUST_ROW_NUMBER_SKIP; e3++) {
              let s2 = this.detectionResultColumns[e3].getCodewords()[r2];
              null != s2 && (i2 = Ke.adjustRowNumberIfValid(n2, i2, s2), s2.hasValidRowNumber() || t2++);
            }
          }
          return t2;
        }
        static adjustRowNumberIfValid(t2, e2, r2) {
          return null == r2 || r2.hasValidRowNumber() || (r2.isValidRowNumber(t2) ? (r2.setRowNumber(t2), e2 = 0) : ++e2), e2;
        }
        adjustRowNumbers(t2, e2, r2) {
          if (null == this.detectionResultColumns[t2 - 1]) return;
          let n2 = r2[e2], i2 = this.detectionResultColumns[t2 - 1].getCodewords(), s2 = i2;
          null != this.detectionResultColumns[t2 + 1] && (s2 = this.detectionResultColumns[t2 + 1].getCodewords());
          let o2 = new Array(14);
          o2[2] = i2[e2], o2[3] = s2[e2], e2 > 0 && (o2[0] = r2[e2 - 1], o2[4] = i2[e2 - 1], o2[5] = s2[e2 - 1]), e2 > 1 && (o2[8] = r2[e2 - 2], o2[10] = i2[e2 - 2], o2[11] = s2[e2 - 2]), e2 < r2.length - 1 && (o2[1] = r2[e2 + 1], o2[6] = i2[e2 + 1], o2[7] = s2[e2 + 1]), e2 < r2.length - 2 && (o2[9] = r2[e2 + 2], o2[12] = i2[e2 + 2], o2[13] = s2[e2 + 2]);
          for (let t3 of o2) if (Ke.adjustRowNumber(n2, t3)) return;
        }
        static adjustRowNumber(t2, e2) {
          return null != e2 && (!(!e2.hasValidRowNumber() || e2.getBucket() !== t2.getBucket()) && (t2.setRowNumber(e2.getRowNumber()), true));
        }
        getBarcodeColumnCount() {
          return this.barcodeColumnCount;
        }
        getBarcodeRowCount() {
          return this.barcodeMetadata.getRowCount();
        }
        getBarcodeECLevel() {
          return this.barcodeMetadata.getErrorCorrectionLevel();
        }
        setBoundingBox(t2) {
          this.boundingBox = t2;
        }
        getBoundingBox() {
          return this.boundingBox;
        }
        setDetectionResultColumn(t2, e2) {
          this.detectionResultColumns[t2] = e2;
        }
        getDetectionResultColumn(t2) {
          return this.detectionResultColumns[t2];
        }
        toString() {
          let t2 = this.detectionResultColumns[0];
          null == t2 && (t2 = this.detectionResultColumns[this.barcodeColumnCount + 1]);
          let e2 = new We();
          for (let r2 = 0; r2 < t2.getCodewords().length; r2++) {
            e2.format("CW %3d:", r2);
            for (let t3 = 0; t3 < this.barcodeColumnCount + 2; t3++) {
              if (null == this.detectionResultColumns[t3]) {
                e2.format("    |   ");
                continue;
              }
              let n2 = this.detectionResultColumns[t3].getCodewords()[r2];
              null != n2 ? e2.format(" %3d|%3d", n2.getRowNumber(), n2.getValue()) : e2.format("    |   ");
            }
            e2.format("%n");
          }
          return e2.toString();
        }
      }
      class qe {
        constructor(t2, e2, r2, n2) {
          this.rowNumber = qe.BARCODE_ROW_UNKNOWN, this.startX = Math.trunc(t2), this.endX = Math.trunc(e2), this.bucket = Math.trunc(r2), this.value = Math.trunc(n2);
        }
        hasValidRowNumber() {
          return this.isValidRowNumber(this.rowNumber);
        }
        isValidRowNumber(t2) {
          return t2 !== qe.BARCODE_ROW_UNKNOWN && this.bucket === t2 % 3 * 3;
        }
        setRowNumberAsRowIndicatorColumn() {
          this.rowNumber = Math.trunc(3 * Math.trunc(this.value / 30) + Math.trunc(this.bucket / 3));
        }
        getWidth() {
          return this.endX - this.startX;
        }
        getStartX() {
          return this.startX;
        }
        getEndX() {
          return this.endX;
        }
        getBucket() {
          return this.bucket;
        }
        getValue() {
          return this.value;
        }
        getRowNumber() {
          return this.rowNumber;
        }
        setRowNumber(t2) {
          this.rowNumber = t2;
        }
        toString() {
          return this.rowNumber + "|" + this.value;
        }
      }
      qe.BARCODE_ROW_UNKNOWN = -1;
      class Qe {
        static initialize() {
          for (let t2 = 0; t2 < Fe.SYMBOL_TABLE.length; t2++) {
            let e2 = Fe.SYMBOL_TABLE[t2], r2 = 1 & e2;
            for (let n2 = 0; n2 < Fe.BARS_IN_MODULE; n2++) {
              let i2 = 0;
              for (; (1 & e2) === r2; ) i2 += 1, e2 >>= 1;
              r2 = 1 & e2, Qe.RATIOS_TABLE[t2] || (Qe.RATIOS_TABLE[t2] = new Array(Fe.BARS_IN_MODULE)), Qe.RATIOS_TABLE[t2][Fe.BARS_IN_MODULE - n2 - 1] = Math.fround(i2 / Fe.MODULES_IN_CODEWORD);
            }
          }
          this.bSymbolTableReady = true;
        }
        static getDecodedValue(t2) {
          let e2 = Qe.getDecodedCodewordValue(Qe.sampleBitCounts(t2));
          return -1 !== e2 ? e2 : Qe.getClosestDecodedValue(t2);
        }
        static sampleBitCounts(t2) {
          let e2 = et.sum(t2), r2 = new Int32Array(Fe.BARS_IN_MODULE), n2 = 0, i2 = 0;
          for (let s2 = 0; s2 < Fe.MODULES_IN_CODEWORD; s2++) {
            let o2 = e2 / (2 * Fe.MODULES_IN_CODEWORD) + s2 * e2 / Fe.MODULES_IN_CODEWORD;
            i2 + t2[n2] <= o2 && (i2 += t2[n2], n2++), r2[n2]++;
          }
          return r2;
        }
        static getDecodedCodewordValue(t2) {
          let e2 = Qe.getBitValue(t2);
          return -1 === Fe.getCodeword(e2) ? -1 : e2;
        }
        static getBitValue(t2) {
          let e2 = 0;
          for (let r2 = 0; r2 < t2.length; r2++) for (let n2 = 0; n2 < t2[r2]; n2++) e2 = e2 << 1 | (r2 % 2 == 0 ? 1 : 0);
          return Math.trunc(e2);
        }
        static getClosestDecodedValue(t2) {
          let e2 = et.sum(t2), r2 = new Array(Fe.BARS_IN_MODULE);
          if (e2 > 1) for (let n3 = 0; n3 < r2.length; n3++) r2[n3] = Math.fround(t2[n3] / e2);
          let n2 = rt.MAX_VALUE, i2 = -1;
          this.bSymbolTableReady || Qe.initialize();
          for (let t3 = 0; t3 < Qe.RATIOS_TABLE.length; t3++) {
            let e3 = 0, s2 = Qe.RATIOS_TABLE[t3];
            for (let t4 = 0; t4 < Fe.BARS_IN_MODULE; t4++) {
              let i3 = Math.fround(s2[t4] - r2[t4]);
              if (e3 += Math.fround(i3 * i3), e3 >= n2) break;
            }
            e3 < n2 && (n2 = e3, i2 = Fe.SYMBOL_TABLE[t3]);
          }
          return i2;
        }
      }
      Qe.bSymbolTableReady = false, Qe.RATIOS_TABLE = new Array(Fe.SYMBOL_TABLE.length).map((t2) => new Array(Fe.BARS_IN_MODULE));
      class je {
        constructor() {
          this.segmentCount = -1, this.fileSize = -1, this.timestamp = -1, this.checksum = -1;
        }
        getSegmentIndex() {
          return this.segmentIndex;
        }
        setSegmentIndex(t2) {
          this.segmentIndex = t2;
        }
        getFileId() {
          return this.fileId;
        }
        setFileId(t2) {
          this.fileId = t2;
        }
        getOptionalData() {
          return this.optionalData;
        }
        setOptionalData(t2) {
          this.optionalData = t2;
        }
        isLastSegment() {
          return this.lastSegment;
        }
        setLastSegment(t2) {
          this.lastSegment = t2;
        }
        getSegmentCount() {
          return this.segmentCount;
        }
        setSegmentCount(t2) {
          this.segmentCount = t2;
        }
        getSender() {
          return this.sender || null;
        }
        setSender(t2) {
          this.sender = t2;
        }
        getAddressee() {
          return this.addressee || null;
        }
        setAddressee(t2) {
          this.addressee = t2;
        }
        getFileName() {
          return this.fileName;
        }
        setFileName(t2) {
          this.fileName = t2;
        }
        getFileSize() {
          return this.fileSize;
        }
        setFileSize(t2) {
          this.fileSize = t2;
        }
        getChecksum() {
          return this.checksum;
        }
        setChecksum(t2) {
          this.checksum = t2;
        }
        getTimestamp() {
          return this.timestamp;
        }
        setTimestamp(t2) {
          this.timestamp = t2;
        }
      }
      class Je {
        static parseLong(t2, e2 = void 0) {
          return parseInt(t2, e2);
        }
      }
      class $e extends s {
      }
      $e.kind = "NullPointerException";
      class tr {
        writeBytes(t2) {
          this.writeBytesOffset(t2, 0, t2.length);
        }
        writeBytesOffset(t2, e2, r2) {
          if (null == t2) throw new $e();
          if (e2 < 0 || e2 > t2.length || r2 < 0 || e2 + r2 > t2.length || e2 + r2 < 0) throw new u();
          if (0 !== r2) for (let n2 = 0; n2 < r2; n2++) this.write(t2[e2 + n2]);
        }
        flush() {
        }
        close() {
        }
      }
      class er extends s {
      }
      class rr extends tr {
        constructor(t2 = 32) {
          if (super(), this.count = 0, t2 < 0) throw new a("Negative initial size: " + t2);
          this.buf = new Uint8Array(t2);
        }
        ensureCapacity(t2) {
          t2 - this.buf.length > 0 && this.grow(t2);
        }
        grow(t2) {
          let e2 = this.buf.length << 1;
          if (e2 - t2 < 0 && (e2 = t2), e2 < 0) {
            if (t2 < 0) throw new er();
            e2 = w.MAX_VALUE;
          }
          this.buf = f.copyOfUint8Array(this.buf, e2);
        }
        write(t2) {
          this.ensureCapacity(this.count + 1), this.buf[this.count] = t2, this.count += 1;
        }
        writeBytesOffset(t2, e2, r2) {
          if (e2 < 0 || e2 > t2.length || r2 < 0 || e2 + r2 - t2.length > 0) throw new u();
          this.ensureCapacity(this.count + r2), d.arraycopy(t2, e2, this.buf, this.count, r2), this.count += r2;
        }
        writeTo(t2) {
          t2.writeBytesOffset(this.buf, 0, this.count);
        }
        reset() {
          this.count = 0;
        }
        toByteArray() {
          return f.copyOfUint8Array(this.buf, this.count);
        }
        size() {
          return this.count;
        }
        toString(t2) {
          return t2 ? "string" == typeof t2 ? this.toString_string(t2) : this.toString_number(t2) : this.toString_void();
        }
        toString_void() {
          return new String(this.buf).toString();
        }
        toString_string(t2) {
          return new String(this.buf).toString();
        }
        toString_number(t2) {
          return new String(this.buf).toString();
        }
        close() {
        }
      }
      function nr() {
        if ("undefined" != typeof window) return window.BigInt || null;
        if ("undefined" != typeof global) return global.BigInt || null;
        if ("undefined" != typeof self) return self.BigInt || null;
        throw new Error("Can't search globals for BigInt!");
      }
      let ir;
      function sr(t2) {
        if (void 0 === ir && (ir = nr()), null === ir) throw new Error("BigInt is not supported!");
        return ir(t2);
      }
      !function(t2) {
        t2[t2.ALPHA = 0] = "ALPHA", t2[t2.LOWER = 1] = "LOWER", t2[t2.MIXED = 2] = "MIXED", t2[t2.PUNCT = 3] = "PUNCT", t2[t2.ALPHA_SHIFT = 4] = "ALPHA_SHIFT", t2[t2.PUNCT_SHIFT = 5] = "PUNCT_SHIFT";
      }(W || (W = {}));
      class or {
        static decode(t2, e2) {
          let r2 = new T(""), n2 = I.ISO8859_1;
          r2.enableDecoding(n2);
          let i2 = 1, s2 = t2[i2++], o2 = new je();
          for (; i2 < t2[0]; ) {
            switch (s2) {
              case or.TEXT_COMPACTION_MODE_LATCH:
                i2 = or.textCompaction(t2, i2, r2);
                break;
              case or.BYTE_COMPACTION_MODE_LATCH:
              case or.BYTE_COMPACTION_MODE_LATCH_6:
                i2 = or.byteCompaction(s2, t2, n2, i2, r2);
                break;
              case or.MODE_SHIFT_TO_BYTE_COMPACTION_MODE:
                r2.append(t2[i2++]);
                break;
              case or.NUMERIC_COMPACTION_MODE_LATCH:
                i2 = or.numericCompaction(t2, i2, r2);
                break;
              case or.ECI_CHARSET:
                I.getCharacterSetECIByValue(t2[i2++]);
                break;
              case or.ECI_GENERAL_PURPOSE:
                i2 += 2;
                break;
              case or.ECI_USER_DEFINED:
                i2++;
                break;
              case or.BEGIN_MACRO_PDF417_CONTROL_BLOCK:
                i2 = or.decodeMacroBlock(t2, i2, o2);
                break;
              case or.BEGIN_MACRO_PDF417_OPTIONAL_FIELD:
              case or.MACRO_PDF417_TERMINATOR:
                throw new m();
              default:
                i2--, i2 = or.textCompaction(t2, i2, r2);
            }
            if (!(i2 < t2.length)) throw m.getFormatInstance();
            s2 = t2[i2++];
          }
          if (0 === r2.length()) throw m.getFormatInstance();
          let a2 = new Y(null, r2.toString(), null, e2);
          return a2.setOther(o2), a2;
        }
        static decodeMacroBlock(t2, e2, r2) {
          if (e2 + or.NUMBER_OF_SEQUENCE_CODEWORDS > t2[0]) throw m.getFormatInstance();
          let n2 = new Int32Array(or.NUMBER_OF_SEQUENCE_CODEWORDS);
          for (let r3 = 0; r3 < or.NUMBER_OF_SEQUENCE_CODEWORDS; r3++, e2++) n2[r3] = t2[e2];
          r2.setSegmentIndex(w.parseInt(or.decodeBase900toBase10(n2, or.NUMBER_OF_SEQUENCE_CODEWORDS)));
          let i2 = new T();
          e2 = or.textCompaction(t2, e2, i2), r2.setFileId(i2.toString());
          let s2 = -1;
          for (t2[e2] === or.BEGIN_MACRO_PDF417_OPTIONAL_FIELD && (s2 = e2 + 1); e2 < t2[0]; ) switch (t2[e2]) {
            case or.BEGIN_MACRO_PDF417_OPTIONAL_FIELD:
              switch (t2[++e2]) {
                case or.MACRO_PDF417_OPTIONAL_FIELD_FILE_NAME:
                  let n3 = new T();
                  e2 = or.textCompaction(t2, e2 + 1, n3), r2.setFileName(n3.toString());
                  break;
                case or.MACRO_PDF417_OPTIONAL_FIELD_SENDER:
                  let i3 = new T();
                  e2 = or.textCompaction(t2, e2 + 1, i3), r2.setSender(i3.toString());
                  break;
                case or.MACRO_PDF417_OPTIONAL_FIELD_ADDRESSEE:
                  let s3 = new T();
                  e2 = or.textCompaction(t2, e2 + 1, s3), r2.setAddressee(s3.toString());
                  break;
                case or.MACRO_PDF417_OPTIONAL_FIELD_SEGMENT_COUNT:
                  let o2 = new T();
                  e2 = or.numericCompaction(t2, e2 + 1, o2), r2.setSegmentCount(w.parseInt(o2.toString()));
                  break;
                case or.MACRO_PDF417_OPTIONAL_FIELD_TIME_STAMP:
                  let a2 = new T();
                  e2 = or.numericCompaction(t2, e2 + 1, a2), r2.setTimestamp(Je.parseLong(a2.toString()));
                  break;
                case or.MACRO_PDF417_OPTIONAL_FIELD_CHECKSUM:
                  let h2 = new T();
                  e2 = or.numericCompaction(t2, e2 + 1, h2), r2.setChecksum(w.parseInt(h2.toString()));
                  break;
                case or.MACRO_PDF417_OPTIONAL_FIELD_FILE_SIZE:
                  let l2 = new T();
                  e2 = or.numericCompaction(t2, e2 + 1, l2), r2.setFileSize(Je.parseLong(l2.toString()));
                  break;
                default:
                  throw m.getFormatInstance();
              }
              break;
            case or.MACRO_PDF417_TERMINATOR:
              e2++, r2.setLastSegment(true);
              break;
            default:
              throw m.getFormatInstance();
          }
          if (-1 !== s2) {
            let n3 = e2 - s2;
            r2.isLastSegment() && n3--, r2.setOptionalData(f.copyOfRange(t2, s2, s2 + n3));
          }
          return e2;
        }
        static textCompaction(t2, e2, r2) {
          let n2 = new Int32Array(2 * (t2[0] - e2)), i2 = new Int32Array(2 * (t2[0] - e2)), s2 = 0, o2 = false;
          for (; e2 < t2[0] && !o2; ) {
            let r3 = t2[e2++];
            if (r3 < or.TEXT_COMPACTION_MODE_LATCH) n2[s2] = r3 / 30, n2[s2 + 1] = r3 % 30, s2 += 2;
            else switch (r3) {
              case or.TEXT_COMPACTION_MODE_LATCH:
                n2[s2++] = or.TEXT_COMPACTION_MODE_LATCH;
                break;
              case or.BYTE_COMPACTION_MODE_LATCH:
              case or.BYTE_COMPACTION_MODE_LATCH_6:
              case or.NUMERIC_COMPACTION_MODE_LATCH:
              case or.BEGIN_MACRO_PDF417_CONTROL_BLOCK:
              case or.BEGIN_MACRO_PDF417_OPTIONAL_FIELD:
              case or.MACRO_PDF417_TERMINATOR:
                e2--, o2 = true;
                break;
              case or.MODE_SHIFT_TO_BYTE_COMPACTION_MODE:
                n2[s2] = or.MODE_SHIFT_TO_BYTE_COMPACTION_MODE, r3 = t2[e2++], i2[s2] = r3, s2++;
            }
          }
          return or.decodeTextCompaction(n2, i2, s2, r2), e2;
        }
        static decodeTextCompaction(t2, e2, r2, n2) {
          let i2 = W.ALPHA, s2 = W.ALPHA, o2 = 0;
          for (; o2 < r2; ) {
            let r3 = t2[o2], a2 = "";
            switch (i2) {
              case W.ALPHA:
                if (r3 < 26) a2 = String.fromCharCode(65 + r3);
                else switch (r3) {
                  case 26:
                    a2 = " ";
                    break;
                  case or.LL:
                    i2 = W.LOWER;
                    break;
                  case or.ML:
                    i2 = W.MIXED;
                    break;
                  case or.PS:
                    s2 = i2, i2 = W.PUNCT_SHIFT;
                    break;
                  case or.MODE_SHIFT_TO_BYTE_COMPACTION_MODE:
                    n2.append(e2[o2]);
                    break;
                  case or.TEXT_COMPACTION_MODE_LATCH:
                    i2 = W.ALPHA;
                }
                break;
              case W.LOWER:
                if (r3 < 26) a2 = String.fromCharCode(97 + r3);
                else switch (r3) {
                  case 26:
                    a2 = " ";
                    break;
                  case or.AS:
                    s2 = i2, i2 = W.ALPHA_SHIFT;
                    break;
                  case or.ML:
                    i2 = W.MIXED;
                    break;
                  case or.PS:
                    s2 = i2, i2 = W.PUNCT_SHIFT;
                    break;
                  case or.MODE_SHIFT_TO_BYTE_COMPACTION_MODE:
                    n2.append(e2[o2]);
                    break;
                  case or.TEXT_COMPACTION_MODE_LATCH:
                    i2 = W.ALPHA;
                }
                break;
              case W.MIXED:
                if (r3 < or.PL) a2 = or.MIXED_CHARS[r3];
                else switch (r3) {
                  case or.PL:
                    i2 = W.PUNCT;
                    break;
                  case 26:
                    a2 = " ";
                    break;
                  case or.LL:
                    i2 = W.LOWER;
                    break;
                  case or.AL:
                    i2 = W.ALPHA;
                    break;
                  case or.PS:
                    s2 = i2, i2 = W.PUNCT_SHIFT;
                    break;
                  case or.MODE_SHIFT_TO_BYTE_COMPACTION_MODE:
                    n2.append(e2[o2]);
                    break;
                  case or.TEXT_COMPACTION_MODE_LATCH:
                    i2 = W.ALPHA;
                }
                break;
              case W.PUNCT:
                if (r3 < or.PAL) a2 = or.PUNCT_CHARS[r3];
                else switch (r3) {
                  case or.PAL:
                    i2 = W.ALPHA;
                    break;
                  case or.MODE_SHIFT_TO_BYTE_COMPACTION_MODE:
                    n2.append(e2[o2]);
                    break;
                  case or.TEXT_COMPACTION_MODE_LATCH:
                    i2 = W.ALPHA;
                }
                break;
              case W.ALPHA_SHIFT:
                if (i2 = s2, r3 < 26) a2 = String.fromCharCode(65 + r3);
                else switch (r3) {
                  case 26:
                    a2 = " ";
                    break;
                  case or.TEXT_COMPACTION_MODE_LATCH:
                    i2 = W.ALPHA;
                }
                break;
              case W.PUNCT_SHIFT:
                if (i2 = s2, r3 < or.PAL) a2 = or.PUNCT_CHARS[r3];
                else switch (r3) {
                  case or.PAL:
                    i2 = W.ALPHA;
                    break;
                  case or.MODE_SHIFT_TO_BYTE_COMPACTION_MODE:
                    n2.append(e2[o2]);
                    break;
                  case or.TEXT_COMPACTION_MODE_LATCH:
                    i2 = W.ALPHA;
                }
            }
            "" !== a2 && n2.append(a2), o2++;
          }
        }
        static byteCompaction(t2, e2, r2, n2, i2) {
          let s2 = new rr(), o2 = 0, a2 = 0, h2 = false;
          switch (t2) {
            case or.BYTE_COMPACTION_MODE_LATCH:
              let t3 = new Int32Array(6), r3 = e2[n2++];
              for (; n2 < e2[0] && !h2; ) switch (t3[o2++] = r3, a2 = 900 * a2 + r3, r3 = e2[n2++], r3) {
                case or.TEXT_COMPACTION_MODE_LATCH:
                case or.BYTE_COMPACTION_MODE_LATCH:
                case or.NUMERIC_COMPACTION_MODE_LATCH:
                case or.BYTE_COMPACTION_MODE_LATCH_6:
                case or.BEGIN_MACRO_PDF417_CONTROL_BLOCK:
                case or.BEGIN_MACRO_PDF417_OPTIONAL_FIELD:
                case or.MACRO_PDF417_TERMINATOR:
                  n2--, h2 = true;
                  break;
                default:
                  if (o2 % 5 == 0 && o2 > 0) {
                    for (let t4 = 0; t4 < 6; ++t4) s2.write(Number(sr(a2) >> sr(8 * (5 - t4))));
                    a2 = 0, o2 = 0;
                  }
              }
              n2 === e2[0] && r3 < or.TEXT_COMPACTION_MODE_LATCH && (t3[o2++] = r3);
              for (let e3 = 0; e3 < o2; e3++) s2.write(t3[e3]);
              break;
            case or.BYTE_COMPACTION_MODE_LATCH_6:
              for (; n2 < e2[0] && !h2; ) {
                let t4 = e2[n2++];
                if (t4 < or.TEXT_COMPACTION_MODE_LATCH) o2++, a2 = 900 * a2 + t4;
                else switch (t4) {
                  case or.TEXT_COMPACTION_MODE_LATCH:
                  case or.BYTE_COMPACTION_MODE_LATCH:
                  case or.NUMERIC_COMPACTION_MODE_LATCH:
                  case or.BYTE_COMPACTION_MODE_LATCH_6:
                  case or.BEGIN_MACRO_PDF417_CONTROL_BLOCK:
                  case or.BEGIN_MACRO_PDF417_OPTIONAL_FIELD:
                  case or.MACRO_PDF417_TERMINATOR:
                    n2--, h2 = true;
                }
                if (o2 % 5 == 0 && o2 > 0) {
                  for (let t5 = 0; t5 < 6; ++t5) s2.write(Number(sr(a2) >> sr(8 * (5 - t5))));
                  a2 = 0, o2 = 0;
                }
              }
          }
          return i2.append(S.decode(s2.toByteArray(), r2)), n2;
        }
        static numericCompaction(t2, e2, r2) {
          let n2 = 0, i2 = false, s2 = new Int32Array(or.MAX_NUMERIC_CODEWORDS);
          for (; e2 < t2[0] && !i2; ) {
            let o2 = t2[e2++];
            if (e2 === t2[0] && (i2 = true), o2 < or.TEXT_COMPACTION_MODE_LATCH) s2[n2] = o2, n2++;
            else switch (o2) {
              case or.TEXT_COMPACTION_MODE_LATCH:
              case or.BYTE_COMPACTION_MODE_LATCH:
              case or.BYTE_COMPACTION_MODE_LATCH_6:
              case or.BEGIN_MACRO_PDF417_CONTROL_BLOCK:
              case or.BEGIN_MACRO_PDF417_OPTIONAL_FIELD:
              case or.MACRO_PDF417_TERMINATOR:
                e2--, i2 = true;
            }
            (n2 % or.MAX_NUMERIC_CODEWORDS == 0 || o2 === or.NUMERIC_COMPACTION_MODE_LATCH || i2) && n2 > 0 && (r2.append(or.decodeBase900toBase10(s2, n2)), n2 = 0);
          }
          return e2;
        }
        static decodeBase900toBase10(t2, e2) {
          let r2 = sr(0);
          for (let n3 = 0; n3 < e2; n3++) r2 += or.EXP900[e2 - n3 - 1] * sr(t2[n3]);
          let n2 = r2.toString();
          if ("1" !== n2.charAt(0)) throw new m();
          return n2.substring(1);
        }
      }
      or.TEXT_COMPACTION_MODE_LATCH = 900, or.BYTE_COMPACTION_MODE_LATCH = 901, or.NUMERIC_COMPACTION_MODE_LATCH = 902, or.BYTE_COMPACTION_MODE_LATCH_6 = 924, or.ECI_USER_DEFINED = 925, or.ECI_GENERAL_PURPOSE = 926, or.ECI_CHARSET = 927, or.BEGIN_MACRO_PDF417_CONTROL_BLOCK = 928, or.BEGIN_MACRO_PDF417_OPTIONAL_FIELD = 923, or.MACRO_PDF417_TERMINATOR = 922, or.MODE_SHIFT_TO_BYTE_COMPACTION_MODE = 913, or.MAX_NUMERIC_CODEWORDS = 15, or.MACRO_PDF417_OPTIONAL_FIELD_FILE_NAME = 0, or.MACRO_PDF417_OPTIONAL_FIELD_SEGMENT_COUNT = 1, or.MACRO_PDF417_OPTIONAL_FIELD_TIME_STAMP = 2, or.MACRO_PDF417_OPTIONAL_FIELD_SENDER = 3, or.MACRO_PDF417_OPTIONAL_FIELD_ADDRESSEE = 4, or.MACRO_PDF417_OPTIONAL_FIELD_FILE_SIZE = 5, or.MACRO_PDF417_OPTIONAL_FIELD_CHECKSUM = 6, or.PL = 25, or.LL = 27, or.AS = 27, or.ML = 28, or.AL = 28, or.PS = 29, or.PAL = 29, or.PUNCT_CHARS = ";<>@[\\]_`~!\r	,:\n-.$/\"|*()?{}'", or.MIXED_CHARS = "0123456789&\r	,:#-.$/+%*=^", or.EXP900 = nr() ? function() {
        let t2 = [];
        t2[0] = sr(1);
        let e2 = sr(900);
        t2[1] = e2;
        for (let r2 = 2; r2 < 16; r2++) t2[r2] = t2[r2 - 1] * e2;
        return t2;
      }() : [], or.NUMBER_OF_SEQUENCE_CODEWORDS = 2;
      class ar {
        constructor() {
        }
        static decode(t2, e2, r2, n2, i2, s2, o2) {
          let a2, h2 = new Xe(t2, e2, r2, n2, i2), l2 = null, c2 = null;
          for (let r3 = true; ; r3 = false) {
            if (null != e2 && (l2 = ar.getRowIndicatorColumn(t2, h2, e2, true, s2, o2)), null != n2 && (c2 = ar.getRowIndicatorColumn(t2, h2, n2, false, s2, o2)), a2 = ar.merge(l2, c2), null == a2) throw N.getNotFoundInstance();
            let i3 = a2.getBoundingBox();
            if (!r3 || null == i3 || !(i3.getMinY() < h2.getMinY() || i3.getMaxY() > h2.getMaxY())) break;
            h2 = i3;
          }
          a2.setBoundingBox(h2);
          let d2 = a2.getBarcodeColumnCount() + 1;
          a2.setDetectionResultColumn(0, l2), a2.setDetectionResultColumn(d2, c2);
          let u2 = null != l2;
          for (let e3 = 1; e3 <= d2; e3++) {
            let r3, n3 = u2 ? e3 : d2 - e3;
            if (void 0 !== a2.getDetectionResultColumn(n3)) continue;
            r3 = 0 === n3 || n3 === d2 ? new Ze(h2, 0 === n3) : new ze(h2), a2.setDetectionResultColumn(n3, r3);
            let i3 = -1, l3 = i3;
            for (let e4 = h2.getMinY(); e4 <= h2.getMaxY(); e4++) {
              if (i3 = ar.getStartColumn(a2, n3, e4, u2), i3 < 0 || i3 > h2.getMaxX()) {
                if (-1 === l3) continue;
                i3 = l3;
              }
              let c3 = ar.detectCodeword(t2, h2.getMinX(), h2.getMaxX(), u2, i3, e4, s2, o2);
              null != c3 && (r3.setCodeword(e4, c3), l3 = i3, s2 = Math.min(s2, c3.getWidth()), o2 = Math.max(o2, c3.getWidth()));
            }
          }
          return ar.createDecoderResult(a2);
        }
        static merge(t2, e2) {
          if (null == t2 && null == e2) return null;
          let r2 = ar.getBarcodeMetadata(t2, e2);
          if (null == r2) return null;
          let n2 = Xe.merge(ar.adjustBoundingBox(t2), ar.adjustBoundingBox(e2));
          return new Ke(r2, n2);
        }
        static adjustBoundingBox(t2) {
          if (null == t2) return null;
          let e2 = t2.getRowHeights();
          if (null == e2) return null;
          let r2 = ar.getMax(e2), n2 = 0;
          for (let t3 of e2) if (n2 += r2 - t3, t3 > 0) break;
          let i2 = t2.getCodewords();
          for (let t3 = 0; n2 > 0 && null == i2[t3]; t3++) n2--;
          let s2 = 0;
          for (let t3 = e2.length - 1; t3 >= 0 && (s2 += r2 - e2[t3], !(e2[t3] > 0)); t3--) ;
          for (let t3 = i2.length - 1; s2 > 0 && null == i2[t3]; t3--) s2--;
          return t2.getBoundingBox().addMissingRows(n2, s2, t2.isLeft());
        }
        static getMax(t2) {
          let e2 = -1;
          for (let r2 of t2) e2 = Math.max(e2, r2);
          return e2;
        }
        static getBarcodeMetadata(t2, e2) {
          let r2, n2;
          return null == t2 || null == (r2 = t2.getBarcodeMetadata()) ? null == e2 ? null : e2.getBarcodeMetadata() : null == e2 || null == (n2 = e2.getBarcodeMetadata()) ? r2 : r2.getColumnCount() !== n2.getColumnCount() && r2.getErrorCorrectionLevel() !== n2.getErrorCorrectionLevel() && r2.getRowCount() !== n2.getRowCount() ? null : r2;
        }
        static getRowIndicatorColumn(t2, e2, r2, n2, i2, s2) {
          let o2 = new Ze(e2, n2);
          for (let a2 = 0; a2 < 2; a2++) {
            let h2 = 0 === a2 ? 1 : -1, l2 = Math.trunc(Math.trunc(r2.getX()));
            for (let a3 = Math.trunc(Math.trunc(r2.getY())); a3 <= e2.getMaxY() && a3 >= e2.getMinY(); a3 += h2) {
              let e3 = ar.detectCodeword(t2, 0, t2.getWidth(), n2, l2, a3, i2, s2);
              null != e3 && (o2.setCodeword(a3, e3), l2 = n2 ? e3.getStartX() : e3.getEndX());
            }
          }
          return o2;
        }
        static adjustCodewordCount(t2, e2) {
          let r2 = e2[0][1], n2 = r2.getValue(), i2 = t2.getBarcodeColumnCount() * t2.getBarcodeRowCount() - ar.getNumberOfECCodeWords(t2.getBarcodeECLevel());
          if (0 === n2.length) {
            if (i2 < 1 || i2 > Fe.MAX_CODEWORDS_IN_BARCODE) throw N.getNotFoundInstance();
            r2.setValue(i2);
          } else n2[0] !== i2 && r2.setValue(i2);
        }
        static createDecoderResult(t2) {
          let e2 = ar.createBarcodeMatrix(t2);
          ar.adjustCodewordCount(t2, e2);
          let r2 = new Array(), n2 = new Int32Array(t2.getBarcodeRowCount() * t2.getBarcodeColumnCount()), i2 = [], s2 = new Array();
          for (let o3 = 0; o3 < t2.getBarcodeRowCount(); o3++) for (let a2 = 0; a2 < t2.getBarcodeColumnCount(); a2++) {
            let h2 = e2[o3][a2 + 1].getValue(), l2 = o3 * t2.getBarcodeColumnCount() + a2;
            0 === h2.length ? r2.push(l2) : 1 === h2.length ? n2[l2] = h2[0] : (s2.push(l2), i2.push(h2));
          }
          let o2 = new Array(i2.length);
          for (let t3 = 0; t3 < o2.length; t3++) o2[t3] = i2[t3];
          return ar.createDecoderResultFromAmbiguousValues(t2.getBarcodeECLevel(), n2, Fe.toIntArray(r2), Fe.toIntArray(s2), o2);
        }
        static createDecoderResultFromAmbiguousValues(t2, e2, r2, n2, i2) {
          let s2 = new Int32Array(n2.length), o2 = 100;
          for (; o2-- > 0; ) {
            for (let t3 = 0; t3 < s2.length; t3++) e2[n2[t3]] = i2[t3][s2[t3]];
            try {
              return ar.decodeCodewords(e2, t2, r2);
            } catch (t3) {
              if (!(t3 instanceof l)) throw t3;
            }
            if (0 === s2.length) throw l.getChecksumInstance();
            for (let t3 = 0; t3 < s2.length; t3++) {
              if (s2[t3] < i2[t3].length - 1) {
                s2[t3]++;
                break;
              }
              if (s2[t3] = 0, t3 === s2.length - 1) throw l.getChecksumInstance();
            }
          }
          throw l.getChecksumInstance();
        }
        static createBarcodeMatrix(t2) {
          let e2 = Array.from({ length: t2.getBarcodeRowCount() }, () => new Array(t2.getBarcodeColumnCount() + 2));
          for (let t3 = 0; t3 < e2.length; t3++) for (let r3 = 0; r3 < e2[t3].length; r3++) e2[t3][r3] = new Ye();
          let r2 = 0;
          for (let n2 of t2.getDetectionResultColumns()) {
            if (null != n2) {
              for (let t3 of n2.getCodewords()) if (null != t3) {
                let n3 = t3.getRowNumber();
                if (n3 >= 0) {
                  if (n3 >= e2.length) continue;
                  e2[n3][r2].setValue(t3.getValue());
                }
              }
            }
            r2++;
          }
          return e2;
        }
        static isValidBarcodeColumn(t2, e2) {
          return e2 >= 0 && e2 <= t2.getBarcodeColumnCount() + 1;
        }
        static getStartColumn(t2, e2, r2, n2) {
          let i2 = n2 ? 1 : -1, s2 = null;
          if (ar.isValidBarcodeColumn(t2, e2 - i2) && (s2 = t2.getDetectionResultColumn(e2 - i2).getCodeword(r2)), null != s2) return n2 ? s2.getEndX() : s2.getStartX();
          if (s2 = t2.getDetectionResultColumn(e2).getCodewordNearby(r2), null != s2) return n2 ? s2.getStartX() : s2.getEndX();
          if (ar.isValidBarcodeColumn(t2, e2 - i2) && (s2 = t2.getDetectionResultColumn(e2 - i2).getCodewordNearby(r2)), null != s2) return n2 ? s2.getEndX() : s2.getStartX();
          let o2 = 0;
          for (; ar.isValidBarcodeColumn(t2, e2 - i2); ) {
            e2 -= i2;
            for (let r3 of t2.getDetectionResultColumn(e2).getCodewords()) if (null != r3) return (n2 ? r3.getEndX() : r3.getStartX()) + i2 * o2 * (r3.getEndX() - r3.getStartX());
            o2++;
          }
          return n2 ? t2.getBoundingBox().getMinX() : t2.getBoundingBox().getMaxX();
        }
        static detectCodeword(t2, e2, r2, n2, i2, s2, o2, a2) {
          i2 = ar.adjustCodewordStartColumn(t2, e2, r2, n2, i2, s2);
          let h2, l2 = ar.getModuleBitCount(t2, e2, r2, n2, i2, s2);
          if (null == l2) return null;
          let c2 = et.sum(l2);
          if (n2) h2 = i2 + c2;
          else {
            for (let t3 = 0; t3 < l2.length / 2; t3++) {
              let e3 = l2[t3];
              l2[t3] = l2[l2.length - 1 - t3], l2[l2.length - 1 - t3] = e3;
            }
            h2 = i2, i2 = h2 - c2;
          }
          if (!ar.checkCodewordSkew(c2, o2, a2)) return null;
          let d2 = Qe.getDecodedValue(l2), u2 = Fe.getCodeword(d2);
          return -1 === u2 ? null : new qe(i2, h2, ar.getCodewordBucketNumber(d2), u2);
        }
        static getModuleBitCount(t2, e2, r2, n2, i2, s2) {
          let o2 = i2, a2 = new Int32Array(8), h2 = 0, l2 = n2 ? 1 : -1, c2 = n2;
          for (; (n2 ? o2 < r2 : o2 >= e2) && h2 < a2.length; ) t2.get(o2, s2) === c2 ? (a2[h2]++, o2 += l2) : (h2++, c2 = !c2);
          return h2 === a2.length || o2 === (n2 ? r2 : e2) && h2 === a2.length - 1 ? a2 : null;
        }
        static getNumberOfECCodeWords(t2) {
          return 2 << t2;
        }
        static adjustCodewordStartColumn(t2, e2, r2, n2, i2, s2) {
          let o2 = i2, a2 = n2 ? -1 : 1;
          for (let h2 = 0; h2 < 2; h2++) {
            for (; (n2 ? o2 >= e2 : o2 < r2) && n2 === t2.get(o2, s2); ) {
              if (Math.abs(i2 - o2) > ar.CODEWORD_SKEW_SIZE) return i2;
              o2 += a2;
            }
            a2 = -a2, n2 = !n2;
          }
          return o2;
        }
        static checkCodewordSkew(t2, e2, r2) {
          return e2 - ar.CODEWORD_SKEW_SIZE <= t2 && t2 <= r2 + ar.CODEWORD_SKEW_SIZE;
        }
        static decodeCodewords(t2, e2, r2) {
          if (0 === t2.length) throw m.getFormatInstance();
          let n2 = 1 << e2 + 1, i2 = ar.correctErrors(t2, r2, n2);
          ar.verifyCodewordCount(t2, n2);
          let s2 = or.decode(t2, "" + e2);
          return s2.setErrorsCorrected(i2), s2.setErasures(r2.length), s2;
        }
        static correctErrors(t2, e2, r2) {
          if (null != e2 && e2.length > r2 / 2 + ar.MAX_ERRORS || r2 < 0 || r2 > ar.MAX_EC_CODEWORDS) throw l.getChecksumInstance();
          return ar.errorCorrection.decode(t2, r2, e2);
        }
        static verifyCodewordCount(t2, e2) {
          if (t2.length < 4) throw m.getFormatInstance();
          let r2 = t2[0];
          if (r2 > t2.length) throw m.getFormatInstance();
          if (0 === r2) {
            if (!(e2 < t2.length)) throw m.getFormatInstance();
            t2[0] = t2.length - e2;
          }
        }
        static getBitCountForCodeword(t2) {
          let e2 = new Int32Array(8), r2 = 0, n2 = e2.length - 1;
          for (; !((1 & t2) !== r2 && (r2 = 1 & t2, n2--, n2 < 0)); ) e2[n2]++, t2 >>= 1;
          return e2;
        }
        static getCodewordBucketNumber(t2) {
          return t2 instanceof Int32Array ? this.getCodewordBucketNumber_Int32Array(t2) : this.getCodewordBucketNumber_number(t2);
        }
        static getCodewordBucketNumber_number(t2) {
          return ar.getCodewordBucketNumber(ar.getBitCountForCodeword(t2));
        }
        static getCodewordBucketNumber_Int32Array(t2) {
          return (t2[0] - t2[2] + t2[4] - t2[6] + 9) % 9;
        }
        static toString(t2) {
          let e2 = new We();
          for (let r2 = 0; r2 < t2.length; r2++) {
            e2.format("Row %2d: ", r2);
            for (let n2 = 0; n2 < t2[r2].length; n2++) {
              let i2 = t2[r2][n2];
              0 === i2.getValue().length ? e2.format("        ", null) : e2.format("%4d(%2d)", i2.getValue()[0], i2.getConfidence(i2.getValue()[0]));
            }
            e2.format("%n");
          }
          return e2.toString();
        }
      }
      ar.CODEWORD_SKEW_SIZE = 2, ar.MAX_ERRORS = 3, ar.MAX_EC_CODEWORDS = 512, ar.errorCorrection = new Ue();
      class hr {
        decode(t2, e2 = null) {
          let r2 = hr.decode(t2, e2, false);
          if (null == r2 || 0 === r2.length || null == r2[0]) throw N.getNotFoundInstance();
          return r2[0];
        }
        decodeMultiple(t2, e2 = null) {
          try {
            return hr.decode(t2, e2, true);
          } catch (t3) {
            if (t3 instanceof m || t3 instanceof l) throw N.getNotFoundInstance();
            throw t3;
          }
        }
        static decode(t2, e2, r2) {
          const n2 = new Array(), i2 = ke.detectMultiple(t2, e2, r2);
          for (const t3 of i2.getPoints()) {
            const e3 = ar.decode(i2.getBits(), t3[4], t3[5], t3[6], t3[7], hr.getMinCodewordWidth(t3), hr.getMaxCodewordWidth(t3)), r3 = new v(e3.getText(), e3.getRawBytes(), void 0, t3, x.PDF_417);
            r3.putMetadata(z.ERROR_CORRECTION_LEVEL, e3.getECLevel());
            const s2 = e3.getOther();
            null != s2 && r3.putMetadata(z.PDF417_EXTRA_METADATA, s2), n2.push(r3);
          }
          return n2.map((t3) => t3);
        }
        static getMaxWidth(t2, e2) {
          return null == t2 || null == e2 ? 0 : Math.trunc(Math.abs(t2.getX() - e2.getX()));
        }
        static getMinWidth(t2, e2) {
          return null == t2 || null == e2 ? w.MAX_VALUE : Math.trunc(Math.abs(t2.getX() - e2.getX()));
        }
        static getMaxCodewordWidth(t2) {
          return Math.floor(Math.max(Math.max(hr.getMaxWidth(t2[0], t2[4]), hr.getMaxWidth(t2[6], t2[2]) * Fe.MODULES_IN_CODEWORD / Fe.MODULES_IN_STOP_PATTERN), Math.max(hr.getMaxWidth(t2[1], t2[5]), hr.getMaxWidth(t2[7], t2[3]) * Fe.MODULES_IN_CODEWORD / Fe.MODULES_IN_STOP_PATTERN)));
        }
        static getMinCodewordWidth(t2) {
          return Math.floor(Math.min(Math.min(hr.getMinWidth(t2[0], t2[4]), hr.getMinWidth(t2[6], t2[2]) * Fe.MODULES_IN_CODEWORD / Fe.MODULES_IN_STOP_PATTERN), Math.min(hr.getMinWidth(t2[1], t2[5]), hr.getMinWidth(t2[7], t2[3]) * Fe.MODULES_IN_CODEWORD / Fe.MODULES_IN_STOP_PATTERN)));
        }
        reset() {
        }
      }
      class lr extends s {
      }
      lr.kind = "ReaderException";
      class cr {
        decode(t2, e2) {
          return this.setHints(e2), this.decodeInternal(t2);
        }
        decodeWithState(t2) {
          return null !== this.readers && void 0 !== this.readers || this.setHints(null), this.decodeInternal(t2);
        }
        setHints(t2) {
          this.hints = t2;
          const e2 = null != t2 && void 0 !== t2.get(E.TRY_HARDER), r2 = null == t2 ? null : t2.get(E.POSSIBLE_FORMATS), n2 = new Array();
          if (null != r2) {
            const i2 = r2.some((t3) => t3 === x.UPC_A || t3 === x.UPC_E || t3 === x.EAN_13 || t3 === x.EAN_8 || t3 === x.CODABAR || t3 === x.CODE_39 || t3 === x.CODE_93 || t3 === x.CODE_128 || t3 === x.ITF || t3 === x.RSS_14 || t3 === x.RSS_EXPANDED);
            i2 && !e2 && n2.push(new se(t2)), r2.includes(x.QR_CODE) && n2.push(new Le()), r2.includes(x.DATA_MATRIX) && n2.push(new we()), r2.includes(x.AZTEC) && n2.push(new gt()), r2.includes(x.PDF_417) && n2.push(new hr()), i2 && e2 && n2.push(new se(t2));
          }
          0 === n2.length && (e2 || n2.push(new se(t2)), n2.push(new Le()), n2.push(new we()), n2.push(new gt()), n2.push(new hr()), e2 && n2.push(new se(t2))), this.readers = n2;
        }
        reset() {
          if (null !== this.readers) for (const t2 of this.readers) t2.reset();
        }
        decodeInternal(t2) {
          if (null === this.readers) throw new lr("No readers where selected, nothing can be read.");
          for (const e2 of this.readers) try {
            return e2.decode(t2, this.hints);
          } catch (t3) {
            if (t3 instanceof lr) continue;
          }
          throw new N("No MultiFormat Readers were able to detect the code.");
        }
      }
      var dr;
      !function(t2) {
        t2[t2.ERROR_CORRECTION = 0] = "ERROR_CORRECTION", t2[t2.CHARACTER_SET = 1] = "CHARACTER_SET", t2[t2.DATA_MATRIX_SHAPE = 2] = "DATA_MATRIX_SHAPE", t2[t2.DATA_MATRIX_COMPACT = 3] = "DATA_MATRIX_COMPACT", t2[t2.MIN_SIZE = 4] = "MIN_SIZE", t2[t2.MAX_SIZE = 5] = "MAX_SIZE", t2[t2.MARGIN = 6] = "MARGIN", t2[t2.PDF417_COMPACT = 7] = "PDF417_COMPACT", t2[t2.PDF417_COMPACTION = 8] = "PDF417_COMPACTION", t2[t2.PDF417_DIMENSIONS = 9] = "PDF417_DIMENSIONS", t2[t2.AZTEC_LAYERS = 10] = "AZTEC_LAYERS", t2[t2.QR_VERSION = 11] = "QR_VERSION", t2[t2.GS1_FORMAT = 12] = "GS1_FORMAT", t2[t2.FORCE_C40 = 13] = "FORCE_C40";
      }(dr || (dr = {}));
      var ur = dr;
      class gr {
        constructor(t2) {
          this.field = t2, this.cachedGenerators = [], this.cachedGenerators.push(new K(t2, Int32Array.from([1])));
        }
        buildGenerator(t2) {
          const e2 = this.cachedGenerators;
          if (t2 >= e2.length) {
            let r2 = e2[e2.length - 1];
            const n2 = this.field;
            for (let i2 = e2.length; i2 <= t2; i2++) {
              const t3 = r2.multiply(new K(n2, Int32Array.from([1, n2.exp(i2 - 1 + n2.getGeneratorBase())])));
              e2.push(t3), r2 = t3;
            }
          }
          return e2[t2];
        }
        encode(t2, e2) {
          if (0 === e2) throw new a("No error correction bytes");
          const r2 = t2.length - e2;
          if (r2 <= 0) throw new a("No data bytes provided");
          const n2 = this.buildGenerator(e2), i2 = new Int32Array(r2);
          d.arraycopy(t2, 0, i2, 0, r2);
          let s2 = new K(this.field, i2);
          s2 = s2.multiplyByMonomial(e2, 1);
          const o2 = s2.divide(n2)[1].getCoefficients(), h2 = e2 - o2.length;
          for (let e3 = 0; e3 < h2; e3++) t2[r2 + e3] = 0;
          d.arraycopy(o2, 0, t2, r2 + h2, o2.length);
        }
      }
      class fr {
        constructor() {
        }
        static applyMaskPenaltyRule1(t2) {
          return fr.applyMaskPenaltyRule1Internal(t2, true) + fr.applyMaskPenaltyRule1Internal(t2, false);
        }
        static applyMaskPenaltyRule2(t2) {
          let e2 = 0;
          const r2 = t2.getArray(), n2 = t2.getWidth(), i2 = t2.getHeight();
          for (let t3 = 0; t3 < i2 - 1; t3++) {
            const i3 = r2[t3];
            for (let s2 = 0; s2 < n2 - 1; s2++) {
              const n3 = i3[s2];
              n3 === i3[s2 + 1] && n3 === r2[t3 + 1][s2] && n3 === r2[t3 + 1][s2 + 1] && e2++;
            }
          }
          return fr.N2 * e2;
        }
        static applyMaskPenaltyRule3(t2) {
          let e2 = 0;
          const r2 = t2.getArray(), n2 = t2.getWidth(), i2 = t2.getHeight();
          for (let t3 = 0; t3 < i2; t3++) for (let s2 = 0; s2 < n2; s2++) {
            const o2 = r2[t3];
            s2 + 6 < n2 && 1 === o2[s2] && 0 === o2[s2 + 1] && 1 === o2[s2 + 2] && 1 === o2[s2 + 3] && 1 === o2[s2 + 4] && 0 === o2[s2 + 5] && 1 === o2[s2 + 6] && (fr.isWhiteHorizontal(o2, s2 - 4, s2) || fr.isWhiteHorizontal(o2, s2 + 7, s2 + 11)) && e2++, t3 + 6 < i2 && 1 === r2[t3][s2] && 0 === r2[t3 + 1][s2] && 1 === r2[t3 + 2][s2] && 1 === r2[t3 + 3][s2] && 1 === r2[t3 + 4][s2] && 0 === r2[t3 + 5][s2] && 1 === r2[t3 + 6][s2] && (fr.isWhiteVertical(r2, s2, t3 - 4, t3) || fr.isWhiteVertical(r2, s2, t3 + 7, t3 + 11)) && e2++;
          }
          return e2 * fr.N3;
        }
        static isWhiteHorizontal(t2, e2, r2) {
          e2 = Math.max(e2, 0), r2 = Math.min(r2, t2.length);
          for (let n2 = e2; n2 < r2; n2++) if (1 === t2[n2]) return false;
          return true;
        }
        static isWhiteVertical(t2, e2, r2, n2) {
          r2 = Math.max(r2, 0), n2 = Math.min(n2, t2.length);
          for (let i2 = r2; i2 < n2; i2++) if (1 === t2[i2][e2]) return false;
          return true;
        }
        static applyMaskPenaltyRule4(t2) {
          let e2 = 0;
          const r2 = t2.getArray(), n2 = t2.getWidth(), i2 = t2.getHeight();
          for (let t3 = 0; t3 < i2; t3++) {
            const i3 = r2[t3];
            for (let t4 = 0; t4 < n2; t4++) 1 === i3[t4] && e2++;
          }
          const s2 = t2.getHeight() * t2.getWidth();
          return Math.floor(10 * Math.abs(2 * e2 - s2) / s2) * fr.N4;
        }
        static getDataMaskBit(t2, e2, r2) {
          let n2, i2;
          switch (t2) {
            case 0:
              n2 = r2 + e2 & 1;
              break;
            case 1:
              n2 = 1 & r2;
              break;
            case 2:
              n2 = e2 % 3;
              break;
            case 3:
              n2 = (r2 + e2) % 3;
              break;
            case 4:
              n2 = Math.floor(r2 / 2) + Math.floor(e2 / 3) & 1;
              break;
            case 5:
              i2 = r2 * e2, n2 = (1 & i2) + i2 % 3;
              break;
            case 6:
              i2 = r2 * e2, n2 = (1 & i2) + i2 % 3 & 1;
              break;
            case 7:
              i2 = r2 * e2, n2 = i2 % 3 + (r2 + e2 & 1) & 1;
              break;
            default:
              throw new a("Invalid mask pattern: " + t2);
          }
          return 0 === n2;
        }
        static applyMaskPenaltyRule1Internal(t2, e2) {
          let r2 = 0;
          const n2 = e2 ? t2.getHeight() : t2.getWidth(), i2 = e2 ? t2.getWidth() : t2.getHeight(), s2 = t2.getArray();
          for (let t3 = 0; t3 < n2; t3++) {
            let n3 = 0, o2 = -1;
            for (let a2 = 0; a2 < i2; a2++) {
              const i3 = e2 ? s2[t3][a2] : s2[a2][t3];
              i3 === o2 ? n3++ : (n3 >= 5 && (r2 += fr.N1 + (n3 - 5)), n3 = 1, o2 = i3);
            }
            n3 >= 5 && (r2 += fr.N1 + (n3 - 5));
          }
          return r2;
        }
      }
      fr.N1 = 3, fr.N2 = 3, fr.N3 = 40, fr.N4 = 10;
      class wr {
        constructor(t2, e2) {
          this.width = t2, this.height = e2;
          const r2 = new Array(e2);
          for (let n2 = 0; n2 !== e2; n2++) r2[n2] = new Uint8Array(t2);
          this.bytes = r2;
        }
        getHeight() {
          return this.height;
        }
        getWidth() {
          return this.width;
        }
        get(t2, e2) {
          return this.bytes[e2][t2];
        }
        getArray() {
          return this.bytes;
        }
        setNumber(t2, e2, r2) {
          this.bytes[e2][t2] = r2;
        }
        setBoolean(t2, e2, r2) {
          this.bytes[e2][t2] = r2 ? 1 : 0;
        }
        clear(t2) {
          for (const e2 of this.bytes) f.fill(e2, t2);
        }
        equals(t2) {
          if (!(t2 instanceof wr)) return false;
          const e2 = t2;
          if (this.width !== e2.width) return false;
          if (this.height !== e2.height) return false;
          for (let t3 = 0, r2 = this.height; t3 < r2; ++t3) {
            const r3 = this.bytes[t3], n2 = e2.bytes[t3];
            for (let t4 = 0, e3 = this.width; t4 < e3; ++t4) if (r3[t4] !== n2[t4]) return false;
          }
          return true;
        }
        toString() {
          const t2 = new T();
          for (let e2 = 0, r2 = this.height; e2 < r2; ++e2) {
            const r3 = this.bytes[e2];
            for (let e3 = 0, n2 = this.width; e3 < n2; ++e3) switch (r3[e3]) {
              case 0:
                t2.append(" 0");
                break;
              case 1:
                t2.append(" 1");
                break;
              default:
                t2.append("  ");
            }
            t2.append("\n");
          }
          return t2.toString();
        }
      }
      class Cr {
        constructor() {
          this.maskPattern = -1;
        }
        getMode() {
          return this.mode;
        }
        getECLevel() {
          return this.ecLevel;
        }
        getVersion() {
          return this.version;
        }
        getMaskPattern() {
          return this.maskPattern;
        }
        getMatrix() {
          return this.matrix;
        }
        toString() {
          const t2 = new T();
          return t2.append("<<\n"), t2.append(" mode: "), t2.append(this.mode ? this.mode.toString() : "null"), t2.append("\n ecLevel: "), t2.append(this.ecLevel ? this.ecLevel.toString() : "null"), t2.append("\n version: "), t2.append(this.version ? this.version.toString() : "null"), t2.append("\n maskPattern: "), t2.append(this.maskPattern.toString()), this.matrix ? (t2.append("\n matrix:\n"), t2.append(this.matrix.toString())) : t2.append("\n matrix: null\n"), t2.append(">>\n"), t2.toString();
        }
        setMode(t2) {
          this.mode = t2;
        }
        setECLevel(t2) {
          this.ecLevel = t2;
        }
        setVersion(t2) {
          this.version = t2;
        }
        setMaskPattern(t2) {
          this.maskPattern = t2;
        }
        setMatrix(t2) {
          this.matrix = t2;
        }
        static isValidMaskPattern(t2) {
          return t2 >= 0 && t2 < Cr.NUM_MASK_PATTERNS;
        }
      }
      Cr.NUM_MASK_PATTERNS = 8;
      class Ar extends s {
      }
      Ar.kind = "WriterException";
      class Er {
        constructor() {
        }
        static clearMatrix(t2) {
          t2.clear(255);
        }
        static buildMatrix(t2, e2, r2, n2, i2) {
          Er.clearMatrix(i2), Er.embedBasicPatterns(r2, i2), Er.embedTypeInfo(e2, n2, i2), Er.maybeEmbedVersionInfo(r2, i2), Er.embedDataBits(t2, n2, i2);
        }
        static embedBasicPatterns(t2, e2) {
          Er.embedPositionDetectionPatternsAndSeparators(e2), Er.embedDarkDotAtLeftBottomCorner(e2), Er.maybeEmbedPositionAdjustmentPatterns(t2, e2), Er.embedTimingPatterns(e2);
        }
        static embedTypeInfo(t2, e2, r2) {
          const n2 = new C();
          Er.makeTypeInfoBits(t2, e2, n2);
          for (let t3 = 0, e3 = n2.getSize(); t3 < e3; ++t3) {
            const e4 = n2.get(n2.getSize() - 1 - t3), i2 = Er.TYPE_INFO_COORDINATES[t3], s2 = i2[0], o2 = i2[1];
            if (r2.setBoolean(s2, o2, e4), t3 < 8) {
              const n3 = r2.getWidth() - t3 - 1, i3 = 8;
              r2.setBoolean(n3, i3, e4);
            } else {
              const n3 = 8, i3 = r2.getHeight() - 7 + (t3 - 8);
              r2.setBoolean(n3, i3, e4);
            }
          }
        }
        static maybeEmbedVersionInfo(t2, e2) {
          if (t2.getVersionNumber() < 7) return;
          const r2 = new C();
          Er.makeVersionInfoBits(t2, r2);
          let n2 = 17;
          for (let t3 = 0; t3 < 6; ++t3) for (let i2 = 0; i2 < 3; ++i2) {
            const s2 = r2.get(n2);
            n2--, e2.setBoolean(t3, e2.getHeight() - 11 + i2, s2), e2.setBoolean(e2.getHeight() - 11 + i2, t3, s2);
          }
        }
        static embedDataBits(t2, e2, r2) {
          let n2 = 0, i2 = -1, s2 = r2.getWidth() - 1, o2 = r2.getHeight() - 1;
          for (; s2 > 0; ) {
            for (6 === s2 && (s2 -= 1); o2 >= 0 && o2 < r2.getHeight(); ) {
              for (let i3 = 0; i3 < 2; ++i3) {
                const a2 = s2 - i3;
                if (!Er.isEmpty(r2.get(a2, o2))) continue;
                let h2;
                n2 < t2.getSize() ? (h2 = t2.get(n2), ++n2) : h2 = false, 255 !== e2 && fr.getDataMaskBit(e2, a2, o2) && (h2 = !h2), r2.setBoolean(a2, o2, h2);
              }
              o2 += i2;
            }
            i2 = -i2, o2 += i2, s2 -= 2;
          }
          if (n2 !== t2.getSize()) throw new Ar("Not all bits consumed: " + n2 + "/" + t2.getSize());
        }
        static findMSBSet(t2) {
          return 32 - w.numberOfLeadingZeros(t2);
        }
        static calculateBCHCode(t2, e2) {
          if (0 === e2) throw new a("0 polynomial");
          const r2 = Er.findMSBSet(e2);
          for (t2 <<= r2 - 1; Er.findMSBSet(t2) >= r2; ) t2 ^= e2 << Er.findMSBSet(t2) - r2;
          return t2;
        }
        static makeTypeInfoBits(t2, e2, r2) {
          if (!Cr.isValidMaskPattern(e2)) throw new Ar("Invalid mask pattern");
          const n2 = t2.getBits() << 3 | e2;
          r2.appendBits(n2, 5);
          const i2 = Er.calculateBCHCode(n2, Er.TYPE_INFO_POLY);
          r2.appendBits(i2, 10);
          const s2 = new C();
          if (s2.appendBits(Er.TYPE_INFO_MASK_PATTERN, 15), r2.xor(s2), 15 !== r2.getSize()) throw new Ar("should not happen but we got: " + r2.getSize());
        }
        static makeVersionInfoBits(t2, e2) {
          e2.appendBits(t2.getVersionNumber(), 6);
          const r2 = Er.calculateBCHCode(t2.getVersionNumber(), Er.VERSION_INFO_POLY);
          if (e2.appendBits(r2, 12), 18 !== e2.getSize()) throw new Ar("should not happen but we got: " + e2.getSize());
        }
        static isEmpty(t2) {
          return 255 === t2;
        }
        static embedTimingPatterns(t2) {
          for (let e2 = 8; e2 < t2.getWidth() - 8; ++e2) {
            const r2 = (e2 + 1) % 2;
            Er.isEmpty(t2.get(e2, 6)) && t2.setNumber(e2, 6, r2), Er.isEmpty(t2.get(6, e2)) && t2.setNumber(6, e2, r2);
          }
        }
        static embedDarkDotAtLeftBottomCorner(t2) {
          if (0 === t2.get(8, t2.getHeight() - 8)) throw new Ar();
          t2.setNumber(8, t2.getHeight() - 8, 1);
        }
        static embedHorizontalSeparationPattern(t2, e2, r2) {
          for (let n2 = 0; n2 < 8; ++n2) {
            if (!Er.isEmpty(r2.get(t2 + n2, e2))) throw new Ar();
            r2.setNumber(t2 + n2, e2, 0);
          }
        }
        static embedVerticalSeparationPattern(t2, e2, r2) {
          for (let n2 = 0; n2 < 7; ++n2) {
            if (!Er.isEmpty(r2.get(t2, e2 + n2))) throw new Ar();
            r2.setNumber(t2, e2 + n2, 0);
          }
        }
        static embedPositionAdjustmentPattern(t2, e2, r2) {
          for (let n2 = 0; n2 < 5; ++n2) {
            const i2 = Er.POSITION_ADJUSTMENT_PATTERN[n2];
            for (let s2 = 0; s2 < 5; ++s2) r2.setNumber(t2 + s2, e2 + n2, i2[s2]);
          }
        }
        static embedPositionDetectionPattern(t2, e2, r2) {
          for (let n2 = 0; n2 < 7; ++n2) {
            const i2 = Er.POSITION_DETECTION_PATTERN[n2];
            for (let s2 = 0; s2 < 7; ++s2) r2.setNumber(t2 + s2, e2 + n2, i2[s2]);
          }
        }
        static embedPositionDetectionPatternsAndSeparators(t2) {
          const e2 = Er.POSITION_DETECTION_PATTERN[0].length;
          Er.embedPositionDetectionPattern(0, 0, t2), Er.embedPositionDetectionPattern(t2.getWidth() - e2, 0, t2), Er.embedPositionDetectionPattern(0, t2.getWidth() - e2, t2);
          Er.embedHorizontalSeparationPattern(0, 7, t2), Er.embedHorizontalSeparationPattern(t2.getWidth() - 8, 7, t2), Er.embedHorizontalSeparationPattern(0, t2.getWidth() - 8, t2);
          Er.embedVerticalSeparationPattern(7, 0, t2), Er.embedVerticalSeparationPattern(t2.getHeight() - 7 - 1, 0, t2), Er.embedVerticalSeparationPattern(7, t2.getHeight() - 7, t2);
        }
        static maybeEmbedPositionAdjustmentPatterns(t2, e2) {
          if (t2.getVersionNumber() < 2) return;
          const r2 = t2.getVersionNumber() - 1, n2 = Er.POSITION_ADJUSTMENT_PATTERN_COORDINATE_TABLE[r2];
          for (let t3 = 0, r3 = n2.length; t3 !== r3; t3++) {
            const i2 = n2[t3];
            if (i2 >= 0) for (let t4 = 0; t4 !== r3; t4++) {
              const r4 = n2[t4];
              r4 >= 0 && Er.isEmpty(e2.get(r4, i2)) && Er.embedPositionAdjustmentPattern(r4 - 2, i2 - 2, e2);
            }
          }
        }
      }
      Er.POSITION_DETECTION_PATTERN = Array.from([Int32Array.from([1, 1, 1, 1, 1, 1, 1]), Int32Array.from([1, 0, 0, 0, 0, 0, 1]), Int32Array.from([1, 0, 1, 1, 1, 0, 1]), Int32Array.from([1, 0, 1, 1, 1, 0, 1]), Int32Array.from([1, 0, 1, 1, 1, 0, 1]), Int32Array.from([1, 0, 0, 0, 0, 0, 1]), Int32Array.from([1, 1, 1, 1, 1, 1, 1])]), Er.POSITION_ADJUSTMENT_PATTERN = Array.from([Int32Array.from([1, 1, 1, 1, 1]), Int32Array.from([1, 0, 0, 0, 1]), Int32Array.from([1, 0, 1, 0, 1]), Int32Array.from([1, 0, 0, 0, 1]), Int32Array.from([1, 1, 1, 1, 1])]), Er.POSITION_ADJUSTMENT_PATTERN_COORDINATE_TABLE = Array.from([Int32Array.from([-1, -1, -1, -1, -1, -1, -1]), Int32Array.from([6, 18, -1, -1, -1, -1, -1]), Int32Array.from([6, 22, -1, -1, -1, -1, -1]), Int32Array.from([6, 26, -1, -1, -1, -1, -1]), Int32Array.from([6, 30, -1, -1, -1, -1, -1]), Int32Array.from([6, 34, -1, -1, -1, -1, -1]), Int32Array.from([6, 22, 38, -1, -1, -1, -1]), Int32Array.from([6, 24, 42, -1, -1, -1, -1]), Int32Array.from([6, 26, 46, -1, -1, -1, -1]), Int32Array.from([6, 28, 50, -1, -1, -1, -1]), Int32Array.from([6, 30, 54, -1, -1, -1, -1]), Int32Array.from([6, 32, 58, -1, -1, -1, -1]), Int32Array.from([6, 34, 62, -1, -1, -1, -1]), Int32Array.from([6, 26, 46, 66, -1, -1, -1]), Int32Array.from([6, 26, 48, 70, -1, -1, -1]), Int32Array.from([6, 26, 50, 74, -1, -1, -1]), Int32Array.from([6, 30, 54, 78, -1, -1, -1]), Int32Array.from([6, 30, 56, 82, -1, -1, -1]), Int32Array.from([6, 30, 58, 86, -1, -1, -1]), Int32Array.from([6, 34, 62, 90, -1, -1, -1]), Int32Array.from([6, 28, 50, 72, 94, -1, -1]), Int32Array.from([6, 26, 50, 74, 98, -1, -1]), Int32Array.from([6, 30, 54, 78, 102, -1, -1]), Int32Array.from([6, 28, 54, 80, 106, -1, -1]), Int32Array.from([6, 32, 58, 84, 110, -1, -1]), Int32Array.from([6, 30, 58, 86, 114, -1, -1]), Int32Array.from([6, 34, 62, 90, 118, -1, -1]), Int32Array.from([6, 26, 50, 74, 98, 122, -1]), Int32Array.from([6, 30, 54, 78, 102, 126, -1]), Int32Array.from([6, 26, 52, 78, 104, 130, -1]), Int32Array.from([6, 30, 56, 82, 108, 134, -1]), Int32Array.from([6, 34, 60, 86, 112, 138, -1]), Int32Array.from([6, 30, 58, 86, 114, 142, -1]), Int32Array.from([6, 34, 62, 90, 118, 146, -1]), Int32Array.from([6, 30, 54, 78, 102, 126, 150]), Int32Array.from([6, 24, 50, 76, 102, 128, 154]), Int32Array.from([6, 28, 54, 80, 106, 132, 158]), Int32Array.from([6, 32, 58, 84, 110, 136, 162]), Int32Array.from([6, 26, 54, 82, 110, 138, 166]), Int32Array.from([6, 30, 58, 86, 114, 142, 170])]), Er.TYPE_INFO_COORDINATES = Array.from([Int32Array.from([8, 0]), Int32Array.from([8, 1]), Int32Array.from([8, 2]), Int32Array.from([8, 3]), Int32Array.from([8, 4]), Int32Array.from([8, 5]), Int32Array.from([8, 7]), Int32Array.from([8, 8]), Int32Array.from([7, 8]), Int32Array.from([5, 8]), Int32Array.from([4, 8]), Int32Array.from([3, 8]), Int32Array.from([2, 8]), Int32Array.from([1, 8]), Int32Array.from([0, 8])]), Er.VERSION_INFO_POLY = 7973, Er.TYPE_INFO_POLY = 1335, Er.TYPE_INFO_MASK_PATTERN = 21522;
      class mr {
        constructor(t2, e2) {
          this.dataBytes = t2, this.errorCorrectionBytes = e2;
        }
        getDataBytes() {
          return this.dataBytes;
        }
        getErrorCorrectionBytes() {
          return this.errorCorrectionBytes;
        }
      }
      class Ir {
        constructor() {
        }
        static calculateMaskPenalty(t2) {
          return fr.applyMaskPenaltyRule1(t2) + fr.applyMaskPenaltyRule2(t2) + fr.applyMaskPenaltyRule3(t2) + fr.applyMaskPenaltyRule4(t2);
        }
        static encode(t2, e2, r2 = null) {
          let n2 = Ir.DEFAULT_BYTE_MODE_ENCODING;
          const i2 = null !== r2 && void 0 !== r2.get(ur.CHARACTER_SET);
          i2 && (n2 = r2.get(ur.CHARACTER_SET).toString());
          const s2 = this.chooseMode(t2, n2), o2 = new C();
          if (s2 === Te.BYTE && (i2 || Ir.DEFAULT_BYTE_MODE_ENCODING !== n2)) {
            const t3 = I.getCharacterSetECIByName(n2);
            void 0 !== t3 && this.appendECI(t3, o2);
          }
          this.appendModeInfo(s2, o2);
          const a2 = new C();
          let h2;
          if (this.appendBytes(t2, s2, a2, n2), null !== r2 && void 0 !== r2.get(ur.QR_VERSION)) {
            const t3 = Number.parseInt(r2.get(ur.QR_VERSION).toString(), 10);
            h2 = Ie.getVersionForNumber(t3);
            const n3 = this.calculateBitsNeeded(s2, o2, a2, h2);
            if (!this.willFit(n3, h2, e2)) throw new Ar("Data too big for requested version");
          } else h2 = this.recommendVersion(e2, s2, o2, a2);
          const l2 = new C();
          l2.appendBitArray(o2);
          const c2 = s2 === Te.BYTE ? a2.getSizeInBytes() : t2.length;
          this.appendLengthInfo(c2, h2, s2, l2), l2.appendBitArray(a2);
          const d2 = h2.getECBlocksForLevel(e2), u2 = h2.getTotalCodewords() - d2.getTotalECCodewords();
          this.terminateBits(u2, l2);
          const g2 = this.interleaveWithECBytes(l2, h2.getTotalCodewords(), u2, d2.getNumBlocks()), f2 = new Cr();
          f2.setECLevel(e2), f2.setMode(s2), f2.setVersion(h2);
          const w2 = h2.getDimensionForVersion(), A2 = new wr(w2, w2), E2 = this.chooseMaskPattern(g2, e2, h2, A2);
          return f2.setMaskPattern(E2), Er.buildMatrix(g2, e2, h2, E2, A2), f2.setMatrix(A2), f2;
        }
        static recommendVersion(t2, e2, r2, n2) {
          const i2 = this.calculateBitsNeeded(e2, r2, n2, Ie.getVersionForNumber(1)), s2 = this.chooseVersion(i2, t2), o2 = this.calculateBitsNeeded(e2, r2, n2, s2);
          return this.chooseVersion(o2, t2);
        }
        static calculateBitsNeeded(t2, e2, r2, n2) {
          return e2.getSize() + t2.getCharacterCountBits(n2) + r2.getSize();
        }
        static getAlphanumericCode(t2) {
          return t2 < Ir.ALPHANUMERIC_TABLE.length ? Ir.ALPHANUMERIC_TABLE[t2] : -1;
        }
        static chooseMode(t2, e2 = null) {
          if (I.SJIS.getName() === e2 && this.isOnlyDoubleByteKanji(t2)) return Te.KANJI;
          let r2 = false, n2 = false;
          for (let e3 = 0, i2 = t2.length; e3 < i2; ++e3) {
            const i3 = t2.charAt(e3);
            if (Ir.isDigit(i3)) r2 = true;
            else {
              if (-1 === this.getAlphanumericCode(i3.charCodeAt(0))) return Te.BYTE;
              n2 = true;
            }
          }
          return n2 ? Te.ALPHANUMERIC : r2 ? Te.NUMERIC : Te.BYTE;
        }
        static isOnlyDoubleByteKanji(t2) {
          let e2;
          try {
            e2 = S.encode(t2, I.SJIS);
          } catch (t3) {
            return false;
          }
          const r2 = e2.length;
          if (r2 % 2 != 0) return false;
          for (let t3 = 0; t3 < r2; t3 += 2) {
            const r3 = 255 & e2[t3];
            if ((r3 < 129 || r3 > 159) && (r3 < 224 || r3 > 235)) return false;
          }
          return true;
        }
        static chooseMaskPattern(t2, e2, r2, n2) {
          let i2 = Number.MAX_SAFE_INTEGER, s2 = -1;
          for (let o2 = 0; o2 < Cr.NUM_MASK_PATTERNS; o2++) {
            Er.buildMatrix(t2, e2, r2, o2, n2);
            let a2 = this.calculateMaskPenalty(n2);
            a2 < i2 && (i2 = a2, s2 = o2);
          }
          return s2;
        }
        static chooseVersion(t2, e2) {
          for (let r2 = 1; r2 <= 40; r2++) {
            const n2 = Ie.getVersionForNumber(r2);
            if (Ir.willFit(t2, n2, e2)) return n2;
          }
          throw new Ar("Data too big");
        }
        static willFit(t2, e2, r2) {
          return e2.getTotalCodewords() - e2.getECBlocksForLevel(r2).getTotalECCodewords() >= (t2 + 7) / 8;
        }
        static terminateBits(t2, e2) {
          const r2 = 8 * t2;
          if (e2.getSize() > r2) throw new Ar("data bits cannot fit in the QR Code" + e2.getSize() + " > " + r2);
          for (let t3 = 0; t3 < 4 && e2.getSize() < r2; ++t3) e2.appendBit(false);
          const n2 = 7 & e2.getSize();
          if (n2 > 0) for (let t3 = n2; t3 < 8; t3++) e2.appendBit(false);
          const i2 = t2 - e2.getSizeInBytes();
          for (let t3 = 0; t3 < i2; ++t3) e2.appendBits(1 & t3 ? 17 : 236, 8);
          if (e2.getSize() !== r2) throw new Ar("Bits size does not equal capacity");
        }
        static getNumDataBytesAndNumECBytesForBlockID(t2, e2, r2, n2, i2, s2) {
          if (n2 >= r2) throw new Ar("Block ID too large");
          const o2 = t2 % r2, a2 = r2 - o2, h2 = Math.floor(t2 / r2), l2 = h2 + 1, c2 = Math.floor(e2 / r2), d2 = c2 + 1, u2 = h2 - c2, g2 = l2 - d2;
          if (u2 !== g2) throw new Ar("EC bytes mismatch");
          if (r2 !== a2 + o2) throw new Ar("RS blocks mismatch");
          if (t2 !== (c2 + u2) * a2 + (d2 + g2) * o2) throw new Ar("Total bytes mismatch");
          n2 < a2 ? (i2[0] = c2, s2[0] = u2) : (i2[0] = d2, s2[0] = g2);
        }
        static interleaveWithECBytes(t2, e2, r2, n2) {
          if (t2.getSizeInBytes() !== r2) throw new Ar("Number of bits and data bytes does not match");
          let i2 = 0, s2 = 0, o2 = 0;
          const a2 = new Array();
          for (let h3 = 0; h3 < n2; ++h3) {
            const l2 = new Int32Array(1), c2 = new Int32Array(1);
            Ir.getNumDataBytesAndNumECBytesForBlockID(e2, r2, n2, h3, l2, c2);
            const d2 = l2[0], u2 = new Uint8Array(d2);
            t2.toBytes(8 * i2, u2, 0, d2);
            const g2 = Ir.generateECBytes(u2, c2[0]);
            a2.push(new mr(u2, g2)), s2 = Math.max(s2, d2), o2 = Math.max(o2, g2.length), i2 += l2[0];
          }
          if (r2 !== i2) throw new Ar("Data bytes does not match offset");
          const h2 = new C();
          for (let t3 = 0; t3 < s2; ++t3) for (const e3 of a2) {
            const r3 = e3.getDataBytes();
            t3 < r3.length && h2.appendBits(r3[t3], 8);
          }
          for (let t3 = 0; t3 < o2; ++t3) for (const e3 of a2) {
            const r3 = e3.getErrorCorrectionBytes();
            t3 < r3.length && h2.appendBits(r3[t3], 8);
          }
          if (e2 !== h2.getSizeInBytes()) throw new Ar("Interleaving error: " + e2 + " and " + h2.getSizeInBytes() + " differ.");
          return h2;
        }
        static generateECBytes(t2, e2) {
          const r2 = t2.length, n2 = new Int32Array(r2 + e2);
          for (let e3 = 0; e3 < r2; e3++) n2[e3] = 255 & t2[e3];
          new gr(Q.QR_CODE_FIELD_256).encode(n2, e2);
          const i2 = new Uint8Array(e2);
          for (let t3 = 0; t3 < e2; t3++) i2[t3] = n2[r2 + t3];
          return i2;
        }
        static appendModeInfo(t2, e2) {
          e2.appendBits(t2.getBits(), 4);
        }
        static appendLengthInfo(t2, e2, r2, n2) {
          const i2 = r2.getCharacterCountBits(e2);
          if (t2 >= 1 << i2) throw new Ar(t2 + " is bigger than " + ((1 << i2) - 1));
          n2.appendBits(t2, i2);
        }
        static appendBytes(t2, e2, r2, n2) {
          switch (e2) {
            case Te.NUMERIC:
              Ir.appendNumericBytes(t2, r2);
              break;
            case Te.ALPHANUMERIC:
              Ir.appendAlphanumericBytes(t2, r2);
              break;
            case Te.BYTE:
              Ir.append8BitBytes(t2, r2, n2);
              break;
            case Te.KANJI:
              Ir.appendKanjiBytes(t2, r2);
              break;
            default:
              throw new Ar("Invalid mode: " + e2);
          }
        }
        static getDigit(t2) {
          return t2.charCodeAt(0) - 48;
        }
        static isDigit(t2) {
          const e2 = Ir.getDigit(t2);
          return e2 >= 0 && e2 <= 9;
        }
        static appendNumericBytes(t2, e2) {
          const r2 = t2.length;
          let n2 = 0;
          for (; n2 < r2; ) {
            const i2 = Ir.getDigit(t2.charAt(n2));
            if (n2 + 2 < r2) {
              const r3 = Ir.getDigit(t2.charAt(n2 + 1)), s2 = Ir.getDigit(t2.charAt(n2 + 2));
              e2.appendBits(100 * i2 + 10 * r3 + s2, 10), n2 += 3;
            } else if (n2 + 1 < r2) {
              const r3 = Ir.getDigit(t2.charAt(n2 + 1));
              e2.appendBits(10 * i2 + r3, 7), n2 += 2;
            } else e2.appendBits(i2, 4), n2++;
          }
        }
        static appendAlphanumericBytes(t2, e2) {
          const r2 = t2.length;
          let n2 = 0;
          for (; n2 < r2; ) {
            const i2 = Ir.getAlphanumericCode(t2.charCodeAt(n2));
            if (-1 === i2) throw new Ar();
            if (n2 + 1 < r2) {
              const r3 = Ir.getAlphanumericCode(t2.charCodeAt(n2 + 1));
              if (-1 === r3) throw new Ar();
              e2.appendBits(45 * i2 + r3, 11), n2 += 2;
            } else e2.appendBits(i2, 6), n2++;
          }
        }
        static append8BitBytes(t2, e2, r2) {
          let n2;
          try {
            n2 = S.encode(t2, r2);
          } catch (t3) {
            throw new Ar(t3);
          }
          for (let t3 = 0, r3 = n2.length; t3 !== r3; t3++) {
            const r4 = n2[t3];
            e2.appendBits(r4, 8);
          }
        }
        static appendKanjiBytes(t2, e2) {
          let r2;
          try {
            r2 = S.encode(t2, I.SJIS);
          } catch (t3) {
            throw new Ar(t3);
          }
          const n2 = r2.length;
          for (let t3 = 0; t3 < n2; t3 += 2) {
            const n3 = (255 & r2[t3]) << 8 & 4294967295 | 255 & r2[t3 + 1];
            let i2 = -1;
            if (n3 >= 33088 && n3 <= 40956 ? i2 = n3 - 33088 : n3 >= 57408 && n3 <= 60351 && (i2 = n3 - 49472), -1 === i2) throw new Ar("Invalid byte sequence");
            const s2 = 192 * (i2 >> 8) + (255 & i2);
            e2.appendBits(s2, 13);
          }
        }
        static appendECI(t2, e2) {
          e2.appendBits(Te.ECI.getBits(), 4), e2.appendBits(t2.getValue(), 8);
        }
      }
      Ir.ALPHANUMERIC_TABLE = Int32Array.from([-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 36, -1, -1, -1, 37, 38, -1, -1, -1, -1, 39, 40, -1, 41, 42, 43, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 44, -1, -1, -1, -1, -1, -1, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, -1, -1, -1, -1, -1]), Ir.DEFAULT_BYTE_MODE_ENCODING = I.UTF8.getName();
      class _r {
        write(t2, e2, r2, n2 = null) {
          if (0 === t2.length) throw new a("Found empty contents");
          if (e2 < 0 || r2 < 0) throw new a("Requested dimensions are too small: " + e2 + "x" + r2);
          let i2 = Ce.L, s2 = _r.QUIET_ZONE_SIZE;
          null !== n2 && (void 0 !== n2.get(ur.ERROR_CORRECTION) && (i2 = Ce.fromString(n2.get(ur.ERROR_CORRECTION).toString())), void 0 !== n2.get(ur.MARGIN) && (s2 = Number.parseInt(n2.get(ur.MARGIN).toString(), 10)));
          const o2 = Ir.encode(t2, i2, n2);
          return this.renderResult(o2, e2, r2, s2);
        }
        writeToDom(t2, e2, r2, n2, i2 = null) {
          "string" == typeof t2 && (t2 = document.querySelector(t2));
          const s2 = this.write(e2, r2, n2, i2);
          t2 && t2.appendChild(s2);
        }
        renderResult(t2, e2, r2, n2) {
          const i2 = t2.getMatrix();
          if (null === i2) throw new J();
          const s2 = i2.getWidth(), o2 = i2.getHeight(), a2 = s2 + 2 * n2, h2 = o2 + 2 * n2, l2 = Math.max(e2, a2), c2 = Math.max(r2, h2), d2 = Math.min(Math.floor(l2 / a2), Math.floor(c2 / h2)), u2 = Math.floor((l2 - s2 * d2) / 2), g2 = Math.floor((c2 - o2 * d2) / 2), f2 = this.createSVGElement(l2, c2);
          for (let t3 = 0, e3 = g2; t3 < o2; t3++, e3 += d2) for (let r3 = 0, n3 = u2; r3 < s2; r3++, n3 += d2) if (1 === i2.get(r3, t3)) {
            const t4 = this.createSvgRectElement(n3, e3, d2, d2);
            f2.appendChild(t4);
          }
          return f2;
        }
        createSVGElement(t2, e2) {
          const r2 = document.createElementNS(_r.SVG_NS, "svg");
          return r2.setAttributeNS(null, "height", t2.toString()), r2.setAttributeNS(null, "width", e2.toString()), r2;
        }
        createSvgRectElement(t2, e2, r2, n2) {
          const i2 = document.createElementNS(_r.SVG_NS, "rect");
          return i2.setAttributeNS(null, "x", t2.toString()), i2.setAttributeNS(null, "y", e2.toString()), i2.setAttributeNS(null, "height", r2.toString()), i2.setAttributeNS(null, "width", n2.toString()), i2.setAttributeNS(null, "fill", "#000000"), i2;
        }
      }
      _r.QUIET_ZONE_SIZE = 4, _r.SVG_NS = "http://www.w3.org/2000/svg";
      class Sr {
        encode(t2, e2, r2, n2, i2) {
          if (0 === t2.length) throw new a("Found empty contents");
          if (e2 !== x.QR_CODE) throw new a("Can only encode QR_CODE, but got " + e2);
          if (r2 < 0 || n2 < 0) throw new a(`Requested dimensions are too small: ${r2}x${n2}`);
          let s2 = Ce.L, o2 = Sr.QUIET_ZONE_SIZE;
          null !== i2 && (void 0 !== i2.get(ur.ERROR_CORRECTION) && (s2 = Ce.fromString(i2.get(ur.ERROR_CORRECTION).toString())), void 0 !== i2.get(ur.MARGIN) && (o2 = Number.parseInt(i2.get(ur.MARGIN).toString(), 10)));
          const h2 = Ir.encode(t2, s2, i2);
          return Sr.renderResult(h2, r2, n2, o2);
        }
        static renderResult(t2, e2, r2, n2) {
          const i2 = t2.getMatrix();
          if (null === i2) throw new J();
          const s2 = i2.getWidth(), o2 = i2.getHeight(), a2 = s2 + 2 * n2, h2 = o2 + 2 * n2, l2 = Math.max(e2, a2), c2 = Math.max(r2, h2), d2 = Math.min(Math.floor(l2 / a2), Math.floor(c2 / h2)), u2 = Math.floor((l2 - s2 * d2) / 2), g2 = Math.floor((c2 - o2 * d2) / 2), f2 = new R(l2, c2);
          for (let t3 = 0, e3 = g2; t3 < o2; t3++, e3 += d2) for (let r3 = 0, n3 = u2; r3 < s2; r3++, n3 += d2) 1 === i2.get(r3, t3) && f2.setRegion(n3, e3, d2, d2);
          return f2;
        }
      }
      Sr.QUIET_ZONE_SIZE = 4;
      class pr extends O {
        constructor(t2, e2, r2, n2, i2, s2, o2, h2) {
          if (super(s2, o2), this.yuvData = t2, this.dataWidth = e2, this.dataHeight = r2, this.left = n2, this.top = i2, n2 + s2 > e2 || i2 + o2 > r2) throw new a("Crop rectangle does not fit within image data.");
          h2 && this.reverseHorizontal(s2, o2);
        }
        getRow(t2, e2) {
          if (t2 < 0 || t2 >= this.getHeight()) throw new a("Requested row is outside the image: " + t2);
          const r2 = this.getWidth();
          (null == e2 || e2.length < r2) && (e2 = new Uint8ClampedArray(r2));
          const n2 = (t2 + this.top) * this.dataWidth + this.left;
          return d.arraycopy(this.yuvData, n2, e2, 0, r2), e2;
        }
        getMatrix() {
          const t2 = this.getWidth(), e2 = this.getHeight();
          if (t2 === this.dataWidth && e2 === this.dataHeight) return this.yuvData;
          const r2 = t2 * e2, n2 = new Uint8ClampedArray(r2);
          let i2 = this.top * this.dataWidth + this.left;
          if (t2 === this.dataWidth) return d.arraycopy(this.yuvData, i2, n2, 0, r2), n2;
          for (let r3 = 0; r3 < e2; r3++) {
            const e3 = r3 * t2;
            d.arraycopy(this.yuvData, i2, n2, e3, t2), i2 += this.dataWidth;
          }
          return n2;
        }
        isCropSupported() {
          return true;
        }
        crop(t2, e2, r2, n2) {
          return new pr(this.yuvData, this.dataWidth, this.dataHeight, this.left + t2, this.top + e2, r2, n2, false);
        }
        renderThumbnail() {
          const t2 = this.getWidth() / pr.THUMBNAIL_SCALE_FACTOR, e2 = this.getHeight() / pr.THUMBNAIL_SCALE_FACTOR, r2 = new Int32Array(t2 * e2), n2 = this.yuvData;
          let i2 = this.top * this.dataWidth + this.left;
          for (let s2 = 0; s2 < e2; s2++) {
            const e3 = s2 * t2;
            for (let s3 = 0; s3 < t2; s3++) {
              const t3 = 255 & n2[i2 + s3 * pr.THUMBNAIL_SCALE_FACTOR];
              r2[e3 + s3] = 4278190080 | 65793 * t3;
            }
            i2 += this.dataWidth * pr.THUMBNAIL_SCALE_FACTOR;
          }
          return r2;
        }
        getThumbnailWidth() {
          return this.getWidth() / pr.THUMBNAIL_SCALE_FACTOR;
        }
        getThumbnailHeight() {
          return this.getHeight() / pr.THUMBNAIL_SCALE_FACTOR;
        }
        reverseHorizontal(t2, e2) {
          const r2 = this.yuvData;
          for (let n2 = 0, i2 = this.top * this.dataWidth + this.left; n2 < e2; n2++, i2 += this.dataWidth) {
            const e3 = i2 + t2 / 2;
            for (let n3 = i2, s2 = i2 + t2 - 1; n3 < e3; n3++, s2--) {
              const t3 = r2[n3];
              r2[n3] = r2[s2], r2[s2] = t3;
            }
          }
        }
        invert() {
          return new M(this);
        }
      }
      pr.THUMBNAIL_SCALE_FACTOR = 2;
      class Tr extends O {
        constructor(t2, e2, r2, n2, i2, s2, o2) {
          if (super(e2, r2), this.dataWidth = n2, this.dataHeight = i2, this.left = s2, this.top = o2, 4 === t2.BYTES_PER_ELEMENT) {
            const n3 = e2 * r2, i3 = new Uint8ClampedArray(n3);
            for (let e3 = 0; e3 < n3; e3++) {
              const r3 = t2[e3], n4 = r3 >> 16 & 255, s3 = r3 >> 7 & 510, o3 = 255 & r3;
              i3[e3] = (n4 + s3 + o3) / 4 & 255;
            }
            this.luminances = i3;
          } else this.luminances = t2;
          if (void 0 === n2 && (this.dataWidth = e2), void 0 === i2 && (this.dataHeight = r2), void 0 === s2 && (this.left = 0), void 0 === o2 && (this.top = 0), this.left + e2 > this.dataWidth || this.top + r2 > this.dataHeight) throw new a("Crop rectangle does not fit within image data.");
        }
        getRow(t2, e2) {
          if (t2 < 0 || t2 >= this.getHeight()) throw new a("Requested row is outside the image: " + t2);
          const r2 = this.getWidth();
          (null == e2 || e2.length < r2) && (e2 = new Uint8ClampedArray(r2));
          const n2 = (t2 + this.top) * this.dataWidth + this.left;
          return d.arraycopy(this.luminances, n2, e2, 0, r2), e2;
        }
        getMatrix() {
          const t2 = this.getWidth(), e2 = this.getHeight();
          if (t2 === this.dataWidth && e2 === this.dataHeight) return this.luminances;
          const r2 = t2 * e2, n2 = new Uint8ClampedArray(r2);
          let i2 = this.top * this.dataWidth + this.left;
          if (t2 === this.dataWidth) return d.arraycopy(this.luminances, i2, n2, 0, r2), n2;
          for (let r3 = 0; r3 < e2; r3++) {
            const e3 = r3 * t2;
            d.arraycopy(this.luminances, i2, n2, e3, t2), i2 += this.dataWidth;
          }
          return n2;
        }
        isCropSupported() {
          return true;
        }
        crop(t2, e2, r2, n2) {
          return new Tr(this.luminances, r2, n2, this.dataWidth, this.dataHeight, this.left + t2, this.top + e2);
        }
        invert() {
          return new M(this);
        }
      }
      class Rr extends I {
        static forName(t2) {
          return this.getCharacterSetECIByName(t2);
        }
      }
      class Nr {
      }
      Nr.ISO_8859_1 = I.ISO8859_1;
      class yr {
        constructor(t2, e2, r2) {
          this.codewords = t2, this.numcols = e2, this.numrows = r2, this.bits = new Uint8Array(e2 * r2), f.fill(this.bits, 2);
        }
        getNumrows() {
          return this.numrows;
        }
        getNumcols() {
          return this.numcols;
        }
        getBits() {
          return this.bits;
        }
        getBit(t2, e2) {
          return 1 === this.bits[e2 * this.numcols + t2];
        }
        setBit(t2, e2, r2) {
          this.bits[e2 * this.numcols + t2] = r2 ? 1 : 0;
        }
        noBit(t2, e2) {
          return 2 === this.bits[e2 * this.numcols + t2];
        }
        place() {
          let t2 = 0, e2 = 4, r2 = 0;
          do {
            e2 === this.numrows && 0 === r2 && this.corner1(t2++), e2 === this.numrows - 2 && 0 === r2 && this.numcols % 4 != 0 && this.corner2(t2++), e2 === this.numrows - 2 && 0 === r2 && this.numcols % 8 == 4 && this.corner3(t2++), e2 === this.numrows + 4 && 2 === r2 && this.numcols % 8 == 0 && this.corner4(t2++);
            do {
              e2 < this.numrows && r2 >= 0 && this.noBit(r2, e2) && this.utah(e2, r2, t2++), e2 -= 2, r2 += 2;
            } while (e2 >= 0 && r2 < this.numcols);
            e2++, r2 += 3;
            do {
              e2 >= 0 && r2 < this.numcols && this.noBit(r2, e2) && this.utah(e2, r2, t2++), e2 += 2, r2 -= 2;
            } while (e2 < this.numrows && r2 >= 0);
            e2 += 3, r2++;
          } while (e2 < this.numrows || r2 < this.numcols);
          this.noBit(this.numcols - 1, this.numrows - 1) && (this.setBit(this.numcols - 1, this.numrows - 1, true), this.setBit(this.numcols - 2, this.numrows - 2, true));
        }
        module(t2, e2, r2, n2) {
          t2 < 0 && (t2 += this.numrows, e2 += 4 - (this.numrows + 4) % 8), e2 < 0 && (e2 += this.numcols, t2 += 4 - (this.numcols + 4) % 8);
          let i2 = this.codewords.charCodeAt(r2);
          i2 &= 1 << 8 - n2, this.setBit(e2, t2, 0 !== i2);
        }
        utah(t2, e2, r2) {
          this.module(t2 - 2, e2 - 2, r2, 1), this.module(t2 - 2, e2 - 1, r2, 2), this.module(t2 - 1, e2 - 2, r2, 3), this.module(t2 - 1, e2 - 1, r2, 4), this.module(t2 - 1, e2, r2, 5), this.module(t2, e2 - 2, r2, 6), this.module(t2, e2 - 1, r2, 7), this.module(t2, e2, r2, 8);
        }
        corner1(t2) {
          this.module(this.numrows - 1, 0, t2, 1), this.module(this.numrows - 1, 1, t2, 2), this.module(this.numrows - 1, 2, t2, 3), this.module(0, this.numcols - 2, t2, 4), this.module(0, this.numcols - 1, t2, 5), this.module(1, this.numcols - 1, t2, 6), this.module(2, this.numcols - 1, t2, 7), this.module(3, this.numcols - 1, t2, 8);
        }
        corner2(t2) {
          this.module(this.numrows - 3, 0, t2, 1), this.module(this.numrows - 2, 0, t2, 2), this.module(this.numrows - 1, 0, t2, 3), this.module(0, this.numcols - 4, t2, 4), this.module(0, this.numcols - 3, t2, 5), this.module(0, this.numcols - 2, t2, 6), this.module(0, this.numcols - 1, t2, 7), this.module(1, this.numcols - 1, t2, 8);
        }
        corner3(t2) {
          this.module(this.numrows - 3, 0, t2, 1), this.module(this.numrows - 2, 0, t2, 2), this.module(this.numrows - 1, 0, t2, 3), this.module(0, this.numcols - 2, t2, 4), this.module(0, this.numcols - 1, t2, 5), this.module(1, this.numcols - 1, t2, 6), this.module(2, this.numcols - 1, t2, 7), this.module(3, this.numcols - 1, t2, 8);
        }
        corner4(t2) {
          this.module(this.numrows - 1, 0, t2, 1), this.module(this.numrows - 1, this.numcols - 1, t2, 2), this.module(0, this.numcols - 3, t2, 3), this.module(0, this.numcols - 2, t2, 4), this.module(0, this.numcols - 1, t2, 5), this.module(1, this.numcols - 3, t2, 6), this.module(1, this.numcols - 2, t2, 7), this.module(1, this.numcols - 1, t2, 8);
        }
      }
      const Dr = [5, 7, 10, 11, 12, 14, 18, 20, 24, 28, 36, 42, 48, 56, 62, 68], Or = [[228, 48, 15, 111, 62], [23, 68, 144, 134, 240, 92, 254], [28, 24, 185, 166, 223, 248, 116, 255, 110, 61], [175, 138, 205, 12, 194, 168, 39, 245, 60, 97, 120], [41, 153, 158, 91, 61, 42, 142, 213, 97, 178, 100, 242], [156, 97, 192, 252, 95, 9, 157, 119, 138, 45, 18, 186, 83, 185], [83, 195, 100, 39, 188, 75, 66, 61, 241, 213, 109, 129, 94, 254, 225, 48, 90, 188], [15, 195, 244, 9, 233, 71, 168, 2, 188, 160, 153, 145, 253, 79, 108, 82, 27, 174, 186, 172], [52, 190, 88, 205, 109, 39, 176, 21, 155, 197, 251, 223, 155, 21, 5, 172, 254, 124, 12, 181, 184, 96, 50, 193], [211, 231, 43, 97, 71, 96, 103, 174, 37, 151, 170, 53, 75, 34, 249, 121, 17, 138, 110, 213, 141, 136, 120, 151, 233, 168, 93, 255], [245, 127, 242, 218, 130, 250, 162, 181, 102, 120, 84, 179, 220, 251, 80, 182, 229, 18, 2, 4, 68, 33, 101, 137, 95, 119, 115, 44, 175, 184, 59, 25, 225, 98, 81, 112], [77, 193, 137, 31, 19, 38, 22, 153, 247, 105, 122, 2, 245, 133, 242, 8, 175, 95, 100, 9, 167, 105, 214, 111, 57, 121, 21, 1, 253, 57, 54, 101, 248, 202, 69, 50, 150, 177, 226, 5, 9, 5], [245, 132, 172, 223, 96, 32, 117, 22, 238, 133, 238, 231, 205, 188, 237, 87, 191, 106, 16, 147, 118, 23, 37, 90, 170, 205, 131, 88, 120, 100, 66, 138, 186, 240, 82, 44, 176, 87, 187, 147, 160, 175, 69, 213, 92, 253, 225, 19], [175, 9, 223, 238, 12, 17, 220, 208, 100, 29, 175, 170, 230, 192, 215, 235, 150, 159, 36, 223, 38, 200, 132, 54, 228, 146, 218, 234, 117, 203, 29, 232, 144, 238, 22, 150, 201, 117, 62, 207, 164, 13, 137, 245, 127, 67, 247, 28, 155, 43, 203, 107, 233, 53, 143, 46], [242, 93, 169, 50, 144, 210, 39, 118, 202, 188, 201, 189, 143, 108, 196, 37, 185, 112, 134, 230, 245, 63, 197, 190, 250, 106, 185, 221, 175, 64, 114, 71, 161, 44, 147, 6, 27, 218, 51, 63, 87, 10, 40, 130, 188, 17, 163, 31, 176, 170, 4, 107, 232, 7, 94, 166, 224, 124, 86, 47, 11, 204], [220, 228, 173, 89, 251, 149, 159, 56, 89, 33, 147, 244, 154, 36, 73, 127, 213, 136, 248, 180, 234, 197, 158, 177, 68, 122, 93, 213, 15, 160, 227, 236, 66, 139, 153, 185, 202, 167, 179, 25, 220, 232, 96, 210, 231, 136, 223, 239, 181, 241, 59, 52, 172, 25, 49, 232, 211, 189, 64, 54, 108, 153, 132, 63, 96, 103, 82, 186]], { LOG: Mr, ALOG: br } = ((t2, e2) => {
        let r2 = 1;
        for (let n2 = 0; n2 < 255; n2++) e2[n2] = r2, t2[r2] = n2, r2 *= 2, r2 >= 256 && (r2 ^= 301);
        return { LOG: t2, ALOG: e2 };
      })([], []);
      var Br;
      t.DataMatrixSymbolShapeHint = void 0, (Br = t.DataMatrixSymbolShapeHint || (t.DataMatrixSymbolShapeHint = {}))[Br.FORCE_NONE = 0] = "FORCE_NONE", Br[Br.FORCE_SQUARE = 1] = "FORCE_SQUARE", Br[Br.FORCE_RECTANGLE = 2] = "FORCE_RECTANGLE";
      const Pr = "[)>05", Lr = "[)>06", Fr = "";
      class vr {
        static encodeECC200(t2, e2) {
          if (t2.length !== e2.getDataCapacity()) throw new Error("The number of codewords does not match the selected symbol");
          const r2 = new T();
          r2.append(t2);
          const n2 = e2.getInterleavedBlockCount();
          if (1 === n2) {
            const n3 = this.createECCBlock(t2, e2.getErrorCodewords());
            r2.append(n3);
          } else {
            const i2 = [];
            for (let t3 = 0; t3 < n2; t3++) e2.getDataLengthForInterleavedBlock(t3 + 1), i2[t3] = e2.getErrorLengthForInterleavedBlock(t3 + 1);
            for (let s2 = 0; s2 < n2; s2++) {
              const o2 = new T();
              for (let r3 = s2; r3 < e2.getDataCapacity(); r3 += n2) o2.append(t2.charAt(r3));
              const a2 = this.createECCBlock(o2.toString(), i2[s2]);
              let h2 = 0;
              for (let t3 = s2; t3 < i2[s2] * n2; t3 += n2) r2.setCharAt(e2.getDataCapacity() + t3, a2.charAt(h2++));
            }
          }
          return r2.toString();
        }
        static createECCBlock(t2, e2) {
          let r2 = -1;
          for (let t3 = 0; t3 < Dr.length; t3++) if (Dr[t3] === e2) {
            r2 = t3;
            break;
          }
          if (r2 < 0) throw new Error("Illegal number of error correction codewords specified: " + e2);
          const n2 = Or[r2], i2 = [];
          for (let t3 = 0; t3 < e2; t3++) i2[t3] = 0;
          for (let r3 = 0; r3 < t2.length; r3++) {
            let s3 = i2[e2 - 1] ^ t2.charAt(r3).charCodeAt(0);
            for (let t3 = e2 - 1; t3 > 0; t3--) 0 !== s3 && 0 !== n2[t3] ? i2[t3] = i2[t3 - 1] ^ br[(Mr[s3] + Mr[n2[t3]]) % 255] : i2[t3] = i2[t3 - 1];
            0 !== s3 && 0 !== n2[0] ? i2[0] = br[(Mr[s3] + Mr[n2[0]]) % 255] : i2[0] = 0;
          }
          const s2 = [];
          for (let t3 = 0; t3 < e2; t3++) s2[t3] = i2[e2 - t3 - 1];
          return s2.map((t3) => String.fromCharCode(t3)).join("");
        }
      }
      class kr {
        getEncodingMode() {
          return 0;
        }
        encode(t2) {
          if (Yr.determineConsecutiveDigitCount(t2.getMessage(), t2.pos) >= 2) t2.writeCodeword(this.encodeASCIIDigits(t2.getMessage().charCodeAt(t2.pos), t2.getMessage().charCodeAt(t2.pos + 1))), t2.pos += 2;
          else {
            const e2 = t2.getCurrentChar(), r2 = Yr.lookAheadTest(t2.getMessage(), t2.pos, this.getEncodingMode());
            if (r2 !== this.getEncodingMode()) switch (r2) {
              case 5:
                return t2.writeCodeword(231), void t2.signalEncoderChange(5);
              case 1:
                return t2.writeCodeword(230), void t2.signalEncoderChange(1);
              case 3:
                t2.writeCodeword(238), t2.signalEncoderChange(3);
                break;
              case 2:
                t2.writeCodeword(239), t2.signalEncoderChange(2);
                break;
              case 4:
                t2.writeCodeword(240), t2.signalEncoderChange(4);
                break;
              default:
                throw new Error("Illegal mode: " + r2);
            }
            else Yr.isExtendedASCII(e2) ? (t2.writeCodeword(235), t2.writeCodeword(e2 - 128 + 1), t2.pos++) : (t2.writeCodeword(e2 + 1), t2.pos++);
          }
        }
        encodeASCIIDigits(t2, e2) {
          if (Yr.isDigit(t2) && Yr.isDigit(e2)) {
            return 10 * (t2 - 48) + (e2 - 48) + 130;
          }
          throw new Error("not digits: " + t2 + e2);
        }
      }
      class xr {
        getEncodingMode() {
          return 5;
        }
        encode(t2) {
          const e2 = new T();
          for (e2.append(0); t2.hasMoreCharacters(); ) {
            const r3 = t2.getCurrentChar();
            e2.append(r3), t2.pos++;
            if (Yr.lookAheadTest(t2.getMessage(), t2.pos, this.getEncodingMode()) !== this.getEncodingMode()) {
              t2.signalEncoderChange(0);
              break;
            }
          }
          const r2 = e2.length() - 1, n2 = t2.getCodewordCount() + r2 + 1;
          t2.updateSymbolInfo(n2);
          const i2 = t2.getSymbolInfo().getDataCapacity() - n2 > 0;
          if (t2.hasMoreCharacters() || i2) if (r2 <= 249) e2.setCharAt(0, p.getCharAt(r2));
          else {
            if (!(r2 <= 1555)) throw new Error("Message length not in valid ranges: " + r2);
            e2.setCharAt(0, p.getCharAt(Math.floor(r2 / 250) + 249)), e2.insert(1, p.getCharAt(r2 % 250));
          }
          for (let r3 = 0, n3 = e2.length(); r3 < n3; r3++) t2.writeCodeword(this.randomize255State(e2.charAt(r3).charCodeAt(0), t2.getCodewordCount() + 1));
        }
        randomize255State(t2, e2) {
          const r2 = t2 + (149 * e2 % 255 + 1);
          return r2 <= 255 ? r2 : r2 - 256;
        }
      }
      class Vr {
        getEncodingMode() {
          return 1;
        }
        encodeMaximal(t2) {
          const e2 = new T();
          let r2 = 0, n2 = t2.pos, i2 = 0;
          for (; t2.hasMoreCharacters(); ) {
            const s2 = t2.getCurrentChar();
            t2.pos++, r2 = this.encodeChar(s2, e2), e2.length() % 3 == 0 && (n2 = t2.pos, i2 = e2.length());
          }
          if (i2 !== e2.length()) {
            const i3 = Math.floor(e2.length() / 3 * 2), s2 = Math.floor(t2.getCodewordCount() + i3 + 1);
            t2.updateSymbolInfo(s2);
            const o2 = t2.getSymbolInfo().getDataCapacity() - s2, a2 = Math.floor(e2.length() % 3);
            (2 === a2 && 2 !== o2 || 1 === a2 && (r2 > 3 || 1 !== o2)) && (t2.pos = n2);
          }
          e2.length() > 0 && t2.writeCodeword(230), this.handleEOD(t2, e2);
        }
        encode(t2) {
          const e2 = new T();
          for (; t2.hasMoreCharacters(); ) {
            const r2 = t2.getCurrentChar();
            t2.pos++;
            let n2 = this.encodeChar(r2, e2);
            const i2 = 2 * Math.floor(e2.length() / 3), s2 = t2.getCodewordCount() + i2;
            t2.updateSymbolInfo(s2);
            const o2 = t2.getSymbolInfo().getDataCapacity() - s2;
            if (!t2.hasMoreCharacters()) {
              const r3 = new T();
              for (e2.length() % 3 == 2 && 2 !== o2 && (n2 = this.backtrackOneCharacter(t2, e2, r3, n2)); e2.length() % 3 == 1 && (n2 > 3 || 1 !== o2); ) n2 = this.backtrackOneCharacter(t2, e2, r3, n2);
              break;
            }
            if (e2.length() % 3 == 0) {
              if (Yr.lookAheadTest(t2.getMessage(), t2.pos, this.getEncodingMode()) !== this.getEncodingMode()) {
                t2.signalEncoderChange(0);
                break;
              }
            }
          }
          this.handleEOD(t2, e2);
        }
        backtrackOneCharacter(t2, e2, r2, n2) {
          const i2 = e2.length(), s2 = e2.toString().substring(0, i2 - n2);
          e2.setLengthToZero(), e2.append(s2), t2.pos--;
          const o2 = t2.getCurrentChar();
          return n2 = this.encodeChar(o2, r2), t2.resetSymbolInfo(), n2;
        }
        writeNextTriplet(t2, e2) {
          t2.writeCodewords(this.encodeToCodewords(e2.toString()));
          const r2 = e2.toString().substring(3);
          e2.setLengthToZero(), e2.append(r2);
        }
        handleEOD(t2, e2) {
          const r2 = Math.floor(e2.length() / 3 * 2), n2 = e2.length() % 3, i2 = t2.getCodewordCount() + r2;
          t2.updateSymbolInfo(i2);
          const s2 = t2.getSymbolInfo().getDataCapacity() - i2;
          if (2 === n2) {
            for (e2.append("\0"); e2.length() >= 3; ) this.writeNextTriplet(t2, e2);
            t2.hasMoreCharacters() && t2.writeCodeword(254);
          } else if (1 === s2 && 1 === n2) {
            for (; e2.length() >= 3; ) this.writeNextTriplet(t2, e2);
            t2.hasMoreCharacters() && t2.writeCodeword(254), t2.pos--;
          } else {
            if (0 !== n2) throw new Error("Unexpected case. Please report!");
            for (; e2.length() >= 3; ) this.writeNextTriplet(t2, e2);
            (s2 > 0 || t2.hasMoreCharacters()) && t2.writeCodeword(254);
          }
          t2.signalEncoderChange(0);
        }
        encodeChar(t2, e2) {
          if (t2 === " ".charCodeAt(0)) return e2.append(3), 1;
          if (t2 >= "0".charCodeAt(0) && t2 <= "9".charCodeAt(0)) return e2.append(t2 - 48 + 4), 1;
          if (t2 >= "A".charCodeAt(0) && t2 <= "Z".charCodeAt(0)) return e2.append(t2 - 65 + 14), 1;
          if (t2 < " ".charCodeAt(0)) return e2.append(0), e2.append(t2), 2;
          if (t2 <= "/".charCodeAt(0)) return e2.append(1), e2.append(t2 - 33), 2;
          if (t2 <= "@".charCodeAt(0)) return e2.append(1), e2.append(t2 - 58 + 15), 2;
          if (t2 <= "_".charCodeAt(0)) return e2.append(1), e2.append(t2 - 91 + 22), 2;
          if (t2 <= 127) return e2.append(2), e2.append(t2 - 96), 2;
          e2.append("1");
          let r2 = 2;
          return r2 += this.encodeChar(t2 - 128, e2), r2;
        }
        encodeToCodewords(t2) {
          const e2 = 1600 * t2.charCodeAt(0) + 40 * t2.charCodeAt(1) + t2.charCodeAt(2) + 1, r2 = e2 / 256, n2 = e2 % 256, i2 = new T();
          return i2.append(r2), i2.append(n2), i2.toString();
        }
      }
      class Hr {
        getEncodingMode() {
          return 4;
        }
        encode(t2) {
          const e2 = new T();
          for (; t2.hasMoreCharacters(); ) {
            const r2 = t2.getCurrentChar();
            this.encodeChar(r2, e2), t2.pos++;
            if (e2.length() >= 4) {
              t2.writeCodewords(this.encodeToCodewords(e2.toString()));
              const r3 = e2.toString().substring(4);
              e2.setLengthToZero(), e2.append(r3);
              if (Yr.lookAheadTest(t2.getMessage(), t2.pos, this.getEncodingMode()) !== this.getEncodingMode()) {
                t2.signalEncoderChange(0);
                break;
              }
            }
          }
          e2.append(p.getCharAt(31)), this.handleEOD(t2, e2);
        }
        handleEOD(t2, e2) {
          try {
            const r2 = e2.length();
            if (0 === r2) return;
            if (1 === r2) {
              t2.updateSymbolInfo();
              let e3 = t2.getSymbolInfo().getDataCapacity() - t2.getCodewordCount();
              const r3 = t2.getRemainingCharacters();
              if (r3 > e3 && (t2.updateSymbolInfo(t2.getCodewordCount() + 1), e3 = t2.getSymbolInfo().getDataCapacity() - t2.getCodewordCount()), r3 <= e3 && e3 <= 2) return;
            }
            if (r2 > 4) throw new Error("Count must not exceed 4");
            const n2 = r2 - 1, i2 = this.encodeToCodewords(e2.toString());
            let s2 = !t2.hasMoreCharacters() && n2 <= 2;
            if (n2 <= 2) {
              t2.updateSymbolInfo(t2.getCodewordCount() + n2);
              t2.getSymbolInfo().getDataCapacity() - t2.getCodewordCount() >= 3 && (s2 = false, t2.updateSymbolInfo(t2.getCodewordCount() + i2.length));
            }
            s2 ? (t2.resetSymbolInfo(), t2.pos -= n2) : t2.writeCodewords(i2);
          } finally {
            t2.signalEncoderChange(0);
          }
        }
        encodeChar(t2, e2) {
          t2 >= " ".charCodeAt(0) && t2 <= "?".charCodeAt(0) ? e2.append(t2) : t2 >= "@".charCodeAt(0) && t2 <= "^".charCodeAt(0) ? e2.append(p.getCharAt(t2 - 64)) : Yr.illegalCharacter(p.getCharAt(t2));
        }
        encodeToCodewords(t2) {
          const e2 = t2.length;
          if (0 === e2) throw new Error("StringBuilder must not be empty");
          const r2 = (t2.charAt(0).charCodeAt(0) << 18) + ((e2 >= 2 ? t2.charAt(1).charCodeAt(0) : 0) << 12) + ((e2 >= 3 ? t2.charAt(2).charCodeAt(0) : 0) << 6) + (e2 >= 4 ? t2.charAt(3).charCodeAt(0) : 0), n2 = r2 >> 16 & 255, i2 = r2 >> 8 & 255, s2 = 255 & r2, o2 = new T();
          return o2.append(n2), e2 >= 2 && o2.append(i2), e2 >= 3 && o2.append(s2), o2.toString();
        }
      }
      class Ur {
        constructor(t2, e2, r2, n2, i2, s2, o2 = 0, a2 = 0) {
          this.rectangular = t2, this.dataCapacity = e2, this.errorCodewords = r2, this.matrixWidth = n2, this.matrixHeight = i2, this.dataRegions = s2, this.rsBlockData = o2, this.rsBlockError = a2;
        }
        static lookup(t2, e2 = 0, r2 = null, n2 = null, i2 = true) {
          for (const i3 of Xr) if ((1 !== e2 || !i3.rectangular) && (2 !== e2 || i3.rectangular) && (null == r2 || !(i3.getSymbolWidth() < r2.getWidth() || i3.getSymbolHeight() < r2.getHeight())) && (null == n2 || !(i3.getSymbolWidth() > n2.getWidth() || i3.getSymbolHeight() > n2.getHeight())) && t2 <= i3.dataCapacity) return i3;
          if (i2) throw new Error("Can't find a symbol arrangement that matches the message. Data codewords: " + t2);
          return null;
        }
        getHorizontalDataRegions() {
          switch (this.dataRegions) {
            case 1:
              return 1;
            case 2:
            case 4:
              return 2;
            case 16:
              return 4;
            case 36:
              return 6;
            default:
              throw new Error("Cannot handle this number of data regions");
          }
        }
        getVerticalDataRegions() {
          switch (this.dataRegions) {
            case 1:
            case 2:
              return 1;
            case 4:
              return 2;
            case 16:
              return 4;
            case 36:
              return 6;
            default:
              throw new Error("Cannot handle this number of data regions");
          }
        }
        getSymbolDataWidth() {
          return this.getHorizontalDataRegions() * this.matrixWidth;
        }
        getSymbolDataHeight() {
          return this.getVerticalDataRegions() * this.matrixHeight;
        }
        getSymbolWidth() {
          return this.getSymbolDataWidth() + 2 * this.getHorizontalDataRegions();
        }
        getSymbolHeight() {
          return this.getSymbolDataHeight() + 2 * this.getVerticalDataRegions();
        }
        getCodewordCount() {
          return this.dataCapacity + this.errorCodewords;
        }
        getInterleavedBlockCount() {
          return this.rsBlockData ? this.dataCapacity / this.rsBlockData : 1;
        }
        getDataCapacity() {
          return this.dataCapacity;
        }
        getErrorCodewords() {
          return this.errorCodewords;
        }
        getDataLengthForInterleavedBlock(t2) {
          return this.rsBlockData;
        }
        getErrorLengthForInterleavedBlock(t2) {
          return this.rsBlockError;
        }
      }
      const Xr = [new Ur(false, 3, 5, 8, 8, 1), new Ur(false, 5, 7, 10, 10, 1), new Ur(true, 5, 7, 16, 6, 1), new Ur(false, 8, 10, 12, 12, 1), new Ur(true, 10, 11, 14, 6, 2), new Ur(false, 12, 12, 14, 14, 1), new Ur(true, 16, 14, 24, 10, 1), new Ur(false, 18, 14, 16, 16, 1), new Ur(false, 22, 18, 18, 18, 1), new Ur(true, 22, 18, 16, 10, 2), new Ur(false, 30, 20, 20, 20, 1), new Ur(true, 32, 24, 16, 14, 2), new Ur(false, 36, 24, 22, 22, 1), new Ur(false, 44, 28, 24, 24, 1), new Ur(true, 49, 28, 22, 14, 2), new Ur(false, 62, 36, 14, 14, 4), new Ur(false, 86, 42, 16, 16, 4), new Ur(false, 114, 48, 18, 18, 4), new Ur(false, 144, 56, 20, 20, 4), new Ur(false, 174, 68, 22, 22, 4), new Ur(false, 204, 84, 24, 24, 4, 102, 42), new Ur(false, 280, 112, 14, 14, 16, 140, 56), new Ur(false, 368, 144, 16, 16, 16, 92, 36), new Ur(false, 456, 192, 18, 18, 16, 114, 48), new Ur(false, 576, 224, 20, 20, 16, 144, 56), new Ur(false, 696, 272, 22, 22, 16, 174, 68), new Ur(false, 816, 336, 24, 24, 16, 136, 56), new Ur(false, 1050, 408, 18, 18, 36, 175, 68), new Ur(false, 1304, 496, 20, 20, 36, 163, 62), new class extends Ur {
        constructor() {
          super(false, 1558, 620, 22, 22, 36, -1, 62);
        }
        getInterleavedBlockCount() {
          return 10;
        }
        getDataLengthForInterleavedBlock(t2) {
          return t2 <= 8 ? 156 : 155;
        }
      }()];
      class Gr {
        constructor(t2) {
          this.msg = t2, this.pos = 0, this.skipAtEnd = 0;
          const e2 = t2.split("").map((t3) => t3.charCodeAt(0)), r2 = new T();
          for (let n2 = 0, i2 = e2.length; n2 < i2; n2++) {
            const i3 = String.fromCharCode(255 & e2[n2]);
            if ("?" === i3 && "?" !== t2.charAt(n2)) throw new Error("Message contains characters outside ISO-8859-1 encoding.");
            r2.append(i3);
          }
          this.msg = r2.toString(), this.shape = 0, this.codewords = new T(), this.newEncoding = -1;
        }
        setSymbolShape(t2) {
          this.shape = t2;
        }
        setSizeConstraints(t2, e2) {
          this.minSize = t2, this.maxSize = e2;
        }
        getMessage() {
          return this.msg;
        }
        setSkipAtEnd(t2) {
          this.skipAtEnd = t2;
        }
        getCurrentChar() {
          return this.msg.charCodeAt(this.pos);
        }
        getCurrent() {
          return this.msg.charCodeAt(this.pos);
        }
        getCodewords() {
          return this.codewords;
        }
        writeCodewords(t2) {
          this.codewords.append(t2);
        }
        writeCodeword(t2) {
          this.codewords.append(t2);
        }
        getCodewordCount() {
          return this.codewords.length();
        }
        getNewEncoding() {
          return this.newEncoding;
        }
        signalEncoderChange(t2) {
          this.newEncoding = t2;
        }
        resetEncoderSignal() {
          this.newEncoding = -1;
        }
        hasMoreCharacters() {
          return this.pos < this.getTotalMessageCharCount();
        }
        getTotalMessageCharCount() {
          return this.msg.length - this.skipAtEnd;
        }
        getRemainingCharacters() {
          return this.getTotalMessageCharCount() - this.pos;
        }
        getSymbolInfo() {
          return this.symbolInfo;
        }
        updateSymbolInfo(t2 = this.getCodewordCount()) {
          (null == this.symbolInfo || t2 > this.symbolInfo.getDataCapacity()) && (this.symbolInfo = Ur.lookup(t2, this.shape, this.minSize, this.maxSize, true));
        }
        resetSymbolInfo() {
          this.symbolInfo = null;
        }
      }
      class Wr extends Vr {
        getEncodingMode() {
          return 3;
        }
        encode(t2) {
          const e2 = new T();
          for (; t2.hasMoreCharacters(); ) {
            const r2 = t2.getCurrentChar();
            t2.pos++, this.encodeChar(r2, e2);
            if (e2.length() % 3 == 0) {
              this.writeNextTriplet(t2, e2);
              if (Yr.lookAheadTest(t2.getMessage(), t2.pos, this.getEncodingMode()) !== this.getEncodingMode()) {
                t2.signalEncoderChange(0);
                break;
              }
            }
          }
          this.handleEOD(t2, e2);
        }
        encodeChar(t2, e2) {
          switch (t2) {
            case 13:
              e2.append(0);
              break;
            case "*".charCodeAt(0):
              e2.append(1);
              break;
            case ">".charCodeAt(0):
              e2.append(2);
              break;
            case " ".charCodeAt(0):
              e2.append(3);
              break;
            default:
              t2 >= "0".charCodeAt(0) && t2 <= "9".charCodeAt(0) ? e2.append(t2 - 48 + 4) : t2 >= "A".charCodeAt(0) && t2 <= "Z".charCodeAt(0) ? e2.append(t2 - 65 + 14) : Yr.illegalCharacter(p.getCharAt(t2));
          }
          return 1;
        }
        handleEOD(t2, e2) {
          t2.updateSymbolInfo();
          const r2 = t2.getSymbolInfo().getDataCapacity() - t2.getCodewordCount(), n2 = e2.length();
          t2.pos -= n2, (t2.getRemainingCharacters() > 1 || r2 > 1 || t2.getRemainingCharacters() !== r2) && t2.writeCodeword(254), t2.getNewEncoding() < 0 && t2.signalEncoderChange(0);
        }
      }
      class zr extends Vr {
        getEncodingMode() {
          return 2;
        }
        encodeChar(t2, e2) {
          if (t2 === " ".charCodeAt(0)) return e2.append(3), 1;
          if (t2 >= "0".charCodeAt(0) && t2 <= "9".charCodeAt(0)) return e2.append(t2 - 48 + 4), 1;
          if (t2 >= "a".charCodeAt(0) && t2 <= "z".charCodeAt(0)) return e2.append(t2 - 97 + 14), 1;
          if (t2 < " ".charCodeAt(0)) return e2.append(0), e2.append(t2), 2;
          if (t2 <= "/".charCodeAt(0)) return e2.append(1), e2.append(t2 - 33), 2;
          if (t2 <= "@".charCodeAt(0)) return e2.append(1), e2.append(t2 - 58 + 15), 2;
          if (t2 >= "[".charCodeAt(0) && t2 <= "_".charCodeAt(0)) return e2.append(1), e2.append(t2 - 91 + 22), 2;
          if (t2 === "`".charCodeAt(0)) return e2.append(2), e2.append(0), 2;
          if (t2 <= "Z".charCodeAt(0)) return e2.append(2), e2.append(t2 - 65 + 1), 2;
          if (t2 <= 127) return e2.append(2), e2.append(t2 - 123 + 27), 2;
          e2.append("1");
          let r2 = 2;
          return r2 += this.encodeChar(t2 - 128, e2), r2;
        }
      }
      class Yr {
        static randomize253State(t2) {
          const e2 = 129 + (149 * t2 % 253 + 1);
          return e2 <= 254 ? e2 : e2 - 254;
        }
        static encodeHighLevel(t2, e2 = 0, r2 = null, n2 = null, i2 = false) {
          const s2 = new Vr(), o2 = [new kr(), s2, new zr(), new Wr(), new Hr(), new xr()], a2 = new Gr(t2);
          a2.setSymbolShape(e2), a2.setSizeConstraints(r2, n2), t2.startsWith(Pr) && t2.endsWith(Fr) ? (a2.writeCodeword(236), a2.setSkipAtEnd(2), a2.pos += 7) : t2.startsWith(Lr) && t2.endsWith(Fr) && (a2.writeCodeword(237), a2.setSkipAtEnd(2), a2.pos += 7);
          let h2 = 0;
          for (i2 && (s2.encodeMaximal(a2), h2 = a2.getNewEncoding(), a2.resetEncoderSignal()); a2.hasMoreCharacters(); ) o2[h2].encode(a2), a2.getNewEncoding() >= 0 && (h2 = a2.getNewEncoding(), a2.resetEncoderSignal());
          const l2 = a2.getCodewordCount();
          a2.updateSymbolInfo();
          const c2 = a2.getSymbolInfo().getDataCapacity();
          l2 < c2 && 0 !== h2 && 5 !== h2 && 4 !== h2 && a2.writeCodeword("þ");
          const d2 = a2.getCodewords();
          for (d2.length() < c2 && d2.append(129); d2.length() < c2; ) d2.append(this.randomize253State(d2.length() + 1));
          return a2.getCodewords().toString();
        }
        static lookAheadTest(t2, e2, r2) {
          const n2 = this.lookAheadTestIntern(t2, e2, r2);
          if (3 === r2 && 3 === n2) {
            const r3 = Math.min(e2 + 3, t2.length);
            for (let n3 = e2; n3 < r3; n3++) if (!this.isNativeX12(t2.charCodeAt(n3))) return 0;
          } else if (4 === r2 && 4 === n2) {
            const r3 = Math.min(e2 + 4, t2.length);
            for (let n3 = e2; n3 < r3; n3++) if (!this.isNativeEDIFACT(t2.charCodeAt(n3))) return 0;
          }
          return n2;
        }
        static lookAheadTestIntern(t2, e2, r2) {
          if (e2 >= t2.length) return r2;
          let n2;
          0 === r2 ? n2 = [0, 1, 1, 1, 1, 1.25] : (n2 = [1, 2, 2, 2, 2, 2.25], n2[r2] = 0);
          let i2 = 0;
          const s2 = new Uint8Array(6), o2 = [];
          for (; ; ) {
            if (e2 + i2 === t2.length) {
              f.fill(s2, 0), f.fill(o2, 0);
              const t3 = this.findMinimums(n2, o2, w.MAX_VALUE, s2), e3 = this.getMinimumCount(s2);
              if (o2[0] === t3) return 0;
              if (1 === e3) {
                if (s2[5] > 0) return 5;
                if (s2[4] > 0) return 4;
                if (s2[2] > 0) return 2;
                if (s2[3] > 0) return 3;
              }
              return 1;
            }
            const r3 = t2.charCodeAt(e2 + i2);
            if (i2++, this.isDigit(r3) ? n2[0] += 0.5 : this.isExtendedASCII(r3) ? (n2[0] = Math.ceil(n2[0]), n2[0] += 2) : (n2[0] = Math.ceil(n2[0]), n2[0]++), this.isNativeC40(r3) ? n2[1] += 2 / 3 : this.isExtendedASCII(r3) ? n2[1] += 8 / 3 : n2[1] += 4 / 3, this.isNativeText(r3) ? n2[2] += 2 / 3 : this.isExtendedASCII(r3) ? n2[2] += 8 / 3 : n2[2] += 4 / 3, this.isNativeX12(r3) ? n2[3] += 2 / 3 : this.isExtendedASCII(r3) ? n2[3] += 13 / 3 : n2[3] += 10 / 3, this.isNativeEDIFACT(r3) ? n2[4] += 3 / 4 : this.isExtendedASCII(r3) ? n2[4] += 4.25 : n2[4] += 3.25, this.isSpecialB256(r3) ? n2[5] += 4 : n2[5]++, i2 >= 4) {
              if (f.fill(s2, 0), f.fill(o2, 0), this.findMinimums(n2, o2, w.MAX_VALUE, s2), o2[0] < this.min(o2[5], o2[1], o2[2], o2[3], o2[4])) return 0;
              if (o2[5] < o2[0] || o2[5] + 1 < this.min(o2[1], o2[2], o2[3], o2[4])) return 5;
              if (o2[4] + 1 < this.min(o2[5], o2[1], o2[2], o2[3], o2[0])) return 4;
              if (o2[2] + 1 < this.min(o2[5], o2[1], o2[4], o2[3], o2[0])) return 2;
              if (o2[3] + 1 < this.min(o2[5], o2[1], o2[4], o2[2], o2[0])) return 3;
              if (o2[1] + 1 < this.min(o2[0], o2[5], o2[4], o2[2])) {
                if (o2[1] < o2[3]) return 1;
                if (o2[1] === o2[3]) {
                  let r4 = e2 + i2 + 1;
                  for (; r4 < t2.length; ) {
                    const e3 = t2.charCodeAt(r4);
                    if (this.isX12TermSep(e3)) return 3;
                    if (!this.isNativeX12(e3)) break;
                    r4++;
                  }
                  return 1;
                }
              }
            }
          }
        }
        static min(t2, e2, r2, n2, i2) {
          const s2 = Math.min(t2, Math.min(e2, Math.min(r2, n2)));
          return void 0 === i2 ? s2 : Math.min(s2, i2);
        }
        static findMinimums(t2, e2, r2, n2) {
          for (let i2 = 0; i2 < 6; i2++) {
            const s2 = e2[i2] = Math.ceil(t2[i2]);
            r2 > s2 && (r2 = s2, f.fill(n2, 0)), r2 === s2 && (n2[i2] = n2[i2] + 1);
          }
          return r2;
        }
        static getMinimumCount(t2) {
          let e2 = 0;
          for (let r2 = 0; r2 < 6; r2++) e2 += t2[r2];
          return e2 || 0;
        }
        static isDigit(t2) {
          return t2 >= "0".charCodeAt(0) && t2 <= "9".charCodeAt(0);
        }
        static isExtendedASCII(t2) {
          return t2 >= 128 && t2 <= 255;
        }
        static isNativeC40(t2) {
          return t2 === " ".charCodeAt(0) || t2 >= "0".charCodeAt(0) && t2 <= "9".charCodeAt(0) || t2 >= "A".charCodeAt(0) && t2 <= "Z".charCodeAt(0);
        }
        static isNativeText(t2) {
          return t2 === " ".charCodeAt(0) || t2 >= "0".charCodeAt(0) && t2 <= "9".charCodeAt(0) || t2 >= "a".charCodeAt(0) && t2 <= "z".charCodeAt(0);
        }
        static isNativeX12(t2) {
          return this.isX12TermSep(t2) || t2 === " ".charCodeAt(0) || t2 >= "0".charCodeAt(0) && t2 <= "9".charCodeAt(0) || t2 >= "A".charCodeAt(0) && t2 <= "Z".charCodeAt(0);
        }
        static isX12TermSep(t2) {
          return 13 === t2 || t2 === "*".charCodeAt(0) || t2 === ">".charCodeAt(0);
        }
        static isNativeEDIFACT(t2) {
          return t2 >= " ".charCodeAt(0) && t2 <= "^".charCodeAt(0);
        }
        static isSpecialB256(t2) {
          return false;
        }
        static determineConsecutiveDigitCount(t2, e2 = 0) {
          const r2 = t2.length;
          let n2 = e2;
          for (; n2 < r2 && this.isDigit(t2.charCodeAt(n2)); ) n2++;
          return n2 - e2;
        }
        static illegalCharacter(t2) {
          let e2 = w.toHexString(t2.charCodeAt(0));
          throw e2 = "0000".substring(0, 4 - e2.length) + e2, new Error("Illegal character: " + t2 + " (0x" + e2 + ")");
        }
      }
      class Zr {
        constructor(t2) {
          this.charset = t2, this.name = t2.name;
        }
        canEncode(t2) {
          try {
            return null != S.encode(t2, this.charset);
          } catch (t3) {
            return false;
          }
        }
      }
      class Kr {
        constructor(t2, e2, r2) {
          this.ENCODERS = ["IBM437", "ISO-8859-2", "ISO-8859-3", "ISO-8859-4", "ISO-8859-5", "ISO-8859-6", "ISO-8859-7", "ISO-8859-8", "ISO-8859-9", "ISO-8859-10", "ISO-8859-11", "ISO-8859-13", "ISO-8859-14", "ISO-8859-15", "ISO-8859-16", "windows-1250", "windows-1251", "windows-1252", "windows-1256", "Shift_JIS"].map((t3) => new Zr(Rr.forName(t3))), this.encoders = [];
          const n2 = [];
          n2.push(new Zr(Nr.ISO_8859_1));
          let i2 = null != e2 && e2.name.startsWith("UTF");
          for (let e3 = 0; e3 < t2.length; e3++) {
            let s3 = false;
            for (const i3 of n2) {
              const n3 = t2.charAt(e3);
              if (n3.charCodeAt(0) === r2 || i3.canEncode(n3)) {
                s3 = true;
                break;
              }
            }
            if (!s3) {
              for (const r3 of this.ENCODERS) if (r3.canEncode(t2.charAt(e3))) {
                n2.push(r3), s3 = true;
                break;
              }
            }
            s3 || (i2 = true);
          }
          if (1 !== n2.length || i2) {
            this.encoders = [];
            let t3 = 0;
            for (const e3 of n2) this.encoders[t3++] = e3;
          } else this.encoders = [n2[0]];
          let s2 = -1;
          if (null != e2) {
            for (let t3 = 0; t3 < this.encoders.length; t3++) if (null != this.encoders[t3] && e2.name === this.encoders[t3].name) {
              s2 = t3;
              break;
            }
          }
          this.priorityEncoderIndex = s2;
        }
        length() {
          return this.encoders.length;
        }
        getCharsetName(t2) {
          if (!(t2 < this.length())) throw new Error("index must be less than length");
          return this.encoders[t2].name;
        }
        getCharset(t2) {
          if (!(t2 < this.length())) throw new Error("index must be less than length");
          return this.encoders[t2].charset;
        }
        getECIValue(t2) {
          return this.encoders[t2].charset.getValueIdentifier();
        }
        getPriorityEncoderIndex() {
          return this.priorityEncoderIndex;
        }
        canEncode(t2, e2) {
          if (!(e2 < this.length())) throw new Error("index must be less than length");
          return true;
        }
        encode(t2, e2) {
          if (!(e2 < this.length())) throw new Error("index must be less than length");
          return S.encode(p.getCharAt(t2), this.encoders[e2].name);
        }
      }
      class qr {
        constructor(t2, e2, r2) {
          this.fnc1 = r2;
          const n2 = new Kr(t2, e2, r2);
          if (1 === n2.length()) for (let e3 = 0; e3 < this.bytes.length; e3++) {
            const n3 = t2.charAt(e3).charCodeAt(0);
            this.bytes[e3] = n3 === r2 ? 1e3 : n3;
          }
          else this.bytes = this.encodeMinimally(t2, n2, r2);
        }
        getFNC1Character() {
          return this.fnc1;
        }
        length() {
          return this.bytes.length;
        }
        haveNCharacters(t2, e2) {
          if (t2 + e2 - 1 >= this.bytes.length) return false;
          for (let r2 = 0; r2 < e2; r2++) if (this.isECI(t2 + r2)) return false;
          return true;
        }
        charAt(t2) {
          if (t2 < 0 || t2 >= this.length()) throw new Error("" + t2);
          if (this.isECI(t2)) throw new Error("value at " + t2 + " is not a character but an ECI");
          return this.isFNC1(t2) ? this.fnc1 : this.bytes[t2];
        }
        subSequence(t2, e2) {
          if (t2 < 0 || t2 > e2 || e2 > this.length()) throw new Error("" + t2);
          const r2 = new T();
          for (let n2 = t2; n2 < e2; n2++) {
            if (this.isECI(n2)) throw new Error("value at " + n2 + " is not a character but an ECI");
            r2.append(this.charAt(n2));
          }
          return r2.toString();
        }
        isECI(t2) {
          if (t2 < 0 || t2 >= this.length()) throw new Error("" + t2);
          return this.bytes[t2] > 255 && this.bytes[t2] <= 999;
        }
        isFNC1(t2) {
          if (t2 < 0 || t2 >= this.length()) throw new Error("" + t2);
          return 1e3 === this.bytes[t2];
        }
        getECIValue(t2) {
          if (t2 < 0 || t2 >= this.length()) throw new Error("" + t2);
          if (!this.isECI(t2)) throw new Error("value at " + t2 + " is not an ECI but a character");
          return this.bytes[t2] - 256;
        }
        addEdge(t2, e2, r2) {
          (null == t2[e2][r2.encoderIndex] || t2[e2][r2.encoderIndex].cachedTotalSize > r2.cachedTotalSize) && (t2[e2][r2.encoderIndex] = r2);
        }
        addEdges(t2, e2, r2, n2, i2, s2) {
          const o2 = t2.charAt(n2).charCodeAt(0);
          let a2 = 0, h2 = e2.length();
          e2.getPriorityEncoderIndex() >= 0 && (o2 === s2 || e2.canEncode(o2, e2.getPriorityEncoderIndex())) && (a2 = e2.getPriorityEncoderIndex(), h2 = a2 + 1);
          for (let t3 = a2; t3 < h2; t3++) (o2 === s2 || e2.canEncode(o2, t3)) && this.addEdge(r2, n2 + 1, new Qr(o2, e2, t3, i2, s2));
        }
        encodeMinimally(t2, e2, r2) {
          const n2 = t2.length, i2 = new Qr[n2 + 1][e2.length()]();
          this.addEdges(t2, e2, i2, 0, null, r2);
          for (let s3 = 1; s3 <= n2; s3++) {
            for (let o3 = 0; o3 < e2.length(); o3++) null != i2[s3][o3] && s3 < n2 && this.addEdges(t2, e2, i2, s3, i2[s3][o3], r2);
            for (let t3 = 0; t3 < e2.length(); t3++) i2[s3 - 1][t3] = null;
          }
          let s2 = -1, o2 = w.MAX_VALUE;
          for (let t3 = 0; t3 < e2.length(); t3++) if (null != i2[n2][t3]) {
            const e3 = i2[n2][t3];
            e3.cachedTotalSize < o2 && (o2 = e3.cachedTotalSize, s2 = t3);
          }
          if (s2 < 0) throw new Error('Failed to encode "' + t2 + '"');
          const a2 = [];
          let h2 = i2[n2][s2];
          for (; null != h2; ) {
            if (h2.isFNC1()) a2.unshift(1e3);
            else {
              const t3 = e2.encode(h2.c, h2.encoderIndex);
              for (let e3 = t3.length - 1; e3 >= 0; e3--) a2.unshift(255 & t3[e3]);
            }
            (null === h2.previous ? 0 : h2.previous.encoderIndex) !== h2.encoderIndex && a2.unshift(256 + e2.getECIValue(h2.encoderIndex)), h2 = h2.previous;
          }
          const l2 = [];
          for (let t3 = 0; t3 < l2.length; t3++) l2[t3] = a2[t3];
          return l2;
        }
      }
      class Qr {
        constructor(t2, e2, r2, n2, i2) {
          this.c = t2, this.encoderSet = e2, this.encoderIndex = r2, this.previous = n2, this.fnc1 = i2, this.c = t2 === i2 ? 1e3 : t2;
          let s2 = this.isFNC1() ? 1 : e2.encode(t2, r2).length;
          (null === n2 ? 0 : n2.encoderIndex) !== r2 && (s2 += 3), null != n2 && (s2 += n2.cachedTotalSize), this.cachedTotalSize = s2;
        }
        isFNC1() {
          return 1e3 === this.c;
        }
      }
      var jr;
      !function(t2) {
        t2[t2.ASCII = 0] = "ASCII", t2[t2.C40 = 1] = "C40", t2[t2.TEXT = 2] = "TEXT", t2[t2.X12 = 3] = "X12", t2[t2.EDF = 4] = "EDF", t2[t2.B256 = 5] = "B256";
      }(jr || (jr = {}));
      const Jr = ["!", '"', "#", "$", "%", "&", "'", "(", ")", "*", "+", ",", "-", ".", "/", ":", ";", "<", "=", ">", "?", "@", "[", "\\", "]", "^", "_"];
      class $r {
        static isExtendedASCII(t2, e2) {
          return t2 !== e2 && t2 >= 128 && t2 <= 255;
        }
        static isInC40Shift1Set(t2) {
          return t2 <= 31;
        }
        static isInC40Shift2Set(t2, e2) {
          for (const e3 of Jr) if (e3.charCodeAt(0) === t2) return true;
          return t2 === e2;
        }
        static isInTextShift1Set(t2) {
          return this.isInC40Shift1Set(t2);
        }
        static isInTextShift2Set(t2, e2) {
          return this.isInC40Shift2Set(t2, e2);
        }
        static encodeHighLevel(t2, e2 = null, r2 = -1, n2 = 0) {
          let i2 = 0;
          return t2.startsWith(Pr) && t2.endsWith(Fr) ? (i2 = 5, t2 = t2.substring(7, t2.length - 2)) : t2.startsWith(Lr) && t2.endsWith(Fr) && (i2 = 6, t2 = t2.substring(7, t2.length - 2)), decodeURIComponent(escape(String.fromCharCode(...this.encode(t2, e2, r2, n2, i2))));
        }
        static encode(t2, e2, r2, n2, i2) {
          return this.encodeMinimally(new rn(t2, e2, r2, n2, i2)).getBytes();
        }
        static addEdge(t2, e2) {
          const r2 = e2.fromPosition + e2.characterLength;
          (null === t2[r2][e2.getEndMode()] || t2[r2][e2.getEndMode()].cachedTotalSize > e2.cachedTotalSize) && (t2[r2][e2.getEndMode()] = e2);
        }
        static getNumberOfC40Words(t2, e2, r2, n2) {
          let i2 = 0;
          for (let s2 = e2; s2 < t2.length(); s2++) {
            if (t2.isECI(s2)) return n2[0] = 0, 0;
            const o2 = t2.charAt(s2);
            if (r2 && Yr.isNativeC40(o2) || !r2 && Yr.isNativeText(o2)) i2++;
            else if ($r.isExtendedASCII(o2, t2.getFNC1Character())) {
              const t3 = 255 & o2;
              t3 >= 128 && (r2 && Yr.isNativeC40(t3 - 128) || !r2 && Yr.isNativeText(t3 - 128)) ? i2 += 3 : i2 += 4;
            } else i2 += 2;
            if (i2 % 3 == 0 || (i2 - 2) % 3 == 0 && s2 + 1 === t2.length()) return n2[0] = s2 - e2 + 1, Math.ceil(i2 / 3);
          }
          return n2[0] = 0, 0;
        }
        static addEdges(t2, e2, r2, n2) {
          if (t2.isECI(r2)) return void this.addEdge(e2, new en(t2, jr.ASCII, r2, 1, n2));
          const i2 = t2.charAt(r2);
          if (null === n2 || n2.getEndMode() !== jr.EDF) {
            Yr.isDigit(i2) && t2.haveNCharacters(r2, 2) && Yr.isDigit(t2.charAt(r2 + 1)) ? this.addEdge(e2, new en(t2, jr.ASCII, r2, 2, n2)) : this.addEdge(e2, new en(t2, jr.ASCII, r2, 1, n2));
            const s3 = [jr.C40, jr.TEXT];
            for (const i3 of s3) {
              const s4 = [];
              $r.getNumberOfC40Words(t2, r2, i3 === jr.C40, s4) > 0 && this.addEdge(e2, new en(t2, i3, r2, s4[0], n2));
            }
            t2.haveNCharacters(r2, 3) && Yr.isNativeX12(t2.charAt(r2)) && Yr.isNativeX12(t2.charAt(r2 + 1)) && Yr.isNativeX12(t2.charAt(r2 + 2)) && this.addEdge(e2, new en(t2, jr.X12, r2, 3, n2)), this.addEdge(e2, new en(t2, jr.B256, r2, 1, n2));
          }
          let s2;
          for (s2 = 0; s2 < 3; s2++) {
            const i3 = r2 + s2;
            if (!t2.haveNCharacters(i3, 1) || !Yr.isNativeEDIFACT(t2.charAt(i3))) break;
            this.addEdge(e2, new en(t2, jr.EDF, r2, s2 + 1, n2));
          }
          3 === s2 && t2.haveNCharacters(r2, 4) && Yr.isNativeEDIFACT(t2.charAt(r2 + 3)) && this.addEdge(e2, new en(t2, jr.EDF, r2, 4, n2));
        }
        static encodeMinimally(t2) {
          const e2 = t2.length(), r2 = Array(e2 + 1).fill(null).map(() => Array(6).fill(0));
          this.addEdges(t2, r2, 0, null);
          for (let n3 = 1; n3 <= e2; n3++) {
            for (let i3 = 0; i3 < 6; i3++) null !== r2[n3][i3] && n3 < e2 && this.addEdges(t2, r2, n3, r2[n3][i3]);
            for (let t3 = 0; t3 < 6; t3++) r2[n3 - 1][t3] = null;
          }
          let n2 = -1, i2 = w.MAX_VALUE;
          for (let t3 = 0; t3 < 6; t3++) if (null !== r2[e2][t3]) {
            const s2 = r2[e2][t3], o2 = t3 >= 1 && t3 <= 3 ? s2.cachedTotalSize + 1 : s2.cachedTotalSize;
            o2 < i2 && (i2 = o2, n2 = t3);
          }
          if (n2 < 0) throw new Error('Failed to encode "' + t2 + '"');
          return new tn(r2[e2][n2]);
        }
      }
      class tn {
        constructor(t2) {
          const e2 = t2.input;
          let r2 = 0, n2 = [];
          const i2 = [], s2 = [];
          t2.mode !== jr.C40 && t2.mode !== jr.TEXT && t2.mode !== jr.X12 || t2.getEndMode() === jr.ASCII || (r2 += this.prepend(en.getBytes(254), n2));
          let o2 = t2;
          for (; null !== o2; ) r2 += this.prepend(o2.getDataBytes(), n2), null !== o2.previous && o2.getPreviousStartMode() === o2.getMode() || (o2.getMode() === jr.B256 && (r2 <= 249 ? (n2.unshift(r2), r2++) : (n2.unshift(r2 % 250), n2.unshift(r2 / 250 + 249), r2 += 2), i2.push(n2.length), s2.push(r2)), this.prepend(o2.getLatchBytes(), n2), r2 = 0), o2 = o2.previous;
          5 === e2.getMacroId() ? r2 += this.prepend(en.getBytes(236), n2) : 6 === e2.getMacroId() && (r2 += this.prepend(en.getBytes(237), n2)), e2.getFNC1Character() > 0 && (r2 += this.prepend(en.getBytes(232), n2));
          for (let t3 = 0; t3 < i2.length; t3++) this.applyRandomPattern(n2, n2.length - i2[t3], s2[t3]);
          const a2 = t2.getMinSymbolSize(n2.length);
          for (n2.length < a2 && n2.push(129); n2.length < a2; ) n2.push(this.randomize253State(n2.length + 1));
          this.bytes = new Uint8Array(n2.length);
          for (let t3 = 0; t3 < this.bytes.length; t3++) this.bytes[t3] = n2[t3];
        }
        prepend(t2, e2) {
          for (let r2 = t2.length - 1; r2 >= 0; r2--) e2.unshift(t2[r2]);
          return t2.length;
        }
        randomize253State(t2) {
          const e2 = 129 + (149 * t2 % 253 + 1);
          return e2 <= 254 ? e2 : e2 - 254;
        }
        applyRandomPattern(t2, e2, r2) {
          for (let n2 = 0; n2 < r2; n2++) {
            const r3 = e2 + n2, i2 = (255 & t2[r3]) + (149 * (r3 + 1) % 255 + 1);
            t2[r3] = i2 <= 255 ? i2 : i2 - 256;
          }
        }
        getBytes() {
          return this.bytes;
        }
      }
      class en {
        constructor(t2, e2, r2, n2, i2) {
          if (this.input = t2, this.mode = e2, this.fromPosition = r2, this.characterLength = n2, this.previous = i2, this.allCodewordCapacities = [3, 5, 8, 10, 12, 16, 18, 22, 30, 32, 36, 44, 49, 62, 86, 114, 144, 174, 204, 280, 368, 456, 576, 696, 816, 1050, 1304, 1558], this.squareCodewordCapacities = [3, 5, 8, 12, 18, 22, 30, 36, 44, 62, 86, 114, 144, 174, 204, 280, 368, 456, 576, 696, 816, 1050, 1304, 1558], this.rectangularCodewordCapacities = [5, 10, 16, 33, 32, 49], !(r2 + n2 <= t2.length())) throw new Error("Invalid edge");
          let s2 = null !== i2 ? i2.cachedTotalSize : 0;
          const o2 = this.getPreviousMode();
          switch (e2) {
            case jr.ASCII:
              s2++, (t2.isECI(r2) || $r.isExtendedASCII(t2.charAt(r2), t2.getFNC1Character())) && s2++, o2 !== jr.C40 && o2 !== jr.TEXT && o2 !== jr.X12 || s2++;
              break;
            case jr.B256:
              s2++, (o2 !== jr.B256 || 250 === this.getB256Size()) && s2++, o2 === jr.ASCII ? s2++ : o2 !== jr.C40 && o2 !== jr.TEXT && o2 !== jr.X12 || (s2 += 2);
              break;
            case jr.C40:
            case jr.TEXT:
            case jr.X12:
              if (e2 === jr.X12) s2 += 2;
              else {
                let n3 = [];
                s2 += 2 * $r.getNumberOfC40Words(t2, r2, e2 === jr.C40, n3);
              }
              o2 === jr.ASCII || o2 === jr.B256 ? s2++ : o2 === e2 || o2 !== jr.C40 && o2 !== jr.TEXT && o2 !== jr.X12 || (s2 += 2);
              break;
            case jr.EDF:
              s2 += 3, o2 === jr.ASCII || o2 === jr.B256 ? s2++ : o2 !== jr.C40 && o2 !== jr.TEXT && o2 !== jr.X12 || (s2 += 2);
          }
          this.cachedTotalSize = s2;
        }
        getB256Size() {
          let t2 = 0, e2 = this;
          for (; null !== e2 && e2.mode === jr.B256 && t2 <= 250; ) t2++, e2 = e2.previous;
          return t2;
        }
        getPreviousStartMode() {
          return null === this.previous ? jr.ASCII : this.previous.mode;
        }
        getPreviousMode() {
          return null === this.previous ? jr.ASCII : this.previous.getEndMode();
        }
        getEndMode() {
          if (this.mode === jr.EDF) {
            if (this.characterLength < 4) return jr.ASCII;
            const t2 = this.getLastASCII();
            if (t2 > 0 && this.getCodewordsRemaining(this.cachedTotalSize + t2) <= 2 - t2) return jr.ASCII;
          }
          if (this.mode === jr.C40 || this.mode === jr.TEXT || this.mode === jr.X12) {
            if (this.fromPosition + this.characterLength >= this.input.length() && 0 === this.getCodewordsRemaining(this.cachedTotalSize)) return jr.ASCII;
            if (1 === this.getLastASCII() && 0 === this.getCodewordsRemaining(this.cachedTotalSize + 1)) return jr.ASCII;
          }
          return this.mode;
        }
        getMode() {
          return this.mode;
        }
        getLastASCII() {
          const t2 = this.input.length(), e2 = this.fromPosition + this.characterLength;
          return t2 - e2 > 4 || e2 >= t2 ? 0 : t2 - e2 == 1 ? $r.isExtendedASCII(this.input.charAt(e2), this.input.getFNC1Character()) ? 0 : 1 : t2 - e2 == 2 ? $r.isExtendedASCII(this.input.charAt(e2), this.input.getFNC1Character()) || $r.isExtendedASCII(this.input.charAt(e2 + 1), this.input.getFNC1Character()) ? 0 : Yr.isDigit(this.input.charAt(e2)) && Yr.isDigit(this.input.charAt(e2 + 1)) ? 1 : 2 : t2 - e2 == 3 ? Yr.isDigit(this.input.charAt(e2)) && Yr.isDigit(this.input.charAt(e2 + 1)) && !$r.isExtendedASCII(this.input.charAt(e2 + 2), this.input.getFNC1Character()) || Yr.isDigit(this.input.charAt(e2 + 1)) && Yr.isDigit(this.input.charAt(e2 + 2)) && !$r.isExtendedASCII(this.input.charAt(e2), this.input.getFNC1Character()) ? 2 : 0 : Yr.isDigit(this.input.charAt(e2)) && Yr.isDigit(this.input.charAt(e2 + 1)) && Yr.isDigit(this.input.charAt(e2 + 2)) && Yr.isDigit(this.input.charAt(e2 + 3)) ? 2 : 0;
        }
        getMinSymbolSize(t2) {
          switch (this.input.getShapeHint()) {
            case 1:
              for (const e2 of this.squareCodewordCapacities) if (e2 >= t2) return e2;
              break;
            case 2:
              for (const e2 of this.rectangularCodewordCapacities) if (e2 >= t2) return e2;
          }
          for (const e2 of this.allCodewordCapacities) if (e2 >= t2) return e2;
          return this.allCodewordCapacities[this.allCodewordCapacities.length - 1];
        }
        getCodewordsRemaining(t2) {
          return this.getMinSymbolSize(t2) - t2;
        }
        static getBytes(t2, e2) {
          const r2 = new Uint8Array(e2 ? 2 : 1);
          return r2[0] = t2, e2 && (r2[1] = e2), r2;
        }
        setC40Word(t2, e2, r2, n2, i2) {
          const s2 = 1600 * (255 & r2) + 40 * (255 & n2) + (255 & i2) + 1;
          t2[e2] = s2 / 256, t2[e2 + 1] = s2 % 256;
        }
        getX12Value(t2) {
          return 13 === t2 ? 0 : 42 === t2 ? 1 : 62 === t2 ? 2 : 32 === t2 ? 3 : t2 >= 48 && t2 <= 57 ? t2 - 44 : t2 >= 65 && t2 <= 90 ? t2 - 51 : t2;
        }
        getX12Words() {
          if (this.characterLength % 3 != 0) throw new Error("X12 words must be a multiple of 3");
          const t2 = new Uint8Array(this.characterLength / 3 * 2);
          for (let e2 = 0; e2 < t2.length; e2 += 2) this.setC40Word(t2, e2, this.getX12Value(this.input.charAt(this.fromPosition + e2 / 2 * 3)), this.getX12Value(this.input.charAt(this.fromPosition + e2 / 2 * 3 + 1)), this.getX12Value(this.input.charAt(this.fromPosition + e2 / 2 * 3 + 2)));
          return t2;
        }
        getShiftValue(t2, e2, r2) {
          return e2 && $r.isInC40Shift1Set(t2) || !e2 && $r.isInTextShift1Set(t2) ? 0 : e2 && $r.isInC40Shift2Set(t2, r2) || !e2 && $r.isInTextShift2Set(t2, r2) ? 1 : 2;
        }
        getC40Value(t2, e2, r2, n2) {
          if (r2 === n2) {
            if (2 !== e2) throw new Error("FNC1 cannot be used in C40 shift 2");
            return 27;
          }
          return t2 ? r2 <= 31 ? r2 : 32 === r2 ? 3 : r2 <= 47 ? r2 - 33 : r2 <= 57 ? r2 - 44 : r2 <= 64 ? r2 - 43 : r2 <= 90 ? r2 - 51 : r2 <= 95 ? r2 - 69 : r2 <= 127 ? r2 - 96 : r2 : 0 === r2 ? 0 : 0 === e2 && r2 <= 3 ? r2 - 1 : 1 === e2 && r2 <= 31 ? r2 : 32 === r2 ? 3 : r2 >= 33 && r2 <= 47 ? r2 - 33 : r2 >= 48 && r2 <= 57 ? r2 - 44 : r2 >= 58 && r2 <= 64 ? r2 - 43 : r2 >= 65 && r2 <= 90 ? r2 - 64 : r2 >= 91 && r2 <= 95 ? r2 - 69 : 96 === r2 ? 0 : r2 >= 97 && r2 <= 122 ? r2 - 83 : r2 >= 123 && r2 <= 127 ? r2 - 96 : r2;
        }
        getC40Words(t2, e2) {
          const r2 = [];
          for (let n3 = 0; n3 < this.characterLength; n3++) {
            const i3 = this.input.charAt(this.fromPosition + n3);
            if (t2 && Yr.isNativeC40(i3) || !t2 && Yr.isNativeText(i3)) r2.push(this.getC40Value(t2, 0, i3, e2));
            else if ($r.isExtendedASCII(i3, e2)) {
              const n4 = (255 & i3) - 128;
              if (t2 && Yr.isNativeC40(n4) || !t2 && Yr.isNativeText(n4)) r2.push(1), r2.push(30), r2.push(this.getC40Value(t2, 0, n4, e2));
              else {
                r2.push(1), r2.push(30);
                const i4 = this.getShiftValue(n4, t2, e2);
                r2.push(i4), r2.push(this.getC40Value(t2, i4, n4, e2));
              }
            } else {
              const n4 = this.getShiftValue(i3, t2, e2);
              r2.push(n4), r2.push(this.getC40Value(t2, n4, i3, e2));
            }
          }
          if (r2.length % 3 != 0) {
            if ((r2.length - 2) % 3 != 0 || this.fromPosition + this.characterLength !== this.input.length()) throw new Error("C40 words must be a multiple of 3");
            r2.push(0);
          }
          const n2 = new Uint8Array(r2.length / 3 * 2);
          let i2 = 0;
          for (let t3 = 0; t3 < r2.length; t3 += 3) this.setC40Word(n2, i2, 255 & r2[t3], 255 & r2[t3 + 1], 255 & r2[t3 + 2]), i2 += 2;
          return n2;
        }
        getEDFBytes() {
          const t2 = Math.ceil(this.characterLength / 4), e2 = new Uint8Array(3 * t2);
          let r2 = this.fromPosition;
          const n2 = Math.min(this.fromPosition + this.characterLength - 1, this.input.length() - 1);
          for (let i2 = 0; i2 < t2; i2 += 3) {
            const t3 = [];
            for (let e3 = 0; e3 < 4; e3++) t3[e3] = r2 <= n2 ? 63 & this.input.charAt(r2++) : r2 === n2 + 1 ? 31 : 0;
            let s2 = t3[0] << 18;
            s2 |= t3[1] << 12, s2 |= t3[2] << 6, s2 |= t3[3], e2[i2] = s2 >> 16 & 255, e2[i2 + 1] = s2 >> 8 & 255, e2[i2 + 2] = 255 & s2;
          }
          return e2;
        }
        getLatchBytes() {
          switch (this.getPreviousMode()) {
            case jr.ASCII:
            case jr.B256:
              switch (this.mode) {
                case jr.B256:
                  return en.getBytes(231);
                case jr.C40:
                  return en.getBytes(230);
                case jr.TEXT:
                  return en.getBytes(239);
                case jr.X12:
                  return en.getBytes(238);
                case jr.EDF:
                  return en.getBytes(240);
              }
              break;
            case jr.C40:
            case jr.TEXT:
            case jr.X12:
              if (this.mode !== this.getPreviousMode()) switch (this.mode) {
                case jr.ASCII:
                  return en.getBytes(254);
                case jr.B256:
                  return en.getBytes(254, 231);
                case jr.C40:
                  return en.getBytes(254, 230);
                case jr.TEXT:
                  return en.getBytes(254, 239);
                case jr.X12:
                  return en.getBytes(254, 238);
                case jr.EDF:
                  return en.getBytes(254, 240);
              }
              break;
            case jr.EDF:
              if (this.mode !== jr.EDF) throw new Error("Cannot switch from EDF to " + this.mode);
          }
          return new Uint8Array(0);
        }
        getDataBytes() {
          switch (this.mode) {
            case jr.ASCII:
              return this.input.isECI(this.fromPosition) ? en.getBytes(241, this.input.getECIValue(this.fromPosition) + 1) : $r.isExtendedASCII(this.input.charAt(this.fromPosition), this.input.getFNC1Character()) ? en.getBytes(235, this.input.charAt(this.fromPosition) - 127) : 2 === this.characterLength ? en.getBytes(10 * this.input.charAt(this.fromPosition) + this.input.charAt(this.fromPosition + 1) + 130) : this.input.isFNC1(this.fromPosition) ? en.getBytes(232) : en.getBytes(this.input.charAt(this.fromPosition) + 1);
            case jr.B256:
              return en.getBytes(this.input.charAt(this.fromPosition));
            case jr.C40:
              return this.getC40Words(true, this.input.getFNC1Character());
            case jr.TEXT:
              return this.getC40Words(false, this.input.getFNC1Character());
            case jr.X12:
              return this.getX12Words();
            case jr.EDF:
              return this.getEDFBytes();
          }
        }
      }
      class rn extends qr {
        constructor(t2, e2, r2, n2, i2) {
          super(t2, e2, r2), this.shape = n2, this.macroId = i2;
        }
        getMacroId() {
          return this.macroId;
        }
        getShapeHint() {
          return this.shape;
        }
      }
      class nn {
        isCompact() {
          return this.compact;
        }
        setCompact(t2) {
          this.compact = t2;
        }
        getSize() {
          return this.size;
        }
        setSize(t2) {
          this.size = t2;
        }
        getLayers() {
          return this.layers;
        }
        setLayers(t2) {
          this.layers = t2;
        }
        getCodeWords() {
          return this.codeWords;
        }
        setCodeWords(t2) {
          this.codeWords = t2;
        }
        getMatrix() {
          return this.matrix;
        }
        setMatrix(t2) {
          this.matrix = t2;
        }
      }
      class sn {
        static singletonList(t2) {
          return [t2];
        }
        static min(t2, e2) {
          return t2.sort(e2)[0];
        }
      }
      class on {
        constructor(t2) {
          this.previous = t2;
        }
        getPrevious() {
          return this.previous;
        }
      }
      class an extends on {
        constructor(t2, e2, r2) {
          super(t2), this.value = e2, this.bitCount = r2;
        }
        appendTo(t2, e2) {
          t2.appendBits(this.value, this.bitCount);
        }
        add(t2, e2) {
          return new an(this, t2, e2);
        }
        addBinaryShift(t2, e2) {
          return console.warn("addBinaryShift on SimpleToken, this simply returns a copy of this token"), new an(this, t2, e2);
        }
        toString() {
          let t2 = this.value & (1 << this.bitCount) - 1;
          return t2 |= 1 << this.bitCount, "<" + w.toBinaryString(t2 | 1 << this.bitCount).substring(1) + ">";
        }
      }
      class hn extends an {
        constructor(t2, e2, r2) {
          super(t2, 0, 0), this.binaryShiftStart = e2, this.binaryShiftByteCount = r2;
        }
        appendTo(t2, e2) {
          for (let r2 = 0; r2 < this.binaryShiftByteCount; r2++) (0 === r2 || 31 === r2 && this.binaryShiftByteCount <= 62) && (t2.appendBits(31, 5), this.binaryShiftByteCount > 62 ? t2.appendBits(this.binaryShiftByteCount - 31, 16) : 0 === r2 ? t2.appendBits(Math.min(this.binaryShiftByteCount, 31), 5) : t2.appendBits(this.binaryShiftByteCount - 31, 5)), t2.appendBits(e2[this.binaryShiftStart + r2], 8);
        }
        addBinaryShift(t2, e2) {
          return new hn(this, t2, e2);
        }
        toString() {
          return "<" + this.binaryShiftStart + "::" + (this.binaryShiftStart + this.binaryShiftByteCount - 1) + ">";
        }
      }
      function ln(t2, e2, r2) {
        return new an(t2, e2, r2);
      }
      const cn = ["UPPER", "LOWER", "DIGIT", "MIXED", "PUNCT"], dn = new an(null, 0, 0), un = [Int32Array.from([0, 327708, 327710, 327709, 656318]), Int32Array.from([590318, 0, 327710, 327709, 656318]), Int32Array.from([262158, 590300, 0, 590301, 932798]), Int32Array.from([327709, 327708, 656318, 0, 327710]), Int32Array.from([327711, 656380, 656382, 656381, 0])];
      const gn = function(t2) {
        for (let e2 of t2) f.fill(e2, -1);
        return t2[0][4] = 0, t2[1][4] = 0, t2[1][0] = 28, t2[3][4] = 0, t2[2][4] = 0, t2[2][0] = 15, t2;
      }(f.createInt32Array(6, 6));
      class fn {
        constructor(t2, e2, r2, n2) {
          this.token = t2, this.mode = e2, this.binaryShiftByteCount = r2, this.bitCount = n2;
        }
        getMode() {
          return this.mode;
        }
        getToken() {
          return this.token;
        }
        getBinaryShiftByteCount() {
          return this.binaryShiftByteCount;
        }
        getBitCount() {
          return this.bitCount;
        }
        latchAndAppend(t2, e2) {
          let r2 = this.bitCount, n2 = this.token;
          if (t2 !== this.mode) {
            let e3 = un[this.mode][t2];
            n2 = ln(n2, 65535 & e3, e3 >> 16), r2 += e3 >> 16;
          }
          let i2 = 2 === t2 ? 4 : 5;
          return n2 = ln(n2, e2, i2), new fn(n2, t2, 0, r2 + i2);
        }
        shiftAndAppend(t2, e2) {
          let r2 = this.token, n2 = 2 === this.mode ? 4 : 5;
          return r2 = ln(r2, gn[this.mode][t2], n2), r2 = ln(r2, e2, 5), new fn(r2, this.mode, 0, this.bitCount + n2 + 5);
        }
        addBinaryShiftChar(t2) {
          let e2 = this.token, r2 = this.mode, n2 = this.bitCount;
          if (4 === this.mode || 2 === this.mode) {
            let t3 = un[r2][0];
            e2 = ln(e2, 65535 & t3, t3 >> 16), n2 += t3 >> 16, r2 = 0;
          }
          let i2 = 0 === this.binaryShiftByteCount || 31 === this.binaryShiftByteCount ? 18 : 62 === this.binaryShiftByteCount ? 9 : 8, s2 = new fn(e2, r2, this.binaryShiftByteCount + 1, n2 + i2);
          return 2078 === s2.binaryShiftByteCount && (s2 = s2.endBinaryShift(t2 + 1)), s2;
        }
        endBinaryShift(t2) {
          if (0 === this.binaryShiftByteCount) return this;
          let e2 = this.token;
          return e2 = function(t3, e3, r2) {
            return new hn(t3, e3, r2);
          }(e2, t2 - this.binaryShiftByteCount, this.binaryShiftByteCount), new fn(e2, this.mode, 0, this.bitCount);
        }
        isBetterThanOrEqualTo(t2) {
          let e2 = this.bitCount + (un[this.mode][t2.mode] >> 16);
          return this.binaryShiftByteCount < t2.binaryShiftByteCount ? e2 += fn.calculateBinaryShiftCost(t2) - fn.calculateBinaryShiftCost(this) : this.binaryShiftByteCount > t2.binaryShiftByteCount && t2.binaryShiftByteCount > 0 && (e2 += 10), e2 <= t2.bitCount;
        }
        toBitArray(t2) {
          let e2 = [];
          for (let r3 = this.endBinaryShift(t2.length).token; null !== r3; r3 = r3.getPrevious()) e2.unshift(r3);
          let r2 = new C();
          for (const n2 of e2) n2.appendTo(r2, t2);
          return r2;
        }
        toString() {
          return p.format("%s bits=%d bytes=%d", cn[this.mode], this.bitCount, this.binaryShiftByteCount);
        }
        static calculateBinaryShiftCost(t2) {
          return t2.binaryShiftByteCount > 62 ? 21 : t2.binaryShiftByteCount > 31 ? 20 : t2.binaryShiftByteCount > 0 ? 10 : 0;
        }
      }
      fn.INITIAL_STATE = new fn(dn, 0, 0, 0);
      const wn = function(t2) {
        const e2 = p.getCharCode(" "), r2 = p.getCharCode("."), n2 = p.getCharCode(",");
        t2[0][e2] = 1;
        const i2 = p.getCharCode("Z"), s2 = p.getCharCode("A");
        for (let e3 = s2; e3 <= i2; e3++) t2[0][e3] = e3 - s2 + 2;
        t2[1][e2] = 1;
        const o2 = p.getCharCode("z"), a2 = p.getCharCode("a");
        for (let e3 = a2; e3 <= o2; e3++) t2[1][e3] = e3 - a2 + 2;
        t2[2][e2] = 1;
        const h2 = p.getCharCode("9"), l2 = p.getCharCode("0");
        for (let e3 = l2; e3 <= h2; e3++) t2[2][e3] = e3 - l2 + 2;
        t2[2][n2] = 12, t2[2][r2] = 13;
        const c2 = ["\0", " ", "", "", "", "", "", "", "\x07", "\b", "	", "\n", "\v", "\f", "\r", "\x1B", "", "", "", "", "@", "\\", "^", "_", "`", "|", "~", ""];
        for (let e3 = 0; e3 < c2.length; e3++) t2[3][p.getCharCode(c2[e3])] = e3;
        const d2 = ["\0", "\r", "\0", "\0", "\0", "\0", "!", "'", "#", "$", "%", "&", "'", "(", ")", "*", "+", ",", "-", ".", "/", ":", ";", "<", "=", ">", "?", "[", "]", "{", "}"];
        for (let e3 = 0; e3 < d2.length; e3++) p.getCharCode(d2[e3]) > 0 && (t2[4][p.getCharCode(d2[e3])] = e3);
        return t2;
      }(f.createInt32Array(5, 256));
      class Cn {
        constructor(t2) {
          this.text = t2;
        }
        encode() {
          const t2 = p.getCharCode(" "), e2 = p.getCharCode("\n");
          let r2 = sn.singletonList(fn.INITIAL_STATE);
          for (let n2 = 0; n2 < this.text.length; n2++) {
            let i2, s2 = n2 + 1 < this.text.length ? this.text[n2 + 1] : 0;
            switch (this.text[n2]) {
              case p.getCharCode("\r"):
                i2 = s2 === e2 ? 2 : 0;
                break;
              case p.getCharCode("."):
                i2 = s2 === t2 ? 3 : 0;
                break;
              case p.getCharCode(","):
                i2 = s2 === t2 ? 4 : 0;
                break;
              case p.getCharCode(":"):
                i2 = s2 === t2 ? 5 : 0;
                break;
              default:
                i2 = 0;
            }
            i2 > 0 ? (r2 = Cn.updateStateListForPair(r2, n2, i2), n2++) : r2 = this.updateStateListForChar(r2, n2);
          }
          return sn.min(r2, (t3, e3) => t3.getBitCount() - e3.getBitCount()).toBitArray(this.text);
        }
        updateStateListForChar(t2, e2) {
          const r2 = [];
          for (let n2 of t2) this.updateStateForChar(n2, e2, r2);
          return Cn.simplifyStates(r2);
        }
        updateStateForChar(t2, e2, r2) {
          let n2 = 255 & this.text[e2], i2 = wn[t2.getMode()][n2] > 0, s2 = null;
          for (let o2 = 0; o2 <= 4; o2++) {
            let a2 = wn[o2][n2];
            if (a2 > 0) {
              if (null == s2 && (s2 = t2.endBinaryShift(e2)), !i2 || o2 === t2.getMode() || 2 === o2) {
                const t3 = s2.latchAndAppend(o2, a2);
                r2.push(t3);
              }
              if (!i2 && gn[t2.getMode()][o2] >= 0) {
                const t3 = s2.shiftAndAppend(o2, a2);
                r2.push(t3);
              }
            }
          }
          if (t2.getBinaryShiftByteCount() > 0 || 0 === wn[t2.getMode()][n2]) {
            let n3 = t2.addBinaryShiftChar(e2);
            r2.push(n3);
          }
        }
        static updateStateListForPair(t2, e2, r2) {
          const n2 = [];
          for (let i2 of t2) this.updateStateForPair(i2, e2, r2, n2);
          return this.simplifyStates(n2);
        }
        static updateStateForPair(t2, e2, r2, n2) {
          let i2 = t2.endBinaryShift(e2);
          if (n2.push(i2.latchAndAppend(4, r2)), 4 !== t2.getMode() && n2.push(i2.shiftAndAppend(4, r2)), 3 === r2 || 4 === r2) {
            let t3 = i2.latchAndAppend(2, 16 - r2).latchAndAppend(2, 1);
            n2.push(t3);
          }
          if (t2.getBinaryShiftByteCount() > 0) {
            let r3 = t2.addBinaryShiftChar(e2).addBinaryShiftChar(e2 + 1);
            n2.push(r3);
          }
        }
        static simplifyStates(t2) {
          let e2 = [];
          for (const r2 of t2) {
            let t3 = true;
            for (const n2 of e2) {
              if (n2.isBetterThanOrEqualTo(r2)) {
                t3 = false;
                break;
              }
              r2.isBetterThanOrEqualTo(n2) && (e2 = e2.filter((t4) => t4 !== n2));
            }
            t3 && e2.push(r2);
          }
          return e2;
        }
      }
      class An {
        constructor() {
        }
        static encodeBytes(t2) {
          return An.encode(t2, An.DEFAULT_EC_PERCENT, An.DEFAULT_AZTEC_LAYERS);
        }
        static encode(t2, e2, r2) {
          let n2, i2, s2, o2, h2, l2 = new Cn(t2).encode(), c2 = w.truncDivision(l2.getSize() * e2, 100) + 11, d2 = l2.getSize() + c2;
          if (r2 !== An.DEFAULT_AZTEC_LAYERS) {
            if (n2 = r2 < 0, i2 = Math.abs(r2), i2 > (n2 ? An.MAX_NB_BITS_COMPACT : An.MAX_NB_BITS)) throw new a(p.format("Illegal value %s for layers", r2));
            s2 = An.totalBitsInLayer(i2, n2), o2 = An.WORD_SIZE[i2];
            let t3 = s2 - s2 % o2;
            if (h2 = An.stuffBits(l2, o2), h2.getSize() + c2 > t3) throw new a("Data to large for user specified layer");
            if (n2 && h2.getSize() > 64 * o2) throw new a("Data to large for user specified layer");
          } else {
            o2 = 0, h2 = null;
            for (let t3 = 0; ; t3++) {
              if (t3 > An.MAX_NB_BITS) throw new a("Data too large for an Aztec code");
              if (n2 = t3 <= 3, i2 = n2 ? t3 + 1 : t3, s2 = An.totalBitsInLayer(i2, n2), d2 > s2) continue;
              null != h2 && o2 === An.WORD_SIZE[i2] || (o2 = An.WORD_SIZE[i2], h2 = An.stuffBits(l2, o2));
              let e3 = s2 - s2 % o2;
              if (!(n2 && h2.getSize() > 64 * o2) && h2.getSize() + c2 <= e3) break;
            }
          }
          let u2, g2 = An.generateCheckWords(h2, s2, o2), f2 = h2.getSize() / o2, C2 = An.generateModeMessage(n2, i2, f2), A2 = (n2 ? 11 : 14) + 4 * i2, E2 = new Int32Array(A2);
          if (n2) {
            u2 = A2;
            for (let t3 = 0; t3 < E2.length; t3++) E2[t3] = t3;
          } else {
            u2 = A2 + 1 + 2 * w.truncDivision(w.truncDivision(A2, 2) - 1, 15);
            let t3 = w.truncDivision(A2, 2), e3 = w.truncDivision(u2, 2);
            for (let r3 = 0; r3 < t3; r3++) {
              let n3 = r3 + w.truncDivision(r3, 15);
              E2[t3 - r3 - 1] = e3 - n3 - 1, E2[t3 + r3] = e3 + n3 + 1;
            }
          }
          let m2 = new R(u2);
          for (let t3 = 0, e3 = 0; t3 < i2; t3++) {
            let r3 = 4 * (i2 - t3) + (n2 ? 9 : 12);
            for (let n3 = 0; n3 < r3; n3++) {
              let i3 = 2 * n3;
              for (let s3 = 0; s3 < 2; s3++) g2.get(e3 + i3 + s3) && m2.set(E2[2 * t3 + s3], E2[2 * t3 + n3]), g2.get(e3 + 2 * r3 + i3 + s3) && m2.set(E2[2 * t3 + n3], E2[A2 - 1 - 2 * t3 - s3]), g2.get(e3 + 4 * r3 + i3 + s3) && m2.set(E2[A2 - 1 - 2 * t3 - s3], E2[A2 - 1 - 2 * t3 - n3]), g2.get(e3 + 6 * r3 + i3 + s3) && m2.set(E2[A2 - 1 - 2 * t3 - n3], E2[2 * t3 + s3]);
            }
            e3 += 8 * r3;
          }
          if (An.drawModeMessage(m2, n2, u2, C2), n2) An.drawBullsEye(m2, w.truncDivision(u2, 2), 5);
          else {
            An.drawBullsEye(m2, w.truncDivision(u2, 2), 7);
            for (let t3 = 0, e3 = 0; t3 < w.truncDivision(A2, 2) - 1; t3 += 15, e3 += 16) for (let t4 = 1 & w.truncDivision(u2, 2); t4 < u2; t4 += 2) m2.set(w.truncDivision(u2, 2) - e3, t4), m2.set(w.truncDivision(u2, 2) + e3, t4), m2.set(t4, w.truncDivision(u2, 2) - e3), m2.set(t4, w.truncDivision(u2, 2) + e3);
          }
          let I2 = new nn();
          return I2.setCompact(n2), I2.setSize(u2), I2.setLayers(i2), I2.setCodeWords(f2), I2.setMatrix(m2), I2;
        }
        static drawBullsEye(t2, e2, r2) {
          for (let n2 = 0; n2 < r2; n2 += 2) for (let r3 = e2 - n2; r3 <= e2 + n2; r3++) t2.set(r3, e2 - n2), t2.set(r3, e2 + n2), t2.set(e2 - n2, r3), t2.set(e2 + n2, r3);
          t2.set(e2 - r2, e2 - r2), t2.set(e2 - r2 + 1, e2 - r2), t2.set(e2 - r2, e2 - r2 + 1), t2.set(e2 + r2, e2 - r2), t2.set(e2 + r2, e2 - r2 + 1), t2.set(e2 + r2, e2 + r2 - 1);
        }
        static generateModeMessage(t2, e2, r2) {
          let n2 = new C();
          return t2 ? (n2.appendBits(e2 - 1, 2), n2.appendBits(r2 - 1, 6), n2 = An.generateCheckWords(n2, 28, 4)) : (n2.appendBits(e2 - 1, 5), n2.appendBits(r2 - 1, 11), n2 = An.generateCheckWords(n2, 40, 4)), n2;
        }
        static drawModeMessage(t2, e2, r2, n2) {
          let i2 = w.truncDivision(r2, 2);
          if (e2) for (let e3 = 0; e3 < 7; e3++) {
            let r3 = i2 - 3 + e3;
            n2.get(e3) && t2.set(r3, i2 - 5), n2.get(e3 + 7) && t2.set(i2 + 5, r3), n2.get(20 - e3) && t2.set(r3, i2 + 5), n2.get(27 - e3) && t2.set(i2 - 5, r3);
          }
          else for (let e3 = 0; e3 < 10; e3++) {
            let r3 = i2 - 5 + e3 + w.truncDivision(e3, 5);
            n2.get(e3) && t2.set(r3, i2 - 7), n2.get(e3 + 10) && t2.set(i2 + 7, r3), n2.get(29 - e3) && t2.set(r3, i2 + 7), n2.get(39 - e3) && t2.set(i2 - 7, r3);
          }
        }
        static generateCheckWords(t2, e2, r2) {
          let n2 = t2.getSize() / r2, i2 = new gr(An.getGF(r2)), s2 = w.truncDivision(e2, r2), o2 = An.bitsToWords(t2, r2, s2);
          i2.encode(o2, s2 - n2);
          let a2 = e2 % r2, h2 = new C();
          h2.appendBits(0, a2);
          for (const t3 of Array.from(o2)) h2.appendBits(t3, r2);
          return h2;
        }
        static bitsToWords(t2, e2, r2) {
          let n2, i2, s2 = new Int32Array(r2);
          for (n2 = 0, i2 = t2.getSize() / e2; n2 < i2; n2++) {
            let r3 = 0;
            for (let i3 = 0; i3 < e2; i3++) r3 |= t2.get(n2 * e2 + i3) ? 1 << e2 - i3 - 1 : 0;
            s2[n2] = r3;
          }
          return s2;
        }
        static getGF(t2) {
          switch (t2) {
            case 4:
              return Q.AZTEC_PARAM;
            case 6:
              return Q.AZTEC_DATA_6;
            case 8:
              return Q.AZTEC_DATA_8;
            case 10:
              return Q.AZTEC_DATA_10;
            case 12:
              return Q.AZTEC_DATA_12;
            default:
              throw new a("Unsupported word size " + t2);
          }
        }
        static stuffBits(t2, e2) {
          let r2 = new C(), n2 = t2.getSize(), i2 = (1 << e2) - 2;
          for (let s2 = 0; s2 < n2; s2 += e2) {
            let o2 = 0;
            for (let r3 = 0; r3 < e2; r3++) (s2 + r3 >= n2 || t2.get(s2 + r3)) && (o2 |= 1 << e2 - 1 - r3);
            (o2 & i2) === i2 ? (r2.appendBits(o2 & i2, e2), s2--) : o2 & i2 ? r2.appendBits(o2, e2) : (r2.appendBits(1 | o2, e2), s2--);
          }
          return r2;
        }
        static totalBitsInLayer(t2, e2) {
          return ((e2 ? 88 : 112) + 16 * t2) * t2;
        }
      }
      An.DEFAULT_EC_PERCENT = 33, An.DEFAULT_AZTEC_LAYERS = 0, An.MAX_NB_BITS = 32, An.MAX_NB_BITS_COMPACT = 4, An.WORD_SIZE = Int32Array.from([4, 6, 6, 8, 8, 8, 8, 8, 8, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12]);
      class En {
        encode(t2, e2, r2, n2) {
          return this.encodeWithHints(t2, e2, r2, n2, null);
        }
        encodeWithHints(t2, e2, r2, n2, i2) {
          let s2 = Nr.ISO_8859_1, o2 = An.DEFAULT_EC_PERCENT, a2 = An.DEFAULT_AZTEC_LAYERS;
          return null != i2 && (i2.has(ur.CHARACTER_SET) && (s2 = Rr.forName(i2.get(ur.CHARACTER_SET).toString())), i2.has(ur.ERROR_CORRECTION) && (o2 = w.parseInt(i2.get(ur.ERROR_CORRECTION).toString())), i2.has(ur.AZTEC_LAYERS) && (a2 = w.parseInt(i2.get(ur.AZTEC_LAYERS).toString()))), En.encodeLayers(t2, e2, r2, n2, s2, o2, a2);
        }
        static encodeLayers(t2, e2, r2, n2, i2, s2, o2) {
          if (e2 !== x.AZTEC) throw new a("Can only encode AZTEC, but got " + e2);
          let h2 = An.encode(p.getBytes(t2, i2), s2, o2);
          return En.renderResult(h2, r2, n2);
        }
        static renderResult(t2, e2, r2) {
          let n2 = t2.getMatrix();
          if (null == n2) throw new J();
          let i2 = n2.getWidth(), s2 = n2.getHeight(), o2 = Math.max(e2, i2), a2 = Math.max(r2, s2), h2 = Math.min(o2 / i2, a2 / s2), l2 = (o2 - i2 * h2) / 2, c2 = (a2 - s2 * h2) / 2, d2 = new R(o2, a2);
          for (let t3 = 0, e3 = c2; t3 < s2; t3++, e3 += h2) for (let r3 = 0, s3 = l2; r3 < i2; r3++, s3 += h2) n2.get(r3, t3) && d2.setRegion(s3, e3, h2, h2);
          return d2;
        }
      }
      t.AbstractExpandedDecoder = Xt, t.ArgumentException = o, t.ArithmeticException = q, t.AztecCode = nn, t.AztecCodeReader = gt, t.AztecCodeWriter = En, t.AztecDecoder = tt, t.AztecDetector = ut, t.AztecDetectorResult = st, t.AztecEncoder = An, t.AztecHighLevelEncoder = Cn, t.AztecPoint = dt, t.BarcodeFormat = x, t.Binarizer = c, t.BinaryBitmap = h, t.BitArray = C, t.BitMatrix = R, t.BitSource = de, t.BrowserAztecCodeReader = class extends F {
        constructor(t2 = 500) {
          super(new gt(), t2);
        }
      }, t.BrowserBarcodeReader = class extends F {
        constructor(t2 = 500, e2) {
          super(new se(e2), t2, e2);
        }
      }, t.BrowserCodeReader = F, t.BrowserDatamatrixCodeReader = class extends F {
        constructor(t2 = 500) {
          super(new we(), t2);
        }
      }, t.BrowserMultiFormatReader = class extends F {
        constructor(t2 = null, e2 = 500) {
          const r2 = new cr();
          r2.setHints(t2), super(r2, e2);
        }
        decodeBitmap(t2) {
          return this.reader.decodeWithState(t2);
        }
      }, t.BrowserPDF417Reader = class extends F {
        constructor(t2 = 500) {
          super(new hr(), t2);
        }
      }, t.BrowserQRCodeReader = class extends F {
        constructor(t2 = 500) {
          super(new Le(), t2);
        }
      }, t.BrowserQRCodeSvgWriter = _r, t.CharacterSetECI = I, t.ChecksumException = l, t.CodaBarReader = Ot, t.Code128Reader = wt, t.Code39Reader = Ct, t.Code93Reader = At, t.DataMatrixDecodedBitStreamParser = ue, t.DataMatrixDefaultPlacement = yr, t.DataMatrixErrorCorrection = vr, t.DataMatrixHighLevelEncoder = Yr, t.DataMatrixReader = we, t.DataMatrixSymbolInfo = Ur, t.DataMatrixWriter = class {
        encode(t2, e2, r2, n2, i2 = null) {
          if ("" === t2.trim()) throw new Error("Found empty contents");
          if (e2 !== x.DATA_MATRIX) throw new Error("Can only encode DATA_MATRIX, but got " + e2);
          if (r2 < 0 || n2 < 0) throw new Error("Requested dimensions can't be negative: " + r2 + "x" + n2);
          let s2, o2 = 0, a2 = null, h2 = null;
          if (null != i2) {
            const t3 = i2.get(ur.DATA_MATRIX_SHAPE);
            null != t3 && (o2 = t3);
            const e3 = i2.get(ur.MIN_SIZE);
            null != e3 && (a2 = e3);
            const r3 = i2.get(ur.MAX_SIZE);
            null != r3 && (h2 = r3);
          }
          if (null != i2 && i2.has(ur.DATA_MATRIX_COMPACT) && Boolean(i2.get(ur.DATA_MATRIX_COMPACT).toString())) {
            const e3 = i2.has(ur.GS1_FORMAT) && Boolean(i2.get(ur.GS1_FORMAT).toString());
            let r3 = null;
            i2.has(ur.CHARACTER_SET) && (r3 = Rr.forName(i2.get(ur.CHARACTER_SET).toString())), s2 = $r.encodeHighLevel(t2, r3, e3 ? 29 : -1, o2);
          } else {
            const e3 = null != i2 && i2.has(ur.FORCE_C40) && Boolean(i2.get(ur.FORCE_C40).toString());
            s2 = Yr.encodeHighLevel(t2, o2, a2, h2, e3);
          }
          const l2 = Ur.lookup(s2.length, o2, a2, h2, true), c2 = vr.encodeECC200(s2, l2), d2 = new yr(c2, l2.getSymbolDataWidth(), l2.getSymbolDataHeight());
          return d2.place(), this.encodeLowLevel(d2, l2, r2, n2);
        }
        encodeLowLevel(t2, e2, r2, n2) {
          const i2 = e2.getSymbolDataWidth(), s2 = e2.getSymbolDataHeight(), o2 = new wr(e2.getSymbolWidth(), e2.getSymbolHeight());
          let a2 = 0;
          for (let r3 = 0; r3 < s2; r3++) {
            let n3;
            if (r3 % e2.matrixHeight == 0) {
              n3 = 0;
              for (let t3 = 0; t3 < e2.getSymbolWidth(); t3++) o2.setBoolean(n3, a2, t3 % 2 == 0), n3++;
              a2++;
            }
            n3 = 0;
            for (let s3 = 0; s3 < i2; s3++) s3 % e2.matrixWidth == 0 && (o2.setBoolean(n3, a2, true), n3++), o2.setBoolean(n3, a2, t2.getBit(s3, r3)), n3++, s3 % e2.matrixWidth == e2.matrixWidth - 1 && (o2.setBoolean(n3, a2, r3 % 2 == 0), n3++);
            if (a2++, r3 % e2.matrixHeight == e2.matrixHeight - 1) {
              n3 = 0;
              for (let t3 = 0; t3 < e2.getSymbolWidth(); t3++) o2.setBoolean(n3, a2, true), n3++;
              a2++;
            }
          }
          return this.convertByteMatrixToBitMatrix(o2, r2, n2);
        }
        convertByteMatrixToBitMatrix(t2, e2, r2) {
          const n2 = t2.getWidth(), i2 = t2.getHeight(), s2 = Math.max(e2, n2), o2 = Math.max(r2, i2), a2 = Math.min(s2 / n2, o2 / i2);
          let h2, l2 = (s2 - n2 * a2) / 2, c2 = (o2 - i2 * a2) / 2;
          r2 < i2 || e2 < n2 ? (l2 = 0, c2 = 0, h2 = new R(n2, i2)) : h2 = new R(e2, r2), h2.clear();
          for (let e3 = 0, r3 = c2; e3 < i2; e3++, r3 += a2) for (let i3 = 0, s3 = l2; i3 < n2; i3++, s3 += a2) 1 === t2.get(i3, e3) && h2.setRegion(s3, r3, a2, a2);
          return h2;
        }
      }, t.DecodeHintType = E, t.DecoderResult = Y, t.DefaultGridSampler = lt, t.DetectorResult = it, t.EAN13Reader = Tt, t.EncodeHintType = ur, t.Exception = s, t.FormatException = m, t.GenericGF = Q, t.GenericGFPoly = K, t.GlobalHistogramBinarizer = y, t.GridSampler = at, t.GridSamplerInstance = ct, t.HTMLCanvasElementLuminanceSource = b, t.HybridBinarizer = D, t.ITFReader = Et, t.IllegalArgumentException = a, t.IllegalStateException = J, t.InvertedLuminanceSource = M, t.LuminanceSource = O, t.MathUtils = et, t.MultiFormatOneDReader = se, t.MultiFormatReader = cr, t.MultiFormatWriter = class {
        encode(t2, e2, r2, n2, i2) {
          let s2;
          if (e2 !== x.QR_CODE) throw new a("No encoder available for format " + e2);
          return s2 = new Sr(), s2.encode(t2, e2, r2, n2, i2);
        }
      }, t.NotFoundException = N, t.OneDReader = ft, t.PDF417DecodedBitStreamParser = or, t.PDF417DecoderErrorCorrection = Ue, t.PDF417Reader = hr, t.PDF417ResultMetadata = je, t.PerspectiveTransform = ht, t.PlanarYUVLuminanceSource = pr, t.QRCodeByteMatrix = wr, t.QRCodeDataMask = _e, t.QRCodeDecodedBitStreamParser = Re, t.QRCodeDecoderErrorCorrectionLevel = Ce, t.QRCodeDecoderFormatInformation = Ae, t.QRCodeEncoder = Ir, t.QRCodeEncoderQRCode = Cr, t.QRCodeMaskUtil = fr, t.QRCodeMatrixUtil = Er, t.QRCodeMode = Te, t.QRCodeReader = Le, t.QRCodeVersion = Ie, t.QRCodeWriter = Sr, t.RGBLuminanceSource = Tr, t.RSS14Reader = ie, t.RSSExpandedReader = re, t.ReaderException = lr, t.ReedSolomonDecoder = $, t.ReedSolomonEncoder = gr, t.ReedSolomonException = j, t.Result = v, t.ResultMetadataType = z, t.ResultPoint = nt, t.StringUtils = p, t.UnsupportedOperationException = _, t.VideoInputDevice = B, t.WhiteRectangleDetector = ot, t.WriterException = Ar, t.ZXingArrays = f, t.ZXingCharset = Rr, t.ZXingInteger = w, t.ZXingStandardCharsets = Nr, t.ZXingStringBuilder = T, t.ZXingStringEncoding = S, t.ZXingSystem = d, t.createAbstractExpandedDecoder = $t, Object.defineProperty(t, "__esModule", { value: true });
    });
  }
});

// node_modules/react-table/dist/react-table.development.js
var require_react_table_development = __commonJS({
  "node_modules/react-table/dist/react-table.development.js"(exports, module) {
    (function(global2, factory) {
      typeof exports === "object" && typeof module !== "undefined" ? factory(exports, require_react()) : typeof define === "function" && define.amd ? define(["exports", "react"], factory) : (global2 = global2 || self, factory(global2.ReactTable = {}, global2.React));
    })(exports, function(exports2, React2) {
      "use strict";
      React2 = React2 && Object.prototype.hasOwnProperty.call(React2, "default") ? React2["default"] : React2;
      function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {
        try {
          var info = gen[key](arg);
          var value = info.value;
        } catch (error) {
          reject(error);
          return;
        }
        if (info.done) {
          resolve(value);
        } else {
          Promise.resolve(value).then(_next, _throw);
        }
      }
      function _asyncToGenerator(fn) {
        return function() {
          var self2 = this, args = arguments;
          return new Promise(function(resolve, reject) {
            var gen = fn.apply(self2, args);
            function _next(value) {
              asyncGeneratorStep(gen, resolve, reject, _next, _throw, "next", value);
            }
            function _throw(err) {
              asyncGeneratorStep(gen, resolve, reject, _next, _throw, "throw", err);
            }
            _next(void 0);
          });
        };
      }
      function _extends() {
        _extends = Object.assign || function(target) {
          for (var i = 1; i < arguments.length; i++) {
            var source = arguments[i];
            for (var key in source) {
              if (Object.prototype.hasOwnProperty.call(source, key)) {
                target[key] = source[key];
              }
            }
          }
          return target;
        };
        return _extends.apply(this, arguments);
      }
      function _objectWithoutPropertiesLoose(source, excluded) {
        if (source == null) return {};
        var target = {};
        var sourceKeys = Object.keys(source);
        var key, i;
        for (i = 0; i < sourceKeys.length; i++) {
          key = sourceKeys[i];
          if (excluded.indexOf(key) >= 0) continue;
          target[key] = source[key];
        }
        return target;
      }
      function _toPrimitive(input, hint) {
        if (typeof input !== "object" || input === null) return input;
        var prim = input[Symbol.toPrimitive];
        if (prim !== void 0) {
          var res = prim.call(input, hint || "default");
          if (typeof res !== "object") return res;
          throw new TypeError("@@toPrimitive must return a primitive value.");
        }
        return (hint === "string" ? String : Number)(input);
      }
      function _toPropertyKey(arg) {
        var key = _toPrimitive(arg, "string");
        return typeof key === "symbol" ? key : String(key);
      }
      var renderErr = "Renderer Error ☝️";
      var actions3 = {
        init: "init"
      };
      var defaultRenderer = function defaultRenderer2(_ref) {
        var _ref$value = _ref.value, value = _ref$value === void 0 ? "" : _ref$value;
        return value;
      };
      var emptyRenderer = function emptyRenderer2() {
        return React2.createElement(React2.Fragment, null, " ");
      };
      var defaultColumn = {
        Cell: defaultRenderer,
        width: 150,
        minWidth: 0,
        maxWidth: Number.MAX_SAFE_INTEGER
      };
      function mergeProps() {
        for (var _len = arguments.length, propList = new Array(_len), _key = 0; _key < _len; _key++) {
          propList[_key] = arguments[_key];
        }
        return propList.reduce(function(props, next) {
          var style = next.style, className = next.className, rest = _objectWithoutPropertiesLoose(next, ["style", "className"]);
          props = _extends({}, props, {}, rest);
          if (style) {
            props.style = props.style ? _extends({}, props.style || {}, {}, style || {}) : style;
          }
          if (className) {
            props.className = props.className ? props.className + " " + className : className;
          }
          if (props.className === "") {
            delete props.className;
          }
          return props;
        }, {});
      }
      function handlePropGetter(prevProps, userProps, meta) {
        if (typeof userProps === "function") {
          return handlePropGetter({}, userProps(prevProps, meta));
        }
        if (Array.isArray(userProps)) {
          return mergeProps.apply(void 0, [prevProps].concat(userProps));
        }
        return mergeProps(prevProps, userProps);
      }
      var makePropGetter = function makePropGetter2(hooks, meta) {
        if (meta === void 0) {
          meta = {};
        }
        return function(userProps) {
          if (userProps === void 0) {
            userProps = {};
          }
          return [].concat(hooks, [userProps]).reduce(function(prev, next) {
            return handlePropGetter(prev, next, _extends({}, meta, {
              userProps
            }));
          }, {});
        };
      };
      var reduceHooks = function reduceHooks2(hooks, initial, meta, allowUndefined) {
        if (meta === void 0) {
          meta = {};
        }
        return hooks.reduce(function(prev, next) {
          var nextValue = next(prev, meta);
          {
            if (!allowUndefined && typeof nextValue === "undefined") {
              console.info(next);
              throw new Error("React Table: A reducer hook ☝️ just returned undefined! This is not allowed.");
            }
          }
          return nextValue;
        }, initial);
      };
      var loopHooks = function loopHooks2(hooks, context, meta) {
        if (meta === void 0) {
          meta = {};
        }
        return hooks.forEach(function(hook) {
          var nextValue = hook(context, meta);
          {
            if (typeof nextValue !== "undefined") {
              console.info(hook, nextValue);
              throw new Error("React Table: A loop-type hook ☝️ just returned a value! This is not allowed.");
            }
          }
        });
      };
      function ensurePluginOrder(plugins, befores, pluginName2, afters) {
        if (afters) {
          throw new Error('Defining plugins in the "after" section of ensurePluginOrder is no longer supported (see plugin ' + pluginName2 + ")");
        }
        var pluginIndex = plugins.findIndex(function(plugin) {
          return plugin.pluginName === pluginName2;
        });
        if (pluginIndex === -1) {
          {
            throw new Error('The plugin "' + pluginName2 + `" was not found in the plugin list!
This usually means you need to need to name your plugin hook by setting the 'pluginName' property of the hook function, eg:

  ` + pluginName2 + ".pluginName = '" + pluginName2 + "'\n");
          }
        }
        befores.forEach(function(before) {
          var beforeIndex = plugins.findIndex(function(plugin) {
            return plugin.pluginName === before;
          });
          if (beforeIndex > -1 && beforeIndex > pluginIndex) {
            {
              throw new Error("React Table: The " + pluginName2 + " plugin hook must be placed after the " + before + " plugin hook!");
            }
          }
        });
      }
      function functionalUpdate(updater, old) {
        return typeof updater === "function" ? updater(old) : updater;
      }
      function useGetLatest(obj) {
        var ref = React2.useRef();
        ref.current = obj;
        return React2.useCallback(function() {
          return ref.current;
        }, []);
      }
      var safeUseLayoutEffect = typeof document !== "undefined" ? React2.useLayoutEffect : React2.useEffect;
      function useMountedLayoutEffect(fn, deps) {
        var mountedRef = React2.useRef(false);
        safeUseLayoutEffect(function() {
          if (mountedRef.current) {
            fn();
          }
          mountedRef.current = true;
        }, deps);
      }
      function useAsyncDebounce(defaultFn, defaultWait) {
        if (defaultWait === void 0) {
          defaultWait = 0;
        }
        var debounceRef = React2.useRef({});
        var getDefaultFn = useGetLatest(defaultFn);
        var getDefaultWait = useGetLatest(defaultWait);
        return React2.useCallback(
          function() {
            var _ref2 = _asyncToGenerator(
              regeneratorRuntime.mark(function _callee2() {
                var _len2, args, _key2, _args2 = arguments;
                return regeneratorRuntime.wrap(function _callee2$(_context2) {
                  while (1) {
                    switch (_context2.prev = _context2.next) {
                      case 0:
                        for (_len2 = _args2.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {
                          args[_key2] = _args2[_key2];
                        }
                        if (!debounceRef.current.promise) {
                          debounceRef.current.promise = new Promise(function(resolve, reject) {
                            debounceRef.current.resolve = resolve;
                            debounceRef.current.reject = reject;
                          });
                        }
                        if (debounceRef.current.timeout) {
                          clearTimeout(debounceRef.current.timeout);
                        }
                        debounceRef.current.timeout = setTimeout(
                          _asyncToGenerator(
                            regeneratorRuntime.mark(function _callee() {
                              return regeneratorRuntime.wrap(function _callee$(_context) {
                                while (1) {
                                  switch (_context.prev = _context.next) {
                                    case 0:
                                      delete debounceRef.current.timeout;
                                      _context.prev = 1;
                                      _context.t0 = debounceRef.current;
                                      _context.next = 5;
                                      return getDefaultFn().apply(void 0, args);
                                    case 5:
                                      _context.t1 = _context.sent;
                                      _context.t0.resolve.call(_context.t0, _context.t1);
                                      _context.next = 12;
                                      break;
                                    case 9:
                                      _context.prev = 9;
                                      _context.t2 = _context["catch"](1);
                                      debounceRef.current.reject(_context.t2);
                                    case 12:
                                      _context.prev = 12;
                                      delete debounceRef.current.promise;
                                      return _context.finish(12);
                                    case 15:
                                    case "end":
                                      return _context.stop();
                                  }
                                }
                              }, _callee, null, [[1, 9, 12, 15]]);
                            })
                          ),
                          getDefaultWait()
                        );
                        return _context2.abrupt("return", debounceRef.current.promise);
                      case 5:
                      case "end":
                        return _context2.stop();
                    }
                  }
                }, _callee2);
              })
            );
            return function() {
              return _ref2.apply(this, arguments);
            };
          }(),
          [getDefaultFn, getDefaultWait]
        );
      }
      function makeRenderer2(instance, column, meta) {
        if (meta === void 0) {
          meta = {};
        }
        return function(type, userProps) {
          if (userProps === void 0) {
            userProps = {};
          }
          var Comp = typeof type === "string" ? column[type] : type;
          if (typeof Comp === "undefined") {
            console.info(column);
            throw new Error(renderErr);
          }
          return flexRender(Comp, _extends({}, instance, {
            column
          }, meta, {}, userProps));
        };
      }
      function flexRender(Comp, props) {
        return isReactComponent(Comp) ? React2.createElement(Comp, props) : Comp;
      }
      function isReactComponent(component) {
        return isClassComponent(component) || typeof component === "function" || isExoticComponent(component);
      }
      function isClassComponent(component) {
        return typeof component === "function" && function() {
          var proto = Object.getPrototypeOf(component);
          return proto.prototype && proto.prototype.isReactComponent;
        }();
      }
      function isExoticComponent(component) {
        return typeof component === "object" && typeof component.$$typeof === "symbol" && ["react.memo", "react.forward_ref"].includes(component.$$typeof.description);
      }
      function linkColumnStructure(columns6, parent, depth) {
        if (depth === void 0) {
          depth = 0;
        }
        return columns6.map(function(column) {
          column = _extends({}, column, {
            parent,
            depth
          });
          assignColumnAccessor(column);
          if (column.columns) {
            column.columns = linkColumnStructure(column.columns, column, depth + 1);
          }
          return column;
        });
      }
      function flattenColumns(columns6) {
        return flattenBy(columns6, "columns");
      }
      function assignColumnAccessor(column) {
        var id = column.id, accessor = column.accessor, Header4 = column.Header;
        if (typeof accessor === "string") {
          id = id || accessor;
          var accessorPath = accessor.split(".");
          accessor = function accessor2(row) {
            return getBy2(row, accessorPath);
          };
        }
        if (!id && typeof Header4 === "string" && Header4) {
          id = Header4;
        }
        if (!id && column.columns) {
          console.error(column);
          throw new Error('A column ID (or unique "Header" value) is required!');
        }
        if (!id) {
          console.error(column);
          throw new Error("A column ID (or string accessor) is required!");
        }
        Object.assign(column, {
          id,
          accessor
        });
        return column;
      }
      function decorateColumn(column, userDefaultColumn) {
        if (!userDefaultColumn) {
          throw new Error();
        }
        Object.assign(column, _extends({
          // Make sure there is a fallback header, just in case
          Header: emptyRenderer,
          Footer: emptyRenderer
        }, defaultColumn, {}, userDefaultColumn, {}, column));
        Object.assign(column, {
          originalWidth: column.width
        });
        return column;
      }
      function makeHeaderGroups(allColumns2, defaultColumn2, additionalHeaderProperties) {
        if (additionalHeaderProperties === void 0) {
          additionalHeaderProperties = function additionalHeaderProperties2() {
            return {};
          };
        }
        var headerGroups = [];
        var scanColumns = allColumns2;
        var uid = 0;
        var getUID = function getUID2() {
          return uid++;
        };
        var _loop = function _loop2() {
          var headerGroup = {
            headers: []
          };
          var parentColumns = [];
          var hasParents = scanColumns.some(function(d) {
            return d.parent;
          });
          scanColumns.forEach(function(column) {
            var latestParentColumn = [].concat(parentColumns).reverse()[0];
            var newParent;
            if (hasParents) {
              if (column.parent) {
                newParent = _extends({}, column.parent, {
                  originalId: column.parent.id,
                  id: column.parent.id + "_" + getUID(),
                  headers: [column]
                }, additionalHeaderProperties(column));
              } else {
                var originalId = column.id + "_placeholder";
                newParent = decorateColumn(_extends({
                  originalId,
                  id: column.id + "_placeholder_" + getUID(),
                  placeholderOf: column,
                  headers: [column]
                }, additionalHeaderProperties(column)), defaultColumn2);
              }
              if (latestParentColumn && latestParentColumn.originalId === newParent.originalId) {
                latestParentColumn.headers.push(column);
              } else {
                parentColumns.push(newParent);
              }
            }
            headerGroup.headers.push(column);
          });
          headerGroups.push(headerGroup);
          scanColumns = parentColumns;
        };
        while (scanColumns.length) {
          _loop();
        }
        return headerGroups.reverse();
      }
      var pathObjCache2 = /* @__PURE__ */ new Map();
      function getBy2(obj, path, def) {
        if (!path) {
          return obj;
        }
        var cacheKey = typeof path === "function" ? path : JSON.stringify(path);
        var pathObj = pathObjCache2.get(cacheKey) || function() {
          var pathObj2 = makePathArray2(path);
          pathObjCache2.set(cacheKey, pathObj2);
          return pathObj2;
        }();
        var val;
        try {
          val = pathObj.reduce(function(cursor, pathPart) {
            return cursor[pathPart];
          }, obj);
        } catch (e) {
        }
        return typeof val !== "undefined" ? val : def;
      }
      function getFirstDefined() {
        for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
          args[_key] = arguments[_key];
        }
        for (var i = 0; i < args.length; i += 1) {
          if (typeof args[i] !== "undefined") {
            return args[i];
          }
        }
      }
      function isFunction2(a) {
        if (typeof a === "function") {
          return a;
        }
      }
      function flattenBy(arr, key) {
        var flat = [];
        var recurse = function recurse2(arr2) {
          arr2.forEach(function(d) {
            if (!d[key]) {
              flat.push(d);
            } else {
              recurse2(d[key]);
            }
          });
        };
        recurse(arr);
        return flat;
      }
      function expandRows(rows, _ref) {
        var manualExpandedKey = _ref.manualExpandedKey, expanded = _ref.expanded, _ref$expandSubRows = _ref.expandSubRows, expandSubRows = _ref$expandSubRows === void 0 ? true : _ref$expandSubRows;
        var expandedRows = [];
        var handleRow = function handleRow2(row, addToExpandedRows) {
          if (addToExpandedRows === void 0) {
            addToExpandedRows = true;
          }
          row.isExpanded = row.original && row.original[manualExpandedKey] || expanded[row.id];
          row.canExpand = row.subRows && !!row.subRows.length;
          if (addToExpandedRows) {
            expandedRows.push(row);
          }
          if (row.subRows && row.subRows.length && row.isExpanded) {
            row.subRows.forEach(function(row2) {
              return handleRow2(row2, expandSubRows);
            });
          }
        };
        rows.forEach(function(row) {
          return handleRow(row);
        });
        return expandedRows;
      }
      function getFilterMethod(filter, userFilterTypes, filterTypes2) {
        return isFunction2(filter) || userFilterTypes[filter] || filterTypes2[filter] || filterTypes2.text;
      }
      function shouldAutoRemoveFilter(autoRemove, value, column) {
        return autoRemove ? autoRemove(value, column) : typeof value === "undefined";
      }
      function unpreparedAccessWarning() {
        throw new Error("React-Table: You have not called prepareRow(row) one or more rows you are attempting to render.");
      }
      var passiveSupported = null;
      function passiveEventSupported() {
        if (typeof passiveSupported === "boolean") return passiveSupported;
        var supported = false;
        try {
          var options = {
            get passive() {
              supported = true;
              return false;
            }
          };
          window.addEventListener("test", null, options);
          window.removeEventListener("test", null, options);
        } catch (err) {
          supported = false;
        }
        passiveSupported = supported;
        return passiveSupported;
      }
      var reOpenBracket2 = /\[/g;
      var reCloseBracket2 = /\]/g;
      function makePathArray2(obj) {
        return flattenDeep2(obj).map(function(d) {
          return String(d).replace(".", "_");
        }).join(".").replace(reOpenBracket2, ".").replace(reCloseBracket2, "").split(".");
      }
      function flattenDeep2(arr, newArr) {
        if (newArr === void 0) {
          newArr = [];
        }
        if (!Array.isArray(arr)) {
          newArr.push(arr);
        } else {
          for (var i = 0; i < arr.length; i += 1) {
            flattenDeep2(arr[i], newArr);
          }
        }
        return newArr;
      }
      var defaultGetTableProps = function defaultGetTableProps2(props) {
        return _extends({
          role: "table"
        }, props);
      };
      var defaultGetTableBodyProps = function defaultGetTableBodyProps2(props) {
        return _extends({
          role: "rowgroup"
        }, props);
      };
      var defaultGetHeaderProps = function defaultGetHeaderProps2(props, _ref) {
        var column = _ref.column;
        return _extends({
          key: "header_" + column.id,
          colSpan: column.totalVisibleHeaderCount,
          role: "columnheader"
        }, props);
      };
      var defaultGetFooterProps = function defaultGetFooterProps2(props, _ref2) {
        var column = _ref2.column;
        return _extends({
          key: "footer_" + column.id,
          colSpan: column.totalVisibleHeaderCount
        }, props);
      };
      var defaultGetHeaderGroupProps = function defaultGetHeaderGroupProps2(props, _ref3) {
        var index = _ref3.index;
        return _extends({
          key: "headerGroup_" + index,
          role: "row"
        }, props);
      };
      var defaultGetFooterGroupProps = function defaultGetFooterGroupProps2(props, _ref4) {
        var index = _ref4.index;
        return _extends({
          key: "footerGroup_" + index
        }, props);
      };
      var defaultGetRowProps = function defaultGetRowProps2(props, _ref5) {
        var row = _ref5.row;
        return _extends({
          key: "row_" + row.id,
          role: "row"
        }, props);
      };
      var defaultGetCellProps = function defaultGetCellProps2(props, _ref6) {
        var cell = _ref6.cell;
        return _extends({
          key: "cell_" + cell.row.id + "_" + cell.column.id,
          role: "cell"
        }, props);
      };
      function makeDefaultPluginHooks() {
        return {
          useOptions: [],
          stateReducers: [],
          useControlledState: [],
          columns: [],
          columnsDeps: [],
          allColumns: [],
          allColumnsDeps: [],
          accessValue: [],
          materializedColumns: [],
          materializedColumnsDeps: [],
          useInstanceAfterData: [],
          visibleColumns: [],
          visibleColumnsDeps: [],
          headerGroups: [],
          headerGroupsDeps: [],
          useInstanceBeforeDimensions: [],
          useInstance: [],
          prepareRow: [],
          getTableProps: [defaultGetTableProps],
          getTableBodyProps: [defaultGetTableBodyProps],
          getHeaderGroupProps: [defaultGetHeaderGroupProps],
          getFooterGroupProps: [defaultGetFooterGroupProps],
          getHeaderProps: [defaultGetHeaderProps],
          getFooterProps: [defaultGetFooterProps],
          getRowProps: [defaultGetRowProps],
          getCellProps: [defaultGetCellProps],
          useFinalInstance: []
        };
      }
      actions3.resetHiddenColumns = "resetHiddenColumns";
      actions3.toggleHideColumn = "toggleHideColumn";
      actions3.setHiddenColumns = "setHiddenColumns";
      actions3.toggleHideAllColumns = "toggleHideAllColumns";
      var useColumnVisibility = function useColumnVisibility2(hooks) {
        hooks.getToggleHiddenProps = [defaultGetToggleHiddenProps];
        hooks.getToggleHideAllColumnsProps = [defaultGetToggleHideAllColumnsProps];
        hooks.stateReducers.push(reducer);
        hooks.useInstanceBeforeDimensions.push(useInstanceBeforeDimensions);
        hooks.headerGroupsDeps.push(function(deps, _ref) {
          var instance = _ref.instance;
          return [].concat(deps, [instance.state.hiddenColumns]);
        });
        hooks.useInstance.push(useInstance);
      };
      useColumnVisibility.pluginName = "useColumnVisibility";
      var defaultGetToggleHiddenProps = function defaultGetToggleHiddenProps2(props, _ref2) {
        var column = _ref2.column;
        return [props, {
          onChange: function onChange(e) {
            column.toggleHidden(!e.target.checked);
          },
          style: {
            cursor: "pointer"
          },
          checked: column.isVisible,
          title: "Toggle Column Visible"
        }];
      };
      var defaultGetToggleHideAllColumnsProps = function defaultGetToggleHideAllColumnsProps2(props, _ref3) {
        var instance = _ref3.instance;
        return [props, {
          onChange: function onChange(e) {
            instance.toggleHideAllColumns(!e.target.checked);
          },
          style: {
            cursor: "pointer"
          },
          checked: !instance.allColumnsHidden && !instance.state.hiddenColumns.length,
          title: "Toggle All Columns Hidden",
          indeterminate: !instance.allColumnsHidden && instance.state.hiddenColumns.length
        }];
      };
      function reducer(state, action, previousState, instance) {
        if (action.type === actions3.init) {
          return _extends({
            hiddenColumns: []
          }, state);
        }
        if (action.type === actions3.resetHiddenColumns) {
          return _extends({}, state, {
            hiddenColumns: instance.initialState.hiddenColumns || []
          });
        }
        if (action.type === actions3.toggleHideColumn) {
          var should = typeof action.value !== "undefined" ? action.value : !state.hiddenColumns.includes(action.columnId);
          var hiddenColumns = should ? [].concat(state.hiddenColumns, [action.columnId]) : state.hiddenColumns.filter(function(d) {
            return d !== action.columnId;
          });
          return _extends({}, state, {
            hiddenColumns
          });
        }
        if (action.type === actions3.setHiddenColumns) {
          return _extends({}, state, {
            hiddenColumns: functionalUpdate(action.value, state.hiddenColumns)
          });
        }
        if (action.type === actions3.toggleHideAllColumns) {
          var shouldAll = typeof action.value !== "undefined" ? action.value : !state.hiddenColumns.length;
          return _extends({}, state, {
            hiddenColumns: shouldAll ? instance.allColumns.map(function(d) {
              return d.id;
            }) : []
          });
        }
      }
      function useInstanceBeforeDimensions(instance) {
        var headers = instance.headers, hiddenColumns = instance.state.hiddenColumns;
        var isMountedRef = React2.useRef(false);
        if (!isMountedRef.current) ;
        var handleColumn = function handleColumn2(column, parentVisible) {
          column.isVisible = parentVisible && !hiddenColumns.includes(column.id);
          var totalVisibleHeaderCount2 = 0;
          if (column.headers && column.headers.length) {
            column.headers.forEach(function(subColumn) {
              return totalVisibleHeaderCount2 += handleColumn2(subColumn, column.isVisible);
            });
          } else {
            totalVisibleHeaderCount2 = column.isVisible ? 1 : 0;
          }
          column.totalVisibleHeaderCount = totalVisibleHeaderCount2;
          return totalVisibleHeaderCount2;
        };
        var totalVisibleHeaderCount = 0;
        headers.forEach(function(subHeader) {
          return totalVisibleHeaderCount += handleColumn(subHeader, true);
        });
      }
      function useInstance(instance) {
        var columns6 = instance.columns, flatHeaders = instance.flatHeaders, dispatch = instance.dispatch, allColumns2 = instance.allColumns, getHooks = instance.getHooks, hiddenColumns = instance.state.hiddenColumns, _instance$autoResetHi = instance.autoResetHiddenColumns, autoResetHiddenColumns = _instance$autoResetHi === void 0 ? true : _instance$autoResetHi;
        var getInstance = useGetLatest(instance);
        var allColumnsHidden = allColumns2.length === hiddenColumns.length;
        var toggleHideColumn = React2.useCallback(function(columnId, value) {
          return dispatch({
            type: actions3.toggleHideColumn,
            columnId,
            value
          });
        }, [dispatch]);
        var setHiddenColumns = React2.useCallback(function(value) {
          return dispatch({
            type: actions3.setHiddenColumns,
            value
          });
        }, [dispatch]);
        var toggleHideAllColumns = React2.useCallback(function(value) {
          return dispatch({
            type: actions3.toggleHideAllColumns,
            value
          });
        }, [dispatch]);
        var getToggleHideAllColumnsProps = makePropGetter(getHooks().getToggleHideAllColumnsProps, {
          instance: getInstance()
        });
        flatHeaders.forEach(function(column) {
          column.toggleHidden = function(value) {
            dispatch({
              type: actions3.toggleHideColumn,
              columnId: column.id,
              value
            });
          };
          column.getToggleHiddenProps = makePropGetter(getHooks().getToggleHiddenProps, {
            instance: getInstance(),
            column
          });
        });
        var getAutoResetHiddenColumns = useGetLatest(autoResetHiddenColumns);
        useMountedLayoutEffect(function() {
          if (getAutoResetHiddenColumns()) {
            dispatch({
              type: actions3.resetHiddenColumns
            });
          }
        }, [dispatch, columns6]);
        Object.assign(instance, {
          allColumnsHidden,
          toggleHideColumn,
          setHiddenColumns,
          toggleHideAllColumns,
          getToggleHideAllColumnsProps
        });
      }
      var defaultInitialState = {};
      var defaultColumnInstance = {};
      var defaultReducer = function defaultReducer2(state, action, prevState) {
        return state;
      };
      var defaultGetSubRows = function defaultGetSubRows2(row, index) {
        return row.subRows || [];
      };
      var defaultGetRowId = function defaultGetRowId2(row, index, parent) {
        return "" + (parent ? [parent.id, index].join(".") : index);
      };
      var defaultUseControlledState = function defaultUseControlledState2(d) {
        return d;
      };
      function applyDefaults(props) {
        var _props$initialState = props.initialState, initialState = _props$initialState === void 0 ? defaultInitialState : _props$initialState, _props$defaultColumn = props.defaultColumn, defaultColumn2 = _props$defaultColumn === void 0 ? defaultColumnInstance : _props$defaultColumn, _props$getSubRows = props.getSubRows, getSubRows = _props$getSubRows === void 0 ? defaultGetSubRows : _props$getSubRows, _props$getRowId = props.getRowId, getRowId = _props$getRowId === void 0 ? defaultGetRowId : _props$getRowId, _props$stateReducer = props.stateReducer, stateReducer2 = _props$stateReducer === void 0 ? defaultReducer : _props$stateReducer, _props$useControlledS = props.useControlledState, useControlledState = _props$useControlledS === void 0 ? defaultUseControlledState : _props$useControlledS, rest = _objectWithoutPropertiesLoose(props, ["initialState", "defaultColumn", "getSubRows", "getRowId", "stateReducer", "useControlledState"]);
        return _extends({}, rest, {
          initialState,
          defaultColumn: defaultColumn2,
          getSubRows,
          getRowId,
          stateReducer: stateReducer2,
          useControlledState
        });
      }
      var useTable2 = function useTable3(props) {
        for (var _len = arguments.length, plugins = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
          plugins[_key - 1] = arguments[_key];
        }
        props = applyDefaults(props);
        plugins = [useColumnVisibility].concat(plugins);
        var instanceRef = React2.useRef({});
        var getInstance = useGetLatest(instanceRef.current);
        Object.assign(getInstance(), _extends({}, props, {
          plugins,
          hooks: makeDefaultPluginHooks()
        }));
        plugins.filter(Boolean).forEach(function(plugin) {
          plugin(getInstance().hooks);
        });
        var getHooks = useGetLatest(getInstance().hooks);
        getInstance().getHooks = getHooks;
        delete getInstance().hooks;
        Object.assign(getInstance(), reduceHooks(getHooks().useOptions, applyDefaults(props)));
        var _getInstance = getInstance(), data = _getInstance.data, userColumns = _getInstance.columns, initialState = _getInstance.initialState, defaultColumn2 = _getInstance.defaultColumn, getSubRows = _getInstance.getSubRows, getRowId = _getInstance.getRowId, stateReducer2 = _getInstance.stateReducer, useControlledState = _getInstance.useControlledState;
        var getStateReducer = useGetLatest(stateReducer2);
        var reducer2 = React2.useCallback(function(state2, action) {
          if (!action.type) {
            console.info({
              action
            });
            throw new Error("Unknown Action 👆");
          }
          return [].concat(getHooks().stateReducers, Array.isArray(getStateReducer()) ? getStateReducer() : [getStateReducer()]).reduce(function(s, handler) {
            return handler(s, action, state2, getInstance()) || s;
          }, state2);
        }, [getHooks, getStateReducer, getInstance]);
        var _React$useReducer = React2.useReducer(reducer2, void 0, function() {
          return reducer2(initialState, {
            type: actions3.init
          });
        }), reducerState = _React$useReducer[0], dispatch = _React$useReducer[1];
        var state = reduceHooks([].concat(getHooks().useControlledState, [useControlledState]), reducerState, {
          instance: getInstance()
        });
        Object.assign(getInstance(), {
          state,
          dispatch
        });
        var columns6 = React2.useMemo(function() {
          return linkColumnStructure(reduceHooks(getHooks().columns, userColumns, {
            instance: getInstance()
          }));
        }, [getHooks, getInstance, userColumns].concat(reduceHooks(getHooks().columnsDeps, [], {
          instance: getInstance()
        })));
        getInstance().columns = columns6;
        var allColumns2 = React2.useMemo(function() {
          return reduceHooks(getHooks().allColumns, flattenColumns(columns6), {
            instance: getInstance()
          }).map(assignColumnAccessor);
        }, [columns6, getHooks, getInstance].concat(reduceHooks(getHooks().allColumnsDeps, [], {
          instance: getInstance()
        })));
        getInstance().allColumns = allColumns2;
        var _React$useMemo = React2.useMemo(function() {
          var rows2 = [];
          var flatRows2 = [];
          var rowsById2 = {};
          var allColumnsQueue = [].concat(allColumns2);
          while (allColumnsQueue.length) {
            var column = allColumnsQueue.shift();
            accessRowsForColumn({
              data,
              rows: rows2,
              flatRows: flatRows2,
              rowsById: rowsById2,
              column,
              getRowId,
              getSubRows,
              accessValueHooks: getHooks().accessValue,
              getInstance
            });
          }
          return [rows2, flatRows2, rowsById2];
        }, [allColumns2, data, getRowId, getSubRows, getHooks, getInstance]), rows = _React$useMemo[0], flatRows = _React$useMemo[1], rowsById = _React$useMemo[2];
        Object.assign(getInstance(), {
          rows,
          initialRows: [].concat(rows),
          flatRows,
          rowsById
          // materializedColumns,
        });
        loopHooks(getHooks().useInstanceAfterData, getInstance());
        var visibleColumns5 = React2.useMemo(function() {
          return reduceHooks(getHooks().visibleColumns, allColumns2, {
            instance: getInstance()
          }).map(function(d) {
            return decorateColumn(d, defaultColumn2);
          });
        }, [getHooks, allColumns2, getInstance, defaultColumn2].concat(reduceHooks(getHooks().visibleColumnsDeps, [], {
          instance: getInstance()
        })));
        allColumns2 = React2.useMemo(function() {
          var columns7 = [].concat(visibleColumns5);
          allColumns2.forEach(function(column) {
            if (!columns7.find(function(d) {
              return d.id === column.id;
            })) {
              columns7.push(column);
            }
          });
          return columns7;
        }, [allColumns2, visibleColumns5]);
        getInstance().allColumns = allColumns2;
        {
          var duplicateColumns = allColumns2.filter(function(column, i) {
            return allColumns2.findIndex(function(d) {
              return d.id === column.id;
            }) !== i;
          });
          if (duplicateColumns.length) {
            console.info(allColumns2);
            throw new Error('Duplicate columns were found with ids: "' + duplicateColumns.map(function(d) {
              return d.id;
            }).join(", ") + '" in the columns array above');
          }
        }
        var headerGroups = React2.useMemo(function() {
          return reduceHooks(getHooks().headerGroups, makeHeaderGroups(visibleColumns5, defaultColumn2), getInstance());
        }, [getHooks, visibleColumns5, defaultColumn2, getInstance].concat(reduceHooks(getHooks().headerGroupsDeps, [], {
          instance: getInstance()
        })));
        getInstance().headerGroups = headerGroups;
        var headers = React2.useMemo(function() {
          return headerGroups.length ? headerGroups[0].headers : [];
        }, [headerGroups]);
        getInstance().headers = headers;
        getInstance().flatHeaders = headerGroups.reduce(function(all, headerGroup) {
          return [].concat(all, headerGroup.headers);
        }, []);
        loopHooks(getHooks().useInstanceBeforeDimensions, getInstance());
        var visibleColumnsDep = visibleColumns5.filter(function(d) {
          return d.isVisible;
        }).map(function(d) {
          return d.id;
        }).sort().join("_");
        visibleColumns5 = React2.useMemo(
          function() {
            return visibleColumns5.filter(function(d) {
              return d.isVisible;
            });
          },
          // eslint-disable-next-line react-hooks/exhaustive-deps
          [visibleColumns5, visibleColumnsDep]
        );
        getInstance().visibleColumns = visibleColumns5;
        var _calculateHeaderWidth = calculateHeaderWidths(headers), totalColumnsMinWidth = _calculateHeaderWidth[0], totalColumnsWidth = _calculateHeaderWidth[1], totalColumnsMaxWidth = _calculateHeaderWidth[2];
        getInstance().totalColumnsMinWidth = totalColumnsMinWidth;
        getInstance().totalColumnsWidth = totalColumnsWidth;
        getInstance().totalColumnsMaxWidth = totalColumnsMaxWidth;
        loopHooks(getHooks().useInstance, getInstance());
        [].concat(getInstance().flatHeaders, getInstance().allColumns).forEach(function(column) {
          column.render = makeRenderer2(getInstance(), column);
          column.getHeaderProps = makePropGetter(getHooks().getHeaderProps, {
            instance: getInstance(),
            column
          });
          column.getFooterProps = makePropGetter(getHooks().getFooterProps, {
            instance: getInstance(),
            column
          });
        });
        getInstance().headerGroups = React2.useMemo(function() {
          return headerGroups.filter(function(headerGroup, i) {
            headerGroup.headers = headerGroup.headers.filter(function(column) {
              var recurse = function recurse2(headers2) {
                return headers2.filter(function(column2) {
                  if (column2.headers) {
                    return recurse2(column2.headers);
                  }
                  return column2.isVisible;
                }).length;
              };
              if (column.headers) {
                return recurse(column.headers);
              }
              return column.isVisible;
            });
            if (headerGroup.headers.length) {
              headerGroup.getHeaderGroupProps = makePropGetter(getHooks().getHeaderGroupProps, {
                instance: getInstance(),
                headerGroup,
                index: i
              });
              headerGroup.getFooterGroupProps = makePropGetter(getHooks().getFooterGroupProps, {
                instance: getInstance(),
                headerGroup,
                index: i
              });
              return true;
            }
            return false;
          });
        }, [headerGroups, getInstance, getHooks]);
        getInstance().footerGroups = [].concat(getInstance().headerGroups).reverse();
        getInstance().prepareRow = React2.useCallback(function(row) {
          row.getRowProps = makePropGetter(getHooks().getRowProps, {
            instance: getInstance(),
            row
          });
          row.allCells = allColumns2.map(function(column) {
            var value = row.values[column.id];
            var cell = {
              column,
              row,
              value
            };
            cell.getCellProps = makePropGetter(getHooks().getCellProps, {
              instance: getInstance(),
              cell
            });
            cell.render = makeRenderer2(getInstance(), column, {
              row,
              cell,
              value
            });
            return cell;
          });
          row.cells = visibleColumns5.map(function(column) {
            return row.allCells.find(function(cell) {
              return cell.column.id === column.id;
            });
          });
          loopHooks(getHooks().prepareRow, row, {
            instance: getInstance()
          });
        }, [getHooks, getInstance, allColumns2, visibleColumns5]);
        getInstance().getTableProps = makePropGetter(getHooks().getTableProps, {
          instance: getInstance()
        });
        getInstance().getTableBodyProps = makePropGetter(getHooks().getTableBodyProps, {
          instance: getInstance()
        });
        loopHooks(getHooks().useFinalInstance, getInstance());
        return getInstance();
      };
      function calculateHeaderWidths(headers, left) {
        if (left === void 0) {
          left = 0;
        }
        var sumTotalMinWidth = 0;
        var sumTotalWidth = 0;
        var sumTotalMaxWidth = 0;
        var sumTotalFlexWidth = 0;
        headers.forEach(function(header3) {
          var subHeaders = header3.headers;
          header3.totalLeft = left;
          if (subHeaders && subHeaders.length) {
            var _calculateHeaderWidth2 = calculateHeaderWidths(subHeaders, left), totalMinWidth = _calculateHeaderWidth2[0], totalWidth = _calculateHeaderWidth2[1], totalMaxWidth = _calculateHeaderWidth2[2], totalFlexWidth = _calculateHeaderWidth2[3];
            header3.totalMinWidth = totalMinWidth;
            header3.totalWidth = totalWidth;
            header3.totalMaxWidth = totalMaxWidth;
            header3.totalFlexWidth = totalFlexWidth;
          } else {
            header3.totalMinWidth = header3.minWidth;
            header3.totalWidth = Math.min(Math.max(header3.minWidth, header3.width), header3.maxWidth);
            header3.totalMaxWidth = header3.maxWidth;
            header3.totalFlexWidth = header3.canResize ? header3.totalWidth : 0;
          }
          if (header3.isVisible) {
            left += header3.totalWidth;
            sumTotalMinWidth += header3.totalMinWidth;
            sumTotalWidth += header3.totalWidth;
            sumTotalMaxWidth += header3.totalMaxWidth;
            sumTotalFlexWidth += header3.totalFlexWidth;
          }
        });
        return [sumTotalMinWidth, sumTotalWidth, sumTotalMaxWidth, sumTotalFlexWidth];
      }
      function accessRowsForColumn(_ref) {
        var data = _ref.data, rows = _ref.rows, flatRows = _ref.flatRows, rowsById = _ref.rowsById, column = _ref.column, getRowId = _ref.getRowId, getSubRows = _ref.getSubRows, accessValueHooks = _ref.accessValueHooks, getInstance = _ref.getInstance;
        var accessRow = function accessRow2(originalRow, rowIndex, depth, parent, parentRows) {
          if (depth === void 0) {
            depth = 0;
          }
          var original = originalRow;
          var id = getRowId(originalRow, rowIndex, parent);
          var row = rowsById[id];
          if (!row) {
            row = {
              id,
              original,
              index: rowIndex,
              depth,
              cells: [{}]
              // This is a dummy cell
            };
            row.cells.map = unpreparedAccessWarning;
            row.cells.filter = unpreparedAccessWarning;
            row.cells.forEach = unpreparedAccessWarning;
            row.cells[0].getCellProps = unpreparedAccessWarning;
            row.values = {};
            parentRows.push(row);
            flatRows.push(row);
            rowsById[id] = row;
            row.originalSubRows = getSubRows(originalRow, rowIndex);
            if (row.originalSubRows) {
              var subRows = [];
              row.originalSubRows.forEach(function(d, i) {
                return accessRow2(d, i, depth + 1, row, subRows);
              });
              row.subRows = subRows;
            }
          } else if (row.subRows) {
            row.originalSubRows.forEach(function(d, i) {
              return accessRow2(d, i, depth + 1, row);
            });
          }
          if (column.accessor) {
            row.values[column.id] = column.accessor(originalRow, rowIndex, row, parentRows, data);
          }
          row.values[column.id] = reduceHooks(accessValueHooks, row.values[column.id], {
            row,
            column,
            instance: getInstance()
          }, true);
        };
        data.forEach(function(originalRow, rowIndex) {
          return accessRow(originalRow, rowIndex, 0, void 0, rows);
        });
      }
      actions3.resetExpanded = "resetExpanded";
      actions3.toggleRowExpanded = "toggleRowExpanded";
      actions3.toggleAllRowsExpanded = "toggleAllRowsExpanded";
      var useExpanded2 = function useExpanded3(hooks) {
        hooks.getToggleAllRowsExpandedProps = [defaultGetToggleAllRowsExpandedProps];
        hooks.getToggleRowExpandedProps = [defaultGetToggleRowExpandedProps];
        hooks.stateReducers.push(reducer$1);
        hooks.useInstance.push(useInstance$1);
        hooks.prepareRow.push(prepareRow);
      };
      useExpanded2.pluginName = "useExpanded";
      var defaultGetToggleAllRowsExpandedProps = function defaultGetToggleAllRowsExpandedProps2(props, _ref) {
        var instance = _ref.instance;
        return [props, {
          onClick: function onClick(e) {
            instance.toggleAllRowsExpanded();
          },
          style: {
            cursor: "pointer"
          },
          title: "Toggle All Rows Expanded"
        }];
      };
      var defaultGetToggleRowExpandedProps = function defaultGetToggleRowExpandedProps2(props, _ref2) {
        var row = _ref2.row;
        return [props, {
          onClick: function onClick() {
            row.toggleRowExpanded();
          },
          style: {
            cursor: "pointer"
          },
          title: "Toggle Row Expanded"
        }];
      };
      function reducer$1(state, action, previousState, instance) {
        if (action.type === actions3.init) {
          return _extends({
            expanded: {}
          }, state);
        }
        if (action.type === actions3.resetExpanded) {
          return _extends({}, state, {
            expanded: instance.initialState.expanded || {}
          });
        }
        if (action.type === actions3.toggleAllRowsExpanded) {
          var value = action.value;
          var rowsById = instance.rowsById;
          var isAllRowsExpanded = Object.keys(rowsById).length === Object.keys(state.expanded).length;
          var expandAll = typeof value !== "undefined" ? value : !isAllRowsExpanded;
          if (expandAll) {
            var expanded = {};
            Object.keys(rowsById).forEach(function(rowId) {
              expanded[rowId] = true;
            });
            return _extends({}, state, {
              expanded
            });
          }
          return _extends({}, state, {
            expanded: {}
          });
        }
        if (action.type === actions3.toggleRowExpanded) {
          var id = action.id, setExpanded = action.value;
          var exists = state.expanded[id];
          var shouldExist = typeof setExpanded !== "undefined" ? setExpanded : !exists;
          if (!exists && shouldExist) {
            var _extends2;
            return _extends({}, state, {
              expanded: _extends({}, state.expanded, (_extends2 = {}, _extends2[id] = true, _extends2))
            });
          } else if (exists && !shouldExist) {
            var _state$expanded = state.expanded, _ = _state$expanded[id], rest = _objectWithoutPropertiesLoose(_state$expanded, [id].map(_toPropertyKey));
            return _extends({}, state, {
              expanded: rest
            });
          } else {
            return state;
          }
        }
      }
      function useInstance$1(instance) {
        var data = instance.data, rows = instance.rows, rowsById = instance.rowsById, _instance$manualExpan = instance.manualExpandedKey, manualExpandedKey = _instance$manualExpan === void 0 ? "expanded" : _instance$manualExpan, _instance$paginateExp = instance.paginateExpandedRows, paginateExpandedRows = _instance$paginateExp === void 0 ? true : _instance$paginateExp, _instance$expandSubRo = instance.expandSubRows, expandSubRows = _instance$expandSubRo === void 0 ? true : _instance$expandSubRo, _instance$autoResetEx = instance.autoResetExpanded, autoResetExpanded = _instance$autoResetEx === void 0 ? true : _instance$autoResetEx, getHooks = instance.getHooks, plugins = instance.plugins, expanded = instance.state.expanded, dispatch = instance.dispatch;
        ensurePluginOrder(plugins, ["useSortBy", "useGroupBy", "usePivotColumns", "useGlobalFilter"], "useExpanded");
        var getAutoResetExpanded = useGetLatest(autoResetExpanded);
        var isAllRowsExpanded = Boolean(Object.keys(rowsById).length && Object.keys(expanded).length);
        if (isAllRowsExpanded) {
          if (Object.keys(rowsById).some(function(id) {
            return !expanded[id];
          })) {
            isAllRowsExpanded = false;
          }
        }
        useMountedLayoutEffect(function() {
          if (getAutoResetExpanded()) {
            dispatch({
              type: actions3.resetExpanded
            });
          }
        }, [dispatch, data]);
        var toggleRowExpanded = React2.useCallback(function(id, value) {
          dispatch({
            type: actions3.toggleRowExpanded,
            id,
            value
          });
        }, [dispatch]);
        var toggleAllRowsExpanded = React2.useCallback(function(value) {
          return dispatch({
            type: actions3.toggleAllRowsExpanded,
            value
          });
        }, [dispatch]);
        var expandedRows = React2.useMemo(function() {
          if (paginateExpandedRows) {
            return expandRows(rows, {
              manualExpandedKey,
              expanded,
              expandSubRows
            });
          }
          return rows;
        }, [paginateExpandedRows, rows, manualExpandedKey, expanded, expandSubRows]);
        var expandedDepth = React2.useMemo(function() {
          return findExpandedDepth(expanded);
        }, [expanded]);
        var getInstance = useGetLatest(instance);
        var getToggleAllRowsExpandedProps = makePropGetter(getHooks().getToggleAllRowsExpandedProps, {
          instance: getInstance()
        });
        Object.assign(instance, {
          preExpandedRows: rows,
          expandedRows,
          rows: expandedRows,
          expandedDepth,
          isAllRowsExpanded,
          toggleRowExpanded,
          toggleAllRowsExpanded,
          getToggleAllRowsExpandedProps
        });
      }
      function prepareRow(row, _ref3) {
        var getHooks = _ref3.instance.getHooks, instance = _ref3.instance;
        row.toggleRowExpanded = function(set4) {
          return instance.toggleRowExpanded(row.id, set4);
        };
        row.getToggleRowExpandedProps = makePropGetter(getHooks().getToggleRowExpandedProps, {
          instance,
          row
        });
      }
      function findExpandedDepth(expanded) {
        var maxDepth = 0;
        Object.keys(expanded).forEach(function(id) {
          var splitId = id.split(".");
          maxDepth = Math.max(maxDepth, splitId.length);
        });
        return maxDepth;
      }
      var text = function text2(rows, ids, filterValue) {
        rows = rows.filter(function(row) {
          return ids.some(function(id) {
            var rowValue = row.values[id];
            return String(rowValue).toLowerCase().includes(String(filterValue).toLowerCase());
          });
        });
        return rows;
      };
      text.autoRemove = function(val) {
        return !val;
      };
      var exactText = function exactText2(rows, ids, filterValue) {
        return rows.filter(function(row) {
          return ids.some(function(id) {
            var rowValue = row.values[id];
            return rowValue !== void 0 ? String(rowValue).toLowerCase() === String(filterValue).toLowerCase() : true;
          });
        });
      };
      exactText.autoRemove = function(val) {
        return !val;
      };
      var exactTextCase = function exactTextCase2(rows, ids, filterValue) {
        return rows.filter(function(row) {
          return ids.some(function(id) {
            var rowValue = row.values[id];
            return rowValue !== void 0 ? String(rowValue) === String(filterValue) : true;
          });
        });
      };
      exactTextCase.autoRemove = function(val) {
        return !val;
      };
      var includes = function includes2(rows, ids, filterValue) {
        return rows.filter(function(row) {
          return ids.some(function(id) {
            var rowValue = row.values[id];
            return rowValue.includes(filterValue);
          });
        });
      };
      includes.autoRemove = function(val) {
        return !val || !val.length;
      };
      var includesAll = function includesAll2(rows, ids, filterValue) {
        return rows.filter(function(row) {
          return ids.some(function(id) {
            var rowValue = row.values[id];
            return rowValue && rowValue.length && filterValue.every(function(val) {
              return rowValue.includes(val);
            });
          });
        });
      };
      includesAll.autoRemove = function(val) {
        return !val || !val.length;
      };
      var includesSome = function includesSome2(rows, ids, filterValue) {
        return rows.filter(function(row) {
          return ids.some(function(id) {
            var rowValue = row.values[id];
            return rowValue && rowValue.length && filterValue.some(function(val) {
              return rowValue.includes(val);
            });
          });
        });
      };
      includesSome.autoRemove = function(val) {
        return !val || !val.length;
      };
      var includesValue = function includesValue2(rows, ids, filterValue) {
        return rows.filter(function(row) {
          return ids.some(function(id) {
            var rowValue = row.values[id];
            return filterValue.includes(rowValue);
          });
        });
      };
      includesValue.autoRemove = function(val) {
        return !val || !val.length;
      };
      var exact = function exact2(rows, ids, filterValue) {
        return rows.filter(function(row) {
          return ids.some(function(id) {
            var rowValue = row.values[id];
            return rowValue === filterValue;
          });
        });
      };
      exact.autoRemove = function(val) {
        return typeof val === "undefined";
      };
      var equals = function equals2(rows, ids, filterValue) {
        return rows.filter(function(row) {
          return ids.some(function(id) {
            var rowValue = row.values[id];
            return rowValue == filterValue;
          });
        });
      };
      equals.autoRemove = function(val) {
        return val == null;
      };
      var between = function between2(rows, ids, filterValue) {
        var _ref = filterValue || [], min2 = _ref[0], max2 = _ref[1];
        min2 = typeof min2 === "number" ? min2 : -Infinity;
        max2 = typeof max2 === "number" ? max2 : Infinity;
        if (min2 > max2) {
          var temp = min2;
          min2 = max2;
          max2 = temp;
        }
        return rows.filter(function(row) {
          return ids.some(function(id) {
            var rowValue = row.values[id];
            return rowValue >= min2 && rowValue <= max2;
          });
        });
      };
      between.autoRemove = function(val) {
        return !val || typeof val[0] !== "number" && typeof val[1] !== "number";
      };
      var filterTypes = Object.freeze({
        __proto__: null,
        text,
        exactText,
        exactTextCase,
        includes,
        includesAll,
        includesSome,
        includesValue,
        exact,
        equals,
        between
      });
      actions3.resetFilters = "resetFilters";
      actions3.setFilter = "setFilter";
      actions3.setAllFilters = "setAllFilters";
      var useFilters2 = function useFilters3(hooks) {
        hooks.stateReducers.push(reducer$2);
        hooks.useInstance.push(useInstance$2);
      };
      useFilters2.pluginName = "useFilters";
      function reducer$2(state, action, previousState, instance) {
        if (action.type === actions3.init) {
          return _extends({
            filters: []
          }, state);
        }
        if (action.type === actions3.resetFilters) {
          return _extends({}, state, {
            filters: instance.initialState.filters || []
          });
        }
        if (action.type === actions3.setFilter) {
          var columnId = action.columnId, filterValue = action.filterValue;
          var allColumns2 = instance.allColumns, userFilterTypes = instance.filterTypes;
          var column = allColumns2.find(function(d) {
            return d.id === columnId;
          });
          if (!column) {
            throw new Error("React-Table: Could not find a column with id: " + columnId);
          }
          var filterMethod = getFilterMethod(column.filter, userFilterTypes || {}, filterTypes);
          var previousfilter = state.filters.find(function(d) {
            return d.id === columnId;
          });
          var newFilter = functionalUpdate(filterValue, previousfilter && previousfilter.value);
          if (shouldAutoRemoveFilter(filterMethod.autoRemove, newFilter, column)) {
            return _extends({}, state, {
              filters: state.filters.filter(function(d) {
                return d.id !== columnId;
              })
            });
          }
          if (previousfilter) {
            return _extends({}, state, {
              filters: state.filters.map(function(d) {
                if (d.id === columnId) {
                  return {
                    id: columnId,
                    value: newFilter
                  };
                }
                return d;
              })
            });
          }
          return _extends({}, state, {
            filters: [].concat(state.filters, [{
              id: columnId,
              value: newFilter
            }])
          });
        }
        if (action.type === actions3.setAllFilters) {
          var filters = action.filters;
          var _allColumns = instance.allColumns, _userFilterTypes = instance.filterTypes;
          return _extends({}, state, {
            // Filter out undefined values
            filters: functionalUpdate(filters, state.filters).filter(function(filter) {
              var column2 = _allColumns.find(function(d) {
                return d.id === filter.id;
              });
              var filterMethod2 = getFilterMethod(column2.filter, _userFilterTypes || {}, filterTypes);
              if (shouldAutoRemoveFilter(filterMethod2.autoRemove, filter.value, column2)) {
                return false;
              }
              return true;
            })
          });
        }
      }
      function useInstance$2(instance) {
        var data = instance.data, rows = instance.rows, flatRows = instance.flatRows, rowsById = instance.rowsById, allColumns2 = instance.allColumns, userFilterTypes = instance.filterTypes, manualFilters = instance.manualFilters, _instance$defaultCanF = instance.defaultCanFilter, defaultCanFilter = _instance$defaultCanF === void 0 ? false : _instance$defaultCanF, disableFilters = instance.disableFilters, filters = instance.state.filters, dispatch = instance.dispatch, _instance$autoResetFi = instance.autoResetFilters, autoResetFilters = _instance$autoResetFi === void 0 ? true : _instance$autoResetFi;
        var setFilter = React2.useCallback(function(columnId, filterValue) {
          dispatch({
            type: actions3.setFilter,
            columnId,
            filterValue
          });
        }, [dispatch]);
        var setAllFilters = React2.useCallback(function(filters2) {
          dispatch({
            type: actions3.setAllFilters,
            filters: filters2
          });
        }, [dispatch]);
        allColumns2.forEach(function(column) {
          var id = column.id, accessor = column.accessor, columnDefaultCanFilter = column.defaultCanFilter, columnDisableFilters = column.disableFilters;
          column.canFilter = accessor ? getFirstDefined(columnDisableFilters === true ? false : void 0, disableFilters === true ? false : void 0, true) : getFirstDefined(columnDefaultCanFilter, defaultCanFilter, false);
          column.setFilter = function(val) {
            return setFilter(column.id, val);
          };
          var found = filters.find(function(d) {
            return d.id === id;
          });
          column.filterValue = found && found.value;
        });
        var _React$useMemo = React2.useMemo(function() {
          if (manualFilters || !filters.length) {
            return [rows, flatRows, rowsById];
          }
          var filteredFlatRows2 = [];
          var filteredRowsById2 = {};
          var filterRows = function filterRows2(rows2, depth) {
            if (depth === void 0) {
              depth = 0;
            }
            var filteredRows2 = rows2;
            filteredRows2 = filters.reduce(function(filteredSoFar, _ref) {
              var columnId = _ref.id, filterValue = _ref.value;
              var column = allColumns2.find(function(d) {
                return d.id === columnId;
              });
              if (!column) {
                return filteredSoFar;
              }
              if (depth === 0) {
                column.preFilteredRows = filteredSoFar;
              }
              var filterMethod = getFilterMethod(column.filter, userFilterTypes || {}, filterTypes);
              if (!filterMethod) {
                console.warn("Could not find a valid 'column.filter' for column with the ID: " + column.id + ".");
                return filteredSoFar;
              }
              column.filteredRows = filterMethod(filteredSoFar, [columnId], filterValue);
              return column.filteredRows;
            }, rows2);
            filteredRows2.forEach(function(row) {
              filteredFlatRows2.push(row);
              filteredRowsById2[row.id] = row;
              if (!row.subRows) {
                return;
              }
              row.subRows = row.subRows && row.subRows.length > 0 ? filterRows2(row.subRows, depth + 1) : row.subRows;
            });
            return filteredRows2;
          };
          return [filterRows(rows), filteredFlatRows2, filteredRowsById2];
        }, [manualFilters, filters, rows, flatRows, rowsById, allColumns2, userFilterTypes]), filteredRows = _React$useMemo[0], filteredFlatRows = _React$useMemo[1], filteredRowsById = _React$useMemo[2];
        React2.useMemo(function() {
          var nonFilteredColumns = allColumns2.filter(function(column) {
            return !filters.find(function(d) {
              return d.id === column.id;
            });
          });
          nonFilteredColumns.forEach(function(column) {
            column.preFilteredRows = filteredRows;
            column.filteredRows = filteredRows;
          });
        }, [filteredRows, filters, allColumns2]);
        var getAutoResetFilters = useGetLatest(autoResetFilters);
        useMountedLayoutEffect(function() {
          if (getAutoResetFilters()) {
            dispatch({
              type: actions3.resetFilters
            });
          }
        }, [dispatch, manualFilters ? null : data]);
        Object.assign(instance, {
          preFilteredRows: rows,
          preFilteredFlatRows: flatRows,
          preFilteredRowsById: rowsById,
          filteredRows,
          filteredFlatRows,
          filteredRowsById,
          rows: filteredRows,
          flatRows: filteredFlatRows,
          rowsById: filteredRowsById,
          setFilter,
          setAllFilters
        });
      }
      actions3.resetGlobalFilter = "resetGlobalFilter";
      actions3.setGlobalFilter = "setGlobalFilter";
      var useGlobalFilter2 = function useGlobalFilter3(hooks) {
        hooks.stateReducers.push(reducer$3);
        hooks.useInstance.push(useInstance$3);
      };
      useGlobalFilter2.pluginName = "useGlobalFilter";
      function reducer$3(state, action, previousState, instance) {
        if (action.type === actions3.resetGlobalFilter) {
          return _extends({}, state, {
            globalFilter: instance.initialState.globalFilter || void 0
          });
        }
        if (action.type === actions3.setGlobalFilter) {
          var filterValue = action.filterValue;
          var userFilterTypes = instance.userFilterTypes;
          var filterMethod = getFilterMethod(instance.globalFilter, userFilterTypes || {}, filterTypes);
          var newFilter = functionalUpdate(filterValue, state.globalFilter);
          if (shouldAutoRemoveFilter(filterMethod.autoRemove, newFilter)) {
            var globalFilter = state.globalFilter, stateWithoutGlobalFilter = _objectWithoutPropertiesLoose(state, ["globalFilter"]);
            return stateWithoutGlobalFilter;
          }
          return _extends({}, state, {
            globalFilter: newFilter
          });
        }
      }
      function useInstance$3(instance) {
        var data = instance.data, rows = instance.rows, flatRows = instance.flatRows, rowsById = instance.rowsById, allColumns2 = instance.allColumns, userFilterTypes = instance.filterTypes, globalFilter = instance.globalFilter, manualGlobalFilter = instance.manualGlobalFilter, globalFilterValue = instance.state.globalFilter, dispatch = instance.dispatch, _instance$autoResetGl = instance.autoResetGlobalFilter, autoResetGlobalFilter = _instance$autoResetGl === void 0 ? true : _instance$autoResetGl, disableGlobalFilter = instance.disableGlobalFilter;
        var setGlobalFilter = React2.useCallback(function(filterValue) {
          dispatch({
            type: actions3.setGlobalFilter,
            filterValue
          });
        }, [dispatch]);
        var _React$useMemo = React2.useMemo(function() {
          if (manualGlobalFilter || typeof globalFilterValue === "undefined") {
            return [rows, flatRows, rowsById];
          }
          var filteredFlatRows = [];
          var filteredRowsById = {};
          var filterMethod = getFilterMethod(globalFilter, userFilterTypes || {}, filterTypes);
          if (!filterMethod) {
            console.warn("Could not find a valid 'globalFilter' option.");
            return rows;
          }
          allColumns2.forEach(function(column) {
            var columnDisableGlobalFilter = column.disableGlobalFilter;
            column.canFilter = getFirstDefined(columnDisableGlobalFilter === true ? false : void 0, disableGlobalFilter === true ? false : void 0, true);
          });
          var filterableColumns = allColumns2.filter(function(c) {
            return c.canFilter === true;
          });
          var filterRows = function filterRows2(filteredRows) {
            filteredRows = filterMethod(filteredRows, filterableColumns.map(function(d) {
              return d.id;
            }), globalFilterValue);
            filteredRows.forEach(function(row) {
              filteredFlatRows.push(row);
              filteredRowsById[row.id] = row;
              row.subRows = row.subRows && row.subRows.length ? filterRows2(row.subRows) : row.subRows;
            });
            return filteredRows;
          };
          return [filterRows(rows), filteredFlatRows, filteredRowsById];
        }, [manualGlobalFilter, globalFilterValue, globalFilter, userFilterTypes, allColumns2, rows, flatRows, rowsById, disableGlobalFilter]), globalFilteredRows = _React$useMemo[0], globalFilteredFlatRows = _React$useMemo[1], globalFilteredRowsById = _React$useMemo[2];
        var getAutoResetGlobalFilter = useGetLatest(autoResetGlobalFilter);
        useMountedLayoutEffect(function() {
          if (getAutoResetGlobalFilter()) {
            dispatch({
              type: actions3.resetGlobalFilter
            });
          }
        }, [dispatch, manualGlobalFilter ? null : data]);
        Object.assign(instance, {
          preGlobalFilteredRows: rows,
          preGlobalFilteredFlatRows: flatRows,
          preGlobalFilteredRowsById: rowsById,
          globalFilteredRows,
          globalFilteredFlatRows,
          globalFilteredRowsById,
          rows: globalFilteredRows,
          flatRows: globalFilteredFlatRows,
          rowsById: globalFilteredRowsById,
          setGlobalFilter,
          disableGlobalFilter
        });
      }
      function sum(values, aggregatedValues) {
        return aggregatedValues.reduce(function(sum2, next) {
          return sum2 + (typeof next === "number" ? next : 0);
        }, 0);
      }
      function min(values) {
        var min2 = values[0] || 0;
        values.forEach(function(value) {
          if (typeof value === "number") {
            min2 = Math.min(min2, value);
          }
        });
        return min2;
      }
      function max(values) {
        var max2 = values[0] || 0;
        values.forEach(function(value) {
          if (typeof value === "number") {
            max2 = Math.max(max2, value);
          }
        });
        return max2;
      }
      function minMax(values) {
        var min2 = values[0] || 0;
        var max2 = values[0] || 0;
        values.forEach(function(value) {
          if (typeof value === "number") {
            min2 = Math.min(min2, value);
            max2 = Math.max(max2, value);
          }
        });
        return min2 + ".." + max2;
      }
      function average(values) {
        return sum(null, values) / values.length;
      }
      function median(values) {
        if (!values.length) {
          return null;
        }
        var mid = Math.floor(values.length / 2);
        var nums = [].concat(values).sort(function(a, b) {
          return a - b;
        });
        return values.length % 2 !== 0 ? nums[mid] : (nums[mid - 1] + nums[mid]) / 2;
      }
      function unique(values) {
        return Array.from(new Set(values).values());
      }
      function uniqueCount(values) {
        return new Set(values).size;
      }
      function count(values) {
        return values.length;
      }
      var aggregations = Object.freeze({
        __proto__: null,
        sum,
        min,
        max,
        minMax,
        average,
        median,
        unique,
        uniqueCount,
        count
      });
      var emptyArray = [];
      var emptyObject = {};
      actions3.resetGroupBy = "resetGroupBy";
      actions3.setGroupBy = "setGroupBy";
      actions3.toggleGroupBy = "toggleGroupBy";
      var useGroupBy2 = function useGroupBy3(hooks) {
        hooks.getGroupByToggleProps = [defaultGetGroupByToggleProps];
        hooks.stateReducers.push(reducer$4);
        hooks.visibleColumnsDeps.push(function(deps, _ref) {
          var instance = _ref.instance;
          return [].concat(deps, [instance.state.groupBy]);
        });
        hooks.visibleColumns.push(visibleColumns4);
        hooks.useInstance.push(useInstance$4);
        hooks.prepareRow.push(prepareRow$1);
      };
      useGroupBy2.pluginName = "useGroupBy";
      var defaultGetGroupByToggleProps = function defaultGetGroupByToggleProps2(props, _ref2) {
        var header3 = _ref2.header;
        return [props, {
          onClick: header3.canGroupBy ? function(e) {
            e.persist();
            header3.toggleGroupBy();
          } : void 0,
          style: {
            cursor: header3.canGroupBy ? "pointer" : void 0
          },
          title: "Toggle GroupBy"
        }];
      };
      function reducer$4(state, action, previousState, instance) {
        if (action.type === actions3.init) {
          return _extends({
            groupBy: []
          }, state);
        }
        if (action.type === actions3.resetGroupBy) {
          return _extends({}, state, {
            groupBy: instance.initialState.groupBy || []
          });
        }
        if (action.type === actions3.setGroupBy) {
          var value = action.value;
          return _extends({}, state, {
            groupBy: value
          });
        }
        if (action.type === actions3.toggleGroupBy) {
          var columnId = action.columnId, setGroupBy = action.value;
          var resolvedGroupBy = typeof setGroupBy !== "undefined" ? setGroupBy : !state.groupBy.includes(columnId);
          if (resolvedGroupBy) {
            return _extends({}, state, {
              groupBy: [].concat(state.groupBy, [columnId])
            });
          }
          return _extends({}, state, {
            groupBy: state.groupBy.filter(function(d) {
              return d !== columnId;
            })
          });
        }
      }
      function visibleColumns4(columns6, _ref3) {
        var groupBy = _ref3.instance.state.groupBy;
        var groupByColumns = groupBy.map(function(g) {
          return columns6.find(function(col) {
            return col.id === g;
          });
        }).filter(Boolean);
        var nonGroupByColumns = columns6.filter(function(col) {
          return !groupBy.includes(col.id);
        });
        columns6 = [].concat(groupByColumns, nonGroupByColumns);
        columns6.forEach(function(column) {
          column.isGrouped = groupBy.includes(column.id);
          column.groupedIndex = groupBy.indexOf(column.id);
        });
        return columns6;
      }
      var defaultUserAggregations = {};
      function useInstance$4(instance) {
        var data = instance.data, rows = instance.rows, flatRows = instance.flatRows, rowsById = instance.rowsById, allColumns2 = instance.allColumns, flatHeaders = instance.flatHeaders, _instance$groupByFn = instance.groupByFn, groupByFn = _instance$groupByFn === void 0 ? defaultGroupByFn : _instance$groupByFn, manualGroupBy = instance.manualGroupBy, _instance$aggregation = instance.aggregations, userAggregations = _instance$aggregation === void 0 ? defaultUserAggregations : _instance$aggregation, plugins = instance.plugins, groupBy = instance.state.groupBy, dispatch = instance.dispatch, _instance$autoResetGr = instance.autoResetGroupBy, autoResetGroupBy = _instance$autoResetGr === void 0 ? true : _instance$autoResetGr, disableGroupBy = instance.disableGroupBy, defaultCanGroupBy = instance.defaultCanGroupBy, getHooks = instance.getHooks;
        ensurePluginOrder(plugins, ["useColumnOrder", "useFilters"], "useGroupBy");
        var getInstance = useGetLatest(instance);
        allColumns2.forEach(function(column) {
          var accessor = column.accessor, defaultColumnGroupBy = column.defaultGroupBy, columnDisableGroupBy = column.disableGroupBy;
          column.canGroupBy = accessor ? getFirstDefined(column.canGroupBy, columnDisableGroupBy === true ? false : void 0, disableGroupBy === true ? false : void 0, true) : getFirstDefined(column.canGroupBy, defaultColumnGroupBy, defaultCanGroupBy, false);
          if (column.canGroupBy) {
            column.toggleGroupBy = function() {
              return instance.toggleGroupBy(column.id);
            };
          }
          column.Aggregated = column.Aggregated || column.Cell;
        });
        var toggleGroupBy = React2.useCallback(function(columnId, value) {
          dispatch({
            type: actions3.toggleGroupBy,
            columnId,
            value
          });
        }, [dispatch]);
        var setGroupBy = React2.useCallback(function(value) {
          dispatch({
            type: actions3.setGroupBy,
            value
          });
        }, [dispatch]);
        flatHeaders.forEach(function(header3) {
          header3.getGroupByToggleProps = makePropGetter(getHooks().getGroupByToggleProps, {
            instance: getInstance(),
            header: header3
          });
        });
        var _React$useMemo = React2.useMemo(function() {
          if (manualGroupBy || !groupBy.length) {
            return [rows, flatRows, rowsById, emptyArray, emptyObject, flatRows, rowsById];
          }
          var existingGroupBy = groupBy.filter(function(g) {
            return allColumns2.find(function(col) {
              return col.id === g;
            });
          });
          var aggregateRowsToValues = function aggregateRowsToValues2(leafRows, groupedRows3, depth) {
            var values = {};
            allColumns2.forEach(function(column) {
              if (existingGroupBy.includes(column.id)) {
                values[column.id] = groupedRows3[0] ? groupedRows3[0].values[column.id] : null;
                return;
              }
              var aggregateFn = typeof column.aggregate === "function" ? column.aggregate : userAggregations[column.aggregate] || aggregations[column.aggregate];
              if (aggregateFn) {
                var groupedValues = groupedRows3.map(function(row) {
                  return row.values[column.id];
                });
                var leafValues = leafRows.map(function(row) {
                  var columnValue = row.values[column.id];
                  if (!depth && column.aggregateValue) {
                    var aggregateValueFn = typeof column.aggregateValue === "function" ? column.aggregateValue : userAggregations[column.aggregateValue] || aggregations[column.aggregateValue];
                    if (!aggregateValueFn) {
                      console.info({
                        column
                      });
                      throw new Error("React Table: Invalid column.aggregateValue option for column listed above");
                    }
                    columnValue = aggregateValueFn(columnValue, row, column);
                  }
                  return columnValue;
                });
                values[column.id] = aggregateFn(leafValues, groupedValues);
              } else if (column.aggregate) {
                console.info({
                  column
                });
                throw new Error("React Table: Invalid column.aggregate option for column listed above");
              } else {
                values[column.id] = null;
              }
            });
            return values;
          };
          var groupedFlatRows2 = [];
          var groupedRowsById2 = {};
          var onlyGroupedFlatRows2 = [];
          var onlyGroupedRowsById2 = {};
          var nonGroupedFlatRows2 = [];
          var nonGroupedRowsById2 = {};
          var groupUpRecursively = function groupUpRecursively2(rows2, depth, parentId) {
            if (depth === void 0) {
              depth = 0;
            }
            if (depth === existingGroupBy.length) {
              return rows2.map(function(row) {
                return _extends({}, row, {
                  depth
                });
              });
            }
            var columnId = existingGroupBy[depth];
            var rowGroupsMap = groupByFn(rows2, columnId);
            var aggregatedGroupedRows = Object.entries(rowGroupsMap).map(function(_ref4, index) {
              var groupByVal = _ref4[0], groupedRows3 = _ref4[1];
              var id = columnId + ":" + groupByVal;
              id = parentId ? parentId + ">" + id : id;
              var subRows = groupUpRecursively2(groupedRows3, depth + 1, id);
              var leafRows = depth ? flattenBy(groupedRows3, "leafRows") : groupedRows3;
              var values = aggregateRowsToValues(leafRows, groupedRows3, depth);
              var row = {
                id,
                isGrouped: true,
                groupByID: columnId,
                groupByVal,
                values,
                subRows,
                leafRows,
                depth,
                index
              };
              subRows.forEach(function(subRow) {
                groupedFlatRows2.push(subRow);
                groupedRowsById2[subRow.id] = subRow;
                if (subRow.isGrouped) {
                  onlyGroupedFlatRows2.push(subRow);
                  onlyGroupedRowsById2[subRow.id] = subRow;
                } else {
                  nonGroupedFlatRows2.push(subRow);
                  nonGroupedRowsById2[subRow.id] = subRow;
                }
              });
              return row;
            });
            return aggregatedGroupedRows;
          };
          var groupedRows2 = groupUpRecursively(rows);
          groupedRows2.forEach(function(subRow) {
            groupedFlatRows2.push(subRow);
            groupedRowsById2[subRow.id] = subRow;
            if (subRow.isGrouped) {
              onlyGroupedFlatRows2.push(subRow);
              onlyGroupedRowsById2[subRow.id] = subRow;
            } else {
              nonGroupedFlatRows2.push(subRow);
              nonGroupedRowsById2[subRow.id] = subRow;
            }
          });
          return [groupedRows2, groupedFlatRows2, groupedRowsById2, onlyGroupedFlatRows2, onlyGroupedRowsById2, nonGroupedFlatRows2, nonGroupedRowsById2];
        }, [manualGroupBy, groupBy, rows, flatRows, rowsById, allColumns2, userAggregations, groupByFn]), groupedRows = _React$useMemo[0], groupedFlatRows = _React$useMemo[1], groupedRowsById = _React$useMemo[2], onlyGroupedFlatRows = _React$useMemo[3], onlyGroupedRowsById = _React$useMemo[4], nonGroupedFlatRows = _React$useMemo[5], nonGroupedRowsById = _React$useMemo[6];
        var getAutoResetGroupBy = useGetLatest(autoResetGroupBy);
        useMountedLayoutEffect(function() {
          if (getAutoResetGroupBy()) {
            dispatch({
              type: actions3.resetGroupBy
            });
          }
        }, [dispatch, manualGroupBy ? null : data]);
        Object.assign(instance, {
          preGroupedRows: rows,
          preGroupedFlatRow: flatRows,
          preGroupedRowsById: rowsById,
          groupedRows,
          groupedFlatRows,
          groupedRowsById,
          onlyGroupedFlatRows,
          onlyGroupedRowsById,
          nonGroupedFlatRows,
          nonGroupedRowsById,
          rows: groupedRows,
          flatRows: groupedFlatRows,
          rowsById: groupedRowsById,
          toggleGroupBy,
          setGroupBy
        });
      }
      function prepareRow$1(row) {
        row.allCells.forEach(function(cell) {
          var _row$subRows;
          cell.isGrouped = cell.column.isGrouped && cell.column.id === row.groupByID;
          cell.isPlaceholder = !cell.isGrouped && cell.column.isGrouped;
          cell.isAggregated = !cell.isGrouped && !cell.isPlaceholder && ((_row$subRows = row.subRows) == null ? void 0 : _row$subRows.length);
        });
      }
      function defaultGroupByFn(rows, columnId) {
        return rows.reduce(function(prev, row, i) {
          var resKey = "" + row.values[columnId];
          prev[resKey] = Array.isArray(prev[resKey]) ? prev[resKey] : [];
          prev[resKey].push(row);
          return prev;
        }, {});
      }
      var reSplitAlphaNumeric = /([0-9]+)/gm;
      var alphanumeric = function alphanumeric2(rowA, rowB, columnId) {
        var _getRowValuesByColumn = getRowValuesByColumnID(rowA, rowB, columnId), a = _getRowValuesByColumn[0], b = _getRowValuesByColumn[1];
        a = toString2(a);
        b = toString2(b);
        a = a.split(reSplitAlphaNumeric).filter(Boolean);
        b = b.split(reSplitAlphaNumeric).filter(Boolean);
        while (a.length && b.length) {
          var aa = a.shift();
          var bb = b.shift();
          var an = parseInt(aa, 10);
          var bn = parseInt(bb, 10);
          var combo = [an, bn].sort();
          if (isNaN(combo[0])) {
            if (aa > bb) {
              return 1;
            }
            if (bb > aa) {
              return -1;
            }
            continue;
          }
          if (isNaN(combo[1])) {
            return isNaN(an) ? -1 : 1;
          }
          if (an > bn) {
            return 1;
          }
          if (bn > an) {
            return -1;
          }
        }
        return a.length - b.length;
      };
      function datetime(rowA, rowB, columnId) {
        var _getRowValuesByColumn2 = getRowValuesByColumnID(rowA, rowB, columnId), a = _getRowValuesByColumn2[0], b = _getRowValuesByColumn2[1];
        a = a.getTime();
        b = b.getTime();
        return compareBasic(a, b);
      }
      function basic(rowA, rowB, columnId) {
        var _getRowValuesByColumn3 = getRowValuesByColumnID(rowA, rowB, columnId), a = _getRowValuesByColumn3[0], b = _getRowValuesByColumn3[1];
        return compareBasic(a, b);
      }
      function string(rowA, rowB, columnId) {
        var _getRowValuesByColumn4 = getRowValuesByColumnID(rowA, rowB, columnId), a = _getRowValuesByColumn4[0], b = _getRowValuesByColumn4[1];
        a = a.split("").filter(Boolean);
        b = b.split("").filter(Boolean);
        while (a.length && b.length) {
          var aa = a.shift();
          var bb = b.shift();
          var alower = aa.toLowerCase();
          var blower = bb.toLowerCase();
          if (alower > blower) {
            return 1;
          }
          if (blower > alower) {
            return -1;
          }
          if (aa > bb) {
            return 1;
          }
          if (bb > aa) {
            return -1;
          }
          continue;
        }
        return a.length - b.length;
      }
      function number(rowA, rowB, columnId) {
        var _getRowValuesByColumn5 = getRowValuesByColumnID(rowA, rowB, columnId), a = _getRowValuesByColumn5[0], b = _getRowValuesByColumn5[1];
        var replaceNonNumeric = /[^0-9.]/gi;
        a = Number(String(a).replace(replaceNonNumeric, ""));
        b = Number(String(b).replace(replaceNonNumeric, ""));
        return compareBasic(a, b);
      }
      function compareBasic(a, b) {
        return a === b ? 0 : a > b ? 1 : -1;
      }
      function getRowValuesByColumnID(row1, row2, columnId) {
        return [row1.values[columnId], row2.values[columnId]];
      }
      function toString2(a) {
        if (typeof a === "number") {
          if (isNaN(a) || a === Infinity || a === -Infinity) {
            return "";
          }
          return String(a);
        }
        if (typeof a === "string") {
          return a;
        }
        return "";
      }
      var sortTypes = Object.freeze({
        __proto__: null,
        alphanumeric,
        datetime,
        basic,
        string,
        number
      });
      actions3.resetSortBy = "resetSortBy";
      actions3.setSortBy = "setSortBy";
      actions3.toggleSortBy = "toggleSortBy";
      actions3.clearSortBy = "clearSortBy";
      defaultColumn.sortType = "alphanumeric";
      defaultColumn.sortDescFirst = false;
      var useSortBy2 = function useSortBy3(hooks) {
        hooks.getSortByToggleProps = [defaultGetSortByToggleProps];
        hooks.stateReducers.push(reducer$5);
        hooks.useInstance.push(useInstance$5);
      };
      useSortBy2.pluginName = "useSortBy";
      var defaultGetSortByToggleProps = function defaultGetSortByToggleProps2(props, _ref) {
        var instance = _ref.instance, column = _ref.column;
        var _instance$isMultiSort = instance.isMultiSortEvent, isMultiSortEvent = _instance$isMultiSort === void 0 ? function(e) {
          return e.shiftKey;
        } : _instance$isMultiSort;
        return [props, {
          onClick: column.canSort ? function(e) {
            e.persist();
            column.toggleSortBy(void 0, !instance.disableMultiSort && isMultiSortEvent(e));
          } : void 0,
          style: {
            cursor: column.canSort ? "pointer" : void 0
          },
          title: column.canSort ? "Toggle SortBy" : void 0
        }];
      };
      function reducer$5(state, action, previousState, instance) {
        if (action.type === actions3.init) {
          return _extends({
            sortBy: []
          }, state);
        }
        if (action.type === actions3.resetSortBy) {
          return _extends({}, state, {
            sortBy: instance.initialState.sortBy || []
          });
        }
        if (action.type === actions3.clearSortBy) {
          var sortBy = state.sortBy;
          var newSortBy = sortBy.filter(function(d) {
            return d.id !== action.columnId;
          });
          return _extends({}, state, {
            sortBy: newSortBy
          });
        }
        if (action.type === actions3.setSortBy) {
          var _sortBy = action.sortBy;
          return _extends({}, state, {
            sortBy: _sortBy
          });
        }
        if (action.type === actions3.toggleSortBy) {
          var columnId = action.columnId, desc = action.desc, multi = action.multi;
          var allColumns2 = instance.allColumns, disableMultiSort = instance.disableMultiSort, disableSortRemove = instance.disableSortRemove, disableMultiRemove = instance.disableMultiRemove, _instance$maxMultiSor = instance.maxMultiSortColCount, maxMultiSortColCount = _instance$maxMultiSor === void 0 ? Number.MAX_SAFE_INTEGER : _instance$maxMultiSor;
          var _sortBy2 = state.sortBy;
          var column = allColumns2.find(function(d) {
            return d.id === columnId;
          });
          var sortDescFirst = column.sortDescFirst;
          var existingSortBy = _sortBy2.find(function(d) {
            return d.id === columnId;
          });
          var existingIndex = _sortBy2.findIndex(function(d) {
            return d.id === columnId;
          });
          var hasDescDefined = typeof desc !== "undefined" && desc !== null;
          var _newSortBy = [];
          var sortAction;
          if (!disableMultiSort && multi) {
            if (existingSortBy) {
              sortAction = "toggle";
            } else {
              sortAction = "add";
            }
          } else {
            if (existingIndex !== _sortBy2.length - 1 || _sortBy2.length !== 1) {
              sortAction = "replace";
            } else if (existingSortBy) {
              sortAction = "toggle";
            } else {
              sortAction = "replace";
            }
          }
          if (sortAction === "toggle" && // Must be toggling
          !disableSortRemove && // If disableSortRemove, disable in general
          !hasDescDefined && // Must not be setting desc
          (multi ? !disableMultiRemove : true) && // If multi, don't allow if disableMultiRemove
          (existingSortBy && // Finally, detect if it should indeed be removed
          existingSortBy.desc && !sortDescFirst || !existingSortBy.desc && sortDescFirst)) {
            sortAction = "remove";
          }
          if (sortAction === "replace") {
            _newSortBy = [{
              id: columnId,
              desc: hasDescDefined ? desc : sortDescFirst
            }];
          } else if (sortAction === "add") {
            _newSortBy = [].concat(_sortBy2, [{
              id: columnId,
              desc: hasDescDefined ? desc : sortDescFirst
            }]);
            _newSortBy.splice(0, _newSortBy.length - maxMultiSortColCount);
          } else if (sortAction === "toggle") {
            _newSortBy = _sortBy2.map(function(d) {
              if (d.id === columnId) {
                return _extends({}, d, {
                  desc: hasDescDefined ? desc : !existingSortBy.desc
                });
              }
              return d;
            });
          } else if (sortAction === "remove") {
            _newSortBy = _sortBy2.filter(function(d) {
              return d.id !== columnId;
            });
          }
          return _extends({}, state, {
            sortBy: _newSortBy
          });
        }
      }
      function useInstance$5(instance) {
        var data = instance.data, rows = instance.rows, flatRows = instance.flatRows, allColumns2 = instance.allColumns, _instance$orderByFn = instance.orderByFn, orderByFn = _instance$orderByFn === void 0 ? defaultOrderByFn : _instance$orderByFn, userSortTypes = instance.sortTypes, manualSortBy = instance.manualSortBy, defaultCanSort = instance.defaultCanSort, disableSortBy = instance.disableSortBy, flatHeaders = instance.flatHeaders, sortBy = instance.state.sortBy, dispatch = instance.dispatch, plugins = instance.plugins, getHooks = instance.getHooks, _instance$autoResetSo = instance.autoResetSortBy, autoResetSortBy = _instance$autoResetSo === void 0 ? true : _instance$autoResetSo;
        ensurePluginOrder(plugins, ["useFilters", "useGlobalFilter", "useGroupBy", "usePivotColumns"], "useSortBy");
        var setSortBy = React2.useCallback(function(sortBy2) {
          dispatch({
            type: actions3.setSortBy,
            sortBy: sortBy2
          });
        }, [dispatch]);
        var toggleSortBy = React2.useCallback(function(columnId, desc, multi) {
          dispatch({
            type: actions3.toggleSortBy,
            columnId,
            desc,
            multi
          });
        }, [dispatch]);
        var getInstance = useGetLatest(instance);
        flatHeaders.forEach(function(column) {
          var accessor = column.accessor, defaultColumnCanSort = column.canSort, columnDisableSortBy = column.disableSortBy, id = column.id;
          var canSort = accessor ? getFirstDefined(columnDisableSortBy === true ? false : void 0, disableSortBy === true ? false : void 0, true) : getFirstDefined(defaultCanSort, defaultColumnCanSort, false);
          column.canSort = canSort;
          if (column.canSort) {
            column.toggleSortBy = function(desc, multi) {
              return toggleSortBy(column.id, desc, multi);
            };
            column.clearSortBy = function() {
              dispatch({
                type: actions3.clearSortBy,
                columnId: column.id
              });
            };
          }
          column.getSortByToggleProps = makePropGetter(getHooks().getSortByToggleProps, {
            instance: getInstance(),
            column
          });
          var columnSort = sortBy.find(function(d) {
            return d.id === id;
          });
          column.isSorted = !!columnSort;
          column.sortedIndex = sortBy.findIndex(function(d) {
            return d.id === id;
          });
          column.isSortedDesc = column.isSorted ? columnSort.desc : void 0;
        });
        var _React$useMemo = React2.useMemo(function() {
          if (manualSortBy || !sortBy.length) {
            return [rows, flatRows];
          }
          var sortedFlatRows2 = [];
          var availableSortBy = sortBy.filter(function(sort) {
            return allColumns2.find(function(col) {
              return col.id === sort.id;
            });
          });
          var sortData = function sortData2(rows2) {
            var sortedData = orderByFn(
              rows2,
              availableSortBy.map(function(sort) {
                var column = allColumns2.find(function(d) {
                  return d.id === sort.id;
                });
                if (!column) {
                  throw new Error("React-Table: Could not find a column with id: " + sort.id + " while sorting");
                }
                var sortType = column.sortType;
                var sortMethod = isFunction2(sortType) || (userSortTypes || {})[sortType] || sortTypes[sortType];
                if (!sortMethod) {
                  throw new Error("React-Table: Could not find a valid sortType of '" + sortType + "' for column '" + sort.id + "'.");
                }
                return function(a, b) {
                  return sortMethod(a, b, sort.id, sort.desc);
                };
              }),
              // Map the directions
              availableSortBy.map(function(sort) {
                var column = allColumns2.find(function(d) {
                  return d.id === sort.id;
                });
                if (column && column.sortInverted) {
                  return sort.desc;
                }
                return !sort.desc;
              })
            );
            sortedData.forEach(function(row) {
              sortedFlatRows2.push(row);
              if (!row.subRows || row.subRows.length === 0) {
                return;
              }
              row.subRows = sortData2(row.subRows);
            });
            return sortedData;
          };
          return [sortData(rows), sortedFlatRows2];
        }, [manualSortBy, sortBy, rows, flatRows, allColumns2, orderByFn, userSortTypes]), sortedRows = _React$useMemo[0], sortedFlatRows = _React$useMemo[1];
        var getAutoResetSortBy = useGetLatest(autoResetSortBy);
        useMountedLayoutEffect(function() {
          if (getAutoResetSortBy()) {
            dispatch({
              type: actions3.resetSortBy
            });
          }
        }, [manualSortBy ? null : data]);
        Object.assign(instance, {
          preSortedRows: rows,
          preSortedFlatRows: flatRows,
          sortedRows,
          sortedFlatRows,
          rows: sortedRows,
          flatRows: sortedFlatRows,
          setSortBy,
          toggleSortBy
        });
      }
      function defaultOrderByFn(arr, funcs, dirs) {
        return [].concat(arr).sort(function(rowA, rowB) {
          for (var i = 0; i < funcs.length; i += 1) {
            var sortFn = funcs[i];
            var desc = dirs[i] === false || dirs[i] === "desc";
            var sortInt = sortFn(rowA, rowB);
            if (sortInt !== 0) {
              return desc ? -sortInt : sortInt;
            }
          }
          return dirs[0] ? rowA.index - rowB.index : rowB.index - rowA.index;
        });
      }
      var pluginName = "usePagination";
      actions3.resetPage = "resetPage";
      actions3.gotoPage = "gotoPage";
      actions3.setPageSize = "setPageSize";
      var usePagination = function usePagination2(hooks) {
        hooks.stateReducers.push(reducer$6);
        hooks.useInstance.push(useInstance$6);
      };
      usePagination.pluginName = pluginName;
      function reducer$6(state, action, previousState, instance) {
        if (action.type === actions3.init) {
          return _extends({
            pageSize: 10,
            pageIndex: 0
          }, state);
        }
        if (action.type === actions3.resetPage) {
          return _extends({}, state, {
            pageIndex: instance.initialState.pageIndex || 0
          });
        }
        if (action.type === actions3.gotoPage) {
          var pageCount = instance.pageCount, page = instance.page;
          var newPageIndex = functionalUpdate(action.pageIndex, state.pageIndex);
          var canNavigate = false;
          if (newPageIndex > state.pageIndex) {
            canNavigate = pageCount === -1 ? page.length >= state.pageSize : newPageIndex < pageCount;
          } else if (newPageIndex < state.pageIndex) {
            canNavigate = newPageIndex > -1;
          }
          if (!canNavigate) {
            return state;
          }
          return _extends({}, state, {
            pageIndex: newPageIndex
          });
        }
        if (action.type === actions3.setPageSize) {
          var pageSize = action.pageSize;
          var topRowIndex = state.pageSize * state.pageIndex;
          var pageIndex = Math.floor(topRowIndex / pageSize);
          return _extends({}, state, {
            pageIndex,
            pageSize
          });
        }
      }
      function useInstance$6(instance) {
        var rows = instance.rows, _instance$autoResetPa = instance.autoResetPage, autoResetPage = _instance$autoResetPa === void 0 ? true : _instance$autoResetPa, _instance$manualExpan = instance.manualExpandedKey, manualExpandedKey = _instance$manualExpan === void 0 ? "expanded" : _instance$manualExpan, plugins = instance.plugins, userPageCount = instance.pageCount, _instance$paginateExp = instance.paginateExpandedRows, paginateExpandedRows = _instance$paginateExp === void 0 ? true : _instance$paginateExp, _instance$expandSubRo = instance.expandSubRows, expandSubRows = _instance$expandSubRo === void 0 ? true : _instance$expandSubRo, _instance$state = instance.state, pageSize = _instance$state.pageSize, pageIndex = _instance$state.pageIndex, expanded = _instance$state.expanded, globalFilter = _instance$state.globalFilter, filters = _instance$state.filters, groupBy = _instance$state.groupBy, sortBy = _instance$state.sortBy, dispatch = instance.dispatch, data = instance.data, manualPagination = instance.manualPagination;
        ensurePluginOrder(plugins, ["useGlobalFilter", "useFilters", "useGroupBy", "useSortBy", "useExpanded"], "usePagination");
        var getAutoResetPage = useGetLatest(autoResetPage);
        useMountedLayoutEffect(function() {
          if (getAutoResetPage()) {
            dispatch({
              type: actions3.resetPage
            });
          }
        }, [dispatch, manualPagination ? null : data, globalFilter, filters, groupBy, sortBy]);
        var pageCount = manualPagination ? userPageCount : Math.ceil(rows.length / pageSize);
        var pageOptions = React2.useMemo(function() {
          return pageCount > 0 ? [].concat(new Array(pageCount)).fill(null).map(function(d, i) {
            return i;
          }) : [];
        }, [pageCount]);
        var page = React2.useMemo(function() {
          var page2;
          if (manualPagination) {
            page2 = rows;
          } else {
            var pageStart = pageSize * pageIndex;
            var pageEnd = pageStart + pageSize;
            page2 = rows.slice(pageStart, pageEnd);
          }
          if (paginateExpandedRows) {
            return page2;
          }
          return expandRows(page2, {
            manualExpandedKey,
            expanded,
            expandSubRows
          });
        }, [expandSubRows, expanded, manualExpandedKey, manualPagination, pageIndex, pageSize, paginateExpandedRows, rows]);
        var canPreviousPage = pageIndex > 0;
        var canNextPage = pageCount === -1 ? page.length >= pageSize : pageIndex < pageCount - 1;
        var gotoPage = React2.useCallback(function(pageIndex2) {
          dispatch({
            type: actions3.gotoPage,
            pageIndex: pageIndex2
          });
        }, [dispatch]);
        var previousPage = React2.useCallback(function() {
          return gotoPage(function(old) {
            return old - 1;
          });
        }, [gotoPage]);
        var nextPage = React2.useCallback(function() {
          return gotoPage(function(old) {
            return old + 1;
          });
        }, [gotoPage]);
        var setPageSize = React2.useCallback(function(pageSize2) {
          dispatch({
            type: actions3.setPageSize,
            pageSize: pageSize2
          });
        }, [dispatch]);
        Object.assign(instance, {
          pageOptions,
          pageCount,
          page,
          canPreviousPage,
          canNextPage,
          gotoPage,
          previousPage,
          nextPage,
          setPageSize
        });
      }
      actions3.resetPivot = "resetPivot";
      actions3.togglePivot = "togglePivot";
      var _UNSTABLE_usePivotColumns = function _UNSTABLE_usePivotColumns2(hooks) {
        hooks.getPivotToggleProps = [defaultGetPivotToggleProps];
        hooks.stateReducers.push(reducer$7);
        hooks.useInstanceAfterData.push(useInstanceAfterData);
        hooks.allColumns.push(allColumns);
        hooks.accessValue.push(accessValue);
        hooks.materializedColumns.push(materializedColumns);
        hooks.materializedColumnsDeps.push(materializedColumnsDeps);
        hooks.visibleColumns.push(visibleColumns$1);
        hooks.visibleColumnsDeps.push(visibleColumnsDeps4);
        hooks.useInstance.push(useInstance$7);
        hooks.prepareRow.push(prepareRow$2);
      };
      _UNSTABLE_usePivotColumns.pluginName = "usePivotColumns";
      var defaultPivotColumns = [];
      var defaultGetPivotToggleProps = function defaultGetPivotToggleProps2(props, _ref) {
        var header3 = _ref.header;
        return [props, {
          onClick: header3.canPivot ? function(e) {
            e.persist();
            header3.togglePivot();
          } : void 0,
          style: {
            cursor: header3.canPivot ? "pointer" : void 0
          },
          title: "Toggle Pivot"
        }];
      };
      function reducer$7(state, action, previousState, instance) {
        if (action.type === actions3.init) {
          return _extends({
            pivotColumns: defaultPivotColumns
          }, state);
        }
        if (action.type === actions3.resetPivot) {
          return _extends({}, state, {
            pivotColumns: instance.initialState.pivotColumns || defaultPivotColumns
          });
        }
        if (action.type === actions3.togglePivot) {
          var columnId = action.columnId, setPivot = action.value;
          var resolvedPivot = typeof setPivot !== "undefined" ? setPivot : !state.pivotColumns.includes(columnId);
          if (resolvedPivot) {
            return _extends({}, state, {
              pivotColumns: [].concat(state.pivotColumns, [columnId])
            });
          }
          return _extends({}, state, {
            pivotColumns: state.pivotColumns.filter(function(d) {
              return d !== columnId;
            })
          });
        }
      }
      function useInstanceAfterData(instance) {
        instance.allColumns.forEach(function(column) {
          column.isPivotSource = instance.state.pivotColumns.includes(column.id);
        });
      }
      function allColumns(columns6, _ref2) {
        var instance = _ref2.instance;
        columns6.forEach(function(column) {
          column.isPivotSource = instance.state.pivotColumns.includes(column.id);
          column.uniqueValues = /* @__PURE__ */ new Set();
        });
        return columns6;
      }
      function accessValue(value, _ref3) {
        var column = _ref3.column;
        if (column.uniqueValues && typeof value !== "undefined") {
          column.uniqueValues.add(value);
        }
        return value;
      }
      function materializedColumns(materialized, _ref4) {
        var instance = _ref4.instance;
        var allColumns2 = instance.allColumns, state = instance.state;
        if (!state.pivotColumns.length || !state.groupBy || !state.groupBy.length) {
          return materialized;
        }
        var pivotColumns = state.pivotColumns.map(function(id) {
          return allColumns2.find(function(d) {
            return d.id === id;
          });
        }).filter(Boolean);
        var sourceColumns = allColumns2.filter(function(d) {
          return !d.isPivotSource && !state.groupBy.includes(d.id) && !state.pivotColumns.includes(d.id);
        });
        var buildPivotColumns = function buildPivotColumns2(depth, parent, pivotFilters) {
          if (depth === void 0) {
            depth = 0;
          }
          if (pivotFilters === void 0) {
            pivotFilters = [];
          }
          var pivotColumn = pivotColumns[depth];
          if (!pivotColumn) {
            return sourceColumns.map(function(sourceColumn) {
              return _extends({}, sourceColumn, {
                canPivot: false,
                isPivoted: true,
                parent,
                depth,
                id: "" + (parent ? parent.id + "." + sourceColumn.id : sourceColumn.id),
                accessor: function accessor(originalRow, i, row) {
                  if (pivotFilters.every(function(filter) {
                    return filter(row);
                  })) {
                    return row.values[sourceColumn.id];
                  }
                }
              });
            });
          }
          var uniqueValues = Array.from(pivotColumn.uniqueValues).sort();
          return uniqueValues.map(function(uniqueValue) {
            var columnGroup = _extends({}, pivotColumn, {
              Header: pivotColumn.PivotHeader || typeof pivotColumn.header === "string" ? pivotColumn.Header + ": " + uniqueValue : uniqueValue,
              isPivotGroup: true,
              parent,
              depth,
              id: parent ? parent.id + "." + pivotColumn.id + "." + uniqueValue : pivotColumn.id + "." + uniqueValue,
              pivotValue: uniqueValue
            });
            columnGroup.columns = buildPivotColumns2(depth + 1, columnGroup, [].concat(pivotFilters, [function(row) {
              return row.values[pivotColumn.id] === uniqueValue;
            }]));
            return columnGroup;
          });
        };
        var newMaterialized = flattenColumns(buildPivotColumns());
        return [].concat(materialized, newMaterialized);
      }
      function materializedColumnsDeps(deps, _ref5) {
        var _ref5$instance$state = _ref5.instance.state, pivotColumns = _ref5$instance$state.pivotColumns, groupBy = _ref5$instance$state.groupBy;
        return [].concat(deps, [pivotColumns, groupBy]);
      }
      function visibleColumns$1(visibleColumns5, _ref6) {
        var state = _ref6.instance.state;
        visibleColumns5 = visibleColumns5.filter(function(d) {
          return !d.isPivotSource;
        });
        if (state.pivotColumns.length && state.groupBy && state.groupBy.length) {
          visibleColumns5 = visibleColumns5.filter(function(column) {
            return column.isGrouped || column.isPivoted;
          });
        }
        return visibleColumns5;
      }
      function visibleColumnsDeps4(deps, _ref7) {
        var instance = _ref7.instance;
        return [].concat(deps, [instance.state.pivotColumns, instance.state.groupBy]);
      }
      function useInstance$7(instance) {
        var columns6 = instance.columns, allColumns2 = instance.allColumns, flatHeaders = instance.flatHeaders, getHooks = instance.getHooks, plugins = instance.plugins, dispatch = instance.dispatch, _instance$autoResetPi = instance.autoResetPivot, autoResetPivot = _instance$autoResetPi === void 0 ? true : _instance$autoResetPi, manaulPivot = instance.manaulPivot, disablePivot = instance.disablePivot, defaultCanPivot = instance.defaultCanPivot;
        ensurePluginOrder(plugins, ["useGroupBy"], "usePivotColumns");
        var getInstance = useGetLatest(instance);
        allColumns2.forEach(function(column) {
          var accessor = column.accessor, defaultColumnPivot = column.defaultPivot, columnDisablePivot = column.disablePivot;
          column.canPivot = accessor ? getFirstDefined(column.canPivot, columnDisablePivot === true ? false : void 0, disablePivot === true ? false : void 0, true) : getFirstDefined(column.canPivot, defaultColumnPivot, defaultCanPivot, false);
          if (column.canPivot) {
            column.togglePivot = function() {
              return instance.togglePivot(column.id);
            };
          }
          column.Aggregated = column.Aggregated || column.Cell;
        });
        var togglePivot = function togglePivot2(columnId, value) {
          dispatch({
            type: actions3.togglePivot,
            columnId,
            value
          });
        };
        flatHeaders.forEach(function(header3) {
          header3.getPivotToggleProps = makePropGetter(getHooks().getPivotToggleProps, {
            instance: getInstance(),
            header: header3
          });
        });
        var getAutoResetPivot = useGetLatest(autoResetPivot);
        useMountedLayoutEffect(function() {
          if (getAutoResetPivot()) {
            dispatch({
              type: actions3.resetPivot
            });
          }
        }, [dispatch, manaulPivot ? null : columns6]);
        Object.assign(instance, {
          togglePivot
        });
      }
      function prepareRow$2(row) {
        row.allCells.forEach(function(cell) {
          cell.isPivoted = cell.column.isPivoted;
        });
      }
      var pluginName$1 = "useRowSelect";
      actions3.resetSelectedRows = "resetSelectedRows";
      actions3.toggleAllRowsSelected = "toggleAllRowsSelected";
      actions3.toggleRowSelected = "toggleRowSelected";
      actions3.toggleAllPageRowsSelected = "toggleAllPageRowsSelected";
      var useRowSelect2 = function useRowSelect3(hooks) {
        hooks.getToggleRowSelectedProps = [defaultGetToggleRowSelectedProps];
        hooks.getToggleAllRowsSelectedProps = [defaultGetToggleAllRowsSelectedProps];
        hooks.getToggleAllPageRowsSelectedProps = [defaultGetToggleAllPageRowsSelectedProps];
        hooks.stateReducers.push(reducer$8);
        hooks.useInstance.push(useInstance$8);
        hooks.prepareRow.push(prepareRow$3);
      };
      useRowSelect2.pluginName = pluginName$1;
      var defaultGetToggleRowSelectedProps = function defaultGetToggleRowSelectedProps2(props, _ref) {
        var instance = _ref.instance, row = _ref.row;
        var _instance$manualRowSe = instance.manualRowSelectedKey, manualRowSelectedKey = _instance$manualRowSe === void 0 ? "isSelected" : _instance$manualRowSe;
        var checked = false;
        if (row.original && row.original[manualRowSelectedKey]) {
          checked = true;
        } else {
          checked = row.isSelected;
        }
        return [props, {
          onChange: function onChange(e) {
            row.toggleRowSelected(e.target.checked);
          },
          style: {
            cursor: "pointer"
          },
          checked,
          title: "Toggle Row Selected",
          indeterminate: row.isSomeSelected
        }];
      };
      var defaultGetToggleAllRowsSelectedProps = function defaultGetToggleAllRowsSelectedProps2(props, _ref2) {
        var instance = _ref2.instance;
        return [props, {
          onChange: function onChange(e) {
            instance.toggleAllRowsSelected(e.target.checked);
          },
          style: {
            cursor: "pointer"
          },
          checked: instance.isAllRowsSelected,
          title: "Toggle All Rows Selected",
          indeterminate: Boolean(!instance.isAllRowsSelected && Object.keys(instance.state.selectedRowIds).length)
        }];
      };
      var defaultGetToggleAllPageRowsSelectedProps = function defaultGetToggleAllPageRowsSelectedProps2(props, _ref3) {
        var instance = _ref3.instance;
        return [props, {
          onChange: function onChange(e) {
            instance.toggleAllPageRowsSelected(e.target.checked);
          },
          style: {
            cursor: "pointer"
          },
          checked: instance.isAllPageRowsSelected,
          title: "Toggle All Current Page Rows Selected",
          indeterminate: Boolean(!instance.isAllPageRowsSelected && instance.page.some(function(_ref4) {
            var id = _ref4.id;
            return instance.state.selectedRowIds[id];
          }))
        }];
      };
      function reducer$8(state, action, previousState, instance) {
        if (action.type === actions3.init) {
          return _extends({
            selectedRowIds: {}
          }, state);
        }
        if (action.type === actions3.resetSelectedRows) {
          return _extends({}, state, {
            selectedRowIds: instance.initialState.selectedRowIds || {}
          });
        }
        if (action.type === actions3.toggleAllRowsSelected) {
          var setSelected = action.value;
          var isAllRowsSelected = instance.isAllRowsSelected, rowsById = instance.rowsById, _instance$nonGroupedR = instance.nonGroupedRowsById, nonGroupedRowsById = _instance$nonGroupedR === void 0 ? rowsById : _instance$nonGroupedR;
          var selectAll = typeof setSelected !== "undefined" ? setSelected : !isAllRowsSelected;
          var selectedRowIds = Object.assign({}, state.selectedRowIds);
          if (selectAll) {
            Object.keys(nonGroupedRowsById).forEach(function(rowId) {
              selectedRowIds[rowId] = true;
            });
          } else {
            Object.keys(nonGroupedRowsById).forEach(function(rowId) {
              delete selectedRowIds[rowId];
            });
          }
          return _extends({}, state, {
            selectedRowIds
          });
        }
        if (action.type === actions3.toggleRowSelected) {
          var id = action.id, _setSelected = action.value;
          var _rowsById = instance.rowsById, _instance$selectSubRo = instance.selectSubRows, selectSubRows = _instance$selectSubRo === void 0 ? true : _instance$selectSubRo, getSubRows = instance.getSubRows;
          var isSelected = state.selectedRowIds[id];
          var shouldExist = typeof _setSelected !== "undefined" ? _setSelected : !isSelected;
          if (isSelected === shouldExist) {
            return state;
          }
          var newSelectedRowIds = _extends({}, state.selectedRowIds);
          var handleRowById = function handleRowById2(id2) {
            var row = _rowsById[id2];
            if (row) {
              if (!row.isGrouped) {
                if (shouldExist) {
                  newSelectedRowIds[id2] = true;
                } else {
                  delete newSelectedRowIds[id2];
                }
              }
              if (selectSubRows && getSubRows(row)) {
                return getSubRows(row).forEach(function(row2) {
                  return handleRowById2(row2.id);
                });
              }
            }
          };
          handleRowById(id);
          return _extends({}, state, {
            selectedRowIds: newSelectedRowIds
          });
        }
        if (action.type === actions3.toggleAllPageRowsSelected) {
          var _setSelected2 = action.value;
          var page = instance.page, _rowsById2 = instance.rowsById, _instance$selectSubRo2 = instance.selectSubRows, _selectSubRows = _instance$selectSubRo2 === void 0 ? true : _instance$selectSubRo2, isAllPageRowsSelected = instance.isAllPageRowsSelected, _getSubRows = instance.getSubRows;
          var _selectAll = typeof _setSelected2 !== "undefined" ? _setSelected2 : !isAllPageRowsSelected;
          var _newSelectedRowIds = _extends({}, state.selectedRowIds);
          var _handleRowById = function _handleRowById2(id2) {
            var row = _rowsById2[id2];
            if (!row.isGrouped) {
              if (_selectAll) {
                _newSelectedRowIds[id2] = true;
              } else {
                delete _newSelectedRowIds[id2];
              }
            }
            if (_selectSubRows && _getSubRows(row)) {
              return _getSubRows(row).forEach(function(row2) {
                return _handleRowById2(row2.id);
              });
            }
          };
          page.forEach(function(row) {
            return _handleRowById(row.id);
          });
          return _extends({}, state, {
            selectedRowIds: _newSelectedRowIds
          });
        }
        return state;
      }
      function useInstance$8(instance) {
        var data = instance.data, rows = instance.rows, getHooks = instance.getHooks, plugins = instance.plugins, rowsById = instance.rowsById, _instance$nonGroupedR2 = instance.nonGroupedRowsById, nonGroupedRowsById = _instance$nonGroupedR2 === void 0 ? rowsById : _instance$nonGroupedR2, _instance$autoResetSe = instance.autoResetSelectedRows, autoResetSelectedRows = _instance$autoResetSe === void 0 ? true : _instance$autoResetSe, selectedRowIds = instance.state.selectedRowIds, _instance$selectSubRo3 = instance.selectSubRows, selectSubRows = _instance$selectSubRo3 === void 0 ? true : _instance$selectSubRo3, dispatch = instance.dispatch, page = instance.page, getSubRows = instance.getSubRows;
        ensurePluginOrder(plugins, ["useFilters", "useGroupBy", "useSortBy", "useExpanded", "usePagination"], "useRowSelect");
        var selectedFlatRows = React2.useMemo(function() {
          var selectedFlatRows2 = [];
          rows.forEach(function(row) {
            var isSelected = selectSubRows ? getRowIsSelected(row, selectedRowIds, getSubRows) : !!selectedRowIds[row.id];
            row.isSelected = !!isSelected;
            row.isSomeSelected = isSelected === null;
            if (isSelected) {
              selectedFlatRows2.push(row);
            }
          });
          return selectedFlatRows2;
        }, [rows, selectSubRows, selectedRowIds, getSubRows]);
        var isAllRowsSelected = Boolean(Object.keys(nonGroupedRowsById).length && Object.keys(selectedRowIds).length);
        var isAllPageRowsSelected = isAllRowsSelected;
        if (isAllRowsSelected) {
          if (Object.keys(nonGroupedRowsById).some(function(id) {
            return !selectedRowIds[id];
          })) {
            isAllRowsSelected = false;
          }
        }
        if (!isAllRowsSelected) {
          if (page && page.length && page.some(function(_ref5) {
            var id = _ref5.id;
            return !selectedRowIds[id];
          })) {
            isAllPageRowsSelected = false;
          }
        }
        var getAutoResetSelectedRows = useGetLatest(autoResetSelectedRows);
        useMountedLayoutEffect(function() {
          if (getAutoResetSelectedRows()) {
            dispatch({
              type: actions3.resetSelectedRows
            });
          }
        }, [dispatch, data]);
        var toggleAllRowsSelected = React2.useCallback(function(value) {
          return dispatch({
            type: actions3.toggleAllRowsSelected,
            value
          });
        }, [dispatch]);
        var toggleAllPageRowsSelected = React2.useCallback(function(value) {
          return dispatch({
            type: actions3.toggleAllPageRowsSelected,
            value
          });
        }, [dispatch]);
        var toggleRowSelected = React2.useCallback(function(id, value) {
          return dispatch({
            type: actions3.toggleRowSelected,
            id,
            value
          });
        }, [dispatch]);
        var getInstance = useGetLatest(instance);
        var getToggleAllRowsSelectedProps = makePropGetter(getHooks().getToggleAllRowsSelectedProps, {
          instance: getInstance()
        });
        var getToggleAllPageRowsSelectedProps = makePropGetter(getHooks().getToggleAllPageRowsSelectedProps, {
          instance: getInstance()
        });
        Object.assign(instance, {
          selectedFlatRows,
          isAllRowsSelected,
          isAllPageRowsSelected,
          toggleRowSelected,
          toggleAllRowsSelected,
          getToggleAllRowsSelectedProps,
          getToggleAllPageRowsSelectedProps,
          toggleAllPageRowsSelected
        });
      }
      function prepareRow$3(row, _ref6) {
        var instance = _ref6.instance;
        row.toggleRowSelected = function(set4) {
          return instance.toggleRowSelected(row.id, set4);
        };
        row.getToggleRowSelectedProps = makePropGetter(instance.getHooks().getToggleRowSelectedProps, {
          instance,
          row
        });
      }
      function getRowIsSelected(row, selectedRowIds, getSubRows) {
        if (selectedRowIds[row.id]) {
          return true;
        }
        var subRows = getSubRows(row);
        if (subRows && subRows.length) {
          var allChildrenSelected = true;
          var someSelected = false;
          subRows.forEach(function(subRow) {
            if (someSelected && !allChildrenSelected) {
              return;
            }
            if (getRowIsSelected(subRow, selectedRowIds, getSubRows)) {
              someSelected = true;
            } else {
              allChildrenSelected = false;
            }
          });
          return allChildrenSelected ? true : someSelected ? null : false;
        }
        return false;
      }
      var defaultInitialRowStateAccessor = function defaultInitialRowStateAccessor2(row) {
        return {};
      };
      var defaultInitialCellStateAccessor = function defaultInitialCellStateAccessor2(cell) {
        return {};
      };
      actions3.setRowState = "setRowState";
      actions3.setCellState = "setCellState";
      actions3.resetRowState = "resetRowState";
      var useRowState = function useRowState2(hooks) {
        hooks.stateReducers.push(reducer$9);
        hooks.useInstance.push(useInstance$9);
        hooks.prepareRow.push(prepareRow$4);
      };
      useRowState.pluginName = "useRowState";
      function reducer$9(state, action, previousState, instance) {
        var _instance$initialRowS = instance.initialRowStateAccessor, initialRowStateAccessor = _instance$initialRowS === void 0 ? defaultInitialRowStateAccessor : _instance$initialRowS, _instance$initialCell = instance.initialCellStateAccessor, initialCellStateAccessor = _instance$initialCell === void 0 ? defaultInitialCellStateAccessor : _instance$initialCell, rowsById = instance.rowsById;
        if (action.type === actions3.init) {
          return _extends({
            rowState: {}
          }, state);
        }
        if (action.type === actions3.resetRowState) {
          return _extends({}, state, {
            rowState: instance.initialState.rowState || {}
          });
        }
        if (action.type === actions3.setRowState) {
          var _extends2;
          var rowId = action.rowId, value = action.value;
          var oldRowState = typeof state.rowState[rowId] !== "undefined" ? state.rowState[rowId] : initialRowStateAccessor(rowsById[rowId]);
          return _extends({}, state, {
            rowState: _extends({}, state.rowState, (_extends2 = {}, _extends2[rowId] = functionalUpdate(value, oldRowState), _extends2))
          });
        }
        if (action.type === actions3.setCellState) {
          var _oldRowState$cellStat, _rowsById$_rowId, _rowsById$_rowId$cell, _extends3, _extends4;
          var _rowId = action.rowId, columnId = action.columnId, _value = action.value;
          var _oldRowState = typeof state.rowState[_rowId] !== "undefined" ? state.rowState[_rowId] : initialRowStateAccessor(rowsById[_rowId]);
          var oldCellState = typeof (_oldRowState == null ? void 0 : (_oldRowState$cellStat = _oldRowState.cellState) == null ? void 0 : _oldRowState$cellStat[columnId]) !== "undefined" ? _oldRowState.cellState[columnId] : initialCellStateAccessor((_rowsById$_rowId = rowsById[_rowId]) == null ? void 0 : (_rowsById$_rowId$cell = _rowsById$_rowId.cells) == null ? void 0 : _rowsById$_rowId$cell.find(function(cell) {
            return cell.column.id === columnId;
          }));
          return _extends({}, state, {
            rowState: _extends({}, state.rowState, (_extends4 = {}, _extends4[_rowId] = _extends({}, _oldRowState, {
              cellState: _extends({}, _oldRowState.cellState || {}, (_extends3 = {}, _extends3[columnId] = functionalUpdate(_value, oldCellState), _extends3))
            }), _extends4))
          });
        }
      }
      function useInstance$9(instance) {
        var _instance$autoResetRo = instance.autoResetRowState, autoResetRowState = _instance$autoResetRo === void 0 ? true : _instance$autoResetRo, data = instance.data, dispatch = instance.dispatch;
        var setRowState = React2.useCallback(function(rowId, value) {
          return dispatch({
            type: actions3.setRowState,
            rowId,
            value
          });
        }, [dispatch]);
        var setCellState = React2.useCallback(function(rowId, columnId, value) {
          return dispatch({
            type: actions3.setCellState,
            rowId,
            columnId,
            value
          });
        }, [dispatch]);
        var getAutoResetRowState = useGetLatest(autoResetRowState);
        useMountedLayoutEffect(function() {
          if (getAutoResetRowState()) {
            dispatch({
              type: actions3.resetRowState
            });
          }
        }, [data]);
        Object.assign(instance, {
          setRowState,
          setCellState
        });
      }
      function prepareRow$4(row, _ref) {
        var instance = _ref.instance;
        var _instance$initialRowS2 = instance.initialRowStateAccessor, initialRowStateAccessor = _instance$initialRowS2 === void 0 ? defaultInitialRowStateAccessor : _instance$initialRowS2, _instance$initialCell2 = instance.initialCellStateAccessor, initialCellStateAccessor = _instance$initialCell2 === void 0 ? defaultInitialCellStateAccessor : _instance$initialCell2, rowState = instance.state.rowState;
        if (row) {
          row.state = typeof rowState[row.id] !== "undefined" ? rowState[row.id] : initialRowStateAccessor(row);
          row.setState = function(updater) {
            return instance.setRowState(row.id, updater);
          };
          row.cells.forEach(function(cell) {
            if (!row.state.cellState) {
              row.state.cellState = {};
            }
            cell.state = typeof row.state.cellState[cell.column.id] !== "undefined" ? row.state.cellState[cell.column.id] : initialCellStateAccessor(cell);
            cell.setState = function(updater) {
              return instance.setCellState(row.id, cell.column.id, updater);
            };
          });
        }
      }
      actions3.resetColumnOrder = "resetColumnOrder";
      actions3.setColumnOrder = "setColumnOrder";
      var useColumnOrder2 = function useColumnOrder3(hooks) {
        hooks.stateReducers.push(reducer$a);
        hooks.visibleColumnsDeps.push(function(deps, _ref) {
          var instance = _ref.instance;
          return [].concat(deps, [instance.state.columnOrder]);
        });
        hooks.visibleColumns.push(visibleColumns$2);
        hooks.useInstance.push(useInstance$a);
      };
      useColumnOrder2.pluginName = "useColumnOrder";
      function reducer$a(state, action, previousState, instance) {
        if (action.type === actions3.init) {
          return _extends({
            columnOrder: []
          }, state);
        }
        if (action.type === actions3.resetColumnOrder) {
          return _extends({}, state, {
            columnOrder: instance.initialState.columnOrder || []
          });
        }
        if (action.type === actions3.setColumnOrder) {
          return _extends({}, state, {
            columnOrder: functionalUpdate(action.columnOrder, state.columnOrder)
          });
        }
      }
      function visibleColumns$2(columns6, _ref2) {
        var columnOrder = _ref2.instance.state.columnOrder;
        if (!columnOrder || !columnOrder.length) {
          return columns6;
        }
        var columnOrderCopy = [].concat(columnOrder);
        var columnsCopy = [].concat(columns6);
        var columnsInOrder = [];
        var _loop = function _loop2() {
          var targetColumnId = columnOrderCopy.shift();
          var foundIndex = columnsCopy.findIndex(function(d) {
            return d.id === targetColumnId;
          });
          if (foundIndex > -1) {
            columnsInOrder.push(columnsCopy.splice(foundIndex, 1)[0]);
          }
        };
        while (columnsCopy.length && columnOrderCopy.length) {
          _loop();
        }
        return [].concat(columnsInOrder, columnsCopy);
      }
      function useInstance$a(instance) {
        var dispatch = instance.dispatch;
        instance.setColumnOrder = React2.useCallback(function(columnOrder) {
          return dispatch({
            type: actions3.setColumnOrder,
            columnOrder
          });
        }, [dispatch]);
      }
      defaultColumn.canResize = true;
      actions3.columnStartResizing = "columnStartResizing";
      actions3.columnResizing = "columnResizing";
      actions3.columnDoneResizing = "columnDoneResizing";
      actions3.resetResize = "resetResize";
      var useResizeColumns2 = function useResizeColumns3(hooks) {
        hooks.getResizerProps = [defaultGetResizerProps];
        hooks.getHeaderProps.push({
          style: {
            position: "relative"
          }
        });
        hooks.stateReducers.push(reducer$b);
        hooks.useInstance.push(useInstance$b);
        hooks.useInstanceBeforeDimensions.push(useInstanceBeforeDimensions$1);
      };
      var defaultGetResizerProps = function defaultGetResizerProps2(props, _ref) {
        var instance = _ref.instance, header3 = _ref.header;
        var dispatch = instance.dispatch;
        var onResizeStart = function onResizeStart2(e, header4) {
          var isTouchEvent2 = false;
          if (e.type === "touchstart") {
            if (e.touches && e.touches.length > 1) {
              return;
            }
            isTouchEvent2 = true;
          }
          var headersToResize = getLeafHeaders2(header4);
          var headerIdWidths = headersToResize.map(function(d) {
            return [d.id, d.totalWidth];
          });
          var clientX = isTouchEvent2 ? Math.round(e.touches[0].clientX) : e.clientX;
          var raf;
          var mostRecentClientX;
          var dispatchEnd = function dispatchEnd2() {
            window.cancelAnimationFrame(raf);
            raf = null;
            dispatch({
              type: actions3.columnDoneResizing
            });
          };
          var dispatchMove = function dispatchMove2() {
            window.cancelAnimationFrame(raf);
            raf = null;
            dispatch({
              type: actions3.columnResizing,
              clientX: mostRecentClientX
            });
          };
          var scheduleDispatchMoveOnNextAnimationFrame = function scheduleDispatchMoveOnNextAnimationFrame2(clientXPos) {
            mostRecentClientX = clientXPos;
            if (!raf) {
              raf = window.requestAnimationFrame(dispatchMove);
            }
          };
          var handlersAndEvents = {
            mouse: {
              moveEvent: "mousemove",
              moveHandler: function moveHandler(e2) {
                return scheduleDispatchMoveOnNextAnimationFrame(e2.clientX);
              },
              upEvent: "mouseup",
              upHandler: function upHandler(e2) {
                document.removeEventListener("mousemove", handlersAndEvents.mouse.moveHandler);
                document.removeEventListener("mouseup", handlersAndEvents.mouse.upHandler);
                dispatchEnd();
              }
            },
            touch: {
              moveEvent: "touchmove",
              moveHandler: function moveHandler(e2) {
                if (e2.cancelable) {
                  e2.preventDefault();
                  e2.stopPropagation();
                }
                scheduleDispatchMoveOnNextAnimationFrame(e2.touches[0].clientX);
                return false;
              },
              upEvent: "touchend",
              upHandler: function upHandler(e2) {
                document.removeEventListener(handlersAndEvents.touch.moveEvent, handlersAndEvents.touch.moveHandler);
                document.removeEventListener(handlersAndEvents.touch.upEvent, handlersAndEvents.touch.moveHandler);
                dispatchEnd();
              }
            }
          };
          var events = isTouchEvent2 ? handlersAndEvents.touch : handlersAndEvents.mouse;
          var passiveIfSupported = passiveEventSupported() ? {
            passive: false
          } : false;
          document.addEventListener(events.moveEvent, events.moveHandler, passiveIfSupported);
          document.addEventListener(events.upEvent, events.upHandler, passiveIfSupported);
          dispatch({
            type: actions3.columnStartResizing,
            columnId: header4.id,
            columnWidth: header4.totalWidth,
            headerIdWidths,
            clientX
          });
        };
        return [props, {
          onMouseDown: function onMouseDown(e) {
            return e.persist() || onResizeStart(e, header3);
          },
          onTouchStart: function onTouchStart(e) {
            return e.persist() || onResizeStart(e, header3);
          },
          style: {
            cursor: "col-resize"
          },
          draggable: false,
          role: "separator"
        }];
      };
      useResizeColumns2.pluginName = "useResizeColumns";
      function reducer$b(state, action) {
        if (action.type === actions3.init) {
          return _extends({
            columnResizing: {
              columnWidths: {}
            }
          }, state);
        }
        if (action.type === actions3.resetResize) {
          return _extends({}, state, {
            columnResizing: {
              columnWidths: {}
            }
          });
        }
        if (action.type === actions3.columnStartResizing) {
          var clientX = action.clientX, columnId = action.columnId, columnWidth = action.columnWidth, headerIdWidths = action.headerIdWidths;
          return _extends({}, state, {
            columnResizing: _extends({}, state.columnResizing, {
              startX: clientX,
              headerIdWidths,
              columnWidth,
              isResizingColumn: columnId
            })
          });
        }
        if (action.type === actions3.columnResizing) {
          var _clientX = action.clientX;
          var _state$columnResizing = state.columnResizing, startX = _state$columnResizing.startX, _columnWidth = _state$columnResizing.columnWidth, _state$columnResizing2 = _state$columnResizing.headerIdWidths, _headerIdWidths = _state$columnResizing2 === void 0 ? [] : _state$columnResizing2;
          var deltaX = _clientX - startX;
          var percentageDeltaX = deltaX / _columnWidth;
          var newColumnWidths = {};
          _headerIdWidths.forEach(function(_ref2) {
            var headerId = _ref2[0], headerWidth = _ref2[1];
            newColumnWidths[headerId] = Math.max(headerWidth + headerWidth * percentageDeltaX, 0);
          });
          return _extends({}, state, {
            columnResizing: _extends({}, state.columnResizing, {
              columnWidths: _extends({}, state.columnResizing.columnWidths, {}, newColumnWidths)
            })
          });
        }
        if (action.type === actions3.columnDoneResizing) {
          return _extends({}, state, {
            columnResizing: _extends({}, state.columnResizing, {
              startX: null,
              isResizingColumn: null
            })
          });
        }
      }
      var useInstanceBeforeDimensions$1 = function useInstanceBeforeDimensions2(instance) {
        var flatHeaders = instance.flatHeaders, disableResizing = instance.disableResizing, getHooks = instance.getHooks, columnResizing = instance.state.columnResizing;
        var getInstance = useGetLatest(instance);
        flatHeaders.forEach(function(header3) {
          var canResize = getFirstDefined(header3.disableResizing === true ? false : void 0, disableResizing === true ? false : void 0, true);
          header3.canResize = canResize;
          header3.width = columnResizing.columnWidths[header3.id] || header3.originalWidth || header3.width;
          header3.isResizing = columnResizing.isResizingColumn === header3.id;
          if (canResize) {
            header3.getResizerProps = makePropGetter(getHooks().getResizerProps, {
              instance: getInstance(),
              header: header3
            });
          }
        });
      };
      function useInstance$b(instance) {
        var plugins = instance.plugins, dispatch = instance.dispatch, _instance$autoResetRe = instance.autoResetResize, autoResetResize = _instance$autoResetRe === void 0 ? true : _instance$autoResetRe, columns6 = instance.columns;
        ensurePluginOrder(plugins, ["useAbsoluteLayout"], "useResizeColumns");
        var getAutoResetResize = useGetLatest(autoResetResize);
        useMountedLayoutEffect(function() {
          if (getAutoResetResize()) {
            dispatch({
              type: actions3.resetResize
            });
          }
        }, [columns6]);
        var resetResizing = React2.useCallback(function() {
          return dispatch({
            type: actions3.resetResize
          });
        }, [dispatch]);
        Object.assign(instance, {
          resetResizing
        });
      }
      function getLeafHeaders2(header3) {
        var leafHeaders = [];
        var recurseHeader = function recurseHeader2(header4) {
          if (header4.columns && header4.columns.length) {
            header4.columns.map(recurseHeader2);
          }
          leafHeaders.push(header4);
        };
        recurseHeader(header3);
        return leafHeaders;
      }
      var cellStyles = {
        position: "absolute",
        top: 0
      };
      var useAbsoluteLayout = function useAbsoluteLayout2(hooks) {
        hooks.getTableBodyProps.push(getRowStyles);
        hooks.getRowProps.push(getRowStyles);
        hooks.getHeaderGroupProps.push(getRowStyles);
        hooks.getFooterGroupProps.push(getRowStyles);
        hooks.getHeaderProps.push(function(props, _ref) {
          var column = _ref.column;
          return [props, {
            style: _extends({}, cellStyles, {
              left: column.totalLeft + "px",
              width: column.totalWidth + "px"
            })
          }];
        });
        hooks.getCellProps.push(function(props, _ref2) {
          var cell = _ref2.cell;
          return [props, {
            style: _extends({}, cellStyles, {
              left: cell.column.totalLeft + "px",
              width: cell.column.totalWidth + "px"
            })
          }];
        });
        hooks.getFooterProps.push(function(props, _ref3) {
          var column = _ref3.column;
          return [props, {
            style: _extends({}, cellStyles, {
              left: column.totalLeft + "px",
              width: column.totalWidth + "px"
            })
          }];
        });
      };
      useAbsoluteLayout.pluginName = "useAbsoluteLayout";
      var getRowStyles = function getRowStyles2(props, _ref4) {
        var instance = _ref4.instance;
        return [props, {
          style: {
            position: "relative",
            width: instance.totalColumnsWidth + "px"
          }
        }];
      };
      var cellStyles$1 = {
        display: "inline-block",
        boxSizing: "border-box"
      };
      var getRowStyles$1 = function getRowStyles2(props, _ref) {
        var instance = _ref.instance;
        return [props, {
          style: {
            display: "flex",
            width: instance.totalColumnsWidth + "px"
          }
        }];
      };
      var useBlockLayout = function useBlockLayout2(hooks) {
        hooks.getRowProps.push(getRowStyles$1);
        hooks.getHeaderGroupProps.push(getRowStyles$1);
        hooks.getFooterGroupProps.push(getRowStyles$1);
        hooks.getHeaderProps.push(function(props, _ref2) {
          var column = _ref2.column;
          return [props, {
            style: _extends({}, cellStyles$1, {
              width: column.totalWidth + "px"
            })
          }];
        });
        hooks.getCellProps.push(function(props, _ref3) {
          var cell = _ref3.cell;
          return [props, {
            style: _extends({}, cellStyles$1, {
              width: cell.column.totalWidth + "px"
            })
          }];
        });
        hooks.getFooterProps.push(function(props, _ref4) {
          var column = _ref4.column;
          return [props, {
            style: _extends({}, cellStyles$1, {
              width: column.totalWidth + "px"
            })
          }];
        });
      };
      useBlockLayout.pluginName = "useBlockLayout";
      function useFlexLayout(hooks) {
        hooks.getTableProps.push(getTableProps);
        hooks.getRowProps.push(getRowStyles$2);
        hooks.getHeaderGroupProps.push(getRowStyles$2);
        hooks.getFooterGroupProps.push(getRowStyles$2);
        hooks.getHeaderProps.push(getHeaderProps3);
        hooks.getCellProps.push(getCellProps3);
        hooks.getFooterProps.push(getFooterProps);
      }
      useFlexLayout.pluginName = "useFlexLayout";
      var getTableProps = function getTableProps2(props, _ref) {
        var instance = _ref.instance;
        return [props, {
          style: {
            minWidth: instance.totalColumnsMinWidth + "px"
          }
        }];
      };
      var getRowStyles$2 = function getRowStyles2(props, _ref2) {
        var instance = _ref2.instance;
        return [props, {
          style: {
            display: "flex",
            flex: "1 0 auto",
            minWidth: instance.totalColumnsMinWidth + "px"
          }
        }];
      };
      var getHeaderProps3 = function getHeaderProps4(props, _ref3) {
        var column = _ref3.column;
        return [props, {
          style: {
            boxSizing: "border-box",
            flex: column.totalFlexWidth ? column.totalFlexWidth + " 0 auto" : void 0,
            minWidth: column.totalMinWidth + "px",
            width: column.totalWidth + "px"
          }
        }];
      };
      var getCellProps3 = function getCellProps4(props, _ref4) {
        var cell = _ref4.cell;
        return [props, {
          style: {
            boxSizing: "border-box",
            flex: cell.column.totalFlexWidth + " 0 auto",
            minWidth: cell.column.totalMinWidth + "px",
            width: cell.column.totalWidth + "px"
          }
        }];
      };
      var getFooterProps = function getFooterProps2(props, _ref5) {
        var column = _ref5.column;
        return [props, {
          style: {
            boxSizing: "border-box",
            flex: column.totalFlexWidth ? column.totalFlexWidth + " 0 auto" : void 0,
            minWidth: column.totalMinWidth + "px",
            width: column.totalWidth + "px"
          }
        }];
      };
      actions3.columnStartResizing = "columnStartResizing";
      actions3.columnResizing = "columnResizing";
      actions3.columnDoneResizing = "columnDoneResizing";
      actions3.resetResize = "resetResize";
      function useGridLayout(hooks) {
        hooks.stateReducers.push(reducer$c);
        hooks.getTableProps.push(getTableProps$1);
        hooks.getHeaderProps.push(getHeaderProps$1);
        hooks.getRowProps.push(getRowProps3);
      }
      useGridLayout.pluginName = "useGridLayout";
      var getTableProps$1 = function getTableProps2(props, _ref) {
        var instance = _ref.instance;
        var gridTemplateColumns = instance.visibleColumns.map(function(column) {
          var _instance$state$colum;
          if (instance.state.gridLayout.columnWidths[column.id]) return instance.state.gridLayout.columnWidths[column.id] + "px";
          if ((_instance$state$colum = instance.state.columnResizing) == null ? void 0 : _instance$state$colum.isResizingColumn) return instance.state.gridLayout.startWidths[column.id] + "px";
          if (typeof column.width === "number") return column.width + "px";
          return column.width;
        });
        return [props, {
          style: {
            display: "grid",
            gridTemplateColumns: gridTemplateColumns.join(" ")
          }
        }];
      };
      var getHeaderProps$1 = function getHeaderProps4(props, _ref2) {
        var column = _ref2.column;
        return [props, {
          id: "header-cell-" + column.id,
          style: {
            position: "sticky",
            //enables a scroll wrapper to be placed around the table and have sticky headers
            gridColumn: "span " + column.totalVisibleHeaderCount
          }
        }];
      };
      var getRowProps3 = function getRowProps4(props, _ref3) {
        var row = _ref3.row;
        if (row.isExpanded) {
          return [props, {
            style: {
              gridColumn: "1 / " + (row.cells.length + 1)
            }
          }];
        }
        return [props, {}];
      };
      function reducer$c(state, action, previousState, instance) {
        if (action.type === actions3.init) {
          return _extends({
            gridLayout: {
              columnWidths: {}
            }
          }, state);
        }
        if (action.type === actions3.resetResize) {
          return _extends({}, state, {
            gridLayout: {
              columnWidths: {}
            }
          });
        }
        if (action.type === actions3.columnStartResizing) {
          var columnId = action.columnId, headerIdWidths = action.headerIdWidths;
          var columnWidth = getElementWidth(columnId);
          if (columnWidth !== void 0) {
            var startWidths = instance.visibleColumns.reduce(function(acc, column) {
              var _extends2;
              return _extends({}, acc, (_extends2 = {}, _extends2[column.id] = getElementWidth(column.id), _extends2));
            }, {});
            var minWidths = instance.visibleColumns.reduce(function(acc, column) {
              var _extends3;
              return _extends({}, acc, (_extends3 = {}, _extends3[column.id] = column.minWidth, _extends3));
            }, {});
            var maxWidths = instance.visibleColumns.reduce(function(acc, column) {
              var _extends4;
              return _extends({}, acc, (_extends4 = {}, _extends4[column.id] = column.maxWidth, _extends4));
            }, {});
            var headerIdGridWidths = headerIdWidths.map(function(_ref4) {
              var headerId = _ref4[0];
              return [headerId, getElementWidth(headerId)];
            });
            return _extends({}, state, {
              gridLayout: _extends({}, state.gridLayout, {
                startWidths,
                minWidths,
                maxWidths,
                headerIdGridWidths,
                columnWidth
              })
            });
          } else {
            return state;
          }
        }
        if (action.type === actions3.columnResizing) {
          var clientX = action.clientX;
          var startX = state.columnResizing.startX;
          var _state$gridLayout = state.gridLayout, _columnWidth = _state$gridLayout.columnWidth, _minWidths = _state$gridLayout.minWidths, _maxWidths = _state$gridLayout.maxWidths, _state$gridLayout$hea = _state$gridLayout.headerIdGridWidths, _headerIdGridWidths = _state$gridLayout$hea === void 0 ? [] : _state$gridLayout$hea;
          var deltaX = clientX - startX;
          var percentageDeltaX = deltaX / _columnWidth;
          var newColumnWidths = {};
          _headerIdGridWidths.forEach(function(_ref5) {
            var headerId = _ref5[0], headerWidth = _ref5[1];
            newColumnWidths[headerId] = Math.min(Math.max(_minWidths[headerId], headerWidth + headerWidth * percentageDeltaX), _maxWidths[headerId]);
          });
          return _extends({}, state, {
            gridLayout: _extends({}, state.gridLayout, {
              columnWidths: _extends({}, state.gridLayout.columnWidths, {}, newColumnWidths)
            })
          });
        }
        if (action.type === actions3.columnDoneResizing) {
          return _extends({}, state, {
            gridLayout: _extends({}, state.gridLayout, {
              startWidths: {},
              minWidths: {},
              maxWidths: {}
            })
          });
        }
      }
      function getElementWidth(columnId) {
        var _document$getElementB;
        var width = (_document$getElementB = document.getElementById("header-cell-" + columnId)) == null ? void 0 : _document$getElementB.offsetWidth;
        if (width !== void 0) {
          return width;
        }
      }
      exports2._UNSTABLE_usePivotColumns = _UNSTABLE_usePivotColumns;
      exports2.actions = actions3;
      exports2.defaultColumn = defaultColumn;
      exports2.defaultGroupByFn = defaultGroupByFn;
      exports2.defaultOrderByFn = defaultOrderByFn;
      exports2.defaultRenderer = defaultRenderer;
      exports2.emptyRenderer = emptyRenderer;
      exports2.ensurePluginOrder = ensurePluginOrder;
      exports2.flexRender = flexRender;
      exports2.functionalUpdate = functionalUpdate;
      exports2.loopHooks = loopHooks;
      exports2.makePropGetter = makePropGetter;
      exports2.makeRenderer = makeRenderer2;
      exports2.reduceHooks = reduceHooks;
      exports2.safeUseLayoutEffect = safeUseLayoutEffect;
      exports2.useAbsoluteLayout = useAbsoluteLayout;
      exports2.useAsyncDebounce = useAsyncDebounce;
      exports2.useBlockLayout = useBlockLayout;
      exports2.useColumnOrder = useColumnOrder2;
      exports2.useExpanded = useExpanded2;
      exports2.useFilters = useFilters2;
      exports2.useFlexLayout = useFlexLayout;
      exports2.useGetLatest = useGetLatest;
      exports2.useGlobalFilter = useGlobalFilter2;
      exports2.useGridLayout = useGridLayout;
      exports2.useGroupBy = useGroupBy2;
      exports2.useMountedLayoutEffect = useMountedLayoutEffect;
      exports2.usePagination = usePagination;
      exports2.useResizeColumns = useResizeColumns2;
      exports2.useRowSelect = useRowSelect2;
      exports2.useRowState = useRowState;
      exports2.useSortBy = useSortBy2;
      exports2.useTable = useTable2;
      Object.defineProperty(exports2, "__esModule", { value: true });
    });
  }
});

// node_modules/react-table/index.js
var require_react_table = __commonJS({
  "node_modules/react-table/index.js"(exports, module) {
    if (false) {
      module.exports = null;
    } else {
      module.exports = require_react_table_development();
    }
  }
});

// node_modules/@ui5/webcomponents-react/dist/components/AnalyticalTable/pluginHooks/AnalyticalTableHooks.js
var AnalyticalTableHooks_exports = {};
__export(AnalyticalTableHooks_exports, {
  useAnnounceEmptyCells: () => useAnnounceEmptyCells,
  useIndeterminateRowSelection: () => useIndeterminateRowSelection,
  useManualRowSelect: () => useManualRowSelect,
  useOnColumnResize: () => useOnColumnResize,
  useOrderedMultiSort: () => useOrderedMultiSort,
  useRowDisableSelection: () => useRowDisableSelection
});

// node_modules/@ui5/webcomponents-react-base/dist/Device/index.js
var Device_exports = {};
__export(Device_exports, {
  attachMediaHandler: () => attachMediaHandler,
  attachOrientationChangeHandler: () => attachOrientationChangeHandler,
  attachResizeHandler: () => attachResizeHandler,
  detachMediaHandler: () => detachMediaHandler,
  detachOrientationChangeHandler: () => detachOrientationChangeHandler,
  detachResizeHandler: () => detachResizeHandler,
  getCurrentRange: () => getCurrentRange,
  getOrientation: () => getOrientation,
  internals: () => internals,
  isAndroid: () => isAndroid,
  isChrome: () => isChrome,
  isCombi: () => isCombi,
  isDesktop: () => isDesktop,
  isFirefox: () => isFirefox,
  isIOS: () => isIOS,
  isMac: () => isMac,
  isPhone: () => isPhone,
  isSafari: () => isSafari,
  isTablet: () => isTablet,
  supportsTouch: () => supportsTouch
});

// node_modules/@ui5/webcomponents-react-base/dist/Device/EventProvider.js
var MediaEventProvider = new EventProvider_default();
var OrientationEventProvider = new EventProvider_default();
var ResizeEventProvider = new EventProvider_default();

// node_modules/@ui5/webcomponents-react-base/dist/Device/Media.js
var DEFAULT_RANGE_SET = MediaRange_default.RANGESETS.RANGE_4STEPS;
var RANGE_DEFINITIONS = {
  S: [0, 599],
  M: [600, 1023],
  L: [1024, 1439],
  XL: [1440, -1]
};
var newRangeToLegacyRangeMap = {
  S: "Phone",
  M: "Tablet",
  L: "Desktop",
  XL: "LargeDesktop"
};
function getQuery(from, to) {
  let q = "all";
  if (from > 0) {
    q = `${q} and (min-width:${from}px)`;
  }
  if (to > 0) {
    q = `${q} and (max-width:${to}px)`;
  }
  return q;
}
function resolveRangeInfo(name105) {
  const params = {
    from: RANGE_DEFINITIONS[name105][0],
    name: newRangeToLegacyRangeMap[name105],
    unit: "px"
  };
  if (RANGE_DEFINITIONS[name105][1] > 0) {
    params.to = RANGE_DEFINITIONS[name105][1];
  }
  return params;
}
var mediaQueries = null;
function initMediaQueries() {
  if (typeof document !== "undefined") {
    mediaQueries = {
      S: window.matchMedia(getQuery(...RANGE_DEFINITIONS.S)),
      M: window.matchMedia(getQuery(...RANGE_DEFINITIONS.M)),
      L: window.matchMedia(getQuery(...RANGE_DEFINITIONS.L)),
      XL: window.matchMedia(getQuery(...RANGE_DEFINITIONS.XL))
    };
    for (const mediaQueriesKey in mediaQueries) {
      const handler = (event) => {
        if (event.matches) {
          const params = resolveRangeInfo(mediaQueriesKey);
          MediaEventProvider.fireEvent(`media`, params);
        }
      };
      mediaQueries[mediaQueriesKey].addEventListener("change", handler);
    }
  }
}
var getCurrentRange = (width) => {
  if (typeof window === "undefined") {
    return {
      from: 1024,
      to: 1439,
      name: "Desktop",
      unit: "px"
    };
  }
  return resolveRangeInfo(MediaRange_default.getCurrentRange(DEFAULT_RANGE_SET, isNaN(width) ? void 0 : width));
};
var attachMediaHandler = (func) => {
  if (mediaQueries === null) {
    initMediaQueries();
  }
  MediaEventProvider.attachEvent(`media`, func);
};
var detachMediaHandler = (func) => {
  MediaEventProvider.detachEvent(`media`, func);
};

// node_modules/@ui5/webcomponents-react-base/dist/Device/index.js
var isSSR = () => typeof window === "undefined";
var getActualWindowSize = () => {
  if (isSSR()) {
    return [0, 0];
  }
  return [window.innerWidth, window.innerHeight];
};
var iResizeTimeout;
var bOrientationChange = false;
var bResize = false;
var iOrientationTimeout;
var iClearFlagTimeout;
var [iWindowWidthOld, iWindowHeightOld] = getActualWindowSize();
var rInputTagRegex = /INPUT|TEXTAREA|SELECT/;
var internalWindowSize = {
  height: 0,
  width: 0
};
var internalOrientation = {
  landscape: false,
  portrait: false
};
var isLandscape = () => {
  return !!window.matchMedia("(orientation: landscape)").matches;
};
var setResizeInfo = () => {
  internalWindowSize.width = getActualWindowSize()[0];
  internalWindowSize.height = getActualWindowSize()[1];
};
var setOrientationInfo = () => {
  internalOrientation.landscape = isLandscape();
  internalOrientation.portrait = !internalOrientation.landscape;
};
var clearFlags = () => {
  bOrientationChange = false;
  bResize = false;
  iClearFlagTimeout = null;
};
var eventListenersInitialized = false;
var initEventListeners = () => {
  if (supportsTouch()) {
    window.addEventListener("resize", handleMobileOrientationResizeChange, false);
    window.addEventListener("orientationchange", handleMobileOrientationResizeChange, false);
  } else {
    window.addEventListener("resize", handleResizeEvent, false);
  }
  setResizeInfo();
  setOrientationInfo();
  eventListenersInitialized = true;
};
var handleOrientationChange = () => {
  setOrientationInfo();
  OrientationEventProvider.fireEvent("orientation", {
    landscape: internalOrientation.landscape,
    portrait: internalOrientation.portrait
  });
};
var handleMobileTimeout = () => {
  if (bResize && bOrientationChange) {
    handleOrientationChange();
    handleResizeChange();
    bOrientationChange = false;
    bResize = false;
    if (iClearFlagTimeout) {
      window.clearTimeout(iClearFlagTimeout);
      iClearFlagTimeout = null;
    }
  }
  iOrientationTimeout = null;
};
var handleMobileOrientationResizeChange = (evt) => {
  var _a;
  if (evt.type === "resize") {
    if (rInputTagRegex.test((_a = document.activeElement) == null ? void 0 : _a.tagName) && !bOrientationChange) {
      return;
    }
    const [iWindowWidthNew, iWindowHeightNew] = getActualWindowSize();
    if (iWindowHeightNew === iWindowHeightOld && iWindowWidthNew === iWindowWidthOld) {
      return;
    }
    bResize = true;
    if (iWindowHeightOld !== iWindowHeightNew && iWindowWidthOld === iWindowWidthNew) {
      handleResizeChange();
    } else {
      iWindowWidthOld = iWindowWidthNew;
    }
    iWindowHeightOld = iWindowHeightNew;
    if (iClearFlagTimeout) {
      window.clearTimeout(iClearFlagTimeout);
      iClearFlagTimeout = null;
    }
    iClearFlagTimeout = window.setTimeout(clearFlags, 1200);
  } else if (evt.type === "orientationchange") {
    bOrientationChange = true;
  }
  if (iOrientationTimeout) {
    clearTimeout(iOrientationTimeout);
    iOrientationTimeout = null;
  }
  iOrientationTimeout = window.setTimeout(handleMobileTimeout, 50);
};
var handleResizeChange = () => {
  setResizeInfo();
  ResizeEventProvider.fireEvent("resize", {
    height: internalWindowSize.height,
    width: internalWindowSize.width
  });
};
var handleResizeTimeout = () => {
  handleResizeChange();
  iResizeTimeout = null;
};
var handleResizeEvent = () => {
  const wasL = internalOrientation.landscape;
  const isL = isLandscape();
  if (wasL !== isL) {
    handleOrientationChange();
  }
  if (!iResizeTimeout) {
    iResizeTimeout = window.setTimeout(handleResizeTimeout, 150);
  }
};
var attachResizeHandler = (fnFunction) => {
  if (!eventListenersInitialized) {
    initEventListeners();
  }
  ResizeEventProvider.attachEvent("resize", fnFunction);
};
var detachResizeHandler = (fnFunction) => {
  ResizeEventProvider.detachEvent("resize", fnFunction);
};
var getOrientation = () => {
  return internalOrientation;
};
var attachOrientationChangeHandler = (fnFunction) => {
  if (!eventListenersInitialized) {
    initEventListeners();
  }
  OrientationEventProvider.attachEvent("orientation", fnFunction);
};
var detachOrientationChangeHandler = (fnFunction) => {
  OrientationEventProvider.detachEvent("orientation", fnFunction);
};

// node_modules/@ui5/webcomponents-react-base/dist/generated/VersionInfo.js
var VersionInfo = {
  version: "2.7.3",
  major: 2,
  minor: 7,
  patch: 3,
  suffix: "",
  isNext: false,
  buildTime: 1743519074
};
var VersionInfo_default = VersionInfo;

// node_modules/@ui5/webcomponents-react-base/dist/hooks/useCurrentTheme.js
var import_react = __toESM(require_react(), 1);
function useCurrentTheme() {
  const [theme, setLocalTheme] = (0, import_react.useState)(getTheme());
  (0, import_react.useEffect)(() => {
    const onThemeSwitch = (newTheme) => {
      setLocalTheme(newTheme);
    };
    attachThemeLoaded(onThemeSwitch);
    return () => {
      detachThemeLoaded(onThemeSwitch);
    };
  }, []);
  return theme;
}

// node_modules/@ui5/webcomponents-react-base/dist/hooks/useI18nBundle.js
var import_react2 = __toESM(require_react(), 1);

// node_modules/@ui5/webcomponents-react-base/dist/stores/I18nStore.js
globalThis["@ui5/webcomponents-react"] ?? (globalThis["@ui5/webcomponents-react"] = {});
var STORE_LOCATION = globalThis["@ui5/webcomponents-react"];
var STORE_SYMBOL_LISTENERS = Symbol.for("@ui5/webcomponents-react/I18nStore/Listeners");
var STORE_SYMBOL = Symbol.for("@ui5/webcomponents-react/I18nStore");
var initialStore = {};
function getListeners() {
  STORE_LOCATION[STORE_SYMBOL_LISTENERS] ?? (STORE_LOCATION[STORE_SYMBOL_LISTENERS] = []);
  return STORE_LOCATION[STORE_SYMBOL_LISTENERS];
}
function emitChange() {
  for (const listener of getListeners()) {
    listener();
  }
}
function getSnapshot() {
  STORE_LOCATION[STORE_SYMBOL] ?? (STORE_LOCATION[STORE_SYMBOL] = initialStore);
  return STORE_LOCATION[STORE_SYMBOL];
}
function subscribe(listener) {
  const listeners = getListeners();
  STORE_LOCATION[STORE_SYMBOL_LISTENERS] = [...listeners, listener];
  return () => {
    STORE_LOCATION[STORE_SYMBOL_LISTENERS] = listeners.filter((l) => l !== listener);
  };
}
var I18nStore = {
  subscribe,
  getSnapshot,
  getServerSnapshot: () => {
    return initialStore;
  },
  loadBundle: (bundleName) => {
    const bundles = getSnapshot();
    if (!Object.prototype.hasOwnProperty.call(bundles, bundleName)) {
      void getI18nBundle(bundleName).then((bundle) => {
        STORE_LOCATION[STORE_SYMBOL] = {
          ...STORE_LOCATION[STORE_SYMBOL],
          [bundleName]: bundle
        };
        emitChange();
      });
    }
  },
  handleLanguageChange: async () => {
    const bundles = getSnapshot();
    const newBundles = await Promise.all(Object.keys(bundles).map((bundleName) => getI18nBundle(bundleName)));
    STORE_LOCATION[STORE_SYMBOL] = newBundles.reduce((acc, bundle) => ({
      ...acc,
      [bundle.packageName]: bundle
    }), {});
    emitChange();
  }
};

// node_modules/@ui5/webcomponents-react-base/dist/hooks/useI18nBundle.js
var defaultBundle = new i18nBundle_default("defaultBundle");
var useI18nBundle = (bundleName) => {
  const bundles = (0, import_react2.useSyncExternalStore)(I18nStore.subscribe, I18nStore.getSnapshot, I18nStore.getServerSnapshot);
  (0, import_react2.useEffect)(() => {
    I18nStore.loadBundle(bundleName);
  }, [bundleName]);
  return bundles[bundleName] ?? defaultBundle;
};

// node_modules/@ui5/webcomponents-react-base/dist/hooks/useIsomorphicLayoutEffect.js
var import_react3 = __toESM(require_react(), 1);
var useIsomorphicLayoutEffect = typeof window !== "undefined" ? import_react3.useLayoutEffect : import_react3.useEffect;

// node_modules/@ui5/webcomponents-base/dist/locale/directionChange.js
var eventProvider = new EventProvider_default();
var DIR_CHANGE = "directionChange";
var attachDirectionChange = (listener) => {
  eventProvider.attachEvent(DIR_CHANGE, listener);
};
var detachDirectionChange = (listener) => {
  eventProvider.detachEvent(DIR_CHANGE, listener);
};

// node_modules/@ui5/webcomponents-react-base/dist/hooks/useIsRTL.js
var import_react4 = __toESM(require_react(), 1);
var useIsRTL = (elementRef) => {
  const [isRTL, setRTL] = (0, import_react4.useState)(false);
  const isMounted = (0, import_react4.useRef)(false);
  useIsomorphicLayoutEffect(() => {
    var _a;
    isMounted.current = true;
    setRTL(((_a = elementRef.current) == null ? void 0 : _a.matches(":dir(rtl)")) ?? false);
    const handleDirectionChange = () => {
      var _a2;
      if (isMounted.current) {
        setRTL(((_a2 = elementRef.current) == null ? void 0 : _a2.matches(":dir(rtl)")) ?? false);
      }
    };
    attachDirectionChange(handleDirectionChange);
    return () => {
      isMounted.current = false;
      detachDirectionChange(handleDirectionChange);
    };
  }, []);
  return isRTL;
};

// node_modules/@ui5/webcomponents-react-base/dist/hooks/useStylesheet.js
var import_react5 = __toESM(require_react(), 1);

// node_modules/@ui5/webcomponents-react-base/dist/stores/StyleStore.js
globalThis["@ui5/webcomponents-react"] ?? (globalThis["@ui5/webcomponents-react"] = {});
var STORE_LOCATION2 = globalThis["@ui5/webcomponents-react"];
function getStyleStoreListenersSymbol() {
  return Symbol.for(`@ui5/webcomponents-react/StyleStore-${getCurrentRuntimeIndex()}/Listeners`);
}
function getStyleStoreSymbol() {
  return Symbol.for(`@ui5/webcomponents-react/StyleStore-${getCurrentRuntimeIndex()}`);
}
var initialStore2 = {
  staticCssInjected: false,
  componentsMap: /* @__PURE__ */ new Map()
};
function getListeners2() {
  var _a;
  STORE_LOCATION2[_a = getStyleStoreListenersSymbol()] ?? (STORE_LOCATION2[_a] = []);
  return STORE_LOCATION2[getStyleStoreListenersSymbol()];
}
function emitChange2() {
  for (const listener of getListeners2()) {
    listener();
  }
}
function getSnapshot2() {
  var _a;
  STORE_LOCATION2[_a = getStyleStoreSymbol()] ?? (STORE_LOCATION2[_a] = initialStore2);
  return STORE_LOCATION2[getStyleStoreSymbol()];
}
function subscribe2(listener) {
  const listeners = getListeners2();
  listeners.push(listener);
  return () => {
    const updatedListeners = getListeners2();
    const index = updatedListeners.indexOf(listener);
    if (index !== -1) {
      updatedListeners.splice(index, 1);
    }
  };
}
var StyleStore = {
  subscribe: subscribe2,
  getSnapshot: getSnapshot2,
  getServerSnapshot: () => {
    return initialStore2;
  },
  setStaticCssInjected: (staticCssInjected) => {
    const curr = getSnapshot2();
    STORE_LOCATION2[getStyleStoreSymbol()] = {
      ...curr,
      staticCssInjected
    };
    emitChange2();
  },
  mountComponent: (componentName) => {
    const { componentsMap } = getSnapshot2();
    if (componentsMap.has(componentName)) {
      componentsMap.set(componentName, componentsMap.get(componentName) + 1);
    } else {
      componentsMap.set(componentName, 1);
    }
    emitChange2();
  },
  unmountComponent: (componentName) => {
    const { componentsMap } = getSnapshot2();
    if (componentsMap.has(componentName)) {
      componentsMap.set(componentName, componentsMap.get(componentName) - 1);
    }
    emitChange2();
  }
};

// node_modules/@ui5/webcomponents-react-base/dist/hooks/useStylesheet.js
function useStylesheet(styles2, componentName, options) {
  const { staticCssInjected, componentsMap } = (0, import_react5.useSyncExternalStore)(StyleStore.subscribe, StyleStore.getSnapshot, StyleStore.getServerSnapshot);
  useIsomorphicLayoutEffect(() => {
    const scopedComponentName = `${componentName}-${getCurrentRuntimeIndex()}`;
    const shouldInject = (options == null ? void 0 : options.alwaysInject) || !staticCssInjected;
    if (shouldInject) {
      createOrUpdateStyle(styles2, "data-ui5wcr-component", scopedComponentName);
      StyleStore.mountComponent(componentName);
    }
    return () => {
      if (shouldInject) {
        StyleStore.unmountComponent(componentName);
        const numberOfMountedComponents = componentsMap.get(componentName);
        if (numberOfMountedComponents <= 0) {
          removeStyle("data-ui5wcr-component", scopedComponentName);
        }
      }
    };
  }, [styles2, staticCssInjected]);
}

// node_modules/@ui5/webcomponents-react-base/dist/hooks/useSyncRef.js
var import_react6 = __toESM(require_react(), 1);
function useSyncRef(ref) {
  const localRef = (0, import_react6.useRef)(null);
  const componentRef = (0, import_react6.useCallback)((node) => {
    if (ref) {
      if (typeof ref === "function") {
        ref(node);
      }
      if ({}.hasOwnProperty.call(ref, "current")) {
        ref.current = node;
      }
    }
    localRef.current = node;
  }, [ref]);
  return [componentRef, localRef];
}

// node_modules/@ui5/webcomponents-react-base/dist/hooks/useViewportRange.js
var import_react7 = __toESM(require_react(), 1);
var useViewportRange = () => {
  var _a;
  const [currentRange, setCurrentRange] = (0, import_react7.useState)((_a = getCurrentRange()) == null ? void 0 : _a.name);
  (0, import_react7.useEffect)(() => {
    let isMounted = true;
    const handler = ({ name: range }) => {
      if (isMounted === true) {
        setCurrentRange(range);
      }
    };
    attachMediaHandler(handler);
    return () => {
      isMounted = false;
      detachMediaHandler(handler);
    };
  }, [setCurrentRange]);
  return currentRange;
};

// node_modules/@ui5/webcomponents-react-base/dist/styling/ThemingParameters.js
var ThemingParameters = {
  sapBrandColor: "var(--sapBrandColor)",
  sapHighlightColor: "var(--sapHighlightColor)",
  sapBaseColor: "var(--sapBaseColor)",
  sapShellColor: "var(--sapShellColor)",
  sapBackgroundColor: "var(--sapBackgroundColor)",
  sapFontFamily: "var(--sapFontFamily)",
  sapFontSize: "var(--sapFontSize)",
  sapTextColor: "var(--sapTextColor)",
  sapLinkColor: "var(--sapLinkColor)",
  sapCompanyLogo: "var(--sapCompanyLogo)",
  sapBackgroundImage: "var(--sapBackgroundImage)",
  sapBackgroundImageOpacity: "var(--sapBackgroundImageOpacity)",
  sapBackgroundImageRepeat: "var(--sapBackgroundImageRepeat)",
  sapSelectedColor: "var(--sapSelectedColor)",
  sapHoverColor: "var(--sapHoverColor)",
  sapActiveColor: "var(--sapActiveColor)",
  sapHighlightTextColor: "var(--sapHighlightTextColor)",
  sapTitleColor: "var(--sapTitleColor)",
  sapNegativeColor: "var(--sapNegativeColor)",
  sapCriticalColor: "var(--sapCriticalColor)",
  sapPositiveColor: "var(--sapPositiveColor)",
  sapInformativeColor: "var(--sapInformativeColor)",
  sapNeutralColor: "var(--sapNeutralColor)",
  sapNegativeElementColor: "var(--sapNegativeElementColor)",
  sapCriticalElementColor: "var(--sapCriticalElementColor)",
  sapPositiveElementColor: "var(--sapPositiveElementColor)",
  sapInformativeElementColor: "var(--sapInformativeElementColor)",
  sapNeutralElementColor: "var(--sapNeutralElementColor)",
  sapNegativeTextColor: "var(--sapNegativeTextColor)",
  sapCriticalTextColor: "var(--sapCriticalTextColor)",
  sapPositiveTextColor: "var(--sapPositiveTextColor)",
  sapInformativeTextColor: "var(--sapInformativeTextColor)",
  sapNeutralTextColor: "var(--sapNeutralTextColor)",
  sapErrorColor: "var(--sapErrorColor)",
  sapWarningColor: "var(--sapWarningColor)",
  sapSuccessColor: "var(--sapSuccessColor)",
  sapInformationColor: "var(--sapInformationColor)",
  sapErrorBackground: "var(--sapErrorBackground)",
  sapWarningBackground: "var(--sapWarningBackground)",
  sapSuccessBackground: "var(--sapSuccessBackground)",
  sapInformationBackground: "var(--sapInformationBackground)",
  sapNeutralBackground: "var(--sapNeutralBackground)",
  sapErrorBorderColor: "var(--sapErrorBorderColor)",
  sapWarningBorderColor: "var(--sapWarningBorderColor)",
  sapSuccessBorderColor: "var(--sapSuccessBorderColor)",
  sapInformationBorderColor: "var(--sapInformationBorderColor)",
  sapNeutralBorderColor: "var(--sapNeutralBorderColor)",
  sapElement_LineHeight: "var(--sapElement_LineHeight)",
  sapElement_Height: "var(--sapElement_Height)",
  sapElement_BorderWidth: "var(--sapElement_BorderWidth)",
  sapElement_BorderCornerRadius: "var(--sapElement_BorderCornerRadius)",
  sapElement_Compact_LineHeight: "var(--sapElement_Compact_LineHeight)",
  sapElement_Compact_Height: "var(--sapElement_Compact_Height)",
  sapElement_Condensed_LineHeight: "var(--sapElement_Condensed_LineHeight)",
  sapElement_Condensed_Height: "var(--sapElement_Condensed_Height)",
  sapContent_LineHeight: "var(--sapContent_LineHeight)",
  sapContent_IconHeight: "var(--sapContent_IconHeight)",
  sapContent_IconColor: "var(--sapContent_IconColor)",
  sapContent_ContrastIconColor: "var(--sapContent_ContrastIconColor)",
  sapContent_NonInteractiveIconColor: "var(--sapContent_NonInteractiveIconColor)",
  sapContent_MarkerIconColor: "var(--sapContent_MarkerIconColor)",
  sapContent_MarkerTextColor: "var(--sapContent_MarkerTextColor)",
  sapContent_MeasureIndicatorColor: "var(--sapContent_MeasureIndicatorColor)",
  sapContent_Selected_MeasureIndicatorColor: "var(--sapContent_Selected_MeasureIndicatorColor)",
  sapContent_Placeholderloading_Background: "var(--sapContent_Placeholderloading_Background)",
  sapContent_Placeholderloading_Gradient: "var(--sapContent_Placeholderloading_Gradient)",
  sapContent_ImagePlaceholderBackground: "var(--sapContent_ImagePlaceholderBackground)",
  sapContent_ImagePlaceholderForegroundColor: "var(--sapContent_ImagePlaceholderForegroundColor)",
  sapContent_RatedColor: "var(--sapContent_RatedColor)",
  sapContent_UnratedColor: "var(--sapContent_UnratedColor)",
  sapContent_BusyColor: "var(--sapContent_BusyColor)",
  sapContent_FocusColor: "var(--sapContent_FocusColor)",
  sapContent_FocusStyle: "var(--sapContent_FocusStyle)",
  sapContent_FocusWidth: "var(--sapContent_FocusWidth)",
  sapContent_ContrastFocusColor: "var(--sapContent_ContrastFocusColor)",
  sapContent_ShadowColor: "var(--sapContent_ShadowColor)",
  sapContent_ContrastShadowColor: "var(--sapContent_ContrastShadowColor)",
  sapContent_Shadow0: "var(--sapContent_Shadow0)",
  sapContent_Shadow1: "var(--sapContent_Shadow1)",
  sapContent_Shadow2: "var(--sapContent_Shadow2)",
  sapContent_Shadow3: "var(--sapContent_Shadow3)",
  sapContent_TextShadow: "var(--sapContent_TextShadow)",
  sapContent_ContrastTextShadow: "var(--sapContent_ContrastTextShadow)",
  sapContent_HeaderShadow: "var(--sapContent_HeaderShadow)",
  sapContent_Interaction_Shadow: "var(--sapContent_Interaction_Shadow)",
  sapContent_Selected_Shadow: "var(--sapContent_Selected_Shadow)",
  sapContent_Negative_Shadow: "var(--sapContent_Negative_Shadow)",
  sapContent_Critical_Shadow: "var(--sapContent_Critical_Shadow)",
  sapContent_Positive_Shadow: "var(--sapContent_Positive_Shadow)",
  sapContent_Informative_Shadow: "var(--sapContent_Informative_Shadow)",
  sapContent_Neutral_Shadow: "var(--sapContent_Neutral_Shadow)",
  sapContent_SearchHighlightColor: "var(--sapContent_SearchHighlightColor)",
  sapContent_HelpColor: "var(--sapContent_HelpColor)",
  sapContent_LabelColor: "var(--sapContent_LabelColor)",
  sapContent_MonospaceFontFamily: "var(--sapContent_MonospaceFontFamily)",
  sapContent_MonospaceBoldFontFamily: "var(--sapContent_MonospaceBoldFontFamily)",
  sapContent_IconFontFamily: "var(--sapContent_IconFontFamily)",
  sapContent_DisabledTextColor: "var(--sapContent_DisabledTextColor)",
  sapContent_DisabledOpacity: "var(--sapContent_DisabledOpacity)",
  sapContent_ContrastTextThreshold: "var(--sapContent_ContrastTextThreshold)",
  sapContent_ContrastTextColor: "var(--sapContent_ContrastTextColor)",
  sapContent_ForegroundColor: "var(--sapContent_ForegroundColor)",
  sapContent_ForegroundBorderColor: "var(--sapContent_ForegroundBorderColor)",
  sapContent_ForegroundTextColor: "var(--sapContent_ForegroundTextColor)",
  sapContent_BadgeBackground: "var(--sapContent_BadgeBackground)",
  sapContent_BadgeTextColor: "var(--sapContent_BadgeTextColor)",
  sapContent_BadgeBorderColor: "var(--sapContent_BadgeBorderColor)",
  sapContent_DragAndDropActiveColor: "var(--sapContent_DragAndDropActiveColor)",
  sapContent_Selected_TextColor: "var(--sapContent_Selected_TextColor)",
  sapContent_Selected_Background: "var(--sapContent_Selected_Background)",
  sapContent_Selected_Hover_Background: "var(--sapContent_Selected_Hover_Background)",
  sapContent_Selected_ForegroundColor: "var(--sapContent_Selected_ForegroundColor)",
  sapContent_ForcedColorAdjust: "var(--sapContent_ForcedColorAdjust)",
  sapContent_Lite_Shadow: "var(--sapContent_Lite_Shadow)",
  sapContent_Illustrative_Color1: "var(--sapContent_Illustrative_Color1)",
  sapContent_Illustrative_Color2: "var(--sapContent_Illustrative_Color2)",
  sapContent_Illustrative_Color3: "var(--sapContent_Illustrative_Color3)",
  sapContent_Illustrative_Color4: "var(--sapContent_Illustrative_Color4)",
  sapContent_Illustrative_Color5: "var(--sapContent_Illustrative_Color5)",
  sapContent_Illustrative_Color6: "var(--sapContent_Illustrative_Color6)",
  sapContent_Illustrative_Color7: "var(--sapContent_Illustrative_Color7)",
  sapContent_Illustrative_Color8: "var(--sapContent_Illustrative_Color8)",
  sapContent_Illustrative_Color9: "var(--sapContent_Illustrative_Color9)",
  sapContent_Illustrative_Color10: "var(--sapContent_Illustrative_Color10)",
  sapContent_Illustrative_Color11: "var(--sapContent_Illustrative_Color11)",
  sapContent_Illustrative_Color12: "var(--sapContent_Illustrative_Color12)",
  sapContent_Illustrative_Color13: "var(--sapContent_Illustrative_Color13)",
  sapContent_Illustrative_Color14: "var(--sapContent_Illustrative_Color14)",
  sapContent_Illustrative_Color15: "var(--sapContent_Illustrative_Color15)",
  sapContent_Illustrative_Color16: "var(--sapContent_Illustrative_Color16)",
  sapContent_Illustrative_Color17: "var(--sapContent_Illustrative_Color17)",
  sapContent_Illustrative_Color18: "var(--sapContent_Illustrative_Color18)",
  sapContent_Illustrative_Color19: "var(--sapContent_Illustrative_Color19)",
  sapContent_Illustrative_Color20: "var(--sapContent_Illustrative_Color20)",
  sapContent_Illustrative_Color21: "var(--sapContent_Illustrative_Color21)",
  sapContent_Illustrative_Color22: "var(--sapContent_Illustrative_Color22)",
  sapContent_Illustrative_Color23: "var(--sapContent_Illustrative_Color23)",
  sapContent_Illustrative_Color24: "var(--sapContent_Illustrative_Color24)",
  sapContent_Illustrative_Color25: "var(--sapContent_Illustrative_Color25)",
  sapContent_Illustrative_Color26: "var(--sapContent_Illustrative_Color26)",
  sapContent_Illustrative_Color27: "var(--sapContent_Illustrative_Color27)",
  sapContent_Illustrative_Color28: "var(--sapContent_Illustrative_Color28)",
  sapContent_Illustrative_Color29: "var(--sapContent_Illustrative_Color29)",
  sapContent_Illustrative_Color30: "var(--sapContent_Illustrative_Color30)",
  sapContent_Illustrative_Color31: "var(--sapContent_Illustrative_Color31)",
  sapContent_Space_S: "var(--sapContent_Space_S)",
  sapContent_Space_M: "var(--sapContent_Space_M)",
  sapContent_Space_L: "var(--sapContent_Space_L)",
  sapContent_Space_XL: "var(--sapContent_Space_XL)",
  sapContent_Space_Tiny: "var(--sapContent_Space_Tiny)",
  sapContent_Space_Small: "var(--sapContent_Space_Small)",
  sapContent_Space_Medium: "var(--sapContent_Space_Medium)",
  sapContent_Space_Large: "var(--sapContent_Space_Large)",
  sapContent_Margin_Tiny: "var(--sapContent_Margin_Tiny)",
  sapContent_Margin_Small: "var(--sapContent_Margin_Small)",
  sapContent_Margin_Medium: "var(--sapContent_Margin_Medium)",
  sapContent_Margin_Large: "var(--sapContent_Margin_Large)",
  sapContent_Padding_S: "var(--sapContent_Padding_S)",
  sapContent_Padding_M: "var(--sapContent_Padding_M)",
  sapContent_Padding_L: "var(--sapContent_Padding_L)",
  sapContent_Padding_XL: "var(--sapContent_Padding_XL)",
  sapContent_Gap: "var(--sapContent_Gap)",
  sapContent_Success_HeaderShadow: "var(--sapContent_Success_HeaderShadow)",
  sapContent_Warning_HeaderShadow: "var(--sapContent_Warning_HeaderShadow)",
  sapContent_Error_HeaderShadow: "var(--sapContent_Error_HeaderShadow)",
  sapContent_Information_HeaderShadow: "var(--sapContent_Information_HeaderShadow)",
  sapFontLightFamily: "var(--sapFontLightFamily)",
  sapFontBoldFamily: "var(--sapFontBoldFamily)",
  sapFontSemiboldFamily: "var(--sapFontSemiboldFamily)",
  sapFontSemiboldDuplexFamily: "var(--sapFontSemiboldDuplexFamily)",
  sapFontBlackFamily: "var(--sapFontBlackFamily)",
  sapFontHeaderFamily: "var(--sapFontHeaderFamily)",
  sapFontSmallSize: "var(--sapFontSmallSize)",
  sapFontLargeSize: "var(--sapFontLargeSize)",
  sapFontHeader1Size: "var(--sapFontHeader1Size)",
  sapFontHeader2Size: "var(--sapFontHeader2Size)",
  sapFontHeader3Size: "var(--sapFontHeader3Size)",
  sapFontHeader4Size: "var(--sapFontHeader4Size)",
  sapFontHeader5Size: "var(--sapFontHeader5Size)",
  sapFontHeader6Size: "var(--sapFontHeader6Size)",
  sapLink_TextDecoration: "var(--sapLink_TextDecoration)",
  sapLink_Hover_Color: "var(--sapLink_Hover_Color)",
  sapLink_Hover_TextDecoration: "var(--sapLink_Hover_TextDecoration)",
  sapLink_Active_Color: "var(--sapLink_Active_Color)",
  sapLink_Active_TextDecoration: "var(--sapLink_Active_TextDecoration)",
  sapLink_Visited_Color: "var(--sapLink_Visited_Color)",
  sapLink_InvertedColor: "var(--sapLink_InvertedColor)",
  sapLink_SubtleColor: "var(--sapLink_SubtleColor)",
  sapShell_Background: "var(--sapShell_Background)",
  sapShell_BackgroundImage: "var(--sapShell_BackgroundImage)",
  sapShell_BackgroundImageOpacity: "var(--sapShell_BackgroundImageOpacity)",
  sapShell_BackgroundImageRepeat: "var(--sapShell_BackgroundImageRepeat)",
  sapShell_BorderColor: "var(--sapShell_BorderColor)",
  sapShell_TextColor: "var(--sapShell_TextColor)",
  sapShell_InteractiveBackground: "var(--sapShell_InteractiveBackground)",
  sapShell_InteractiveTextColor: "var(--sapShell_InteractiveTextColor)",
  sapShell_InteractiveBorderColor: "var(--sapShell_InteractiveBorderColor)",
  sapShell_GroupTitleTextColor: "var(--sapShell_GroupTitleTextColor)",
  sapShell_GroupTitleTextShadow: "var(--sapShell_GroupTitleTextShadow)",
  sapShell_Hover_Background: "var(--sapShell_Hover_Background)",
  sapShell_Active_Background: "var(--sapShell_Active_Background)",
  sapShell_Active_TextColor: "var(--sapShell_Active_TextColor)",
  sapShell_Selected_Background: "var(--sapShell_Selected_Background)",
  sapShell_Selected_TextColor: "var(--sapShell_Selected_TextColor)",
  sapShell_Selected_Hover_Background: "var(--sapShell_Selected_Hover_Background)",
  sapShell_Favicon: "var(--sapShell_Favicon)",
  sapShell_Navigation_Background: "var(--sapShell_Navigation_Background)",
  sapShell_Navigation_Hover_Background: "var(--sapShell_Navigation_Hover_Background)",
  sapShell_Navigation_SelectedColor: "var(--sapShell_Navigation_SelectedColor)",
  sapShell_Navigation_Selected_TextColor: "var(--sapShell_Navigation_Selected_TextColor)",
  sapShell_Navigation_TextColor: "var(--sapShell_Navigation_TextColor)",
  sapShell_Navigation_Active_TextColor: "var(--sapShell_Navigation_Active_TextColor)",
  sapShell_Navigation_Active_Background: "var(--sapShell_Navigation_Active_Background)",
  sapShell_Shadow: "var(--sapShell_Shadow)",
  sapShell_NegativeColor: "var(--sapShell_NegativeColor)",
  sapShell_CriticalColor: "var(--sapShell_CriticalColor)",
  sapShell_PositiveColor: "var(--sapShell_PositiveColor)",
  sapShell_InformativeColor: "var(--sapShell_InformativeColor)",
  sapShell_NeutralColor: "var(--sapShell_NeutralColor)",
  sapShell_Assistant_ForegroundColor: "var(--sapShell_Assistant_ForegroundColor)",
  sapShell_SubBrand_TextColor: "var(--sapShell_SubBrand_TextColor)",
  sapShell_Category_1_Background: "var(--sapShell_Category_1_Background)",
  sapShell_Category_1_BorderColor: "var(--sapShell_Category_1_BorderColor)",
  sapShell_Category_1_TextColor: "var(--sapShell_Category_1_TextColor)",
  sapShell_Category_1_TextShadow: "var(--sapShell_Category_1_TextShadow)",
  sapShell_Category_2_Background: "var(--sapShell_Category_2_Background)",
  sapShell_Category_2_BorderColor: "var(--sapShell_Category_2_BorderColor)",
  sapShell_Category_2_TextColor: "var(--sapShell_Category_2_TextColor)",
  sapShell_Category_2_TextShadow: "var(--sapShell_Category_2_TextShadow)",
  sapShell_Category_3_Background: "var(--sapShell_Category_3_Background)",
  sapShell_Category_3_BorderColor: "var(--sapShell_Category_3_BorderColor)",
  sapShell_Category_3_TextColor: "var(--sapShell_Category_3_TextColor)",
  sapShell_Category_3_TextShadow: "var(--sapShell_Category_3_TextShadow)",
  sapShell_Category_4_Background: "var(--sapShell_Category_4_Background)",
  sapShell_Category_4_BorderColor: "var(--sapShell_Category_4_BorderColor)",
  sapShell_Category_4_TextColor: "var(--sapShell_Category_4_TextColor)",
  sapShell_Category_4_TextShadow: "var(--sapShell_Category_4_TextShadow)",
  sapShell_Category_5_Background: "var(--sapShell_Category_5_Background)",
  sapShell_Category_5_BorderColor: "var(--sapShell_Category_5_BorderColor)",
  sapShell_Category_5_TextColor: "var(--sapShell_Category_5_TextColor)",
  sapShell_Category_5_TextShadow: "var(--sapShell_Category_5_TextShadow)",
  sapShell_Category_6_Background: "var(--sapShell_Category_6_Background)",
  sapShell_Category_6_BorderColor: "var(--sapShell_Category_6_BorderColor)",
  sapShell_Category_6_TextColor: "var(--sapShell_Category_6_TextColor)",
  sapShell_Category_6_TextShadow: "var(--sapShell_Category_6_TextShadow)",
  sapShell_Category_7_Background: "var(--sapShell_Category_7_Background)",
  sapShell_Category_7_BorderColor: "var(--sapShell_Category_7_BorderColor)",
  sapShell_Category_7_TextColor: "var(--sapShell_Category_7_TextColor)",
  sapShell_Category_7_TextShadow: "var(--sapShell_Category_7_TextShadow)",
  sapShell_Category_8_Background: "var(--sapShell_Category_8_Background)",
  sapShell_Category_8_BorderColor: "var(--sapShell_Category_8_BorderColor)",
  sapShell_Category_8_TextColor: "var(--sapShell_Category_8_TextColor)",
  sapShell_Category_8_TextShadow: "var(--sapShell_Category_8_TextShadow)",
  sapShell_Category_9_Background: "var(--sapShell_Category_9_Background)",
  sapShell_Category_9_BorderColor: "var(--sapShell_Category_9_BorderColor)",
  sapShell_Category_9_TextColor: "var(--sapShell_Category_9_TextColor)",
  sapShell_Category_9_TextShadow: "var(--sapShell_Category_9_TextShadow)",
  sapShell_Category_10_Background: "var(--sapShell_Category_10_Background)",
  sapShell_Category_10_BorderColor: "var(--sapShell_Category_10_BorderColor)",
  sapShell_Category_10_TextColor: "var(--sapShell_Category_10_TextColor)",
  sapShell_Category_10_TextShadow: "var(--sapShell_Category_10_TextShadow)",
  sapShell_Category_11_Background: "var(--sapShell_Category_11_Background)",
  sapShell_Category_11_BorderColor: "var(--sapShell_Category_11_BorderColor)",
  sapShell_Category_11_TextColor: "var(--sapShell_Category_11_TextColor)",
  sapShell_Category_11_TextShadow: "var(--sapShell_Category_11_TextShadow)",
  sapShell_Category_12_Background: "var(--sapShell_Category_12_Background)",
  sapShell_Category_12_BorderColor: "var(--sapShell_Category_12_BorderColor)",
  sapShell_Category_12_TextColor: "var(--sapShell_Category_12_TextColor)",
  sapShell_Category_12_TextShadow: "var(--sapShell_Category_12_TextShadow)",
  sapShell_Category_13_Background: "var(--sapShell_Category_13_Background)",
  sapShell_Category_13_BorderColor: "var(--sapShell_Category_13_BorderColor)",
  sapShell_Category_13_TextColor: "var(--sapShell_Category_13_TextColor)",
  sapShell_Category_13_TextShadow: "var(--sapShell_Category_13_TextShadow)",
  sapShell_Category_14_Background: "var(--sapShell_Category_14_Background)",
  sapShell_Category_14_BorderColor: "var(--sapShell_Category_14_BorderColor)",
  sapShell_Category_14_TextColor: "var(--sapShell_Category_14_TextColor)",
  sapShell_Category_14_TextShadow: "var(--sapShell_Category_14_TextShadow)",
  sapShell_Category_15_Background: "var(--sapShell_Category_15_Background)",
  sapShell_Category_15_BorderColor: "var(--sapShell_Category_15_BorderColor)",
  sapShell_Category_15_TextColor: "var(--sapShell_Category_15_TextColor)",
  sapShell_Category_15_TextShadow: "var(--sapShell_Category_15_TextShadow)",
  sapShell_Category_16_Background: "var(--sapShell_Category_16_Background)",
  sapShell_Category_16_BorderColor: "var(--sapShell_Category_16_BorderColor)",
  sapShell_Category_16_TextColor: "var(--sapShell_Category_16_TextColor)",
  sapShell_Category_16_TextShadow: "var(--sapShell_Category_16_TextShadow)",
  sapShell_Space_S: "var(--sapShell_Space_S)",
  sapShell_Space_M: "var(--sapShell_Space_M)",
  sapShell_Space_L: "var(--sapShell_Space_L)",
  sapShell_Space_XL: "var(--sapShell_Space_XL)",
  sapShell_Gap_S: "var(--sapShell_Gap_S)",
  sapShell_Gap_M: "var(--sapShell_Gap_M)",
  sapShell_Gap_L: "var(--sapShell_Gap_L)",
  sapShell_Gap_XL: "var(--sapShell_Gap_XL)",
  sapShell_GroupGap_S: "var(--sapShell_GroupGap_S)",
  sapShell_GroupGap_M: "var(--sapShell_GroupGap_M)",
  sapShell_GroupGap_L: "var(--sapShell_GroupGap_L)",
  sapShell_GroupGap_XL: "var(--sapShell_GroupGap_XL)",
  sapAssistant_Color1: "var(--sapAssistant_Color1)",
  sapAssistant_Color2: "var(--sapAssistant_Color2)",
  sapAssistant_BackgroundGradient: "var(--sapAssistant_BackgroundGradient)",
  sapAssistant_Background: "var(--sapAssistant_Background)",
  sapAssistant_BorderColor: "var(--sapAssistant_BorderColor)",
  sapAssistant_TextColor: "var(--sapAssistant_TextColor)",
  sapAssistant_Hover_Background: "var(--sapAssistant_Hover_Background)",
  sapAssistant_Hover_BorderColor: "var(--sapAssistant_Hover_BorderColor)",
  sapAssistant_Hover_TextColor: "var(--sapAssistant_Hover_TextColor)",
  sapAssistant_Active_Background: "var(--sapAssistant_Active_Background)",
  sapAssistant_Active_BorderColor: "var(--sapAssistant_Active_BorderColor)",
  sapAssistant_Active_TextColor: "var(--sapAssistant_Active_TextColor)",
  sapAssistant_Question_Background: "var(--sapAssistant_Question_Background)",
  sapAssistant_Question_BorderColor: "var(--sapAssistant_Question_BorderColor)",
  sapAssistant_Question_TextColor: "var(--sapAssistant_Question_TextColor)",
  sapAssistant_Answer_Background: "var(--sapAssistant_Answer_Background)",
  sapAssistant_Answer_BorderColor: "var(--sapAssistant_Answer_BorderColor)",
  sapAssistant_Answer_TextColor: "var(--sapAssistant_Answer_TextColor)",
  sapAvatar_1_Background: "var(--sapAvatar_1_Background)",
  sapAvatar_1_BorderColor: "var(--sapAvatar_1_BorderColor)",
  sapAvatar_1_TextColor: "var(--sapAvatar_1_TextColor)",
  sapAvatar_1_Hover_Background: "var(--sapAvatar_1_Hover_Background)",
  sapAvatar_2_Background: "var(--sapAvatar_2_Background)",
  sapAvatar_2_BorderColor: "var(--sapAvatar_2_BorderColor)",
  sapAvatar_2_TextColor: "var(--sapAvatar_2_TextColor)",
  sapAvatar_2_Hover_Background: "var(--sapAvatar_2_Hover_Background)",
  sapAvatar_3_Background: "var(--sapAvatar_3_Background)",
  sapAvatar_3_BorderColor: "var(--sapAvatar_3_BorderColor)",
  sapAvatar_3_TextColor: "var(--sapAvatar_3_TextColor)",
  sapAvatar_3_Hover_Background: "var(--sapAvatar_3_Hover_Background)",
  sapAvatar_4_Background: "var(--sapAvatar_4_Background)",
  sapAvatar_4_BorderColor: "var(--sapAvatar_4_BorderColor)",
  sapAvatar_4_TextColor: "var(--sapAvatar_4_TextColor)",
  sapAvatar_4_Hover_Background: "var(--sapAvatar_4_Hover_Background)",
  sapAvatar_5_Background: "var(--sapAvatar_5_Background)",
  sapAvatar_5_BorderColor: "var(--sapAvatar_5_BorderColor)",
  sapAvatar_5_TextColor: "var(--sapAvatar_5_TextColor)",
  sapAvatar_5_Hover_Background: "var(--sapAvatar_5_Hover_Background)",
  sapAvatar_6_Background: "var(--sapAvatar_6_Background)",
  sapAvatar_6_BorderColor: "var(--sapAvatar_6_BorderColor)",
  sapAvatar_6_TextColor: "var(--sapAvatar_6_TextColor)",
  sapAvatar_6_Hover_Background: "var(--sapAvatar_6_Hover_Background)",
  sapAvatar_7_Background: "var(--sapAvatar_7_Background)",
  sapAvatar_7_BorderColor: "var(--sapAvatar_7_BorderColor)",
  sapAvatar_7_TextColor: "var(--sapAvatar_7_TextColor)",
  sapAvatar_7_Hover_Background: "var(--sapAvatar_7_Hover_Background)",
  sapAvatar_8_Background: "var(--sapAvatar_8_Background)",
  sapAvatar_8_BorderColor: "var(--sapAvatar_8_BorderColor)",
  sapAvatar_8_TextColor: "var(--sapAvatar_8_TextColor)",
  sapAvatar_8_Hover_Background: "var(--sapAvatar_8_Hover_Background)",
  sapAvatar_9_Background: "var(--sapAvatar_9_Background)",
  sapAvatar_9_BorderColor: "var(--sapAvatar_9_BorderColor)",
  sapAvatar_9_TextColor: "var(--sapAvatar_9_TextColor)",
  sapAvatar_9_Hover_Background: "var(--sapAvatar_9_Hover_Background)",
  sapAvatar_10_Background: "var(--sapAvatar_10_Background)",
  sapAvatar_10_BorderColor: "var(--sapAvatar_10_BorderColor)",
  sapAvatar_10_TextColor: "var(--sapAvatar_10_TextColor)",
  sapAvatar_10_Hover_Background: "var(--sapAvatar_10_Hover_Background)",
  sapAvatar_Lite_BorderColor: "var(--sapAvatar_Lite_BorderColor)",
  sapAvatar_Lite_Background: "var(--sapAvatar_Lite_Background)",
  sapAvatar_Hover_BorderColor: "var(--sapAvatar_Hover_BorderColor)",
  sapButton_Background: "var(--sapButton_Background)",
  sapButton_BorderColor: "var(--sapButton_BorderColor)",
  sapButton_BorderWidth: "var(--sapButton_BorderWidth)",
  sapButton_BorderCornerRadius: "var(--sapButton_BorderCornerRadius)",
  sapButton_TextColor: "var(--sapButton_TextColor)",
  sapButton_FontFamily: "var(--sapButton_FontFamily)",
  sapButton_Hover_Background: "var(--sapButton_Hover_Background)",
  sapButton_Hover_BorderColor: "var(--sapButton_Hover_BorderColor)",
  sapButton_Hover_TextColor: "var(--sapButton_Hover_TextColor)",
  sapButton_IconColor: "var(--sapButton_IconColor)",
  sapButton_Active_Background: "var(--sapButton_Active_Background)",
  sapButton_Active_BorderColor: "var(--sapButton_Active_BorderColor)",
  sapButton_Active_TextColor: "var(--sapButton_Active_TextColor)",
  sapButton_Emphasized_Background: "var(--sapButton_Emphasized_Background)",
  sapButton_Emphasized_BorderColor: "var(--sapButton_Emphasized_BorderColor)",
  sapButton_Emphasized_BorderWidth: "var(--sapButton_Emphasized_BorderWidth)",
  sapButton_Emphasized_TextColor: "var(--sapButton_Emphasized_TextColor)",
  sapButton_Emphasized_FontFamily: "var(--sapButton_Emphasized_FontFamily)",
  sapButton_Emphasized_Hover_Background: "var(--sapButton_Emphasized_Hover_Background)",
  sapButton_Emphasized_Hover_BorderColor: "var(--sapButton_Emphasized_Hover_BorderColor)",
  sapButton_Emphasized_Hover_TextColor: "var(--sapButton_Emphasized_Hover_TextColor)",
  sapButton_Emphasized_Active_Background: "var(--sapButton_Emphasized_Active_Background)",
  sapButton_Emphasized_Active_BorderColor: "var(--sapButton_Emphasized_Active_BorderColor)",
  sapButton_Emphasized_Active_TextColor: "var(--sapButton_Emphasized_Active_TextColor)",
  sapButton_Emphasized_TextShadow: "var(--sapButton_Emphasized_TextShadow)",
  sapButton_Emphasized_FontWeight: "var(--sapButton_Emphasized_FontWeight)",
  sapButton_Reject_Background: "var(--sapButton_Reject_Background)",
  sapButton_Reject_BorderColor: "var(--sapButton_Reject_BorderColor)",
  sapButton_Reject_TextColor: "var(--sapButton_Reject_TextColor)",
  sapButton_Reject_Hover_Background: "var(--sapButton_Reject_Hover_Background)",
  sapButton_Reject_Hover_BorderColor: "var(--sapButton_Reject_Hover_BorderColor)",
  sapButton_Reject_Hover_TextColor: "var(--sapButton_Reject_Hover_TextColor)",
  sapButton_Reject_Active_Background: "var(--sapButton_Reject_Active_Background)",
  sapButton_Reject_Active_BorderColor: "var(--sapButton_Reject_Active_BorderColor)",
  sapButton_Reject_Active_TextColor: "var(--sapButton_Reject_Active_TextColor)",
  sapButton_Reject_Selected_Background: "var(--sapButton_Reject_Selected_Background)",
  sapButton_Reject_Selected_BorderColor: "var(--sapButton_Reject_Selected_BorderColor)",
  sapButton_Reject_Selected_TextColor: "var(--sapButton_Reject_Selected_TextColor)",
  sapButton_Reject_Selected_Hover_Background: "var(--sapButton_Reject_Selected_Hover_Background)",
  sapButton_Reject_Selected_Hover_BorderColor: "var(--sapButton_Reject_Selected_Hover_BorderColor)",
  sapButton_Accept_Background: "var(--sapButton_Accept_Background)",
  sapButton_Accept_BorderColor: "var(--sapButton_Accept_BorderColor)",
  sapButton_Accept_TextColor: "var(--sapButton_Accept_TextColor)",
  sapButton_Accept_Hover_Background: "var(--sapButton_Accept_Hover_Background)",
  sapButton_Accept_Hover_BorderColor: "var(--sapButton_Accept_Hover_BorderColor)",
  sapButton_Accept_Hover_TextColor: "var(--sapButton_Accept_Hover_TextColor)",
  sapButton_Accept_Active_Background: "var(--sapButton_Accept_Active_Background)",
  sapButton_Accept_Active_BorderColor: "var(--sapButton_Accept_Active_BorderColor)",
  sapButton_Accept_Active_TextColor: "var(--sapButton_Accept_Active_TextColor)",
  sapButton_Accept_Selected_Background: "var(--sapButton_Accept_Selected_Background)",
  sapButton_Accept_Selected_BorderColor: "var(--sapButton_Accept_Selected_BorderColor)",
  sapButton_Accept_Selected_TextColor: "var(--sapButton_Accept_Selected_TextColor)",
  sapButton_Accept_Selected_Hover_Background: "var(--sapButton_Accept_Selected_Hover_Background)",
  sapButton_Accept_Selected_Hover_BorderColor: "var(--sapButton_Accept_Selected_Hover_BorderColor)",
  sapButton_Lite_Background: "var(--sapButton_Lite_Background)",
  sapButton_Lite_BorderColor: "var(--sapButton_Lite_BorderColor)",
  sapButton_Lite_TextColor: "var(--sapButton_Lite_TextColor)",
  sapButton_Lite_Hover_Background: "var(--sapButton_Lite_Hover_Background)",
  sapButton_Lite_Hover_BorderColor: "var(--sapButton_Lite_Hover_BorderColor)",
  sapButton_Lite_Hover_TextColor: "var(--sapButton_Lite_Hover_TextColor)",
  sapButton_Lite_Active_Background: "var(--sapButton_Lite_Active_Background)",
  sapButton_Lite_Active_BorderColor: "var(--sapButton_Lite_Active_BorderColor)",
  sapButton_Selected_Background: "var(--sapButton_Selected_Background)",
  sapButton_Selected_BorderColor: "var(--sapButton_Selected_BorderColor)",
  sapButton_Selected_TextColor: "var(--sapButton_Selected_TextColor)",
  sapButton_Selected_Hover_Background: "var(--sapButton_Selected_Hover_Background)",
  sapButton_Selected_Hover_BorderColor: "var(--sapButton_Selected_Hover_BorderColor)",
  sapButton_Attention_Background: "var(--sapButton_Attention_Background)",
  sapButton_Attention_BorderColor: "var(--sapButton_Attention_BorderColor)",
  sapButton_Attention_TextColor: "var(--sapButton_Attention_TextColor)",
  sapButton_Attention_Hover_Background: "var(--sapButton_Attention_Hover_Background)",
  sapButton_Attention_Hover_BorderColor: "var(--sapButton_Attention_Hover_BorderColor)",
  sapButton_Attention_Hover_TextColor: "var(--sapButton_Attention_Hover_TextColor)",
  sapButton_Attention_Active_Background: "var(--sapButton_Attention_Active_Background)",
  sapButton_Attention_Active_BorderColor: "var(--sapButton_Attention_Active_BorderColor)",
  sapButton_Attention_Active_TextColor: "var(--sapButton_Attention_Active_TextColor)",
  sapButton_Attention_Selected_Background: "var(--sapButton_Attention_Selected_Background)",
  sapButton_Attention_Selected_BorderColor: "var(--sapButton_Attention_Selected_BorderColor)",
  sapButton_Attention_Selected_TextColor: "var(--sapButton_Attention_Selected_TextColor)",
  sapButton_Attention_Selected_Hover_Background: "var(--sapButton_Attention_Selected_Hover_Background)",
  sapButton_Attention_Selected_Hover_BorderColor: "var(--sapButton_Attention_Selected_Hover_BorderColor)",
  sapButton_Negative_Background: "var(--sapButton_Negative_Background)",
  sapButton_Negative_BorderColor: "var(--sapButton_Negative_BorderColor)",
  sapButton_Negative_TextColor: "var(--sapButton_Negative_TextColor)",
  sapButton_Negative_Hover_Background: "var(--sapButton_Negative_Hover_Background)",
  sapButton_Negative_Hover_BorderColor: "var(--sapButton_Negative_Hover_BorderColor)",
  sapButton_Negative_Hover_TextColor: "var(--sapButton_Negative_Hover_TextColor)",
  sapButton_Negative_Active_Background: "var(--sapButton_Negative_Active_Background)",
  sapButton_Negative_Active_BorderColor: "var(--sapButton_Negative_Active_BorderColor)",
  sapButton_Negative_Active_TextColor: "var(--sapButton_Negative_Active_TextColor)",
  sapButton_Critical_Background: "var(--sapButton_Critical_Background)",
  sapButton_Critical_BorderColor: "var(--sapButton_Critical_BorderColor)",
  sapButton_Critical_TextColor: "var(--sapButton_Critical_TextColor)",
  sapButton_Critical_Hover_Background: "var(--sapButton_Critical_Hover_Background)",
  sapButton_Critical_Hover_BorderColor: "var(--sapButton_Critical_Hover_BorderColor)",
  sapButton_Critical_Hover_TextColor: "var(--sapButton_Critical_Hover_TextColor)",
  sapButton_Critical_Active_Background: "var(--sapButton_Critical_Active_Background)",
  sapButton_Critical_Active_BorderColor: "var(--sapButton_Critical_Active_BorderColor)",
  sapButton_Critical_Active_TextColor: "var(--sapButton_Critical_Active_TextColor)",
  sapButton_Success_Background: "var(--sapButton_Success_Background)",
  sapButton_Success_BorderColor: "var(--sapButton_Success_BorderColor)",
  sapButton_Success_TextColor: "var(--sapButton_Success_TextColor)",
  sapButton_Success_Hover_Background: "var(--sapButton_Success_Hover_Background)",
  sapButton_Success_Hover_BorderColor: "var(--sapButton_Success_Hover_BorderColor)",
  sapButton_Success_Hover_TextColor: "var(--sapButton_Success_Hover_TextColor)",
  sapButton_Success_Active_Background: "var(--sapButton_Success_Active_Background)",
  sapButton_Success_Active_BorderColor: "var(--sapButton_Success_Active_BorderColor)",
  sapButton_Success_Active_TextColor: "var(--sapButton_Success_Active_TextColor)",
  sapButton_Information_Background: "var(--sapButton_Information_Background)",
  sapButton_Information_BorderColor: "var(--sapButton_Information_BorderColor)",
  sapButton_Information_TextColor: "var(--sapButton_Information_TextColor)",
  sapButton_Information_Hover_Background: "var(--sapButton_Information_Hover_Background)",
  sapButton_Information_Hover_BorderColor: "var(--sapButton_Information_Hover_BorderColor)",
  sapButton_Information_Hover_TextColor: "var(--sapButton_Information_Hover_TextColor)",
  sapButton_Information_Active_Background: "var(--sapButton_Information_Active_Background)",
  sapButton_Information_Active_BorderColor: "var(--sapButton_Information_Active_BorderColor)",
  sapButton_Information_Active_TextColor: "var(--sapButton_Information_Active_TextColor)",
  sapButton_Neutral_Background: "var(--sapButton_Neutral_Background)",
  sapButton_Neutral_BorderColor: "var(--sapButton_Neutral_BorderColor)",
  sapButton_Neutral_TextColor: "var(--sapButton_Neutral_TextColor)",
  sapButton_Neutral_Hover_Background: "var(--sapButton_Neutral_Hover_Background)",
  sapButton_Neutral_Hover_BorderColor: "var(--sapButton_Neutral_Hover_BorderColor)",
  sapButton_Neutral_Hover_TextColor: "var(--sapButton_Neutral_Hover_TextColor)",
  sapButton_Neutral_Active_Background: "var(--sapButton_Neutral_Active_Background)",
  sapButton_Neutral_Active_BorderColor: "var(--sapButton_Neutral_Active_BorderColor)",
  sapButton_Neutral_Active_TextColor: "var(--sapButton_Neutral_Active_TextColor)",
  sapButton_Track_Background: "var(--sapButton_Track_Background)",
  sapButton_Track_BorderColor: "var(--sapButton_Track_BorderColor)",
  sapButton_Track_TextColor: "var(--sapButton_Track_TextColor)",
  sapButton_Track_Hover_Background: "var(--sapButton_Track_Hover_Background)",
  sapButton_Track_Hover_BorderColor: "var(--sapButton_Track_Hover_BorderColor)",
  sapButton_Track_Selected_Background: "var(--sapButton_Track_Selected_Background)",
  sapButton_Track_Selected_BorderColor: "var(--sapButton_Track_Selected_BorderColor)",
  sapButton_Track_Selected_TextColor: "var(--sapButton_Track_Selected_TextColor)",
  sapButton_Track_Selected_Hover_Background: "var(--sapButton_Track_Selected_Hover_Background)",
  sapButton_Track_Selected_Hover_BorderColor: "var(--sapButton_Track_Selected_Hover_BorderColor)",
  sapButton_Handle_Background: "var(--sapButton_Handle_Background)",
  sapButton_Handle_BorderColor: "var(--sapButton_Handle_BorderColor)",
  sapButton_Handle_TextColor: "var(--sapButton_Handle_TextColor)",
  sapButton_Handle_Hover_Background: "var(--sapButton_Handle_Hover_Background)",
  sapButton_Handle_Hover_BorderColor: "var(--sapButton_Handle_Hover_BorderColor)",
  sapButton_Handle_Selected_Background: "var(--sapButton_Handle_Selected_Background)",
  sapButton_Handle_Selected_BorderColor: "var(--sapButton_Handle_Selected_BorderColor)",
  sapButton_Handle_Selected_TextColor: "var(--sapButton_Handle_Selected_TextColor)",
  sapButton_Handle_Selected_Hover_Background: "var(--sapButton_Handle_Selected_Hover_Background)",
  sapButton_Handle_Selected_Hover_BorderColor: "var(--sapButton_Handle_Selected_Hover_BorderColor)",
  sapButton_Track_Negative_Background: "var(--sapButton_Track_Negative_Background)",
  sapButton_Track_Negative_BorderColor: "var(--sapButton_Track_Negative_BorderColor)",
  sapButton_Track_Negative_TextColor: "var(--sapButton_Track_Negative_TextColor)",
  sapButton_Track_Negative_Hover_Background: "var(--sapButton_Track_Negative_Hover_Background)",
  sapButton_Track_Negative_Hover_BorderColor: "var(--sapButton_Track_Negative_Hover_BorderColor)",
  sapButton_Handle_Negative_Background: "var(--sapButton_Handle_Negative_Background)",
  sapButton_Handle_Negative_BorderColor: "var(--sapButton_Handle_Negative_BorderColor)",
  sapButton_Handle_Negative_TextColor: "var(--sapButton_Handle_Negative_TextColor)",
  sapButton_Handle_Negative_Hover_Background: "var(--sapButton_Handle_Negative_Hover_Background)",
  sapButton_Handle_Negative_Hover_BorderColor: "var(--sapButton_Handle_Negative_Hover_BorderColor)",
  sapButton_Track_Positive_Background: "var(--sapButton_Track_Positive_Background)",
  sapButton_Track_Positive_BorderColor: "var(--sapButton_Track_Positive_BorderColor)",
  sapButton_Track_Positive_TextColor: "var(--sapButton_Track_Positive_TextColor)",
  sapButton_Track_Positive_Hover_Background: "var(--sapButton_Track_Positive_Hover_Background)",
  sapButton_Track_Positive_Hover_BorderColor: "var(--sapButton_Track_Positive_Hover_BorderColor)",
  sapButton_Handle_Positive_Background: "var(--sapButton_Handle_Positive_Background)",
  sapButton_Handle_Positive_BorderColor: "var(--sapButton_Handle_Positive_BorderColor)",
  sapButton_Handle_Positive_TextColor: "var(--sapButton_Handle_Positive_TextColor)",
  sapButton_Handle_Positive_Hover_Background: "var(--sapButton_Handle_Positive_Hover_Background)",
  sapButton_Handle_Positive_Hover_BorderColor: "var(--sapButton_Handle_Positive_Hover_BorderColor)",
  sapButton_TokenBackground: "var(--sapButton_TokenBackground)",
  sapButton_TokenBorderColor: "var(--sapButton_TokenBorderColor)",
  sapButton_TokenBorderCornerRadius: "var(--sapButton_TokenBorderCornerRadius)",
  sapButton_Selected_TokenBorderWidth: "var(--sapButton_Selected_TokenBorderWidth)",
  sapButton_ReadOnly_TokenBackground: "var(--sapButton_ReadOnly_TokenBackground)",
  sapButton_Segment_BorderCornerRadius: "var(--sapButton_Segment_BorderCornerRadius)",
  sapField_Background: "var(--sapField_Background)",
  sapField_BackgroundStyle: "var(--sapField_BackgroundStyle)",
  sapField_TextColor: "var(--sapField_TextColor)",
  sapField_PlaceholderTextColor: "var(--sapField_PlaceholderTextColor)",
  sapField_BorderColor: "var(--sapField_BorderColor)",
  sapField_HelpBackground: "var(--sapField_HelpBackground)",
  sapField_BorderWidth: "var(--sapField_BorderWidth)",
  sapField_BorderStyle: "var(--sapField_BorderStyle)",
  sapField_BorderCornerRadius: "var(--sapField_BorderCornerRadius)",
  sapField_Shadow: "var(--sapField_Shadow)",
  sapField_Hover_Background: "var(--sapField_Hover_Background)",
  sapField_Hover_BackgroundStyle: "var(--sapField_Hover_BackgroundStyle)",
  sapField_Hover_BorderColor: "var(--sapField_Hover_BorderColor)",
  sapField_Hover_HelpBackground: "var(--sapField_Hover_HelpBackground)",
  sapField_Hover_Shadow: "var(--sapField_Hover_Shadow)",
  sapField_Hover_InvalidShadow: "var(--sapField_Hover_InvalidShadow)",
  sapField_Hover_WarningShadow: "var(--sapField_Hover_WarningShadow)",
  sapField_Hover_SuccessShadow: "var(--sapField_Hover_SuccessShadow)",
  sapField_Hover_InformationShadow: "var(--sapField_Hover_InformationShadow)",
  sapField_Active_BorderColor: "var(--sapField_Active_BorderColor)",
  sapField_Focus_Background: "var(--sapField_Focus_Background)",
  sapField_Focus_BorderColor: "var(--sapField_Focus_BorderColor)",
  sapField_Focus_HelpBackground: "var(--sapField_Focus_HelpBackground)",
  sapField_ReadOnly_Background: "var(--sapField_ReadOnly_Background)",
  sapField_ReadOnly_BackgroundStyle: "var(--sapField_ReadOnly_BackgroundStyle)",
  sapField_ReadOnly_BorderColor: "var(--sapField_ReadOnly_BorderColor)",
  sapField_ReadOnly_BorderStyle: "var(--sapField_ReadOnly_BorderStyle)",
  sapField_ReadOnly_HelpBackground: "var(--sapField_ReadOnly_HelpBackground)",
  sapField_RequiredColor: "var(--sapField_RequiredColor)",
  sapField_InvalidColor: "var(--sapField_InvalidColor)",
  sapField_InvalidBackground: "var(--sapField_InvalidBackground)",
  sapField_InvalidBackgroundStyle: "var(--sapField_InvalidBackgroundStyle)",
  sapField_InvalidBorderWidth: "var(--sapField_InvalidBorderWidth)",
  sapField_InvalidBorderStyle: "var(--sapField_InvalidBorderStyle)",
  sapField_InvalidShadow: "var(--sapField_InvalidShadow)",
  sapField_WarningColor: "var(--sapField_WarningColor)",
  sapField_WarningBackground: "var(--sapField_WarningBackground)",
  sapField_WarningBackgroundStyle: "var(--sapField_WarningBackgroundStyle)",
  sapField_WarningBorderWidth: "var(--sapField_WarningBorderWidth)",
  sapField_WarningBorderStyle: "var(--sapField_WarningBorderStyle)",
  sapField_WarningShadow: "var(--sapField_WarningShadow)",
  sapField_SuccessColor: "var(--sapField_SuccessColor)",
  sapField_SuccessBackground: "var(--sapField_SuccessBackground)",
  sapField_SuccessBackgroundStyle: "var(--sapField_SuccessBackgroundStyle)",
  sapField_SuccessBorderWidth: "var(--sapField_SuccessBorderWidth)",
  sapField_SuccessBorderStyle: "var(--sapField_SuccessBorderStyle)",
  sapField_SuccessShadow: "var(--sapField_SuccessShadow)",
  sapField_InformationColor: "var(--sapField_InformationColor)",
  sapField_InformationBackground: "var(--sapField_InformationBackground)",
  sapField_InformationBackgroundStyle: "var(--sapField_InformationBackgroundStyle)",
  sapField_InformationBorderWidth: "var(--sapField_InformationBorderWidth)",
  sapField_InformationBorderStyle: "var(--sapField_InformationBorderStyle)",
  sapField_InformationShadow: "var(--sapField_InformationShadow)",
  sapField_Selector_Hover_Background: "var(--sapField_Selector_Hover_Background)",
  sapField_Selector_Hover_InvalidBackground: "var(--sapField_Selector_Hover_InvalidBackground)",
  sapField_Selector_Hover_WarningBackground: "var(--sapField_Selector_Hover_WarningBackground)",
  sapField_Selector_Hover_SuccessBackground: "var(--sapField_Selector_Hover_SuccessBackground)",
  sapField_Selector_Hover_InformationBackground: "var(--sapField_Selector_Hover_InformationBackground)",
  sapField_Picker_BorderColor: "var(--sapField_Picker_BorderColor)",
  sapField_Picker_BorderWidth: "var(--sapField_Picker_BorderWidth)",
  sapField_Selector_BorderStyle: "var(--sapField_Selector_BorderStyle)",
  sapField_Selector_ReadOnly_BorderStyle: "var(--sapField_Selector_ReadOnly_BorderStyle)",
  sapField_Selector_InvalidBorderStyle: "var(--sapField_Selector_InvalidBorderStyle)",
  sapField_Selector_WarningBorderStyle: "var(--sapField_Selector_WarningBorderStyle)",
  sapField_Selector_SuccessBorderStyle: "var(--sapField_Selector_SuccessBorderStyle)",
  sapField_Selector_InformationBorderStyle: "var(--sapField_Selector_InformationBorderStyle)",
  sapGroup_TitleBorderWidth: "var(--sapGroup_TitleBorderWidth)",
  sapGroup_TitleBackground: "var(--sapGroup_TitleBackground)",
  sapGroup_TitleBorderColor: "var(--sapGroup_TitleBorderColor)",
  sapGroup_TitleTextColor: "var(--sapGroup_TitleTextColor)",
  sapGroup_Title_FontSize: "var(--sapGroup_Title_FontSize)",
  sapGroup_ContentBackground: "var(--sapGroup_ContentBackground)",
  sapGroup_ContentBorderColor: "var(--sapGroup_ContentBorderColor)",
  sapGroup_BorderWidth: "var(--sapGroup_BorderWidth)",
  sapGroup_BorderCornerRadius: "var(--sapGroup_BorderCornerRadius)",
  sapGroup_FooterBackground: "var(--sapGroup_FooterBackground)",
  sapToolbar_Background: "var(--sapToolbar_Background)",
  sapToolbar_SeparatorColor: "var(--sapToolbar_SeparatorColor)",
  sapList_HeaderBackground: "var(--sapList_HeaderBackground)",
  sapList_HeaderBorderColor: "var(--sapList_HeaderBorderColor)",
  sapList_HeaderTextColor: "var(--sapList_HeaderTextColor)",
  sapList_BorderColor: "var(--sapList_BorderColor)",
  sapList_BorderWidth: "var(--sapList_BorderWidth)",
  sapList_TextColor: "var(--sapList_TextColor)",
  sapList_Active_TextColor: "var(--sapList_Active_TextColor)",
  sapList_Active_Background: "var(--sapList_Active_Background)",
  sapList_SelectionBackgroundColor: "var(--sapList_SelectionBackgroundColor)",
  sapList_SelectionBorderColor: "var(--sapList_SelectionBorderColor)",
  sapList_Hover_SelectionBackground: "var(--sapList_Hover_SelectionBackground)",
  sapList_Background: "var(--sapList_Background)",
  sapList_Hover_Background: "var(--sapList_Hover_Background)",
  sapList_AlternatingBackground: "var(--sapList_AlternatingBackground)",
  sapList_GroupHeaderBackground: "var(--sapList_GroupHeaderBackground)",
  sapList_GroupHeaderBorderColor: "var(--sapList_GroupHeaderBorderColor)",
  sapList_GroupHeaderTextColor: "var(--sapList_GroupHeaderTextColor)",
  sapList_TableGroupHeaderBackground: "var(--sapList_TableGroupHeaderBackground)",
  sapList_TableGroupHeaderBorderColor: "var(--sapList_TableGroupHeaderBorderColor)",
  sapList_TableGroupHeaderTextColor: "var(--sapList_TableGroupHeaderTextColor)",
  sapList_FooterBackground: "var(--sapList_FooterBackground)",
  sapList_FooterTextColor: "var(--sapList_FooterTextColor)",
  sapList_TableFooterBorder: "var(--sapList_TableFooterBorder)",
  sapList_TableFixedBorderColor: "var(--sapList_TableFixedBorderColor)",
  sapList_TableFixedColumnBorderWidth: "var(--sapList_TableFixedColumnBorderWidth)",
  sapList_TableFixedRowBorderWidth: "var(--sapList_TableFixedRowBorderWidth)",
  sapMessage_BorderWidth: "var(--sapMessage_BorderWidth)",
  sapMessage_ErrorBorderColor: "var(--sapMessage_ErrorBorderColor)",
  sapMessage_WarningBorderColor: "var(--sapMessage_WarningBorderColor)",
  sapMessage_SuccessBorderColor: "var(--sapMessage_SuccessBorderColor)",
  sapMessage_InformationBorderColor: "var(--sapMessage_InformationBorderColor)",
  sapMessage_Button_Hover_Background: "var(--sapMessage_Button_Hover_Background)",
  sapPopover_BorderCornerRadius: "var(--sapPopover_BorderCornerRadius)",
  sapProgress_Background: "var(--sapProgress_Background)",
  sapProgress_BorderColor: "var(--sapProgress_BorderColor)",
  sapProgress_TextColor: "var(--sapProgress_TextColor)",
  sapProgress_FontSize: "var(--sapProgress_FontSize)",
  sapProgress_NegativeBackground: "var(--sapProgress_NegativeBackground)",
  sapProgress_NegativeBorderColor: "var(--sapProgress_NegativeBorderColor)",
  sapProgress_NegativeTextColor: "var(--sapProgress_NegativeTextColor)",
  sapProgress_CriticalBackground: "var(--sapProgress_CriticalBackground)",
  sapProgress_CriticalBorderColor: "var(--sapProgress_CriticalBorderColor)",
  sapProgress_CriticalTextColor: "var(--sapProgress_CriticalTextColor)",
  sapProgress_PositiveBackground: "var(--sapProgress_PositiveBackground)",
  sapProgress_PositiveBorderColor: "var(--sapProgress_PositiveBorderColor)",
  sapProgress_PositiveTextColor: "var(--sapProgress_PositiveTextColor)",
  sapProgress_InformationBackground: "var(--sapProgress_InformationBackground)",
  sapProgress_InformationBorderColor: "var(--sapProgress_InformationBorderColor)",
  sapProgress_InformationTextColor: "var(--sapProgress_InformationTextColor)",
  sapProgress_Value_Background: "var(--sapProgress_Value_Background)",
  sapProgress_Value_BorderColor: "var(--sapProgress_Value_BorderColor)",
  sapProgress_Value_TextColor: "var(--sapProgress_Value_TextColor)",
  sapProgress_Value_NegativeBackground: "var(--sapProgress_Value_NegativeBackground)",
  sapProgress_Value_NegativeBorderColor: "var(--sapProgress_Value_NegativeBorderColor)",
  sapProgress_Value_NegativeTextColor: "var(--sapProgress_Value_NegativeTextColor)",
  sapProgress_Value_CriticalBackground: "var(--sapProgress_Value_CriticalBackground)",
  sapProgress_Value_CriticalBorderColor: "var(--sapProgress_Value_CriticalBorderColor)",
  sapProgress_Value_CriticalTextColor: "var(--sapProgress_Value_CriticalTextColor)",
  sapProgress_Value_PositiveBackground: "var(--sapProgress_Value_PositiveBackground)",
  sapProgress_Value_PositiveBorderColor: "var(--sapProgress_Value_PositiveBorderColor)",
  sapProgress_Value_PositiveTextColor: "var(--sapProgress_Value_PositiveTextColor)",
  sapProgress_Value_InformationBackground: "var(--sapProgress_Value_InformationBackground)",
  sapProgress_Value_InformationBorderColor: "var(--sapProgress_Value_InformationBorderColor)",
  sapProgress_Value_InformationTextColor: "var(--sapProgress_Value_InformationTextColor)",
  sapScrollBar_FaceColor: "var(--sapScrollBar_FaceColor)",
  sapScrollBar_TrackColor: "var(--sapScrollBar_TrackColor)",
  sapScrollBar_BorderColor: "var(--sapScrollBar_BorderColor)",
  sapScrollBar_SymbolColor: "var(--sapScrollBar_SymbolColor)",
  sapScrollBar_Dimension: "var(--sapScrollBar_Dimension)",
  sapScrollBar_Hover_FaceColor: "var(--sapScrollBar_Hover_FaceColor)",
  sapSlider_Background: "var(--sapSlider_Background)",
  sapSlider_BorderColor: "var(--sapSlider_BorderColor)",
  sapSlider_Selected_Background: "var(--sapSlider_Selected_Background)",
  sapSlider_Selected_BorderColor: "var(--sapSlider_Selected_BorderColor)",
  sapSlider_Selected_Dimension: "var(--sapSlider_Selected_Dimension)",
  sapSlider_HandleBackground: "var(--sapSlider_HandleBackground)",
  sapSlider_HandleBorderColor: "var(--sapSlider_HandleBorderColor)",
  sapSlider_RangeHandleBackground: "var(--sapSlider_RangeHandleBackground)",
  sapSlider_Hover_HandleBackground: "var(--sapSlider_Hover_HandleBackground)",
  sapSlider_Hover_HandleBorderColor: "var(--sapSlider_Hover_HandleBorderColor)",
  sapSlider_Hover_RangeHandleBackground: "var(--sapSlider_Hover_RangeHandleBackground)",
  sapSlider_Active_HandleBackground: "var(--sapSlider_Active_HandleBackground)",
  sapSlider_Active_HandleBorderColor: "var(--sapSlider_Active_HandleBorderColor)",
  sapSlider_Active_RangeHandleBackground: "var(--sapSlider_Active_RangeHandleBackground)",
  sapPageHeader_Background: "var(--sapPageHeader_Background)",
  sapPageHeader_BorderColor: "var(--sapPageHeader_BorderColor)",
  sapPageHeader_TextColor: "var(--sapPageHeader_TextColor)",
  sapPageFooter_Background: "var(--sapPageFooter_Background)",
  sapPageFooter_BorderColor: "var(--sapPageFooter_BorderColor)",
  sapPageFooter_TextColor: "var(--sapPageFooter_TextColor)",
  sapInfobar_Background: "var(--sapInfobar_Background)",
  sapInfobar_Hover_Background: "var(--sapInfobar_Hover_Background)",
  sapInfobar_Active_Background: "var(--sapInfobar_Active_Background)",
  sapInfobar_NonInteractive_Background: "var(--sapInfobar_NonInteractive_Background)",
  sapInfobar_TextColor: "var(--sapInfobar_TextColor)",
  sapObjectHeader_Background: "var(--sapObjectHeader_Background)",
  sapObjectHeader_Hover_Background: "var(--sapObjectHeader_Hover_Background)",
  sapObjectHeader_BorderColor: "var(--sapObjectHeader_BorderColor)",
  sapObjectHeader_Title_TextColor: "var(--sapObjectHeader_Title_TextColor)",
  sapObjectHeader_Title_FontSize: "var(--sapObjectHeader_Title_FontSize)",
  sapObjectHeader_Title_SnappedFontSize: "var(--sapObjectHeader_Title_SnappedFontSize)",
  sapObjectHeader_Title_FontFamily: "var(--sapObjectHeader_Title_FontFamily)",
  sapObjectHeader_Subtitle_TextColor: "var(--sapObjectHeader_Subtitle_TextColor)",
  sapBlockLayer_Background: "var(--sapBlockLayer_Background)",
  sapBlockLayer_Opacity: "var(--sapBlockLayer_Opacity)",
  sapTab_TextColor: "var(--sapTab_TextColor)",
  sapTab_ForegroundColor: "var(--sapTab_ForegroundColor)",
  sapTab_IconColor: "var(--sapTab_IconColor)",
  sapTab_Background: "var(--sapTab_Background)",
  sapTab_Selected_TextColor: "var(--sapTab_Selected_TextColor)",
  sapTab_Selected_IconColor: "var(--sapTab_Selected_IconColor)",
  sapTab_Selected_Background: "var(--sapTab_Selected_Background)",
  sapTab_Selected_Indicator_Dimension: "var(--sapTab_Selected_Indicator_Dimension)",
  sapTab_Positive_TextColor: "var(--sapTab_Positive_TextColor)",
  sapTab_Positive_ForegroundColor: "var(--sapTab_Positive_ForegroundColor)",
  sapTab_Positive_IconColor: "var(--sapTab_Positive_IconColor)",
  sapTab_Positive_Selected_TextColor: "var(--sapTab_Positive_Selected_TextColor)",
  sapTab_Positive_Selected_IconColor: "var(--sapTab_Positive_Selected_IconColor)",
  sapTab_Positive_Selected_Background: "var(--sapTab_Positive_Selected_Background)",
  sapTab_Negative_TextColor: "var(--sapTab_Negative_TextColor)",
  sapTab_Negative_ForegroundColor: "var(--sapTab_Negative_ForegroundColor)",
  sapTab_Negative_IconColor: "var(--sapTab_Negative_IconColor)",
  sapTab_Negative_Selected_TextColor: "var(--sapTab_Negative_Selected_TextColor)",
  sapTab_Negative_Selected_IconColor: "var(--sapTab_Negative_Selected_IconColor)",
  sapTab_Negative_Selected_Background: "var(--sapTab_Negative_Selected_Background)",
  sapTab_Critical_TextColor: "var(--sapTab_Critical_TextColor)",
  sapTab_Critical_ForegroundColor: "var(--sapTab_Critical_ForegroundColor)",
  sapTab_Critical_IconColor: "var(--sapTab_Critical_IconColor)",
  sapTab_Critical_Selected_TextColor: "var(--sapTab_Critical_Selected_TextColor)",
  sapTab_Critical_Selected_IconColor: "var(--sapTab_Critical_Selected_IconColor)",
  sapTab_Critical_Selected_Background: "var(--sapTab_Critical_Selected_Background)",
  sapTile_Background: "var(--sapTile_Background)",
  sapTile_Hover_Background: "var(--sapTile_Hover_Background)",
  sapTile_Active_Background: "var(--sapTile_Active_Background)",
  sapTile_BorderColor: "var(--sapTile_BorderColor)",
  sapTile_BorderCornerRadius: "var(--sapTile_BorderCornerRadius)",
  sapTile_TitleTextColor: "var(--sapTile_TitleTextColor)",
  sapTile_TextColor: "var(--sapTile_TextColor)",
  sapTile_IconColor: "var(--sapTile_IconColor)",
  sapTile_SeparatorColor: "var(--sapTile_SeparatorColor)",
  sapTile_Interactive_BorderColor: "var(--sapTile_Interactive_BorderColor)",
  sapTile_OverlayBackground: "var(--sapTile_OverlayBackground)",
  sapTile_OverlayForegroundColor: "var(--sapTile_OverlayForegroundColor)",
  sapTile_Hover_ContentBackground: "var(--sapTile_Hover_ContentBackground)",
  sapTile_Active_ContentBackground: "var(--sapTile_Active_ContentBackground)",
  sapAccentColor1: "var(--sapAccentColor1)",
  sapAccentColor2: "var(--sapAccentColor2)",
  sapAccentColor3: "var(--sapAccentColor3)",
  sapAccentColor4: "var(--sapAccentColor4)",
  sapAccentColor5: "var(--sapAccentColor5)",
  sapAccentColor6: "var(--sapAccentColor6)",
  sapAccentColor7: "var(--sapAccentColor7)",
  sapAccentColor8: "var(--sapAccentColor8)",
  sapAccentColor9: "var(--sapAccentColor9)",
  sapAccentColor10: "var(--sapAccentColor10)",
  sapAccentBackgroundColor1: "var(--sapAccentBackgroundColor1)",
  sapAccentBackgroundColor2: "var(--sapAccentBackgroundColor2)",
  sapAccentBackgroundColor3: "var(--sapAccentBackgroundColor3)",
  sapAccentBackgroundColor4: "var(--sapAccentBackgroundColor4)",
  sapAccentBackgroundColor5: "var(--sapAccentBackgroundColor5)",
  sapAccentBackgroundColor6: "var(--sapAccentBackgroundColor6)",
  sapAccentBackgroundColor7: "var(--sapAccentBackgroundColor7)",
  sapAccentBackgroundColor8: "var(--sapAccentBackgroundColor8)",
  sapAccentBackgroundColor9: "var(--sapAccentBackgroundColor9)",
  sapAccentBackgroundColor10: "var(--sapAccentBackgroundColor10)",
  sapIndicationColor_1: "var(--sapIndicationColor_1)",
  sapIndicationColor_1_Background: "var(--sapIndicationColor_1_Background)",
  sapIndicationColor_1_BorderColor: "var(--sapIndicationColor_1_BorderColor)",
  sapIndicationColor_1_TextColor: "var(--sapIndicationColor_1_TextColor)",
  sapIndicationColor_1_Hover_Background: "var(--sapIndicationColor_1_Hover_Background)",
  sapIndicationColor_1_Active_Background: "var(--sapIndicationColor_1_Active_Background)",
  sapIndicationColor_1_Active_BorderColor: "var(--sapIndicationColor_1_Active_BorderColor)",
  sapIndicationColor_1_Active_TextColor: "var(--sapIndicationColor_1_Active_TextColor)",
  sapIndicationColor_1_Selected_Background: "var(--sapIndicationColor_1_Selected_Background)",
  sapIndicationColor_1_Selected_BorderColor: "var(--sapIndicationColor_1_Selected_BorderColor)",
  sapIndicationColor_1_Selected_TextColor: "var(--sapIndicationColor_1_Selected_TextColor)",
  sapIndicationColor_1b: "var(--sapIndicationColor_1b)",
  sapIndicationColor_1b_TextColor: "var(--sapIndicationColor_1b_TextColor)",
  sapIndicationColor_1b_Background: "var(--sapIndicationColor_1b_Background)",
  sapIndicationColor_1b_BorderColor: "var(--sapIndicationColor_1b_BorderColor)",
  sapIndicationColor_1b_Hover_Background: "var(--sapIndicationColor_1b_Hover_Background)",
  sapIndicationColor_2: "var(--sapIndicationColor_2)",
  sapIndicationColor_2_Background: "var(--sapIndicationColor_2_Background)",
  sapIndicationColor_2_BorderColor: "var(--sapIndicationColor_2_BorderColor)",
  sapIndicationColor_2_TextColor: "var(--sapIndicationColor_2_TextColor)",
  sapIndicationColor_2_Hover_Background: "var(--sapIndicationColor_2_Hover_Background)",
  sapIndicationColor_2_Active_Background: "var(--sapIndicationColor_2_Active_Background)",
  sapIndicationColor_2_Active_BorderColor: "var(--sapIndicationColor_2_Active_BorderColor)",
  sapIndicationColor_2_Active_TextColor: "var(--sapIndicationColor_2_Active_TextColor)",
  sapIndicationColor_2_Selected_Background: "var(--sapIndicationColor_2_Selected_Background)",
  sapIndicationColor_2_Selected_BorderColor: "var(--sapIndicationColor_2_Selected_BorderColor)",
  sapIndicationColor_2_Selected_TextColor: "var(--sapIndicationColor_2_Selected_TextColor)",
  sapIndicationColor_2b: "var(--sapIndicationColor_2b)",
  sapIndicationColor_2b_TextColor: "var(--sapIndicationColor_2b_TextColor)",
  sapIndicationColor_2b_Background: "var(--sapIndicationColor_2b_Background)",
  sapIndicationColor_2b_BorderColor: "var(--sapIndicationColor_2b_BorderColor)",
  sapIndicationColor_2b_Hover_Background: "var(--sapIndicationColor_2b_Hover_Background)",
  sapIndicationColor_3: "var(--sapIndicationColor_3)",
  sapIndicationColor_3_Background: "var(--sapIndicationColor_3_Background)",
  sapIndicationColor_3_BorderColor: "var(--sapIndicationColor_3_BorderColor)",
  sapIndicationColor_3_TextColor: "var(--sapIndicationColor_3_TextColor)",
  sapIndicationColor_3_Hover_Background: "var(--sapIndicationColor_3_Hover_Background)",
  sapIndicationColor_3_Active_Background: "var(--sapIndicationColor_3_Active_Background)",
  sapIndicationColor_3_Active_BorderColor: "var(--sapIndicationColor_3_Active_BorderColor)",
  sapIndicationColor_3_Active_TextColor: "var(--sapIndicationColor_3_Active_TextColor)",
  sapIndicationColor_3_Selected_Background: "var(--sapIndicationColor_3_Selected_Background)",
  sapIndicationColor_3_Selected_BorderColor: "var(--sapIndicationColor_3_Selected_BorderColor)",
  sapIndicationColor_3_Selected_TextColor: "var(--sapIndicationColor_3_Selected_TextColor)",
  sapIndicationColor_3b: "var(--sapIndicationColor_3b)",
  sapIndicationColor_3b_TextColor: "var(--sapIndicationColor_3b_TextColor)",
  sapIndicationColor_3b_Background: "var(--sapIndicationColor_3b_Background)",
  sapIndicationColor_3b_BorderColor: "var(--sapIndicationColor_3b_BorderColor)",
  sapIndicationColor_3b_Hover_Background: "var(--sapIndicationColor_3b_Hover_Background)",
  sapIndicationColor_4: "var(--sapIndicationColor_4)",
  sapIndicationColor_4_Background: "var(--sapIndicationColor_4_Background)",
  sapIndicationColor_4_BorderColor: "var(--sapIndicationColor_4_BorderColor)",
  sapIndicationColor_4_TextColor: "var(--sapIndicationColor_4_TextColor)",
  sapIndicationColor_4_Hover_Background: "var(--sapIndicationColor_4_Hover_Background)",
  sapIndicationColor_4_Active_Background: "var(--sapIndicationColor_4_Active_Background)",
  sapIndicationColor_4_Active_BorderColor: "var(--sapIndicationColor_4_Active_BorderColor)",
  sapIndicationColor_4_Active_TextColor: "var(--sapIndicationColor_4_Active_TextColor)",
  sapIndicationColor_4_Selected_Background: "var(--sapIndicationColor_4_Selected_Background)",
  sapIndicationColor_4_Selected_BorderColor: "var(--sapIndicationColor_4_Selected_BorderColor)",
  sapIndicationColor_4_Selected_TextColor: "var(--sapIndicationColor_4_Selected_TextColor)",
  sapIndicationColor_4b: "var(--sapIndicationColor_4b)",
  sapIndicationColor_4b_TextColor: "var(--sapIndicationColor_4b_TextColor)",
  sapIndicationColor_4b_Background: "var(--sapIndicationColor_4b_Background)",
  sapIndicationColor_4b_BorderColor: "var(--sapIndicationColor_4b_BorderColor)",
  sapIndicationColor_4b_Hover_Background: "var(--sapIndicationColor_4b_Hover_Background)",
  sapIndicationColor_5: "var(--sapIndicationColor_5)",
  sapIndicationColor_5_Background: "var(--sapIndicationColor_5_Background)",
  sapIndicationColor_5_BorderColor: "var(--sapIndicationColor_5_BorderColor)",
  sapIndicationColor_5_TextColor: "var(--sapIndicationColor_5_TextColor)",
  sapIndicationColor_5_Hover_Background: "var(--sapIndicationColor_5_Hover_Background)",
  sapIndicationColor_5_Active_Background: "var(--sapIndicationColor_5_Active_Background)",
  sapIndicationColor_5_Active_BorderColor: "var(--sapIndicationColor_5_Active_BorderColor)",
  sapIndicationColor_5_Active_TextColor: "var(--sapIndicationColor_5_Active_TextColor)",
  sapIndicationColor_5_Selected_Background: "var(--sapIndicationColor_5_Selected_Background)",
  sapIndicationColor_5_Selected_BorderColor: "var(--sapIndicationColor_5_Selected_BorderColor)",
  sapIndicationColor_5_Selected_TextColor: "var(--sapIndicationColor_5_Selected_TextColor)",
  sapIndicationColor_5b: "var(--sapIndicationColor_5b)",
  sapIndicationColor_5b_TextColor: "var(--sapIndicationColor_5b_TextColor)",
  sapIndicationColor_5b_Background: "var(--sapIndicationColor_5b_Background)",
  sapIndicationColor_5b_BorderColor: "var(--sapIndicationColor_5b_BorderColor)",
  sapIndicationColor_5b_Hover_Background: "var(--sapIndicationColor_5b_Hover_Background)",
  sapIndicationColor_6: "var(--sapIndicationColor_6)",
  sapIndicationColor_6_Background: "var(--sapIndicationColor_6_Background)",
  sapIndicationColor_6_BorderColor: "var(--sapIndicationColor_6_BorderColor)",
  sapIndicationColor_6_TextColor: "var(--sapIndicationColor_6_TextColor)",
  sapIndicationColor_6_Hover_Background: "var(--sapIndicationColor_6_Hover_Background)",
  sapIndicationColor_6_Active_Background: "var(--sapIndicationColor_6_Active_Background)",
  sapIndicationColor_6_Active_BorderColor: "var(--sapIndicationColor_6_Active_BorderColor)",
  sapIndicationColor_6_Active_TextColor: "var(--sapIndicationColor_6_Active_TextColor)",
  sapIndicationColor_6_Selected_Background: "var(--sapIndicationColor_6_Selected_Background)",
  sapIndicationColor_6_Selected_BorderColor: "var(--sapIndicationColor_6_Selected_BorderColor)",
  sapIndicationColor_6_Selected_TextColor: "var(--sapIndicationColor_6_Selected_TextColor)",
  sapIndicationColor_6b: "var(--sapIndicationColor_6b)",
  sapIndicationColor_6b_TextColor: "var(--sapIndicationColor_6b_TextColor)",
  sapIndicationColor_6b_Background: "var(--sapIndicationColor_6b_Background)",
  sapIndicationColor_6b_BorderColor: "var(--sapIndicationColor_6b_BorderColor)",
  sapIndicationColor_6b_Hover_Background: "var(--sapIndicationColor_6b_Hover_Background)",
  sapIndicationColor_7: "var(--sapIndicationColor_7)",
  sapIndicationColor_7_Background: "var(--sapIndicationColor_7_Background)",
  sapIndicationColor_7_BorderColor: "var(--sapIndicationColor_7_BorderColor)",
  sapIndicationColor_7_TextColor: "var(--sapIndicationColor_7_TextColor)",
  sapIndicationColor_7_Hover_Background: "var(--sapIndicationColor_7_Hover_Background)",
  sapIndicationColor_7_Active_Background: "var(--sapIndicationColor_7_Active_Background)",
  sapIndicationColor_7_Active_BorderColor: "var(--sapIndicationColor_7_Active_BorderColor)",
  sapIndicationColor_7_Active_TextColor: "var(--sapIndicationColor_7_Active_TextColor)",
  sapIndicationColor_7_Selected_Background: "var(--sapIndicationColor_7_Selected_Background)",
  sapIndicationColor_7_Selected_BorderColor: "var(--sapIndicationColor_7_Selected_BorderColor)",
  sapIndicationColor_7_Selected_TextColor: "var(--sapIndicationColor_7_Selected_TextColor)",
  sapIndicationColor_7b: "var(--sapIndicationColor_7b)",
  sapIndicationColor_7b_TextColor: "var(--sapIndicationColor_7b_TextColor)",
  sapIndicationColor_7b_Background: "var(--sapIndicationColor_7b_Background)",
  sapIndicationColor_7b_BorderColor: "var(--sapIndicationColor_7b_BorderColor)",
  sapIndicationColor_7b_Hover_Background: "var(--sapIndicationColor_7b_Hover_Background)",
  sapIndicationColor_8: "var(--sapIndicationColor_8)",
  sapIndicationColor_8_Background: "var(--sapIndicationColor_8_Background)",
  sapIndicationColor_8_BorderColor: "var(--sapIndicationColor_8_BorderColor)",
  sapIndicationColor_8_TextColor: "var(--sapIndicationColor_8_TextColor)",
  sapIndicationColor_8_Hover_Background: "var(--sapIndicationColor_8_Hover_Background)",
  sapIndicationColor_8_Active_Background: "var(--sapIndicationColor_8_Active_Background)",
  sapIndicationColor_8_Active_BorderColor: "var(--sapIndicationColor_8_Active_BorderColor)",
  sapIndicationColor_8_Active_TextColor: "var(--sapIndicationColor_8_Active_TextColor)",
  sapIndicationColor_8_Selected_Background: "var(--sapIndicationColor_8_Selected_Background)",
  sapIndicationColor_8_Selected_BorderColor: "var(--sapIndicationColor_8_Selected_BorderColor)",
  sapIndicationColor_8_Selected_TextColor: "var(--sapIndicationColor_8_Selected_TextColor)",
  sapIndicationColor_8b: "var(--sapIndicationColor_8b)",
  sapIndicationColor_8b_TextColor: "var(--sapIndicationColor_8b_TextColor)",
  sapIndicationColor_8b_Background: "var(--sapIndicationColor_8b_Background)",
  sapIndicationColor_8b_BorderColor: "var(--sapIndicationColor_8b_BorderColor)",
  sapIndicationColor_8b_Hover_Background: "var(--sapIndicationColor_8b_Hover_Background)",
  sapIndicationColor_9: "var(--sapIndicationColor_9)",
  sapIndicationColor_9_Background: "var(--sapIndicationColor_9_Background)",
  sapIndicationColor_9_BorderColor: "var(--sapIndicationColor_9_BorderColor)",
  sapIndicationColor_9_TextColor: "var(--sapIndicationColor_9_TextColor)",
  sapIndicationColor_9_Hover_Background: "var(--sapIndicationColor_9_Hover_Background)",
  sapIndicationColor_9_Active_Background: "var(--sapIndicationColor_9_Active_Background)",
  sapIndicationColor_9_Active_BorderColor: "var(--sapIndicationColor_9_Active_BorderColor)",
  sapIndicationColor_9_Active_TextColor: "var(--sapIndicationColor_9_Active_TextColor)",
  sapIndicationColor_9_Selected_Background: "var(--sapIndicationColor_9_Selected_Background)",
  sapIndicationColor_9_Selected_BorderColor: "var(--sapIndicationColor_9_Selected_BorderColor)",
  sapIndicationColor_9_Selected_TextColor: "var(--sapIndicationColor_9_Selected_TextColor)",
  sapIndicationColor_9b: "var(--sapIndicationColor_9b)",
  sapIndicationColor_9b_TextColor: "var(--sapIndicationColor_9b_TextColor)",
  sapIndicationColor_9b_Background: "var(--sapIndicationColor_9b_Background)",
  sapIndicationColor_9b_BorderColor: "var(--sapIndicationColor_9b_BorderColor)",
  sapIndicationColor_9b_Hover_Background: "var(--sapIndicationColor_9b_Hover_Background)",
  sapIndicationColor_10: "var(--sapIndicationColor_10)",
  sapIndicationColor_10_Background: "var(--sapIndicationColor_10_Background)",
  sapIndicationColor_10_BorderColor: "var(--sapIndicationColor_10_BorderColor)",
  sapIndicationColor_10_TextColor: "var(--sapIndicationColor_10_TextColor)",
  sapIndicationColor_10_Hover_Background: "var(--sapIndicationColor_10_Hover_Background)",
  sapIndicationColor_10_Active_Background: "var(--sapIndicationColor_10_Active_Background)",
  sapIndicationColor_10_Active_BorderColor: "var(--sapIndicationColor_10_Active_BorderColor)",
  sapIndicationColor_10_Active_TextColor: "var(--sapIndicationColor_10_Active_TextColor)",
  sapIndicationColor_10_Selected_Background: "var(--sapIndicationColor_10_Selected_Background)",
  sapIndicationColor_10_Selected_BorderColor: "var(--sapIndicationColor_10_Selected_BorderColor)",
  sapIndicationColor_10_Selected_TextColor: "var(--sapIndicationColor_10_Selected_TextColor)",
  sapIndicationColor_10b: "var(--sapIndicationColor_10b)",
  sapIndicationColor_10b_TextColor: "var(--sapIndicationColor_10b_TextColor)",
  sapIndicationColor_10b_Background: "var(--sapIndicationColor_10b_Background)",
  sapIndicationColor_10b_BorderColor: "var(--sapIndicationColor_10b_BorderColor)",
  sapIndicationColor_10b_Hover_Background: "var(--sapIndicationColor_10b_Hover_Background)",
  sapLegend_WorkingBackground: "var(--sapLegend_WorkingBackground)",
  sapLegend_NonWorkingBackground: "var(--sapLegend_NonWorkingBackground)",
  sapLegend_CurrentDateTime: "var(--sapLegend_CurrentDateTime)",
  sapLegendColor1: "var(--sapLegendColor1)",
  sapLegendColor2: "var(--sapLegendColor2)",
  sapLegendColor3: "var(--sapLegendColor3)",
  sapLegendColor4: "var(--sapLegendColor4)",
  sapLegendColor5: "var(--sapLegendColor5)",
  sapLegendColor6: "var(--sapLegendColor6)",
  sapLegendColor7: "var(--sapLegendColor7)",
  sapLegendColor8: "var(--sapLegendColor8)",
  sapLegendColor9: "var(--sapLegendColor9)",
  sapLegendColor10: "var(--sapLegendColor10)",
  sapLegendColor11: "var(--sapLegendColor11)",
  sapLegendColor12: "var(--sapLegendColor12)",
  sapLegendColor13: "var(--sapLegendColor13)",
  sapLegendColor14: "var(--sapLegendColor14)",
  sapLegendColor15: "var(--sapLegendColor15)",
  sapLegendColor16: "var(--sapLegendColor16)",
  sapLegendColor17: "var(--sapLegendColor17)",
  sapLegendColor18: "var(--sapLegendColor18)",
  sapLegendColor19: "var(--sapLegendColor19)",
  sapLegendColor20: "var(--sapLegendColor20)",
  sapLegendBackgroundColor1: "var(--sapLegendBackgroundColor1)",
  sapLegendBackgroundColor2: "var(--sapLegendBackgroundColor2)",
  sapLegendBackgroundColor3: "var(--sapLegendBackgroundColor3)",
  sapLegendBackgroundColor4: "var(--sapLegendBackgroundColor4)",
  sapLegendBackgroundColor5: "var(--sapLegendBackgroundColor5)",
  sapLegendBackgroundColor6: "var(--sapLegendBackgroundColor6)",
  sapLegendBackgroundColor7: "var(--sapLegendBackgroundColor7)",
  sapLegendBackgroundColor8: "var(--sapLegendBackgroundColor8)",
  sapLegendBackgroundColor9: "var(--sapLegendBackgroundColor9)",
  sapLegendBackgroundColor10: "var(--sapLegendBackgroundColor10)",
  sapLegendBackgroundColor11: "var(--sapLegendBackgroundColor11)",
  sapLegendBackgroundColor12: "var(--sapLegendBackgroundColor12)",
  sapLegendBackgroundColor13: "var(--sapLegendBackgroundColor13)",
  sapLegendBackgroundColor14: "var(--sapLegendBackgroundColor14)",
  sapLegendBackgroundColor15: "var(--sapLegendBackgroundColor15)",
  sapLegendBackgroundColor16: "var(--sapLegendBackgroundColor16)",
  sapLegendBackgroundColor17: "var(--sapLegendBackgroundColor17)",
  sapLegendBackgroundColor18: "var(--sapLegendBackgroundColor18)",
  sapLegendBackgroundColor19: "var(--sapLegendBackgroundColor19)",
  sapLegendBackgroundColor20: "var(--sapLegendBackgroundColor20)",
  sapChart_Background: "var(--sapChart_Background)",
  sapChart_ContrastTextShadow: "var(--sapChart_ContrastTextShadow)",
  sapChart_ContrastShadowColor: "var(--sapChart_ContrastShadowColor)",
  sapChart_ContrastLineColor: "var(--sapChart_ContrastLineColor)",
  sapChart_LineColor_1: "var(--sapChart_LineColor_1)",
  sapChart_LineColor_2: "var(--sapChart_LineColor_2)",
  sapChart_LineColor_3: "var(--sapChart_LineColor_3)",
  sapChart_Choropleth_Background: "var(--sapChart_Choropleth_Background)",
  sapChart_ChoroplethRegion_Background: "var(--sapChart_ChoroplethRegion_Background)",
  sapChart_ChoroplethRegion_BorderColor: "var(--sapChart_ChoroplethRegion_BorderColor)",
  sapChart_Data_TextColor: "var(--sapChart_Data_TextColor)",
  sapChart_Data_ContrastTextColor: "var(--sapChart_Data_ContrastTextColor)",
  sapChart_Data_InteractiveColor: "var(--sapChart_Data_InteractiveColor)",
  sapChart_Data_Active_Background: "var(--sapChart_Data_Active_Background)",
  sapChart_OrderedColor_1: "var(--sapChart_OrderedColor_1)",
  sapChart_OrderedColor_2: "var(--sapChart_OrderedColor_2)",
  sapChart_OrderedColor_3: "var(--sapChart_OrderedColor_3)",
  sapChart_OrderedColor_4: "var(--sapChart_OrderedColor_4)",
  sapChart_OrderedColor_5: "var(--sapChart_OrderedColor_5)",
  sapChart_OrderedColor_6: "var(--sapChart_OrderedColor_6)",
  sapChart_OrderedColor_7: "var(--sapChart_OrderedColor_7)",
  sapChart_OrderedColor_8: "var(--sapChart_OrderedColor_8)",
  sapChart_OrderedColor_9: "var(--sapChart_OrderedColor_9)",
  sapChart_OrderedColor_10: "var(--sapChart_OrderedColor_10)",
  sapChart_OrderedColor_11: "var(--sapChart_OrderedColor_11)",
  sapChart_OrderedColor_12: "var(--sapChart_OrderedColor_12)",
  sapChart_Bad: "var(--sapChart_Bad)",
  sapChart_Critical: "var(--sapChart_Critical)",
  sapChart_Good: "var(--sapChart_Good)",
  sapChart_Neutral: "var(--sapChart_Neutral)",
  sapChart_Sequence_1_Plus3: "var(--sapChart_Sequence_1_Plus3)",
  sapChart_Sequence_1_Plus3_TextColor: "var(--sapChart_Sequence_1_Plus3_TextColor)",
  sapChart_Sequence_1_Plus3_TextShadow: "var(--sapChart_Sequence_1_Plus3_TextShadow)",
  sapChart_Sequence_1_Plus2: "var(--sapChart_Sequence_1_Plus2)",
  sapChart_Sequence_1_Plus2_TextColor: "var(--sapChart_Sequence_1_Plus2_TextColor)",
  sapChart_Sequence_1_Plus2_TextShadow: "var(--sapChart_Sequence_1_Plus2_TextShadow)",
  sapChart_Sequence_1_Plus1: "var(--sapChart_Sequence_1_Plus1)",
  sapChart_Sequence_1_Plus1_TextColor: "var(--sapChart_Sequence_1_Plus1_TextColor)",
  sapChart_Sequence_1_Plus1_TextShadow: "var(--sapChart_Sequence_1_Plus1_TextShadow)",
  sapChart_Sequence_1: "var(--sapChart_Sequence_1)",
  sapChart_Sequence_1_TextColor: "var(--sapChart_Sequence_1_TextColor)",
  sapChart_Sequence_1_TextShadow: "var(--sapChart_Sequence_1_TextShadow)",
  sapChart_Sequence_1_BorderColor: "var(--sapChart_Sequence_1_BorderColor)",
  sapChart_Sequence_1_Minus1: "var(--sapChart_Sequence_1_Minus1)",
  sapChart_Sequence_1_Minus1_TextColor: "var(--sapChart_Sequence_1_Minus1_TextColor)",
  sapChart_Sequence_1_Minus1_TextShadow: "var(--sapChart_Sequence_1_Minus1_TextShadow)",
  sapChart_Sequence_1_Minus2: "var(--sapChart_Sequence_1_Minus2)",
  sapChart_Sequence_1_Minus2_TextColor: "var(--sapChart_Sequence_1_Minus2_TextColor)",
  sapChart_Sequence_1_Minus2_TextShadow: "var(--sapChart_Sequence_1_Minus2_TextShadow)",
  sapChart_Sequence_1_Minus3: "var(--sapChart_Sequence_1_Minus3)",
  sapChart_Sequence_1_Minus3_TextColor: "var(--sapChart_Sequence_1_Minus3_TextColor)",
  sapChart_Sequence_1_Minus3_TextShadow: "var(--sapChart_Sequence_1_Minus3_TextShadow)",
  sapChart_Sequence_1_Minus4: "var(--sapChart_Sequence_1_Minus4)",
  sapChart_Sequence_1_Minus4_TextColor: "var(--sapChart_Sequence_1_Minus4_TextColor)",
  sapChart_Sequence_1_Minus4_TextShadow: "var(--sapChart_Sequence_1_Minus4_TextShadow)",
  sapChart_Sequence_1_Minus5: "var(--sapChart_Sequence_1_Minus5)",
  sapChart_Sequence_1_Minus5_TextColor: "var(--sapChart_Sequence_1_Minus5_TextColor)",
  sapChart_Sequence_1_Minus5_TextShadow: "var(--sapChart_Sequence_1_Minus5_TextShadow)",
  sapChart_Sequence_2_Plus3: "var(--sapChart_Sequence_2_Plus3)",
  sapChart_Sequence_2_Plus3_TextColor: "var(--sapChart_Sequence_2_Plus3_TextColor)",
  sapChart_Sequence_2_Plus3_TextShadow: "var(--sapChart_Sequence_2_Plus3_TextShadow)",
  sapChart_Sequence_2_Plus2: "var(--sapChart_Sequence_2_Plus2)",
  sapChart_Sequence_2_Plus2_TextColor: "var(--sapChart_Sequence_2_Plus2_TextColor)",
  sapChart_Sequence_2_Plus2_TextShadow: "var(--sapChart_Sequence_2_Plus2_TextShadow)",
  sapChart_Sequence_2_Plus1: "var(--sapChart_Sequence_2_Plus1)",
  sapChart_Sequence_2_Plus1_TextColor: "var(--sapChart_Sequence_2_Plus1_TextColor)",
  sapChart_Sequence_2_Plus1_TextShadow: "var(--sapChart_Sequence_2_Plus1_TextShadow)",
  sapChart_Sequence_2: "var(--sapChart_Sequence_2)",
  sapChart_Sequence_2_TextColor: "var(--sapChart_Sequence_2_TextColor)",
  sapChart_Sequence_2_TextShadow: "var(--sapChart_Sequence_2_TextShadow)",
  sapChart_Sequence_2_BorderColor: "var(--sapChart_Sequence_2_BorderColor)",
  sapChart_Sequence_2_Minus1: "var(--sapChart_Sequence_2_Minus1)",
  sapChart_Sequence_2_Minus1_TextColor: "var(--sapChart_Sequence_2_Minus1_TextColor)",
  sapChart_Sequence_2_Minus1_TextShadow: "var(--sapChart_Sequence_2_Minus1_TextShadow)",
  sapChart_Sequence_2_Minus2: "var(--sapChart_Sequence_2_Minus2)",
  sapChart_Sequence_2_Minus2_TextColor: "var(--sapChart_Sequence_2_Minus2_TextColor)",
  sapChart_Sequence_2_Minus2_TextShadow: "var(--sapChart_Sequence_2_Minus2_TextShadow)",
  sapChart_Sequence_2_Minus3: "var(--sapChart_Sequence_2_Minus3)",
  sapChart_Sequence_2_Minus3_TextColor: "var(--sapChart_Sequence_2_Minus3_TextColor)",
  sapChart_Sequence_2_Minus3_TextShadow: "var(--sapChart_Sequence_2_Minus3_TextShadow)",
  sapChart_Sequence_2_Minus4: "var(--sapChart_Sequence_2_Minus4)",
  sapChart_Sequence_2_Minus4_TextColor: "var(--sapChart_Sequence_2_Minus4_TextColor)",
  sapChart_Sequence_2_Minus4_TextShadow: "var(--sapChart_Sequence_2_Minus4_TextShadow)",
  sapChart_Sequence_2_Minus5: "var(--sapChart_Sequence_2_Minus5)",
  sapChart_Sequence_2_Minus5_TextColor: "var(--sapChart_Sequence_2_Minus5_TextColor)",
  sapChart_Sequence_2_Minus5_TextShadow: "var(--sapChart_Sequence_2_Minus5_TextShadow)",
  sapChart_Sequence_3_Plus3: "var(--sapChart_Sequence_3_Plus3)",
  sapChart_Sequence_3_Plus3_TextColor: "var(--sapChart_Sequence_3_Plus3_TextColor)",
  sapChart_Sequence_3_Plus3_TextShadow: "var(--sapChart_Sequence_3_Plus3_TextShadow)",
  sapChart_Sequence_3_Plus2: "var(--sapChart_Sequence_3_Plus2)",
  sapChart_Sequence_3_Plus2_TextColor: "var(--sapChart_Sequence_3_Plus2_TextColor)",
  sapChart_Sequence_3_Plus2_TextShadow: "var(--sapChart_Sequence_3_Plus2_TextShadow)",
  sapChart_Sequence_3_Plus1: "var(--sapChart_Sequence_3_Plus1)",
  sapChart_Sequence_3_Plus1_TextColor: "var(--sapChart_Sequence_3_Plus1_TextColor)",
  sapChart_Sequence_3_Plus1_TextShadow: "var(--sapChart_Sequence_3_Plus1_TextShadow)",
  sapChart_Sequence_3: "var(--sapChart_Sequence_3)",
  sapChart_Sequence_3_TextColor: "var(--sapChart_Sequence_3_TextColor)",
  sapChart_Sequence_3_TextShadow: "var(--sapChart_Sequence_3_TextShadow)",
  sapChart_Sequence_3_BorderColor: "var(--sapChart_Sequence_3_BorderColor)",
  sapChart_Sequence_3_Minus1: "var(--sapChart_Sequence_3_Minus1)",
  sapChart_Sequence_3_Minus1_TextColor: "var(--sapChart_Sequence_3_Minus1_TextColor)",
  sapChart_Sequence_3_Minus1_TextShadow: "var(--sapChart_Sequence_3_Minus1_TextShadow)",
  sapChart_Sequence_3_Minus2: "var(--sapChart_Sequence_3_Minus2)",
  sapChart_Sequence_3_Minus2_TextColor: "var(--sapChart_Sequence_3_Minus2_TextColor)",
  sapChart_Sequence_3_Minus2_TextShadow: "var(--sapChart_Sequence_3_Minus2_TextShadow)",
  sapChart_Sequence_3_Minus3: "var(--sapChart_Sequence_3_Minus3)",
  sapChart_Sequence_3_Minus3_TextColor: "var(--sapChart_Sequence_3_Minus3_TextColor)",
  sapChart_Sequence_3_Minus3_TextShadow: "var(--sapChart_Sequence_3_Minus3_TextShadow)",
  sapChart_Sequence_3_Minus4: "var(--sapChart_Sequence_3_Minus4)",
  sapChart_Sequence_3_Minus4_TextColor: "var(--sapChart_Sequence_3_Minus4_TextColor)",
  sapChart_Sequence_3_Minus4_TextShadow: "var(--sapChart_Sequence_3_Minus4_TextShadow)",
  sapChart_Sequence_3_Minus5: "var(--sapChart_Sequence_3_Minus5)",
  sapChart_Sequence_3_Minus5_TextColor: "var(--sapChart_Sequence_3_Minus5_TextColor)",
  sapChart_Sequence_3_Minus5_TextShadow: "var(--sapChart_Sequence_3_Minus5_TextShadow)",
  sapChart_Sequence_4_Plus3: "var(--sapChart_Sequence_4_Plus3)",
  sapChart_Sequence_4_Plus3_TextColor: "var(--sapChart_Sequence_4_Plus3_TextColor)",
  sapChart_Sequence_4_Plus3_TextShadow: "var(--sapChart_Sequence_4_Plus3_TextShadow)",
  sapChart_Sequence_4_Plus2: "var(--sapChart_Sequence_4_Plus2)",
  sapChart_Sequence_4_Plus2_TextColor: "var(--sapChart_Sequence_4_Plus2_TextColor)",
  sapChart_Sequence_4_Plus2_TextShadow: "var(--sapChart_Sequence_4_Plus2_TextShadow)",
  sapChart_Sequence_4_Plus1: "var(--sapChart_Sequence_4_Plus1)",
  sapChart_Sequence_4_Plus1_TextColor: "var(--sapChart_Sequence_4_Plus1_TextColor)",
  sapChart_Sequence_4_Plus1_TextShadow: "var(--sapChart_Sequence_4_Plus1_TextShadow)",
  sapChart_Sequence_4: "var(--sapChart_Sequence_4)",
  sapChart_Sequence_4_TextColor: "var(--sapChart_Sequence_4_TextColor)",
  sapChart_Sequence_4_TextShadow: "var(--sapChart_Sequence_4_TextShadow)",
  sapChart_Sequence_4_BorderColor: "var(--sapChart_Sequence_4_BorderColor)",
  sapChart_Sequence_4_Minus1: "var(--sapChart_Sequence_4_Minus1)",
  sapChart_Sequence_4_Minus1_TextColor: "var(--sapChart_Sequence_4_Minus1_TextColor)",
  sapChart_Sequence_4_Minus1_TextShadow: "var(--sapChart_Sequence_4_Minus1_TextShadow)",
  sapChart_Sequence_4_Minus2: "var(--sapChart_Sequence_4_Minus2)",
  sapChart_Sequence_4_Minus2_TextColor: "var(--sapChart_Sequence_4_Minus2_TextColor)",
  sapChart_Sequence_4_Minus2_TextShadow: "var(--sapChart_Sequence_4_Minus2_TextShadow)",
  sapChart_Sequence_4_Minus3: "var(--sapChart_Sequence_4_Minus3)",
  sapChart_Sequence_4_Minus3_TextColor: "var(--sapChart_Sequence_4_Minus3_TextColor)",
  sapChart_Sequence_4_Minus3_TextShadow: "var(--sapChart_Sequence_4_Minus3_TextShadow)",
  sapChart_Sequence_4_Minus4: "var(--sapChart_Sequence_4_Minus4)",
  sapChart_Sequence_4_Minus4_TextColor: "var(--sapChart_Sequence_4_Minus4_TextColor)",
  sapChart_Sequence_4_Minus4_TextShadow: "var(--sapChart_Sequence_4_Minus4_TextShadow)",
  sapChart_Sequence_4_Minus5: "var(--sapChart_Sequence_4_Minus5)",
  sapChart_Sequence_4_Minus5_TextColor: "var(--sapChart_Sequence_4_Minus5_TextColor)",
  sapChart_Sequence_4_Minus5_TextShadow: "var(--sapChart_Sequence_4_Minus5_TextShadow)",
  sapChart_Sequence_5_Plus3: "var(--sapChart_Sequence_5_Plus3)",
  sapChart_Sequence_5_Plus3_TextColor: "var(--sapChart_Sequence_5_Plus3_TextColor)",
  sapChart_Sequence_5_Plus3_TextShadow: "var(--sapChart_Sequence_5_Plus3_TextShadow)",
  sapChart_Sequence_5_Plus2: "var(--sapChart_Sequence_5_Plus2)",
  sapChart_Sequence_5_Plus2_TextColor: "var(--sapChart_Sequence_5_Plus2_TextColor)",
  sapChart_Sequence_5_Plus2_TextShadow: "var(--sapChart_Sequence_5_Plus2_TextShadow)",
  sapChart_Sequence_5_Plus1: "var(--sapChart_Sequence_5_Plus1)",
  sapChart_Sequence_5_Plus1_TextColor: "var(--sapChart_Sequence_5_Plus1_TextColor)",
  sapChart_Sequence_5_Plus1_TextShadow: "var(--sapChart_Sequence_5_Plus1_TextShadow)",
  sapChart_Sequence_5: "var(--sapChart_Sequence_5)",
  sapChart_Sequence_5_TextColor: "var(--sapChart_Sequence_5_TextColor)",
  sapChart_Sequence_5_TextShadow: "var(--sapChart_Sequence_5_TextShadow)",
  sapChart_Sequence_5_BorderColor: "var(--sapChart_Sequence_5_BorderColor)",
  sapChart_Sequence_5_Minus1: "var(--sapChart_Sequence_5_Minus1)",
  sapChart_Sequence_5_Minus1_TextColor: "var(--sapChart_Sequence_5_Minus1_TextColor)",
  sapChart_Sequence_5_Minus1_TextShadow: "var(--sapChart_Sequence_5_Minus1_TextShadow)",
  sapChart_Sequence_5_Minus2: "var(--sapChart_Sequence_5_Minus2)",
  sapChart_Sequence_5_Minus2_TextColor: "var(--sapChart_Sequence_5_Minus2_TextColor)",
  sapChart_Sequence_5_Minus2_TextShadow: "var(--sapChart_Sequence_5_Minus2_TextShadow)",
  sapChart_Sequence_5_Minus3: "var(--sapChart_Sequence_5_Minus3)",
  sapChart_Sequence_5_Minus3_TextColor: "var(--sapChart_Sequence_5_Minus3_TextColor)",
  sapChart_Sequence_5_Minus3_TextShadow: "var(--sapChart_Sequence_5_Minus3_TextShadow)",
  sapChart_Sequence_5_Minus4: "var(--sapChart_Sequence_5_Minus4)",
  sapChart_Sequence_5_Minus4_TextColor: "var(--sapChart_Sequence_5_Minus4_TextColor)",
  sapChart_Sequence_5_Minus4_TextShadow: "var(--sapChart_Sequence_5_Minus4_TextShadow)",
  sapChart_Sequence_5_Minus5: "var(--sapChart_Sequence_5_Minus5)",
  sapChart_Sequence_5_Minus5_TextColor: "var(--sapChart_Sequence_5_Minus5_TextColor)",
  sapChart_Sequence_5_Minus5_TextShadow: "var(--sapChart_Sequence_5_Minus5_TextShadow)",
  sapChart_Sequence_6_Plus3: "var(--sapChart_Sequence_6_Plus3)",
  sapChart_Sequence_6_Plus3_TextColor: "var(--sapChart_Sequence_6_Plus3_TextColor)",
  sapChart_Sequence_6_Plus3_TextShadow: "var(--sapChart_Sequence_6_Plus3_TextShadow)",
  sapChart_Sequence_6_Plus2: "var(--sapChart_Sequence_6_Plus2)",
  sapChart_Sequence_6_Plus2_TextColor: "var(--sapChart_Sequence_6_Plus2_TextColor)",
  sapChart_Sequence_6_Plus2_TextShadow: "var(--sapChart_Sequence_6_Plus2_TextShadow)",
  sapChart_Sequence_6_Plus1: "var(--sapChart_Sequence_6_Plus1)",
  sapChart_Sequence_6_Plus1_TextColor: "var(--sapChart_Sequence_6_Plus1_TextColor)",
  sapChart_Sequence_6_Plus1_TextShadow: "var(--sapChart_Sequence_6_Plus1_TextShadow)",
  sapChart_Sequence_6: "var(--sapChart_Sequence_6)",
  sapChart_Sequence_6_TextColor: "var(--sapChart_Sequence_6_TextColor)",
  sapChart_Sequence_6_TextShadow: "var(--sapChart_Sequence_6_TextShadow)",
  sapChart_Sequence_6_BorderColor: "var(--sapChart_Sequence_6_BorderColor)",
  sapChart_Sequence_6_Minus1: "var(--sapChart_Sequence_6_Minus1)",
  sapChart_Sequence_6_Minus1_TextColor: "var(--sapChart_Sequence_6_Minus1_TextColor)",
  sapChart_Sequence_6_Minus1_TextShadow: "var(--sapChart_Sequence_6_Minus1_TextShadow)",
  sapChart_Sequence_6_Minus2: "var(--sapChart_Sequence_6_Minus2)",
  sapChart_Sequence_6_Minus2_TextColor: "var(--sapChart_Sequence_6_Minus2_TextColor)",
  sapChart_Sequence_6_Minus2_TextShadow: "var(--sapChart_Sequence_6_Minus2_TextShadow)",
  sapChart_Sequence_6_Minus3: "var(--sapChart_Sequence_6_Minus3)",
  sapChart_Sequence_6_Minus3_TextColor: "var(--sapChart_Sequence_6_Minus3_TextColor)",
  sapChart_Sequence_6_Minus3_TextShadow: "var(--sapChart_Sequence_6_Minus3_TextShadow)",
  sapChart_Sequence_6_Minus4: "var(--sapChart_Sequence_6_Minus4)",
  sapChart_Sequence_6_Minus4_TextColor: "var(--sapChart_Sequence_6_Minus4_TextColor)",
  sapChart_Sequence_6_Minus4_TextShadow: "var(--sapChart_Sequence_6_Minus4_TextShadow)",
  sapChart_Sequence_6_Minus5: "var(--sapChart_Sequence_6_Minus5)",
  sapChart_Sequence_6_Minus5_TextColor: "var(--sapChart_Sequence_6_Minus5_TextColor)",
  sapChart_Sequence_6_Minus5_TextShadow: "var(--sapChart_Sequence_6_Minus5_TextShadow)",
  sapChart_Sequence_7_Plus3: "var(--sapChart_Sequence_7_Plus3)",
  sapChart_Sequence_7_Plus3_TextColor: "var(--sapChart_Sequence_7_Plus3_TextColor)",
  sapChart_Sequence_7_Plus3_TextShadow: "var(--sapChart_Sequence_7_Plus3_TextShadow)",
  sapChart_Sequence_7_Plus2: "var(--sapChart_Sequence_7_Plus2)",
  sapChart_Sequence_7_Plus2_TextColor: "var(--sapChart_Sequence_7_Plus2_TextColor)",
  sapChart_Sequence_7_Plus2_TextShadow: "var(--sapChart_Sequence_7_Plus2_TextShadow)",
  sapChart_Sequence_7_Plus1: "var(--sapChart_Sequence_7_Plus1)",
  sapChart_Sequence_7_Plus1_TextColor: "var(--sapChart_Sequence_7_Plus1_TextColor)",
  sapChart_Sequence_7_Plus1_TextShadow: "var(--sapChart_Sequence_7_Plus1_TextShadow)",
  sapChart_Sequence_7: "var(--sapChart_Sequence_7)",
  sapChart_Sequence_7_TextColor: "var(--sapChart_Sequence_7_TextColor)",
  sapChart_Sequence_7_TextShadow: "var(--sapChart_Sequence_7_TextShadow)",
  sapChart_Sequence_7_BorderColor: "var(--sapChart_Sequence_7_BorderColor)",
  sapChart_Sequence_7_Minus1: "var(--sapChart_Sequence_7_Minus1)",
  sapChart_Sequence_7_Minus1_TextColor: "var(--sapChart_Sequence_7_Minus1_TextColor)",
  sapChart_Sequence_7_Minus1_TextShadow: "var(--sapChart_Sequence_7_Minus1_TextShadow)",
  sapChart_Sequence_7_Minus2: "var(--sapChart_Sequence_7_Minus2)",
  sapChart_Sequence_7_Minus2_TextColor: "var(--sapChart_Sequence_7_Minus2_TextColor)",
  sapChart_Sequence_7_Minus2_TextShadow: "var(--sapChart_Sequence_7_Minus2_TextShadow)",
  sapChart_Sequence_7_Minus3: "var(--sapChart_Sequence_7_Minus3)",
  sapChart_Sequence_7_Minus3_TextColor: "var(--sapChart_Sequence_7_Minus3_TextColor)",
  sapChart_Sequence_7_Minus3_TextShadow: "var(--sapChart_Sequence_7_Minus3_TextShadow)",
  sapChart_Sequence_7_Minus4: "var(--sapChart_Sequence_7_Minus4)",
  sapChart_Sequence_7_Minus4_TextColor: "var(--sapChart_Sequence_7_Minus4_TextColor)",
  sapChart_Sequence_7_Minus4_TextShadow: "var(--sapChart_Sequence_7_Minus4_TextShadow)",
  sapChart_Sequence_7_Minus5: "var(--sapChart_Sequence_7_Minus5)",
  sapChart_Sequence_7_Minus5_TextColor: "var(--sapChart_Sequence_7_Minus5_TextColor)",
  sapChart_Sequence_7_Minus5_TextShadow: "var(--sapChart_Sequence_7_Minus5_TextShadow)",
  sapChart_Sequence_8_Plus3: "var(--sapChart_Sequence_8_Plus3)",
  sapChart_Sequence_8_Plus3_TextColor: "var(--sapChart_Sequence_8_Plus3_TextColor)",
  sapChart_Sequence_8_Plus3_TextShadow: "var(--sapChart_Sequence_8_Plus3_TextShadow)",
  sapChart_Sequence_8_Plus2: "var(--sapChart_Sequence_8_Plus2)",
  sapChart_Sequence_8_Plus2_TextColor: "var(--sapChart_Sequence_8_Plus2_TextColor)",
  sapChart_Sequence_8_Plus2_TextShadow: "var(--sapChart_Sequence_8_Plus2_TextShadow)",
  sapChart_Sequence_8_Plus1: "var(--sapChart_Sequence_8_Plus1)",
  sapChart_Sequence_8_Plus1_TextColor: "var(--sapChart_Sequence_8_Plus1_TextColor)",
  sapChart_Sequence_8_Plus1_TextShadow: "var(--sapChart_Sequence_8_Plus1_TextShadow)",
  sapChart_Sequence_8: "var(--sapChart_Sequence_8)",
  sapChart_Sequence_8_TextColor: "var(--sapChart_Sequence_8_TextColor)",
  sapChart_Sequence_8_TextShadow: "var(--sapChart_Sequence_8_TextShadow)",
  sapChart_Sequence_8_BorderColor: "var(--sapChart_Sequence_8_BorderColor)",
  sapChart_Sequence_8_Minus1: "var(--sapChart_Sequence_8_Minus1)",
  sapChart_Sequence_8_Minus1_TextColor: "var(--sapChart_Sequence_8_Minus1_TextColor)",
  sapChart_Sequence_8_Minus1_TextShadow: "var(--sapChart_Sequence_8_Minus1_TextShadow)",
  sapChart_Sequence_8_Minus2: "var(--sapChart_Sequence_8_Minus2)",
  sapChart_Sequence_8_Minus2_TextColor: "var(--sapChart_Sequence_8_Minus2_TextColor)",
  sapChart_Sequence_8_Minus2_TextShadow: "var(--sapChart_Sequence_8_Minus2_TextShadow)",
  sapChart_Sequence_8_Minus3: "var(--sapChart_Sequence_8_Minus3)",
  sapChart_Sequence_8_Minus3_TextColor: "var(--sapChart_Sequence_8_Minus3_TextColor)",
  sapChart_Sequence_8_Minus3_TextShadow: "var(--sapChart_Sequence_8_Minus3_TextShadow)",
  sapChart_Sequence_8_Minus4: "var(--sapChart_Sequence_8_Minus4)",
  sapChart_Sequence_8_Minus4_TextColor: "var(--sapChart_Sequence_8_Minus4_TextColor)",
  sapChart_Sequence_8_Minus4_TextShadow: "var(--sapChart_Sequence_8_Minus4_TextShadow)",
  sapChart_Sequence_8_Minus5: "var(--sapChart_Sequence_8_Minus5)",
  sapChart_Sequence_8_Minus5_TextColor: "var(--sapChart_Sequence_8_Minus5_TextColor)",
  sapChart_Sequence_8_Minus5_TextShadow: "var(--sapChart_Sequence_8_Minus5_TextShadow)",
  sapChart_Sequence_9_Plus3: "var(--sapChart_Sequence_9_Plus3)",
  sapChart_Sequence_9_Plus3_TextColor: "var(--sapChart_Sequence_9_Plus3_TextColor)",
  sapChart_Sequence_9_Plus3_TextShadow: "var(--sapChart_Sequence_9_Plus3_TextShadow)",
  sapChart_Sequence_9_Plus2: "var(--sapChart_Sequence_9_Plus2)",
  sapChart_Sequence_9_Plus2_TextColor: "var(--sapChart_Sequence_9_Plus2_TextColor)",
  sapChart_Sequence_9_Plus2_TextShadow: "var(--sapChart_Sequence_9_Plus2_TextShadow)",
  sapChart_Sequence_9_Plus1: "var(--sapChart_Sequence_9_Plus1)",
  sapChart_Sequence_9_Plus1_TextColor: "var(--sapChart_Sequence_9_Plus1_TextColor)",
  sapChart_Sequence_9_Plus1_TextShadow: "var(--sapChart_Sequence_9_Plus1_TextShadow)",
  sapChart_Sequence_9: "var(--sapChart_Sequence_9)",
  sapChart_Sequence_9_TextColor: "var(--sapChart_Sequence_9_TextColor)",
  sapChart_Sequence_9_TextShadow: "var(--sapChart_Sequence_9_TextShadow)",
  sapChart_Sequence_9_BorderColor: "var(--sapChart_Sequence_9_BorderColor)",
  sapChart_Sequence_9_Minus1: "var(--sapChart_Sequence_9_Minus1)",
  sapChart_Sequence_9_Minus1_TextColor: "var(--sapChart_Sequence_9_Minus1_TextColor)",
  sapChart_Sequence_9_Minus1_TextShadow: "var(--sapChart_Sequence_9_Minus1_TextShadow)",
  sapChart_Sequence_9_Minus2: "var(--sapChart_Sequence_9_Minus2)",
  sapChart_Sequence_9_Minus2_TextColor: "var(--sapChart_Sequence_9_Minus2_TextColor)",
  sapChart_Sequence_9_Minus2_TextShadow: "var(--sapChart_Sequence_9_Minus2_TextShadow)",
  sapChart_Sequence_9_Minus3: "var(--sapChart_Sequence_9_Minus3)",
  sapChart_Sequence_9_Minus3_TextColor: "var(--sapChart_Sequence_9_Minus3_TextColor)",
  sapChart_Sequence_9_Minus3_TextShadow: "var(--sapChart_Sequence_9_Minus3_TextShadow)",
  sapChart_Sequence_9_Minus4: "var(--sapChart_Sequence_9_Minus4)",
  sapChart_Sequence_9_Minus4_TextColor: "var(--sapChart_Sequence_9_Minus4_TextColor)",
  sapChart_Sequence_9_Minus4_TextShadow: "var(--sapChart_Sequence_9_Minus4_TextShadow)",
  sapChart_Sequence_9_Minus5: "var(--sapChart_Sequence_9_Minus5)",
  sapChart_Sequence_9_Minus5_TextColor: "var(--sapChart_Sequence_9_Minus5_TextColor)",
  sapChart_Sequence_9_Minus5_TextShadow: "var(--sapChart_Sequence_9_Minus5_TextShadow)",
  sapChart_Sequence_10_Plus3: "var(--sapChart_Sequence_10_Plus3)",
  sapChart_Sequence_10_Plus3_TextColor: "var(--sapChart_Sequence_10_Plus3_TextColor)",
  sapChart_Sequence_10_Plus3_TextShadow: "var(--sapChart_Sequence_10_Plus3_TextShadow)",
  sapChart_Sequence_10_Plus2: "var(--sapChart_Sequence_10_Plus2)",
  sapChart_Sequence_10_Plus2_TextColor: "var(--sapChart_Sequence_10_Plus2_TextColor)",
  sapChart_Sequence_10_Plus2_TextShadow: "var(--sapChart_Sequence_10_Plus2_TextShadow)",
  sapChart_Sequence_10_Plus1: "var(--sapChart_Sequence_10_Plus1)",
  sapChart_Sequence_10_Plus1_TextColor: "var(--sapChart_Sequence_10_Plus1_TextColor)",
  sapChart_Sequence_10_Plus1_TextShadow: "var(--sapChart_Sequence_10_Plus1_TextShadow)",
  sapChart_Sequence_10: "var(--sapChart_Sequence_10)",
  sapChart_Sequence_10_TextColor: "var(--sapChart_Sequence_10_TextColor)",
  sapChart_Sequence_10_TextShadow: "var(--sapChart_Sequence_10_TextShadow)",
  sapChart_Sequence_10_BorderColor: "var(--sapChart_Sequence_10_BorderColor)",
  sapChart_Sequence_10_Minus1: "var(--sapChart_Sequence_10_Minus1)",
  sapChart_Sequence_10_Minus1_TextColor: "var(--sapChart_Sequence_10_Minus1_TextColor)",
  sapChart_Sequence_10_Minus1_TextShadow: "var(--sapChart_Sequence_10_Minus1_TextShadow)",
  sapChart_Sequence_10_Minus2: "var(--sapChart_Sequence_10_Minus2)",
  sapChart_Sequence_10_Minus2_TextColor: "var(--sapChart_Sequence_10_Minus2_TextColor)",
  sapChart_Sequence_10_Minus2_TextShadow: "var(--sapChart_Sequence_10_Minus2_TextShadow)",
  sapChart_Sequence_10_Minus3: "var(--sapChart_Sequence_10_Minus3)",
  sapChart_Sequence_10_Minus3_TextColor: "var(--sapChart_Sequence_10_Minus3_TextColor)",
  sapChart_Sequence_10_Minus3_TextShadow: "var(--sapChart_Sequence_10_Minus3_TextShadow)",
  sapChart_Sequence_10_Minus4: "var(--sapChart_Sequence_10_Minus4)",
  sapChart_Sequence_10_Minus4_TextColor: "var(--sapChart_Sequence_10_Minus4_TextColor)",
  sapChart_Sequence_10_Minus4_TextShadow: "var(--sapChart_Sequence_10_Minus4_TextShadow)",
  sapChart_Sequence_10_Minus5: "var(--sapChart_Sequence_10_Minus5)",
  sapChart_Sequence_10_Minus5_TextColor: "var(--sapChart_Sequence_10_Minus5_TextColor)",
  sapChart_Sequence_10_Minus5_TextShadow: "var(--sapChart_Sequence_10_Minus5_TextShadow)",
  sapChart_Sequence_11_Plus3: "var(--sapChart_Sequence_11_Plus3)",
  sapChart_Sequence_11_Plus3_TextColor: "var(--sapChart_Sequence_11_Plus3_TextColor)",
  sapChart_Sequence_11_Plus3_TextShadow: "var(--sapChart_Sequence_11_Plus3_TextShadow)",
  sapChart_Sequence_11_Plus2: "var(--sapChart_Sequence_11_Plus2)",
  sapChart_Sequence_11_Plus2_TextColor: "var(--sapChart_Sequence_11_Plus2_TextColor)",
  sapChart_Sequence_11_Plus2_TextShadow: "var(--sapChart_Sequence_11_Plus2_TextShadow)",
  sapChart_Sequence_11_Plus1: "var(--sapChart_Sequence_11_Plus1)",
  sapChart_Sequence_11_Plus1_TextColor: "var(--sapChart_Sequence_11_Plus1_TextColor)",
  sapChart_Sequence_11_Plus1_TextShadow: "var(--sapChart_Sequence_11_Plus1_TextShadow)",
  sapChart_Sequence_11: "var(--sapChart_Sequence_11)",
  sapChart_Sequence_11_TextColor: "var(--sapChart_Sequence_11_TextColor)",
  sapChart_Sequence_11_TextShadow: "var(--sapChart_Sequence_11_TextShadow)",
  sapChart_Sequence_11_BorderColor: "var(--sapChart_Sequence_11_BorderColor)",
  sapChart_Sequence_11_Minus1: "var(--sapChart_Sequence_11_Minus1)",
  sapChart_Sequence_11_Minus1_TextColor: "var(--sapChart_Sequence_11_Minus1_TextColor)",
  sapChart_Sequence_11_Minus1_TextShadow: "var(--sapChart_Sequence_11_Minus1_TextShadow)",
  sapChart_Sequence_11_Minus2: "var(--sapChart_Sequence_11_Minus2)",
  sapChart_Sequence_11_Minus2_TextColor: "var(--sapChart_Sequence_11_Minus2_TextColor)",
  sapChart_Sequence_11_Minus2_TextShadow: "var(--sapChart_Sequence_11_Minus2_TextShadow)",
  sapChart_Sequence_11_Minus3: "var(--sapChart_Sequence_11_Minus3)",
  sapChart_Sequence_11_Minus3_TextColor: "var(--sapChart_Sequence_11_Minus3_TextColor)",
  sapChart_Sequence_11_Minus3_TextShadow: "var(--sapChart_Sequence_11_Minus3_TextShadow)",
  sapChart_Sequence_11_Minus4: "var(--sapChart_Sequence_11_Minus4)",
  sapChart_Sequence_11_Minus4_TextColor: "var(--sapChart_Sequence_11_Minus4_TextColor)",
  sapChart_Sequence_11_Minus4_TextShadow: "var(--sapChart_Sequence_11_Minus4_TextShadow)",
  sapChart_Sequence_11_Minus5: "var(--sapChart_Sequence_11_Minus5)",
  sapChart_Sequence_11_Minus5_TextColor: "var(--sapChart_Sequence_11_Minus5_TextColor)",
  sapChart_Sequence_11_Minus5_TextShadow: "var(--sapChart_Sequence_11_Minus5_TextShadow)",
  sapChart_Sequence_12_Plus3: "var(--sapChart_Sequence_12_Plus3)",
  sapChart_Sequence_12_Plus3_TextColor: "var(--sapChart_Sequence_12_Plus3_TextColor)",
  sapChart_Sequence_12_Plus3_TextShadow: "var(--sapChart_Sequence_12_Plus3_TextShadow)",
  sapChart_Sequence_12_Plus2: "var(--sapChart_Sequence_12_Plus2)",
  sapChart_Sequence_12_Plus2_TextColor: "var(--sapChart_Sequence_12_Plus2_TextColor)",
  sapChart_Sequence_12_Plus2_TextShadow: "var(--sapChart_Sequence_12_Plus2_TextShadow)",
  sapChart_Sequence_12_Plus1: "var(--sapChart_Sequence_12_Plus1)",
  sapChart_Sequence_12_Plus1_TextColor: "var(--sapChart_Sequence_12_Plus1_TextColor)",
  sapChart_Sequence_12_Plus1_TextShadow: "var(--sapChart_Sequence_12_Plus1_TextShadow)",
  sapChart_Sequence_12: "var(--sapChart_Sequence_12)",
  sapChart_Sequence_12_TextColor: "var(--sapChart_Sequence_12_TextColor)",
  sapChart_Sequence_12_TextShadow: "var(--sapChart_Sequence_12_TextShadow)",
  sapChart_Sequence_12_BorderColor: "var(--sapChart_Sequence_12_BorderColor)",
  sapChart_Sequence_12_Minus1: "var(--sapChart_Sequence_12_Minus1)",
  sapChart_Sequence_12_Minus1_TextColor: "var(--sapChart_Sequence_12_Minus1_TextColor)",
  sapChart_Sequence_12_Minus1_TextShadow: "var(--sapChart_Sequence_12_Minus1_TextShadow)",
  sapChart_Sequence_12_Minus2: "var(--sapChart_Sequence_12_Minus2)",
  sapChart_Sequence_12_Minus2_TextColor: "var(--sapChart_Sequence_12_Minus2_TextColor)",
  sapChart_Sequence_12_Minus2_TextShadow: "var(--sapChart_Sequence_12_Minus2_TextShadow)",
  sapChart_Sequence_12_Minus3: "var(--sapChart_Sequence_12_Minus3)",
  sapChart_Sequence_12_Minus3_TextColor: "var(--sapChart_Sequence_12_Minus3_TextColor)",
  sapChart_Sequence_12_Minus3_TextShadow: "var(--sapChart_Sequence_12_Minus3_TextShadow)",
  sapChart_Sequence_12_Minus4: "var(--sapChart_Sequence_12_Minus4)",
  sapChart_Sequence_12_Minus4_TextColor: "var(--sapChart_Sequence_12_Minus4_TextColor)",
  sapChart_Sequence_12_Minus4_TextShadow: "var(--sapChart_Sequence_12_Minus4_TextShadow)",
  sapChart_Sequence_12_Minus5: "var(--sapChart_Sequence_12_Minus5)",
  sapChart_Sequence_12_Minus5_TextColor: "var(--sapChart_Sequence_12_Minus5_TextColor)",
  sapChart_Sequence_12_Minus5_TextShadow: "var(--sapChart_Sequence_12_Minus5_TextShadow)",
  sapChart_Sequence_Bad_Plus3: "var(--sapChart_Sequence_Bad_Plus3)",
  sapChart_Sequence_Bad_Plus3_TextColor: "var(--sapChart_Sequence_Bad_Plus3_TextColor)",
  sapChart_Sequence_Bad_Plus3_TextShadow: "var(--sapChart_Sequence_Bad_Plus3_TextShadow)",
  sapChart_Sequence_Bad_Plus2: "var(--sapChart_Sequence_Bad_Plus2)",
  sapChart_Sequence_Bad_Plus2_TextColor: "var(--sapChart_Sequence_Bad_Plus2_TextColor)",
  sapChart_Sequence_Bad_Plus2_TextShadow: "var(--sapChart_Sequence_Bad_Plus2_TextShadow)",
  sapChart_Sequence_Bad_Plus1: "var(--sapChart_Sequence_Bad_Plus1)",
  sapChart_Sequence_Bad_Plus1_TextColor: "var(--sapChart_Sequence_Bad_Plus1_TextColor)",
  sapChart_Sequence_Bad_Plus1_TextShadow: "var(--sapChart_Sequence_Bad_Plus1_TextShadow)",
  sapChart_Sequence_Bad: "var(--sapChart_Sequence_Bad)",
  sapChart_Sequence_Bad_TextColor: "var(--sapChart_Sequence_Bad_TextColor)",
  sapChart_Sequence_Bad_TextShadow: "var(--sapChart_Sequence_Bad_TextShadow)",
  sapChart_Sequence_Bad_BorderColor: "var(--sapChart_Sequence_Bad_BorderColor)",
  sapChart_Sequence_Bad_Minus1: "var(--sapChart_Sequence_Bad_Minus1)",
  sapChart_Sequence_Bad_Minus1_TextColor: "var(--sapChart_Sequence_Bad_Minus1_TextColor)",
  sapChart_Sequence_Bad_Minus1_TextShadow: "var(--sapChart_Sequence_Bad_Minus1_TextShadow)",
  sapChart_Sequence_Bad_Minus2: "var(--sapChart_Sequence_Bad_Minus2)",
  sapChart_Sequence_Bad_Minus2_TextColor: "var(--sapChart_Sequence_Bad_Minus2_TextColor)",
  sapChart_Sequence_Bad_Minus2_TextShadow: "var(--sapChart_Sequence_Bad_Minus2_TextShadow)",
  sapChart_Sequence_Bad_Minus3: "var(--sapChart_Sequence_Bad_Minus3)",
  sapChart_Sequence_Bad_Minus3_TextColor: "var(--sapChart_Sequence_Bad_Minus3_TextColor)",
  sapChart_Sequence_Bad_Minus3_TextShadow: "var(--sapChart_Sequence_Bad_Minus3_TextShadow)",
  sapChart_Sequence_Bad_Minus4: "var(--sapChart_Sequence_Bad_Minus4)",
  sapChart_Sequence_Bad_Minus4_TextColor: "var(--sapChart_Sequence_Bad_Minus4_TextColor)",
  sapChart_Sequence_Bad_Minus4_TextShadow: "var(--sapChart_Sequence_Bad_Minus4_TextShadow)",
  sapChart_Sequence_Bad_Minus5: "var(--sapChart_Sequence_Bad_Minus5)",
  sapChart_Sequence_Bad_Minus5_TextColor: "var(--sapChart_Sequence_Bad_Minus5_TextColor)",
  sapChart_Sequence_Bad_Minus5_TextShadow: "var(--sapChart_Sequence_Bad_Minus5_TextShadow)",
  sapChart_Sequence_Critical_Plus3: "var(--sapChart_Sequence_Critical_Plus3)",
  sapChart_Sequence_Critical_Plus3_TextColor: "var(--sapChart_Sequence_Critical_Plus3_TextColor)",
  sapChart_Sequence_Critical_Plus3_TextShadow: "var(--sapChart_Sequence_Critical_Plus3_TextShadow)",
  sapChart_Sequence_Critical_Plus2: "var(--sapChart_Sequence_Critical_Plus2)",
  sapChart_Sequence_Critical_Plus2_TextColor: "var(--sapChart_Sequence_Critical_Plus2_TextColor)",
  sapChart_Sequence_Critical_Plus2_TextShadow: "var(--sapChart_Sequence_Critical_Plus2_TextShadow)",
  sapChart_Sequence_Critical_Plus1: "var(--sapChart_Sequence_Critical_Plus1)",
  sapChart_Sequence_Critical_Plus1_TextColor: "var(--sapChart_Sequence_Critical_Plus1_TextColor)",
  sapChart_Sequence_Critical_Plus1_TextShadow: "var(--sapChart_Sequence_Critical_Plus1_TextShadow)",
  sapChart_Sequence_Critical: "var(--sapChart_Sequence_Critical)",
  sapChart_Sequence_Critical_TextColor: "var(--sapChart_Sequence_Critical_TextColor)",
  sapChart_Sequence_Critical_TextShadow: "var(--sapChart_Sequence_Critical_TextShadow)",
  sapChart_Sequence_Critical_BorderColor: "var(--sapChart_Sequence_Critical_BorderColor)",
  sapChart_Sequence_Critical_Minus1: "var(--sapChart_Sequence_Critical_Minus1)",
  sapChart_Sequence_Critical_Minus1_TextColor: "var(--sapChart_Sequence_Critical_Minus1_TextColor)",
  sapChart_Sequence_Critical_Minus1_TextShadow: "var(--sapChart_Sequence_Critical_Minus1_TextShadow)",
  sapChart_Sequence_Critical_Minus2: "var(--sapChart_Sequence_Critical_Minus2)",
  sapChart_Sequence_Critical_Minus2_TextColor: "var(--sapChart_Sequence_Critical_Minus2_TextColor)",
  sapChart_Sequence_Critical_Minus2_TextShadow: "var(--sapChart_Sequence_Critical_Minus2_TextShadow)",
  sapChart_Sequence_Critical_Minus3: "var(--sapChart_Sequence_Critical_Minus3)",
  sapChart_Sequence_Critical_Minus3_TextColor: "var(--sapChart_Sequence_Critical_Minus3_TextColor)",
  sapChart_Sequence_Critical_Minus3_TextShadow: "var(--sapChart_Sequence_Critical_Minus3_TextShadow)",
  sapChart_Sequence_Critical_Minus4: "var(--sapChart_Sequence_Critical_Minus4)",
  sapChart_Sequence_Critical_Minus4_TextColor: "var(--sapChart_Sequence_Critical_Minus4_TextColor)",
  sapChart_Sequence_Critical_Minus4_TextShadow: "var(--sapChart_Sequence_Critical_Minus4_TextShadow)",
  sapChart_Sequence_Critical_Minus5: "var(--sapChart_Sequence_Critical_Minus5)",
  sapChart_Sequence_Critical_Minus5_TextColor: "var(--sapChart_Sequence_Critical_Minus5_TextColor)",
  sapChart_Sequence_Critical_Minus5_TextShadow: "var(--sapChart_Sequence_Critical_Minus5_TextShadow)",
  sapChart_Sequence_Good_Plus3: "var(--sapChart_Sequence_Good_Plus3)",
  sapChart_Sequence_Good_Plus3_TextColor: "var(--sapChart_Sequence_Good_Plus3_TextColor)",
  sapChart_Sequence_Good_Plus3_TextShadow: "var(--sapChart_Sequence_Good_Plus3_TextShadow)",
  sapChart_Sequence_Good_Plus2: "var(--sapChart_Sequence_Good_Plus2)",
  sapChart_Sequence_Good_Plus2_TextColor: "var(--sapChart_Sequence_Good_Plus2_TextColor)",
  sapChart_Sequence_Good_Plus2_TextShadow: "var(--sapChart_Sequence_Good_Plus2_TextShadow)",
  sapChart_Sequence_Good_Plus1: "var(--sapChart_Sequence_Good_Plus1)",
  sapChart_Sequence_Good_Plus1_TextColor: "var(--sapChart_Sequence_Good_Plus1_TextColor)",
  sapChart_Sequence_Good_Plus1_TextShadow: "var(--sapChart_Sequence_Good_Plus1_TextShadow)",
  sapChart_Sequence_Good: "var(--sapChart_Sequence_Good)",
  sapChart_Sequence_Good_TextColor: "var(--sapChart_Sequence_Good_TextColor)",
  sapChart_Sequence_Good_TextShadow: "var(--sapChart_Sequence_Good_TextShadow)",
  sapChart_Sequence_Good_BorderColor: "var(--sapChart_Sequence_Good_BorderColor)",
  sapChart_Sequence_Good_Minus1: "var(--sapChart_Sequence_Good_Minus1)",
  sapChart_Sequence_Good_Minus1_TextColor: "var(--sapChart_Sequence_Good_Minus1_TextColor)",
  sapChart_Sequence_Good_Minus1_TextShadow: "var(--sapChart_Sequence_Good_Minus1_TextShadow)",
  sapChart_Sequence_Good_Minus2: "var(--sapChart_Sequence_Good_Minus2)",
  sapChart_Sequence_Good_Minus2_TextColor: "var(--sapChart_Sequence_Good_Minus2_TextColor)",
  sapChart_Sequence_Good_Minus2_TextShadow: "var(--sapChart_Sequence_Good_Minus2_TextShadow)",
  sapChart_Sequence_Good_Minus3: "var(--sapChart_Sequence_Good_Minus3)",
  sapChart_Sequence_Good_Minus3_TextColor: "var(--sapChart_Sequence_Good_Minus3_TextColor)",
  sapChart_Sequence_Good_Minus3_TextShadow: "var(--sapChart_Sequence_Good_Minus3_TextShadow)",
  sapChart_Sequence_Good_Minus4: "var(--sapChart_Sequence_Good_Minus4)",
  sapChart_Sequence_Good_Minus4_TextColor: "var(--sapChart_Sequence_Good_Minus4_TextColor)",
  sapChart_Sequence_Good_Minus4_TextShadow: "var(--sapChart_Sequence_Good_Minus4_TextShadow)",
  sapChart_Sequence_Good_Minus5: "var(--sapChart_Sequence_Good_Minus5)",
  sapChart_Sequence_Good_Minus5_TextColor: "var(--sapChart_Sequence_Good_Minus5_TextColor)",
  sapChart_Sequence_Good_Minus5_TextShadow: "var(--sapChart_Sequence_Good_Minus5_TextShadow)",
  sapChart_Sequence_Neutral_Plus3: "var(--sapChart_Sequence_Neutral_Plus3)",
  sapChart_Sequence_Neutral_Plus3_TextColor: "var(--sapChart_Sequence_Neutral_Plus3_TextColor)",
  sapChart_Sequence_Neutral_Plus3_TextShadow: "var(--sapChart_Sequence_Neutral_Plus3_TextShadow)",
  sapChart_Sequence_Neutral_Plus2: "var(--sapChart_Sequence_Neutral_Plus2)",
  sapChart_Sequence_Neutral_Plus2_TextColor: "var(--sapChart_Sequence_Neutral_Plus2_TextColor)",
  sapChart_Sequence_Neutral_Plus2_TextShadow: "var(--sapChart_Sequence_Neutral_Plus2_TextShadow)",
  sapChart_Sequence_Neutral_Plus1: "var(--sapChart_Sequence_Neutral_Plus1)",
  sapChart_Sequence_Neutral_Plus1_TextColor: "var(--sapChart_Sequence_Neutral_Plus1_TextColor)",
  sapChart_Sequence_Neutral_Plus1_TextShadow: "var(--sapChart_Sequence_Neutral_Plus1_TextShadow)",
  sapChart_Sequence_Neutral: "var(--sapChart_Sequence_Neutral)",
  sapChart_Sequence_Neutral_TextColor: "var(--sapChart_Sequence_Neutral_TextColor)",
  sapChart_Sequence_Neutral_TextShadow: "var(--sapChart_Sequence_Neutral_TextShadow)",
  sapChart_Sequence_Neutral_BorderColor: "var(--sapChart_Sequence_Neutral_BorderColor)",
  sapChart_Sequence_Neutral_Minus1: "var(--sapChart_Sequence_Neutral_Minus1)",
  sapChart_Sequence_Neutral_Minus1_TextColor: "var(--sapChart_Sequence_Neutral_Minus1_TextColor)",
  sapChart_Sequence_Neutral_Minus1_TextShadow: "var(--sapChart_Sequence_Neutral_Minus1_TextShadow)",
  sapChart_Sequence_Neutral_Minus2: "var(--sapChart_Sequence_Neutral_Minus2)",
  sapChart_Sequence_Neutral_Minus2_TextColor: "var(--sapChart_Sequence_Neutral_Minus2_TextColor)",
  sapChart_Sequence_Neutral_Minus2_TextShadow: "var(--sapChart_Sequence_Neutral_Minus2_TextShadow)",
  sapChart_Sequence_Neutral_Minus3: "var(--sapChart_Sequence_Neutral_Minus3)",
  sapChart_Sequence_Neutral_Minus3_TextColor: "var(--sapChart_Sequence_Neutral_Minus3_TextColor)",
  sapChart_Sequence_Neutral_Minus3_TextShadow: "var(--sapChart_Sequence_Neutral_Minus3_TextShadow)",
  sapChart_Sequence_Neutral_Minus4: "var(--sapChart_Sequence_Neutral_Minus4)",
  sapChart_Sequence_Neutral_Minus4_TextColor: "var(--sapChart_Sequence_Neutral_Minus4_TextColor)",
  sapChart_Sequence_Neutral_Minus4_TextShadow: "var(--sapChart_Sequence_Neutral_Minus4_TextShadow)",
  sapChart_Sequence_Neutral_Minus5: "var(--sapChart_Sequence_Neutral_Minus5)",
  sapChart_Sequence_Neutral_Minus5_TextColor: "var(--sapChart_Sequence_Neutral_Minus5_TextColor)",
  sapChart_Sequence_Neutral_Minus5_TextShadow: "var(--sapChart_Sequence_Neutral_Minus5_TextShadow)",
  "sapFontUrl_SAP-icons_ttf": "var(--sapFontUrl_SAP-icons_ttf)",
  "sapFontUrl_SAP-icons_woff": "var(--sapFontUrl_SAP-icons_woff)",
  "sapFontUrl_SAP-icons_woff2": "var(--sapFontUrl_SAP-icons_woff2)",
  "sapFontUrl_SAP-icons-TNT_ttf": "var(--sapFontUrl_SAP-icons-TNT_ttf)",
  "sapFontUrl_SAP-icons-TNT_woff": "var(--sapFontUrl_SAP-icons-TNT_woff)",
  "sapFontUrl_SAP-icons-TNT_woff2": "var(--sapFontUrl_SAP-icons-TNT_woff2)",
  "sapFontUrl_SAP-icons-Business-Suite_ttf": "var(--sapFontUrl_SAP-icons-Business-Suite_ttf)",
  "sapFontUrl_SAP-icons-Business-Suite_woff": "var(--sapFontUrl_SAP-icons-Business-Suite_woff)",
  "sapFontUrl_SAP-icons-Business-Suite_woff2": "var(--sapFontUrl_SAP-icons-Business-Suite_woff2)",
  sapFontUrl_72_Regular_woff2: "var(--sapFontUrl_72_Regular_woff2)",
  sapFontUrl_72_Regular_woff: "var(--sapFontUrl_72_Regular_woff)",
  sapFontUrl_72_Regular_full_woff2: "var(--sapFontUrl_72_Regular_full_woff2)",
  sapFontUrl_72_Regular_full_woff: "var(--sapFontUrl_72_Regular_full_woff)",
  sapFontUrl_72_Bold_woff2: "var(--sapFontUrl_72_Bold_woff2)",
  sapFontUrl_72_Bold_woff: "var(--sapFontUrl_72_Bold_woff)",
  sapFontUrl_72_Bold_full_woff2: "var(--sapFontUrl_72_Bold_full_woff2)",
  sapFontUrl_72_Bold_full_woff: "var(--sapFontUrl_72_Bold_full_woff)",
  sapFontUrl_72_Semibold_woff2: "var(--sapFontUrl_72_Semibold_woff2)",
  sapFontUrl_72_Semibold_woff: "var(--sapFontUrl_72_Semibold_woff)",
  sapFontUrl_72_Semibold_full_woff2: "var(--sapFontUrl_72_Semibold_full_woff2)",
  sapFontUrl_72_Semibold_full_woff: "var(--sapFontUrl_72_Semibold_full_woff)",
  sapFontUrl_72_SemiboldDuplex_woff2: "var(--sapFontUrl_72_SemiboldDuplex_woff2)",
  sapFontUrl_72_SemiboldDuplex_woff: "var(--sapFontUrl_72_SemiboldDuplex_woff)",
  sapFontUrl_72_SemiboldDuplex_full_woff2: "var(--sapFontUrl_72_SemiboldDuplex_full_woff2)",
  sapFontUrl_72_SemiboldDuplex_full_woff: "var(--sapFontUrl_72_SemiboldDuplex_full_woff)",
  sapFontUrl_72_Light_woff2: "var(--sapFontUrl_72_Light_woff2)",
  sapFontUrl_72_Light_woff: "var(--sapFontUrl_72_Light_woff)",
  sapFontUrl_72_Light_full_woff2: "var(--sapFontUrl_72_Light_full_woff2)",
  sapFontUrl_72_Light_full_woff: "var(--sapFontUrl_72_Light_full_woff)",
  sapFontUrl_72_Black_woff2: "var(--sapFontUrl_72_Black_woff2)",
  sapFontUrl_72_Black_woff: "var(--sapFontUrl_72_Black_woff)",
  sapFontUrl_72_Black_full_woff2: "var(--sapFontUrl_72_Black_full_woff2)",
  sapFontUrl_72_Black_full_woff: "var(--sapFontUrl_72_Black_full_woff)",
  sapFontUrl_72_BoldItalic_woff2: "var(--sapFontUrl_72_BoldItalic_woff2)",
  sapFontUrl_72_BoldItalic_woff: "var(--sapFontUrl_72_BoldItalic_woff)",
  sapFontUrl_72_BoldItalic_full_woff2: "var(--sapFontUrl_72_BoldItalic_full_woff2)",
  sapFontUrl_72_BoldItalic_full_woff: "var(--sapFontUrl_72_BoldItalic_full_woff)",
  sapFontUrl_72_Condensed_woff2: "var(--sapFontUrl_72_Condensed_woff2)",
  sapFontUrl_72_Condensed_woff: "var(--sapFontUrl_72_Condensed_woff)",
  sapFontUrl_72_Condensed_full_woff2: "var(--sapFontUrl_72_Condensed_full_woff2)",
  sapFontUrl_72_Condensed_full_woff: "var(--sapFontUrl_72_Condensed_full_woff)",
  sapFontUrl_72_CondensedBold_woff2: "var(--sapFontUrl_72_CondensedBold_woff2)",
  sapFontUrl_72_CondensedBold_woff: "var(--sapFontUrl_72_CondensedBold_woff)",
  sapFontUrl_72_CondensedBold_full_woff2: "var(--sapFontUrl_72_CondensedBold_full_woff2)",
  sapFontUrl_72_CondensedBold_full_woff: "var(--sapFontUrl_72_CondensedBold_full_woff)",
  sapFontUrl_72_Italic_woff2: "var(--sapFontUrl_72_Italic_woff2)",
  sapFontUrl_72_Italic_woff: "var(--sapFontUrl_72_Italic_woff)",
  sapFontUrl_72_Italic_full_woff2: "var(--sapFontUrl_72_Italic_full_woff2)",
  sapFontUrl_72_Italic_full_woff: "var(--sapFontUrl_72_Italic_full_woff)",
  sapFontUrl_72Mono_Regular_woff2: "var(--sapFontUrl_72Mono_Regular_woff2)",
  sapFontUrl_72Mono_Regular_woff: "var(--sapFontUrl_72Mono_Regular_woff)",
  sapFontUrl_72Mono_Regular_full_woff2: "var(--sapFontUrl_72Mono_Regular_full_woff2)",
  sapFontUrl_72Mono_Regular_full_woff: "var(--sapFontUrl_72Mono_Regular_full_woff)",
  sapFontUrl_72Mono_Bold_woff2: "var(--sapFontUrl_72Mono_Bold_woff2)",
  sapFontUrl_72Mono_Bold_woff: "var(--sapFontUrl_72Mono_Bold_woff)",
  sapFontUrl_72Mono_Bold_full_woff2: "var(--sapFontUrl_72Mono_Bold_full_woff2)",
  sapFontUrl_72Mono_Bold_full_woff: "var(--sapFontUrl_72Mono_Bold_full_woff)",
  sapSapThemeId: "var(--sapSapThemeId)",
  sapBreakpoint_S_Min: "var(--sapBreakpoint_S_Min)",
  sapBreakpoint_M_Min: "var(--sapBreakpoint_M_Min)",
  sapBreakpoint_L_Min: "var(--sapBreakpoint_L_Min)",
  sapBreakpoint_XL_Min: "var(--sapBreakpoint_XL_Min)"
};

// node_modules/@ui5/webcomponents-react-base/dist/wrapper/withWebComponent.js
var import_jsx_runtime = __toESM(require_jsx_runtime(), 1);
var import_react8 = __toESM(require_react(), 1);

// node_modules/@ui5/webcomponents-react-base/dist/utils/debounce.js
var now = Date.now || (() => (/* @__PURE__ */ new Date()).getTime());
var debounce = (func, wait) => {
  let timeout;
  let previous;
  let args;
  let result;
  let context;
  const later = () => {
    const passed = now() - previous;
    if (wait > passed) {
      timeout = setTimeout(later, wait - passed);
    } else {
      timeout = null;
      result = func.apply(context, args);
      if (!timeout)
        args = context = null;
    }
  };
  const debounced = function(..._args) {
    context = this;
    args = _args;
    previous = now();
    if (!timeout) {
      timeout = setTimeout(later, wait);
    }
    return result;
  };
  debounced.cancel = () => {
    clearTimeout(timeout);
    timeout = args = context = null;
  };
  return debounced;
};

// node_modules/@ui5/webcomponents-react-base/dist/utils/throttle.js
var now2 = Date.now || (() => (/* @__PURE__ */ new Date()).getTime());

// node_modules/@ui5/webcomponents-react-base/dist/utils/index.js
var enrichEventWithDetails = (event, payload) => {
  if (!event) {
    return event;
  }
  const shouldCreateNewDetails = event.detail === null || event.detail === void 0 || typeof event.detail !== "object";
  const nativeDetail = typeof event.detail === "number" ? event.detail : null;
  Object.defineProperty(event, "detail", {
    value: shouldCreateNewDetails ? {} : event.detail,
    writable: true,
    configurable: true
  });
  if (nativeDetail) {
    Object.assign(event.detail, { nativeDetail });
  }
  Object.assign(event.detail, payload);
  return event;
};
function getUi5TagWithSuffix(baseTagName) {
  const tagNameSuffix = getEffectiveScopingSuffixForTag(baseTagName);
  return tagNameSuffix ? `${baseTagName}-${tagNameSuffix}` : baseTagName;
}
var capitalizeFirstLetter = (s) => s.charAt(0).toUpperCase() + s.slice(1);
var camelToKebabCase = (s) => s.replace(/([A-Z])/g, (a, b) => `-${b.toLowerCase()}`);
var kebabToCamelCase = (str) => str.replace(/([-_]\w)/g, (g) => g[1].toUpperCase());
var SEMVER_REGEX = /^(?<major>0|[1-9]\d*)\.(?<minor>0|[1-9]\d*)\.(?<patch>0|[1-9]\d*)(?:-(?<prerelease>(?:0|[1-9]\d*|\d*[a-zA-Z-][0-9a-zA-Z-]*)(?:\.(?:0|[1-9]\d*|\d*[a-zA-Z-][0-9a-zA-Z-]*))*))?(?:\+(?<buildmetadata>[0-9a-zA-Z-]+(?:\.[0-9a-zA-Z-]+)*))?$/;
function parseSemVer(version4) {
  const parsed = SEMVER_REGEX.exec(version4).groups;
  return {
    version: version4,
    major: parseInt(parsed.major),
    minor: parseInt(parsed.minor),
    patch: parseInt(parsed.patch),
    prerelease: parsed.prerelease,
    buildMetadata: parsed.buildmetadata
  };
}

// node_modules/@ui5/webcomponents-react-base/dist/wrapper/withWebComponent.js
var createEventPropName = (eventName) => `on${capitalizeFirstLetter(kebabToCamelCase(eventName))}`;
var isPrimitiveAttribute = (value) => {
  return typeof value === "string" || typeof value === "number" || typeof value === "boolean";
};
var definedWebComponents = /* @__PURE__ */ new Set([]);
var withWebComponent = (tagName, regularProperties, booleanProperties, slotProperties, eventProperties) => {
  const webComponentsSupported = parseSemVer(import_react8.version).major >= 19;
  return (0, import_react8.forwardRef)((props, wcRef) => {
    const { className, children, waitForDefine, ...rest } = props;
    const [componentRef, ref] = useSyncRef(wcRef);
    const tagNameSuffix = getEffectiveScopingSuffixForTag(tagName);
    const Component = tagNameSuffix ? `${tagName}-${tagNameSuffix}` : tagName;
    const [isDefined, setIsDefined] = (0, import_react8.useState)(definedWebComponents.has(Component));
    const regularProps = regularProperties.reduce((acc, name105) => {
      if (Object.prototype.hasOwnProperty.call(rest, name105) && isPrimitiveAttribute(rest[name105])) {
        return { ...acc, [camelToKebabCase(name105)]: rest[name105] };
      }
      return acc;
    }, {});
    const booleanProps2 = booleanProperties.reduce((acc, name105) => {
      if (webComponentsSupported) {
        return { ...acc, [camelToKebabCase(name105)]: rest[name105] };
      } else {
        if (rest[name105] === true || rest[name105] === "true") {
          return { ...acc, [camelToKebabCase(name105)]: true };
        }
        return acc;
      }
    }, {});
    const slots = slotProperties.reduce((acc, name105) => {
      var _a;
      const slotValue = rest[name105];
      if (!slotValue) {
        return acc;
      }
      if (((_a = rest[name105]) == null ? void 0 : _a.$$typeof) === Symbol.for("react.portal")) {
        console.warn("ReactPortal is not supported for slot props.");
        return acc;
      }
      const slottedChildren = [];
      let index = 0;
      const removeFragments = (element) => {
        var _a2;
        if (!(0, import_react8.isValidElement)(element))
          return;
        if (element.type === import_react8.Fragment) {
          const elementChildren = (_a2 = element.props) == null ? void 0 : _a2.children;
          if (Array.isArray(elementChildren)) {
            elementChildren.forEach((item2) => {
              if (Array.isArray(item2)) {
                item2.forEach(removeFragments);
              } else {
                removeFragments(item2);
              }
            });
          } else {
            removeFragments(elementChildren);
          }
        } else {
          slottedChildren.push((0, import_react8.cloneElement)(element, {
            key: element.key ?? `${name105}-${index}`,
            slot: name105
          }));
          index++;
        }
      };
      if (Array.isArray(slotValue)) {
        slotValue.forEach((item2) => {
          removeFragments(item2);
        });
      } else {
        removeFragments(slotValue);
      }
      return [...acc, ...slottedChildren];
    }, []);
    useIsomorphicLayoutEffect(() => {
      if (webComponentsSupported) {
        return () => {
        };
      }
      const localRef = ref.current;
      const eventRegistry = {};
      if (!waitForDefine || isDefined) {
        eventProperties.forEach((eventName) => {
          const eventHandler = rest[createEventPropName(eventName)];
          if (typeof eventHandler === "function") {
            eventRegistry[eventName] = eventHandler;
            localRef == null ? void 0 : localRef.addEventListener(eventName, eventRegistry[eventName]);
          }
        });
        return () => {
          for (const eventName in eventRegistry) {
            localRef == null ? void 0 : localRef.removeEventListener(eventName, eventRegistry[eventName]);
          }
        };
      }
    }, [...eventProperties.map((eventName) => rest[createEventPropName(eventName)]), isDefined, waitForDefine]);
    const eventHandlers = eventProperties.reduce((events, eventName) => {
      const eventHandlerProp = rest[createEventPropName(eventName)];
      if (webComponentsSupported && eventHandlerProp) {
        events[`on${eventName}`] = eventHandlerProp;
      }
      return events;
    }, {});
    const [attachEvents, setAttachEvents] = (0, import_react8.useState)(!webComponentsSupported || !Object.keys(eventHandlers).length);
    const nonWebComponentRelatedProps = Object.entries(rest).filter(([key]) => !regularProperties.includes(key)).filter(([key]) => !slotProperties.includes(key)).filter(([key]) => !booleanProperties.includes(key)).filter(([key]) => !eventProperties.map((eventName) => createEventPropName(eventName)).includes(key)).reduce((acc, [key, val]) => {
      if (!key.startsWith("aria-") && !key.startsWith("data-") && val === false) {
        return acc;
      }
      acc[key] = val;
      return acc;
    }, {});
    (0, import_react8.useEffect)(() => {
      if (waitForDefine && !isDefined) {
        void customElements.whenDefined(Component).then(() => {
          setIsDefined(true);
          definedWebComponents.add(Component);
        });
      }
    }, [Component, waitForDefine, isDefined]);
    const propsToApply = regularProperties.map((prop) => ({ name: prop, value: props[prop] }));
    (0, import_react8.useEffect)(() => {
      void customElements.whenDefined(Component).then(() => {
        for (const prop of propsToApply) {
          if (prop.value != null && !isPrimitiveAttribute(prop.value)) {
            if (ref.current) {
              ref.current[prop.name] = prop.value;
            }
          }
        }
      });
    }, [Component, ...propsToApply]);
    (0, import_react8.useEffect)(() => {
      setAttachEvents(true);
    }, []);
    if (waitForDefine && !isDefined) {
      return null;
    }
    if (tagName === "ui5-expandable-text") {
      const renderWhiteSpace = nonWebComponentRelatedProps["renderWhitespace"] ? true : void 0;
      const { ["overflow-mode"]: overflowMode, text, ...restRegularProps } = regularProps;
      const showOverflowInPopover = nonWebComponentRelatedProps["showOverflowInPopover"];
      return (0, import_jsx_runtime.jsx)(Component, {
        ref: componentRef,
        ...booleanProps2,
        ...restRegularProps,
        ...attachEvents ? eventHandlers : {},
        ...nonWebComponentRelatedProps,
        "overflow-mode": overflowMode ?? (showOverflowInPopover ? "Popover" : "InPlace"),
        // @ts-expect-error: text is available
        text: text ?? children,
        class: className,
        suppressHydrationWarning: true,
        "data-_render-whitespace": renderWhiteSpace,
        children: slots
      });
    }
    return (0, import_jsx_runtime.jsxs)(Component, { ref: componentRef, ...booleanProps2, ...regularProps, ...attachEvents ? eventHandlers : {}, ...nonWebComponentRelatedProps, class: className, suppressHydrationWarning: true, children: [slots, children] });
  });
};

// node_modules/@ui5/webcomponents-react-base/dist/styling/CssSizeVariables.js
var CssSizeVariablesNames;
(function(CssSizeVariablesNames2) {
  CssSizeVariablesNames2["ui5WcrBarHeight"] = "--_ui5wcr-BarHeight";
  CssSizeVariablesNames2["ui5WcrButtonTopBottomPadding"] = "--_ui5wcr-ButtonTopBottomPadding";
  CssSizeVariablesNames2["ui5WcrAnalyticalTableExpandButtonHeight"] = "--_ui5wcr-AnalyticalTableExpandButtonHeight";
  CssSizeVariablesNames2["ui5WcrAnalyticalTableExpandIconHeight"] = "--_ui5wcr-AnalyticalTableExpandIconHeight";
  CssSizeVariablesNames2["ui5WcrAnalyticalTableExpandIndicatorWidth"] = "--_ui5wcr-AnalyticalTableExpandIndicatorWidth";
  CssSizeVariablesNames2["ui5WcrAnalyticalTableRowHeight"] = "--_ui5wcr-AnalyticalTableRowHeight";
  CssSizeVariablesNames2["ui5WcrAnalyticalTableHeaderRowHeight"] = "--_ui5wcr-AnalyticalTableHeaderRowHeight";
  CssSizeVariablesNames2["ui5WcrAnalyticalTableTreePaddingLevel1"] = "--_ui5wcr-AnalyticalTableTreePaddingLevel1";
  CssSizeVariablesNames2["ui5WcrAnalyticalTableTreePaddingLevel2"] = "--_ui5wcr-AnalyticalTableTreePaddingLevel2";
  CssSizeVariablesNames2["ui5WcrAnalyticalTableTreePaddingLevel3"] = "--_ui5wcr-AnalyticalTableTreePaddingLevel3";
  CssSizeVariablesNames2["ui5WcrCheckBoxWidthHeight"] = "--_ui5wcr-CheckBoxWidthHeight";
  CssSizeVariablesNames2["ui5WcrCheckBoxPaddingInline"] = "--_ui5wcr-CheckBoxPaddingInline";
  CssSizeVariablesNames2["ui5WcrAnalyticalTableSelectionColumnWidth"] = "--_ui5wcr-AnalyticalTableSelectionColumnWidth";
  CssSizeVariablesNames2["ui5WcrToolbarHeight"] = "--_ui5wcr-ToolbarHeight";
  CssSizeVariablesNames2["ui5WcrToolbarPopoverContentPadding"] = "--_ui5wcr-ToolbarPopoverContentPadding";
  CssSizeVariablesNames2["ui5WcrToolbarSeparatorHeight"] = "--_ui5wcr-ToolbarSeparatorHeight";
  CssSizeVariablesNames2["ui5WcrFormGroupTitleHeight"] = "--_ui5wcr-FormGroupTitleHeight";
  CssSizeVariablesNames2["ui5WcrMessageViewListItemHeightSingle"] = "--_ui5wcr-MessageViewListItemHeightSingle";
  CssSizeVariablesNames2["ui5WcrMessageViewListItemHeightByLine"] = "--_ui5wcr-MessageViewListItemHeightByLine";
  CssSizeVariablesNames2["ui5WcrMessageItemTitleFontSize"] = "--_ui5wcr-MessageItemTitleFontSize";
  CssSizeVariablesNames2["ui5WcrDialogHeaderHeight"] = "--_ui5wcr-DialogHeaderHeight";
  CssSizeVariablesNames2["ui5WcrDialogSubHeaderHeight"] = "--_ui5wcr-DialogSubHeaderHeight";
  CssSizeVariablesNames2["ui5WcrElementHeight"] = "--_ui5wcr-ElementHeight";
})(CssSizeVariablesNames || (CssSizeVariablesNames = {}));
var CssSizeVariables = new Proxy(CssSizeVariablesNames, {
  get: (target, prop) => `var(${target[prop]})`
});
var CozySizes = {
  [CssSizeVariablesNames.ui5WcrBarHeight]: `2.75rem`,
  [CssSizeVariablesNames.ui5WcrButtonTopBottomPadding]: `0.25rem 0`,
  [CssSizeVariablesNames.ui5WcrAnalyticalTableExpandButtonHeight]: `2.25rem`,
  [CssSizeVariablesNames.ui5WcrAnalyticalTableExpandIconHeight]: "1rem",
  [CssSizeVariablesNames.ui5WcrAnalyticalTableExpandIndicatorWidth]: "1.875rem",
  [CssSizeVariablesNames.ui5WcrAnalyticalTableRowHeight]: `44px`,
  [CssSizeVariablesNames.ui5WcrAnalyticalTableHeaderRowHeight]: `44px`,
  [CssSizeVariablesNames.ui5WcrAnalyticalTableTreePaddingLevel1]: `1rem`,
  [CssSizeVariablesNames.ui5WcrAnalyticalTableTreePaddingLevel2]: `1.5rem`,
  [CssSizeVariablesNames.ui5WcrAnalyticalTableTreePaddingLevel3]: `2rem`,
  [CssSizeVariablesNames.ui5WcrCheckBoxWidthHeight]: `2.75rem`,
  [CssSizeVariablesNames.ui5WcrCheckBoxPaddingInline]: `0.6875rem`,
  [CssSizeVariablesNames.ui5WcrAnalyticalTableSelectionColumnWidth]: `44px`,
  [CssSizeVariablesNames.ui5WcrToolbarHeight]: `2.75rem`,
  [CssSizeVariablesNames.ui5WcrToolbarPopoverContentPadding]: `0.25rem 0.5rem`,
  [CssSizeVariablesNames.ui5WcrToolbarSeparatorHeight]: `2rem`,
  [CssSizeVariablesNames.ui5WcrFormGroupTitleHeight]: `2.75rem`,
  [CssSizeVariablesNames.ui5WcrMessageViewListItemHeightSingle]: `2.75rem`,
  [CssSizeVariablesNames.ui5WcrMessageViewListItemHeightByLine]: `3.325rem`,
  [CssSizeVariablesNames.ui5WcrMessageItemTitleFontSize]: ThemingParameters.sapFontHeader5Size,
  [CssSizeVariablesNames.ui5WcrDialogHeaderHeight]: "2.75rem",
  [CssSizeVariablesNames.ui5WcrDialogSubHeaderHeight]: "3rem",
  [CssSizeVariablesNames.ui5WcrElementHeight]: ThemingParameters.sapElement_Height
};
var CompactSizes = {
  [CssSizeVariablesNames.ui5WcrBarHeight]: `2.5rem`,
  [CssSizeVariablesNames.ui5WcrButtonTopBottomPadding]: `0.1875rem 0`,
  [CssSizeVariablesNames.ui5WcrAnalyticalTableExpandButtonHeight]: `1.5rem`,
  [CssSizeVariablesNames.ui5WcrAnalyticalTableExpandIconHeight]: "0.75rem",
  [CssSizeVariablesNames.ui5WcrAnalyticalTableExpandIndicatorWidth]: "1.625rem",
  [CssSizeVariablesNames.ui5WcrAnalyticalTableRowHeight]: `32px`,
  [CssSizeVariablesNames.ui5WcrAnalyticalTableHeaderRowHeight]: `32px`,
  [CssSizeVariablesNames.ui5WcrAnalyticalTableTreePaddingLevel1]: `1.5rem`,
  [CssSizeVariablesNames.ui5WcrAnalyticalTableTreePaddingLevel2]: `2.25rem`,
  [CssSizeVariablesNames.ui5WcrAnalyticalTableTreePaddingLevel3]: `2.75rem`,
  [CssSizeVariablesNames.ui5WcrCheckBoxWidthHeight]: `2rem`,
  [CssSizeVariablesNames.ui5WcrCheckBoxPaddingInline]: "0.5rem",
  [CssSizeVariablesNames.ui5WcrAnalyticalTableSelectionColumnWidth]: `32px`,
  [CssSizeVariablesNames.ui5WcrToolbarHeight]: `2rem`,
  [CssSizeVariablesNames.ui5WcrToolbarPopoverContentPadding]: `0.1875rem 0.375rem`,
  [CssSizeVariablesNames.ui5WcrToolbarSeparatorHeight]: `1.5rem`,
  [CssSizeVariablesNames.ui5WcrFormGroupTitleHeight]: `2rem`,
  [CssSizeVariablesNames.ui5WcrMessageViewListItemHeightSingle]: `2rem`,
  [CssSizeVariablesNames.ui5WcrMessageViewListItemHeightByLine]: `3.25rem`,
  [CssSizeVariablesNames.ui5WcrMessageItemTitleFontSize]: ThemingParameters.sapFontHeader6Size,
  [CssSizeVariablesNames.ui5WcrDialogHeaderHeight]: "2.5rem",
  [CssSizeVariablesNames.ui5WcrDialogSubHeaderHeight]: "2.25rem",
  [CssSizeVariablesNames.ui5WcrElementHeight]: ThemingParameters.sapElement_Compact_Height
};

// node_modules/@ui5/webcomponents-react-base/dist/index.js
var version2 = VersionInfo_default.version;

// node_modules/@ui5/webcomponents-react/dist/components/AnalyticalTable/pluginHooks/useAnnounceEmptyCells.js
var import_react9 = __toESM(require_react(), 1);
var useAnnounceEmptyCells = (hooks) => {
  const i18nBundleWc = useI18nBundle("@ui5/webcomponents");
  const emptyCellLabel = i18nBundleWc.getText(ARIA_LABEL_EMPTY_CELL);
  const setCellProps3 = (0, import_react9.useCallback)((cellProps, {
    cell: {
      value
    }
  }) => {
    if (typeof value !== "number" && !value) {
      return [cellProps, {
        "aria-label": `${cellProps["aria-label"]} ${emptyCellLabel}`
      }];
    }
    return cellProps;
  }, [emptyCellLabel]);
  hooks.getCellProps.push(setCellProps3);
};
useAnnounceEmptyCells.pluginName = "useAnnounceEmptyCells";

// node_modules/@ui5/webcomponents-react/dist/components/AnalyticalTable/pluginHooks/useIndeterminateRowSelection.js
var import_react10 = __toESM(require_react(), 1);

// node_modules/@ui5/webcomponents-react/dist/enums/AnalyticalTablePopinDisplay.js
var AnalyticalTablePopinDisplay = function(AnalyticalTablePopinDisplay2) {
  AnalyticalTablePopinDisplay2["Block"] = "Block";
  AnalyticalTablePopinDisplay2["Inline"] = "Inline";
  AnalyticalTablePopinDisplay2["WithoutHeader"] = "WithoutHeader";
  return AnalyticalTablePopinDisplay2;
}({});

// node_modules/@ui5/webcomponents-react/dist/enums/AnalyticalTableScaleWidthMode.js
var AnalyticalTableScaleWidthMode = function(AnalyticalTableScaleWidthMode2) {
  AnalyticalTableScaleWidthMode2["Default"] = "Default";
  AnalyticalTableScaleWidthMode2["Smart"] = "Smart";
  AnalyticalTableScaleWidthMode2["Grow"] = "Grow";
  return AnalyticalTableScaleWidthMode2;
}({});

// node_modules/@ui5/webcomponents-react/dist/enums/AnalyticalTableScrollMode.js
var AnalyticalTableScrollMode = function(AnalyticalTableScrollMode2) {
  AnalyticalTableScrollMode2["auto"] = "auto";
  AnalyticalTableScrollMode2["center"] = "center";
  AnalyticalTableScrollMode2["end"] = "end";
  AnalyticalTableScrollMode2["start"] = "start";
  return AnalyticalTableScrollMode2;
}({});

// node_modules/@ui5/webcomponents-react/dist/enums/AnalyticalTableSelectionBehavior.js
var AnalyticalTableSelectionBehavior = function(AnalyticalTableSelectionBehavior2) {
  AnalyticalTableSelectionBehavior2["Row"] = "Row";
  AnalyticalTableSelectionBehavior2["RowOnly"] = "RowOnly";
  AnalyticalTableSelectionBehavior2["RowSelector"] = "RowSelector";
  return AnalyticalTableSelectionBehavior2;
}({});

// node_modules/@ui5/webcomponents-react/dist/enums/AnalyticalTableSelectionMode.js
var AnalyticalTableSelectionMode = function(AnalyticalTableSelectionMode2) {
  AnalyticalTableSelectionMode2["None"] = "None";
  AnalyticalTableSelectionMode2["Single"] = "Single";
  AnalyticalTableSelectionMode2["Multiple"] = "Multiple";
  return AnalyticalTableSelectionMode2;
}({});

// node_modules/@ui5/webcomponents-react/dist/enums/AnalyticalTableSubComponentsBehavior.js
var AnalyticalTableSubComponentsBehavior = function(AnalyticalTableSubComponentsBehavior2) {
  AnalyticalTableSubComponentsBehavior2["Expandable"] = "Expandable";
  AnalyticalTableSubComponentsBehavior2["Visible"] = "Visible";
  AnalyticalTableSubComponentsBehavior2["IncludeHeight"] = "IncludeHeight";
  AnalyticalTableSubComponentsBehavior2["IncludeHeightExpandable"] = "IncludeHeightExpandable";
  return AnalyticalTableSubComponentsBehavior2;
}({});

// node_modules/@ui5/webcomponents-react/dist/enums/AnalyticalTableVisibleRowCountMode.js
var AnalyticalTableVisibleRowCountMode = function(AnalyticalTableVisibleRowCountMode2) {
  AnalyticalTableVisibleRowCountMode2["Fixed"] = "Fixed";
  AnalyticalTableVisibleRowCountMode2["Auto"] = "Auto";
  AnalyticalTableVisibleRowCountMode2["AutoWithEmptyRows"] = "AutoWithEmptyRows";
  AnalyticalTableVisibleRowCountMode2["Interactive"] = "Interactive";
  return AnalyticalTableVisibleRowCountMode2;
}({});

// node_modules/@ui5/webcomponents-react/dist/enums/ContentDensity.js
var ContentDensity = function(ContentDensity2) {
  ContentDensity2["Cozy"] = "Cozy";
  ContentDensity2["Compact"] = "Compact";
  return ContentDensity2;
}({});

// node_modules/@ui5/webcomponents-react/dist/enums/DeviationIndicator.js
var DeviationIndicator = function(DeviationIndicator2) {
  DeviationIndicator2["Down"] = "Down";
  DeviationIndicator2["Up"] = "Up";
  DeviationIndicator2["None"] = "None";
  return DeviationIndicator2;
}({});

// node_modules/@ui5/webcomponents-react/dist/enums/FlexBoxAlignItems.js
var FlexBoxAlignItems = function(FlexBoxAlignItems2) {
  FlexBoxAlignItems2["Start"] = "Start";
  FlexBoxAlignItems2["Center"] = "Center";
  FlexBoxAlignItems2["End"] = "End";
  FlexBoxAlignItems2["Baseline"] = "Baseline";
  FlexBoxAlignItems2["Stretch"] = "Stretch";
  return FlexBoxAlignItems2;
}({});

// node_modules/@ui5/webcomponents-react/dist/enums/FlexBoxDirection.js
var FlexBoxDirection = function(FlexBoxDirection2) {
  FlexBoxDirection2["Column"] = "Column";
  FlexBoxDirection2["ColumnReverse"] = "ColumnReverse";
  FlexBoxDirection2["Row"] = "Row";
  FlexBoxDirection2["RowReverse"] = "RowReverse";
  return FlexBoxDirection2;
}({});

// node_modules/@ui5/webcomponents-react/dist/enums/FlexBoxJustifyContent.js
var FlexBoxJustifyContent = function(FlexBoxJustifyContent2) {
  FlexBoxJustifyContent2["Start"] = "Start";
  FlexBoxJustifyContent2["Center"] = "Center";
  FlexBoxJustifyContent2["End"] = "End";
  FlexBoxJustifyContent2["SpaceAround"] = "SpaceAround";
  FlexBoxJustifyContent2["SpaceBetween"] = "SpaceBetween";
  return FlexBoxJustifyContent2;
}({});

// node_modules/@ui5/webcomponents-react/dist/enums/FlexBoxWrap.js
var FlexBoxWrap = function(FlexBoxWrap2) {
  FlexBoxWrap2["NoWrap"] = "NoWrap";
  FlexBoxWrap2["Wrap"] = "Wrap";
  FlexBoxWrap2["WrapReverse"] = "WrapReverse";
  return FlexBoxWrap2;
}({});

// node_modules/@ui5/webcomponents-react/dist/enums/GridPosition.js
var GridPosition = function(GridPosition2) {
  GridPosition2["Left"] = "Left";
  GridPosition2["Center"] = "Center";
  GridPosition2["Right"] = "Right";
  return GridPosition2;
}({});

// node_modules/@ui5/webcomponents-react/dist/enums/IndicationColor.js
var IndicationColor = function(IndicationColor2) {
  IndicationColor2["Indication01"] = "Indication01";
  IndicationColor2["Indication02"] = "Indication02";
  IndicationColor2["Indication03"] = "Indication03";
  IndicationColor2["Indication04"] = "Indication04";
  IndicationColor2["Indication05"] = "Indication05";
  IndicationColor2["Indication06"] = "Indication06";
  IndicationColor2["Indication07"] = "Indication07";
  IndicationColor2["Indication08"] = "Indication08";
  return IndicationColor2;
}({});

// node_modules/@ui5/webcomponents-react/dist/enums/MessageBoxAction.js
var MessageBoxAction = function(MessageBoxAction2) {
  MessageBoxAction2["Abort"] = "Abort";
  MessageBoxAction2["Cancel"] = "Cancel";
  MessageBoxAction2["Close"] = "Close";
  MessageBoxAction2["Delete"] = "Delete";
  MessageBoxAction2["Ignore"] = "Ignore";
  MessageBoxAction2["No"] = "No";
  MessageBoxAction2["OK"] = "OK";
  MessageBoxAction2["Retry"] = "Retry";
  MessageBoxAction2["Yes"] = "Yes";
  return MessageBoxAction2;
}({});

// node_modules/@ui5/webcomponents-react/dist/enums/MessageBoxType.js
var MessageBoxType = function(MessageBoxType2) {
  MessageBoxType2["Confirm"] = "Confirm";
  MessageBoxType2["Error"] = "Error";
  MessageBoxType2["Information"] = "Information";
  MessageBoxType2["Success"] = "Success";
  MessageBoxType2["Warning"] = "Warning";
  return MessageBoxType2;
}({});

// node_modules/@ui5/webcomponents-react/dist/enums/ObjectPageMode.js
var ObjectPageMode = function(ObjectPageMode2) {
  ObjectPageMode2["Default"] = "Default";
  ObjectPageMode2["IconTabBar"] = "IconTabBar";
  return ObjectPageMode2;
}({});

// node_modules/@ui5/webcomponents-react/dist/enums/Size.js
var Size = function(Size2) {
  Size2["Small"] = "Small";
  Size2["Medium"] = "Medium";
  Size2["Large"] = "Large";
  return Size2;
}({});

// node_modules/@ui5/webcomponents-react/dist/enums/TextAlign.js
var TextAlign = function(TextAlign2) {
  TextAlign2["Begin"] = "Begin";
  TextAlign2["End"] = "End";
  TextAlign2["Left"] = "Left";
  TextAlign2["Right"] = "Right";
  TextAlign2["Center"] = "Center";
  TextAlign2["Initial"] = "Initial";
  return TextAlign2;
}({});

// node_modules/@ui5/webcomponents-react/dist/enums/Theme.js
var Theme = function(Theme2) {
  Theme2["sap_fiori_3"] = "sap_fiori_3";
  Theme2["sap_fiori_3_dark"] = "sap_fiori_3_dark";
  Theme2["sap_fiori_3_hcb"] = "sap_fiori_3_hcb";
  Theme2["sap_fiori_3_hcw"] = "sap_fiori_3_hcw";
  Theme2["sap_horizon"] = "sap_horizon";
  Theme2["sap_horizon_dark"] = "sap_horizon_dark";
  Theme2["sap_horizon_hcb"] = "sap_horizon_hcb";
  Theme2["sap_horizon_hcw"] = "sap_horizon_hcw";
  return Theme2;
}({});

// node_modules/@ui5/webcomponents-react/dist/enums/ValueColor.js
var ValueColor = function(ValueColor2) {
  ValueColor2["Critical"] = "Critical";
  ValueColor2["Error"] = "Error";
  ValueColor2["Good"] = "Good";
  ValueColor2["Neutral"] = "Neutral";
  ValueColor2["None"] = "None";
  return ValueColor2;
}({});

// node_modules/@ui5/webcomponents-react/dist/enums/VerticalAlign.js
var VerticalAlign = function(VerticalAlign2) {
  VerticalAlign2["Bottom"] = "Bottom";
  VerticalAlign2["Inherit"] = "Inherit";
  VerticalAlign2["Middle"] = "Middle";
  VerticalAlign2["Top"] = "Top";
  return VerticalAlign2;
}({});

// node_modules/@ui5/webcomponents-react/dist/components/AnalyticalTable/pluginHooks/useIndeterminateRowSelection.js
var getParentRow = (id, rowsById) => {
  let lastDotIndex = id.lastIndexOf(".");
  if (lastDotIndex === -1) {
    lastDotIndex = Infinity;
  }
  const parentRowId = id.slice(0, lastDotIndex);
  return [rowsById[parentRowId], lastDotIndex];
};
var getIndeterminateRowIds = (id) => {
  const indeterminateRowsById = {};
  const lastDotIndex = id.lastIndexOf(".");
  indeterminateRowsById[id] = true;
  if (lastDotIndex !== -1) {
    Object.assign(indeterminateRowsById, getIndeterminateRowIds(id.slice(0, lastDotIndex)));
  }
  return indeterminateRowsById;
};
var getIndeterminate = (rows, rowsById, state) => {
  const indeterminateRowsById = {};
  let usedParentIndex = "";
  const getIndeterminateRecursive = (subRows, rowIdScope = null) => {
    for (const row of subRows) {
      if (row.subRows.length > 0) {
        getIndeterminateRecursive(row.subRows, row.id);
      } else if (rowIdScope !== null && usedParentIndex !== rowIdScope) {
        usedParentIndex = rowIdScope;
        const checkIndeterminate = (rowId) => {
          const [parentRow, dotIndex] = getParentRow(rowId, rowsById);
          const selectedRows = parentRow.subRows.filter((item2) => state.selectedRowIds[item2.id]);
          const areAllSelected = parentRow.subRows.length === selectedRows.length;
          const isOneSelected = selectedRows.length > 0;
          if (isOneSelected && !areAllSelected) {
            const parentRowId = parentRow.id;
            Object.assign(indeterminateRowsById, getIndeterminateRowIds(parentRowId));
            return;
          }
          if (dotIndex !== Infinity) {
            checkIndeterminate(parentRow.id);
          }
          return;
        };
        checkIndeterminate(row.id);
      }
    }
  };
  getIndeterminateRecursive(rows);
  return indeterminateRowsById;
};
var useIndeterminateRowSelection = (onIndeterminateChange) => {
  const toggleRowProps = (rowProps, {
    row,
    instance
  }) => {
    var _a, _b;
    let indeterminate;
    if (instance.isAllRowsSelected) {
      indeterminate = false;
    } else {
      indeterminate = ((_b = (_a = instance == null ? void 0 : instance.state) == null ? void 0 : _a.indeterminateRows) == null ? void 0 : _b[row.id]) ?? false;
    }
    if (rowProps.checked && !instance.state.selectedRowIds[row.id]) {
      row.toggleRowSelected(true);
    }
    return [rowProps, {
      indeterminate,
      checked: indeterminate ? true : rowProps.checked
    }];
  };
  const stateReducer2 = (newState, action, prevState, instance) => {
    const {
      rowsById,
      state,
      rows
    } = instance;
    if (action.type === "INDETERMINATE_ROW_IDS") {
      if (action.payload === "reset") {
        return {
          ...newState,
          indeterminateRows: {}
        };
      }
      const indeterminateRowsById = getIndeterminate(rows, rowsById, state);
      return {
        ...newState,
        indeterminateRows: indeterminateRowsById
      };
    }
  };
  const useInstanceAfterData = (instance) => {
    const {
      data,
      dispatch,
      rowsById,
      state: {
        selectedRowIds,
        indeterminateRows
      },
      webComponentsReactProperties: {
        selectionMode,
        selectionBehavior,
        isTreeTable
      }
    } = instance;
    (0, import_react10.useEffect)(() => {
      if (isTreeTable && selectionMode === AnalyticalTableSelectionMode.Multiple && selectionBehavior !== AnalyticalTableSelectionBehavior.RowOnly && Object.keys(selectedRowIds).length && Object.keys(rowsById).length !== Object.keys(selectedRowIds).length) {
        dispatch({
          type: "INDETERMINATE_ROW_IDS"
        });
      } else if (typeof indeterminateRows === "object" && Object.keys(indeterminateRows).length) {
        dispatch({
          type: "INDETERMINATE_ROW_IDS",
          payload: "reset"
        });
      }
    }, [data, selectedRowIds, isTreeTable, selectionMode, selectionBehavior]);
    (0, import_react10.useEffect)(() => {
      if (typeof onIndeterminateChange === "function" && indeterminateRows) {
        onIndeterminateChange({
          indeterminateRowsById: indeterminateRows,
          tableInstance: instance
        });
      }
    }, [indeterminateRows]);
  };
  const useIndeterminate = (hooks) => {
    hooks.getToggleRowSelectedProps.push(toggleRowProps);
    hooks.stateReducers.push(stateReducer2);
    hooks.useInstanceAfterData.push(useInstanceAfterData);
  };
  useIndeterminate.pluginName = "useIndeterminate";
  return useIndeterminate;
};

// node_modules/@ui5/webcomponents-react/dist/components/AnalyticalTable/pluginHooks/useManualRowSelect.js
var import_react11 = __toESM(require_react(), 1);
var useManualRowSelect = (manualRowSelectedKey = "isSelected") => {
  const instanceAfterData = ({
    flatRows,
    toggleRowSelected
  }) => {
    (0, import_react11.useEffect)(() => {
      flatRows.forEach(({
        id,
        original
      }) => {
        if (manualRowSelectedKey in original) {
          toggleRowSelected(id, original.isSelected);
        }
      });
    }, [flatRows, manualRowSelectedKey]);
  };
  const manualRowSelect = (hooks) => {
    hooks.useInstanceAfterData.push(instanceAfterData);
  };
  manualRowSelect.pluginName = "useManualRowSelect";
  return manualRowSelect;
};

// node_modules/@ui5/webcomponents-react/dist/components/AnalyticalTable/pluginHooks/useOnColumnResize.js
var import_react12 = __toESM(require_react(), 1);
var useOnColumnResize = (callback, options) => {
  const debouncedEvent = debounce(callback, (options == null ? void 0 : options.wait) ?? 100);
  const useInstance = (instance) => {
    const {
      state,
      columns: columns6
    } = instance;
    const {
      columnResizing
    } = state;
    const {
      isResizingColumn,
      columnWidths
    } = columnResizing;
    const prevHeaderIsResizing = (0, import_react12.useRef)(void 0);
    (0, import_react12.useEffect)(() => {
      if (isResizingColumn && (options == null ? void 0 : options.liveUpdate)) {
        const currentHeader = columns6.find((item2) => item2.id === isResizingColumn);
        debouncedEvent({
          columnWidth: columnWidths[isResizingColumn],
          header: currentHeader
        });
      }
    }, [columnResizing, options == null ? void 0 : options.liveUpdate, columns6]);
    (0, import_react12.useEffect)(() => {
      if (options == null ? void 0 : options.liveUpdate) {
        return () => debouncedEvent.cancel();
      }
    }, [options == null ? void 0 : options.liveUpdate]);
    (0, import_react12.useEffect)(() => {
      if (!(options == null ? void 0 : options.liveUpdate)) {
        const currentHeader = columns6.find((item2) => item2.id === prevHeaderIsResizing.current);
        if (isResizingColumn) {
          prevHeaderIsResizing.current = isResizingColumn;
        }
        if (!isResizingColumn && prevHeaderIsResizing.current) {
          callback({
            columnWidth: columnWidths[prevHeaderIsResizing.current],
            header: currentHeader
          });
        }
      }
    }, [columnResizing, options == null ? void 0 : options.liveUpdate, columns6]);
  };
  const useOnColumnResizeHooks = (hooks) => {
    hooks.useFinalInstance.push(useInstance);
  };
  useOnColumnResizeHooks.pluginName = "useOnColumnResize";
  return useOnColumnResizeHooks;
};

// node_modules/@ui5/webcomponents-react/dist/components/AnalyticalTable/pluginHooks/useOrderedMultiSort.js
var useOrderedMultiSort = (orderedIds) => {
  const useOrderedMultiSortPlugin = (hooks) => {
    hooks.stateReducers.push((newState, action) => {
      if (action.type === "toggleSortBy") {
        if (newState.sortBy.length <= 1) {
          return newState;
        } else {
          const clonedSortBy = [...newState.sortBy];
          const updatedSortBy = orderedIds.flatMap((sortedId) => {
            const sortedItemIndex = clonedSortBy.findIndex((item2) => item2.id === sortedId);
            if (sortedItemIndex !== -1) {
              const sortedEntry = clonedSortBy[sortedItemIndex];
              clonedSortBy.splice(sortedItemIndex, 1);
              return [sortedEntry];
            }
            return [];
          });
          return {
            ...newState,
            sortBy: [...updatedSortBy, ...clonedSortBy]
          };
        }
      }
      return newState;
    });
  };
  useOrderedMultiSortPlugin.pluginName = "useOrderedMultiSort";
  return useOrderedMultiSortPlugin;
};

// node_modules/@ui5/webcomponents-react/dist/webComponents/CheckBox/index.js
var CheckBox = withWebComponent("ui5-checkbox", ["accessibleName", "accessibleNameRef", "name", "text", "valueState", "wrappingType"], ["checked", "disabled", "displayOnly", "indeterminate", "readonly", "required"], [], ["change"]);
CheckBox.displayName = "CheckBox";

// node_modules/@ui5/webcomponents-react/dist/components/AnalyticalTable/util/index.js
var reOpenBracket = /\[/g;
var reCloseBracket = /]/g;
function makePathArray(obj) {
  return flattenDeep(obj).map((d) => String(d).replace(".", "_")).join(".").replace(reOpenBracket, ".").replace(reCloseBracket, "").split(".");
}
function flattenDeep(arr, newArr = []) {
  if (!Array.isArray(arr)) {
    newArr.push(arr);
  } else {
    for (let i = 0; i < arr.length; i += 1) {
      flattenDeep(arr[i], newArr);
    }
  }
  return newArr;
}
var pathObjCache = /* @__PURE__ */ new Map();
function getBy(obj, path, def) {
  if (!path) {
    return obj;
  }
  const cacheKey = typeof path === "function" ? path : JSON.stringify(path);
  const pathObj = pathObjCache.get(cacheKey) || (() => {
    const pathObj2 = makePathArray(path);
    pathObjCache.set(cacheKey, pathObj2);
    return pathObj2;
  })();
  let val;
  try {
    val = pathObj.reduce((cursor, pathPart) => {
      return cursor[pathPart];
    }, obj);
  } catch (_e) {
  }
  return typeof val !== "undefined" ? val : def;
}
var tagNamesWhichShouldNotSelectARow = /* @__PURE__ */ new Set(["UI5-AVATAR", "UI5-BUTTON", "UI5-CALENDAR", "UI5-CHECKBOX", "UI5-COLOR-PICKER", "UI5-COMBOBOX", "UI5-DATE-PICKER", "UI5-DATERANGE-PICKER", "UI5-DATETIME-PICKER", "UI5-DURATION-PICKER", "UI5-FILE-UPLOADER", "UI5-ICON", "UI5-INPUT", "UI5-LINK", "UI5-MULTI-COMBOBOX", "UI5-MULTI-INPUT", "UI5-RADIO-BUTTON", "UI5-RANGE-SLIDER", "UI5-RATING-INDICATOR", "UI5-SEGMENTED-BUTTON", "UI5-SELECT", "UI5-SLIDER", "UI5-STEP-INPUT", "UI5-SWITCH", "UI5-TEXT-AREA", "UI5-TIME-PICKER", "UI5-TOGGLE-BUTTON", "UI5-UPLOAD-COLLECTION"]);
var resolveCellAlignment = (column) => {
  const style = {};
  switch (column.hAlign) {
    case TextAlign.Begin:
      style.justifyContent = "flex-start";
      style.textAlign = "start";
      break;
    case TextAlign.Center:
      style.justifyContent = "center";
      style.textAlign = "center";
      break;
    case TextAlign.End:
      style.justifyContent = "flex-end";
      style.textAlign = "end";
      break;
    case TextAlign.Left:
      style.justifyContent = "left";
      style.textAlign = "left";
      break;
    case TextAlign.Right:
      style.justifyContent = "right";
      style.textAlign = "right";
      break;
    case TextAlign.Initial:
      style.justifyContent = "initial";
      style.textAlign = "initial";
      break;
  }
  switch (column.vAlign) {
    case VerticalAlign.Bottom:
      style.alignItems = "flex-end";
      break;
    case VerticalAlign.Middle:
      style.alignItems = "center";
      break;
    case VerticalAlign.Top:
      style.alignItems = "flex-start";
      break;
  }
  return style;
};
function getRowHeight(rowHeight, tableRef) {
  if (rowHeight) {
    return rowHeight;
  }
  if (typeof document !== "undefined") {
    return parseInt(getComputedStyle(tableRef.current ?? document.body).getPropertyValue("--_ui5wcr-AnalyticalTableRowHeight") || "44");
  }
  return 44;
}
function getSubRowsByString(subRowsKey, row) {
  if (!subRowsKey.includes(".")) {
    return row.subRows || row[subRowsKey];
  } else {
    return subRowsKey.split(".").reduce((acc, cur) => acc == null ? void 0 : acc[cur], row);
  }
}
function getLeafHeaders(header3) {
  const leafHeaders = [];
  const recurseHeader = (header4) => {
    if (header4.columns && header4.columns.length) {
      header4.columns.map(recurseHeader);
    }
    leafHeaders.push(header4);
  };
  recurseHeader(header3);
  return leafHeaders;
}

// node_modules/@ui5/webcomponents-react/dist/components/AnalyticalTable/pluginHooks/useRowDisableSelection.js
var import_jsx_runtime2 = __toESM(require_jsx_runtime(), 1);
var customCheckBoxStyling = {
  verticalAlign: "middle"
};
var headerProps = (props, {
  instance: {
    webComponentsReactProperties: {
      selectionMode
    }
  }
}) => {
  if (props.key === "header___ui5wcr__internal_selection_column" && selectionMode === AnalyticalTableSelectionMode.Multiple) {
    const style = {
      ...props.style,
      cursor: "auto"
    };
    return [props, {
      onClick: void 0,
      onKeyDown: void 0,
      title: void 0,
      style
    }];
  }
  return props;
};
var columns = (columns6) => {
  return columns6.map((column) => {
    if (column.id === "__ui5wcr__internal_selection_column") {
      return {
        ...column,
        Cell: (instance) => {
          const {
            webComponentsReactProperties,
            row
          } = instance;
          if (row.disableSelect === true) {
            if (row.isGrouped && webComponentsReactProperties.selectionMode === AnalyticalTableSelectionMode.Single) {
              return null;
            }
            if (webComponentsReactProperties.selectionMode === AnalyticalTableSelectionMode.Single) {
              return (0, import_jsx_runtime2.jsx)("div", {
                onClick: void 0,
                "data-name": "internal_selection_column"
              });
            }
            return (0, import_jsx_runtime2.jsx)(CheckBox, {
              ...row.getToggleRowSelectedProps(),
              disabled: true,
              style: customCheckBoxStyling,
              "data-name": "internal_selection_column",
              tabIndex: -1
            });
          }
          return column.Cell(instance);
        },
        Header: () => null
      };
    }
    return column;
  });
};
var useRowDisableSelection = (disableRowSelection) => {
  const disableRowAccessor = typeof disableRowSelection === "function" ? disableRowSelection : (d) => getBy(d.original, disableRowSelection, void 0);
  const getRowProps3 = (rowProps, {
    row,
    instance
  }) => {
    const {
      webComponentsReactProperties
    } = instance;
    if (disableRowAccessor(row) === true) {
      row.disableSelect = true;
      const handleClick = (e) => {
        if (typeof webComponentsReactProperties.onRowClick === "function") {
          webComponentsReactProperties.onRowClick(enrichEventWithDetails(e, {
            row
          }));
        }
      };
      const onKeyDown = (e) => {
        if (e.code === "Enter" || e.code === "Space") {
          e.preventDefault();
          if (e.code === "Enter" && typeof webComponentsReactProperties.onRowClick === "function") {
            webComponentsReactProperties.onRowClick(enrichEventWithDetails(e, {
              row
            }));
          }
        }
      };
      const onKeyUp = (e) => {
        if (e.code === "Space") {
          e.preventDefault();
          if (typeof webComponentsReactProperties.onRowClick === "function") {
            webComponentsReactProperties.onRowClick(enrichEventWithDetails(e, {
              row
            }));
          }
        }
      };
      return {
        ...rowProps,
        onClick: handleClick,
        onKeyDown,
        onKeyUp,
        className: webComponentsReactProperties.classes.tr
      };
    }
    return rowProps;
  };
  const columnDeps2 = (deps) => {
    return [...deps, disableRowSelection];
  };
  const cellProps = (cellProps2, {
    cell: {
      row,
      column
    },
    instance
  }) => {
    const {
      selectionMode,
      selectionBehavior
    } = instance.webComponentsReactProperties;
    if (disableRowAccessor(row) === true && selectionMode !== AnalyticalTableSelectionMode.None && (selectionBehavior !== AnalyticalTableSelectionBehavior.RowSelector || column.id === "__ui5wcr__internal_selection_column")) {
      const {
        "aria-label": _0,
        ...updatedCellProps
      } = cellProps2;
      if (column.id === "__ui5wcr__internal_selection_column") {
        const style = {
          ...cellProps2.style,
          cursor: "auto"
        };
        return {
          ...updatedCellProps,
          "aria-disabled": true,
          style
        };
      }
      const {
        "aria-selected": _1,
        ...updatedCellProsWithOutSelected
      } = updatedCellProps;
      return updatedCellProsWithOutSelected;
    }
    return cellProps2;
  };
  const toggleRowSelectedProps = (rowProps, {
    row
  }) => {
    if (disableRowAccessor(row) === true) {
      const {
        title: _0,
        ...updatedRowProps
      } = rowProps;
      return updatedRowProps;
    }
    return rowProps;
  };
  const useDisableSelectionRow = (hooks) => {
    hooks.getHeaderProps.push(headerProps);
    hooks.getRowProps.push(getRowProps3);
    hooks.columns.push(columns);
    hooks.columnsDeps.push(columnDeps2);
    hooks.getCellProps.push(cellProps);
    hooks.getToggleRowSelectedProps.push(toggleRowSelectedProps);
  };
  useDisableSelectionRow.pluginName = "useRowDisableSelection";
  return useDisableSelectionRow;
};

// node_modules/@ui5/webcomponents-react/dist/generated/VersionInfo.js
var VersionInfo2 = {
  version: "2.7.3",
  major: 2,
  minor: 7,
  patch: 3,
  suffix: "",
  isNext: false,
  buildTime: 1743519074
};
var VersionInfo_default2 = VersionInfo2;

// node_modules/@ui5/webcomponents-react-base/dist/utils/addCustomCSSWithScoping.js
var addCustomCSSWithScoping = (baseTagName, customCSS) => {
  attachBoot(() => {
    const finalTag = getUi5TagWithSuffix(baseTagName);
    void addCustomCSS(finalTag, customCSS);
  });
};

// node_modules/@ui5/webcomponents-react/dist/components/ActionSheet/index.js
var import_react14 = __toESM(require_react(), 1);

// node_modules/@ui5/webcomponents-react/dist/i18n/i18n-defaults.js
var ABORT = {
  key: "ABORT",
  defaultText: "Abort"
};
var CANCEL = {
  key: "CANCEL",
  defaultText: "Cancel"
};
var CLOSE = {
  key: "CLOSE",
  defaultText: "Close"
};
var DELETE = {
  key: "DELETE",
  defaultText: "Delete"
};
var IGNORE = {
  key: "IGNORE",
  defaultText: "Ignore"
};
var NO = {
  key: "NO",
  defaultText: "No"
};
var OK = {
  key: "OK",
  defaultText: "OK"
};
var RETRY = {
  key: "RETRY",
  defaultText: "Retry"
};
var YES = {
  key: "YES",
  defaultText: "Yes"
};
var CLEAR_SORTING = {
  key: "CLEAR_SORTING",
  defaultText: "Clear Sorting"
};
var SORT_ASCENDING = {
  key: "SORT_ASCENDING",
  defaultText: "Sort Ascending"
};
var SORT_DESCENDING = {
  key: "SORT_DESCENDING",
  defaultText: "Sort Descending"
};
var GROUP = {
  key: "GROUP",
  defaultText: "Group"
};
var GROUPED = {
  key: "GROUPED",
  defaultText: "Grouped"
};
var UNGROUP = {
  key: "UNGROUP",
  defaultText: "Ungroup"
};
var DRAG_TO_RESIZE = {
  key: "DRAG_TO_RESIZE",
  defaultText: "Drag to resize"
};
var CONFIRMATION = {
  key: "CONFIRMATION",
  defaultText: "Confirmation"
};
var ERROR = {
  key: "ERROR",
  defaultText: "Error"
};
var INFORMATION = {
  key: "INFORMATION",
  defaultText: "Information"
};
var SUCCESS = {
  key: "SUCCESS",
  defaultText: "Success"
};
var WARNING = {
  key: "WARNING",
  defaultText: "Warning"
};
var SHOW_FILTER_BAR = {
  key: "SHOW_FILTER_BAR",
  defaultText: "Show Filter Bar"
};
var HIDE_FILTER_BAR = {
  key: "HIDE_FILTER_BAR",
  defaultText: "Hide Filter Bar"
};
var CLEAR = {
  key: "CLEAR",
  defaultText: "Clear"
};
var RESTORE = {
  key: "RESTORE",
  defaultText: "Restore"
};
var FILTERS = {
  key: "FILTERS",
  defaultText: "Filters"
};
var ADAPT_FILTERS = {
  key: "ADAPT_FILTERS",
  defaultText: "Adapt Filters"
};
var GO = {
  key: "GO",
  defaultText: "Go"
};
var SAVE = {
  key: "SAVE",
  defaultText: "Save"
};
var BASIC = {
  key: "BASIC",
  defaultText: "Basic"
};
var SEARCH_FOR_FILTERS = {
  key: "SEARCH_FOR_FILTERS",
  defaultText: "Search for Filters"
};
var FIELDS_BY_ATTRIBUTE = {
  key: "FIELDS_BY_ATTRIBUTE",
  defaultText: "Show Filters by Attribute"
};
var VISIBLE = {
  key: "VISIBLE",
  defaultText: "Visible"
};
var ACTIVE = {
  key: "ACTIVE",
  defaultText: "Active"
};
var VISIBLE_AND_ACTIVE = {
  key: "VISIBLE_AND_ACTIVE",
  defaultText: "Visible and Active"
};
var MANDATORY = {
  key: "MANDATORY",
  defaultText: "Mandatory"
};
var LIST_VIEW = {
  key: "LIST_VIEW",
  defaultText: "List View"
};
var GROUP_VIEW = {
  key: "GROUP_VIEW",
  defaultText: "Group View"
};
var SHOW_VALUES = {
  key: "SHOW_VALUES",
  defaultText: "Show Values"
};
var HIDE_VALUES = {
  key: "HIDE_VALUES",
  defaultText: "Hide Values"
};
var FILTER = {
  key: "FILTER",
  defaultText: "Filter"
};
var FILTER_IS_ACTIVE = {
  key: "FILTER_IS_ACTIVE",
  defaultText: "Filter is active"
};
var COLLAPSE_HEADER = {
  key: "COLLAPSE_HEADER",
  defaultText: "Collapse Header"
};
var EXPAND_HEADER = {
  key: "EXPAND_HEADER",
  defaultText: "Expand Header"
};
var PIN_HEADER = {
  key: "PIN_HEADER",
  defaultText: "Pin Header"
};
var UNPIN_HEADER = {
  key: "UNPIN_HEADER",
  defaultText: "Unpin Header"
};
var AVAILABLE_ACTIONS = {
  key: "AVAILABLE_ACTIONS",
  defaultText: "Available Actions"
};
var X_OF_Y = {
  key: "X_OF_Y",
  defaultText: "Item {0} of {1}"
};
var MY_VIEWS = {
  key: "MY_VIEWS",
  defaultText: "My Views"
};
var SAVE_VIEW = {
  key: "SAVE_VIEW",
  defaultText: "Save View"
};
var MANAGE_VIEWS = {
  key: "MANAGE_VIEWS",
  defaultText: "Manage Views"
};
var VIEW = {
  key: "VIEW",
  defaultText: "View"
};
var VARIANT_MANAGEMENT_ERROR_DUPLICATE = {
  key: "VARIANT_MANAGEMENT_ERROR_DUPLICATE",
  defaultText: "The view name already exists. Please enter a different name."
};
var SPECIFY_VIEW_NAME = {
  key: "SPECIFY_VIEW_NAME",
  defaultText: "Please specify a view name."
};
var SET_AS_DEFAULT = {
  key: "SET_AS_DEFAULT",
  defaultText: "Set as Default"
};
var PUBLIC = {
  key: "PUBLIC",
  defaultText: "Public"
};
var APPLY_AUTOMATICALLY = {
  key: "APPLY_AUTOMATICALLY",
  defaultText: "Apply Automatically"
};
var SHARING = {
  key: "SHARING",
  defaultText: "Sharing"
};
var DEFAULT = {
  key: "DEFAULT",
  defaultText: "Default"
};
var CREATED_BY = {
  key: "CREATED_BY",
  defaultText: "Created By"
};
var MANAGE = {
  key: "MANAGE",
  defaultText: "Manage"
};
var PRIVATE = {
  key: "PRIVATE",
  defaultText: "Private"
};
var MARK_AS_STANDARD = {
  key: "MARK_AS_STANDARD",
  defaultText: "Use as Standard View"
};
var MARK_AS_FAVORITE = {
  key: "MARK_AS_FAVORITE",
  defaultText: "Mark as Favorite View"
};
var DELETE_VIEW = {
  key: "DELETE_VIEW",
  defaultText: "Delete View"
};
var SELECT_VIEW = {
  key: "SELECT_VIEW",
  defaultText: "Select View"
};
var SEARCH_VARIANT = {
  key: "SEARCH_VARIANT",
  defaultText: "Search Variant"
};
var ALL = {
  key: "ALL",
  defaultText: "All"
};
var SEARCH = {
  key: "SEARCH",
  defaultText: "Search"
};
var SAVE_AS = {
  key: "SAVE_AS",
  defaultText: "Save As"
};
var RESET = {
  key: "RESET",
  defaultText: "Reset"
};
var SELECTED_AS_FAVORITE = {
  key: "SELECTED_AS_FAVORITE",
  defaultText: "Selected as Favorite"
};
var UNSELECTED_AS_FAVORITE = {
  key: "UNSELECTED_AS_FAVORITE",
  defaultText: "Unselected as Favorite"
};
var SELECT = {
  key: "SELECT",
  defaultText: "Select"
};
var SELECTED = {
  key: "SELECTED",
  defaultText: "Selected"
};
var PRESS_ARROW_KEYS_TO_MOVE = {
  key: "PRESS_ARROW_KEYS_TO_MOVE",
  defaultText: "Press ARROW keys to move"
};
var LIST_NO_DATA = {
  key: "LIST_NO_DATA",
  defaultText: "No data"
};
var EXPAND_NODE = {
  key: "EXPAND_NODE",
  defaultText: "Expand Node"
};
var COLLAPSE_NODE = {
  key: "COLLAPSE_NODE",
  defaultText: "Collapse Node"
};
var EXPAND_PRESS_SPACE = {
  key: "EXPAND_PRESS_SPACE",
  defaultText: "To expand the row, press the spacebar."
};
var COLLAPSE_PRESS_SPACE = {
  key: "COLLAPSE_PRESS_SPACE",
  defaultText: "To collapse the row, press the spacebar."
};
var SELECT_PRESS_SPACE = {
  key: "SELECT_PRESS_SPACE",
  defaultText: "To select the row, press the spacebar."
};
var UNSELECT_PRESS_SPACE = {
  key: "UNSELECT_PRESS_SPACE",
  defaultText: "To deselect the row, press the spacebar."
};
var SELECT_ALL_PRESS_SPACE = {
  key: "SELECT_ALL_PRESS_SPACE",
  defaultText: "To select all rows, press the spacebar."
};
var UNSELECT_ALL_PRESS_SPACE = {
  key: "UNSELECT_ALL_PRESS_SPACE",
  defaultText: "To deselect all rows, press the spacebar."
};
var INVALID_TABLE = {
  key: "INVALID_TABLE",
  defaultText: "Invalid Table"
};
var FILTERED = {
  key: "FILTERED",
  defaultText: "Filtered"
};
var ARIA_DESC_CARD_HEADER = {
  key: "ARIA_DESC_CARD_HEADER",
  defaultText: "Card Header"
};
var SEMANTIC_COLOR_CRITICAL = {
  key: "SEMANTIC_COLOR_CRITICAL",
  defaultText: "Warning"
};
var SEMANTIC_COLOR_GOOD = {
  key: "SEMANTIC_COLOR_GOOD",
  defaultText: "Good"
};
var SEMANTIC_COLOR_NEUTRAL = {
  key: "SEMANTIC_COLOR_NEUTRAL",
  defaultText: "Neutral"
};
var SEMANTIC_COLOR_ERROR = {
  key: "SEMANTIC_COLOR_ERROR",
  defaultText: "Critical"
};
var NUMERICCONTENT_DEVIATION_UP = {
  key: "NUMERICCONTENT_DEVIATION_UP",
  defaultText: "Ascending"
};
var NUMERICCONTENT_DEVIATION_DOWN = {
  key: "NUMERICCONTENT_DEVIATION_DOWN",
  defaultText: "Descending"
};
var ARIA_OBJ_STATUS_DESC = {
  key: "ARIA_OBJ_STATUS_DESC",
  defaultText: "Object Status Button"
};
var ARIA_OBJ_STATUS_DESC_INACTIVE = {
  key: "ARIA_OBJ_STATUS_DESC_INACTIVE",
  defaultText: "Object Status"
};
var INDICATION_COLOR = {
  key: "INDICATION_COLOR",
  defaultText: "Indication Color"
};
var EMPTY_VALUE = {
  key: "EMPTY_VALUE",
  defaultText: "Empty Value"
};
var SELECT_ALL = {
  key: "SELECT_ALL",
  defaultText: "Select All"
};
var DESELECT_ALL = {
  key: "DESELECT_ALL",
  defaultText: "Deselect All"
};
var FILTER_DIALOG_RESET_WARNING = {
  key: "FILTER_DIALOG_RESET_WARNING",
  defaultText: "You are about to reset all the changes you made to your view settings and revert to the selected view."
};
var MOVE_TO_TOP = {
  key: "MOVE_TO_TOP",
  defaultText: "Move to Top{0}"
};
var MOVE_UP = {
  key: "MOVE_UP",
  defaultText: "Move Up{0}"
};
var MOVE_DOWN = {
  key: "MOVE_DOWN",
  defaultText: "Move Down{0}"
};
var MOVE_TO_BOTTOM = {
  key: "MOVE_TO_BOTTOM",
  defaultText: "Move to Bottom{0}"
};
var FILTER_DIALOG_REORDER_FILTERS = {
  key: "FILTER_DIALOG_REORDER_FILTERS",
  defaultText: "Press {0} and up or down key to move."
};
var DOWN_ARROW = {
  key: "DOWN_ARROW",
  defaultText: "Down Arrow"
};
var UP_ARROW = {
  key: "UP_ARROW",
  defaultText: "Up Arrow"
};
var NO_DATA_FILTERED = {
  key: "NO_DATA_FILTERED",
  defaultText: "No data found. Try adjusting the filter settings."
};
var ERROR_TYPE = {
  key: "ERROR_TYPE",
  defaultText: "Error Type"
};
var WARNING_TYPE = {
  key: "WARNING_TYPE",
  defaultText: "Warning Type"
};
var INFORMATION_TYPE = {
  key: "INFORMATION_TYPE",
  defaultText: "Information Type"
};
var SUCCESS_TYPE = {
  key: "SUCCESS_TYPE",
  defaultText: "Success Type"
};

// node_modules/@ui5/webcomponents-react/dist/internal/utils.js
var import_react13 = __toESM(require_react(), 1);
function flattenFragments(children, depth = 1) {
  const flatChildren = [];
  const removeFragments = (element, level = 0, key = []) => {
    var _a;
    if (!element) {
      return;
    }
    if (Array.isArray(element)) {
      import_react13.Children.toArray(element).forEach((child, index) => {
        removeFragments(child, level + 1, [...key, index]);
      });
      return;
    }
    if (element.type === import_react13.Fragment && level <= depth) {
      import_react13.Children.toArray((_a = element.props) == null ? void 0 : _a.children).forEach((item2, index) => {
        removeFragments(item2, level + 1, [...key, index]);
      });
    } else if (typeof element === "string" || typeof element === "number") {
      flatChildren.push(element);
    } else {
      flatChildren.push((0, import_react13.cloneElement)(element, {
        key: key.join(".")
      }));
    }
  };
  removeFragments(children);
  return flatChildren;
}
function getUi5TagWithSuffix2(baseTagName) {
  const tagNameSuffix = getEffectiveScopingSuffixForTag(baseTagName);
  return tagNameSuffix ? `${baseTagName}-${tagNameSuffix}` : baseTagName;
}
function trimAndRemoveSpaces(value) {
  return value.trim().replace(/\s\s+/g, " ");
}
var cssVarVersionInfoPrefix = getScopedVarName("--_ui5_").replace("--_ui5_", "");
function getTagNameWithoutScopingSuffix(tagName) {
  const tagNameSuffix = getCustomElementsScopingSuffix();
  return tagNameSuffix ? tagName.replace(`-${tagNameSuffix.toUpperCase()}`, "") : tagName;
}

// node_modules/@ui5/webcomponents-react/dist/themes/CustomVariables.js
var CustomVariables = function(CustomVariables2) {
  CustomVariables2["ActionSheetBoxShadow"] = "--_ui5wcr_ActionSheet_BoxShadow";
  CustomVariables2["ActionSheetHeaderBoxShadow"] = "--_ui5wcr_ActionSheet_HeaderBoxShadow";
  CustomVariables2["ActionSheetMobileHeaderBackground"] = "--_ui5wcr_ActionSheet_MobileHeaderBackground";
  CustomVariables2["ActionSheetMobileHeaderBorderRadius"] = "--_ui5wcr_ActionSheet_MobileHeaderBorderRadius";
  CustomVariables2["ActionSheetMobileHeaderBoxShadow"] = "--_ui5wcr_ActionSheet_MobileHeaderBoxShadow";
  CustomVariables2["ActionSheetMobileHeaderTextColor"] = "--_ui5wcr_ActionSheet_MobileHeaderTextColor";
  CustomVariables2["ActionSheetTopBorderRadius"] = "--_ui5wcr_ActionSheet_TopBorderRadius";
  CustomVariables2["AnalyticalTableHeaderActiveTextColor"] = "--_ui5wcr-AnalyticalTable-HeaderActiveTextColor";
  CustomVariables2["AnalyticalTableHeaderBorderWidth"] = "--_ui5wcr-AnalyticalTable-HeaderBorderWidth";
  CustomVariables2["AnalyticalTableHeaderFontFamily"] = "--_ui5wcr-AnalyticalTable-HeaderFontFamily";
  CustomVariables2["AnalyticalTableOuterBorderBlock"] = "--_ui5wcr-AnalyticalTable-OuterBorderBlock";
  CustomVariables2["AnalyticalTableOuterBorderInline"] = "--_ui5wcr-AnalyticalTable-OuterBorderInline";
  CustomVariables2["AnalyticalTableOuterCellBorder"] = "--_ui5wcr-AnalyticalTable-OuterCellBorder";
  CustomVariables2["FormHeaderBorderWidth"] = "--_ui5wcr_Form_HeaderBorderWidth";
  CustomVariables2["ObjectPageSectionBorderTop"] = "--_ui5wcr_ObjectPage_SectionBorderTop";
  CustomVariables2["ObjectPageSectionTitleFontFamily"] = "--_ui5wcr_ObjectPage_SectionTitleFontFamily";
  CustomVariables2["ObjectPageSectionTitleHeight"] = "--_ui5wcr_ObjectPage_SectionTitleHeight";
  CustomVariables2["ObjectPageSectionTitleLineHeight"] = "--_ui5wcr_ObjectPage_SectionTitleLineHeight";
  CustomVariables2["ObjectPageSectionTitleTextDecoration"] = "--_ui5wcr_ObjectPage_SectionTitleTextDecoration";
  CustomVariables2["ObjectPageSubSectionBackgroundColor"] = "--_ui5wcr_ObjectPage_SubSectionBackgroundColor";
  CustomVariables2["ObjectPageSubSectionBorderRadius"] = "--_ui5wcr_ObjectPage_SubSectionBorderRadius";
  CustomVariables2["ObjectPageSubSectionPaddingBlockStart"] = "--_ui5wcr_ObjectPage_PaddingBlockStart";
  CustomVariables2["SplitterBarBorderFix"] = "--_ui5wcr_Splitter_BarBorderHighContrastFix";
  CustomVariables2["SplitterBarBorderFocus"] = "--_ui5wcr_Splitter_BarBorderFocus";
  CustomVariables2["SplitterBarBorderStyle"] = "--_ui5wcr_Splitter_BarBorderStyle";
  CustomVariables2["SplitterBarOutline"] = "--_ui5wcr_Splitter_BarOutline";
  CustomVariables2["SplitterContentBorderColor"] = "--_ui5wcr_Splitter_ContentBorderColor";
  CustomVariables2["SplitterIconColor"] = "--_ui5wcr_Splitter_IconColor";
  CustomVariables2["ToolbarFocusOutline"] = "--_ui5wcr_Toolbar_FocusOutline";
  CustomVariables2["ToolbarFocusShadow"] = "--_ui5wcr_Toolbar_FocusShadow";
  CustomVariables2["ScrollbarBorder"] = "--_ui5wcr_Scrollbar_Border";
  CustomVariables2["ScrollbarBorderRadius"] = "--_ui5wcr_Scrollbar_BorderRadius";
  return CustomVariables2;
}({});
var CustomThemingParameters = new Proxy(CustomVariables, {
  get: (target, prop) => `var(${target[prop]})`
});

// node_modules/@ui5/webcomponents/dist/AvatarTemplate.js
function AvatarTemplate() {
  return jsxs("div", { class: "ui5-avatar-root", tabindex: this.tabindex, "data-sap-focus-ref": true, role: this._role, "aria-haspopup": this._ariaHasPopup, "aria-label": this.accessibleNameText, onKeyUp: this._onkeyup, onKeyDown: this._onkeydown, onClick: this._onclick, children: [this.hasImage ? jsx("slot", {}) : jsxs(Fragment, { children: [this.icon && jsx(Icon_default, { class: "ui5-avatar-icon", name: this.icon, accessibleName: this.accessibleName }), this.initials && jsxs(Fragment, { children: [jsx("span", { class: "ui5-avatar-initials ui5-avatar-initials-hidden", children: this.validInitials }), jsx(Icon_default, { name: this.fallbackIcon, class: "ui5-avatar-icon ui5-avatar-icon-fallback ui5-avatar-fallback-icon-hidden" })] })] }), jsx("slot", { name: "badge" })] });
}

// node_modules/@ui5/webcomponents/dist/generated/themes/Avatar.css.js
registerThemePropertiesLoader("@ui5/webcomponents-theming", "sap_horizon", async () => parameters_bundle_css_default);
registerThemePropertiesLoader("@ui5/webcomponents", "sap_horizon", async () => parameters_bundle_css_default2);
var Avatar_css_default = `:host(:not([hidden])){display:inline-block;box-sizing:border-box;position:relative;font-family:"72override",var(--sapFontFamily)}:host(:not([hidden]).ui5_hovered){opacity:.7}:host([interactive]:not([disabled])){cursor:pointer}:host([interactive]:not([hidden]):active){background-color:var(--sapButton_Active_Background);border-color:var(--sapButton_Active_BorderColor);color:var(--sapButton_Active_TextColor)}:host([interactive]:not([hidden]):not([disabled]):not(:active):not([focused]):hover){box-shadow:var(--ui5-v2-8-0-avatar-hover-box-shadow-offset)}:host([interactive][desktop]:not([hidden])) .ui5-avatar-root:focus,:host([interactive]:not([hidden])) .ui5-avatar-root:focus-visible{outline:var(--_ui5-v2-8-0_avatar_outline);outline-offset:var(--_ui5-v2-8-0_avatar_focus_offset)}:host([disabled]){opacity:var(--sapContent_DisabledOpacity)}:host{height:3rem;width:3rem;border-radius:50%;border:var(--ui5-v2-8-0-avatar-initials-border);outline:none;color:var(--ui5-v2-8-0-avatar-initials-color)}.ui5-avatar-root{display:flex;align-items:center;justify-content:center;outline:none;height:100%;width:100%;border-radius:inherit}:host([_size="XS"]),:host([size="XS"]){height:2rem;width:2rem;min-height:2rem;min-width:2rem;font-size:var(--_ui5-v2-8-0_avatar_fontsize_XS)}:host(:not([size])),:host([_size="S"]),:host([size="S"]){min-height:3rem;min-width:3rem;font-size:var(--_ui5-v2-8-0_avatar_fontsize_S)}:host([_size="M"]),:host([size="M"]){min-height:4rem;min-width:4rem;font-size:var(--_ui5-v2-8-0_avatar_fontsize_M)}:host([_size="L"]),:host([size="L"]){min-height:5rem;min-width:5rem;font-size:var(--_ui5-v2-8-0_avatar_fontsize_L)}:host([_size="XL"]),:host([size="XL"]){min-height:7rem;min-width:7rem;font-size:var(--_ui5-v2-8-0_avatar_fontsize_XL)}:host .ui5-avatar-icon{height:var(--_ui5-v2-8-0_avatar_fontsize_S);width:var(--_ui5-v2-8-0_avatar_fontsize_S);color:inherit}:host([_size="XS"]) .ui5-avatar-icon,:host([size="XS"]) .ui5-avatar-icon{height:var(--_ui5-v2-8-0_avatar_icon_XS);width:var(--_ui5-v2-8-0_avatar_icon_XS)}:host([_size="S"]) .ui5-avatar-icon,:host([size="S"]) .ui5-avatar-icon{height:var(--_ui5-v2-8-0_avatar_icon_S);width:var(--_ui5-v2-8-0_avatar_icon_S)}:host([_size="M"]) .ui5-avatar-icon,:host([size="M"]) .ui5-avatar-icon{height:var(--_ui5-v2-8-0_avatar_icon_M);width:var(--_ui5-v2-8-0_avatar_icon_M)}:host([_size="L"]) .ui5-avatar-icon,:host([size="L"]) .ui5-avatar-icon{height:var(--_ui5-v2-8-0_avatar_icon_L);width:var(--_ui5-v2-8-0_avatar_icon_L)}:host([_size="XL"]) .ui5-avatar-icon,:host([size="XL"]) .ui5-avatar-icon{height:var(--_ui5-v2-8-0_avatar_icon_XL);width:var(--_ui5-v2-8-0_avatar_icon_XL)}::slotted(*){border-radius:50%;width:100%;height:100%;pointer-events:none}:host([shape="Square"]){border-radius:var(--ui5-v2-8-0-avatar-border-radius)}:host([shape="Square"]) ::slotted(*){border-radius:calc(var(--ui5-v2-8-0-avatar-border-radius) - var(--ui5-v2-8-0-avatar-border-radius-img-deduction))}:host(:not([color-scheme])),:host(:not([_has-image])),:host([_color-scheme="Accent6"]),:host([ui5-avatar][color-scheme="Accent6"]){background-color:var(--ui5-v2-8-0-avatar-accent6);color:var(--ui5-v2-8-0-avatar-accent6-color);border-color:var(--ui5-v2-8-0-avatar-accent6-border-color)}:host([_color-scheme="Accent6"][interactive]:not([hidden]):not([disabled]):not(:active):hover),:host([ui5-avatar][color-scheme="Accent6"][interactive]:not([hidden]):not([disabled]):not(:active):hover){background-color:var(--sapAvatar_6_Hover_Background)}:host([_color-scheme="Accent1"]),:host([ui5-avatar][color-scheme="Accent1"]){background-color:var(--ui5-v2-8-0-avatar-accent1);color:var(--ui5-v2-8-0-avatar-accent1-color);border-color:var(--ui5-v2-8-0-avatar-accent1-border-color)}:host([_color-scheme="Accent1"][interactive]:not([hidden]):not([disabled]):not(:active):hover),:host([ui5-avatar][color-scheme="Accent1"][interactive]:not([hidden]):not([disabled]):not(:active):hover){background-color:var(--sapAvatar_1_Hover_Background)}:host([_color-scheme="Accent2"]),:host([ui5-avatar][color-scheme="Accent2"]){background-color:var(--ui5-v2-8-0-avatar-accent2);color:var(--ui5-v2-8-0-avatar-accent2-color);border-color:var(--ui5-v2-8-0-avatar-accent2-border-color)}:host([_color-scheme="Accent2"][interactive]:not([hidden]):not([disabled]):not(:active):hover),:host([ui5-avatar][color-scheme="Accent2"][interactive]:not([hidden]):not([disabled]):not(:active):hover){background-color:var(--sapAvatar_2_Hover_Background)}:host([_color-scheme="Accent3"]),:host([ui5-avatar][color-scheme="Accent3"]){background-color:var(--ui5-v2-8-0-avatar-accent3);color:var(--ui5-v2-8-0-avatar-accent3-color);border-color:var(--ui5-v2-8-0-avatar-accent3-border-color)}:host([_color-scheme="Accent3"][interactive]:not([hidden]):not([disabled]):not(:active):hover),:host([ui5-avatar][color-scheme="Accent3"][interactive]:not([hidden]):not([disabled]):not(:active):hover){background-color:var(--sapAvatar_3_Hover_Background)}:host([_color-scheme="Accent4"]),:host([ui5-avatar][color-scheme="Accent4"]){background-color:var(--ui5-v2-8-0-avatar-accent4);color:var(--ui5-v2-8-0-avatar-accent4-color);border-color:var(--ui5-v2-8-0-avatar-accent4-border-color)}:host([_color-scheme="Accent4"][interactive]:not([hidden]):not([disabled]):not(:active):hover),:host([ui5-avatar][color-scheme="Accent4"][interactive]:not([hidden]):not([disabled]):not(:active):hover){background-color:var(--sapAvatar_4_Hover_Background)}:host([_color-scheme="Accent5"]),:host([ui5-avatar][color-scheme="Accent5"]){background-color:var(--ui5-v2-8-0-avatar-accent5);color:var(--ui5-v2-8-0-avatar-accent5-color);border-color:var(--ui5-v2-8-0-avatar-accent5-border-color)}:host([_color-scheme="Accent5"][interactive]:not([hidden]):not([disabled]):not(:active):hover),:host([ui5-avatar][color-scheme="Accent5"][interactive]:not([hidden]):not([disabled]):not(:active):hover){background-color:var(--sapAvatar_5_Hover_Background)}:host([_color-scheme="Accent7"]),:host([ui5-avatar][color-scheme="Accent7"]){background-color:var(--ui5-v2-8-0-avatar-accent7);color:var(--ui5-v2-8-0-avatar-accent7-color);border-color:var(--ui5-v2-8-0-avatar-accent7-border-color)}:host([_color-scheme="Accent7"][interactive]:not([hidden]):not([disabled]):not(:active):hover),:host([ui5-avatar][color-scheme="Accent7"][interactive]:not([hidden]):not([disabled]):not(:active):hover){background-color:var(--sapAvatar_7_Hover_Background)}:host([_color-scheme="Accent8"]),:host([ui5-avatar][color-scheme="Accent8"]){background-color:var(--ui5-v2-8-0-avatar-accent8);color:var(--ui5-v2-8-0-avatar-accent8-color);border-color:var(--ui5-v2-8-0-avatar-accent8-border-color)}:host([_color-scheme="Accent8"][interactive]:not([hidden]):not([disabled]):not(:active):hover),:host([ui5-avatar][color-scheme="Accent8"][interactive]:not([hidden]):not([disabled]):not(:active):hover){background-color:var(--sapAvatar_8_Hover_Background)}:host([_color-scheme="Accent9"]),:host([ui5-avatar][color-scheme="Accent9"]){background-color:var(--ui5-v2-8-0-avatar-accent9);color:var(--ui5-v2-8-0-avatar-accent9-color);border-color:var(--ui5-v2-8-0-avatar-accent9-border-color)}:host([_color-scheme="Accent9"][interactive]:not([hidden]):not([disabled]):not(:active):hover),:host([ui5-avatar][color-scheme="Accent9"][interactive]:not([hidden]):not([disabled]):not(:active):hover){background-color:var(--sapAvatar_9_Hover_Background)}:host([_color-scheme="Accent10"]),:host([ui5-avatar][color-scheme="Accent10"]){background-color:var(--ui5-v2-8-0-avatar-accent10);color:var(--ui5-v2-8-0-avatar-accent10-color);border-color:var(--ui5-v2-8-0-avatar-accent10-border-color)}:host([_color-scheme="Accent10"][interactive]:not([hidden]):not([disabled]):not(:active):hover),:host([ui5-avatar][color-scheme="Accent10"][interactive]:not([hidden]):not([disabled]):not(:active):hover){background-color:var(--sapAvatar_10_Hover_Background)}:host([_color-scheme="Placeholder"]),:host([ui5-avatar][color-scheme="Placeholder"]){background-color:var(--ui5-v2-8-0-avatar-placeholder);color:var(--ui5-v2-8-0-avatar-placeholder-color);border-color:var(--sapAvatar_Lite_BorderColor)}:host([_has-image]){color:var(--ui5-v2-8-0-avatar-accent10-color);background-color:transparent;vertical-align:middle}.ui5-avatar-initials{color:inherit}.ui5-avatar-icon~.ui5-avatar-initials,.ui5-avatar-icon~.ui5-avatar-icon-fallback{display:none}.ui5-avatar-fallback-icon-hidden{display:none}.ui5-avatar-initials-hidden{position:absolute;visibility:hidden;z-index:0;pointer-events:none}::slotted([slot="badge"]){pointer-events:initial;position:absolute;bottom:0;right:0;width:1.125rem;height:1.125rem;font-family:"72override",var(--sapFontFamily);font-size:var(--sapFontSmallSize);color:var(--sapBackgroundColor);--_ui5-v2-8-0-tag-height: 1.125rem;--_ui5-v2-8-0-tag-border-radius: 50%}:host([_size="L"]) ::slotted([slot="badge"]),:host([size="L"]) ::slotted([slot="badge"]){width:1.25rem;height:1.25rem;--_ui5-v2-8-0-tag-height: 1.25rem;--_ui5-v2-8-0-tag-icon-width: .875rem}:host([_size="XL"]) ::slotted([slot="badge"]),:host([size="XL"]) ::slotted([slot="badge"]){width:1.75rem;height:1.75rem;--_ui5-v2-8-0-tag-height: 1.75rem;--_ui5-v2-8-0-tag-icon-width: 1rem}:host([shape="Square"]) ::slotted([slot="badge"]){bottom:-.125rem;right:-.125rem}:host([_size="L"][shape="Square"]) ::slotted([slot="badge"]),:host([size="L"][shape="Square"]) ::slotted([slot="badge"]){bottom:-.1875rem;right:-.1875rem}:host([_size="XL"][shape="Square"]) ::slotted([slot="badge"]),:host([size="XL"][shape="Square"]) ::slotted([slot="badge"]){bottom:-.25rem;right:-.25rem}
`;

// node_modules/@ui5/webcomponents/dist/types/AvatarSize.js
var AvatarSize;
(function(AvatarSize2) {
  AvatarSize2["XS"] = "XS";
  AvatarSize2["S"] = "S";
  AvatarSize2["M"] = "M";
  AvatarSize2["L"] = "L";
  AvatarSize2["XL"] = "XL";
})(AvatarSize || (AvatarSize = {}));
var AvatarSize_default = AvatarSize;

// node_modules/@ui5/webcomponents/dist/Avatar.js
var __decorate = function(decorators, target, key, desc) {
  var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
  if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
  else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
  return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var Avatar_1;
var Avatar = Avatar_1 = class Avatar2 extends UI5Element_default {
  constructor() {
    super();
    this.disabled = false;
    this.interactive = false;
    this.fallbackIcon = "employee";
    this.shape = "Circle";
    this.size = "S";
    this.colorScheme = "Accent6";
    this._colorScheme = "Accent6";
    this.accessibilityAttributes = {};
    this._hasImage = false;
    this._handleResizeBound = this.handleResize.bind(this);
  }
  get tabindex() {
    if (this.forcedTabIndex) {
      return parseInt(this.forcedTabIndex);
    }
    return this._interactive ? 0 : void 0;
  }
  /**
   * Returns the effective avatar size.
   * @default "S"
   * @private
   */
  get effectiveSize() {
    return this.getAttribute("size") || AvatarSize_default.S;
  }
  /**
   * Returns the effective background color.
   * @default "Accent6"
   * @private
   */
  get еffectiveBackgroundColor() {
    return this.getAttribute("color-scheme") || this._colorScheme;
  }
  get _role() {
    return this._interactive ? "button" : "img";
  }
  get _ariaHasPopup() {
    return this._getAriaHasPopup();
  }
  get _interactive() {
    return this.interactive && !this.disabled;
  }
  get validInitials() {
    const validInitials = /^[a-zA-Zà-üÀ-Ü]{1,3}$/, areInitialsValid = this.initials && validInitials.test(this.initials);
    if (areInitialsValid) {
      return this.initials;
    }
    return null;
  }
  get accessibleNameText() {
    if (this.accessibleName) {
      return this.accessibleName;
    }
    const defaultLabel = Avatar_1.i18nBundle.getText(AVATAR_TOOLTIP);
    return this.initials ? `${defaultLabel} ${this.initials}`.trim() : defaultLabel;
  }
  get hasImage() {
    this._hasImage = !!this.image.length;
    return this._hasImage;
  }
  get initialsContainer() {
    return this.getDomRef().querySelector(".ui5-avatar-initials");
  }
  get fallBackIconDomRef() {
    return this.getDomRef().querySelector(".ui5-avatar-icon-fallback");
  }
  async onAfterRendering() {
    await renderFinished();
    if (this.initials && !this.icon) {
      this._checkInitials();
    }
  }
  onEnterDOM() {
    if (isDesktop()) {
      this.setAttribute("desktop", "");
    }
    this.initialsContainer && ResizeHandler_default.register(this.initialsContainer, this._handleResizeBound);
  }
  onExitDOM() {
    this.initialsContainer && ResizeHandler_default.deregister(this.initialsContainer, this._handleResizeBound);
  }
  handleResize() {
    if (this.initials && !this.icon) {
      this._checkInitials();
    }
  }
  _checkInitials() {
    const avatar = this.getDomRef();
    const avatarInitials = avatar.querySelector(".ui5-avatar-initials");
    const validInitials = this.validInitials && avatarInitials && avatarInitials.scrollWidth <= avatar.scrollWidth;
    if (validInitials) {
      this.showInitials();
      return;
    }
    this.showFallbackIcon();
  }
  showFallbackIcon() {
    var _a, _b;
    (_a = this.initialsContainer) == null ? void 0 : _a.classList.add("ui5-avatar-initials-hidden");
    (_b = this.fallBackIconDomRef) == null ? void 0 : _b.classList.remove("ui5-avatar-fallback-icon-hidden");
  }
  showInitials() {
    var _a, _b;
    (_a = this.initialsContainer) == null ? void 0 : _a.classList.remove("ui5-avatar-initials-hidden");
    (_b = this.fallBackIconDomRef) == null ? void 0 : _b.classList.add("ui5-avatar-fallback-icon-hidden");
  }
  _onclick(e) {
    e.stopPropagation();
    this._fireClick();
  }
  _onkeydown(e) {
    if (!this._interactive) {
      return;
    }
    if (isEnter(e)) {
      this._fireClick();
    }
    if (isSpace(e)) {
      e.preventDefault();
    }
  }
  _onkeyup(e) {
    if (this._interactive && !e.shiftKey && isSpace(e)) {
      this._fireClick();
    }
  }
  _fireClick() {
    this.fireDecoratorEvent("click");
  }
  _getAriaHasPopup() {
    const ariaHaspopup = this.accessibilityAttributes.hasPopup;
    if (!this._interactive || !ariaHaspopup) {
      return;
    }
    return ariaHaspopup;
  }
};
__decorate([
  property_default({ type: Boolean })
], Avatar.prototype, "disabled", void 0);
__decorate([
  property_default({ type: Boolean })
], Avatar.prototype, "interactive", void 0);
__decorate([
  property_default()
], Avatar.prototype, "icon", void 0);
__decorate([
  property_default()
], Avatar.prototype, "fallbackIcon", void 0);
__decorate([
  property_default()
], Avatar.prototype, "initials", void 0);
__decorate([
  property_default()
], Avatar.prototype, "shape", void 0);
__decorate([
  property_default()
], Avatar.prototype, "size", void 0);
__decorate([
  property_default()
], Avatar.prototype, "colorScheme", void 0);
__decorate([
  property_default()
], Avatar.prototype, "_colorScheme", void 0);
__decorate([
  property_default()
], Avatar.prototype, "accessibleName", void 0);
__decorate([
  property_default({ type: Object })
], Avatar.prototype, "accessibilityAttributes", void 0);
__decorate([
  property_default({ noAttribute: true })
], Avatar.prototype, "forcedTabIndex", void 0);
__decorate([
  property_default({ type: Boolean })
], Avatar.prototype, "_hasImage", void 0);
__decorate([
  slot_default({ type: HTMLElement, "default": true })
], Avatar.prototype, "image", void 0);
__decorate([
  slot_default()
], Avatar.prototype, "badge", void 0);
__decorate([
  i18n_default("@ui5/webcomponents")
], Avatar, "i18nBundle", void 0);
Avatar = Avatar_1 = __decorate([
  customElement_default({
    tag: "ui5-avatar",
    languageAware: true,
    renderer: JsxRenderer_default,
    styles: Avatar_css_default,
    template: AvatarTemplate
  }),
  event_strict_default("click", {
    bubbles: true
  })
], Avatar);
Avatar.define();
var Avatar_default = Avatar;

// node_modules/@ui5/webcomponents-react/dist/webComponents/Avatar/index.js
var Avatar3 = withWebComponent("ui5-avatar", ["accessibilityAttributes", "accessibleName", "colorScheme", "fallbackIcon", "icon", "initials", "shape", "size"], ["disabled", "interactive"], ["badge"], []);
Avatar3.displayName = "Avatar";

// node_modules/@ui5/webcomponents/dist/types/AvatarGroupType.js
var AvatarGroupType;
(function(AvatarGroupType2) {
  AvatarGroupType2["Group"] = "Group";
  AvatarGroupType2["Individual"] = "Individual";
})(AvatarGroupType || (AvatarGroupType = {}));
var AvatarGroupType_default = AvatarGroupType;

// node_modules/@ui5/webcomponents/dist/types/AvatarColorScheme.js
var AvatarColorScheme;
(function(AvatarColorScheme2) {
  AvatarColorScheme2["Accent1"] = "Accent1";
  AvatarColorScheme2["Accent2"] = "Accent2";
  AvatarColorScheme2["Accent3"] = "Accent3";
  AvatarColorScheme2["Accent4"] = "Accent4";
  AvatarColorScheme2["Accent5"] = "Accent5";
  AvatarColorScheme2["Accent6"] = "Accent6";
  AvatarColorScheme2["Accent7"] = "Accent7";
  AvatarColorScheme2["Accent8"] = "Accent8";
  AvatarColorScheme2["Accent9"] = "Accent9";
  AvatarColorScheme2["Accent10"] = "Accent10";
  AvatarColorScheme2["Placeholder"] = "Placeholder";
})(AvatarColorScheme || (AvatarColorScheme = {}));
var AvatarColorScheme_default = AvatarColorScheme;

// node_modules/@ui5/webcomponents/dist/generated/themes/AvatarGroup.css.js
registerThemePropertiesLoader("@ui5/webcomponents-theming", "sap_horizon", async () => parameters_bundle_css_default);
registerThemePropertiesLoader("@ui5/webcomponents", "sap_horizon", async () => parameters_bundle_css_default2);
var AvatarGroup_css_default = `:host{-webkit-tap-highlight-color:rgba(0,0,0,0)}:host(:not([hidden])){display:block;width:100%}:host{--_ui5-v2-8-0_button_focused_border: var(--_ui5-v2-8-0_avatar_group_button_focus_border)}.ui5-avatar-group-items:focus{outline:none}:host([type="Group"][desktop]) .ui5-avatar-group-items:focus,:host([type="Group"]) .ui5-avatar-group-items:focus-visible{outline:var(--_ui5-v2-8-0_avatar_outline);outline-offset:var(--_ui5-v2-8-0_avatar_focus_offset);border-radius:var(--_ui5-v2-8-0_avatar_group_focus_border_radius)}.ui5-avatar-group-root{display:flex}.ui5-avatar-group-items{white-space:nowrap;position:relative;display:inline-flex}:host([type="Group"]) .ui5-avatar-group-items{cursor:pointer}:host([type="Group"]) ::slotted([ui5-button]),:host([type="Group"]) ::slotted([ui5-avatar]){pointer-events:none}.ui5-avatar-group-overflow-btn{overflow:visible}.ui5-avatar-group-overflow-btn::part(button){min-width:auto}::slotted([ui5-button]:not([hidden])),.ui5-avatar-group-overflow-btn:not([hidden]){--_ui5-v2-8-0_button_base_padding: 0;border-radius:50%;display:inline-flex;text-overflow:initial;z-index:0}::slotted([ui5-button][desktop]:focus),.ui5-avatar-group-overflow-btn[desktop]:focus{outline:var(--_ui5-v2-8-0_avatar_outline);outline-offset:var(--_ui5-v2-8-0_avatar_overflow_button_focus_offset)}.ui5-avatar-group-overflow-btn::part(button):focus-visible:after{outline:var(--_ui5-v2-8-0_avatar_outline);outline-offset:var(--_ui5-v2-8-0_avatar_focus_offset);border-radius:50%}.ui5-avatar-group-overflow-btn.ui5-avatar-group-overflow-btn-xs{height:2rem;width:2rem;min-width:2rem;font-size:.75rem}::slotted([ui5-button]),.ui5-avatar-group-overflow-btn.ui5-avatar-group-overflow-btn-s{height:3rem;width:3rem;min-width:3rem;font-size:1.125rem}.ui5-avatar-group-overflow-btn.ui5-avatar-group-overflow-btn-m{height:4rem;width:4rem;min-width:4rem;font-size:1.625rem}.ui5-avatar-group-overflow-btn.ui5-avatar-group-overflow-btn-l{height:5rem;width:5rem;min-width:5rem;font-size:2rem}.ui5-avatar-group-overflow-btn.ui5-avatar-group-overflow-btn-xl{height:7rem;width:7rem;min-width:7rem;font-size:2.75rem}
`;

// node_modules/@ui5/webcomponents/dist/AvatarGroupTemplate.js
function AvatarGroupTemplate() {
  return jsx("div", { class: "ui5-avatar-group-root", children: jsxs("div", { class: "ui5-avatar-group-items", role: this._role, tabindex: this._groupTabIndex, "aria-label": this._ariaLabelText, "aria-haspopup": this._containerAriaHasPopup, onClick: this._onClick, onKeyUp: this._onkeyup, onKeyDown: this._onkeydown, onFocusIn: this._onfocusin, children: [jsx("slot", { onClick: this.onAvatarClick, "onui5-click": this.onAvatarUI5Click }), this._customOverflowButton ? jsx("slot", { onClick: this.onOverflowButtonClick, name: "overflowButton" }) : jsx(Button_default, { onClick: this.onOverflowButtonClick, accessibilityAttributes: this._overflowButtonAccAttributes, accessibleName: this._overflowButtonAriaLabelText, hidden: this._overflowBtnHidden, nonInteractive: this._isGroup, class: {
    "ui5-avatar-group-overflow-btn": true,
    "ui5-avatar-group-overflow-btn-xs": this.firstAvatarSize === AvatarSize_default.XS,
    "ui5-avatar-group-overflow-btn-s": this.firstAvatarSize === AvatarSize_default.S,
    "ui5-avatar-group-overflow-btn-m": this.firstAvatarSize === AvatarSize_default.M,
    "ui5-avatar-group-overflow-btn-l": this.firstAvatarSize === AvatarSize_default.L,
    "ui5-avatar-group-overflow-btn-xl": this.firstAvatarSize === AvatarSize_default.XL
  }, children: this._overflowButtonText })] }) });
}

// node_modules/@ui5/webcomponents/dist/AvatarGroup.js
var __decorate2 = function(decorators, target, key, desc) {
  var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
  if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
  else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
  return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var AvatarGroup_1;
var OVERFLOW_BTN_CLASS = "ui5-avatar-group-overflow-btn";
var AVATAR_GROUP_OVERFLOW_BTN_SELECTOR = `.${OVERFLOW_BTN_CLASS}`;
var offsets = {
  [AvatarSize_default.XS]: {
    [AvatarGroupType_default.Individual]: "0.0625rem",
    [AvatarGroupType_default.Group]: "-0.5rem"
  },
  [AvatarSize_default.S]: {
    [AvatarGroupType_default.Individual]: "0.125rem",
    [AvatarGroupType_default.Group]: "-1.25rem"
  },
  [AvatarSize_default.M]: {
    [AvatarGroupType_default.Individual]: "0.125rem",
    [AvatarGroupType_default.Group]: "-1.625rem"
  },
  [AvatarSize_default.L]: {
    [AvatarGroupType_default.Individual]: "0.125rem",
    [AvatarGroupType_default.Group]: " -2rem"
  },
  [AvatarSize_default.XL]: {
    [AvatarGroupType_default.Individual]: "0.25rem",
    [AvatarGroupType_default.Group]: "-2.75rem"
  }
};
var AvatarGroup = AvatarGroup_1 = class AvatarGroup2 extends UI5Element_default {
  constructor() {
    super();
    this.type = "Group";
    this.accessibilityAttributes = {};
    this._colorIndex = 0;
    this._hiddenItems = 0;
    this._itemNavigation = new ItemNavigation_default(this, {
      getItemsCallback: () => {
        return this._isGroup ? [] : this.items.slice(0, this._hiddenStartIndex);
      }
    });
    this._onResizeHandler = this._onResize.bind(this);
  }
  /**
   * Returns an array containing the `ui5-avatar` instances that are currently not displayed due to lack of space.
   * @default []
   * @public
   */
  get hiddenItems() {
    return this.items.slice(this._hiddenStartIndex);
  }
  /**
   * Returns an array containing the `AvatarColorScheme` values that correspond to the avatars in the component.
   * @default []
   * @public
   */
  get colorScheme() {
    return this.items.map((avatar) => avatar.еffectiveBackgroundColor);
  }
  get _customOverflowButton() {
    return this.overflowButton.length ? this.overflowButton[0] : void 0;
  }
  get _ariaLabelText() {
    const hiddenItemsCount = this.hiddenItems.length;
    const typeLabelKey = this._isGroup ? AVATAR_GROUP_ARIA_LABEL_GROUP : AVATAR_GROUP_ARIA_LABEL_INDIVIDUAL;
    let text = AvatarGroup_1.i18nBundle.getText(typeLabelKey);
    text += ` ${AvatarGroup_1.i18nBundle.getText(AVATAR_GROUP_DISPLAYED_HIDDEN_LABEL, this._itemsCount - hiddenItemsCount, hiddenItemsCount)}`;
    if (this._isGroup) {
      text += ` ${AvatarGroup_1.i18nBundle.getText(AVATAR_GROUP_SHOW_COMPLETE_LIST_LABEL)}`;
    } else {
      text += ` ${AvatarGroup_1.i18nBundle.getText(AVATAR_GROUP_MOVE)}`;
    }
    return text;
  }
  get _overflowButtonAriaLabelText() {
    return this._isGroup ? void 0 : AvatarGroup_1.i18nBundle.getText(AVATAR_GROUP_SHOW_COMPLETE_LIST_LABEL);
  }
  get _containerAriaHasPopup() {
    return this._isGroup ? this._getAriaHasPopup() : void 0;
  }
  get _overflowButtonAccAttributes() {
    return {
      hasPopup: this._isGroup ? void 0 : this._getAriaHasPopup()
    };
  }
  get _role() {
    return this._isGroup ? "button" : "group";
  }
  get _hiddenStartIndex() {
    return this._itemsCount - this._hiddenItems;
  }
  get _overflowBtnHidden() {
    return this._hiddenItems === 0;
  }
  get _isGroup() {
    return this.type === AvatarGroupType_default.Group;
  }
  get _itemsCount() {
    return this.items.length;
  }
  get _groupTabIndex() {
    return this._isGroup ? 0 : -1;
  }
  get _overflowButton() {
    return this.shadowRoot.querySelector(AVATAR_GROUP_OVERFLOW_BTN_SELECTOR);
  }
  /**
   * Return the effective overflow button width
   * Differences are that when in "Group" type the button is offset and overlaps the avatars
   *
   * 1) In case of "Group", (LTR/RTL aware) button width is qual to second item offset left/right
   * 2) In case of "Individual" group type width is directly taken from button element
   * @private
   */
  get _overflowButtonEffectiveWidth() {
    const button = this._customOverflowButton ? this._customOverflowButton : this._overflowButton;
    if (!button) {
      return 0;
    }
    if (this._isGroup) {
      let item2 = this.items[1];
      const ltrEffectiveWidth = item2.offsetLeft - this.offsetLeft;
      if (!item2 || item2.hidden) {
        item2 = button;
      }
      return this.effectiveDir === "rtl" ? this._getWidthToItem(item2) : ltrEffectiveWidth;
    }
    return button.offsetWidth;
  }
  get firstAvatarSize() {
    var _a;
    return ((_a = this.items[0]) == null ? void 0 : _a.size) ?? AvatarSize_default.S;
  }
  onAfterRendering() {
    this._overflowItems();
  }
  onBeforeRendering() {
    if (this._customOverflowButton) {
      this._customOverflowButton.nonInteractive = this._isGroup;
    }
    this._prepareAvatars();
  }
  onEnterDOM() {
    if (isDesktop()) {
      this.setAttribute("desktop", "");
    }
    ResizeHandler_default.register(this, this._onResizeHandler);
  }
  onExitDOM() {
    ResizeHandler_default.deregister(this, this._onResizeHandler);
  }
  _onResize() {
    this._overflowItems();
  }
  _onkeydown(e) {
    if (this._isGroup) {
      if (isEnter(e)) {
        this._fireGroupEvent(e.target);
      } else if (isSpace(e)) {
        e.preventDefault();
      }
    }
  }
  _onkeyup(e) {
    if (!e.shiftKey && isSpace(e) && this._isGroup) {
      this._fireGroupEvent(e.target);
      e.preventDefault();
    }
  }
  _fireGroupEvent(targetRef) {
    const isOverflowButtonClicked = targetRef.classList.contains(OVERFLOW_BTN_CLASS) || targetRef === this._customOverflowButton;
    this.fireDecoratorEvent("click", {
      targetRef,
      overflowButtonClicked: isOverflowButtonClicked
    });
  }
  _onClick(e) {
    e.stopPropagation();
    this._isGroup && this._fireGroupEvent(e.target);
  }
  onAvatarClick(e) {
    e.stopPropagation();
    this.fireDecoratorEvent("click", {
      targetRef: e.target,
      overflowButtonClicked: false
    });
  }
  onAvatarUI5Click(e) {
    e.stopPropagation();
  }
  onOverflowButtonClick(e) {
    e.stopPropagation();
    this.fireDecoratorEvent("click", {
      targetRef: e.target,
      overflowButtonClicked: true
    });
  }
  /**
   * Modifies avatars to the needs of avatar group properties. Respects already set size and background color.
   * Set the margins (offsets) based on RTL/LTR.
   * @private
   */
  _prepareAvatars() {
    this._colorIndex = 0;
    this.items.forEach((avatar, index) => {
      const colorIndex = this._getNextBackgroundColor();
      avatar.interactive = !this._isGroup;
      if (!avatar.getAttribute("_color-scheme")) {
        avatar.setAttribute("_color-scheme", AvatarColorScheme_default[`Accent${colorIndex}`]);
      }
      if (index !== this._itemsCount - 1 || this._customOverflowButton) {
        avatar.style.marginInlineEnd = offsets[avatar.effectiveSize][this.type];
      }
    });
  }
  _onfocusin(e) {
    this._itemNavigation.setCurrentItem(e.target);
  }
  /**
   * Returns the total width to item excluding the item width
   * RTL/LTR aware
   * @private
   * @param item
   */
  _getWidthToItem(item2) {
    const isRTL = this.effectiveDir === "rtl";
    const ltrWidthToItem = item2.offsetLeft - this.offsetLeft;
    if (isRTL) {
      const itemOffsetParent = item2.offsetParent;
      if (!itemOffsetParent) {
        return 0;
      }
      return itemOffsetParent.offsetWidth - item2.offsetLeft - item2.offsetWidth;
    }
    return ltrWidthToItem;
  }
  /**
   * Overflows items that were not able to fit the container
   * @private
   */
  _overflowItems() {
    if (this.items.length < 2) {
      this._setHiddenItems(0);
      return;
    }
    let hiddenItems = 0;
    for (let index = 0; index < this._itemsCount; index++) {
      const item2 = this.items[index];
      item2.hidden = false;
      let totalWidth = this._getWidthToItem(item2) + item2.offsetWidth;
      if (index !== this._itemsCount - 1 || this._customOverflowButton) {
        totalWidth += this._overflowButtonEffectiveWidth;
      }
      if (totalWidth > this.offsetWidth) {
        hiddenItems = this._itemsCount - index;
        break;
      }
    }
    this._setHiddenItems(hiddenItems);
  }
  _getNextBackgroundColor() {
    if (++this._colorIndex > 10) {
      this._colorIndex = 1;
    }
    return this._colorIndex;
  }
  _setHiddenItems(hiddenItems) {
    const shouldFireEvent = this._hiddenItems !== hiddenItems;
    this._hiddenItems = hiddenItems;
    this.items.forEach((item2, index) => {
      item2.hidden = index >= this._hiddenStartIndex;
    });
    this._overflowButtonText = `+${hiddenItems > 99 ? 99 : hiddenItems}`;
    if (shouldFireEvent) {
      this.fireDecoratorEvent("overflow");
    }
  }
  _getAriaHasPopup() {
    return this.accessibilityAttributes.hasPopup;
  }
};
__decorate2([
  property_default()
], AvatarGroup.prototype, "type", void 0);
__decorate2([
  property_default({ type: Object })
], AvatarGroup.prototype, "accessibilityAttributes", void 0);
__decorate2([
  property_default({ noAttribute: true })
], AvatarGroup.prototype, "_overflowButtonText", void 0);
__decorate2([
  slot_default({ type: HTMLElement, "default": true })
], AvatarGroup.prototype, "items", void 0);
__decorate2([
  slot_default()
], AvatarGroup.prototype, "overflowButton", void 0);
__decorate2([
  i18n_default("@ui5/webcomponents")
], AvatarGroup, "i18nBundle", void 0);
AvatarGroup = AvatarGroup_1 = __decorate2([
  customElement_default({
    tag: "ui5-avatar-group",
    renderer: JsxRenderer_default,
    template: AvatarGroupTemplate,
    styles: AvatarGroup_css_default
  }),
  event_strict_default("click"),
  event_strict_default("overflow")
], AvatarGroup);
AvatarGroup.define();

// node_modules/@ui5/webcomponents-react/dist/webComponents/AvatarGroup/index.js
var AvatarGroup3 = withWebComponent("ui5-avatar-group", ["accessibilityAttributes", "type"], [], ["overflowButton"], ["click", "overflow"]);
AvatarGroup3.displayName = "AvatarGroup";

// node_modules/@ui5/webcomponents/dist/BarTemplate.js
function BarTemplate() {
  return jsxs("div", { class: "ui5-bar-root", "aria-label": this.accInfo.label, role: "toolbar", part: "bar", children: [jsx("div", { class: "ui5-bar-content-container ui5-bar-startcontent-container", part: "startContent", children: jsx("slot", { name: "startContent" }) }), jsx("div", { class: "ui5-bar-content-container ui5-bar-midcontent-container", part: "midContent", children: jsx("slot", {}) }), jsx("div", { class: "ui5-bar-content-container ui5-bar-endcontent-container", part: "endContent", children: jsx("slot", { name: "endContent" }) })] });
}

// node_modules/@ui5/webcomponents/dist/generated/themes/Bar.css.js
registerThemePropertiesLoader("@ui5/webcomponents-theming", "sap_horizon", async () => parameters_bundle_css_default);
registerThemePropertiesLoader("@ui5/webcomponents", "sap_horizon", async () => parameters_bundle_css_default2);
var Bar_css_default = `:host{background-color:var(--sapPageHeader_Background);height:var(--_ui5-v2-8-0_bar_base_height);width:100%;box-shadow:var(--sapContent_HeaderShadow);display:block}.ui5-bar-root{container-type:size;display:flex;align-items:center;justify-content:space-between;height:100%;width:100%;background-color:inherit;box-shadow:inherit;border-radius:inherit}.ui5-bar-root .ui5-bar-startcontent-container{padding-inline-start:var(--_ui5-v2-8-0_bar-start-container-padding-start);display:flex;flex-direction:row;align-items:center;justify-content:flex-start}.ui5-bar-root .ui5-bar-content-container{min-width:calc(30% - calc(var(--_ui5-v2-8-0_bar-start-container-padding-start) + var(--_ui5-v2-8-0_bar-end-container-padding-end) + (2*var(--_ui5-v2-8-0_bar-mid-container-padding-start-end))))}.ui5-bar-root.ui5-bar-root-shrinked .ui5-bar-content-container{min-width:0px;overflow:hidden;height:100%}.ui5-bar-root .ui5-bar-endcontent-container{padding-inline-end:var(--_ui5-v2-8-0_bar-end-container-padding-end);display:flex;flex-direction:row;align-items:center;justify-content:flex-end}.ui5-bar-root .ui5-bar-midcontent-container{padding:0 var(--_ui5-v2-8-0_bar-mid-container-padding-start-end);display:flex;flex-direction:row;align-items:center;justify-content:center}:host([design="Footer"]){background-color:var(--sapPageFooter_Background);border-top:.0625rem solid var(--sapPageFooter_BorderColor);box-shadow:none}:host([design="Subheader"]){height:var(--_ui5-v2-8-0_bar_subheader_height);margin-top:var(--_ui5-v2-8-0_bar_subheader_margin-top)}:host([design="FloatingFooter"]){border-radius:var(--sapElement_BorderCornerRadius);background-color:var(--sapPageFooter_Background);box-shadow:var(--sapContent_Shadow1);border:none}::slotted(*){margin:0 .25rem}@container (width < 600px){*{--_ui5-v2-8-0_bar-start-container-padding-start: var(--_ui5-v2-8-0_bar-start-container-padding-start_S);--_ui5-v2-8-0_bar-end-container-padding-end: var(--_ui5-v2-8-0_bar-end-container-padding-end_S) }}@container (width > 1439px){*{--_ui5-v2-8-0_bar-start-container-padding-start: var(--_ui5-v2-8-0_bar-start-container-padding-start_XL);--_ui5-v2-8-0_bar-end-container-padding-end: var(--_ui5-v2-8-0_bar-end-container-padding-end_XL)}}
`;

// node_modules/@ui5/webcomponents/dist/Bar.js
var __decorate3 = function(decorators, target, key, desc) {
  var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
  if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
  else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
  return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var Bar = class Bar2 extends UI5Element_default {
  get accInfo() {
    return {
      "label": this.design
    };
  }
  constructor() {
    super();
    this.design = "Header";
    this._handleResizeBound = this.handleResize.bind(this);
  }
  handleResize() {
    const bar = this.getDomRef();
    const barWidth = bar.offsetWidth;
    const needShrinked = Array.from(bar.children).some((child) => {
      return child.offsetWidth > barWidth / 3;
    });
    bar.classList.toggle("ui5-bar-root-shrinked", needShrinked);
  }
  onEnterDOM() {
    ResizeHandler_default.register(this, this._handleResizeBound);
    this.getDomRef().querySelectorAll(".ui5-bar-content-container").forEach((child) => {
      ResizeHandler_default.register(child, this._handleResizeBound);
    }, this);
  }
  onExitDOM() {
    ResizeHandler_default.deregister(this, this._handleResizeBound);
    this.getDomRef().querySelectorAll(".ui5-bar-content-container").forEach((child) => {
      ResizeHandler_default.deregister(child, this._handleResizeBound);
    }, this);
  }
};
__decorate3([
  property_default()
], Bar.prototype, "design", void 0);
__decorate3([
  slot_default({ type: HTMLElement })
], Bar.prototype, "startContent", void 0);
__decorate3([
  slot_default({ type: HTMLElement, "default": true })
], Bar.prototype, "middleContent", void 0);
__decorate3([
  slot_default({ type: HTMLElement })
], Bar.prototype, "endContent", void 0);
Bar = __decorate3([
  customElement_default({
    tag: "ui5-bar",
    fastNavigation: true,
    renderer: JsxRenderer_default,
    styles: Bar_css_default,
    template: BarTemplate
  })
], Bar);
Bar.define();
var Bar_default = Bar;

// node_modules/@ui5/webcomponents-react/dist/webComponents/Bar/index.js
var Bar3 = withWebComponent("ui5-bar", ["design"], [], ["endContent", "startContent"], []);
Bar3.displayName = "Bar";

// node_modules/@ui5/webcomponents-fiori/dist/ssr-zxing.js
var ZXing = __toESM(require_index_min());
var ssr_zxing_default = ZXing;

// node_modules/@ui5/webcomponents-fiori/dist/generated/i18n/i18n-defaults.js
var BARCODE_SCANNER_DIALOG_CANCEL_BUTTON_TXT = { key: "BARCODE_SCANNER_DIALOG_CANCEL_BUTTON_TXT", defaultText: "Cancel" };
var BARCODE_SCANNER_DIALOG_LOADING_TXT = { key: "BARCODE_SCANNER_DIALOG_LOADING_TXT", defaultText: "Loading" };
var DYNAMIC_PAGE_ARIA_LABEL_EXPANDED_HEADER = { key: "DYNAMIC_PAGE_ARIA_LABEL_EXPANDED_HEADER", defaultText: "Header Expanded" };
var DYNAMIC_PAGE_ARIA_LABEL_SNAPPED_HEADER = { key: "DYNAMIC_PAGE_ARIA_LABEL_SNAPPED_HEADER", defaultText: "Header Snapped" };
var DYNAMIC_PAGE_ARIA_LABEL_EXPAND_HEADER = { key: "DYNAMIC_PAGE_ARIA_LABEL_EXPAND_HEADER", defaultText: "Expand Header" };
var DYNAMIC_PAGE_ARIA_LABEL_SNAP_HEADER = { key: "DYNAMIC_PAGE_ARIA_LABEL_SNAP_HEADER", defaultText: "Snap Header" };
var DYNAMIC_PAGE_ARIA_LABEL_PIN_HEADER = { key: "DYNAMIC_PAGE_ARIA_LABEL_PIN_HEADER", defaultText: "Pin Header" };
var DYNAMIC_PAGE_ARIA_DESCR_TOGGLE_HEADER = { key: "DYNAMIC_PAGE_ARIA_DESCR_TOGGLE_HEADER", defaultText: "Toggle Header" };
var FCL_START_COLUMN_TXT = { key: "FCL_START_COLUMN_TXT", defaultText: "First column" };
var FCL_MIDDLE_COLUMN_TXT = { key: "FCL_MIDDLE_COLUMN_TXT", defaultText: "Middle column" };
var FCL_END_COLUMN_TXT = { key: "FCL_END_COLUMN_TXT", defaultText: "Last column" };
var FCL_START_SEPARATOR_TOOLTIP = { key: "FCL_START_SEPARATOR_TOOLTIP", defaultText: "Resize between start and mid columns" };
var FCL_END_SEPARATOR_TOOLTIP = { key: "FCL_END_SEPARATOR_TOOLTIP", defaultText: "Resize between mid and end columns" };
var NAVIGATION_MENU_POPOVER_HIDDEN_TEXT = { key: "NAVIGATION_MENU_POPOVER_HIDDEN_TEXT", defaultText: "Navigation" };
var NOTIFICATION_LIST_ACCESSIBLE_NAME = { key: "NOTIFICATION_LIST_ACCESSIBLE_NAME", defaultText: "Notifications" };
var NOTIFICATION_LIST_ITEM_SHOW_MORE = { key: "NOTIFICATION_LIST_ITEM_SHOW_MORE", defaultText: "More" };
var NOTIFICATION_LIST_ITEM_SHOW_LESS = { key: "NOTIFICATION_LIST_ITEM_SHOW_LESS", defaultText: "Less" };
var NOTIFICATION_LIST_ITEM_MENU_BTN_TITLE = { key: "NOTIFICATION_LIST_ITEM_MENU_BTN_TITLE", defaultText: "Actions" };
var NOTIFICATION_LIST_ITEM_MORE_LINK_LABEL_FULL = { key: "NOTIFICATION_LIST_ITEM_MORE_LINK_LABEL_FULL", defaultText: "More button. Show the full texts" };
var NOTIFICATION_LIST_ITEM_MORE_LINK_LABEL_TRUNCATE = { key: "NOTIFICATION_LIST_ITEM_MORE_LINK_LABEL_TRUNCATE", defaultText: "Less button. Show the texts with truncation" };
var NOTIFICATION_LIST_ITEM_CLOSE_BTN_TITLE = { key: "NOTIFICATION_LIST_ITEM_CLOSE_BTN_TITLE", defaultText: "Close" };
var NOTIFICATION_LIST_ITEM_LOADING = { key: "NOTIFICATION_LIST_ITEM_LOADING", defaultText: "Loading" };
var NOTIFICATION_LIST_ITEM_READ = { key: "NOTIFICATION_LIST_ITEM_READ", defaultText: "Read" };
var NOTIFICATION_LIST_ITEM_UNREAD = { key: "NOTIFICATION_LIST_ITEM_UNREAD", defaultText: "Unread" };
var NOTIFICATION_LIST_ITEM_INFORMATION_STATUS_TXT = { key: "NOTIFICATION_LIST_ITEM_INFORMATION_STATUS_TXT", defaultText: "Status Information" };
var NOTIFICATION_LIST_ITEM_POSITIVE_STATUS_TXT = { key: "NOTIFICATION_LIST_ITEM_POSITIVE_STATUS_TXT", defaultText: "Status Positive" };
var NOTIFICATION_LIST_ITEM_NEGATIVE_STATUS_TXT = { key: "NOTIFICATION_LIST_ITEM_NEGATIVE_STATUS_TXT", defaultText: "Status Negative" };
var NOTIFICATION_LIST_ITEM_CRITICAL_STATUS_TXT = { key: "NOTIFICATION_LIST_ITEM_CRITICAL_STATUS_TXT", defaultText: "Status Critical" };
var NOTIFICATION_LIST_ITEM_IMPORTANT_TXT = { key: "NOTIFICATION_LIST_ITEM_IMPORTANT_TXT", defaultText: "Important" };
var NOTIFICATION_LIST_GROUP_ITEM_TXT = { key: "NOTIFICATION_LIST_GROUP_ITEM_TXT", defaultText: "Notification Group" };
var NOTIFICATION_LIST_GROUP_ITEM_TOGGLE_ICON_COLLAPSE_TITLE = { key: "NOTIFICATION_LIST_GROUP_ITEM_TOGGLE_ICON_COLLAPSE_TITLE", defaultText: "Expand/Collapse" };
var NOTIFICATION_LIST_GROUP_COLLAPSED = { key: "NOTIFICATION_LIST_GROUP_COLLAPSED", defaultText: "Collapsed" };
var NOTIFICATION_LIST_GROUP_EXPANDED = { key: "NOTIFICATION_LIST_GROUP_EXPANDED", defaultText: "Expanded" };
var TIMELINE_ARIA_LABEL = { key: "TIMELINE_ARIA_LABEL", defaultText: "Timeline" };
var TIMELINE_ITEM_INFORMATION_STATE_TEXT = { key: "TIMELINE_ITEM_INFORMATION_STATE_TEXT", defaultText: "Information State" };
var TIMELINE_ITEM_POSITIVE_STATE_TEXT = { key: "TIMELINE_ITEM_POSITIVE_STATE_TEXT", defaultText: "Positive State" };
var TIMELINE_ITEM_NEGATIVE_STATE_TEXT = { key: "TIMELINE_ITEM_NEGATIVE_STATE_TEXT", defaultText: "Negative State" };
var TIMELINE_ITEM_CRITICAL_STATE_TEXT = { key: "TIMELINE_ITEM_CRITICAL_STATE_TEXT", defaultText: "Critical State" };
var UPLOADCOLLECTIONITEM_CANCELBUTTON_TEXT = { key: "UPLOADCOLLECTIONITEM_CANCELBUTTON_TEXT", defaultText: "Cancel" };
var UPLOADCOLLECTIONITEM_RENAMEBUTTON_TEXT = { key: "UPLOADCOLLECTIONITEM_RENAMEBUTTON_TEXT", defaultText: "Rename" };
var UPLOADCOLLECTIONITEM_ERROR_STATE = { key: "UPLOADCOLLECTIONITEM_ERROR_STATE", defaultText: "Terminated" };
var UPLOADCOLLECTIONITEM_READY_STATE = { key: "UPLOADCOLLECTIONITEM_READY_STATE", defaultText: "Pending" };
var UPLOADCOLLECTIONITEM_UPLOADING_STATE = { key: "UPLOADCOLLECTIONITEM_UPLOADING_STATE", defaultText: "Uploading" };
var UPLOADCOLLECTIONITEM_TERMINATE_BUTTON_TEXT = { key: "UPLOADCOLLECTIONITEM_TERMINATE_BUTTON_TEXT", defaultText: "Terminate" };
var UPLOADCOLLECTIONITEM_RETRY_BUTTON_TEXT = { key: "UPLOADCOLLECTIONITEM_RETRY_BUTTON_TEXT", defaultText: "Retry" };
var UPLOADCOLLECTIONITEM_EDIT_BUTTON_TEXT = { key: "UPLOADCOLLECTIONITEM_EDIT_BUTTON_TEXT", defaultText: "Edit" };
var UPLOADCOLLECTION_NO_DATA_TEXT = { key: "UPLOADCOLLECTION_NO_DATA_TEXT", defaultText: "No files found" };
var UPLOADCOLLECTION_NO_DATA_DESCRIPTION = { key: "UPLOADCOLLECTION_NO_DATA_DESCRIPTION", defaultText: 'Drop files to upload them or use the "Upload" button.' };
var UPLOADCOLLECTION_ARIA_ROLE_DESCRIPTION = { key: "UPLOADCOLLECTION_ARIA_ROLE_DESCRIPTION", defaultText: "Upload Collection" };
var UPLOADCOLLECTION_DRAG_FILE_INDICATOR = { key: "UPLOADCOLLECTION_DRAG_FILE_INDICATOR", defaultText: "Drag files here." };
var UPLOADCOLLECTION_DROP_FILE_INDICATOR = { key: "UPLOADCOLLECTION_DROP_FILE_INDICATOR", defaultText: "Drop files to upload them." };
var SHELLBAR_LABEL = { key: "SHELLBAR_LABEL", defaultText: "Shell Bar" };
var SHELLBAR_LOGO = { key: "SHELLBAR_LOGO", defaultText: "Logo" };
var SHELLBAR_LOGO_AREA = { key: "SHELLBAR_LOGO_AREA", defaultText: "SAP {0} {1} Home" };
var SHELLBAR_ADDITIONAL_CONTEXT = { key: "SHELLBAR_ADDITIONAL_CONTEXT", defaultText: "Additional Info" };
var SHELLBAR_SEARCHFIELD_DESCRIPTION = { key: "SHELLBAR_SEARCHFIELD_DESCRIPTION", defaultText: "Search results will be shown in the main area" };
var SHELLBAR_NOTIFICATIONS = { key: "SHELLBAR_NOTIFICATIONS", defaultText: "{0} Notifications" };
var SHELLBAR_NOTIFICATIONS_NO_COUNT = { key: "SHELLBAR_NOTIFICATIONS_NO_COUNT", defaultText: "Notifications" };
var SHELLBAR_PROFILE = { key: "SHELLBAR_PROFILE", defaultText: "Profile" };
var SHELLBAR_PRODUCTS = { key: "SHELLBAR_PRODUCTS", defaultText: "Products" };
var SHELLBAR_PRODUCT_SWITCH_BTN = { key: "SHELLBAR_PRODUCT_SWITCH_BTN", defaultText: "Product Switcher" };
var PRODUCT_SWITCH_CONTAINER_LABEL = { key: "PRODUCT_SWITCH_CONTAINER_LABEL", defaultText: "Products" };
var SHELLBAR_SEARCH = { key: "SHELLBAR_SEARCH", defaultText: "Search" };
var SHELLBAR_SEARCH_FIELD = { key: "SHELLBAR_SEARCH_FIELD", defaultText: "Search Field" };
var SHELLBAR_SEARCH_BTN_OPEN = { key: "SHELLBAR_SEARCH_BTN_OPEN", defaultText: "Open Search" };
var SHELLBAR_OVERFLOW = { key: "SHELLBAR_OVERFLOW", defaultText: "More" };
var SHELLBAR_CANCEL = { key: "SHELLBAR_CANCEL", defaultText: "Cancel" };
var WIZARD_NAV_ARIA_LABEL = { key: "WIZARD_NAV_ARIA_LABEL", defaultText: "Wizard Progress Bar" };
var WIZARD_LIST_ARIA_LABEL = { key: "WIZARD_LIST_ARIA_LABEL", defaultText: "Wizard Steps" };
var WIZARD_LIST_ARIA_DESCRIBEDBY = { key: "WIZARD_LIST_ARIA_DESCRIBEDBY", defaultText: "To activate, press the space bar or Enter" };
var WIZARD_ACTIONSHEET_STEPS_ARIA_LABEL = { key: "WIZARD_ACTIONSHEET_STEPS_ARIA_LABEL", defaultText: "Steps" };
var WIZARD_OPTIONAL_STEP_ARIA_LABEL = { key: "WIZARD_OPTIONAL_STEP_ARIA_LABEL", defaultText: "Optional" };
var WIZARD_STEP_ACTIVE = { key: "WIZARD_STEP_ACTIVE", defaultText: "Active" };
var WIZARD_STEP_INACTIVE = { key: "WIZARD_STEP_INACTIVE", defaultText: "Inactive" };
var WIZARD_STEP_ARIA_LABEL = { key: "WIZARD_STEP_ARIA_LABEL", defaultText: "Step {0}" };
var WIZARD_NAV_ARIA_ROLE_DESCRIPTION = { key: "WIZARD_NAV_ARIA_ROLE_DESCRIPTION", defaultText: "Wizard" };
var WIZARD_NAV_STEP_DEFAULT_HEADING = { key: "WIZARD_NAV_STEP_DEFAULT_HEADING", defaultText: "Step" };
var VSD_DIALOG_TITLE_SORT = { key: "VSD_DIALOG_TITLE_SORT", defaultText: "View Settings" };
var VSD_SUBMIT_BUTTON = { key: "VSD_SUBMIT_BUTTON", defaultText: "OK" };
var VSD_CANCEL_BUTTON = { key: "VSD_CANCEL_BUTTON", defaultText: "Cancel" };
var VSD_RESET_BUTTON = { key: "VSD_RESET_BUTTON", defaultText: "Reset" };
var VSD_RESET_BUTTON_ACTION = { key: "VSD_RESET_BUTTON_ACTION", defaultText: "Reset has reverted all settings to initial state" };
var VSD_SORT_TOOLTIP = { key: "VSD_SORT_TOOLTIP", defaultText: "Sort" };
var VSD_FILTER_TOOLTIP = { key: "VSD_FILTER_TOOLTIP", defaultText: "Filter" };
var VSD_SORT_ORDER = { key: "VSD_SORT_ORDER", defaultText: "Sort Order" };
var VSD_FILTER_BY = { key: "VSD_FILTER_BY", defaultText: "Filter By" };
var VSD_SORT_BY = { key: "VSD_SORT_BY", defaultText: "Sort By" };
var VSD_ORDER_ASCENDING = { key: "VSD_ORDER_ASCENDING", defaultText: "Ascending" };
var VSD_ORDER_DESCENDING = { key: "VSD_ORDER_DESCENDING", defaultText: "Descending" };
var IM_TITLE_BEFORESEARCH = { key: "IM_TITLE_BEFORESEARCH", defaultText: "Let''s get some results" };
var IM_SUBTITLE_BEFORESEARCH = { key: "IM_SUBTITLE_BEFORESEARCH", defaultText: "Start by providing your search criteria." };
var IM_TITLE_NODATA = { key: "IM_TITLE_NODATA", defaultText: "There''s no data yet." };
var IM_SUBTITLE_NODATA = { key: "IM_SUBTITLE_NODATA", defaultText: "When there is, you''ll see it here." };
var IM_TITLE_UNABLETOLOAD = { key: "IM_TITLE_UNABLETOLOAD", defaultText: "Unable to load data" };
var IM_SUBTITLE_UNABLETOLOAD = { key: "IM_SUBTITLE_UNABLETOLOAD", defaultText: "Check your Internet connection. If that''s not it, try reloading. If that still doesn''t help, check with your administrator." };
var DSC_MAIN_ARIA_LABEL = { key: "DSC_MAIN_ARIA_LABEL", defaultText: "Main Content" };
var DSC_SIDE_ARIA_LABEL = { key: "DSC_SIDE_ARIA_LABEL", defaultText: "Side Content" };
var SIDE_NAVIGATION_POPOVER_HIDDEN_TEXT = { key: "SIDE_NAVIGATION_POPOVER_HIDDEN_TEXT", defaultText: "Navigation" };
var SIDE_NAVIGATION_COLLAPSED_LIST_ARIA_ROLE_DESC = { key: "SIDE_NAVIGATION_COLLAPSED_LIST_ARIA_ROLE_DESC", defaultText: "Navigation List Menu Bar" };
var SIDE_NAVIGATION_LIST_ARIA_ROLE_DESC = { key: "SIDE_NAVIGATION_LIST_ARIA_ROLE_DESC", defaultText: "Navigation List Tree" };
var SIDE_NAVIGATION_OVERFLOW_ACCESSIBLE_NAME = { key: "SIDE_NAVIGATION_OVERFLOW_ACCESSIBLE_NAME", defaultText: "More Items" };
var SIDE_NAVIGATION_GROUP_HEADER_DESC = { key: "SIDE_NAVIGATION_GROUP_HEADER_DESC", defaultText: "Group Header" };
var USER_MENU_OTHER_ACCOUNT_BUTTON_TXT = { key: "USER_MENU_OTHER_ACCOUNT_BUTTON_TXT", defaultText: "Other Accounts" };
var USER_MENU_MANAGE_ACCOUNT_BUTTON_TXT = { key: "USER_MENU_MANAGE_ACCOUNT_BUTTON_TXT", defaultText: "Manage Account" };
var USER_MENU_SIGN_OUT_BUTTON_TXT = { key: "USER_MENU_SIGN_OUT_BUTTON_TXT", defaultText: "Sign Out" };
var USER_MENU_EDIT_AVATAR_TXT = { key: "USER_MENU_EDIT_AVATAR_TXT", defaultText: "Edit avatar" };
var USER_MENU_EDIT_ACCOUNTS_TXT = { key: "USER_MENU_EDIT_ACCOUNTS_TXT", defaultText: "Edit accounts" };
var USER_MENU_POPOVER_ACCESSIBLE_NAME = { key: "USER_MENU_POPOVER_ACCESSIBLE_NAME", defaultText: "User menu for" };
var USER_MENU_CLOSE_DIALOG_BUTTON = { key: "USER_MENU_CLOSE_DIALOG_BUTTON", defaultText: "Decline" };

// node_modules/@ui5/webcomponents-fiori/dist/BarcodeScannerDialogTemplate.js
function BarcodeScannerDialogTemplate() {
  return jsxs(Fragment, { children: [jsxs(Dialog_default, { stretch: true, class: "ui5-barcode-scanner-dialog-root", open: this._open, onClose: this._closeDialog, children: [jsx("slot", { name: "header" }), jsxs("div", { class: "ui5-barcode-scanner-dialog-video-wrapper", children: [jsx("video", { autoplay: true, playsinline: true, muted: true, class: "ui5-barcode-scanner-dialog-video" }), jsx("canvas", { class: "ui5-barcode-scanner-dialog-overlay" })] }), jsx("slot", { name: "footer", class: "ui5-barcode-scanner-dialog-footer", children: jsx(Button_default, { design: "Transparent", onClick: this._closeDialog, children: this._cancelButtonText }) })] }), jsx(BusyIndicator_default, { class: "ui5-barcode-scanner-dialog-busy", active: this.loading, size: "L", text: this._busyIndicatorText })] });
}

// node_modules/@ui5/webcomponents-fiori/dist/generated/themes/sap_horizon/parameters-bundle.css.js
var parameters_bundle_css_default3 = `:root{--_ui5-v2-8-0_fcl_solid_bg: var(--sapShell_Background);--_ui5-v2-8-0_fcl_decoration_top: linear-gradient(to top, var(--sapHighlightColor), transparent);--_ui5-v2-8-0_fcl_decoration_bottom: linear-gradient(to bottom, var(--sapHighlightColor), transparent);--sapIllus_BrandColorPrimary: var(--sapContent_Illustrative_Color1);--sapIllus_BrandColorSecondary: var(--sapContent_Illustrative_Color2);--sapIllus_StrokeDetailColor: var(--sapContent_Illustrative_Color4);--sapIllus_Layering1: var(--sapContent_Illustrative_Color5);--sapIllus_Layering2: var(--sapContent_Illustrative_Color6);--sapIllus_BackgroundColor: var(--sapContent_Illustrative_Color7);--sapIllus_ObjectFillColor: var(--sapContent_Illustrative_Color8);--sapIllus_AccentColor: var(--sapContent_Illustrative_Color3);--sapIllus_NoColor: none;--sapIllus_PatternShadow: url(#sapIllus_PatternShadow);--sapIllus_PatternHighlight: url(#sapIllus_PatternHighlight);--_ui5-v2-8-0_media_gallery_thumbnail_border: 1px solid var(--sapContent_ForegroundColor);--_ui5-v2-8-0_media_gallery_thumbnail_selected_border: 2px solid var(--sapSelectedColor);--_ui5-v2-8-0_media_gallery_thumbnail_focus_outline: var(--sapContent_FocusWidth) var(--sapContent_FocusStyle) var(--sapContent_FocusColor);--_ui5-v2-8-0_media_gallery_item_overlay_box_shadow: inset 0px 0px 80px rgba(0, 0, 0, .2);--_ui5-v2-8-0-notification_group_header-margin: 0px;--_ui5-v2-8-0-notification_group_header-margin-expanded: .5rem;--_ui5-v2-8-0-notification_item-title-padding-end-two-buttons: 4.375rem;--_ui5-v2-8-0-notification_item-title-padding-end-one-button: 2.125rem;--_ui5-v2-8-0-notification_item-description-margin-top: .75rem;--_ui5-v2-8-0-notification_item-footer-margin-top: .75rem;--_ui5-v2-8-0-notification_item-border-radius: var(--sapTile_BorderCornerRadius);--_ui5-v2-8-0-notification_group_header-border-bottom-width: 0;--_ui5-v2-8-0-notification_group_header-padding: .5rem;--_ui5-v2-8-0-notification_item-state-icon-padding: .25rem;--_ui5-v2-8-0-notification_item-border-bottom: var(--sapList_BorderWidth) solid var(--sapList_BorderColor);--_ui5-v2-8-0-notification_item-border-top-left-right: var(--sapList_BorderWidth) solid var(--sapList_BorderColor);--_ui5-v2-8-0-notification_item-margin: 0 .5rem .5rem .5rem;--_ui5-v2-8-0-notification_item-background-color-hover: var(--sapList_Hover_Background);--_ui5-v2-8-0-notification_item-background-color-active: var(--sapList_SelectionBackgroundColor);--_ui5-v2-8-0-notification_item-border-active: 1px solid var(--sapList_SelectionBorderColor);--_ui5-v2-8-0-notification_item-root-padding-inline: 1rem;--_ui5-v2-8-0-notification_item-content-padding: .75rem 0;--_ui5-v2-8-0-notification_item-title-margin-bottom: 0;--_ui5-v2-8-0-notification_item-focus-offset: .1875rem;--_ui5-v2-8-0-notification_item-outline-offset: -.375rem;--_ui5-v2-8-0-notification_item-growing-btn-background-color-active: var(--_ui5-v2-8-0-notification_item-background-color-active);--_ui5-v2-8-0_page_list_bg: var(--sapGroup_ContentBackground);--_ui5-v2-8-0_page_transparent_bg: transparent;--_ui5-v2-8-0_vsd_header_container: 2.75rem;--_ui5-v2-8-0_vsd_sub_header_container_height: 2.75rem;--_ui5-v2-8-0_vsd_content_li_padding: .375rem;--_ui5-v2-8-0_vsd_content_height: 23.4375rem;--_ui5-v2-8-0_vsd_expand_content_height: 26.1875rem;--_ui5-v2-8-0_product_switch_item_width: 11.25rem;--_ui5-v2-8-0_product_switch_item_height: 7rem;--_ui5-v2-8-0_product_switch_item_outline_width: .0625rem;--_ui5-v2-8-0_product_switch_item_outline_color: var(--sapContent_FocusColor);--_ui5-v2-8-0_product_switch_item_outline: var(--_ui5-v2-8-0_product_switch_item_outline_width) var(--_ui5-v2-8-0_product_switch_item_outline_color) dotted;--_ui5-v2-8-0_product_switch_item_outline_offset: -.1875rem;--_ui5-v2-8-0_product_switch_item_outline_offset_positive: .1875rem;--_ui5-v2-8-0_product_switch_item_active_outline_color: var(--sapContent_FocusColor);--_ui5-v2-8-0_shellbar_search_field_outline_focused: .0625rem dotted var(--sapContent_ContrastFocusColor);--_ui5-v2-8-0_shellbar_search_field_width: 25rem;--_ui5-v2-8-0_shellbar_image_button_border_radius: 50%;--_ui5-v2-8-0-shellbar-content-margin-start: .5rem;--_ui5-v2-8-0-shellbar-overflow-button-margin: .5rem;--_ui5-v2-8-0_shellbar_root_height: 3.25rem;--_ui5-v2-8-0_shellbar_logo_outline_color: var(--sapContent_FocusColor);--_ui5-v2-8-0_shellbar_logo_outline: var(--sapContent_FocusWidth) var(--sapContent_FocusStyle) var(--_ui5-v2-8-0_shellbar_logo_outline_color);--_ui5-v2-8-0_shellbar_logo_outline_offset: -.125rem;--_ui5-v2-8-0_shellbar_outline_offset: -.25rem;--_ui5-v2-8-0_shellbar_button_border: none;--_ui5-v2-8-0_shellbar_button_border_radius: var(--sapButton_BorderCornerRadius);--_ui5-v2-8-0_shellbar_button_focused_border: .125rem solid var(--sapContent_FocusColor);--_ui5-v2-8-0_shellbar_button_badge_border: 1px solid var(--sapContent_BadgeBackground);--_ui5-v2-8-0_shellbar_logo_border_radius: .5rem;--_ui5-v2-8-0_shellbar_button_box_shadow: var(--sapContent_Interaction_Shadow);--_ui5-v2-8-0_shellbar_button_box_shadow_active: inset 0 0 0 .0625rem var(--sapButton_Lite_Active_BorderColor);--_ui5-v2-8-0_shellbar_button_active_color: var(--sapShell_Active_TextColor);--_ui5-v2-8-0_shellbar_logo_outline_border_radius: var(--sapField_BorderCornerRadius);--_ui5-v2-8-0_shellbar_search_button_border_radius: 50%;--_ui5-v2-8-0_shellbar_search_button_size: 1.75rem;--_ui5-v2-8-0_shellbar_search_field_height: 2.25rem;--_ui5-v2-8-0_shellbar_search_field_background: var(--sapShell_InteractiveBackground);--_ui5-v2-8-0_shellbar_search_field_border: none;--_ui5-v2-8-0_shellbar_search_field_color: var(--sapShell_InteractiveTextColor);--_ui5-v2-8-0_shellbar_search_field_background_hover: var(--sapShell_Hover_Background);--_ui5-v2-8-0_shellbar_search_field_box_shadow: var(--sapField_Shadow), inset 0 -.0625rem var(--sapField_BorderColor);--_ui5-v2-8-0_shellbar_search_field_box_shadow_hover: var(--sapField_Hover_Shadow), inset 0 -.0625rem var(--sapField_Hover_BorderColor);--_ui5-v2-8-0_shellbar_input_focus_outline_color: var(--sapField_Active_BorderColor);--_ui5-v2-8-0_shellbar_overflow_container_middle_height: 3rem;--_ui5-v2-8-0_shellbar_menu_button_title_font_size: var(--sapFontHeader5Size);--_ui5-v2-8-0_shellbar_input_border_radius: 1.125rem;--_ui5-v2-8-0_shellbar_input_focus_border_radius: 1.125rem;--_ui5-v2-8-0_shellbar_input_background_color: var(--sapShell_InteractiveBackground);--_ui5-v2-8-0_TimelineItem_arrow_size: 1.625rem;--_ui5-v2-8-0_TimelineItem_bubble_border_width: .125rem;--_ui5-v2-8-0_TimelineItem_bubble_border_style: solid;--_ui5-v2-8-0_TimelineItem_bubble_border_radius: var(--sapElement_BorderCornerRadius);--_ui5-v2-8-0_TimelineItem_bubble_border_color: var(--sapGroup_ContentBorderColor);--_ui5-v2-8-0_TimelineItem_bubble_border_top: -.25rem;--_ui5-v2-8-0_TimelineItem_bubble_border_right: -.25rem;--_ui5-v2-8-0_TimelineItem_bubble_border_bottom: -.25rem;--_ui5-v2-8-0_TimelineItem_bubble_border_left: -.75rem;--_ui5-v2-8-0_TimelineItem_bubble_rtl_left_offset: -.25rem;--_ui5-v2-8-0_TimelineItem_bubble_rtl_right_offset: -.75rem;--_ui5-v2-8-0_TimelineItem_bubble_focus_border_radius: .875rem;--_ui5-v2-8-0_TimelineItem_horizontal_bubble_focus_top_offset: -.75rem;--_ui5-v2-8-0_TimelineItem_horizontal_bubble_focus_left_offset: -.25rem;--_ui5-v2-8-0_TimelineItem_bubble_content_padding: .5rem;--_ui5-v2-8-0_TimelineItem_bubble_content_subtitle_padding_top: .125rem;--_ui5-v2-8-0_TimelineItem_bubble_content_description_padding_top: .5rem;--_ui5-v2-8-0_side_navigation_hover_border_style_color: none;--_ui5-v2-8-0_side_navigation_hover_border_width: 0;--_ui5-v2-8-0_side_navigation_group_border_width: 0 0 .0625rem 0;--_ui5-v2-8-0_side_navigation_item_border_style_color: none;--_ui5-v2-8-0_side_navigation_item_border_width: 0;--_ui5-v2-8-0_side_navigation_item_height: 2.75rem;--_ui5-v2-8-0_side_navigation_last_item_border_style_color: none;--_ui5-v2-8-0_side_navigation_item_padding_left: .5rem;--_ui5-v2-8-0_side_navigation_no_icons_group_padding: 1rem;--_ui5-v2-8-0_side_navigation_selected_item_border_color: var(--sapList_SelectionBorderColor);--_ui5-v2-8-0_side_navigation_selected_border_width: 0 0 .0625rem 0;--_ui5-v2-8-0_side_navigation_collapsed_selected_item_border_style_color: solid var(--_ui5-v2-8-0_side_navigation_selected_item_border_color);--_ui5-v2-8-0_side_navigation_collapsed_selected_group_border_color: var(--_ui5-v2-8-0_side_navigation_selected_item_border_color);--_ui5-v2-8-0_side_navigation_group_expanded_border_width: 0;--_ui5-v2-8-0_side_navigation_group_bottom_border_color: var(--sapList_BorderColor);--_ui5-v2-8-0_side_navigation_popup_arrow_box_shadow: var(--sapContent_Shadow2);--_ui5-v2-8-0_side_navigation_action_item_border_hover: var(--sapButton_BorderWidth) solid var(--sapButton_Hover_BorderColor);--_ui5-v2-8-0_side_navigation_action_item_border_active: var(--sapButton_BorderWidth) solid var(--sapButton_Active_BorderColor);--_ui5-v2-8-0_side_navigation_item_expand_icon_right: -.5rem;--_ui5-v2-8-0_side_navigation_item_expand_icon_hover_left: auto;--_ui5-v2-8-0_side_navigation_item_expand_icon_hover_right: 0;--_ui5-v2-8-0_side_navigation_width: 16rem;--_ui5-v2-8-0_side_navigation_collapsed_width: 4rem;--_ui5-v2-8-0_side_navigation_navigation_separator_margin: .25rem .5rem .25rem .5rem;--_ui5-v2-8-0_side_navigation_navigation_separator_margin_collapsed: var(--_ui5-v2-8-0_side_navigation_navigation_separator_margin);--_ui5-v2-8-0_side_navigation_navigation_separator_background_color: var(--sapToolbar_SeparatorColor);--_ui5-v2-8-0_side_navigation_navigation_separator_radius: .125rem;--_ui5-v2-8-0_side_navigation_navigation_separator_height: .0625rem;--_ui5-v2-8-0_side_navigation_triangle_color: var(--sapContent_NonInteractiveIconColor);--_ui5-v2-8-0_side_navigation_border_right: 0;--_ui5-v2-8-0_side_navigation_box_shadow: var(--sapContent_Shadow0);--_ui5-v2-8-0_side_navigation_triangle_display: none;--_ui5-v2-8-0_side_navigation_phone_width: 100%;--_ui5-v2-8-0_side_navigation_icon_color: var(--sapList_TextColor);--_ui5-v2-8-0_side_navigation_expand_icon_color: var(--sapList_TextColor);--_ui5-v2-8-0_side_navigation_expand_icon_width: 2.25rem;--_ui5-v2-8-0_side_navigation_external_link_width: 3rem;--_ui5-v2-8-0_side_navigation_group_border_style_color: none;--_ui5-v2-8-0_side_navigation_item_border_radius: .375rem;--_ui5-v2-8-0_side_navigation_item_bottom_margin: .25rem;--_ui5-v2-8-0_side_navigation_item_transition: background-color .3s ease-in-out;--_ui5-v2-8-0_side_navigation_no_icons_nested_item_padding: 2rem;--_ui5-v2-8-0_side_navigation_item_focus_border_offset: calc(-1 * var(--sapContent_FocusWidth));--_ui5-v2-8-0_side_navigation_item_focus_border_radius: calc(var(--_ui5-v2-8-0_side_navigation_item_border_radius) + var(--sapContent_FocusWidth));--_ui5-v2-8-0_side_navigation_collapsed_selected_item_background: 0 100% / .188rem 100% no-repeat linear-gradient(0deg, var(--sapHighlightColor), var(--sapHighlightColor)), var(--sapList_SelectionBackgroundColor);--_ui5-v2-8-0_side_navigation_collapsed_selected_item_background_hover: 0 100% / .188rem 100% no-repeat linear-gradient(0deg, var(--sapHighlightColor), var(--sapHighlightColor)), var(--sapList_Hover_SelectionBackground);--_ui5-v2-8-0_side_navigation_selected_border_style_color: none;--_ui5-v2-8-0_side_navigation_selected_and_focused_border_style_color: var(--_ui5-v2-8-0_side_navigation_selected_border_style_color);--_ui5-v2-8-0_side_navigation_group_icon_width: 2.5rem;--_ui5-v2-8-0_side_navigation_icon_padding_inline_end: .5rem;--_ui5-v2-8-0_side_navigation_group_text_weight: bold;--_ui5-v2-8-0_side_navigation_group_bottom_margin_in_popup: .75rem;--_ui5-v2-8-0_side_navigation_group_padding: 1rem;--_ui5-v2-8-0_side_navigation_padding-flexible: .5rem .5rem 0 .5rem;--_ui5-v2-8-0_side_navigation_padding-fixed: 0 .5rem .5rem .5rem;--_ui5-v2-8-0_side_navigation_parent_popup_padding: .75rem;--_ui5-v2-8-0_side_navigation_parent_popup_border_radius: .75rem;--_ui5-v2-8-0_side_navigation_popup_item_padding: 0 .5rem;--_ui5-v2-8-0_side_navigation_popup_icon_width: .5rem;--_ui5-v2-8-0_side_navigation_popup_shadow_color1: color-mix(in srgb, var(--sapContent_ShadowColor) 48%, transparent);--_ui5-v2-8-0_side_navigation_popup_shadow_color2: color-mix(in srgb, var(--sapContent_ShadowColor) 16%, transparent);--_ui5-v2-8-0_side_navigation_popup_box_shadow: 0 0 .125rem 0 var(--_ui5-v2-8-0_side_navigation_popup_shadow_color1), 0 1rem 2rem 0 var(--_ui5-v2-8-0_side_navigation_popup_shadow_color2);--_ui5-v2-8-0_side_navigation_popup_title_text_size: 1.25rem;--_ui5-v2-8-0_side_navigation_popup_title_line_height: 1.5rem;--_ui5-v2-8-0_side_navigation_selection_indicator_display: inline-block;--_ui5-v2-8-0_side_navigation_first_fixed_item_margin_top: .125rem;--_ui5-v2-8-0_side_navigation_active_text_color: var(--sapButton_TextColor);--_ui5-v2-8-0_side_navigation_item_expand_icon_visibility: block;--_ui5-v2-8-0_side_navigation_item_collapsed_hover_focus_width: fit-content;--_ui5-v2-8-0_side_navigation_item_collapsed_hover_focus_display: block;--_ui5-v2-8-0_side_navigation_item_collapsed_hover_focus_padding_right: 1rem;--_ui5-v2-8-0_side_navigation_item_collapsed_padding_right: 3.9375rem;--_ui5-v2-8-0_side_navigation_action_item_collapsed_padding: 1rem;--_ui5-v2-8-0_side_navigation_item_collapsed_unselectable_padding: 3rem;--ui5-v2-8-0_upload_collection_drop_overlay_border: .125rem solid var(--sapContent_DragAndDropActiveColor);--ui5-v2-8-0_upload_collection_thumbnail_size: 3rem;--ui5-v2-8-0_upload_collection_thumbnail_margin_inline_end: .75rem;--ui5-v2-8-0_upload_collection_small_size_buttons_margin_inline_start: 0;--ui5-v2-8-0_upload_collection_small_size_buttons_margin_block_start: .5rem;--ui5-v2-8-0_upload_collection_drag_overlay_text_color: var(--sapTextColor);--ui5-v2-8-0_upload_collection_drag_overlay_icon_color: var(--sapTextColor);--ui5-v2-8-0_upload_collection_drag_overlay_border: .125rem dashed var(--sapField_BorderColor);--ui5-v2-8-0_upload_collection_drop_overlay_background: var(--sapContent_DragAndDropActiveColor);--ui5-v2-8-0_upload_collection_drag_overlay_border_radius: .5rem;--ui5-v2-8-0_upload_collection_drag_overlay_opacity: .5;--_ui5-v2-8-0_wiz_content_item_wrapper_padding: 1rem;--_ui5-v2-8-0_wiz_content_item_wrapper_bg: var(--sapGroup_ContentBackground);--_ui5-v2-8-0_wiz_tab_selection_line: var(--sapSelectedColor);--_ui5-v2-8-0_wiz_tab_icon_color: var(--sapSelectedColor);--_ui5-v2-8-0_wiz_tab_title_color: var(--sapTextColor);--_ui5-v2-8-0_wiz_tab_title_font_family: var(--sapFontBoldFamily);--_ui5-v2-8-0_wiz_tab_focus_outline: var(--sapContent_FocusWidth) var(--sapContent_FocusStyle) var(--sapContent_FocusColor);--_ui5-v2-8-0_wiz_tab_focus_border_radius: 8px;--_ui5-v2-8-0_wiz_tab_border: 1px solid var(--sapContent_Selected_ForegroundColor);--_ui5-v2-8-0_wiz_tab_active_separator_color: var(--sapContent_Selected_ForegroundColor);--_ui5-v2-8-0_wiz_tab_selected_bg: var(--sapContent_Selected_ForegroundColor);--_ui5-v2-8-0_fcl_column_border: solid .0625rem var(--sapGroup_ContentBorderColor);--_ui5-v2-8-0_media_gallery_overflow_btn_background: var(--sapButton_Background);--_ui5-v2-8-0_media_gallery_overflow_btn_color: var(--sapButton_TextColor);--_ui5-v2-8-0_media_gallery_overflow_btn_border: 1px solid var(--sapButton_BorderColor);--_ui5-v2-8-0_dynamic_page_footer_spacer: 4rem;--_ui5-v2-8-0_dynamic_page_title_padding_S: .5rem 1rem;--_ui5-v2-8-0_dynamic_page_title_padding_M: .5rem 2rem;--_ui5-v2-8-0_dynamic_page_title_padding_L: .5rem 2rem;--_ui5-v2-8-0_dynamic_page_title_padding_XL: .5rem 3rem;--_ui5-v2-8-0_dynamic_page_header_padding_S: .5rem 1rem .125rem;--_ui5-v2-8-0_dynamic_page_header_padding_M: 1rem 2rem;--_ui5-v2-8-0_dynamic_page_header_padding_L: 1rem 2rem;--_ui5-v2-8-0_dynamic_page_header_padding_XL: 1rem 3rem;--_ui5-v2-8-0_dynamic_page_content_padding_S: 2rem 1rem 0;--_ui5-v2-8-0_dynamic_page_content_padding_M: 2rem 2rem 0;--_ui5-v2-8-0_dynamic_page_content_padding_L: 1rem 2rem 0;--_ui5-v2-8-0_dynamic_page_content_padding_XL: 1rem 3rem 0;--ui5-v2-8-0_dynamic_page_background: var(--sapBackgroundColor);--_ui5-v2-8-0_search_icon_border_radius: 1.125rem;--_ui5-v2-8-0_search_input_border_radius: 1.125rem;--_ui5-v2-8-0-search-border: none;--_ui5-v2-8-0-search-wrapper-background: var(--sapShell_InteractiveBackground);--_ui5-v2-8-0_search_separator_background: var(--sapShell_InteractiveBorderColor);--_ui5-v2-8-0-search-wrapper-hover-background: var(--sapField_Hover_BackgroundStyle);--_ui5-v2-8-0-search-wrapper-hover-background-color: var(--sapField_Hover_Background);--_ui5-v2-8-0-search-elements-hover-background: none;--_ui5-v2-8-0-search-elements-active-background: none;--_ui5-v2-8-0_search_input_scope_margin: 0 .125rem 0 1rem;--_ui5-v2-8-0-search-elements-background: inherit;--_ui5-v2-8-0_search_wrapper_outline: var(--sapContent_FocusWidth) var(--sapContent_FocusStyle) var(--sapField_Active_BorderColor);--_ui5-v2-8-0_search_input_outline: none;--_ui5-v2-8-0_search_icon_size: 1.75rem;--_ui5-v2-8-0_search_icon_padding: .375rem;--_ui5-v2-8-0_search_icon_hover_padding: .3125rem;--_ui5-v2-8-0_search_input_start_margin: 0;--_ui5-v2-8-0_search_input_end_padding: 0;--_ui5-v2-8-0-search-input-start-padding: .5rem;--_ui5-v2-8-0-search-select-height: 1.625rem;--_ui5-v2-8-0-search-icon-border: none;--_ui5-v2-8-0_dynamic_page_title_padding_top: .5rem;--_ui5-v2-8-0_dynamic_page_title_padding_bottom: .5rem;--_ui5-v2-8-0_dynamic_page_title_min_height: 4rem;--_ui5-v2-8-0_dynamic_page_title_focus_outline: var(--sapContent_FocusWidth) var(--sapContent_FocusStyle) var(--sapContent_FocusColor);--_ui5-v2-8-0_dynamic_page_title_breadcrumbs_padding_top: .5rem;--_ui5-v2-8-0_dynamic_page_title_breadcrumbs_padding_bottom: .25rem;--_ui5-v2-8-0_dynamic_page_title_heading_padding_top: .3125rem;--_ui5-v2-8-0_dynamic_page_title_subheading_margin_top: .25rem;--_ui5-v2-8-0_dynamic_page_title_content_padding_left: 1rem;--_ui5-v2-8-0_dynamic_page_title_hover_background: var(--sapObjectHeader_Hover_Background);--_ui5-v2-8-0_dynamic_page_snapped_title_on_mobile_line_height: 2rem;--_ui5-v2-8-0_dynamic_page_snapped_title_on_mobile_min_height: 2rem;--_ui5-v2-8-0_dynamic_page_title_focus_outline_offset: -.125rem;--_ui5-v2-8-0_dynamic_page_header_background_color: var(--sapObjectHeader_Background);--_ui5-v2-8-0_dynamic_page_header-actions-box-shadow: var(--sapContent_Shadow0);--_ui5-v2-8-0_dynamic_page_header-box-shadow: var(--sapContent_HeaderShadow);--_ui5-v2-8-0_dynamic_page_header-actions-background: var(--sapObjectHeader_Background);--_ui5-v2-8-0_dynamic_page_header-actions-color: var(--sapButton_TextColor);--_ui5-v2-8-0_dynamic_page_actions-lines-color: var(--sapObjectHeader_BorderColor);--_ui5-v2-8-0_dynamic_page_header-actions-background-pressed: var(--_ui5-v2-8-0_dynamic_page_header-actions-background);--_ui5-v2-8-0_dynamic_page_header-actions-color-pressed: var(--_ui5-v2-8-0_dynamic_page_header-actions-color);--_ui5-v2-8-0_timeline_tlgi_line_horizontal_height: 14.8125rem;--_ui5-v2-8-0_timeline_tlgi_root_horizontal_height: 19.9375rem}[data-ui5-compact-size],.ui5-content-density-compact,.sapUiSizeCompact{--_ui5-v2-8-0-notification_item-description-margin-top: .5rem;--_ui5-v2-8-0-notification_item-footer-margin-top: .5rem;--_ui5-v2-8-0-notification_item-title-padding-end-two-buttons: 3.875rem;--_ui5-v2-8-0-notification_item-title-padding-end-one-button: 1.875rem;--_ui5-v2-8-0_side_navigation_navigation_separator_margin: var(--_ui5-v2-8-0_side_navigation_navigation_separator_margin_collapsed);--_ui5-v2-8-0_side_navigation_item_height: 2rem}[dir=rtl]{--_ui5-v2-8-0_side_navigation_item_expand_icon_hover_left: 0;--_ui5-v2-8-0_side_navigation_item_expand_icon_hover_right: auto}
`;

// node_modules/@ui5/webcomponents-fiori/dist/generated/themes/BarcodeScannerDialog.css.js
registerThemePropertiesLoader("@ui5/webcomponents-theming", "sap_horizon", async () => parameters_bundle_css_default);
registerThemePropertiesLoader("@ui5/webcomponents-fiori", "sap_horizon", async () => parameters_bundle_css_default3);
var BarcodeScannerDialog_css_default = `.ui5-barcode-scanner-dialog-root::part(content){display:flex;flex-direction:column;padding:.4375rem}.ui5-barcode-scanner-dialog-video-wrapper{position:relative;min-height:0}.ui5-barcode-scanner-dialog-video-wrapper,.ui5-barcode-scanner-dialog-video,.ui5-barcode-scanner-dialog-overlay{height:100%;width:100%}.ui5-barcode-scanner-dialog-video{object-fit:cover}.ui5-barcode-scanner-dialog-overlay{display:none;position:absolute;inset:0}.ui5-barcode-scanner-dialog-footer{display:flex;justify-content:flex-end;width:100%;padding-top:.4375rem}.ui5-barcode-scanner-dialog-busy{position:absolute;top:50%;left:50%;transform:translate(-50%,-50%);z-index:1}.ui5-barcode-scanner-dialog-busy:not([active]){display:none}
`;

// node_modules/@ui5/webcomponents-fiori/dist/BarcodeScannerDialog.js
var __decorate4 = function(decorators, target, key, desc) {
  var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
  if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
  else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
  return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var BarcodeScannerDialog_1;
var windowZXing = typeof window === "undefined" ? {} : window.ZXing;
var effectiveZXing = { ...ssr_zxing_default, ...windowZXing };
var { BrowserMultiFormatReader, NotFoundException } = effectiveZXing;
var defaultMediaConstraints = {
  audio: false,
  video: {
    height: {
      min: 480,
      ideal: 960,
      max: 1440
    },
    aspectRatio: 1.333333333,
    facingMode: "environment"
  }
};
var BarcodeScannerDialog = BarcodeScannerDialog_1 = class BarcodeScannerDialog2 extends UI5Element_default {
  constructor() {
    super();
    this.open = false;
    this.loading = false;
    this.isReadyToScan = false;
    this._codeReader = new BrowserMultiFormatReader();
    this._handleVideoPlayingBound = this._handleVideoPlaying.bind(this);
    this._handleCaptureRegionBound = this._handleDrawCaptureRegion.bind(this);
  }
  async onAfterRendering() {
    if (!this._hasGetUserMedia()) {
      this.fireDecoratorEvent("scan-error", { message: "getUserMedia() is not supported by your browser" });
      return;
    }
    if (!this.open || this.loading) {
      return;
    }
    if (!this.isReadyToScan) {
      this.loading = true;
    }
    const video = this._getVideoElement();
    if (video.srcObject) {
      return;
    }
    try {
      const stream = await this._getUserPermission();
      video.addEventListener("loadeddata", this._handleVideoPlayingBound);
      video.srcObject = stream;
    } catch (error) {
      this.fireDecoratorEvent("scan-error", { message: error.message });
      this.loading = false;
    }
  }
  onEnterDOM() {
    super.onEnterDOM();
    window.addEventListener("resize", this._handleCaptureRegionBound);
  }
  onExitDOM() {
    super.onExitDOM();
    window.removeEventListener("resize", this._handleCaptureRegionBound);
  }
  get _open() {
    return this.open && this.isReadyToScan;
  }
  get _cancelButtonText() {
    return BarcodeScannerDialog_1.i18nBundle.getText(BARCODE_SCANNER_DIALOG_CANCEL_BUTTON_TXT);
  }
  get _busyIndicatorText() {
    return BarcodeScannerDialog_1.i18nBundle.getText(BARCODE_SCANNER_DIALOG_LOADING_TXT);
  }
  _hasGetUserMedia() {
    return !!(navigator.mediaDevices && navigator.mediaDevices.getUserMedia);
  }
  _getUserPermission() {
    return navigator.mediaDevices.getUserMedia(defaultMediaConstraints);
  }
  _getVideoElement() {
    return this.shadowRoot.querySelector(".ui5-barcode-scanner-dialog-video");
  }
  _getOverlayCanvasElement() {
    return this.shadowRoot.querySelector(".ui5-barcode-scanner-dialog-overlay");
  }
  /**
   * CALCULATIONS
   *
   * The following methods are used to calculate the capture region
   * and draw it on the overlay canvas.
   * The capture region is a square area in the center of the video element
   * where the barcode scanning is performed.
   * The region is defined as a proportion of the video element's dimensions.
   * The overlay canvas is used to draw a semi-transparent black overlay
   * over the video element and a red border around the capture region.
   * The overlay canvas is updated on every frame to ensure the capture region is always visible.
   * The capture region is used to crop the video frame and extract the barcode image.
   * The extracted image is then processed by the zxing-js library to decode the barcode.
   */
  _calculateCaptureRegion(clientWidth, clientHeight) {
    const maxScanProportion = 0.66666667;
    const maxScanDimension = Math.min(clientWidth, clientHeight) * maxScanProportion;
    const xOffset = (clientWidth - maxScanDimension) / 2;
    const yOffset = (clientHeight - maxScanDimension) / 2;
    const scanWidth = Math.floor(maxScanDimension);
    const scanHeight = Math.floor(maxScanDimension);
    return {
      scanHeight,
      scanWidth,
      xOffset,
      yOffset
    };
  }
  _drawCaptureRegion() {
    const videoElement = this._getVideoElement();
    const canvasElement = this._getOverlayCanvasElement();
    const context = canvasElement.getContext("2d");
    const videoClientWidth = videoElement.clientWidth;
    const videoClientHeight = videoElement.clientHeight;
    canvasElement.width = videoClientWidth;
    canvasElement.height = videoClientHeight;
    context.clearRect(0, 0, videoClientWidth, videoClientHeight);
    const captureRegion = this._calculateCaptureRegion(videoClientWidth, videoClientHeight);
    context.fillStyle = "rgba(0, 0, 0, 0.5)";
    context.fillRect(0, 0, videoClientWidth, videoClientHeight);
    context.clearRect(captureRegion.xOffset, captureRegion.yOffset, captureRegion.scanWidth, captureRegion.scanHeight);
    context.strokeStyle = "red";
    context.lineWidth = 1;
    context.strokeRect(captureRegion.xOffset, captureRegion.yOffset, captureRegion.scanWidth, captureRegion.scanHeight);
    canvasElement.style.display = "block";
  }
  _getTempCanvasElement() {
    if (!this._tempCanvas) {
      this._tempCanvas = document.createElement("canvas");
    }
    return this._tempCanvas;
  }
  _captureFrame() {
    const video = this._getVideoElement();
    const tempCanvas = this._getTempCanvasElement();
    const context = tempCanvas.getContext("2d");
    const videoWidth = video.videoWidth;
    const videoHeight = video.videoHeight;
    const clientWidth = video.clientWidth;
    const clientHeight = video.clientHeight;
    const captureRegion = this._calculateCaptureRegion(clientWidth, clientHeight);
    const ratioX = videoWidth / clientWidth;
    const ratioY = videoHeight / clientHeight;
    const scale = Math.min(ratioX, ratioY);
    const scaledXOffset = captureRegion.xOffset * scale;
    const scaledYOffset = captureRegion.yOffset * scale;
    const scaledScanWidth = captureRegion.scanWidth * scale;
    const scaledScanHeight = captureRegion.scanHeight * scale;
    tempCanvas.width = captureRegion.scanWidth;
    tempCanvas.height = captureRegion.scanHeight;
    context.clearRect(0, 0, tempCanvas.width, tempCanvas.height);
    const positionX = (videoWidth - clientWidth * scale) / 2;
    const positionY = (videoHeight - clientHeight * scale) / 2;
    const finalXOffset = scaledXOffset + positionX;
    const finalYOffset = scaledYOffset + positionY;
    context.drawImage(
      video,
      finalXOffset,
      finalYOffset,
      scaledScanWidth,
      scaledScanHeight,
      // Source rectangle
      0,
      0,
      tempCanvas.width,
      tempCanvas.height
    );
    return tempCanvas;
  }
  /**
   * HANDLERS
   */
  async _processFrame() {
    try {
      const canvas = this._captureFrame();
      const dataUrl = canvas.toDataURL();
      const result = await this._codeReader.decodeFromImageUrl(dataUrl);
      this._handleScanSuccess(result);
    } catch (error) {
      this._handleScanError(error);
    }
  }
  _handleScanSuccess(result) {
    this.fireDecoratorEvent("scan-success", {
      text: result.getText(),
      rawBytes: result.getRawBytes()
    });
  }
  _handleScanError(error) {
    if (error instanceof NotFoundException) {
      return;
    }
    this.fireDecoratorEvent("scan-error", { message: error.message });
  }
  _handleVideoPlaying() {
    const FRAME_PROCESSING_INTERVAL = 200;
    this.loading = false;
    this.isReadyToScan = true;
    requestAnimationFrame(() => {
      this._drawCaptureRegion();
    });
    if (this._scanInterval) {
      clearInterval(this._scanInterval);
    }
    this._scanInterval = setInterval(() => {
      this._processFrame();
    }, FRAME_PROCESSING_INTERVAL);
  }
  _handleDrawCaptureRegion() {
    this._drawCaptureRegion();
  }
  _closeDialog() {
    this._resetReader();
    this.open = false;
    this.fireDecoratorEvent("close");
  }
  _resetReader() {
    const video = this._getVideoElement();
    video.pause();
    if (video.srcObject) {
      const stream = video.srcObject;
      const tracks = stream.getTracks();
      tracks.forEach((track) => track.stop());
    }
    video.srcObject = null;
    video.removeEventListener("loadeddata", this._handleVideoPlayingBound);
    if (this._scanInterval) {
      clearInterval(this._scanInterval);
      this._scanInterval = null;
    }
    if (this._codeReader) {
      this._codeReader.reset();
    }
    const overlay = this._getOverlayCanvasElement();
    overlay.style.display = "none";
    this.isReadyToScan = false;
  }
};
__decorate4([
  slot_default()
], BarcodeScannerDialog.prototype, "header", void 0);
__decorate4([
  slot_default()
], BarcodeScannerDialog.prototype, "footer", void 0);
__decorate4([
  property_default({ type: Boolean })
], BarcodeScannerDialog.prototype, "open", void 0);
__decorate4([
  property_default({ type: Boolean })
], BarcodeScannerDialog.prototype, "loading", void 0);
__decorate4([
  property_default({ type: Boolean, noAttribute: true })
], BarcodeScannerDialog.prototype, "isReadyToScan", void 0);
__decorate4([
  i18n_default("@ui5/webcomponents-fiori")
], BarcodeScannerDialog, "i18nBundle", void 0);
BarcodeScannerDialog = BarcodeScannerDialog_1 = __decorate4([
  customElement_default({
    tag: "ui5-barcode-scanner-dialog",
    languageAware: true,
    renderer: JsxRenderer_default,
    template: BarcodeScannerDialogTemplate,
    styles: [BarcodeScannerDialog_css_default]
  }),
  event_strict_default("close", {
    bubbles: true
  }),
  event_strict_default("scan-success", {
    bubbles: true
  }),
  event_strict_default("scan-error", {
    bubbles: true
  })
], BarcodeScannerDialog);
BarcodeScannerDialog.define();

// node_modules/@ui5/webcomponents-react/dist/webComponents/BarcodeScannerDialog/index.js
var BarcodeScannerDialog3 = withWebComponent("ui5-barcode-scanner-dialog", [], ["open"], ["footer", "header"], ["close", "scan-error", "scan-success"]);
BarcodeScannerDialog3.displayName = "BarcodeScannerDialog";

// node_modules/@ui5/webcomponents/dist/types/BreadcrumbsDesign.js
var BreadcrumbsDesign;
(function(BreadcrumbsDesign2) {
  BreadcrumbsDesign2["Standard"] = "Standard";
  BreadcrumbsDesign2["NoCurrentPage"] = "NoCurrentPage";
})(BreadcrumbsDesign || (BreadcrumbsDesign = {}));
var BreadcrumbsDesign_default = BreadcrumbsDesign;

// node_modules/@ui5/webcomponents/dist/types/LinkDesign.js
var LinkDesign;
(function(LinkDesign2) {
  LinkDesign2["Default"] = "Default";
  LinkDesign2["Subtle"] = "Subtle";
  LinkDesign2["Emphasized"] = "Emphasized";
})(LinkDesign || (LinkDesign = {}));
var LinkDesign_default = LinkDesign;

// node_modules/@ui5/webcomponents/dist/BreadcrumbsItem.js
var __decorate5 = function(decorators, target, key, desc) {
  var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
  if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
  else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
  return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var BreadcrumbsItem = class BreadcrumbsItem2 extends UI5Element_default {
  get stableDomRef() {
    return this.getAttribute("stable-dom-ref") || `${this._id}-stable-dom-ref`;
  }
  get _linkDesign() {
    return this._isCurrentPageItem ? LinkDesign_default.Emphasized : LinkDesign_default.Default;
  }
  get accessibilityAttributes() {
    return {
      current: this._isCurrentPageItem ? "page" : false
    };
  }
};
__decorate5([
  property_default()
], BreadcrumbsItem.prototype, "href", void 0);
__decorate5([
  property_default()
], BreadcrumbsItem.prototype, "target", void 0);
__decorate5([
  property_default()
], BreadcrumbsItem.prototype, "accessibleName", void 0);
__decorate5([
  slot_default({ type: Node, "default": true })
], BreadcrumbsItem.prototype, "text", void 0);
BreadcrumbsItem = __decorate5([
  customElement_default("ui5-breadcrumbs-item")
], BreadcrumbsItem);
BreadcrumbsItem.define();

// node_modules/@ui5/webcomponents/dist/ListItemStandardTemplate.js
var predefinedHooks = {
  imageBegin,
  iconBegin,
  iconEnd,
  listItemContent
};
function ListItemStandardTemplate(hooks) {
  const currentHooks = { ...predefinedHooks, ...hooks };
  return ListItemTemplate.call(this, currentHooks);
}
function listItemContent() {
  return jsxs(Fragment, { children: [jsxs("div", { class: "ui5-li-text-wrapper", children: [jsx("span", { part: "title", class: "ui5-li-title", children: jsx("slot", {}) }), this.description && jsxs("div", { class: "ui5-li-description-info-wrapper", children: [jsx("span", { part: "description", class: "ui5-li-desc", children: this.description }), this.additionalText && jsx("span", { part: "additional-text", class: "ui5-li-additional-text", children: this.additionalText })] }), !this.typeActive && jsx("span", { class: "ui5-hidden-text", children: this.type })] }), !this.description && this.additionalText && jsx("span", { part: "additional-text", class: "ui5-li-additional-text", children: this.additionalText })] });
}
function imageBegin() {
  if (this.hasImage) {
    return jsx("div", { class: "ui5-li-image", children: jsx("slot", { name: "image" }) });
  }
}
function iconBegin() {
  if (this.displayIconBegin) {
    return jsx(Icon_default, { part: "icon", name: this.icon, class: "ui5-li-icon", mode: "Decorative" });
  }
}
function iconEnd() {
  if (this.displayIconEnd) {
    return jsx(Icon_default, { part: "icon", name: this.icon, class: "ui5-li-icon", mode: "Decorative" });
  }
}

// node_modules/@ui5/webcomponents/dist/ListItemStandard.js
var __decorate6 = function(decorators, target, key, desc) {
  var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
  if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
  else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
  return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var ListItemStandard = class ListItemStandard2 extends ListItem_default {
  constructor() {
    super(...arguments);
    this.iconEnd = false;
    this.additionalTextState = "None";
    this.movable = false;
    this.wrappingType = "None";
    this.hasTitle = false;
    this._hasImage = false;
  }
  onBeforeRendering() {
    super.onBeforeRendering();
    this.hasTitle = !!this.textContent;
    this._hasImage = this.hasImage;
  }
  get displayIconBegin() {
    return !!(this.icon && !this.iconEnd);
  }
  get displayIconEnd() {
    return !!(this.icon && this.iconEnd);
  }
  get hasImage() {
    return !!this.image.length;
  }
};
__decorate6([
  property_default()
], ListItemStandard.prototype, "description", void 0);
__decorate6([
  property_default()
], ListItemStandard.prototype, "icon", void 0);
__decorate6([
  property_default({ type: Boolean })
], ListItemStandard.prototype, "iconEnd", void 0);
__decorate6([
  property_default()
], ListItemStandard.prototype, "additionalText", void 0);
__decorate6([
  property_default()
], ListItemStandard.prototype, "additionalTextState", void 0);
__decorate6([
  property_default({ type: Boolean })
], ListItemStandard.prototype, "movable", void 0);
__decorate6([
  property_default()
], ListItemStandard.prototype, "accessibleName", void 0);
__decorate6([
  property_default()
], ListItemStandard.prototype, "wrappingType", void 0);
__decorate6([
  property_default({ type: Boolean })
], ListItemStandard.prototype, "hasTitle", void 0);
__decorate6([
  property_default({ type: Boolean })
], ListItemStandard.prototype, "_hasImage", void 0);
__decorate6([
  slot_default()
], ListItemStandard.prototype, "image", void 0);
ListItemStandard = __decorate6([
  customElement_default({
    tag: "ui5-li",
    renderer: JsxRenderer_default,
    template: ListItemStandardTemplate
  })
], ListItemStandard);
ListItemStandard.define();
var ListItemStandard_default = ListItemStandard;

// node_modules/@ui5/webcomponents/dist/BreadcrumbsPopoverTemplate.js
function BreadcrumbsPopoverTemplate() {
  return jsxs(ResponsivePopover_default, { class: "ui5-breadcrumbs-popover", hideArrow: true, _hideHeader: true, contentOnlyOnDesktop: true, placement: "Bottom", horizontalAlign: "Start", accessibleName: this._accessibleNamePopover, onKeyDown: this._onkeydown, children: [jsx(List_default, { selectionMode: "Single", separators: "None", onSelectionChange: this._onOverflowListItemSelect, children: this._overflowItemsData.map((item2) => jsx(ListItemStandard_default, { id: `${item2._id}-li`, accessibleName: item2.accessibleName, "data-ui5-stable": item2.stableDomRef, children: item2.textContent })) }), jsx("div", { slot: "footer", class: "ui5-breadcrumbs-popover-footer", children: jsx(Button_default, { design: "Transparent", onClick: this._closeRespPopover, children: this._cancelButtonText }) })] });
}

// node_modules/@ui5/webcomponents-icons/dist/v4/slim-arrow-down.js
var name = "slim-arrow-down";
var pathData = "M420.5 187q11-12 23 0 5 5 5 11t-5 11l-165 165q-10 9-23 9t-22-9l-166-165q-5-5-5-11.5t5-11.5 11.5-5 11.5 5l160 160q5 6 11 0z";
var ltr = false;
var collection = "SAP-icons-v4";
var packageName = "@ui5/webcomponents-icons";
registerIcon(name, { pathData, ltr, collection, packageName });

// node_modules/@ui5/webcomponents-icons/dist/v5/slim-arrow-down.js
var name2 = "slim-arrow-down";
var pathData2 = "M96 186q0-11 7.5-18.5T122 160q10 0 18 8l116 121 116-121q8-8 18-8 11 0 18.5 7.5T416 186q0 10-7 17L275 344q-8 8-19 8-12 0-18-8L103 203q-7-7-7-17z";
var ltr2 = false;
var collection2 = "SAP-icons-v5";
var packageName2 = "@ui5/webcomponents-icons";
registerIcon(name2, { pathData: pathData2, ltr: ltr2, collection: collection2, packageName: packageName2 });

// node_modules/@ui5/webcomponents-icons/dist/slim-arrow-down.js
var slim_arrow_down_default = "slim-arrow-down";

// node_modules/@ui5/webcomponents/dist/LinkTemplate.js
function LinkTemplate() {
  return jsxs("a", { part: "root", class: "ui5-link-root", role: this.effectiveAccRole, href: this.parsedRef, target: this.target, rel: this._rel, tabindex: this.effectiveTabIndex, title: this.tooltip, "aria-disabled": this.disabled, "aria-label": this.ariaLabelText, "aria-haspopup": this._hasPopup, "aria-expanded": this.accessibilityAttributes.expanded, "aria-current": this.accessibilityAttributes.current, "aria-description": this.ariaDescriptionText, onClick: this._onclick, onKeyDown: this._onkeydown, onKeyUp: this._onkeyup, children: [this.icon && jsx(Icon_default, { class: "ui5-link-icon", name: this.icon, mode: "Decorative", part: "icon" }), jsx("span", { class: "ui5-link-text", children: jsx("slot", {}) }), this.hasLinkType && jsx("span", { class: "ui5-hidden-text", children: this.linkTypeText }), this.endIcon && jsx(Icon_default, { class: "ui5-link-end-icon", name: this.endIcon, mode: "Decorative", part: "endIcon" })] });
}

// node_modules/@ui5/webcomponents/dist/generated/themes/Link.css.js
registerThemePropertiesLoader("@ui5/webcomponents-theming", "sap_horizon", async () => parameters_bundle_css_default);
registerThemePropertiesLoader("@ui5/webcomponents", "sap_horizon", async () => parameters_bundle_css_default2);
var Link_css_default = `.ui5-hidden-text{position:absolute;clip:rect(1px,1px,1px,1px);user-select:none;left:-1000px;top:-1000px;pointer-events:none;font-size:0}:host(:not([hidden])){display:inline-flex}:host{max-width:100%;color:var(--sapLinkColor);font-family:var(--sapFontFamily);font-size:var(--sapFontSize);cursor:pointer;outline:none;text-decoration:var(--_ui5-v2-8-0_link_text_decoration);text-shadow:var(--sapContent_TextShadow);white-space:normal;overflow-wrap:break-word}:host(:hover){color:var(--sapLink_Hover_Color);text-decoration:var(--_ui5-v2-8-0_link_hover_text_decoration)}:host(:active){color:var(--sapLink_Active_Color);text-decoration:var(--_ui5-v2-8-0_link_active_text_decoration)}:host([disabled]){pointer-events:none}:host([disabled]) .ui5-link-root{text-shadow:none;outline:none;cursor:default;pointer-events:none;opacity:var(--sapContent_DisabledOpacity)}:host([design="Emphasized"]) .ui5-link-root{font-family:var(--sapFontBoldFamily)}:host([design="Subtle"]){color:var(--sapLink_SubtleColor);text-decoration:var(--_ui5-v2-8-0_link_subtle_text_decoration)}:host([design="Subtle"]:hover:not(:active)){color:var(--sapLink_SubtleColor);text-decoration:var(--_ui5-v2-8-0_link_subtle_text_decoration_hover)}:host([wrapping-type="None"]){white-space:nowrap;overflow-wrap:normal}.ui5-link-root{max-width:100%;display:inline-block;position:relative;overflow:hidden;text-overflow:ellipsis;outline:none;white-space:inherit;overflow-wrap:inherit;text-decoration:inherit;color:inherit}:host([wrapping-type="None"][end-icon]) .ui5-link-root{display:inline-flex;align-items:end}:host .ui5-link-root{outline-offset:-.0625rem;border-radius:var(--_ui5-v2-8-0_link_focus_border-radius)}.ui5-link-icon,.ui5-link-end-icon{color:inherit;flex-shrink:0}.ui5-link-icon{float:inline-start;margin-inline-end:.125rem}.ui5-link-end-icon{margin-inline-start:.125rem;vertical-align:bottom}.ui5-link-text{overflow:hidden;text-overflow:ellipsis}.ui5-link-root:focus-visible,:host([desktop]) .ui5-link-root:focus-within,:host([design="Subtle"]) .ui5-link-root:focus-visible,:host([design="Subtle"][desktop]) .ui5-link-root:focus-within{background-color:var(--_ui5-v2-8-0_link_focus_background_color);outline:var(--_ui5-v2-8-0_link_outline);border-radius:var(--_ui5-v2-8-0_link_focus_border-radius);text-shadow:none;color:var(--_ui5-v2-8-0_link_focus_color)}:host(:not([desktop])) .ui5-link-root:focus-visible,:host([desktop]:focus-within),:host([design="Subtle"][desktop]:focus-within){text-decoration:var(--_ui5-v2-8-0_link_focus_text_decoration)}:host([desktop]:hover:not(:active):focus-within),:host([design="Subtle"][desktop]:hover:not(:active):focus-within){color:var(--_ui5-v2-8-0_link_focused_hover_text_color);text-decoration:var(--_ui5-v2-8-0_link_focused_hover_text_decoration)}:host([interactive-area-size="Large"]) .ui5-link-root{line-height:var(--_ui5-v2-8-0_link_large_interactive_area_height)}:host([interactive-area-size="Large"])::part(icon),:host([interactive-area-size="Large"])::part(endIcon){height:var(--_ui5-v2-8-0_link_large_interactive_area_height)}
`;

// node_modules/@ui5/webcomponents/dist/Link.js
var __decorate7 = function(decorators, target, key, desc) {
  var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
  if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
  else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
  return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var Link_1;
var Link = Link_1 = class Link2 extends UI5Element_default {
  constructor() {
    super();
    this.disabled = false;
    this.design = "Default";
    this.interactiveAreaSize = "Normal";
    this.wrappingType = "Normal";
    this.accessibleRole = "Link";
    this.accessibilityAttributes = {};
    this._dummyAnchor = document.createElement("a");
  }
  onEnterDOM() {
    if (isDesktop()) {
      this.setAttribute("desktop", "");
    }
  }
  onBeforeRendering() {
    const needsNoReferrer = this.target !== "_self" && this.href && this._isCrossOrigin(this.href);
    this._rel = needsNoReferrer ? "noreferrer noopener" : void 0;
  }
  _isCrossOrigin(href) {
    this._dummyAnchor.href = href;
    return !(this._dummyAnchor.hostname === getLocationHostname() && this._dummyAnchor.port === getLocationPort() && this._dummyAnchor.protocol === getLocationProtocol());
  }
  get effectiveTabIndex() {
    var _a;
    if (this.forcedTabIndex) {
      return Number.parseInt(this.forcedTabIndex);
    }
    return this.disabled || !((_a = this.textContent) == null ? void 0 : _a.length) ? -1 : 0;
  }
  get ariaLabelText() {
    return getEffectiveAriaLabelText(this);
  }
  get hasLinkType() {
    return this.design !== LinkDesign_default.Default;
  }
  static typeTextMappings() {
    return {
      "Subtle": LINK_SUBTLE,
      "Emphasized": LINK_EMPHASIZED
    };
  }
  get linkTypeText() {
    return Link_1.i18nBundle.getText(Link_1.typeTextMappings()[this.design]);
  }
  get parsedRef() {
    return this.href && this.href.length > 0 ? this.href : void 0;
  }
  get effectiveAccRole() {
    return toLowercaseEnumValue(this.accessibleRole);
  }
  get ariaDescriptionText() {
    return this.accessibleDescription === "" ? void 0 : this.accessibleDescription;
  }
  get _hasPopup() {
    return this.accessibilityAttributes.hasPopup;
  }
  _onclick(e) {
    const { altKey, ctrlKey, metaKey, shiftKey } = e;
    e.stopImmediatePropagation();
    const executeEvent = this.fireDecoratorEvent("click", {
      altKey,
      ctrlKey,
      metaKey,
      shiftKey
    });
    if (!executeEvent) {
      e.preventDefault();
    }
  }
  _onkeydown(e) {
    if (isEnter(e) && !this.href) {
      this._onclick(e);
    } else if (isSpace(e)) {
      e.preventDefault();
    }
  }
  _onkeyup(e) {
    if (!isSpace(e)) {
      return;
    }
    this._onclick(e);
    if (this.href && !e.defaultPrevented) {
      const customEvent = new MouseEvent("click");
      customEvent.stopImmediatePropagation();
      this.getDomRef().dispatchEvent(customEvent);
    }
  }
};
__decorate7([
  property_default({ type: Boolean })
], Link.prototype, "disabled", void 0);
__decorate7([
  property_default()
], Link.prototype, "tooltip", void 0);
__decorate7([
  property_default()
], Link.prototype, "href", void 0);
__decorate7([
  property_default()
], Link.prototype, "target", void 0);
__decorate7([
  property_default()
], Link.prototype, "design", void 0);
__decorate7([
  property_default()
], Link.prototype, "interactiveAreaSize", void 0);
__decorate7([
  property_default()
], Link.prototype, "wrappingType", void 0);
__decorate7([
  property_default()
], Link.prototype, "accessibleName", void 0);
__decorate7([
  property_default()
], Link.prototype, "accessibleNameRef", void 0);
__decorate7([
  property_default()
], Link.prototype, "accessibleRole", void 0);
__decorate7([
  property_default({ type: Object })
], Link.prototype, "accessibilityAttributes", void 0);
__decorate7([
  property_default()
], Link.prototype, "accessibleDescription", void 0);
__decorate7([
  property_default()
], Link.prototype, "icon", void 0);
__decorate7([
  property_default()
], Link.prototype, "endIcon", void 0);
__decorate7([
  property_default({ noAttribute: true })
], Link.prototype, "_rel", void 0);
__decorate7([
  property_default({ noAttribute: true })
], Link.prototype, "forcedTabIndex", void 0);
__decorate7([
  i18n_default("@ui5/webcomponents")
], Link, "i18nBundle", void 0);
Link = Link_1 = __decorate7([
  customElement_default({
    tag: "ui5-link",
    languageAware: true,
    renderer: JsxRenderer_default,
    template: LinkTemplate,
    styles: Link_css_default
  }),
  event_strict_default("click", {
    bubbles: true,
    cancelable: true
  })
], Link);
Link.define();
var Link_default = Link;

// node_modules/@ui5/webcomponents/dist/BreadcrumbsTemplate.js
function BreadcrumbsTemplate() {
  return jsxs(Fragment, { children: [jsx("nav", { class: "ui5-breadcrumbs-root", "aria-label": this._accessibleNameText, children: jsxs("ol", { onFocusIn: this._onfocusin, onKeyDown: this._onkeydown, onKeyUp: this._onkeyup, children: [jsx("li", { class: "ui5-breadcrumbs-dropdown-arrow-link-wrapper", hidden: this._isOverflowEmpty, children: jsx(Link_default, { wrappingType: "None", accessibleRole: "Button", accessibleName: this._dropdownArrowAccessibleNameText, accessibilityAttributes: this.linkAccessibilityAttributes, onClick: this._openRespPopover, children: jsx(Icon_default, { name: slim_arrow_down_default, title: this._dropdownArrowAccessibleNameText }) }) }), this._linksData.map((linkData) => jsxs("li", { id: `${linkData._id}-link-wrapper`, class: "ui5-breadcrumbs-link-wrapper", children: [jsx(Link_default, { id: `${linkData._id}-link`, href: linkData.href, target: linkData.target, design: linkData._linkDesign, accessibleName: linkData._accessibleNameText, accessibilityAttributes: linkData.accessibilityAttributes, "data-ui5-stable": linkData.stableDomRef, wrappingType: "None", onClick: this._onLinkPress, children: linkData.innerText }), linkData._needsSeparator && jsx("span", { class: "ui5-breadcrumbs-separator", "aria-hidden": "true" })] })), !this._endsWithCurrentLinkItem && this._endsWithCurrentLocation && jsx("li", { class: "ui5-breadcrumbs-current-location", onClick: this._onLabelPress, children: jsx("span", { id: `${this._id}-labelWrapper`, role: "link", "aria-current": "page", "aria-label": this._currentLocationAccName, children: jsx(Label_default, { children: this._currentLocationText }) }) })] }) }), BreadcrumbsPopoverTemplate.call(this)] });
}

// node_modules/@ui5/webcomponents/dist/generated/themes/Breadcrumbs.css.js
registerThemePropertiesLoader("@ui5/webcomponents-theming", "sap_horizon", async () => parameters_bundle_css_default);
registerThemePropertiesLoader("@ui5/webcomponents", "sap_horizon", async () => parameters_bundle_css_default2);
var Breadcrumbs_css_default = `:host(:not([hidden])){display:block;width:100%}.ui5-breadcrumbs-root{white-space:nowrap;outline:none;margin:var(--_ui5-v2-8-0_breadcrumbs_margin)}.ui5-breadcrumbs-root>ol{margin:0;padding:0;list-style-type:none;display:-webkit-box;display:-webkit-flex;display:flex}.ui5-breadcrumbs-root>ol>li{display:inline}.ui5-breadcrumbs-current-location{min-width:1%;flex:1 1 auto;font-size:0;align-self:center}.ui5-breadcrumbs-current-location>span:focus{outline:var(--sapContent_FocusWidth) var(--sapContent_FocusStyle) var(--sapContent_FocusColor);border-radius:var(--_ui5-v2-8-0_breadcrumbs_current_location_focus_border_radius)}.ui5-breadcrumbs-dropdown-arrow-link-wrapper[hidden]{display:none}.ui5-breadcrumbs-dropdown-arrow-link-wrapper [ui5-icon]{width:var(--sapFontSize);height:var(--sapFontSize);padding-left:.675rem;vertical-align:text-top;color:var(--sapLinkColor)}.ui5-breadcrumbs-dropdown-arrow-link-wrapper [ui5-link][focused] [ui5-icon]{color:var(--_ui5-v2-8-0_link_focus_color)}.ui5-breadcrumbs-dropdown-arrow-link-wrapper [ui5-icon]:before{content:"...";vertical-align:middle;position:absolute;left:0;bottom:0}.ui5-breadcrumbs-dropdown-arrow-link-wrapper [ui5-link]::part(root),.ui5-breadcrumbs-link-wrapper [ui5-link]::part(root){padding-top:.25rem;padding-bottom:.25rem}.ui5-breadcrumbs-dropdown-arrow-link-wrapper [ui5-link][focused] [ui5-icon]:after,.ui5-breadcrumbs-dropdown-arrow-link-wrapper:hover [ui5-icon]:after{content:"";position:absolute;border-bottom:.0625rem solid;inset:0 0 1px}.ui5-breadcrumbs-popover{margin-top:.25rem}.ui5-breadcrumbs-popover-footer{display:flex;justify-content:flex-end;width:100%}.ui5-breadcrumbs-separator:after{content:"/";padding:0 .25rem;cursor:auto;color:var(--sapContent_LabelColor);display:inline-block;font-family:"72override",var(--sapFontFamily);font-size:var(--sapFontSize)}:host([separators="DoubleSlash"]) .ui5-breadcrumbs-separator:after{content:"//"}:host([separators="BackSlash"]) .ui5-breadcrumbs-separator:after{content:"\\\\"}:host([separators="DoubleBackSlash"]) .ui5-breadcrumbs-separator:after{content:"\\\\\\\\"}:host([separators="GreaterThan"]) .ui5-breadcrumbs-separator:after{content:">"}:host([separators="DoubleGreaterThan"]) .ui5-breadcrumbs-separator:after{content:">>"}
`;

// node_modules/@ui5/webcomponents/dist/generated/themes/BreadcrumbsPopover.css.js
registerThemePropertiesLoader("@ui5/webcomponents-theming", "sap_horizon", async () => parameters_bundle_css_default);
registerThemePropertiesLoader("@ui5/webcomponents", "sap_horizon", async () => parameters_bundle_css_default2);
var BreadcrumbsPopover_css_default = `.ui5-breadcrumbs-popover::part(content){padding:0}.ui5-breadcrumbs-popover-footer{display:flex;justify-content:flex-end;width:100%;padding-right:.5rem;align-items:center}
`;

// node_modules/@ui5/webcomponents/dist/Breadcrumbs.js
var __decorate8 = function(decorators, target, key, desc) {
  var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
  if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
  else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
  return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var Breadcrumbs_1;
var Breadcrumbs = Breadcrumbs_1 = class Breadcrumbs2 extends UI5Element_default {
  constructor() {
    super();
    this.design = "Standard";
    this.separators = "Slash";
    this._overflowSize = 0;
    this._breadcrumbItemWidths = /* @__PURE__ */ new WeakMap();
    this._dropdownArrowLinkWidth = 0;
    this._itemNavigation = new ItemNavigation_default(this, {
      navigationMode: NavigationMode_default.Horizontal,
      getItemsCallback: () => this._getFocusableItems()
    });
    this._onResizeHandler = this._updateOverflow.bind(this);
    this._labelFocusAdaptor = {
      id: `${this._id}-labelWrapper`,
      getlabelWrapper: this.getCurrentLocationLabelWrapper.bind(this),
      set forcedTabIndex(value) {
        const wrapper = this.getlabelWrapper();
        wrapper && wrapper.setAttribute("tabindex", value);
      },
      get forcedTabIndex() {
        const wrapper = this.getlabelWrapper();
        return (wrapper == null ? void 0 : wrapper.getAttribute("tabindex")) || "";
      }
    };
  }
  onInvalidation(changeInfo) {
    if (changeInfo.reason === "childchange") {
      const itemIndex = this._getItems().indexOf(changeInfo.child), isInOverflow = itemIndex < this._overflowSize;
      if (isInOverflow) {
        this._overflowSize = itemIndex;
      }
    }
  }
  _getItems() {
    return this.getSlottedNodes("items");
  }
  onBeforeRendering() {
    this._preprocessItems();
  }
  async onAfterRendering() {
    await renderFinished();
    this._cacheWidths();
    this._updateOverflow();
  }
  onEnterDOM() {
    ResizeHandler_default.register(this, this._onResizeHandler);
  }
  onExitDOM() {
    ResizeHandler_default.deregister(this, this._onResizeHandler);
  }
  _initItemNavigation() {
    if (!this._itemNavigation) {
      this._itemNavigation = new ItemNavigation_default(this, {
        navigationMode: NavigationMode_default.Horizontal,
        getItemsCallback: () => this._getFocusableItems()
      });
    }
  }
  /**
   * Obtains the items for navigation via keyboard
   * @private
   */
  _getFocusableItems() {
    const items3 = this._links;
    if (!this._isOverflowEmpty) {
      items3.unshift(this._dropdownArrowLink);
    }
    if (this._endsWithCurrentLocation && !this._endsWithCurrentLinkItem) {
      items3.push(this._labelFocusAdaptor);
    }
    return items3;
  }
  /**
   * Returns the translatable accessible name for the popover
   * @private
   */
  get _accessibleNamePopover() {
    return Breadcrumbs_1.i18nBundle.getText(FORM_SELECTABLE_AVALIABLE_VALUES);
  }
  _onfocusin(e) {
    const target = e.target, labelWrapper = this.getCurrentLocationLabelWrapper(), currentItem = target === labelWrapper ? this._labelFocusAdaptor : target;
    this._itemNavigation.setCurrentItem(currentItem);
  }
  _onkeydown(e) {
    const isDropdownArrowFocused = this._isDropdownArrowFocused;
    if (isShow(e) && isDropdownArrowFocused && !this._isOverflowEmpty) {
      e.preventDefault();
      this._toggleRespPopover();
      return;
    }
    if (isSpace(e) && isDropdownArrowFocused && !this._isOverflowEmpty && !this._isPickerOpen) {
      e.preventDefault();
      return;
    }
    if ((isEnter(e) || isSpace(e)) && this._isCurrentLocationLabelFocused) {
      this._onLabelPress(e);
    }
  }
  _onkeyup(e) {
    if (this._isDropdownArrowFocused && isSpace(e) && !this._isOverflowEmpty && !this._isPickerOpen) {
      this._openRespPopover();
    }
  }
  /**
   * Caches the space required to render the content
   * @private
   */
  _cacheWidths() {
    const map = this._breadcrumbItemWidths, items3 = this._getItems(), label = this._currentLocationLabel;
    for (let i = this._overflowSize; i < items3.length; i++) {
      const item2 = items3[i], link = this.shadowRoot.querySelector(`#${item2._id}-link-wrapper`);
      map.set(item2, this._getElementWidth(link));
    }
    if (items3.length && this._endsWithCurrentLocation && label) {
      const item2 = items3[items3.length - 1];
      map.set(item2, this._getElementWidth(label));
    }
    if (!this._isOverflowEmpty) {
      const arrow = this.shadowRoot.querySelector(".ui5-breadcrumbs-dropdown-arrow-link-wrapper");
      this._dropdownArrowLinkWidth = this._getElementWidth(arrow);
    }
  }
  _updateOverflow() {
    const items3 = this._getItems(), availableWidth = this.shadowRoot.querySelector(".ui5-breadcrumbs-root").offsetWidth;
    let requiredWidth = this._getTotalContentWidth(), overflowSize = 0;
    if (requiredWidth > availableWidth) {
      requiredWidth += this._dropdownArrowLinkWidth;
    }
    while (requiredWidth >= availableWidth && overflowSize < this._maxAllowedOverflowSize) {
      const itemToOverflow = items3[overflowSize];
      let itemWidth = 0;
      if (this._isItemVisible(itemToOverflow)) {
        itemWidth = this._breadcrumbItemWidths.get(itemToOverflow) || 0;
      }
      requiredWidth -= itemWidth;
      overflowSize++;
    }
    this._overflowSize = overflowSize;
    if (this._isOverflowEmpty && this._isPickerOpen) {
      this.responsivePopover.open = false;
    }
    const focusableItems = this._getFocusableItems();
    if (!focusableItems.some((x) => x.forcedTabIndex === "0")) {
      this._itemNavigation.setCurrentItem(focusableItems[0]);
    }
  }
  _getElementWidth(element) {
    if (element) {
      return Math.ceil(element.getBoundingClientRect().width);
    }
    return 0;
  }
  _getTotalContentWidth() {
    const items3 = this._getItems(), widthsMap = this._breadcrumbItemWidths, totalLinksWidth = items3.reduce((sum, link) => sum + widthsMap.get(link), 0);
    return totalLinksWidth;
  }
  _onLinkPress(e) {
    const link = e.target, items3 = this._getItems(), item2 = items3.find((x) => `${x._id}-link` === link.id), { altKey, ctrlKey, metaKey, shiftKey } = e.detail;
    if (!this.fireDecoratorEvent("item-click", {
      item: item2,
      altKey,
      ctrlKey,
      metaKey,
      shiftKey
    })) {
      e.preventDefault();
    }
  }
  _onLabelPress(e) {
    const items3 = this._getItems(), item2 = items3[items3.length - 1], { altKey, ctrlKey, metaKey, shiftKey } = e;
    this.fireDecoratorEvent("item-click", {
      item: item2,
      altKey,
      ctrlKey,
      metaKey,
      shiftKey
    });
  }
  _onOverflowListItemSelect(e) {
    const listItem = e.detail.selectedItems[0], items3 = this._getItems(), item2 = items3.find((x) => `${x._id}-li` === listItem.id);
    if (this.fireDecoratorEvent("item-click", { item: item2 })) {
      locationOpen(item2.href, item2.target || "_self", "noopener,noreferrer");
      this.responsivePopover.open = false;
    }
  }
  _respPopover() {
    return this.shadowRoot.querySelector("[ui5-responsive-popover]");
  }
  _toggleRespPopover() {
    this.responsivePopover = this._respPopover();
    if (this._isPickerOpen) {
      this._closeRespPopover();
    } else {
      this._openRespPopover();
    }
  }
  _closeRespPopover() {
    if (this.responsivePopover) {
      this.responsivePopover.open = false;
    }
  }
  _openRespPopover() {
    this.responsivePopover = this._respPopover();
    this.responsivePopover.opener = this._dropdownArrowLink;
    this.responsivePopover.open = true;
  }
  _isItemVisible(item2) {
    return !item2.hidden && this._hasVisibleContent(item2);
  }
  _hasVisibleContent(item2) {
    return item2.innerText || Array.from(item2.children).some((child) => !child.hidden);
  }
  _preprocessItems() {
    this.items.forEach((item2) => {
      item2._getRealDomRef = () => this.getDomRef().querySelector(`[data-ui5-stable*=${item2.stableDomRef}]`);
    });
  }
  _getItemPositionText(position, size) {
    return Breadcrumbs_1.i18nBundle.getText(BREADCRUMB_ITEM_POS, position, size);
  }
  _getItemAccessibleName(item2, position, size) {
    const positionText = this._getItemPositionText(position, size);
    const itemsText = item2.textContent || "";
    let text = "";
    if (item2.accessibleName) {
      text = `${itemsText.trim()} ${item2.accessibleName} ${positionText}`;
    } else {
      text = `${itemsText.trim()} ${positionText}`;
    }
    return text;
  }
  getCurrentLocationLabelWrapper() {
    return this.shadowRoot.querySelector(".ui5-breadcrumbs-current-location > span");
  }
  get _visibleItems() {
    return this._getItems().slice(this._overflowSize).filter((i) => this._isItemVisible(i));
  }
  get _endsWithCurrentLinkItem() {
    const items3 = this._getItems();
    return items3.length && items3[items3.length - 1].href;
  }
  get _endsWithCurrentLocation() {
    return this.design === BreadcrumbsDesign_default.Standard;
  }
  get _currentLocationText() {
    const items3 = this._getItems();
    if (this._endsWithCurrentLocation && items3.length) {
      const item2 = items3[items3.length - 1];
      if (this._isItemVisible(item2)) {
        return item2.innerText;
      }
    }
    return "";
  }
  get _currentLocationLabel() {
    return this.shadowRoot.querySelector(".ui5-breadcrumbs-current-location [ui5-label]");
  }
  get _isDropdownArrowFocused() {
    return this._dropdownArrowLink.forcedTabIndex === "0";
  }
  get _isCurrentLocationLabelFocused() {
    const label = this.getCurrentLocationLabelWrapper();
    return label && label.tabIndex === 0;
  }
  /**
   * Returns the maximum allowed count of items in the overflow
   * with respect to the UX requirement to never overflow the last visible item
   */
  get _maxAllowedOverflowSize() {
    const items3 = this._getItems().filter((item2) => this._isItemVisible(item2));
    return items3.length - 1;
  }
  /**
   * Getter for the interactive element that opens the overflow
   * @private
   */
  get _dropdownArrowLink() {
    return this.shadowRoot.querySelector(".ui5-breadcrumbs-dropdown-arrow-link-wrapper [ui5-link]");
  }
  /**
   * Getter for the list of abstract breadcrumb items to be rendered as list-items inside the overflow
   */
  get _overflowItemsData() {
    return this._getItems().slice(0, this._overflowSize).filter((item2) => this._isItemVisible(item2)).reverse();
  }
  /**
   * Getter for the list of abstract breadcrumb items to be rendered as links outside the overflow
   */
  get _linksData() {
    const items3 = this._visibleItems;
    const itemsCount = items3.length;
    if (this._endsWithCurrentLocation && !this._endsWithCurrentLinkItem) {
      items3.pop();
    }
    return items3.map((item2, index) => {
      item2._accessibleNameText = this._getItemAccessibleName(item2, index + 1, itemsCount);
      item2._isCurrentPageItem = index === itemsCount - 1 && this._endsWithCurrentLocation;
      item2._needsSeparator = !item2._isCurrentPageItem;
      return item2;
    });
  }
  /**
   * Getter for accessible name of the current location. Includes the position of the current location and the size of the breadcrumbs
   */
  get _currentLocationAccName() {
    const items3 = this._visibleItems;
    const positionText = this._getItemPositionText(items3.length, items3.length);
    const lastItem = items3[items3.length - 1];
    if (!lastItem) {
      return positionText;
    }
    const lastItemText = lastItem.textContent || "";
    if (lastItem.accessibleName) {
      return `${lastItemText.trim()} ${lastItem.accessibleName} ${positionText}`;
    }
    return `${lastItemText.trim()} ${positionText}`;
  }
  /**
   * Getter for the list of links corresponding to the abstract breadcrumb items
   */
  get _links() {
    return Array.from(this.shadowRoot.querySelectorAll(".ui5-breadcrumbs-link-wrapper [ui5-link]"));
  }
  get _isOverflowEmpty() {
    return this._overflowItemsData.length === 0;
  }
  get linkAccessibilityAttributes() {
    return {
      hasPopup: this._isOverflowEmpty ? void 0 : "listbox"
    };
  }
  get _isPickerOpen() {
    return !!this.responsivePopover && this.responsivePopover.open;
  }
  get _accessibleNameText() {
    return Breadcrumbs_1.i18nBundle.getText(BREADCRUMBS_ARIA_LABEL);
  }
  get _dropdownArrowAccessibleNameText() {
    return Breadcrumbs_1.i18nBundle.getText(BREADCRUMBS_OVERFLOW_ARIA_LABEL);
  }
  get _cancelButtonText() {
    return Breadcrumbs_1.i18nBundle.getText(BREADCRUMBS_CANCEL_BUTTON);
  }
};
__decorate8([
  property_default()
], Breadcrumbs.prototype, "design", void 0);
__decorate8([
  property_default()
], Breadcrumbs.prototype, "separators", void 0);
__decorate8([
  property_default({ type: Number, noAttribute: true })
], Breadcrumbs.prototype, "_overflowSize", void 0);
__decorate8([
  slot_default({ type: HTMLElement, invalidateOnChildChange: true, "default": true })
], Breadcrumbs.prototype, "items", void 0);
__decorate8([
  i18n_default("@ui5/webcomponents")
], Breadcrumbs, "i18nBundle", void 0);
Breadcrumbs = Breadcrumbs_1 = __decorate8([
  customElement_default({
    tag: "ui5-breadcrumbs",
    languageAware: true,
    renderer: JsxRenderer_default,
    template: BreadcrumbsTemplate,
    styles: [Breadcrumbs_css_default, BreadcrumbsPopover_css_default]
  }),
  event_strict_default("item-click", {
    bubbles: true,
    cancelable: true
  })
], Breadcrumbs);
Breadcrumbs.define();

// node_modules/@ui5/webcomponents-react/dist/webComponents/Breadcrumbs/index.js
var Breadcrumbs3 = withWebComponent("ui5-breadcrumbs", ["design", "separators"], [], [], ["item-click"]);
Breadcrumbs3.displayName = "Breadcrumbs";

// node_modules/@ui5/webcomponents-react/dist/webComponents/BreadcrumbsItem/index.js
var BreadcrumbsItem3 = withWebComponent("ui5-breadcrumbs-item", ["accessibleName", "href", "target"], [], [], []);
BreadcrumbsItem3.displayName = "BreadcrumbsItem";

// node_modules/@ui5/webcomponents-react/dist/webComponents/BusyIndicator/index.js
var BusyIndicator = withWebComponent("ui5-busy-indicator", ["delay", "size", "text", "textPlacement"], ["active"], [], []);
BusyIndicator.displayName = "BusyIndicator";

// node_modules/@ui5/webcomponents-react/dist/webComponents/Button/index.js
var Button = withWebComponent("ui5-button", ["accessibilityAttributes", "accessibleDescription", "accessibleName", "accessibleNameRef", "accessibleRole", "design", "endIcon", "icon", "tooltip", "type"], ["disabled", "submits"], ["badge"], ["click"]);
Button.displayName = "Button";

// node_modules/@ui5/webcomponents-icons/dist/v4/sys-help-2.js
var name3 = "sys-help-2";
var pathData3 = "M256 0q53 0 99.5 20T437 74.5t55 81.5 20 100-20 99.5-55 81.5-81.5 55-99.5 20-100-20-81.5-55T20 355.5 0 256t20-100 54.5-81.5T156 20 256 0zm-5 425q15 0 26-11t11-26-11-25.5-26-10.5-25.5 10.5T215 388t10.5 26 25.5 11zm101-239q0-32-27-57t-77-25q-46 0-72.5 24T146 187h52q5-24 17.5-32.5T251 146t35 12.5 12 27.5q0 10-2.5 14T282 215l-20 17q-15 12-23 21t-11.5 18.5-4.5 21-1 27.5h50q0-12 .5-19t3-12.5T283 278t15-13l27-25 16-18 9-16z";
var ltr3 = true;
var collection3 = "SAP-icons-v4";
var packageName3 = "@ui5/webcomponents-icons";
registerIcon(name3, { pathData: pathData3, ltr: ltr3, collection: collection3, packageName: packageName3 });

// node_modules/@ui5/webcomponents-icons/dist/v5/sys-help-2.js
var name4 = "sys-help-2";
var pathData4 = "M256 0q53 0 99.5 20T437 75t55 81.5 20 99.5-20 99.5-55 81.5-81.5 55-99.5 20-99.5-20T75 437t-55-81.5T0 256t20-99.5T75 75t81.5-55T256 0zm32 289q31-10 50.5-36.5T358 192q0-43-29.5-72.5T256 90q-21 0-39.5 8T184 118.5 162 148t-8 35q0 20 9 30.5t23 10.5q13 0 22.5-9t9.5-23q0-16 11-27t27-11 27 11 11 27-11 27-27 11q-14 0-23 9.5t-9 22.5v26q0 14 9 23t23 9q13 0 22-9t10-22zm-32 127q14 0 23-9t9-23-9-23-23-9-23 9-9 23 9 23 23 9z";
var ltr4 = true;
var collection4 = "SAP-icons-v5";
var packageName4 = "@ui5/webcomponents-icons";
registerIcon(name4, { pathData: pathData4, ltr: ltr4, collection: collection4, packageName: packageName4 });

// node_modules/@ui5/webcomponents-icons/dist/sys-help-2.js
var sys_help_2_default = "sys-help-2";

// node_modules/@ui5/webcomponents/dist/types/TagDesign.js
var TagDesign;
(function(TagDesign2) {
  TagDesign2["Set1"] = "Set1";
  TagDesign2["Set2"] = "Set2";
  TagDesign2["Neutral"] = "Neutral";
  TagDesign2["Information"] = "Information";
  TagDesign2["Positive"] = "Positive";
  TagDesign2["Negative"] = "Negative";
  TagDesign2["Critical"] = "Critical";
})(TagDesign || (TagDesign = {}));
var TagDesign_default = TagDesign;

// node_modules/@ui5/webcomponents/dist/TagTemplate.js
function TagTemplate() {
  return jsx(Fragment, { children: this.interactive ? jsx("button", { class: "ui5-tag-root", title: this._title, "aria-roledescription": this._roleDescription, "aria-description": this._valueState, onClick: this._onclick, part: "root", children: content.call(this) }) : jsx("div", { class: "ui5-tag-root", title: this._title, part: "root", children: content.call(this) }) });
}
function content() {
  return jsxs(Fragment, { children: [jsx("slot", { name: "icon" }), this._semanticIconName && jsx(Icon_default, { class: "ui5-tag-semantic-icon", name: this._semanticIconName }), jsx("span", { class: "ui5-hidden-text", children: this.tagDescription }), this.hasText && jsx("span", { class: "ui5-tag-text", children: jsx("slot", {}) })] });
}

// node_modules/@ui5/webcomponents/dist/generated/themes/Tag.css.js
registerThemePropertiesLoader("@ui5/webcomponents-theming", "sap_horizon", async () => parameters_bundle_css_default);
registerThemePropertiesLoader("@ui5/webcomponents", "sap_horizon", async () => parameters_bundle_css_default2);
var Tag_css_default = `.ui5-hidden-text{position:absolute;clip:rect(1px,1px,1px,1px);user-select:none;left:-1000px;top:-1000px;pointer-events:none;font-size:0}:host(:not([hidden])){display:inline-block}:host{font-size:var(--sapFontSmallSize);font-family:var(--sapFontBoldFamily);font-weight:var(--_ui5-v2-8-0-tag-font-weight);letter-spacing:var(--_ui5-v2-8-0-tag-letter-spacing);line-height:var(--_ui5-v2-8-0-tag-height)}.ui5-tag-root{display:flex;align-items:baseline;justify-content:center;width:100%;min-width:1.125em;max-width:100%;box-sizing:border-box;padding:var(--_ui5-v2-8-0-tag-text-padding);border:.0625rem solid;border-radius:var(--sapButton_BorderCornerRadius);white-space:normal;font-size:inherit;font-family:inherit;font-weight:inherit;line-height:inherit;letter-spacing:inherit}:host([interactive]) .ui5-tag-root:active{text-shadow:var(--ui5-v2-8-0-tag-text-shadow)}:host([interactive]) .ui5-tag-root{cursor:pointer}:host([desktop][interactive]) .ui5-tag-root:focus,:host([interactive]) .ui5-tag-root:focus-visible{outline:var(--sapContent_FocusWidth) var(--sapContent_FocusStyle) var(--sapContent_FocusColor);outline-offset:1px}:host([wrapping-type="None"]) .ui5-tag-root{white-space:nowrap}:host([_icon-only]) .ui5-tag-root{padding-inline:var(--_ui5-v2-8-0-tag-padding-inline-icon-only)}.ui5-tag-text{text-transform:var(--_ui5-v2-8-0-tag-text-transform);text-align:start;pointer-events:none;overflow:hidden;text-overflow:ellipsis}:host([_has-icon]) .ui5-tag-text{padding-inline-start:var(--_ui5-v2-8-0-tag-icon-gap)}[ui5-icon],::slotted([ui5-icon]){width:var(--_ui5-v2-8-0-tag-icon-width);min-width:var(--_ui5-v2-8-0-tag-icon-width);color:inherit;pointer-events:none;align-self:flex-start}.ui5-tag-root{background-color:var(--sapNeutralBackground);border-color:var(--sapNeutralBorderColor);color:var(--sapTextColor);text-shadow:var(--ui5-v2-8-0-tag-text-shadow)}:host([interactive]) .ui5-tag-root:hover{background-color:var(--sapButton_Neutral_Hover_Background);border-color:var(--sapButton_Neutral_Hover_BorderColor);color:var(--sapButton_Neutral_Hover_TextColor)}:host([interactive]) .ui5-tag-root:active{background-color:var(--sapButton_Neutral_Active_Background);border-color:var(--sapButton_Neutral_Active_BorderColor);color:var(--sapButton_Active_TextColor)}:host([design="Positive"]) .ui5-tag-root{background-color:var(--sapButton_Success_Background);border-color:var(--sapButton_Success_BorderColor);color:var(--sapButton_Success_TextColor);text-shadow:var(--ui5-v2-8-0-tag-contrast-text-shadow)}:host([interactive][design="Positive"]) .ui5-tag-root:hover{background-color:var(--sapButton_Success_Hover_Background);border-color:var(--sapButton_Success_Hover_BorderColor);color:var(--sapButton_Success_Hover_TextColor)}:host([interactive][design="Positive"]) .ui5-tag-root:active{background-color:var(--sapButton_Success_Active_Background);border-color:var(--sapButton_Success_Active_BorderColor);color:var(--sapButton_Accept_Selected_TextColor)}:host([design="Negative"]) .ui5-tag-root{background-color:var(--sapButton_Negative_Background);border-color:var(--sapButton_Negative_BorderColor);color:var(--sapButton_Negative_TextColor);text-shadow:var(--ui5-v2-8-0-tag-contrast-text-shadow)}:host([interactive][design="Negative"]) .ui5-tag-root:hover{background-color:var(--sapButton_Negative_Hover_Background);border-color:var(--sapButton_Negative_Hover_BorderColor);color:var(--sapButton_Negative_Hover_TextColor)}:host([interactive][design="Negative"]) .ui5-tag-root:active{background-color:var(--sapButton_Negative_Active_Background);border-color:var(--sapButton_Negative_Active_BorderColor);color:var(--sapButton_Reject_Selected_TextColor)}:host([design="Critical"]) .ui5-tag-root{background-color:var(--sapButton_Critical_Background);border-color:var(--sapButton_Critical_BorderColor);color:var(--sapButton_Critical_TextColor);text-shadow:var(--ui5-v2-8-0-tag-contrast-text-shadow)}:host([interactive][design="Critical"]) .ui5-tag-root:hover{background-color:var(--sapButton_Critical_Hover_Background);border-color:var(--sapButton_Critical_Hover_BorderColor);color:var(--sapButton_Critical_Hover_TextColor)}:host([interactive][design="Critical"]) .ui5-tag-root:active{background-color:var(--sapButton_Critical_Active_Background);border-color:var(--sapButton_Critical_Active_BorderColor);color:var(--sapButton_Attention_Selected_TextColor)}:host([design="Information"]) .ui5-tag-root{background-color:var(--sapButton_Information_Background);border-color:var(--sapButton_Information_BorderColor);color:var(--sapButton_Information_TextColor);text-shadow:var(--ui5-v2-8-0-tag-information-text-shadow)}:host([interactive][design="Information"]) .ui5-tag-root:hover{background-color:var(--sapButton_Information_Hover_Background);border-color:var(--sapButton_Information_Hover_BorderColor);color:var(--sapButton_Information_Hover_TextColor)}:host([interactive][design="Information"]) .ui5-tag-root:active{background-color:var(--sapButton_Information_Active_Background);border-color:var(--sapButton_Information_Active_BorderColor);color:var(--sapButton_Selected_TextColor)}:host([design="Set1"]) .ui5-tag-root{text-shadow:var(--ui5-v2-8-0-tag-contrast-text-shadow)}:host([design="Set1"]) .ui5-tag-root,:host([interactive][design="Set1"]) .ui5-tag-root{background-color:var(--sapIndicationColor_1_Background);border-color:var(--sapIndicationColor_1_BorderColor);color:var(--sapIndicationColor_1_TextColor)}:host([interactive][design="Set1"]) .ui5-tag-root:hover{background-color:var(--sapIndicationColor_1_Hover_Background)}:host([interactive][design="Set1"]) .ui5-tag-root:active{background-color:var(--sapIndicationColor_1_Active_Background);border-color:var(--sapIndicationColor_1_Active_BorderColor);color:var(--sapIndicationColor_1_Active_TextColor)}:host([design="Set1"][color-scheme="2"]) .ui5-tag-root{background-color:var(--sapIndicationColor_2_Background);border-color:var(--sapIndicationColor_2_BorderColor);color:var(--sapIndicationColor_2_TextColor)}:host([interactive][design="Set1"][color-scheme="2"]) .ui5-tag-root:hover{background-color:var(--sapIndicationColor_2_Hover_Background)}:host([interactive][design="Set1"][color-scheme="2"]) .ui5-tag-root:active{background-color:var(--sapIndicationColor_2_Active_Background);border-color:var(--sapIndicationColor_2_Active_BorderColor);color:var(--sapIndicationColor_2_Active_TextColor)}:host([design="Set1"][color-scheme="3"]) .ui5-tag-root{background-color:var(--sapIndicationColor_3_Background);border-color:var(--sapIndicationColor_3_BorderColor);color:var(--sapIndicationColor_3_TextColor)}:host([interactive][design="Set1"][color-scheme="3"]) .ui5-tag-root:hover{background-color:var(--sapIndicationColor_3_Hover_Background)}:host([interactive][design="Set1"][color-scheme="3"]) .ui5-tag-root:active{background-color:var(--sapIndicationColor_3_Active_Background);border-color:var(--sapIndicationColor_3_Active_BorderColor);color:var(--sapIndicationColor_3_Active_TextColor)}:host([design="Set1"][color-scheme="4"]) .ui5-tag-root{background-color:var(--sapIndicationColor_4_Background);border-color:var(--sapIndicationColor_4_BorderColor);color:var(--sapIndicationColor_4_TextColor)}:host([interactive][design="Set1"][color-scheme="4"]) .ui5-tag-root:hover{background-color:var(--sapIndicationColor_4_Hover_Background)}:host([interactive][design="Set1"][color-scheme="4"]) .ui5-tag-root:active{background-color:var(--sapIndicationColor_4_Active_Background);border-color:var(--sapIndicationColor_4_Active_BorderColor);color:var(--sapIndicationColor_4_Active_TextColor)}:host([design="Set1"][color-scheme="5"]) .ui5-tag-root{background-color:var(--sapIndicationColor_5_Background);border-color:var(--sapIndicationColor_5_BorderColor);color:var(--sapIndicationColor_5_TextColor)}:host([interactive][design="Set1"][color-scheme="5"]) .ui5-tag-root:hover{background-color:var(--sapIndicationColor_5_Hover_Background)}:host([interactive][design="Set1"][color-scheme="5"]) .ui5-tag-root:active{background-color:var(--sapIndicationColor_5_Active_Background);border-color:var(--sapIndicationColor_5_Active_BorderColor);color:var(--sapIndicationColor_5_Active_TextColor)}:host([design="Set1"][color-scheme="6"]) .ui5-tag-root{background-color:var(--sapIndicationColor_6_Background);border-color:var(--sapIndicationColor_6_BorderColor);color:var(--sapIndicationColor_6_TextColor)}:host([interactive][design="Set1"][color-scheme="6"]) .ui5-tag-root:hover{background-color:var(--sapIndicationColor_6_Hover_Background)}:host([interactive][design="Set1"][color-scheme="6"]) .ui5-tag-root:active{background-color:var(--sapIndicationColor_6_Active_Background);border-color:var(--sapIndicationColor_6_Active_BorderColor);color:var(--sapIndicationColor_6_Active_TextColor)}:host([design="Set1"][color-scheme="7"]) .ui5-tag-root{background-color:var(--sapIndicationColor_7_Background);border-color:var(--sapIndicationColor_7_BorderColor);color:var(--sapIndicationColor_7_TextColor)}:host([interactive][design="Set1"][color-scheme="7"]) .ui5-tag-root:hover{background-color:var(--sapIndicationColor_7_Hover_Background)}:host([interactive][design="Set1"][color-scheme="7"]) .ui5-tag-root:active{background-color:var(--sapIndicationColor_7_Active_Background);border-color:var(--sapIndicationColor_7_Active_BorderColor);color:var(--sapIndicationColor_7_Active_TextColor)}:host([design="Set1"][color-scheme="8"]) .ui5-tag-root{background-color:var(--sapIndicationColor_8_Background);border-color:var(--sapIndicationColor_8_BorderColor);color:var(--sapIndicationColor_8_TextColor)}:host([interactive][design="Set1"][color-scheme="8"]) .ui5-tag-root:hover{background-color:var(--sapIndicationColor_8_Hover_Background)}:host([interactive][design="Set1"][color-scheme="8"]) .ui5-tag-root:active{background-color:var(--sapIndicationColor_8_Active_Background);border-color:var(--sapIndicationColor_8_Active_BorderColor);color:var(--sapIndicationColor_8_Active_TextColor)}:host([design="Set1"][color-scheme="9"]) .ui5-tag-root{background-color:var(--sapIndicationColor_9_Background);border-color:var(--sapIndicationColor_9_BorderColor);color:var(--sapIndicationColor_9_TextColor)}:host([interactive][design="Set1"][color-scheme="9"]) .ui5-tag-root:hover{background-color:var(--sapIndicationColor_9_Hover_Background)}:host([interactive][design="Set1"][color-scheme="9"]) .ui5-tag-root:active{background-color:var(--sapIndicationColor_9_Active_Background);border-color:var(--sapIndicationColor_9_Active_BorderColor);color:var(--sapIndicationColor_9_Active_TextColor)}:host([design="Set1"][color-scheme="10"]) .ui5-tag-root{background-color:var(--sapIndicationColor_10_Background);border-color:var(--sapIndicationColor_10_BorderColor);color:var(--sapIndicationColor_10_TextColor)}:host([interactive][design="Set1"][color-scheme="10"]) .ui5-tag-root:hover{background-color:var(--sapIndicationColor_10_Hover_Background)}:host([interactive][design="Set1"][color-scheme="10"]) .ui5-tag-root:active{background-color:var(--sapIndicationColor_10_Active_Background);border-color:var(--sapIndicationColor_10_Active_BorderColor);color:var(--sapIndicationColor_10_Active_TextColor)}:host([design="Set2"]) .ui5-tag-root{text-shadow:var(--ui5-v2-8-0-tag-text-shadow)}:host([design="Set2"]) .ui5-tag-root,:host([interactive][design="Set2"]) .ui5-tag-root{background-color:var(--ui5-v2-8-0-tag-set2-color-scheme-1-background);border-color:var(--ui5-v2-8-0-tag-set2-color-scheme-1-border);color:var(--ui5-v2-8-0-tag-set2-color-scheme-1-color)}:host([interactive][design="Set2"]) .ui5-tag-root:hover{background-color:var(--ui5-v2-8-0-tag-set2-color-scheme-1-hover-background)}:host([interactive][design="Set2"]) .ui5-tag-root:active{background-color:var(--ui5-v2-8-0-tag-set2-color-scheme-1-active-background);border-color:var(--ui5-v2-8-0-tag-set2-color-scheme-1-active-border);color:var(--ui5-v2-8-0-tag-set2-color-scheme-1-active-color)}:host([design="Set2"][color-scheme="2"]) .ui5-tag-root{background-color:var(--ui5-v2-8-0-tag-set2-color-scheme-2-background);border-color:var(--ui5-v2-8-0-tag-set2-color-scheme-2-border);color:var(--ui5-v2-8-0-tag-set2-color-scheme-2-color)}:host([design="Set2"][color-scheme="3"]) .ui5-tag-root{background-color:var(--ui5-v2-8-0-tag-set2-color-scheme-3-background);border-color:var(--ui5-v2-8-0-tag-set2-color-scheme-3-border);color:var(--ui5-v2-8-0-tag-set2-color-scheme-3-color)}:host([interactive][design="Set2"][color-scheme="3"]) .ui5-tag-root:hover{background-color:var(--ui5-v2-8-0-tag-set2-color-scheme-3-hover-background)}:host([interactive][design="Set2"][color-scheme="3"]) .ui5-tag-root:active{background-color:var(--ui5-v2-8-0-tag-set2-color-scheme-3-active-background);border-color:var(--ui5-v2-8-0-tag-set2-color-scheme-3-active-border);color:var(--ui5-v2-8-0-tag-set2-color-scheme-3-active-color)}:host([design="Set2"][color-scheme="4"]) .ui5-tag-root{background-color:var(--ui5-v2-8-0-tag-set2-color-scheme-4-background);border-color:var(--ui5-v2-8-0-tag-set2-color-scheme-4-border);color:var(--ui5-v2-8-0-tag-set2-color-scheme-4-color)}:host([interactive][design="Set2"][color-scheme="4"]) .ui5-tag-root:hover{background-color:var(--ui5-v2-8-0-tag-set2-color-scheme-4-hover-background)}:host([interactive][design="Set2"][color-scheme="4"]) .ui5-tag-root:active{background-color:var(--ui5-v2-8-0-tag-set2-color-scheme-4-active-background);border-color:var(--ui5-v2-8-0-tag-set2-color-scheme-4-active-border);color:var(--ui5-v2-8-0-tag-set2-color-scheme-4-active-color)}:host([design="Set2"][color-scheme="5"]) .ui5-tag-root{background-color:var(--ui5-v2-8-0-tag-set2-color-scheme-5-background);border-color:var(--ui5-v2-8-0-tag-set2-color-scheme-5-border);color:var(--ui5-v2-8-0-tag-set2-color-scheme-5-color)}:host([interactive][design="Set2"][color-scheme="5"]) .ui5-tag-root:hover{background-color:var(--ui5-v2-8-0-tag-set2-color-scheme-5-hover-background)}:host([interactive][design="Set2"][color-scheme="5"]) .ui5-tag-root:active{background-color:var(--ui5-v2-8-0-tag-set2-color-scheme-5-active-background);border-color:var(--ui5-v2-8-0-tag-set2-color-scheme-5-active-border);color:var(--ui5-v2-8-0-tag-set2-color-scheme-5-active-color)}:host([design="Set2"][color-scheme="6"]) .ui5-tag-root{background-color:var(--ui5-v2-8-0-tag-set2-color-scheme-6-background);border-color:var(--ui5-v2-8-0-tag-set2-color-scheme-6-border);color:var(--ui5-v2-8-0-tag-set2-color-scheme-6-color)}:host([interactive][design="Set2"][color-scheme="6"]) .ui5-tag-root:hover{background-color:var(--ui5-v2-8-0-tag-set2-color-scheme-6-hover-background)}:host([interactive][design="Set2"][color-scheme="6"]) .ui5-tag-root:active{background-color:var(--ui5-v2-8-0-tag-set2-color-scheme-6-active-background);border-color:var(--ui5-v2-8-0-tag-set2-color-scheme-6-active-border);color:var(--ui5-v2-8-0-tag-set2-color-scheme-6-active-color)}:host([design="Set2"][color-scheme="7"]) .ui5-tag-root{background-color:var(--ui5-v2-8-0-tag-set2-color-scheme-7-background);border-color:var(--ui5-v2-8-0-tag-set2-color-scheme-7-border);color:var(--ui5-v2-8-0-tag-set2-color-scheme-7-color)}:host([interactive][design="Set2"][color-scheme="7"]) .ui5-tag-root:hover{background-color:var(--ui5-v2-8-0-tag-set2-color-scheme-7-hover-background)}:host([interactive][design="Set2"][color-scheme="7"]) .ui5-tag-root:active{background-color:var(--ui5-v2-8-0-tag-set2-color-scheme-7-active-background);border-color:var(--ui5-v2-8-0-tag-set2-color-scheme-7-active-border);color:var(--ui5-v2-8-0-tag-set2-color-scheme-7-active-color)}:host([design="Set2"][color-scheme="8"]) .ui5-tag-root{background-color:var(--ui5-v2-8-0-tag-set2-color-scheme-8-background);border-color:var(--ui5-v2-8-0-tag-set2-color-scheme-8-border);color:var(--ui5-v2-8-0-tag-set2-color-scheme-8-color)}:host([interactive][design="Set2"][color-scheme="8"]) .ui5-tag-root:hover{background-color:var(--ui5-v2-8-0-tag-set2-color-scheme-8-hover-background)}:host([interactive][design="Set2"][color-scheme="8"]) .ui5-tag-root:active{background-color:var(--ui5-v2-8-0-tag-set2-color-scheme-8-active-background);border-color:var(--ui5-v2-8-0-tag-set2-color-scheme-8-active-border);color:var(--ui5-v2-8-0-tag-set2-color-scheme-8-active-color)}:host([design="Set2"][color-scheme="9"]) .ui5-tag-root{background-color:var(--ui5-v2-8-0-tag-set2-color-scheme-9-background);border-color:var(--ui5-v2-8-0-tag-set2-color-scheme-9-border);color:var(--ui5-v2-8-0-tag-set2-color-scheme-9-color)}:host([interactive][design="Set2"][color-scheme="9"]) .ui5-tag-root:hover{background-color:var(--ui5-v2-8-0-tag-set2-color-scheme-9-hover-background)}:host([interactive][design="Set2"][color-scheme="9"]) .ui5-tag-root:active{background-color:var(--ui5-v2-8-0-tag-set2-color-scheme-9-active-background);border-color:var(--ui5-v2-8-0-tag-set2-color-scheme-9-active-border);color:var(--ui5-v2-8-0-tag-set2-color-scheme-9-active-color)}:host([interactive][design="Set2"][color-scheme="10"]) .ui5-tag-root:hover{background-color:var(--ui5-v2-8-0-tag-set2-color-scheme-10-hover-background)}:host([interactive][design="Set2"][color-scheme="10"]) .ui5-tag-root:active{background-color:var(--ui5-v2-8-0-tag-set2-color-scheme-10-active-background);border-color:var(--ui5-v2-8-0-tag-set2-color-scheme-10-active-border);color:var(--ui5-v2-8-0-tag-set2-color-scheme-10-active-color)}:host([design="Set2"][color-scheme="10"]) .ui5-tag-root{background-color:var(--ui5-v2-8-0-tag-set2-color-scheme-10-background);border-color:var(--ui5-v2-8-0-tag-set2-color-scheme-10-border);color:var(--ui5-v2-8-0-tag-set2-color-scheme-10-color)}:host([interactive][design="Set2"][color-scheme="2"]) .ui5-tag-root:hover{background-color:var(--ui5-v2-8-0-tag-set2-color-scheme-2-hover-background)}:host([interactive][design="Set2"][color-scheme="2"]) .ui5-tag-root:active{background-color:var(--ui5-v2-8-0-tag-set2-color-scheme-2-active-background);border-color:var(--ui5-v2-8-0-tag-set2-color-scheme-2-active-border);color:var(--ui5-v2-8-0-tag-set2-color-scheme-2-active-color)}:host([size="L"]){font-family:var(--sapFontSemiboldDuplexFamily);line-height:var(--_ui5-v2-8-0-tag-height_size_l)}:host([size="L"]) .ui5-tag-root{font-size:var(--_ui5-v2-8-0-tag-font-size_size_l);min-width:var(--_ui5-v2-8-0-tag-min-width_size_l);padding:var(--_ui5-v2-8-0-tag-text_padding_size_l)}:host([size="L"]) [ui5-icon],:host([size="L"]) ::slotted([ui5-icon]){min-width:var(--_ui5-v2-8-0-tag-icon_min_width_size_l);min-height:var(--_ui5-v2-8-0-tag-icon_min_height_size_l);height:var(--_ui5-v2-8-0-tag-icon_height_size_l)}
`;

// node_modules/@ui5/webcomponents/dist/Tag.js
var __decorate9 = function(decorators, target, key, desc) {
  var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
  if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
  else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
  return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var Tag_1;
var Tag = Tag_1 = class Tag2 extends UI5Element_default {
  constructor() {
    super(...arguments);
    this.design = "Neutral";
    this.colorScheme = "1";
    this.hideStateIcon = false;
    this.interactive = false;
    this.wrappingType = "Normal";
    this.size = "S";
    this._hasIcon = false;
    this._iconOnly = false;
  }
  onEnterDOM() {
    if (isDesktop()) {
      this.setAttribute("desktop", "");
    }
  }
  onBeforeRendering() {
    this._hasIcon = this.hasIcon || !!this._semanticIconName;
    this._iconOnly = this.iconOnly;
  }
  get _roleDescription() {
    return Tag_1.i18nBundle.getText(TAG_ROLE_DESCRIPTION);
  }
  get _valueState() {
    switch (this.design) {
      case TagDesign_default.Positive:
        return Tag_1.i18nBundle.getText(TAG_SUCCESS);
      case TagDesign_default.Negative:
        return Tag_1.i18nBundle.getText(TAG_ERROR);
      case TagDesign_default.Critical:
        return Tag_1.i18nBundle.getText(TAG_WARNING);
      case TagDesign_default.Information:
        return Tag_1.i18nBundle.getText(TAG_INFORMATION);
    }
    return void 0;
  }
  get hasText() {
    return willShowContent_default(this.text);
  }
  get hasIcon() {
    return !!this.icon.length;
  }
  get iconOnly() {
    return this.hasIcon && !this.hasText;
  }
  get _title() {
    return this.title || void 0;
  }
  get tagDescription() {
    if (this.interactive) {
      return void 0;
    }
    const valueState = this._valueState;
    let description = Tag_1.i18nBundle.getText(TAG_DESCRIPTION_TAG);
    if (valueState) {
      description = `${description} ${valueState}`;
    }
    return description;
  }
  get _semanticIconName() {
    if (this.hideStateIcon || this.hasIcon) {
      return null;
    }
    switch (this.design) {
      case TagDesign_default.Neutral:
        return "sys-help-2";
      case TagDesign_default.Positive:
        return "sys-enter-2";
      case TagDesign_default.Negative:
        return "error";
      case TagDesign_default.Critical:
        return "alert";
      case TagDesign_default.Information:
        return "information";
      default:
        return null;
    }
  }
  _onclick() {
    this.fireDecoratorEvent("click");
  }
};
__decorate9([
  property_default()
], Tag.prototype, "design", void 0);
__decorate9([
  property_default()
], Tag.prototype, "colorScheme", void 0);
__decorate9([
  property_default({ type: Boolean })
], Tag.prototype, "hideStateIcon", void 0);
__decorate9([
  property_default({ type: Boolean })
], Tag.prototype, "interactive", void 0);
__decorate9([
  property_default()
], Tag.prototype, "wrappingType", void 0);
__decorate9([
  property_default()
], Tag.prototype, "size", void 0);
__decorate9([
  property_default({ type: Boolean })
], Tag.prototype, "_hasIcon", void 0);
__decorate9([
  property_default({ type: Boolean })
], Tag.prototype, "_iconOnly", void 0);
__decorate9([
  slot_default({ type: Node, "default": true })
], Tag.prototype, "text", void 0);
__decorate9([
  slot_default()
], Tag.prototype, "icon", void 0);
__decorate9([
  i18n_default("@ui5/webcomponents")
], Tag, "i18nBundle", void 0);
Tag = Tag_1 = __decorate9([
  customElement_default({
    tag: "ui5-tag",
    languageAware: true,
    renderer: JsxRenderer_default,
    template: TagTemplate,
    styles: Tag_css_default
  }),
  event_strict_default("click", {
    bubbles: true
  })
], Tag);
Tag.define();
var Tag_default = Tag;

// node_modules/@ui5/webcomponents/dist/ButtonBadgeTemplate.js
function ButtonTemplate2() {
  return jsx(Tag_default, { design: "Critical", "hide-state-icon": true, children: this.effectiveText });
}

// node_modules/@ui5/webcomponents/dist/generated/themes/ButtonBadge.css.js
registerThemePropertiesLoader("@ui5/webcomponents-theming", "sap_horizon", async () => parameters_bundle_css_default);
registerThemePropertiesLoader("@ui5/webcomponents", "sap_horizon", async () => parameters_bundle_css_default2);
var ButtonBadge_css_default = `[ui5-tag]::part(root){border:.0625rem solid var(--sapContent_BadgeBorderColor);background-color:var(--sapContent_BadgeBackground);color:var(--sapContent_BadgeTextColor);height:1rem;border-radius:.5rem}:host([design="AttentionDot"]) [ui5-tag]::part(root){min-width:var(--_ui5-v2-8-0-button-badge-diameter);min-height:var(--_ui5-v2-8-0-button-badge-diameter);height:var(--_ui5-v2-8-0-button-badge-diameter);width:var(--_ui5-v2-8-0-button-badge-diameter);border-radius:100%}
`;

// node_modules/@ui5/webcomponents/dist/ButtonBadge.js
var __decorate10 = function(decorators, target, key, desc) {
  var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
  if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
  else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
  return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var ButtonBadge = class ButtonBadge2 extends UI5Element_default {
  constructor() {
    super(...arguments);
    this.design = "AttentionDot";
    this.text = "";
  }
  get effectiveText() {
    return this.design === ButtonBadgeDesign_default.AttentionDot ? "" : this.text;
  }
};
__decorate10([
  property_default()
], ButtonBadge.prototype, "design", void 0);
__decorate10([
  property_default()
], ButtonBadge.prototype, "text", void 0);
ButtonBadge = __decorate10([
  customElement_default({
    tag: "ui5-button-badge",
    renderer: JsxRenderer_default,
    template: ButtonTemplate2,
    styles: ButtonBadge_css_default
  })
], ButtonBadge);
ButtonBadge.define();

// node_modules/@ui5/webcomponents-react/dist/webComponents/ButtonBadge/index.js
var ButtonBadge3 = withWebComponent("ui5-button-badge", ["design", "text"], [], [], []);
ButtonBadge3.displayName = "ButtonBadge";

// node_modules/@ui5/webcomponents-base/dist/types/CalendarType.js
var CalendarType;
(function(CalendarType3) {
  CalendarType3["Gregorian"] = "Gregorian";
  CalendarType3["Islamic"] = "Islamic";
  CalendarType3["Japanese"] = "Japanese";
  CalendarType3["Buddhist"] = "Buddhist";
  CalendarType3["Persian"] = "Persian";
})(CalendarType || (CalendarType = {}));
var CalendarType_default = CalendarType;

// node_modules/@ui5/webcomponents-base/dist/config/CalendarType.js
var calendarType;
var secondaryCalendarType;
attachConfigurationReset(() => {
  calendarType = void 0;
  secondaryCalendarType = void 0;
});
var getCalendarType2 = () => {
  if (calendarType === void 0) {
    calendarType = getCalendarType();
  }
  if (calendarType && calendarType in CalendarType_default) {
    return calendarType;
  }
  return CalendarType_default.Gregorian;
};
var getSecondaryCalendarType2 = () => {
  if (secondaryCalendarType === void 0) {
    secondaryCalendarType = getSecondaryCalendarType();
  }
  if (secondaryCalendarType && secondaryCalendarType in CalendarType_default) {
    return secondaryCalendarType;
  }
  return secondaryCalendarType;
};

// node_modules/@ui5/webcomponents-base/dist/config/Timezone.js
var currTimezone;
attachConfigurationReset(() => {
  currTimezone = void 0;
});
var getTimezone2 = () => {
  if (currTimezone === void 0) {
    currTimezone = getTimezone();
  }
  return currTimezone;
};

// node_modules/@ui5/webcomponents-base/dist/util/getDesigntimePropertyAsArray.js
var designTimePropertyAsArray = (value) => {
  const m = /\$([-a-z0-9A-Z._]+)(?::([^$]*))?\$/.exec(value);
  return m && m[2] ? m[2].split(/,/) : null;
};
var getDesigntimePropertyAsArray_default = designTimePropertyAsArray;

// node_modules/@ui5/webcomponents-localization/dist/sap/base/i18n/date/TimezoneUtils.js
var TimezoneUtils = {};
var sLocalTimezone = "";
var aSupportedTimezoneIDs;
var oIntlDateTimeFormatCache = {
  _oCache: /* @__PURE__ */ new Map(),
  /**
   * When cache limit is reached, it gets cleared
   */
  _iCacheLimit: 10,
  /**
   * Creates or gets an instance of Intl.DateTimeFormat.
   *
   * @param {string} sTimezone IANA timezone ID
   * @returns {Intl.DateTimeFormat} Intl.DateTimeFormat instance
   */
  get: function(sTimezone) {
    var cacheEntry = this._oCache.get(sTimezone);
    if (cacheEntry) {
      return cacheEntry;
    }
    var oOptions = {
      hourCycle: "h23",
      hour: "2-digit",
      minute: "2-digit",
      second: "2-digit",
      fractionalSecondDigits: 3,
      day: "2-digit",
      month: "2-digit",
      year: "numeric",
      timeZone: sTimezone,
      timeZoneName: "short",
      era: "narrow",
      weekday: "short"
    };
    var oInstance = new Intl.DateTimeFormat("en-US", oOptions);
    if (this._oCache.size === this._iCacheLimit) {
      this._oCache = /* @__PURE__ */ new Map();
    }
    this._oCache.set(sTimezone, oInstance);
    return oInstance;
  }
};
TimezoneUtils.isValidTimezone = function(sTimezone) {
  if (!sTimezone) {
    return false;
  }
  if (Intl.supportedValuesOf) {
    try {
      aSupportedTimezoneIDs = aSupportedTimezoneIDs || Intl.supportedValuesOf("timeZone");
      if (aSupportedTimezoneIDs.includes(sTimezone)) {
        return true;
      }
    } catch (oError) {
      aSupportedTimezoneIDs = [];
    }
  }
  try {
    oIntlDateTimeFormatCache.get(sTimezone);
    return true;
  } catch (oError) {
    return false;
  }
};
TimezoneUtils.convertToTimezone = function(oDate, sTargetTimezone) {
  var oFormatParts = this._getParts(oDate, sTargetTimezone);
  return TimezoneUtils._getDateFromParts(oFormatParts);
};
TimezoneUtils._getParts = function(oDate, sTargetTimezone) {
  var sKey, oPart, oDateParts = /* @__PURE__ */ Object.create(null), oIntlDate = oIntlDateTimeFormatCache.get(sTargetTimezone), oParts = oIntlDate.formatToParts(new Date(oDate.getTime()));
  for (sKey in oParts) {
    oPart = oParts[sKey];
    if (oPart.type !== "literal") {
      oDateParts[oPart.type] = oPart.value;
    }
  }
  return oDateParts;
};
TimezoneUtils._getDateFromParts = function(oParts) {
  var oDate = /* @__PURE__ */ new Date(0), iUTCYear = parseInt(oParts.year);
  if (oParts.era === "B") {
    iUTCYear = iUTCYear * -1 + 1;
  }
  oDate.setUTCFullYear(iUTCYear, parseInt(oParts.month) - 1, parseInt(oParts.day));
  oDate.setUTCHours(parseInt(oParts.hour), parseInt(oParts.minute), parseInt(oParts.second), parseInt(oParts.fractionalSecond || 0));
  return oDate;
};
TimezoneUtils.calculateOffset = function(oDate, sTimezoneSource) {
  const oDateInTimezone = TimezoneUtils.convertToTimezone(oDate, sTimezoneSource);
  const iGivenTimestamp = oDate.getTime();
  const iInitialOffset = iGivenTimestamp - oDateInTimezone.getTime();
  const oFirstGuess = new Date(iGivenTimestamp + iInitialOffset);
  const oFirstGuessInTimezone = TimezoneUtils.convertToTimezone(oFirstGuess, sTimezoneSource);
  const iFirstGuessInTimezoneTimestamp = oFirstGuessInTimezone.getTime();
  const iSecondOffset = oFirstGuess.getTime() - iFirstGuessInTimezoneTimestamp;
  let iTimezoneOffset = iSecondOffset;
  if (iInitialOffset !== iSecondOffset) {
    const oSecondGuess = new Date(iGivenTimestamp + iSecondOffset);
    const oSecondGuessInTimezone = TimezoneUtils.convertToTimezone(oSecondGuess, sTimezoneSource);
    const iSecondGuessInTimezoneTimestamp = oSecondGuessInTimezone.getTime();
    if (iSecondGuessInTimezoneTimestamp !== iGivenTimestamp && iFirstGuessInTimezoneTimestamp > iSecondGuessInTimezoneTimestamp) {
      iTimezoneOffset = iInitialOffset;
    }
  }
  return iTimezoneOffset / 1e3;
};
TimezoneUtils.mCLDR2ABAPTimezones = {
  "America/Buenos_Aires": "America/Argentina/Buenos_Aires",
  "America/Catamarca": "America/Argentina/Catamarca",
  "America/Cordoba": "America/Argentina/Cordoba",
  "America/Jujuy": "America/Argentina/Jujuy",
  "America/Mendoza": "America/Argentina/Mendoza",
  "America/Indianapolis": "America/Indiana/Indianapolis",
  "America/Louisville": "America/Kentucky/Louisville",
  "Africa/Asmera": "Africa/Asmara",
  "Asia/Katmandu": "Asia/Kathmandu",
  "Asia/Calcutta": "Asia/Kolkata",
  "Atlantic/Faeroe": "Atlantic/Faroe",
  "Pacific/Ponape": "Pacific/Pohnpei",
  "Asia/Rangoon": "Asia/Yangon",
  "Pacific/Truk": "Pacific/Chuuk",
  "America/Godthab": "America/Nuuk",
  "Asia/Saigon": "Asia/Ho_Chi_Minh",
  "America/Coral_Harbour": "America/Atikokan"
};
TimezoneUtils.getLocalTimezone = function() {
  if (sLocalTimezone === "") {
    sLocalTimezone = new Intl.DateTimeFormat().resolvedOptions().timeZone;
    sLocalTimezone = TimezoneUtils.mCLDR2ABAPTimezones[sLocalTimezone] || sLocalTimezone;
  }
  return sLocalTimezone;
};
TimezoneUtils._clearLocalTimezoneCache = function() {
  sLocalTimezone = "";
};
var TimezoneUtils_default = TimezoneUtils;

// node_modules/@ui5/webcomponents-localization/dist/sap/ui/core/format/TimezoneUtil.js
var TimezoneUtil_default = TimezoneUtils_default;

// node_modules/@ui5/webcomponents-localization/dist/sap/ui/core/FormatSettings.js
var emptyFn = () => {
};
var FormatSettings = {
  getFormatLocale: getLocale_default,
  getLegacyDateFormat: emptyFn,
  getCustomLocaleData: emptyFn
};
var FormatSettings_default = FormatSettings;

// node_modules/@ui5/webcomponents-localization/dist/sap/ui/core/Configuration.js
var emptyFn2 = () => {
};
var Configuration = {
  getLanguage,
  getCalendarType: getCalendarType2,
  getSupportedLanguages: () => getDesigntimePropertyAsArray_default("$core-i18n-locales:,ar,bg,ca,cs,da,de,el,en,es,et,fi,fr,hi,hr,hu,it,iw,ja,ko,lt,lv,nl,no,pl,pt,ro,ru,sh,sk,sl,sv,th,tr,uk,vi,zh_CN,zh_TW$"),
  getOriginInfo: emptyFn2,
  getFormatSettings: () => FormatSettings_default,
  getTimezone: () => getTimezone2() || TimezoneUtil_default.getLocalTimezone(),
  // Calculate calendar week numbering by active format locale
  getCalendarWeekNumbering: () => "Default"
};
var Configuration_default = Configuration;

// node_modules/@ui5/webcomponents-localization/dist/sap/ui/core/date/UI5Date.js
var aAllParts = ["year", "month", "day", "hour", "minute", "second", "fractionalSecond"];
var rIsUTCString = /Z|GMT|:.*[\+|\-]|^([\+|\-]\d{2})?\d{4}(-\d{2}){0,2}$/;
var aWeekday = ["Sun", "Mon", "Tue", "Wed", "Thu", "Fri", "Sat"];
var aMonths = ["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"];
var mWeekdayToDay = {
  Sun: 0,
  Mon: 1,
  Tue: 2,
  Wed: 3,
  Thu: 4,
  Fri: 5,
  Sat: 6
};
function addLeadingZeros(iValue, iLength) {
  return (iValue < 0 ? "-" : "") + Math.abs(iValue).toString().padStart(iLength, "0");
}
function UI5Date(vDateParts, sTimezoneID) {
  var oDateInstance = UI5Date._createDateInstance(vDateParts);
  Object.defineProperties(this, {
    sTimezoneID: {
      value: sTimezoneID
    },
    oDate: {
      value: oDateInstance,
      writable: true
    },
    oDateParts: {
      value: void 0,
      writable: true
    }
  });
  if (isNaN(oDateInstance)) {
    return;
  }
  if (vDateParts.length > 1 || vDateParts.length === 1 && typeof vDateParts[0] === "string" && !rIsUTCString.test(vDateParts[0])) {
    this._setParts(
      aAllParts,
      // JavaScript Date parsed the arguments already in local browser time zone
      [oDateInstance.getFullYear(), oDateInstance.getMonth(), oDateInstance.getDate(), oDateInstance.getHours(), oDateInstance.getMinutes(), oDateInstance.getSeconds(), oDateInstance.getMilliseconds()]
    );
  }
}
UI5Date.prototype = Object.create(Date.prototype, {
  constructor: {
    value: Date
  }
});
UI5Date.prototype[Symbol.toStringTag] = "Date";
UI5Date.prototype._getPart = function(sPart) {
  var iResult;
  if (isNaN(this.oDate)) {
    return NaN;
  }
  this.oDateParts = this.oDateParts || TimezoneUtil_default._getParts(this.oDate, this.sTimezoneID);
  if (sPart === "weekday") {
    return mWeekdayToDay[this.oDateParts.weekday];
  }
  iResult = parseInt(this.oDateParts[sPart]);
  if (sPart === "month") {
    iResult -= 1;
  } else if (sPart === "year") {
    if (this.oDateParts.era === "B") {
      iResult = 1 - iResult;
    }
  }
  return iResult;
};
UI5Date.prototype._setParts = function(aParts, aValues) {
  var i, oCurrentDateParts, oNewDateAsUTCTimestamp, iNewTimestamp, sPart, vValue, oDateParts = {}, iMaxLength = Math.min(aParts.length, aValues.length);
  if (iMaxLength === 0) {
    return this.setTime(NaN);
  }
  for (i = 0; i < iMaxLength; i += 1) {
    vValue = parseInt(+aValues[i]);
    sPart = aParts[i];
    if (isNaN(vValue)) {
      return this.setTime(NaN);
    }
    if (sPart === "month") {
      vValue += 1;
    } else if (sPart === "year") {
      if (vValue <= 0) {
        vValue = 1 - vValue;
        oDateParts.era = "B";
      } else {
        oDateParts.era = "A";
      }
    }
    oDateParts[sPart] = vValue.toString();
  }
  if (this.oDateParts) {
    oCurrentDateParts = this.oDateParts;
  } else if (isNaN(this.oDate)) {
    oCurrentDateParts = {
      day: "1",
      fractionalSecond: "0",
      hour: "0",
      minute: "0",
      month: "1",
      second: "0"
    };
  } else {
    oCurrentDateParts = TimezoneUtil_default._getParts(this.oDate, this.sTimezoneID);
  }
  oDateParts = Object.assign({}, oCurrentDateParts, oDateParts);
  oNewDateAsUTCTimestamp = TimezoneUtil_default._getDateFromParts(oDateParts);
  if (isNaN(oNewDateAsUTCTimestamp)) {
    return this.setTime(NaN);
  }
  iNewTimestamp = oNewDateAsUTCTimestamp.getTime() + TimezoneUtil_default.calculateOffset(oNewDateAsUTCTimestamp, this.sTimezoneID) * 1e3;
  return this.setTime(iNewTimestamp);
};
UI5Date.prototype.clone = function() {
  return UI5Date.getInstance(this);
};
UI5Date.prototype.getDate = function() {
  return this._getPart("day");
};
UI5Date.prototype.getDay = function() {
  return this._getPart("weekday");
};
UI5Date.prototype.getFullYear = function() {
  return this._getPart("year");
};
UI5Date.prototype.getHours = function() {
  return this._getPart("hour");
};
UI5Date.prototype.getMilliseconds = function() {
  return this._getPart("fractionalSecond");
};
UI5Date.prototype.getMinutes = function() {
  return this._getPart("minute");
};
UI5Date.prototype.getMonth = function() {
  return this._getPart("month");
};
UI5Date.prototype.getSeconds = function() {
  return this._getPart("second");
};
UI5Date.prototype.getTimezoneOffset = function() {
  return TimezoneUtil_default.calculateOffset(this.oDate, this.sTimezoneID) / 60;
};
UI5Date.prototype.getYear = function() {
  return this._getPart("year") - 1900;
};
UI5Date.prototype.setDate = function(iDay) {
  return this._setParts(["day"], arguments);
};
UI5Date.prototype.setFullYear = function(iYear, iMonth, iDay) {
  return this._setParts(["year", "month", "day"], arguments);
};
UI5Date.prototype.setHours = function(iHours, iMinutes, iSeconds, iMilliseconds) {
  return this._setParts(["hour", "minute", "second", "fractionalSecond"], arguments);
};
UI5Date.prototype.setMilliseconds = function(iMilliseconds) {
  return this._setParts(["fractionalSecond"], arguments);
};
UI5Date.prototype.setMinutes = function(iMinutes, iSeconds, iMilliseconds) {
  return this._setParts(["minute", "second", "fractionalSecond"], arguments);
};
UI5Date.prototype.setMonth = function(iMonth, iDay) {
  return this._setParts(["month", "day"], arguments);
};
UI5Date.prototype.setSeconds = function(iSeconds, iMilliseconds) {
  return this._setParts(["second", "fractionalSecond"], arguments);
};
UI5Date.prototype.setTime = function(iTime) {
  this.oDateParts = void 0;
  return this.oDate.setTime(iTime);
};
UI5Date.prototype.setYear = function(iYear) {
  var iValue = parseInt(iYear);
  iValue = iValue < 0 || iValue > 99 ? iValue : iValue + 1900;
  return this._setParts(["year"], [iValue]);
};
UI5Date.prototype.toDateString = function() {
  if (isNaN(this.oDate)) {
    return this.oDate.toDateString();
  }
  return aWeekday[this.getDay()] + " " + aMonths[this.getMonth()] + " " + addLeadingZeros(this.getDate(), 2) + " " + addLeadingZeros(this.getFullYear(), 4);
};
UI5Date.prototype.toString = function() {
  if (isNaN(this.oDate)) {
    return this.oDate.toString();
  }
  return this.toDateString() + " " + this.toTimeString();
};
UI5Date.prototype.toTimeString = function() {
  var iHours, iMinutes, sSign, iTimeZoneOffset;
  if (isNaN(this.oDate)) {
    return this.oDate.toTimeString();
  }
  iTimeZoneOffset = this.getTimezoneOffset();
  sSign = iTimeZoneOffset > 0 ? "-" : "+";
  iHours = Math.floor(Math.abs(iTimeZoneOffset) / 60);
  iMinutes = Math.abs(iTimeZoneOffset) % 60;
  return addLeadingZeros(this.getHours(), 2) + ":" + addLeadingZeros(this.getMinutes(), 2) + ":" + addLeadingZeros(this.getSeconds(), 2) + " GMT" + sSign + addLeadingZeros(iHours, 2) + addLeadingZeros(iMinutes, 2);
};
["getTime", "getUTCDate", "getUTCDay", "getUTCFullYear", "getUTCHours", "getUTCMilliseconds", "getUTCMinutes", "getUTCMonth", "getUTCSeconds", "toGMTString", "toISOString", "toJSON", "toUTCString", "valueOf"].forEach(function(sMethod) {
  UI5Date.prototype[sMethod] = function() {
    return this.oDate[sMethod].apply(this.oDate, arguments);
  };
});
["toLocaleDateString", "toLocaleString", "toLocaleTimeString"].forEach(function(sMethod) {
  UI5Date.prototype[sMethod] = function(sLocale, oOptions) {
    return this.oDate[sMethod](sLocale || Configuration_default.getLanguageTag(), Object.assign({
      timeZone: this.sTimezoneID
    }, oOptions));
  };
});
["setUTCDate", "setUTCFullYear", "setUTCHours", "setUTCMilliseconds", "setUTCMinutes", "setUTCMonth", "setUTCSeconds"].forEach(function(sMethod) {
  UI5Date.prototype[sMethod] = function() {
    this.oDateParts = void 0;
    return this.oDate[sMethod].apply(this.oDate, arguments);
  };
});
UI5Date._createDateInstance = function(vParts) {
  if (vParts[0] instanceof Date) {
    vParts[0] = vParts[0].valueOf();
  }
  return new (Function.prototype.bind.apply(Date, [].concat.apply([null], vParts)))();
};
UI5Date.getInstance = function() {
  var sTimezone = Configuration_default.getTimezone();
  if (sTimezone !== TimezoneUtil_default.getLocalTimezone()) {
    return new UI5Date(arguments, sTimezone);
  }
  return UI5Date._createDateInstance(arguments);
};
UI5Date.checkDate = function(oDate) {
  if (isNaN(oDate.getTime())) {
    throw new Error("The given Date is not valid");
  }
  if (!(oDate instanceof UI5Date) && Configuration_default.getTimezone() !== TimezoneUtil_default.getLocalTimezone()) {
    throw new Error("Configured time zone requires the parameter 'oDate' to be an instance of sap.ui.core.date.UI5Date");
  }
};
var UI5Date_default = UI5Date;

// node_modules/@ui5/webcomponents-localization/dist/dates/UI5Date.js
var UI5DateWrapped = UI5Date_default;
var UI5Date2 = class extends UI5DateWrapped {
};
var UI5Date_default2 = UI5Date2;

// node_modules/@ui5/webcomponents-localization/dist/sap/ui/core/Core.js
var emptyFn3 = () => {
};
var Core = {
  getConfiguration: () => Configuration_default,
  getLibraryResourceBundle: emptyFn3(),
  getFormatSettings: () => FormatSettings_default
};
var Core_default = Core;

// node_modules/@ui5/webcomponents-localization/dist/sap/base/util/ObjectPath.js
var ObjectPath = {
  set() {
  }
};
var ObjectPath_default = ObjectPath;

// node_modules/@ui5/webcomponents-localization/dist/sap/base/assert.js
var fnAssert = function(bResult, vMessage) {
  if (!bResult) {
    var sMessage = typeof vMessage === "function" ? vMessage() : vMessage;
    console.assert(bResult, sMessage);
  }
};
var assert_default = fnAssert;

// node_modules/@ui5/webcomponents-localization/dist/sap/base/Log.js
var Log = console;
Log.warning = console.warn;
var Log_default = Log;

// node_modules/@ui5/webcomponents-localization/dist/sap/base/util/array/uniqueSort.js
var fnUniqueSort = function(aArray) {
  assert_default(Array.isArray(aArray), "uniqueSort: input parameter must be an Array");
  var iLength = aArray.length;
  if (iLength > 1) {
    aArray.sort();
    var j = 0;
    for (var i = 1; i < iLength; i++) {
      if (aArray.indexOf(aArray[i]) === i) {
        aArray[++j] = aArray[i];
      }
    }
    if (++j < iLength) {
      aArray.splice(j, iLength - j);
    }
  }
  return aArray;
};
var uniqueSort_default = fnUniqueSort;

// node_modules/@ui5/webcomponents-localization/dist/sap/ui/base/Metadata.js
function isFunction(obj) {
  return typeof obj === "function";
}
var Metadata = function(sClassName, oClassInfo) {
  assert_default(typeof sClassName === "string" && sClassName, "Metadata: sClassName must be a non-empty string");
  assert_default(typeof oClassInfo === "object", "Metadata: oClassInfo must be empty or an object");
  if (!oClassInfo || typeof oClassInfo.metadata !== "object") {
    oClassInfo = {
      metadata: oClassInfo || {},
      // retrieve class by its name. Using a lookup costs time but avoids the need for redundant arguments to this function
      constructor: ObjectPath_default.get(sClassName)
      // legacy-relevant, code path not used by extend call
    };
    oClassInfo.metadata.__version = 1;
  }
  oClassInfo.metadata.__version = oClassInfo.metadata.__version || 2;
  if (!isFunction(oClassInfo.constructor)) {
    throw Error("constructor for class " + sClassName + " must have been declared before creating metadata for it");
  }
  this._sClassName = sClassName;
  this._oClass = oClassInfo.constructor;
  this.extend(oClassInfo);
};
Metadata.prototype.extend = function(oClassInfo) {
  this.applySettings(oClassInfo);
  this.afterApplySettings();
};
Metadata.prototype.applySettings = function(oClassInfo) {
  var that = this, oStaticInfo = oClassInfo.metadata, oPrototype;
  if (oStaticInfo.baseType) {
    var oParentClass;
    if (isFunction(oStaticInfo.baseType)) {
      oParentClass = oStaticInfo.baseType;
      if (!isFunction(oParentClass.getMetadata)) {
        throw new TypeError("baseType must be a UI5 class with a static getMetadata function");
      }
    } else {
      oParentClass = ObjectPath_default.get(oStaticInfo.baseType);
      if (!isFunction(oParentClass)) {
        Log_default.fatal("base class '" + oStaticInfo.baseType + "' does not exist");
      }
    }
    if (oParentClass.getMetadata) {
      this._oParent = oParentClass.getMetadata();
      assert_default(oParentClass === oParentClass.getMetadata().getClass(), "Metadata: oParentClass must match the class in the parent metadata");
    } else {
      this._oParent = new Metadata(oStaticInfo.baseType, {});
    }
  } else {
    this._oParent = void 0;
  }
  this._bAbstract = !!oStaticInfo["abstract"];
  this._bFinal = !!oStaticInfo["final"];
  this._sStereotype = oStaticInfo.stereotype || (this._oParent ? this._oParent._sStereotype : "object");
  this._bDeprecated = !!oStaticInfo["deprecated"];
  this._aInterfaces = oStaticInfo.interfaces || [];
  this._aPublicMethods = oStaticInfo.publicMethods || [];
  this._bInterfacesUnique = false;
  oPrototype = this._oClass.prototype;
  for (var n in oClassInfo) {
    if (n !== "metadata" && n !== "constructor") {
      oPrototype[n] = oClassInfo[n];
      if (!n.match(/^_|^on|^init$|^exit$/)) {
        that._aPublicMethods.push(n);
      }
    }
  }
};
Metadata.prototype.afterApplySettings = function() {
  if (this._oParent) {
    this._aAllPublicMethods = this._oParent._aAllPublicMethods.concat(this._aPublicMethods);
    this._bInterfacesUnique = false;
  } else {
    this._aAllPublicMethods = this._aPublicMethods;
  }
};
Metadata.prototype.getStereotype = function() {
  return this._sStereotype;
};
Metadata.prototype.getName = function() {
  return this._sClassName;
};
Metadata.prototype.getClass = function() {
  return this._oClass;
};
Metadata.prototype.getParent = function() {
  return this._oParent;
};
Metadata.prototype._dedupInterfaces = function() {
  if (!this._bInterfacesUnique) {
    uniqueSort_default(this._aInterfaces);
    uniqueSort_default(this._aPublicMethods);
    uniqueSort_default(this._aAllPublicMethods);
    this._bInterfacesUnique = true;
  }
};
Metadata.prototype.getPublicMethods = function() {
  this._dedupInterfaces();
  return this._aPublicMethods;
};
Metadata.prototype.getAllPublicMethods = function() {
  this._dedupInterfaces();
  return this._aAllPublicMethods;
};
Metadata.prototype.getInterfaces = function() {
  this._dedupInterfaces();
  return this._aInterfaces;
};
Metadata.prototype.isInstanceOf = function(sInterface) {
  if (this._oParent) {
    if (this._oParent.isInstanceOf(sInterface)) {
      return true;
    }
  }
  var a = this._aInterfaces;
  for (var i = 0, l = a.length; i < l; i++) {
    if (a[i] === sInterface) {
      return true;
    }
  }
  return false;
};
Object.defineProperty(Metadata.prototype, "_mImplementedTypes", {
  get: function() {
    if (this === Metadata.prototype) {
      throw new Error("sap.ui.base.Metadata: The '_mImplementedTypes' property must not be accessed on the prototype");
    }
    var result = Object.create(this._oParent ? this._oParent._mImplementedTypes : null);
    result[this._sClassName] = true;
    var aInterfaces = this._aInterfaces, i = aInterfaces.length;
    while (i-- > 0) {
      if (!result[aInterfaces[i]]) {
        result[aInterfaces[i]] = true;
      }
    }
    Object.defineProperty(this, "_mImplementedTypes", {
      value: Object.freeze(result),
      writable: false,
      configurable: false
    });
    return result;
  },
  configurable: true
});
Metadata.prototype.isA = function(vTypeName) {
  var mTypes2 = this._mImplementedTypes;
  if (Array.isArray(vTypeName)) {
    for (var i = 0; i < vTypeName.length; i++) {
      if (vTypeName[i] in mTypes2) {
        return true;
      }
    }
    return false;
  }
  return vTypeName in mTypes2;
};
Metadata.prototype.isAbstract = function() {
  return this._bAbstract;
};
Metadata.prototype.isFinal = function() {
  return this._bFinal;
};
Metadata.prototype.isDeprecated = function() {
  return this._bDeprecated;
};
Metadata.prototype.addPublicMethods = function(sMethod) {
  var aNames = sMethod instanceof Array ? sMethod : arguments;
  Array.prototype.push.apply(this._aPublicMethods, aNames);
  Array.prototype.push.apply(this._aAllPublicMethods, aNames);
  this._bInterfacesUnique = false;
};
Metadata.createClass = function(fnBaseClass, sClassName, oClassInfo, FNMetaImpl) {
  if (typeof fnBaseClass === "string") {
    FNMetaImpl = oClassInfo;
    oClassInfo = sClassName;
    sClassName = fnBaseClass;
    fnBaseClass = null;
  }
  assert_default(!fnBaseClass || isFunction(fnBaseClass));
  assert_default(typeof sClassName === "string" && !!sClassName);
  assert_default(!oClassInfo || typeof oClassInfo === "object");
  assert_default(!FNMetaImpl || isFunction(FNMetaImpl));
  FNMetaImpl = FNMetaImpl || Metadata;
  if (isFunction(FNMetaImpl.preprocessClassInfo)) {
    oClassInfo = FNMetaImpl.preprocessClassInfo(oClassInfo);
  }
  oClassInfo = oClassInfo || {};
  oClassInfo.metadata = oClassInfo.metadata || {};
  if (!oClassInfo.hasOwnProperty("constructor")) {
    oClassInfo.constructor = void 0;
  }
  var fnClass = oClassInfo.constructor;
  assert_default(!fnClass || isFunction(fnClass));
  if (fnBaseClass) {
    if (!fnClass) {
      if (oClassInfo.metadata.deprecated) {
        fnClass = function() {
          Log_default.warning("Usage of deprecated class: " + sClassName);
          fnBaseClass.apply(this, arguments);
        };
      } else {
        fnClass = function() {
          fnBaseClass.apply(this, arguments);
        };
      }
    }
    fnClass.prototype = Object.create(fnBaseClass.prototype);
    fnClass.prototype.constructor = fnClass;
    oClassInfo.metadata.baseType = fnBaseClass;
  } else {
    fnClass = fnClass || function() {
    };
    delete oClassInfo.metadata.baseType;
  }
  oClassInfo.constructor = fnClass;
  ObjectPath_default.set(sClassName, fnClass);
  var oMetadata = new FNMetaImpl(sClassName, oClassInfo);
  fnClass.getMetadata = fnClass.prototype.getMetadata = function() {
    return oMetadata;
  };
  if (!fnClass.getMetadata().isFinal()) {
    fnClass.extend = function(sSCName, oSCClassInfo, fnSCMetaImpl) {
      return Metadata.createClass(fnClass, sSCName, oSCClassInfo, fnSCMetaImpl || FNMetaImpl);
    };
  }
  return fnClass;
};
var Metadata_default = Metadata;

// node_modules/@ui5/webcomponents-localization/dist/sap/ui/base/Object.js
var BaseObject = Metadata_default.createClass("sap.ui.base.Object", {
  constructor: function() {
    if (!(this instanceof BaseObject)) {
      throw Error('Cannot instantiate object: "new" is missing!');
    }
  }
});
BaseObject.prototype.destroy = function() {
};
BaseObject.prototype.getInterface = function() {
  var oInterface = new BaseObject._Interface(this, this.getMetadata().getAllPublicMethods());
  this.getInterface = function() {
    return oInterface;
  };
  return oInterface;
};
BaseObject.defineClass = function(sClassName, oStaticInfo, FNMetaImpl) {
  var oMetadata = new (FNMetaImpl || Metadata_default)(sClassName, oStaticInfo);
  var fnClass = oMetadata.getClass();
  fnClass.getMetadata = fnClass.prototype.getMetadata = function() {
    return oMetadata;
  };
  if (!oMetadata.isFinal()) {
    fnClass.extend = function(sSCName, oSCClassInfo, fnSCMetaImpl) {
      return Metadata_default.createClass(fnClass, sSCName, oSCClassInfo, fnSCMetaImpl || FNMetaImpl);
    };
  }
  Log_default.debug("defined class '" + sClassName + "'" + (oMetadata.getParent() ? " as subclass of " + oMetadata.getParent().getName() : ""));
  return oMetadata;
};
BaseObject.prototype.isA = function(vTypeName) {
  return this.getMetadata().isA(vTypeName);
};
BaseObject.isA = function(oObject, vTypeName) {
  return oObject instanceof BaseObject && oObject.isA(vTypeName);
};
BaseObject.isObjectA = function(oObject, vTypeName) {
  return oObject instanceof BaseObject && oObject.isA(vTypeName);
};
BaseObject._Interface = function(oObject, aMethods, _bReturnFacade) {
  if (!oObject) {
    return oObject;
  }
  function fCreateDelegator(oObject2, sMethodName2) {
    return function() {
      var tmp = oObject2[sMethodName2].apply(oObject2, arguments);
      if (_bReturnFacade) {
        return this;
      } else {
        return tmp instanceof BaseObject ? tmp.getInterface() : tmp;
      }
    };
  }
  if (!aMethods) {
    return {};
  }
  var sMethodName;
  for (var i = 0, ml = aMethods.length; i < ml; i++) {
    sMethodName = aMethods[i];
    if (!oObject[sMethodName] || typeof oObject[sMethodName] === "function") {
      this[sMethodName] = fCreateDelegator(oObject, sMethodName);
    }
  }
};
var Object_default = BaseObject;

// node_modules/@ui5/webcomponents-localization/dist/sap/base/util/isPlainObject.js
var class2type = {};
var hasOwn = class2type.hasOwnProperty;
var toString = class2type.toString;
var fnToString = hasOwn.toString;
var ObjectFunctionString = fnToString.call(Object);
var fnIsPlainObject = function(obj) {
  var proto, Ctor;
  if (!obj || toString.call(obj) !== "[object Object]") {
    return false;
  }
  proto = Object.getPrototypeOf(obj);
  if (!proto) {
    return true;
  }
  Ctor = hasOwn.call(proto, "constructor") && proto.constructor;
  return typeof Ctor === "function" && fnToString.call(Ctor) === ObjectFunctionString;
};
var isPlainObject_default = fnIsPlainObject;

// node_modules/@ui5/webcomponents-localization/dist/sap/base/util/resolveReference.js
var resolveReference_default = function() {
  throw new Error("not implemented");
};

// node_modules/@ui5/webcomponents-localization/dist/sap/ui/base/DataType.js
var DataType = function() {
  throw new Error();
};
DataType.prototype.getName = function() {
  return void 0;
};
DataType.prototype.getBaseType = function() {
  return void 0;
};
DataType.prototype.getPrimitiveType = function() {
  var oType = this;
  while (oType.getBaseType()) {
    oType = oType.getBaseType();
  }
  return oType;
};
DataType.prototype.getComponentType = function() {
  return void 0;
};
DataType.prototype.getDefaultValue = function() {
  return void 0;
};
DataType.prototype.isArrayType = function() {
  return false;
};
DataType.prototype.isEnumType = function() {
  return false;
};
DataType.prototype.getEnumValues = function() {
  return void 0;
};
DataType.prototype.parseValue = function(sValue) {
  return sValue;
};
DataType.prototype.isValid = void 0;
DataType.prototype.setNormalizer = function(fnNormalizer) {
  assert_default(typeof fnNormalizer === "function", "DataType.setNormalizer: fnNormalizer must be a function");
  this._fnNormalizer = typeof fnNormalizer === "function" ? fnNormalizer : void 0;
};
DataType.prototype.normalize = function(oValue) {
  return this._fnNormalizer ? this._fnNormalizer(oValue) : oValue;
};
function createType(sName, mSettings, oBase) {
  mSettings = mSettings || {};
  var oBaseObject = oBase || DataType.prototype;
  var oType = Object.create(oBaseObject);
  oType.getName = function() {
    return sName;
  };
  if (mSettings.hasOwnProperty("defaultValue")) {
    var vDefault = mSettings.defaultValue;
    oType.getDefaultValue = function() {
      return vDefault;
    };
  }
  if (mSettings.isValid) {
    var fnIsValid = mSettings.isValid;
    oType.isValid = oBaseObject.isValid ? function(vValue) {
      if (!oBaseObject.isValid(vValue)) {
        return false;
      }
      return fnIsValid(vValue);
    } : fnIsValid;
  }
  if (mSettings.parseValue) {
    oType.parseValue = mSettings.parseValue;
  }
  oType.getBaseType = function() {
    return oBase;
  };
  return oType;
}
var mTypes = {
  "any": createType("any", {
    defaultValue: null,
    isValid: function(vValue) {
      return true;
    }
  }),
  "boolean": createType("boolean", {
    defaultValue: false,
    isValid: function(vValue) {
      return typeof vValue === "boolean";
    },
    parseValue: function(sValue) {
      return sValue == "true";
    }
  }),
  "int": createType("int", {
    defaultValue: 0,
    isValid: function(vValue) {
      return typeof vValue === "number" && (isNaN(vValue) || Math.floor(vValue) == vValue);
    },
    parseValue: function(sValue) {
      return parseInt(sValue);
    }
  }),
  "float": createType("float", {
    defaultValue: 0,
    isValid: function(vValue) {
      return typeof vValue === "number";
    },
    parseValue: function(sValue) {
      return parseFloat(sValue);
    }
  }),
  "string": createType("string", {
    defaultValue: "",
    isValid: function(vValue) {
      return typeof vValue === "string" || vValue instanceof String;
    },
    parseValue: function(sValue) {
      return sValue;
    }
  }),
  "object": createType("object", {
    defaultValue: null,
    isValid: function(vValue) {
      return typeof vValue === "object" || typeof vValue === "function";
    },
    parseValue: function(sValue) {
      return sValue ? JSON.parse(sValue) : null;
    }
  }),
  "function": createType("function", {
    defaultValue: null,
    isValid: function(vValue) {
      return vValue == null || typeof vValue === "function";
    },
    /*
     * Note: the second parameter <code>_oOptions</code> is a hidden feature for internal use only.
     * Its structure is subject to change. No code other than the XMLTemplateProcessor must use it.
     */
    parseValue: function(sValue, _oOptions) {
      if (sValue === "") {
        return void 0;
      }
      if (!/^\.?[A-Z_\$][A-Z0-9_\$]*(\.[A-Z_\$][A-Z0-9_\$]*)*$/i.test(sValue)) {
        throw new Error("Function references must consist of dot separated simple identifiers (A-Z, 0-9, _ or $) only, but was '" + sValue + "'");
      }
      var fnResult, oContext = _oOptions && _oOptions.context, oLocals = _oOptions && _oOptions.locals;
      fnResult = resolveReference_default(sValue, Object.assign({
        ".": oContext
      }, oLocals));
      if (fnResult && this.isValid(fnResult)) {
        return fnResult;
      }
      throw new TypeError("The string '" + sValue + "' couldn't be resolved to a function");
    }
  })
};
var arrayType = createType("array", {
  defaultValue: []
});
function createArrayType(componentType) {
  assert_default(componentType instanceof DataType, "DataType.<createArrayType>: componentType must be a DataType");
  var oType = Object.create(DataType.prototype);
  oType.getName = function() {
    return componentType.getName() + "[]";
  };
  oType.getComponentType = function() {
    return componentType;
  };
  oType.isValid = function(aValues) {
    if (aValues === null) {
      return true;
    }
    if (Array.isArray(aValues)) {
      for (var i = 0; i < aValues.length; i++) {
        if (!componentType.isValid(aValues[i])) {
          return false;
        }
      }
      return true;
    }
    return false;
  };
  oType.parseValue = function(sValue) {
    var aValues = sValue.split(",");
    for (var i = 0; i < aValues.length; i++) {
      aValues[i] = componentType.parseValue(aValues[i]);
    }
    return aValues;
  };
  oType.isArrayType = function() {
    return true;
  };
  oType.getBaseType = function() {
    return arrayType;
  };
  return oType;
}
var mEnumRegistry = /* @__PURE__ */ Object.create(null);
function createEnumType(sTypeName, oEnum) {
  var mValues = {}, sDefaultValue;
  for (var sName in oEnum) {
    var sValue = oEnum[sName];
    if (!sDefaultValue) {
      sDefaultValue = sValue;
    }
    if (typeof sValue !== "string") {
      throw new Error("Value " + sValue + " for enum type " + sTypeName + " is not a string");
    }
    if (!mValues.hasOwnProperty(sValue) || sName == sValue) {
      mValues[sValue] = sName;
    }
  }
  var oType = Object.create(DataType.prototype);
  oType.getName = function() {
    return sTypeName;
  };
  oType.isValid = function(v) {
    return typeof v === "string" && mValues.hasOwnProperty(v);
  };
  oType.parseValue = function(sValue2) {
    return oEnum[sValue2];
  };
  oType.getDefaultValue = function() {
    return sDefaultValue;
  };
  oType.getBaseType = function() {
    return mTypes.string;
  };
  oType.isEnumType = function() {
    return true;
  };
  oType.getEnumValues = function() {
    return oEnum;
  };
  return oType;
}
DataType.getType = function(sTypeName) {
  assert_default(sTypeName && typeof sTypeName === "string", "sTypeName must be a non-empty string");
  var oType = mTypes[sTypeName];
  if (!(oType instanceof DataType)) {
    if (sTypeName.indexOf("[]", sTypeName.length - 2) > 0) {
      var sComponentTypeName = sTypeName.slice(0, -2), oComponentType = this.getType(sComponentTypeName);
      oType = oComponentType && createArrayType(oComponentType);
      if (oType) {
        mTypes[sTypeName] = oType;
      }
    } else if (sTypeName !== "array") {
      oType = mEnumRegistry[sTypeName];
      if (oType == null) {
        oType = ObjectPath_default.get(sTypeName);
        if (oType != null) {
          Log_default.error(`The type '${sTypeName}' was accessed via globals. Defining enums via globals is deprecated. Please require the module 'sap/ui/base/DataType' and call the static 'DataType.registerEnum' API.`);
        }
      }
      if (oType instanceof DataType) {
        mTypes[sTypeName] = oType;
      } else if (isPlainObject_default(oType)) {
        oType = mTypes[sTypeName] = createEnumType(sTypeName, oType);
        delete mEnumRegistry[sTypeName];
      } else if (oType) {
        Log_default.warning("[FUTURE FATAL] '" + sTypeName + "' is not a valid data type. Falling back to type 'any'.");
        oType = mTypes.any;
      } else {
        Log_default.error("[FUTURE FATAL] data type '" + sTypeName + "' could not be found.");
        oType = void 0;
      }
    }
  }
  return oType;
};
DataType.createType = function(sName, mSettings, vBase) {
  assert_default(typeof sName === "string" && sName, "DataType.createType: type name must be a non-empty string");
  assert_default(vBase == null || vBase instanceof DataType || typeof vBase === "string" && vBase, "DataType.createType: base type must be empty or a DataType or a non-empty string");
  if (/[\[\]]/.test(sName)) {
    Log_default.error("[FUTURE FATAL] DataType.createType: array types ('something[]') must not be created with createType, they're created on-the-fly by DataType.getType");
  }
  if (typeof vBase === "string") {
    vBase = DataType.getType(vBase);
  }
  vBase = vBase || mTypes.any;
  if (vBase.isArrayType() || vBase.isEnumType()) {
    Log_default.error("[FUTURE FATAL] DataType.createType: base type must not be an array- or enum-type");
  }
  if (sName === "array" || mTypes[sName] instanceof DataType) {
    if (sName === "array" || mTypes[sName].getBaseType() == null) {
      throw new Error("DataType.createType: primitive or hidden type " + sName + " can't be re-defined");
    }
    Log_default.warning("[FUTURE FATAL] DataTypes.createType: type " + sName + " is redefined. This is an unsupported usage of DataType and might cause issues.");
  }
  var oType = mTypes[sName] = createType(sName, mSettings, vBase);
  return oType;
};
var oInterfaces = /* @__PURE__ */ new Set();
DataType.registerInterfaceTypes = function(aTypes) {
  aTypes.forEach(function(sType) {
    oInterfaces.add(sType);
    ObjectPath_default.set(sType, sType);
  });
};
DataType.registerEnum = function(sTypeName, mContent) {
  mEnumRegistry[sTypeName] = mContent;
};
DataType._isEnumCandidate = function(oObject) {
  return !Object.keys(oObject).some((key) => {
    const propertyType = typeof oObject[key];
    return propertyType === "object" || propertyType === "function";
  });
};
DataType.isInterfaceType = function(sType) {
  return oInterfaces.has(sType);
};
var DataType_default = DataType;

// node_modules/@ui5/webcomponents-localization/dist/sap/base/i18n/date/CalendarType.js
var CalendarType2 = {
  /**
   * The Gregorian calendar
   * @public
   */
  Gregorian: "Gregorian",
  /**
   * The Islamic calendar
   * @public
   */
  Islamic: "Islamic",
  /**
   * The Japanese emperor calendar
   * @public
   */
  Japanese: "Japanese",
  /**
   * The Persian Jalali calendar
   * @public
   */
  Persian: "Persian",
  /**
   * The Thai buddhist calendar
   * @public
   */
  Buddhist: "Buddhist"
};
var CalendarType_default2 = CalendarType2;

// node_modules/@ui5/webcomponents-localization/dist/sap/ui/core/CalendarType.js
DataType_default.registerEnum("sap.ui.core.CalendarType", CalendarType_default2);
var CalendarType_default3 = CalendarType_default2;

// node_modules/@ui5/webcomponents-localization/dist/sap/base/i18n/Localization.js
var M_ISO639_OLD_TO_NEW = {
  "iw": "he",
  "ji": "yi"
};
var getModernLanguage = (sLanguage) => {
  return M_ISO639_OLD_TO_NEW[sLanguage] || sLanguage;
};
var Localization = {
  getModernLanguage
};
var Localization_default = Localization;

// node_modules/@ui5/webcomponents-localization/dist/sap/base/i18n/LanguageTag.js
var rLanguageTag = /^((?:[A-Z]{2,3}(?:-[A-Z]{3}){0,3})|[A-Z]{4}|[A-Z]{5,8})(?:-([A-Z]{4}))?(?:-([A-Z]{2}|[0-9]{3}))?((?:-[0-9A-Z]{5,8}|-[0-9][0-9A-Z]{3})*)((?:-[0-9A-WYZ](?:-[0-9A-Z]{2,8})+)*)(?:-(X(?:-[0-9A-Z]{1,8})+))?$/i;
var _LanguageTag_instances, join_fn;
var LanguageTag = class {
  constructor(sLanguageTag) {
    __privateAdd(this, _LanguageTag_instances);
    /**
     * Get the language.
     *
     * Note that the case might differ from the original script tag
     * (Lower case is enforced as recommended by BCP47/ISO639).
     *
     * @type {string}
     * @public
     */
    __publicField(this, "language");
    /**
     * Get the script or <code>null</code> if none was specified.
     *
     * Note that the case might differ from the original language tag
     * (Upper case first letter and lower case reminder enforced as
     * recommended by BCP47/ISO15924)
     *
     * @type {string|null}
     * @public
     */
    __publicField(this, "script");
    /**
     * Get the region or <code>null</code> if none was specified.
     *
     * Note that the case might differ from the original script tag
     * (Upper case is enforced as recommended by BCP47/ISO3166-1).
     *
     * @type {string}
     * @public
     */
    __publicField(this, "region");
    /**
     * Get the variants as a single string or <code>null</code>.
     *
     * Multiple variants are separated by a dash '-'.
     *
     * @type {string|null}
     * @public
     */
    __publicField(this, "variant");
    /**
     * Get the variants as an array of individual variants.
     *
     * The separating dashes are not part of the result.
     * If there is no variant section in the language tag, an empty array is returned.
     *
     * @type {string[]}
     * @public
     */
    __publicField(this, "variantSubtags");
    /**
     * Get the extension as a single string or <code>null</code>.
     *
     * The extension always consists of a singleton character (not 'x'),
     * a dash '-' and one or more extension token, each separated
     * again with a dash.
     *
     * @type {string|null}
     * @public
     */
    __publicField(this, "extension");
    /**
     * Get the extensions as an array of tokens.
     *
     * The leading singleton and the separating dashes are not part of the result.
     * If there is no extensions section in the language tag, an empty array is returned.
     *
     * @type {string[]}
     * @public
     */
    __publicField(this, "extensionSubtags");
    /**
     * Get the private use section or <code>null</code>.
     *
     * @type {string}
     */
    __publicField(this, "privateUse");
    /**
     * Get the private use section as an array of tokens.
     *
     * The leading singleton and the separating dashes are not part of the result.
     * If there is no private use section in the language tag, an empty array is returned.
     *
     * @type {string[]}
     */
    __publicField(this, "privateUseSubtags");
    var aResult = rLanguageTag.exec(sLanguageTag.replace(/_/g, "-"));
    if (aResult === null) {
      throw new TypeError("The given language tag'" + sLanguageTag + "' does not adhere to BCP-47.");
    }
    this.language = aResult[1] || null;
    this.script = aResult[2] || null;
    this.region = aResult[3] || null;
    this.variant = aResult[4] && aResult[4].slice(1) || null;
    this.variantSubtags = this.variant ? this.variant.split("-") : [];
    this.extension = aResult[5] && aResult[5].slice(1) || null;
    this.extensionSubtags = this.variant ? this.variant.split("-") : [];
    this.privateUse = aResult[6] || null;
    this.privateUseSubtags = this.privateUse ? this.privateUse.slice(2).split("-") : [];
    if (this.language) {
      this.language = this.language.toLowerCase();
    }
    if (this.script) {
      this.script = this.script.toLowerCase().replace(/^[a-z]/, function($) {
        return $.toUpperCase();
      });
    }
    if (this.region) {
      this.region = this.region.toUpperCase();
    }
    Object.freeze(this);
  }
  toString() {
    return __privateMethod(this, _LanguageTag_instances, join_fn).call(this, this.language, this.script, this.region, this.variant, this.extension, this.privateUse);
  }
};
_LanguageTag_instances = new WeakSet();
join_fn = function() {
  return Array.prototype.filter.call(arguments, Boolean).join("-");
};
var LanguageTag_default = LanguageTag;

// node_modules/@ui5/webcomponents-localization/dist/sap/ui/core/Locale.js
var mCache = /* @__PURE__ */ Object.create(null);
var Locale = Object_default.extend(
  "sap.ui.core.Locale",
  /** @lends sap.ui.core.Locale.prototype */
  {
    constructor: function(vLocale) {
      Object_default.apply(this);
      if (vLocale instanceof LanguageTag_default) {
        this.oLanguageTag = vLocale;
        this.sLocaleId = this.oLanguageTag.toString();
      } else {
        this.oLanguageTag = new LanguageTag_default(vLocale);
        this.sLocaleId = vLocale;
      }
      Object.assign(this, this.oLanguageTag);
      this.sLanguage = this.language;
    },
    /**
     * Get the locale language.
     *
     * Note that the case might differ from the original script tag
     * (Lower case is enforced as recommended by BCP47/ISO639).
     *
     * @returns {string} the language code
     * @public
     */
    getLanguage: function() {
      return this.language;
    },
    /**
     * Get the locale script or <code>null</code> if none was specified.
     *
     * Note that the case might differ from the original language tag
     * (Upper case first letter and lower case reminder enforced as
     * recommended by BCP47/ISO15924)
     *
     * @returns {string|null} the script code or <code>null</code>
     * @public
     */
    getScript: function() {
      return this.script;
    },
    /**
     * Get the locale region or <code>null</code> if none was specified.
     *
     * Note that the case might differ from the original script tag
     * (Upper case is enforced as recommended by BCP47/ISO3166-1).
     *
     * @returns {string} the ISO3166-1 region code (2-letter or 3-digits)
     * @public
     */
    getRegion: function() {
      return this.region;
    },
    /**
     * Get the locale variants as a single string or <code>null</code>.
     *
     * Multiple variants are separated by a dash '-'.
     *
     * @returns {string|null} the variant or <code>null</code>
     * @public
     */
    getVariant: function() {
      return this.variant;
    },
    /**
     * Get the locale variants as an array of individual variants.
     *
     * The separating dashes are not part of the result.
     * If there is no variant section in the locale tag, an empty array is returned.
     *
     * @returns {string[]} the individual variant sections
     * @public
     */
    getVariantSubtags: function() {
      return this.variantSubtags;
    },
    /**
     * Get the locale extension as a single string or <code>null</code>.
     *
     * The extension always consists of a singleton character (not 'x'),
     * a dash '-' and one or more extension token, each separated
     * again with a dash.
     *
     * Use {@link #getExtensions} to get the individual extension tokens as an array.
     *
     * @returns {string|null} the extension or <code>null</code>
     * @public
     */
    getExtension: function() {
      return this.extension;
    },
    /**
     * Get the locale extensions as an array of tokens.
     *
     * The leading singleton and the separating dashes are not part of the result.
     * If there is no extensions section in the locale tag, an empty array is returned.
     *
     * @returns {string[]} the individual extension sections
     * @public
     */
    getExtensionSubtags: function() {
      return this.extensionSubtags;
    },
    /**
     * Get the locale private use section or <code>null</code>.
     *
     * @returns {string} the private use section
     * @public
     */
    getPrivateUse: function() {
      return this.privateUse;
    },
    /**
     * Get the locale private use section as an array of tokens.
     *
     * The leading singleton and the separating dashes are not part of the result.
     * If there is no private use section in the locale tag, an empty array is returned.
     *
     * @returns {string[]} the tokens of the private use section
     * @public
     */
    getPrivateUseSubtags: function() {
      return this.privateUseSubtags;
    },
    /**
     * Check if a subtag is provided
     *
     * @param {string} sSubtag The subtag to check
     * @returns {boolean} Wether the subtag is provided or not
     */
    hasPrivateUseSubtag: function(sSubtag) {
      assert_default(sSubtag && sSubtag.match(/^[0-9A-Z]{1,8}$/i), "subtag must be a valid BCP47 private use tag");
      return this.privateUseSubtags.indexOf(sSubtag) >= 0;
    },
    toString: function() {
      return this.oLanguageTag.toString();
    },
    /**
     * Best guess to get a proper SAP Logon Language for this locale.
     *
     * Conversions taken into account:
     * <ul>
     * <li>use the language part only</li>
     * <li>convert old ISO639 codes to newer ones (e.g. 'iw' to 'he')</li>
     * <li>for Chinese, map 'Traditional Chinese' or region 'TW' to SAP proprietary code 'zf'</li>
     * <li>map private extensions x-saptrc, x-sappsd and saprigi to SAP pseudo languages '1Q', '2Q' and '3Q'</li>
     * <li>remove ext. language sub tags</li>
     * <li>convert to uppercase</li>
     * </ul>
     *
     * Note that the conversion also returns a result for languages that are not
     * supported by the default set of SAP languages. This method has no knowledge
     * about the concrete languages of any given backend system.
     *
     * @returns {string} a language code that should
     * @public
     * @since 1.17.0
     * @deprecated As of 1.44, use {@link sap.ui.core.Configuration#getSAPLogonLanguage} instead
     *   as that class allows to configure an SAP Logon language.
     */
    getSAPLogonLanguage: function() {
      return Localization_default._getSAPLogonLanguage(this);
    }
  }
);
Locale._getCoreLocale = function(oLocale) {
  if (oLocale instanceof LanguageTag_default) {
    oLocale = mCache[oLocale.toString()] || new Locale(oLocale);
    mCache[oLocale.toString()] = oLocale;
  }
  return oLocale;
};
var Locale_default = Locale;

// node_modules/@ui5/webcomponents-localization/dist/sap/base/util/_merge.js
var oToken = /* @__PURE__ */ Object.create(null);
var fnMerge = function() {
  var src, copyIsArray, copy, name105, options, clone, target = arguments[2] || {}, i = 3, length = arguments.length, deep = arguments[0] || false, skipToken = arguments[1] ? void 0 : oToken;
  if (typeof target !== "object" && typeof target !== "function") {
    target = {};
  }
  for (; i < length; i++) {
    if ((options = arguments[i]) != null) {
      for (name105 in options) {
        src = target[name105];
        copy = options[name105];
        if (name105 === "__proto__" || target === copy) {
          continue;
        }
        if (deep && copy && (isPlainObject_default(copy) || (copyIsArray = Array.isArray(copy)))) {
          if (copyIsArray) {
            copyIsArray = false;
            clone = src && Array.isArray(src) ? src : [];
          } else {
            clone = src && isPlainObject_default(src) ? src : {};
          }
          target[name105] = fnMerge(deep, arguments[1], clone, copy);
        } else if (copy !== skipToken) {
          target[name105] = copy;
        }
      }
    }
  }
  return target;
};
var merge_default = fnMerge;

// node_modules/@ui5/webcomponents-localization/dist/sap/base/util/extend.js
var fnExtend = function() {
  var args = [false, true];
  args.push.apply(args, arguments);
  return merge_default.apply(null, args);
};
var extend_default = fnExtend;

// node_modules/@ui5/webcomponents-localization/dist/sap/base/util/LoaderExtensions.js
var loadResource = (moduleName) => {
  const moduleFormat = moduleName.match(/sap\/ui\/core\/cldr\/(\w+)\.json/);
  if (!moduleFormat) {
    throw new Error(`Unknown module "${moduleName}"`);
  }
  const localeId = moduleFormat[1];
  return getLocaleData(localeId);
};
var LoaderExtensions = {
  loadResource
};
var LoaderExtensions_default = LoaderExtensions;

// node_modules/@ui5/webcomponents-localization/dist/sap/base/i18n/date/CalendarWeekNumbering.js
var CalendarWeekNumbering = {
  /**
   * The default calendar week numbering:
   *
   * The framework determines the week numbering scheme; currently it is derived from the
   * active format locale. Future versions of UI5 might select a different week numbering
   * scheme.
   *
   * @public
   */
  Default: "Default",
  /**
   * Official calendar week numbering in most of Europe (ISO 8601 standard):
   * <ul>
   * <li>Monday is first day of the week,
   * <li>the week containing January 4th is first week of the year.
   * </ul>
   *
   * @public
   */
  ISO_8601: "ISO_8601",
  /**
   * Official calendar week numbering in much of the Middle East (Middle Eastern calendar):
   * <ul>
   * <li>Saturday is first day of the week,
   * <li>the week containing January 1st is first week of the year.
   * </ul>
   *
   * @public
   */
  MiddleEastern: "MiddleEastern",
  /**
   * Official calendar week numbering in the United States, Canada, Brazil, Israel, Japan, and
   * other countries (Western traditional calendar):
   * <ul>
   * <li>Sunday is first day of the week,
   * <li>the week containing January 1st is first week of the year.
   * </ul>
   *
   * @public
   */
  WesternTraditional: "WesternTraditional"
};
Object.defineProperty(CalendarWeekNumbering, "getWeekConfigurationValues", {
  // configurable : false,
  // enumerable : false,
  value: function(sCalendarWeekNumbering) {
    switch (sCalendarWeekNumbering) {
      case CalendarWeekNumbering.ISO_8601:
        return {
          firstDayOfWeek: 1,
          minimalDaysInFirstWeek: 4
        };
      case CalendarWeekNumbering.MiddleEastern:
        return {
          firstDayOfWeek: 6,
          minimalDaysInFirstWeek: 1
        };
      case CalendarWeekNumbering.WesternTraditional:
        return {
          firstDayOfWeek: 0,
          minimalDaysInFirstWeek: 1
        };
      default:
        return void 0;
    }
  }
  // writable : false
});
var CalendarWeekNumbering_default = CalendarWeekNumbering;

// node_modules/@ui5/webcomponents-localization/dist/sap/ui/core/date/CalendarWeekNumbering.js
DataType_default.registerEnum("sap.ui.core.date.CalendarWeekNumbering", CalendarWeekNumbering_default);
var CalendarWeekNumbering_default2 = CalendarWeekNumbering_default;

// node_modules/@ui5/webcomponents-localization/dist/sap/ui/core/LocaleData.js
var rCIgnoreCase = /c/i;
var rEIgnoreCase = /e/i;
var mLegacyUnit2CurrentUnit = {
  "acceleration-meter-per-second-squared": "acceleration-meter-per-square-second",
  "concentr-milligram-per-deciliter": "concentr-milligram-ofglucose-per-deciliter",
  "concentr-part-per-million": "concentr-permillion",
  "consumption-liter-per-100kilometers": "consumption-liter-per-100-kilometer",
  "mass-metric-ton": "mass-tonne",
  "pressure-millimeter-of-mercury": "pressure-millimeter-ofhg",
  "pressure-pound-per-square-inch": "pressure-pound-force-per-square-inch",
  "pressure-inch-hg": "pressure-inch-ofhg",
  "torque-pound-foot": "torque-pound-force-foot"
};
var rNumberInScientificNotation = /^([+-]?)((\d+)(?:\.(\d+))?)[eE]([+-]?\d+)$/;
var rTrailingZeroes = /0+$/;
var rFallbackPatternTextParts = /(.*)?\{[0|1]}(.*)?\{[0|1]}(.*)?/;
var aSupportedWidths = ["narrow", "abbreviated", "wide"];
var LocaleData = Object_default.extend(
  "sap.ui.core.LocaleData",
  /** @lends sap.ui.core.LocaleData.prototype */
  {
    constructor: function(oLocale) {
      Object_default.apply(this);
      this.oLocale = Locale_default._getCoreLocale(oLocale);
      var oDataLoaded = getData(this.oLocale);
      this.mData = oDataLoaded.mData;
      this.sCLDRLocaleId = oDataLoaded.sCLDRLocaleId;
    },
    /**
     * @private
     * @ui5-restricted UI5 Web Components
     */
    _get: function() {
      return this._getDeep(this.mData, arguments);
    },
    /**
     * Retrieves merged object if overlay data is available
     * @private
     * @return {object} merged object
     */
    _getMerged: function() {
      return this._get.apply(this, arguments);
    },
    /**
     * Get month names in width "narrow", "abbreviated" or "wide". Result may contain alternative month names.
     *
     * @param {"narrow"|"abbreviated"|"wide"} sWidth
     *   The required width for the month names
     * @param {sap.ui.core.CalendarType} [sCalendarType]
     *   The type of calendar; defaults to the calendar type either set in configuration or calculated from locale
     * @returns {array}
     *   The array of month names; if no alternative exists the entry for the month is its name as a string; if
     *   there are alternative month names the entry for the month is an array of strings with the alternative names
     * @private
     */
    _getMonthsWithAlternatives: function(sWidth, sCalendarType) {
      return this._get(getCLDRCalendarName(sCalendarType), "months", "format", sWidth);
    },
    /**
     * Get standalone month names in width "narrow", "abbreviated" or "wide". Result may contain alternative month
     * names.
     *
     * @param {"narrow"|"abbreviated"|"wide"} sWidth
     *   The required width for the month names
     * @param {sap.ui.core.CalendarType} [sCalendarType]
     *   The type of calendar; defaults to the calendar type either set in configuration or calculated from locale
     * @returns {array}
     *   The array of month names; if no alternative exists the entry for the month is its name as a string; if
     *   there are alternative month names the entry for the month is an array of strings with the alternative names
     * @private
     */
    _getMonthsStandAloneWithAlternatives: function(sWidth, sCalendarType) {
      return this._get(getCLDRCalendarName(sCalendarType), "months", "stand-alone", sWidth);
    },
    _getDeep: function(oObject, aPropertyNames) {
      var oResult = oObject;
      for (var i = 0; i < aPropertyNames.length; i++) {
        oResult = oResult[aPropertyNames[i]];
        if (oResult === void 0) {
          break;
        }
      }
      return oResult;
    },
    /**
     * Get orientation (left-to-right or right-to-left).
     *
     * @returns {string} character orientation for this locale
     * @public
     */
    getOrientation: function() {
      return this._get("orientation");
    },
    /**
     * Get a display name for the language of the Locale of this LocaleData, using
     * the CLDR display names for languages.
     *
     * The lookup logic works as follows:
     * 1. language code and region is checked (e.g. "en-GB")
     * 2. If not found: language code and script is checked (e.g. "zh-Hant")
     * 3. If not found language code is checked (e.g. "en")
     * 4. If it is then still not found <code>undefined</code> is returned.
     *
     * @returns {string} language name, e.g. "English", "British English", "American English"
     *  or <code>undefined</code> if language cannot be found
     * @private
     * @ui5-restricted sap.ushell
     */
    getCurrentLanguageName: function() {
      return this.getLanguageName(this.oLocale.toString());
    },
    /**
     * Gets the locale-specific language name for the given language tag.
     *
     * The languages returned by {@link #getLanguages} from the CLDR raw data do not contain the
     * language names if they can be derived from the language and the script or the territory.
     * If the map of languages contains no entry for the given language tag, derive the language
     * name from the used script or region.
     *
     * @param {string} sLanguageTag
     *   The language tag, for example "en", "en-US", "en_US", "zh-Hant", or "zh_Hant"
     * @returns {string|undefined}
     *   The language name, or <code>undefined</code> if the name cannot be determined
     * @throws {TypeError} When the given language tag isn't valid
     *
     * @public
     */
    getLanguageName: function(sLanguageTag) {
      const oLanguageTag = new LanguageTag_default(sLanguageTag);
      let sLanguage = Localization_default.getModernLanguage(oLanguageTag.language);
      let sScript = oLanguageTag.script;
      if (sLanguage === "sr" && sScript === "Latn") {
        sLanguage = "sh";
        sScript = null;
      }
      const sRegion = oLanguageTag.region;
      const oLanguages = this._get("languages");
      const sLanguageText = oLanguages[sLanguage];
      if (!sScript && !sRegion || !sLanguageText) {
        return sLanguageText;
      }
      const sResult = oLanguages[sLanguage + "_" + sRegion] || oLanguages[sLanguage + "_" + sScript];
      if (sResult) {
        return sResult;
      }
      if (sScript) {
        const sScriptText = this._get("scripts")[sScript];
        if (sScriptText) {
          return sLanguageText + " (" + sScriptText + ")";
        }
      }
      if (sRegion) {
        const sRegionText = this._get("territories")[sRegion];
        if (sRegionText) {
          return sLanguageText + " (" + sRegionText + ")";
        }
      }
      return sLanguageText;
    },
    /**
     * Gets locale-specific language names, as available in the CLDR raw data.
     *
     * To avoid redundancies, with CLDR version 43 only language names are contained which cannot be derived from
     * the language and the script or the territory. If a language tag is not contained in the map, use
     * {@link #getLanguageName} to get the derived locale-specific language name for that language tag.
     *
     * @returns {Object<string, string>} Maps a language tag to the locale-specific language name
     *
     * @public
     */
    getLanguages: function() {
      const oLanguages = this._get("languages");
      ["ar_001", "de_AT", "de_CH", "en_AU", "en_CA", "en_GB", "en_US", "es_419", "es_ES", "es_MX", "fa_AF", "fr_CA", "fr_CH", "nds_NL", "nl_BE", "pt_BR", "pt_PT", "ro_MD", "sw_CD", "zh_Hans", "zh_Hant"].forEach((sLanguageTag) => {
        if (!oLanguages[sLanguageTag]) {
          oLanguages[sLanguageTag] = this.getLanguageName(sLanguageTag);
        }
      });
      return oLanguages;
    },
    /**
     * Gets locale-specific script names, as available in the CLDR raw data.
     *
     * To avoid redundancies, with CLDR version 43 only scripts are contained for which the language-specific name
     * is different from the script key. If a script key is not contained in the map, use the script key as script
     * name.
     *
     * @returns {Object<string, string>} Maps a script key to the locale-specific script name
     *
     * @public
     */
    getScripts: function() {
      return this._get("scripts");
    },
    /**
     * Gets locale-specific territory names, as available in the CLDR raw data.
     *
     * To avoid redundancies, with CLDR version 43 only territories are contained for which the language-specific
     * name is different from the territory key.
     *
     * @returns {Object<string, string>} Maps a territory key to the locale-specific territory name
     *
     * @public
     */
    getTerritories: function() {
      return this._get("territories");
    },
    /**
     * Get month names in width "narrow", "abbreviated" or "wide".
     *
     * @param {"narrow"|"abbreviated"|"wide"} sWidth
     *   The required width for the month names
     * @param {sap.ui.core.CalendarType} [sCalendarType]
     *   The type of calendar; defaults to the calendar type either set in configuration or calculated from locale
     * @returns {string[]}
     *   The array of month names
     * @public
     */
    getMonths: function(sWidth, sCalendarType) {
      assert_default(aSupportedWidths.includes(sWidth), "sWidth must be narrow, abbreviated or wide");
      return this._get(getCLDRCalendarName(sCalendarType), "months", "format", sWidth).map((vMonthName) => {
        return Array.isArray(vMonthName) ? vMonthName[0] : vMonthName;
      });
    },
    /**
     * Get standalone month names in width "narrow", "abbreviated" or "wide".
     *
     * @param {"narrow"|"abbreviated"|"wide"} sWidth
     *   The required width for the month names
     * @param {sap.ui.core.CalendarType} [sCalendarType]
     *   The type of calendar; defaults to the calendar type either set in configuration or calculated from locale
     * @returns {string[]}
     *   The array of standalone month names
     * @public
     */
    getMonthsStandAlone: function(sWidth, sCalendarType) {
      assert_default(aSupportedWidths.includes(sWidth), "sWidth must be narrow, abbreviated or wide");
      return this._get(getCLDRCalendarName(sCalendarType), "months", "stand-alone", sWidth).map((vMonthName) => {
        return Array.isArray(vMonthName) ? vMonthName[0] : vMonthName;
      });
    },
    /**
     * Get day names in width "narrow", "abbreviated" or "wide".
     *
     * @param {string} sWidth the required width for the day names
     * @param {sap.ui.core.CalendarType} [sCalendarType] the type of calendar. If it's not set, it falls back to the calendar type either set in configuration or calculated from locale.
     * @returns {array} array of day names (starting with Sunday)
     * @public
     */
    getDays: function(sWidth, sCalendarType) {
      assert_default(sWidth == "narrow" || sWidth == "abbreviated" || sWidth == "wide" || sWidth == "short", "sWidth must be narrow, abbreviate, wide or short");
      return this._get(getCLDRCalendarName(sCalendarType), "days", "format", sWidth);
    },
    /**
     * Get standalone day names in width "narrow", "abbreviated" or "wide".
     *
     * @param {string} sWidth the required width for the day names
     * @param {sap.ui.core.CalendarType} [sCalendarType] the type of calendar. If it's not set, it falls back to the calendar type either set in configuration or calculated from locale.
     * @returns {array} array of day names (starting with Sunday)
     * @public
     */
    getDaysStandAlone: function(sWidth, sCalendarType) {
      assert_default(sWidth == "narrow" || sWidth == "abbreviated" || sWidth == "wide" || sWidth == "short", "sWidth must be narrow, abbreviated, wide or short");
      return this._get(getCLDRCalendarName(sCalendarType), "days", "stand-alone", sWidth);
    },
    /**
     * Get quarter names in width "narrow", "abbreviated" or "wide".
     *
     * @param {string} sWidth the required width for the quarter names
     * @param {sap.ui.core.CalendarType} [sCalendarType] the type of calendar. If it's not set, it falls back to the calendar type either set in configuration or calculated from locale.
     * @returns {array} array of quarters
     * @public
     */
    getQuarters: function(sWidth, sCalendarType) {
      assert_default(sWidth == "narrow" || sWidth == "abbreviated" || sWidth == "wide", "sWidth must be narrow, abbreviated or wide");
      return this._get(getCLDRCalendarName(sCalendarType), "quarters", "format", sWidth);
    },
    /**
     * Get standalone quarter names in width "narrow", "abbreviated" or "wide".
     *
     * @param {string} sWidth the required width for the quarter names
     * @param {sap.ui.core.CalendarType} [sCalendarType] the type of calendar. If it's not set, it falls back to the calendar type either set in configuration or calculated from locale.
     * @returns {array} array of quarters
     * @public
     */
    getQuartersStandAlone: function(sWidth, sCalendarType) {
      assert_default(sWidth == "narrow" || sWidth == "abbreviated" || sWidth == "wide", "sWidth must be narrow, abbreviated or wide");
      return this._get(getCLDRCalendarName(sCalendarType), "quarters", "stand-alone", sWidth);
    },
    /**
     * Get day periods in width "narrow", "abbreviated" or "wide".
     *
     * @param {string} sWidth the required width for the day period names
     * @param {sap.ui.core.CalendarType} [sCalendarType] the type of calendar. If it's not set, it falls back to the calendar type either set in configuration or calculated from locale.
     * @returns {array} array of day periods (AM, PM)
     * @public
     */
    getDayPeriods: function(sWidth, sCalendarType) {
      assert_default(sWidth == "narrow" || sWidth == "abbreviated" || sWidth == "wide", "sWidth must be narrow, abbreviated or wide");
      return this._get(getCLDRCalendarName(sCalendarType), "dayPeriods", "format", sWidth);
    },
    /**
     * Get standalone day periods in width "narrow", "abbreviated" or "wide".
     *
     * @param {string} sWidth the required width for the day period names
     * @param {sap.ui.core.CalendarType} [sCalendarType] the type of calendar. If it's not set, it falls back to the calendar type either set in configuration or calculated from locale.
     * @returns {array} array of day periods (AM, PM)
     * @public
     */
    getDayPeriodsStandAlone: function(sWidth, sCalendarType) {
      assert_default(sWidth == "narrow" || sWidth == "abbreviated" || sWidth == "wide", "sWidth must be narrow, abbreviated or wide");
      return this._get(getCLDRCalendarName(sCalendarType), "dayPeriods", "stand-alone", sWidth);
    },
    /**
     * Get date pattern in format "short", "medium", "long" or "full".
     *
     * @param {string} sStyle the required style for the date pattern
     * @param {sap.ui.core.CalendarType} [sCalendarType] the type of calendar. If it's not set, it falls back to the calendar type either set in configuration or calculated from locale.
     * @returns {string} the selected date pattern
     * @public
     */
    getDatePattern: function(sStyle, sCalendarType) {
      assert_default(sStyle == "short" || sStyle == "medium" || sStyle == "long" || sStyle == "full", "sStyle must be short, medium, long or full");
      return this._get(getCLDRCalendarName(sCalendarType), "dateFormats", sStyle);
    },
    /**
     * Get flexible day periods in style format "abbreviated", "narrow" or "wide".
     *
     * @param {string} sWidth
     *   The required width for the flexible day period names
     * @param {sap.ui.core.CalendarType} [sCalendarType]
     *   The type of calendar. If it's not set, it falls back to the calendar type either set in
     *   configuration or calculated from locale.
     * @returns {object|undefined}
     *   Object of flexible day periods or 'undefined' if none can be found
     *
     * @example <caption>Output</caption>
     * {
     *   "midnight": "midnight",
     *   "noon": "noon",
     *   "morning1": "in the morning",
     *   "afternoon1": "in the afternoon",
     *   "evening1": "in the evening",
     *   "night1": "at night"
     * }
     *
     * @private
     */
    getFlexibleDayPeriods: function(sWidth, sCalendarType) {
      return this._get(getCLDRCalendarName(sCalendarType), "flexibleDayPeriods", "format", sWidth);
    },
    /**
     * Get flexible day periods in style format "abbreviated", "narrow" or "wide" for case
     * "stand-alone".
     *
     * @param {string} sWidth
     *   The required width for the flexible day period names
     * @param {sap.ui.core.CalendarType} [sCalendarType]
     *   The type of calendar. If it's not set, it falls back to the calendar type either set in
     *   configuration or calculated from locale.
     * @returns {object|undefined}
     *   Object of flexible day periods or 'undefined' if none can be found
     *
     * @example <caption>Output</caption>
     * {
     *   "midnight": "midnight",
     *   "noon": "noon",
     *   "morning1": "in the morning",
     *   "afternoon1": "in the afternoon",
     *   "evening1": "in the evening",
     *   "night1": "at night"
     * }
     *
     * @private
     */
    getFlexibleDayPeriodsStandAlone: function(sWidth, sCalendarType) {
      return this._get(getCLDRCalendarName(sCalendarType), "flexibleDayPeriods", "stand-alone", sWidth);
    },
    /**
     * Get flexible day period of time or a point in time
     *
     * @param {int} iHour Hour
     * @param {int} iMinute Minute
     * @returns {string} Key of flexible day period of time e.g. <code>afternoon2</code>
     *
     * @private
     */
    getFlexibleDayPeriodOfTime: function(iHour, iMinute) {
      var iAbsoluteMinutes, oDayPeriodRules, sPeriodMatch;
      iAbsoluteMinutes = (iHour * 60 + iMinute) % 1440;
      oDayPeriodRules = this._get("dayPeriodRules");
      function parseToAbsoluteMinutes(sValue) {
        var aSplit = sValue.split(":"), sHour = aSplit[0], sMinute = aSplit[1];
        return parseInt(sHour) * 60 + parseInt(sMinute);
      }
      sPeriodMatch = Object.keys(oDayPeriodRules).find(function(sDayPeriodRule) {
        var oDayPeriodRule = oDayPeriodRules[sDayPeriodRule];
        return oDayPeriodRule["_at"] && parseToAbsoluteMinutes(oDayPeriodRule["_at"]) === iAbsoluteMinutes;
      });
      if (sPeriodMatch) {
        return sPeriodMatch;
      }
      return Object.keys(oDayPeriodRules).find(function(sDayPeriodRule) {
        var iEndValue, aIntervals, iStartValue, oDayPeriodRule = oDayPeriodRules[sDayPeriodRule];
        if (oDayPeriodRule["_at"]) {
          return false;
        }
        iStartValue = parseToAbsoluteMinutes(oDayPeriodRule["_from"]);
        iEndValue = parseToAbsoluteMinutes(oDayPeriodRule["_before"]);
        if (iStartValue > iEndValue) {
          aIntervals = [
            {
              start: iStartValue,
              end: 1440
            },
            // 24 * 60
            {
              start: 0,
              end: iEndValue
            }
          ];
        } else {
          aIntervals = [{
            start: iStartValue,
            end: iEndValue
          }];
        }
        return aIntervals.some(function(oInterval) {
          return oInterval.start <= iAbsoluteMinutes && oInterval.end > iAbsoluteMinutes;
        });
      });
    },
    /**
     * Get time pattern in style "short", "medium", "long" or "full".
     *
     * @param {string} sStyle the required style for the date pattern
     * @param {sap.ui.core.CalendarType} [sCalendarType] the type of calendar. If it's not set, it falls back to the calendar type either set in configuration or calculated from locale.
     * @returns {string} the selected time pattern
     * @public
     */
    getTimePattern: function(sStyle, sCalendarType) {
      assert_default(sStyle == "short" || sStyle == "medium" || sStyle == "long" || sStyle == "full", "sStyle must be short, medium, long or full");
      return this._get(getCLDRCalendarName(sCalendarType), "timeFormats", sStyle);
    },
    /**
     * Get datetime pattern in style "short", "medium", "long" or "full".
     *
     * @param {string} sStyle the required style for the datetime pattern
     * @param {sap.ui.core.CalendarType} [sCalendarType] the type of calendar. If it's not set, it falls back to the calendar type either set in configuration or calculated from locale.
     * @returns {string} the selected datetime pattern
     * @public
     */
    getDateTimePattern: function(sStyle, sCalendarType) {
      assert_default(sStyle == "short" || sStyle == "medium" || sStyle == "long" || sStyle == "full", "sStyle must be short, medium, long or full");
      return this._get(getCLDRCalendarName(sCalendarType), "dateTimeFormats", sStyle);
    },
    /**
     * Get combined datetime pattern with given date and time style.
     *
     * @param {string} sDateStyle the required style for the date part
     * @param {string} sTimeStyle the required style for the time part
     * @param {sap.ui.core.CalendarType} [sCalendarType] the type of calendar. If it's not set, it falls back to the calendar type either set in configuration or calculated from locale.
     * @returns {string} the combined datetime pattern
     * @public
     */
    getCombinedDateTimePattern: function(sDateStyle, sTimeStyle, sCalendarType) {
      assert_default(sDateStyle == "short" || sDateStyle == "medium" || sDateStyle == "long" || sDateStyle == "full", "sStyle must be short, medium, long or full");
      assert_default(sTimeStyle == "short" || sTimeStyle == "medium" || sTimeStyle == "long" || sTimeStyle == "full", "sStyle must be short, medium, long or full");
      var sDateTimePattern = this.getDateTimePattern(sDateStyle, sCalendarType), sDatePattern = this.getDatePattern(sDateStyle, sCalendarType), sTimePattern = this.getTimePattern(sTimeStyle, sCalendarType);
      return sDateTimePattern.replace("{0}", sTimePattern).replace("{1}", sDatePattern);
    },
    /**
     * Get combined pattern with datetime and timezone for the given date and time style.
     *
     * @example
     * // locale de
     * oLocaleData.getCombinedDateTimeWithTimezonePattern("long", "long");
     * // "d. MMMM y 'um' HH:mm:ss z VV"
     *
     * // locale en_GB
     * oLocaleData.getCombinedDateTimeWithTimezonePattern("long", "long");
     * // "d MMMM y 'at' HH:mm:ss z VV"
     *
     * @param {string} sDateStyle The required style for the date part
     * @param {string} sTimeStyle The required style for the time part
     * @param {sap.ui.core.CalendarType} [sCalendarType] The type of calendar. If it's not set,
     *   it falls back to the calendar type either set in the configuration or calculated from
     *   the locale.
     * @returns {string} the combined pattern with datetime and timezone
     * @private
     * @ui5-restricted sap.ui.core.format.DateFormat
     * @since 1.101
     */
    getCombinedDateTimeWithTimezonePattern: function(sDateStyle, sTimeStyle, sCalendarType) {
      return this.applyTimezonePattern(this.getCombinedDateTimePattern(sDateStyle, sTimeStyle, sCalendarType));
    },
    /**
     * Applies the timezone to the pattern
     *
     * @param {string} sPattern pattern, e.g. <code>y</code>
     * @returns {string} applied timezone, e.g. <code>y VV</code>
     * @private
     * @ui5-restricted sap.ui.core.format.DateFormat
     * @since 1.101
     */
    applyTimezonePattern: function(sPattern) {
      var aPatterns = [sPattern];
      var aMissingTokens = [{
        group: "Timezone",
        length: 2,
        field: "zone",
        symbol: "V"
      }];
      this._appendItems(aPatterns, aMissingTokens);
      return aPatterns[0];
    },
    /**
     * Retrieves all timezone translations.
     *
     * E.g. for locale "en"
     * <pre>
     * {
     *  "America/New_York": "Americas, New York"
     *  ...
     * }
     * </pre>
     *
     * @return {Object<string, string>} the mapping, with 'key' being the IANA timezone ID, and
     * 'value' being the translation.
     * @ui5-restricted sap.ui.core.format.DateFormat, sap.ui.export, sap.ushell
     * @private
     */
    getTimezoneTranslations: function() {
      var sLocale = this.oLocale.toString();
      var mTranslations = LocaleData._mTimezoneTranslations[sLocale];
      if (!mTranslations) {
        LocaleData._mTimezoneTranslations[sLocale] = mTranslations = _resolveTimezoneTranslationStructure(this._get("timezoneNames"));
      }
      return Object.assign({}, mTranslations);
    },
    /**
     * Get custom datetime pattern for a given skeleton format.
     *
     * The format string does contain pattern symbols (e.g. "yMMMd" or "Hms") and will be converted into the pattern in the used
     * locale, which matches the wanted symbols best. The symbols must be in canonical order, that is:
     * Era (G), Year (y/Y), Quarter (q/Q), Month (M/L), Week (w/W), Day-Of-Week (E/e/c), Day (d/D),
     * Hour (h/H/k/K/), Minute (m), Second (s), Timezone (z/Z/v/V/O/X/x)
     *
     * See https://unicode.org/reports/tr35/tr35-dates.html#availableFormats_appendItems
     *
     * @param {string} sSkeleton the wanted skeleton format for the datetime pattern
     * @param {sap.ui.core.CalendarType} [sCalendarType] the type of calendar. If it's not set, it falls back to the calendar type either set in configuration or calculated from locale.
     * @returns {string} the best matching datetime pattern
     * @since 1.34
     * @public
     */
    getCustomDateTimePattern: function(sSkeleton, sCalendarType) {
      var oAvailableFormats = this._get(getCLDRCalendarName(sCalendarType), "dateTimeFormats", "availableFormats");
      return this._getFormatPattern(sSkeleton, oAvailableFormats, sCalendarType);
    },
    /**
     * Returns the interval format with the given Id (see CLDR documentation for valid Ids)
     * or the fallback format if no interval format with that Id is known.
     *
     * The empty Id ("") might be used to retrieve the interval format fallback.
     *
     * @param {string} sId Id of the interval format, e.g. "d-d"
     * @param {sap.ui.core.CalendarType} [sCalendarType] the type of calendar. If it's not set, it falls back to the calendar type either set in configuration or calculated from locale.
     * @returns {string} interval format string with placeholders {0} and {1}
     * @public
     * @since 1.17.0
     */
    getIntervalPattern: function(sId, sCalendarType) {
      var oIntervalFormats = this._get(getCLDRCalendarName(sCalendarType), "dateTimeFormats", "intervalFormats"), aIdParts, sIntervalId, sDifference, oInterval, sPattern;
      if (sId) {
        aIdParts = sId.split("-");
        sIntervalId = aIdParts[0];
        sDifference = aIdParts[1];
        oInterval = oIntervalFormats[sIntervalId];
        if (oInterval) {
          sPattern = oInterval[sDifference];
          if (sPattern) {
            return sPattern;
          }
        }
      }
      return oIntervalFormats.intervalFormatFallback;
    },
    /**
     * Get combined interval pattern using a given pattern and the fallback interval pattern.
     *
     * If a skeleton based pattern is not available or not wanted, this method can be used to create an interval
     * pattern based on a given pattern, using the fallback interval pattern.
     *
     * @param {string} sPattern the single date pattern to use within the interval pattern
     * @param {sap.ui.core.CalendarType} [sCalendarType] the type of calendar. If it's not set, it falls back to the calendar type either set in configuration or calculated from locale.
     * @returns {string} the calculated interval pattern
     * @since 1.46
     * @public
     */
    getCombinedIntervalPattern: function(sPattern, sCalendarType) {
      const oIntervalFormats = this._get(getCLDRCalendarName(sCalendarType), "dateTimeFormats", "intervalFormats");
      const [
        /*sAll*/
        ,
        sTextBefore,
        sTextBetween,
        sTextAfter
      ] = rFallbackPatternTextParts.exec(oIntervalFormats.intervalFormatFallback);
      return LocaleData._escapeIfNeeded(sTextBefore) + sPattern + LocaleData._escapeIfNeeded(sTextBetween) + sPattern + LocaleData._escapeIfNeeded(sTextAfter);
    },
    /**
     * Get interval pattern for a given skeleton format.
     *
     * The format string does contain pattern symbols (e.g. "yMMMd" or "Hms") and will be converted into the pattern in the used
     * locale, which matches the wanted symbols best. The symbols must be in canonical order, that is:
     * Era (G), Year (y/Y), Quarter (q/Q), Month (M/L), Week (w/W), Day-Of-Week (E/e/c), Day (d/D),
     * Hour (h/H/k/K/), Minute (m), Second (s), Timezone (z/Z/v/V/O/X/x)
     *
     * See https://unicode.org/reports/tr35/tr35-dates.html#availableFormats_appendItems
     *
     * @param {string} sSkeleton the wanted skeleton format for the datetime pattern
     * @param {object|string} vGreatestDiff is either a string which represents the symbol matching the greatest difference in the two dates to format or an object which contains key-value pairs.
     *  The value is always true. The key is one of the date field symbol groups whose value are different between the two dates. The key can only be set with 'Year', 'Quarter', 'Month', 'Week',
     *  'Day', 'DayPeriod', 'Hour', 'Minute', or 'Second'.
     * @param {sap.ui.core.CalendarType} [sCalendarType] the type of calendar. If it's not set, it falls back to the calendar type either set in configuration or calculated from locale.
     * @returns {string|string[]} the best matching interval pattern if interval difference is given otherwise an array with all possible interval patterns which match the given skeleton format
     * @since 1.46
     * @public
     */
    getCustomIntervalPattern: function(sSkeleton, vGreatestDiff, sCalendarType) {
      var oAvailableFormats = this._get(getCLDRCalendarName(sCalendarType), "dateTimeFormats", "intervalFormats");
      return this._getFormatPattern(sSkeleton, oAvailableFormats, sCalendarType, vGreatestDiff);
    },
    /* Helper functions for skeleton pattern processing */
    _getFormatPattern: function(sSkeleton, oAvailableFormats, sCalendarType, vDiff) {
      var vPattern, aPatterns, oIntervalFormats;
      if (!vDiff) {
        vPattern = oAvailableFormats[sSkeleton];
      } else if (typeof vDiff === "string") {
        if (vDiff == "j" || vDiff == "J") {
          vDiff = this.getPreferredHourSymbol();
        }
        oIntervalFormats = oAvailableFormats[sSkeleton];
        vPattern = oIntervalFormats && oIntervalFormats[vDiff];
      }
      if (vPattern) {
        if (typeof vPattern === "object") {
          aPatterns = Object.keys(vPattern).map(function(sKey) {
            return vPattern[sKey];
          });
        } else {
          return vPattern;
        }
      }
      if (!aPatterns) {
        aPatterns = this._createFormatPattern(sSkeleton, oAvailableFormats, sCalendarType, vDiff);
      }
      if (aPatterns && aPatterns.length === 1) {
        return aPatterns[0];
      }
      return aPatterns;
    },
    _createFormatPattern: function(sSkeleton, oAvailableFormats, sCalendarType, vDiff) {
      var aTokens = this._parseSkeletonFormat(sSkeleton), aPatterns, oBestMatch = this._findBestMatch(aTokens, sSkeleton, oAvailableFormats), oToken2, oAvailableDateTimeFormats, oSymbol, oGroup, sPattern, sSinglePattern, sDiffSymbol, sDiffGroup, rMixedSkeleton = /^([GyYqQMLwWEecdD]+)([hHkKjJmszZvVOXx]+)$/, bSingleDate, i;
      if (vDiff) {
        if (typeof vDiff === "string") {
          sDiffGroup = mCLDRSymbols[vDiff] ? mCLDRSymbols[vDiff].group : "";
          if (sDiffGroup) {
            bSingleDate = mCLDRSymbolGroups[sDiffGroup].index > aTokens[aTokens.length - 1].index;
          }
          sDiffSymbol = vDiff;
        } else {
          bSingleDate = true;
          if (aTokens[0].symbol === "y" && oBestMatch && oBestMatch.pattern.G) {
            oSymbol = mCLDRSymbols["G"];
            oGroup = mCLDRSymbolGroups[oSymbol.group];
            aTokens.splice(0, 0, {
              symbol: "G",
              group: oSymbol.group,
              match: oSymbol.match,
              index: oGroup.index,
              field: oGroup.field,
              length: 1
            });
          }
          for (i = aTokens.length - 1; i >= 0; i--) {
            oToken2 = aTokens[i];
            if (vDiff[oToken2.group]) {
              bSingleDate = false;
              break;
            }
          }
          for (i = 0; i < aTokens.length; i++) {
            oToken2 = aTokens[i];
            if (vDiff[oToken2.group]) {
              sDiffSymbol = oToken2.symbol;
              break;
            }
          }
          if ((sDiffSymbol == "h" || sDiffSymbol == "K") && vDiff.DayPeriod) {
            sDiffSymbol = "a";
          }
        }
        if (bSingleDate) {
          return [this.getCustomDateTimePattern(sSkeleton, sCalendarType)];
        }
        if (oBestMatch && oBestMatch.missingTokens.length === 0) {
          sPattern = oBestMatch.pattern[sDiffSymbol];
          if (sPattern && oBestMatch.distance > 0) {
            sPattern = this._expandFields(sPattern, oBestMatch.patternTokens, aTokens);
          }
        }
        if (!sPattern) {
          oAvailableDateTimeFormats = this._get(getCLDRCalendarName(sCalendarType), "dateTimeFormats", "availableFormats");
          if (rMixedSkeleton.test(sSkeleton) && "ahHkKjJms".indexOf(sDiffSymbol) >= 0) {
            sPattern = this._getMixedFormatPattern(sSkeleton, oAvailableDateTimeFormats, sCalendarType, vDiff);
          } else {
            sSinglePattern = this._getFormatPattern(sSkeleton, oAvailableDateTimeFormats, sCalendarType);
            sPattern = this.getCombinedIntervalPattern(sSinglePattern, sCalendarType);
          }
        }
        aPatterns = [sPattern];
      } else if (!oBestMatch) {
        sPattern = sSkeleton;
        aPatterns = [sPattern];
      } else {
        if (typeof oBestMatch.pattern === "string") {
          aPatterns = [oBestMatch.pattern];
        } else if (typeof oBestMatch.pattern === "object") {
          aPatterns = [];
          for (var sKey in oBestMatch.pattern) {
            sPattern = oBestMatch.pattern[sKey];
            aPatterns.push(sPattern);
          }
        }
        if (oBestMatch.distance > 0) {
          if (oBestMatch.missingTokens.length > 0) {
            if (rMixedSkeleton.test(sSkeleton)) {
              aPatterns = [this._getMixedFormatPattern(sSkeleton, oAvailableFormats, sCalendarType)];
            } else {
              aPatterns = this._expandFields(aPatterns, oBestMatch.patternTokens, aTokens);
              aPatterns = this._appendItems(aPatterns, oBestMatch.missingTokens, sCalendarType);
            }
          } else {
            aPatterns = this._expandFields(aPatterns, oBestMatch.patternTokens, aTokens);
          }
        }
      }
      if (sSkeleton.indexOf("J") >= 0) {
        aPatterns.forEach(function(sPattern2, iIndex) {
          aPatterns[iIndex] = sPattern2.replace(/ ?[abB](?=([^']*'[^']*')*[^']*)$/g, "");
        });
      }
      return aPatterns;
    },
    _parseSkeletonFormat: function(sSkeleton) {
      var aTokens = [], oToken2 = {
        index: -1
      }, sSymbol, oSymbol, oGroup;
      for (var i = 0; i < sSkeleton.length; i++) {
        sSymbol = sSkeleton.charAt(i);
        if (sSymbol == "j" || sSymbol == "J") {
          sSymbol = this.getPreferredHourSymbol();
        }
        if (sSymbol == oToken2.symbol) {
          oToken2.length++;
          continue;
        }
        oSymbol = mCLDRSymbols[sSymbol];
        oGroup = mCLDRSymbolGroups[oSymbol.group];
        if (oSymbol.group == "Other" || oGroup.diffOnly) {
          throw new Error("Symbol '" + sSymbol + "' is not allowed in skeleton format '" + sSkeleton + "'");
        }
        if (oGroup.index <= oToken2.index) {
          throw new Error("Symbol '" + sSymbol + "' at wrong position or duplicate in skeleton format '" + sSkeleton + "'");
        }
        oToken2 = {
          symbol: sSymbol,
          group: oSymbol.group,
          match: oSymbol.match,
          index: oGroup.index,
          field: oGroup.field,
          length: 1
        };
        aTokens.push(oToken2);
      }
      return aTokens;
    },
    _findBestMatch: function(aTokens, sSkeleton, oAvailableFormats) {
      var aTestTokens, aMissingTokens, oToken2, oTestToken, iTest, iDistance, bMatch, iFirstDiffPos, oTokenSymbol, oTestTokenSymbol, oBestMatch = {
        distance: 1e4,
        firstDiffPos: -1
      };
      for (var sTestSkeleton in oAvailableFormats) {
        if (sTestSkeleton === "intervalFormatFallback" || sTestSkeleton.indexOf("B") > -1) {
          continue;
        }
        aTestTokens = this._parseSkeletonFormat(sTestSkeleton);
        iDistance = 0;
        aMissingTokens = [];
        bMatch = true;
        if (aTokens.length < aTestTokens.length) {
          continue;
        }
        iTest = 0;
        iFirstDiffPos = aTokens.length;
        for (var i = 0; i < aTokens.length; i++) {
          oToken2 = aTokens[i];
          oTestToken = aTestTokens[iTest];
          if (iFirstDiffPos === aTokens.length) {
            iFirstDiffPos = i;
          }
          if (oTestToken) {
            oTokenSymbol = mCLDRSymbols[oToken2.symbol];
            oTestTokenSymbol = mCLDRSymbols[oTestToken.symbol];
            if (oToken2.symbol === oTestToken.symbol) {
              if (oToken2.length === oTestToken.length) {
                if (iFirstDiffPos === i) {
                  iFirstDiffPos = aTokens.length;
                }
              } else {
                if (oToken2.length < oTokenSymbol.numericCeiling ? oTestToken.length < oTestTokenSymbol.numericCeiling : oTestToken.length >= oTestTokenSymbol.numericCeiling) {
                  iDistance += Math.abs(oToken2.length - oTestToken.length);
                } else {
                  iDistance += 5;
                }
              }
              iTest++;
              continue;
            } else {
              if (oToken2.match == oTestToken.match) {
                iDistance += Math.abs(oToken2.length - oTestToken.length) + 10;
                iTest++;
                continue;
              }
            }
          }
          aMissingTokens.push(oToken2);
          iDistance += 50 - i;
        }
        if (iTest < aTestTokens.length) {
          bMatch = false;
        }
        if (bMatch && (iDistance < oBestMatch.distance || iDistance === oBestMatch.distance && iFirstDiffPos > oBestMatch.firstDiffPos)) {
          oBestMatch.distance = iDistance;
          oBestMatch.firstDiffPos = iFirstDiffPos;
          oBestMatch.missingTokens = aMissingTokens;
          oBestMatch.pattern = oAvailableFormats[sTestSkeleton];
          oBestMatch.patternTokens = aTestTokens;
        }
      }
      if (oBestMatch.pattern) {
        return oBestMatch;
      }
    },
    _expandFields: function(vPattern, aPatternTokens, aTokens) {
      var bSinglePattern = typeof vPattern === "string";
      var aPatterns;
      if (bSinglePattern) {
        aPatterns = [vPattern];
      } else {
        aPatterns = vPattern;
      }
      var aResult = aPatterns.map(function(sPattern) {
        var mGroups = {}, mPatternGroups = {}, sResultPatterm = "", bQuoted = false, i = 0, iSkeletonLength, iPatternLength, iBestLength, iNewLength, oSkeletonToken, oBestToken, oSymbol, sChar;
        aTokens.forEach(function(oToken2) {
          mGroups[oToken2.group] = oToken2;
        });
        aPatternTokens.forEach(function(oToken2) {
          mPatternGroups[oToken2.group] = oToken2;
        });
        while (i < sPattern.length) {
          sChar = sPattern.charAt(i);
          if (bQuoted) {
            sResultPatterm += sChar;
            if (sChar == "'") {
              bQuoted = false;
            }
          } else {
            oSymbol = mCLDRSymbols[sChar];
            if (oSymbol && mGroups[oSymbol.group] && mPatternGroups[oSymbol.group]) {
              oSkeletonToken = mGroups[oSymbol.group];
              oBestToken = mPatternGroups[oSymbol.group];
              iSkeletonLength = oSkeletonToken.length;
              iBestLength = oBestToken.length;
              iPatternLength = 1;
              while (sPattern.charAt(i + 1) == sChar) {
                i++;
                iPatternLength++;
              }
              if (iSkeletonLength === iBestLength || (iSkeletonLength < oSymbol.numericCeiling ? iPatternLength >= oSymbol.numericCeiling : iPatternLength < oSymbol.numericCeiling)) {
                iNewLength = iPatternLength;
              } else {
                iNewLength = Math.max(iPatternLength, iSkeletonLength);
              }
              for (var j = 0; j < iNewLength; j++) {
                sResultPatterm += sChar;
              }
            } else {
              sResultPatterm += sChar;
              if (sChar == "'") {
                bQuoted = true;
              }
            }
          }
          i++;
        }
        return sResultPatterm;
      });
      return bSinglePattern ? aResult[0] : aResult;
    },
    _appendItems: function(aPatterns, aMissingTokens, sCalendarType) {
      var oAppendItems = this._get(getCLDRCalendarName(sCalendarType), "dateTimeFormats", "appendItems");
      aPatterns.forEach((function(sPattern, iIndex) {
        var sDisplayName, sAppendPattern, sAppendField;
        aMissingTokens.forEach((function(oToken2) {
          sAppendPattern = oAppendItems[oToken2.group];
          sDisplayName = "'" + this.getDisplayName(oToken2.field) + "'";
          sAppendField = "";
          for (var i = 0; i < oToken2.length; i++) {
            sAppendField += oToken2.symbol;
          }
          aPatterns[iIndex] = sAppendPattern.replace(/\{0\}/, sPattern).replace(/\{1\}/, sAppendField).replace(/\{2\}/, sDisplayName);
        }).bind(this));
      }).bind(this));
      return aPatterns;
    },
    _getMixedFormatPattern: function(sSkeleton, oAvailableFormats, sCalendarType, vDiff) {
      var rMixedSkeleton = /^([GyYqQMLwWEecdD]+)([hHkKjJmszZvVOXx]+)$/, rWideMonth = /MMMM|LLLL/, rAbbrevMonth = /MMM|LLL/, rWeekDay = /E|e|c/, oResult, sDateSkeleton, sTimeSkeleton, sStyle, sDatePattern, sTimePattern, sDateTimePattern, sResultPattern;
      oResult = rMixedSkeleton.exec(sSkeleton);
      sDateSkeleton = oResult[1];
      sTimeSkeleton = oResult[2];
      sDatePattern = this._getFormatPattern(sDateSkeleton, oAvailableFormats, sCalendarType);
      if (vDiff) {
        sTimePattern = this.getCustomIntervalPattern(sTimeSkeleton, vDiff, sCalendarType);
      } else {
        sTimePattern = this._getFormatPattern(sTimeSkeleton, oAvailableFormats, sCalendarType);
      }
      if (rWideMonth.test(sDateSkeleton)) {
        sStyle = rWeekDay.test(sDateSkeleton) ? "full" : "long";
      } else if (rAbbrevMonth.test(sDateSkeleton)) {
        sStyle = "medium";
      } else {
        sStyle = "short";
      }
      sDateTimePattern = this.getDateTimePattern(sStyle, sCalendarType);
      sResultPattern = sDateTimePattern.replace(/\{1\}/, sDatePattern).replace(/\{0\}/, sTimePattern);
      return sResultPattern;
    },
    /**
     * Get number symbol "decimal", "group", "plusSign", "minusSign", "percentSign".
     *
     * @param {string} sType the required type of symbol
     * @returns {string} the selected number symbol
     * @public
     */
    getNumberSymbol: function(sType) {
      assert_default(sType == "decimal" || sType == "group" || sType == "plusSign" || sType == "minusSign" || sType == "percentSign", "sType must be decimal, group, plusSign, minusSign or percentSign");
      return this._get("symbols-latn-" + sType);
    },
    /**
     * Get lenient number symbols for "plusSign" or "minusSign".
     *
     * @param {string} sType the required type of symbol
     * @returns {string} the selected lenient number symbols, e.g. "-‒⁻₋−➖﹣"
     * @public
     */
    getLenientNumberSymbols: function(sType) {
      assert_default(sType == "plusSign" || sType == "minusSign", "sType must be plusSign or minusSign");
      return this._get("lenient-scope-number")[sType];
    },
    /**
     * Get decimal format pattern.
     *
     * @returns {string} The pattern
     * @public
     */
    getDecimalPattern: function() {
      return this._get("decimalFormat").standard;
    },
    /**
     * Get currency format pattern.
     *
     * CLDR format pattern:
     *
     * @example standard with currency symbol in front of the number
     * ¤#,##0.00
     * $100,000.00
     * $-100,000.00
     *
     * @example accounting with negative number pattern after the semicolon
     * ¤#,##0.00;(¤#,##0.00)
     * $100,000.00
     * ($100,000.00)
     *
     * @see https://cldr.unicode.org/translation/numbers-currency/number-patterns
     *
     * @param {string} sContext the context of the currency pattern (standard or accounting)
     * @returns {string} The pattern
     * @public
     */
    getCurrencyPattern: function(sContext) {
      return this._get("currencyFormat")[sContext] || this._get("currencyFormat").standard;
    },
    getCurrencySpacing: function(sPosition) {
      return this._get("currencyFormat", "currencySpacing", sPosition === "after" ? "afterCurrency" : "beforeCurrency");
    },
    /**
     * Get percent format pattern.
     *
     * @returns {string} The pattern
     * @public
     */
    getPercentPattern: function() {
      return this._get("percentFormat").standard;
    },
    /**
     * Get miscellaneous pattern.
     *
     * @param {string} sName the name of the misc pattern, can be "approximately", "atLeast", "atMost" or "range"
     * @returns {string} The pattern
     * @public
     */
    getMiscPattern: function(sName) {
      assert_default(sName == "approximately" || sName == "atLeast" || sName == "atMost" || sName == "range", "sName must be approximately, atLeast, atMost or range");
      return this._get("miscPattern")[sName];
    },
    /**
     * Returns the required minimal number of days for the first week of a year.
     *
     * This is the minimal number of days of the week which must be contained in the new year
     * for the week to become the first week of the year. Depending on the country, this
     * is just a single day (in the US) or at least 4 days (in most of Europe).
     *
     * All week data information in the CLDR is provided for territories (countries).
     * If the locale of this LocaleData doesn't contain country information (e.g. if it
     * contains only a language), then the "likelySubtag" information of the CLDR
     * is taken into account to guess the "most likely" territory for the locale.
     *
     * @returns {int} minimal number of days
     * @public
     */
    getMinimalDaysInFirstWeek: function() {
      return this._get("weekData-minDays");
    },
    /**
     * Returns the day that usually is regarded as the first day
     * of a week in the current locale.
     *
     * Days are encoded as integer where Sunday=0, Monday=1 etc.
     *
     * All week data information in the CLDR is provided for territories (countries).
     * If the locale of this LocaleData doesn't contain country information (e.g. if it
     * contains only a language), then the "likelySubtag" information of the CLDR
     * is taken into account to guess the "most likely" territory for the locale.
     *
     * @returns {int} first day of week
     * @public
     */
    getFirstDayOfWeek: function() {
      return this._get("weekData-firstDay");
    },
    /**
     * Returns the first day of a weekend for the given locale.
     *
     * Days are encoded in the same way as for {@link #getFirstDayOfWeek}.
     *
     * All week data information in the CLDR is provided for territories (countries).
     * If the locale of this LocaleData doesn't contain country information (e.g. if it
     * contains only a language), then the "likelySubtag" information of the CLDR
     * is taken into account to guess the "most likely" territory for the locale.
     *
     * @returns {int} first day of weekend
     * @public
     */
    getWeekendStart: function() {
      return this._get("weekData-weekendStart");
    },
    /**
     * Returns the last day of a weekend for the given locale.
     *
     * Days are encoded in the same way as for {@link #getFirstDayOfWeek}.
     *
     * All week data information in the CLDR is provided for territories (countries).
     * If the locale of this LocaleData doesn't contain country information (e.g. if it
     * contains only a language), then the "likelySubtag" information of the CLDR
     * is taken into account to guess the "most likely" territory for the locale.
     *
     * @returns {int} last day of weekend
     * @public
     */
    getWeekendEnd: function() {
      return this._get("weekData-weekendEnd");
    },
    /**
     * Returns a map of custom currency codes, defined via global configuration.
     * @returns {object} map of custom currency codes, e.g.
     * {
     *     "AUD": "AUD",
     *     "BRL": "BRL",
     *     "EUR": "EUR",
     *     "GBP": "GBP",
     * }
     * @private
     * @ui5-restricted sap.ui.core.format.NumberFormat
     * @since 1.63
     */
    getCustomCurrencyCodes: function() {
      var mCustomCurrencies = this._get("currency") || {}, mCustomCurrencyCodes = {};
      Object.keys(mCustomCurrencies).forEach(function(sCurrencyKey) {
        mCustomCurrencyCodes[sCurrencyKey] = sCurrencyKey;
      });
      return mCustomCurrencyCodes;
    },
    /**
     * Returns the number of digits of the specified currency.
     *
     * @param {string} sCurrency ISO 4217 currency code
     * @returns {int} digits of the currency
     * @public
     * @since 1.21.1
     */
    getCurrencyDigits: function(sCurrency) {
      var mCustomCurrencies = this._get("currency");
      if (mCustomCurrencies) {
        if (mCustomCurrencies[sCurrency] && mCustomCurrencies[sCurrency].hasOwnProperty("digits")) {
          return mCustomCurrencies[sCurrency].digits;
        } else if (mCustomCurrencies["DEFAULT"] && mCustomCurrencies["DEFAULT"].hasOwnProperty("digits")) {
          return mCustomCurrencies["DEFAULT"].digits;
        }
      }
      var iDigits = this._get("currencyDigits", sCurrency);
      if (iDigits == null) {
        iDigits = this._get("currencyDigits", "DEFAULT");
        if (iDigits == null) {
          iDigits = 2;
        }
      }
      return iDigits;
    },
    /**
     * Returns the currency symbol for the specified currency, if no symbol is found the ISO 4217 currency code is returned.
     *
     * @param {string} sCurrency ISO 4217 currency code
     * @returns {string} the currency symbol
     * @public
     * @since 1.21.1
     */
    getCurrencySymbol: function(sCurrency) {
      var oCurrencySymbols = this.getCurrencySymbols();
      return oCurrencySymbols && oCurrencySymbols[sCurrency] || sCurrency;
    },
    /**
     * Returns the currency code which is corresponded with the given currency symbol.
     *
     * @param {string} sCurrencySymbol The currency symbol which needs to be converted to currency code
     * @return {string} The corresponded currency code defined for the given currency symbol. The given currency symbol is returned if no currency code can be found by using the given currency symbol.
     * @public
     * @since 1.27.0
     */
    getCurrencyCodeBySymbol: function(sCurrencySymbol) {
      var oCurrencySymbols = this._get("currencySymbols"), sCurrencyCode;
      for (sCurrencyCode in oCurrencySymbols) {
        if (oCurrencySymbols[sCurrencyCode] === sCurrencySymbol) {
          return sCurrencyCode;
        }
      }
      return sCurrencySymbol;
    },
    /**
     * Returns the currency symbols available for this locale.
     * Currency symbols get accumulated by custom currency symbols.
     *
     * @returns {Object<string, string>} the map of all currency symbols available in this locale, e.g.
     * {
     *     "AUD": "A$",
     *     "BRL": "R$",
     *     "EUR": "€",
     *     "GBP": "£",
     * }
     * @public
     * @since 1.60
     */
    getCurrencySymbols: function() {
      var mCustomCurrencies = this._get("currency"), mCustomCurrencySymbols = {}, sIsoCode;
      for (var sCurrencyKey in mCustomCurrencies) {
        sIsoCode = mCustomCurrencies[sCurrencyKey].isoCode;
        if (mCustomCurrencies[sCurrencyKey].symbol) {
          mCustomCurrencySymbols[sCurrencyKey] = mCustomCurrencies[sCurrencyKey].symbol;
        } else if (sIsoCode) {
          mCustomCurrencySymbols[sCurrencyKey] = this._get("currencySymbols")[sIsoCode];
        }
      }
      return Object.assign({}, this._get("currencySymbols"), mCustomCurrencySymbols);
    },
    /**
     * Retrieves the localized display name of a unit by sUnit, e.g. "duration-hour".
     * @param {string} sUnit the unit key, e.g. "duration-hour"
     * @return {string} The localized display name for the requested unit, e.g. <code>"Hour"</code>. Return empty string <code>""</code> if not found
     * @public
     * @since 1.54
     */
    getUnitDisplayName: function(sUnit) {
      var mUnitFormat = this.getUnitFormat(sUnit);
      return mUnitFormat && mUnitFormat["displayName"] || "";
    },
    /**
     * Returns relative time patterns for the given scales as an array of objects containing scale, value and pattern.
     *
     * The array may contain the following values: "year", "month", "week", "day", "hour", "minute" and "second". If
     * no scales are given, patterns for all available scales will be returned.
     *
     * The return array will contain objects looking like:
     * <pre>
     * {
     *     scale: "minute",
     *     sign: 1,
     *     pattern: "in {0} minutes"
     * }
     * </pre>
     *
     * @param {string[]} aScales The scales for which the available patterns should be returned
     * @param {string} [sStyle="wide"] @since 1.32.10, 1.34.4 The style of the scale patterns. The valid values are "wide", "short" and "narrow".
     * @returns {object[]} An array of all relative time patterns
     * @public
     * @since 1.34
     */
    getRelativePatterns: function(aScales, sStyle) {
      if (sStyle === void 0) {
        sStyle = "wide";
      }
      assert_default(sStyle === "wide" || sStyle === "short" || sStyle === "narrow", "sStyle is only allowed to be set with 'wide', 'short' or 'narrow'");
      var aPatterns = [], aPluralCategories = this.getPluralCategories(), oScale, oTimeEntry, iValue, iSign;
      if (!aScales) {
        aScales = ["year", "month", "week", "day", "hour", "minute", "second"];
      }
      aScales.forEach((function(sScale) {
        oScale = this._get("dateFields", sScale + "-" + sStyle);
        for (var sEntry in oScale) {
          if (sEntry.indexOf("relative-type-") === 0) {
            iValue = parseInt(sEntry.substr(14));
            aPatterns.push({
              scale: sScale,
              value: iValue,
              pattern: oScale[sEntry]
            });
          } else if (sEntry.indexOf("relativeTime-type-") == 0) {
            oTimeEntry = oScale[sEntry];
            iSign = sEntry.substr(18) === "past" ? -1 : 1;
            aPluralCategories.forEach(function(sKey) {
              var sPattern = oTimeEntry["relativeTimePattern-count-" + sKey];
              if (sPattern) {
                aPatterns.push({
                  scale: sScale,
                  sign: iSign,
                  pattern: sPattern
                });
              }
            });
          }
        }
      }).bind(this));
      return aPatterns;
    },
    /**
     * Returns the relative format pattern with given scale (year, month, week, ...) and difference value.
     *
     * @param {string} sScale the scale the relative pattern is needed for
     * @param {int} iDiff the difference in the given scale unit
     * @param {boolean} [bFuture] whether a future or past pattern should be used
     * @param {string} [sStyle="wide"] @since 1.32.10, 1.34.4 the style of the pattern. The valid values are "wide", "short" and "narrow"
     * @returns {string} the relative format pattern
     * @public
     * @since 1.34
     */
    getRelativePattern: function(sScale, iDiff, bFuture, sStyle) {
      var sPattern, oTypes, sKey, sPluralCategory;
      if (typeof bFuture === "string") {
        sStyle = bFuture;
        bFuture = void 0;
      }
      if (bFuture === void 0) {
        bFuture = iDiff > 0;
      }
      if (sStyle === void 0) {
        sStyle = "wide";
      }
      assert_default(sStyle === "wide" || sStyle === "short" || sStyle === "narrow", "sStyle is only allowed to be set with 'wide', 'short' or 'narrow'");
      sKey = sScale + "-" + sStyle;
      if (iDiff === 0 || iDiff === -2 || iDiff === 2) {
        sPattern = this._get("dateFields", sKey, "relative-type-" + iDiff);
      }
      if (!sPattern) {
        oTypes = this._get("dateFields", sKey, "relativeTime-type-" + (bFuture ? "future" : "past"));
        sPluralCategory = this.getPluralCategory(Math.abs(iDiff).toString());
        sPattern = oTypes["relativeTimePattern-count-" + sPluralCategory];
      }
      return sPattern;
    },
    /**
     * Returns the relative resource pattern with unit 'second' (like now, "in {0} seconds", "{0} seconds ago" under locale 'en') based on the given
     * difference value (0 means now, positive value means in the future and negative value means in the past).
     *
     * @param {int} iDiff the difference in seconds
     * @param {string} [sStyle="wide"] @since 1.32.10, 1.34.4 the style of the pattern. The valid values are "wide", "short" and "narrow"
     * @returns {string} the relative resource pattern in unit 'second'
     * @public
     * @since 1.31.0
     */
    getRelativeSecond: function(iDiff, sStyle) {
      return this.getRelativePattern("second", iDiff, sStyle);
    },
    /**
     * Returns the relative resource pattern with unit 'minute' (like "in {0} minute(s)", "{0} minute(s) ago" under locale 'en') based on the given
     * difference value (positive value means in the future and negative value means in the past).
     *
     * There's no pattern defined for 0 difference and the function returns null if 0 is given. In the 0 difference case, you can use the getRelativeSecond
     * function to format the difference using unit 'second'.
     *
     * @param {int} iDiff the difference in minutes
     * @param {string} [sStyle="wide"] @since 1.32.10, 1.34.4 the style of the pattern. The valid values are "wide", "short" and "narrow"
     * @returns {string|null} the relative resource pattern in unit 'minute'. The method returns null if 0 is given as parameter.
     * @public
     * @since 1.31.0
     */
    getRelativeMinute: function(iDiff, sStyle) {
      if (iDiff == 0) {
        return null;
      }
      return this.getRelativePattern("minute", iDiff, sStyle);
    },
    /**
     * Returns the relative resource pattern with unit 'hour' (like "in {0} hour(s)", "{0} hour(s) ago" under locale 'en') based on the given
     * difference value (positive value means in the future and negative value means in the past).
     *
     * There's no pattern defined for 0 difference and the function returns null if 0 is given. In the 0 difference case, you can use the getRelativeMinute or getRelativeSecond
     * function to format the difference using unit 'minute' or 'second'.
     *
     * @param {int} iDiff the difference in hours
     * @param {string} [sStyle="wide"] @since 1.32.10, 1.34.4 the style of the pattern. The valid values are "wide", "short" and "narrow"
     * @returns {string|null} the relative resource pattern in unit 'hour'. The method returns null if 0 is given as parameter.
     * @public
     * @since 1.31.0
     */
    getRelativeHour: function(iDiff, sStyle) {
      if (iDiff == 0) {
        return null;
      }
      return this.getRelativePattern("hour", iDiff, sStyle);
    },
    /**
     * Returns the relative day resource pattern (like "Today", "Yesterday", "{0} days ago") based on the given
     * difference of days (0 means today, 1 means tomorrow, -1 means yesterday, ...).
     *
     * @param {int} iDiff the difference in days
     * @param {string} [sStyle="wide"] @since 1.32.10, 1.34.4 the style of the pattern. The valid values are "wide", "short" and "narrow"
     * @returns {string} the relative day resource pattern
     * @public
     * @since 1.25.0
     */
    getRelativeDay: function(iDiff, sStyle) {
      return this.getRelativePattern("day", iDiff, sStyle);
    },
    /**
     * Returns the relative week resource pattern (like "This week", "Last week", "{0} weeks ago") based on the given
     * difference of weeks (0 means this week, 1 means next week, -1 means last week, ...).
     *
     * @param {int} iDiff the difference in weeks
     * @param {string} [sStyle="wide"] @since 1.32.10, 1.34.4 the style of the pattern. The valid values are "wide", "short" and "narrow"
     * @returns {string} the relative week resource pattern
     * @public
     * @since 1.31.0
     */
    getRelativeWeek: function(iDiff, sStyle) {
      return this.getRelativePattern("week", iDiff, sStyle);
    },
    /**
     * Returns the relative month resource pattern (like "This month", "Last month", "{0} months ago") based on the given
     * difference of months (0 means this month, 1 means next month, -1 means last month, ...).
     *
     * @param {int} iDiff the difference in months
     * @param {string} [sStyle="wide"] @since 1.32.10, 1.34.4 the style of the pattern. The valid values are "wide", "short" and "narrow"
     * @returns {string} the relative month resource pattern
     * @public
     * @since 1.25.0
     */
    getRelativeMonth: function(iDiff, sStyle) {
      return this.getRelativePattern("month", iDiff, sStyle);
    },
    /**
     * Returns the display name for a time unit (second, minute, hour, day, week, month, year).
     *
     * @param {string} sType Type (second, minute, hour, day, week, month, year)
     * @param {string} [sStyle="wide"] @since 1.32.10, 1.34.4 the style of the pattern. The valid values are "wide", "short" and "narrow"
     * returns {string} display name
     * @public
     * @since 1.34.0
     */
    getDisplayName: function(sType, sStyle) {
      assert_default(sType == "second" || sType == "minute" || sType == "hour" || sType == "zone" || sType == "day" || sType == "weekday" || sType == "week" || sType == "month" || sType == "quarter" || sType == "year" || sType == "era", "sType must be second, minute, hour, zone, day, weekday, week, month, quarter, year, era");
      if (sStyle === void 0) {
        sStyle = "wide";
      }
      assert_default(sStyle === "wide" || sStyle === "short" || sStyle === "narrow", "sStyle is only allowed to be set with 'wide', 'short' or 'narrow'");
      var aSingleFormFields = ["era", "weekday", "zone"], sKey = aSingleFormFields.indexOf(sType) === -1 ? sType + "-" + sStyle : sType;
      return this._get("dateFields", sKey, "displayName");
    },
    /**
     * Returns the relative year resource pattern (like "This year", "Last year", "{0} year ago") based on the given
     * difference of years (0 means this year, 1 means next year, -1 means last year, ...).
     *
     * @param {int} iDiff the difference in years
     * @param {string} [sStyle="wide"] @since 1.32.10, 1.34.4 the style of the pattern. The valid values are "wide", "short" and "narrow"
     * @returns {string} the relative year resource pattern
     * @public
     * @since 1.25.0
     */
    getRelativeYear: function(iDiff, sStyle) {
      return this.getRelativePattern("year", iDiff, sStyle);
    },
    /**
     * Returns the short decimal formats (like 1K, 1M....).
     *
     * @param {string} sStyle short or long
     * @param {string} sNumber 1000, 10000 ...
     * @param {string} sPlural one or other (if not exists other is used)
     * @returns {string} decimal format
     * @public
     * @since 1.25.0
     */
    getDecimalFormat: function(sStyle, sNumber, sPlural) {
      var sFormat;
      var oFormats;
      switch (sStyle) {
        case "long":
          oFormats = this._get("decimalFormat-long");
          break;
        default:
          oFormats = this._get("decimalFormat-short");
          break;
      }
      if (oFormats) {
        var sName = sNumber + "-" + sPlural;
        sFormat = oFormats[sName];
        if (!sFormat) {
          sName = sNumber + "-other";
          sFormat = oFormats[sName];
        }
      }
      return sFormat;
    },
    /**
     * Returns the short currency formats (like 1K USD, 1M USD....).
     *
     * @param {string} sStyle short
     * @param {string} sNumber 1000, 10000 ...
     * @param {string} sPlural one or other (if not exists other is used)
     * @returns {string} decimal format
     * @public
     * @since 1.51.0
     */
    getCurrencyFormat: function(sStyle, sNumber, sPlural) {
      var sFormat;
      var oFormats = this._get("currencyFormat-" + sStyle);
      if (!oFormats) {
        if (sStyle === "sap-short") {
          throw new Error('Failed to get CLDR data for property "currencyFormat-sap-short"');
        }
        oFormats = this._get("currencyFormat-short");
      }
      if (oFormats) {
        var sName = sNumber + "-" + sPlural;
        sFormat = oFormats[sName];
        if (!sFormat) {
          sName = sNumber + "-other";
          sFormat = oFormats[sName];
        }
      }
      return sFormat;
    },
    /**
     * Returns a map containing patterns for formatting lists
     *
     *@param {string} [sType='standard'] The type of the list pattern. It can be 'standard' or 'or'.
     *@param {string} [sStyle='wide'] The style of the list pattern. It can be 'wide' or 'short'.
    * @return {object} Map with list patterns
     */
    getListFormat: function(sType, sStyle) {
      var oFormats = this._get("listPattern-" + (sType || "standard") + "-" + (sStyle || "wide"));
      if (oFormats) {
        return oFormats;
      }
      return {};
    },
    /**
     * Retrieves the unit format pattern for a specific unit name considering the unit mappings.
     * @param {string} sUnit unit name, e.g. "duration-hour" or "my"
     * @return {object} The unit format configuration for the given unit name
     * @public
     * @since 1.54
     * @see sap.ui.core.LocaleData#getUnitFromMapping
     */
    getResolvedUnitFormat: function(sUnit) {
      sUnit = this.getUnitFromMapping(sUnit) || sUnit;
      return this.getUnitFormat(sUnit);
    },
    /**
     * Retrieves the unit format pattern for a specific unit name.
     *
     * Note: Does not take unit mapping into consideration.
     * @param {string} sUnit unit name, e.g. "duration-hour"
     * @return {object} The unit format configuration for the given unit name
     * @public
     * @since 1.54
     */
    getUnitFormat: function(sUnit) {
      var oResult = this._get("units", "short", sUnit);
      if (!oResult && mLegacyUnit2CurrentUnit[sUnit]) {
        oResult = this._get("units", "short", mLegacyUnit2CurrentUnit[sUnit]);
      }
      return oResult;
    },
    /**
     * Retrieves all unit format patterns merged.
     *
     * Note: Does not take unit mapping into consideration.
     * @return {object} The unit format patterns
     * @public
     * @since 1.54
     */
    getUnitFormats: function() {
      return this._getMerged("units", "short");
    },
    /**
     * Looks up the unit from defined unit mapping.
     * E.g. for defined unit mapping
     * <code>
     * {
     *  "my": "my-custom-unit",
     *  "cm": "length-centimeter"
     * }
     * </code>
     *
     * Call:
     * <code>getUnitFromMapping("my")</code> would result in <code>"my-custom-unit"</code>
     * @param {string} sMapping mapping identifier
     * @return {string} unit from the mapping
     * @public
     * @since 1.54
     */
    getUnitFromMapping: function(sMapping) {
      return this._get("unitMappings", sMapping);
    },
    /**
     * Returns array of eras.
     *
     * @param {string} sWidth the style of the era name. It can be 'wide', 'abbreviated' or 'narrow'
     * @param {sap.ui.core.CalendarType} [sCalendarType] the type of calendar
     * @return {array} the array of eras
     * @public
     * @since 1.32.0
     */
    getEras: function(sWidth, sCalendarType) {
      assert_default(sWidth == "wide" || sWidth == "abbreviated" || sWidth == "narrow", "sWidth must be wide, abbreviate or narrow");
      var oEras = this._get(getCLDRCalendarName(sCalendarType), "era-" + sWidth), aEras = [];
      for (var i in oEras) {
        aEras[parseInt(i)] = oEras[i];
      }
      return aEras;
    },
    /**
     * Returns the map of era IDs to era dates.
     *
     * @param {sap.ui.core.CalendarType} [sCalendarType] the type of calendar
     * @return {array} the array of eras containing objects with either an _end or _start property with a date
     * @public
     * @since 1.32.0
     */
    getEraDates: function(sCalendarType) {
      var oEraDates = this._get("eras-" + sCalendarType.toLowerCase()), aEraDates = [];
      for (var i in oEraDates) {
        aEraDates[parseInt(i)] = oEraDates[i];
      }
      return aEraDates;
    },
    /**
     * Returns the defined pattern for representing the calendar week number.
     *
     * @param {string} sStyle the style of the pattern. It can only be either "wide" or "narrow".
     * @param {int} iWeekNumber the week number
     * @return {string} the week number string
     *
     * @public
     * @since 1.32.0
     */
    getCalendarWeek: function(sStyle, iWeekNumber) {
      assert_default(sStyle == "wide" || sStyle == "narrow", "sStyle must be wide or narrow");
      var oMessageBundle = Core_default.getLibraryResourceBundle("sap.ui.core", this.oLocale.toString()), sKey = "date.week.calendarweek." + sStyle;
      return oMessageBundle.getText(sKey, iWeekNumber ? [iWeekNumber] : void 0);
    },
    /**
     * Whether 1 January is the first day of the first calendar week.
     * This is the definition of the calendar week in the US.
     *
     * @return {boolean} true if the first week of the year starts with 1 January.
     * @public
     * @since 1.92.0
     */
    firstDayStartsFirstWeek: function() {
      return this.oLocale.getLanguage() === "en" && this.oLocale.getRegion() === "US";
    },
    /**
     * Returns the preferred calendar type for the current locale which exists in {@link sap.ui.core.CalendarType}
     *
     * @returns {sap.ui.core.CalendarType} the preferred calendar type
     * @public
     * @since 1.28.6
     */
    getPreferredCalendarType: function() {
      var sCalendarName, sType, i, aCalendars = this._get("calendarPreference") || [];
      for (i = 0; i < aCalendars.length; i++) {
        sCalendarName = aCalendars[i].split("-")[0];
        for (sType in CalendarType_default3) {
          if (sCalendarName === sType.toLowerCase()) {
            return sType;
          }
        }
      }
      return CalendarType_default3.Gregorian;
    },
    /**
     * Returns the preferred hour pattern symbol (h for 12, H for 24 hours) for the current locale.
     *
     * @returns {string} the preferred hour symbol
     * @public
     * @since 1.34
     */
    getPreferredHourSymbol: function() {
      return this._get("timeData", "_preferred");
    },
    /**
     * Returns an array of all plural categories available in this language.
     *
     * @returns {array} The array of plural categories
     * @public
     * @since 1.50
     */
    getPluralCategories: function() {
      var oPlurals = this._get("plurals"), aCategories = Object.keys(oPlurals);
      aCategories.push("other");
      return aCategories;
    },
    /**
     * Returns the plural category (zero, one, two, few, many or other) for the given number value.
     * The number must be passed as an unformatted number string with dot as decimal
     * separator (for example "12345.67"). To determine the correct plural category, it
     * is also necessary to keep the same number of decimal digits as given in the formatted
     * output string. For example "1" and "1.0" could be in different plural categories as
     * the number of decimal digits is different.
     *
     * Compact numbers (for example in "short" format) must be provided in the
     * locale-independent CLDR compact notation. This notation uses the plural rule operand "c"
     * for the compact decimal exponent, for example "1.2c3" for "1.2K" (1200) or "4c6" for
     * "4M" (4000000).
     *
     * Note that the operand "e" is deprecated, but is a synonym corresponding to the CLDR
     * specification for "c" and may be redefined in the future.
     *
     * @param {string|number} vNumber The number to find the plural category for
     * @returns {string} The plural category
     * @public
     * @since 1.50
     */
    getPluralCategory: function(vNumber) {
      var sNumber = typeof vNumber === "number" ? vNumber.toString() : vNumber, oPlurals = this._get("plurals");
      if (!this._pluralTest) {
        this._pluralTest = {};
      }
      for (var sCategory in oPlurals) {
        var fnTest = this._pluralTest[sCategory];
        if (!fnTest) {
          fnTest = this._parsePluralRule(oPlurals[sCategory]);
          this._pluralTest[sCategory] = fnTest;
        }
        if (fnTest(sNumber).bMatch) {
          return sCategory;
        }
      }
      return "other";
    },
    /**
     * Parses a language plural rule as specified in
     * https://unicode.org/reports/tr35/tr35-numbers.html#table-plural-operand-meanings
     *
     * @param {string} sRule The plural rule as a string
     * @returns {function(string)} A function to determine for a number given as string parameter if it matches the
     *   plural rule.
     *
     * @private
     */
    _parsePluralRule: function(sRule) {
      var OP_OR = "or", OP_AND = "and", OP_MOD = "%", OP_EQ = "=", OP_NEQ = "!=", OPD_N = "n", OPD_I = "i", OPD_F = "f", OPD_T = "t", OPD_V = "v", OPD_W = "w", OPD_C = "c", OPD_E = "e", RANGE = "..", SEP = ",";
      var i = 0, aTokens;
      aTokens = sRule.split(" ");
      function accept(sToken) {
        if (aTokens[i] === sToken) {
          i++;
          return true;
        }
        return false;
      }
      function consume() {
        var sToken = aTokens[i];
        i++;
        return sToken;
      }
      function or_condition() {
        var fnAnd, fnOr2;
        fnAnd = and_condition();
        if (accept(OP_OR)) {
          fnOr2 = or_condition();
          return function(o) {
            return fnAnd(o) || fnOr2(o);
          };
        }
        return fnAnd;
      }
      function and_condition() {
        var fnRelation, fnAnd;
        fnRelation = relation();
        if (accept(OP_AND)) {
          fnAnd = and_condition();
          return function(o) {
            return fnRelation(o) && fnAnd(o);
          };
        }
        return fnRelation;
      }
      function relation() {
        var fnExpr, fnRangeList, bEq;
        fnExpr = expr();
        if (accept(OP_EQ)) {
          bEq = true;
        } else if (accept(OP_NEQ)) {
          bEq = false;
        } else {
          throw new Error("Expected '=' or '!='");
        }
        fnRangeList = range_list();
        if (bEq) {
          return function(o) {
            return fnRangeList(o).indexOf(fnExpr(o)) >= 0;
          };
        } else {
          return function(o) {
            return fnRangeList(o).indexOf(fnExpr(o)) === -1;
          };
        }
      }
      function expr() {
        var fnOperand;
        fnOperand = operand();
        if (accept(OP_MOD)) {
          var iDivisor = parseInt(consume());
          return function(o) {
            return fnOperand(o) % iDivisor;
          };
        }
        return fnOperand;
      }
      function operand() {
        if (accept(OPD_N)) {
          return function(o) {
            return o.n;
          };
        } else if (accept(OPD_I)) {
          return function(o) {
            return o.i;
          };
        } else if (accept(OPD_F)) {
          return function(o) {
            return o.f;
          };
        } else if (accept(OPD_T)) {
          return function(o) {
            return o.t;
          };
        } else if (accept(OPD_V)) {
          return function(o) {
            return o.v;
          };
        } else if (accept(OPD_W)) {
          return function(o) {
            return o.w;
          };
        } else if (accept(OPD_C)) {
          return function(o) {
            return o.c;
          };
        } else if (accept(OPD_E)) {
          return function(o) {
            return o.c;
          };
        } else {
          throw new Error("Unknown operand: " + consume());
        }
      }
      function range_list() {
        var aValues = [], sRangeList = consume(), aParts = sRangeList.split(SEP), aRange, iFrom, iTo;
        aParts.forEach(function(sPart) {
          aRange = sPart.split(RANGE);
          if (aRange.length === 1) {
            aValues.push(parseInt(sPart));
          } else {
            iFrom = parseInt(aRange[0]);
            iTo = parseInt(aRange[1]);
            for (var i2 = iFrom; i2 <= iTo; i2++) {
              aValues.push(i2);
            }
          }
        });
        return function(o) {
          return aValues;
        };
      }
      var fnOr = or_condition();
      if (i != aTokens.length) {
        throw new Error("Not completely parsed");
      }
      return function(sValue) {
        var iDotPos, iExponent, iExponentPos, sFraction, sFractionNoZeros, sInteger, o;
        sValue = sValue.replace(rCIgnoreCase, "e");
        iExponentPos = sValue.search(rEIgnoreCase);
        iExponent = iExponentPos < 0 ? 0 : parseInt(sValue.slice(iExponentPos + 1));
        sValue = LocaleData.convertToDecimal(sValue);
        iDotPos = sValue.indexOf(".");
        if (iDotPos === -1) {
          sInteger = sValue;
          sFraction = "";
          sFractionNoZeros = "";
        } else {
          sInteger = sValue.slice(0, iDotPos);
          sFraction = sValue.slice(iDotPos + 1);
          sFractionNoZeros = sFraction.replace(rTrailingZeroes, "");
        }
        o = {
          n: parseFloat(sValue),
          i: parseInt(sInteger),
          v: sFraction.length,
          w: sFractionNoZeros.length,
          f: sFraction === "" ? 0 : parseInt(sFraction),
          t: sFractionNoZeros === "" ? 0 : parseInt(sFractionNoZeros),
          c: iExponent
        };
        return {
          bMatch: fnOr(o),
          oOperands: o
        };
      };
    }
  }
);
LocaleData.convertToDecimal = function(vValue) {
  var iIntegerLength, iExponent, iFractionLength, bNegative, iNewIntegerLength, aResult, sValue = String(vValue);
  if (!sValue.includes("e") && !sValue.includes("E")) {
    return sValue;
  }
  aResult = sValue.match(rNumberInScientificNotation);
  bNegative = aResult[1] === "-";
  sValue = aResult[2].replace(".", "");
  iIntegerLength = aResult[3] ? aResult[3].length : 0;
  iFractionLength = aResult[4] ? aResult[4].length : 0;
  iExponent = parseInt(aResult[5]);
  iNewIntegerLength = iIntegerLength + iExponent;
  if (iExponent > 0) {
    sValue = iExponent < iFractionLength ? sValue.slice(0, iNewIntegerLength) + "." + sValue.slice(iNewIntegerLength) : sValue = sValue.padEnd(iNewIntegerLength, "0");
  } else {
    sValue = -iExponent < iIntegerLength ? sValue = sValue.slice(0, iNewIntegerLength) + "." + sValue.slice(iNewIntegerLength) : sValue = "0." + sValue.padStart(iFractionLength - iExponent, "0");
  }
  if (bNegative) {
    sValue = "-" + sValue;
  }
  return sValue;
};
var mCLDRSymbolGroups = {
  "Era": {
    field: "era",
    index: 0
  },
  "Year": {
    field: "year",
    index: 1
  },
  "Quarter": {
    field: "quarter",
    index: 2
  },
  "Month": {
    field: "month",
    index: 3
  },
  "Week": {
    field: "week",
    index: 4
  },
  "Day-Of-Week": {
    field: "weekday",
    index: 5
  },
  "Day": {
    field: "day",
    index: 6
  },
  "DayPeriod": {
    field: "hour",
    index: 7,
    diffOnly: true
  },
  "Hour": {
    field: "hour",
    index: 8
  },
  "Minute": {
    field: "minute",
    index: 9
  },
  "Second": {
    field: "second",
    index: 10
  },
  "Timezone": {
    field: "zone",
    index: 11
  }
};
var mCLDRSymbols = {
  "G": {
    group: "Era",
    match: "Era",
    numericCeiling: 1
  },
  "y": {
    group: "Year",
    match: "Year",
    numericCeiling: 100
  },
  "Y": {
    group: "Year",
    match: "Year",
    numericCeiling: 100
  },
  "Q": {
    group: "Quarter",
    match: "Quarter",
    numericCeiling: 3
  },
  "q": {
    group: "Quarter",
    match: "Quarter",
    numericCeiling: 3
  },
  "M": {
    group: "Month",
    match: "Month",
    numericCeiling: 3
  },
  "L": {
    group: "Month",
    match: "Month",
    numericCeiling: 3
  },
  "w": {
    group: "Week",
    match: "Week",
    numericCeiling: 100
  },
  "W": {
    group: "Week",
    match: "Week",
    numericCeiling: 100
  },
  "d": {
    group: "Day",
    match: "Day",
    numericCeiling: 100
  },
  "D": {
    group: "Day",
    match: "Day",
    numericCeiling: 100
  },
  "E": {
    group: "Day-Of-Week",
    match: "Day-Of-Week",
    numericCeiling: 1
  },
  "e": {
    group: "Day-Of-Week",
    match: "Day-Of-Week",
    numericCeiling: 3
  },
  "c": {
    group: "Day-Of-Week",
    match: "Day-Of-Week",
    numericCeiling: 2
  },
  "h": {
    group: "Hour",
    match: "Hour12",
    numericCeiling: 100
  },
  "H": {
    group: "Hour",
    match: "Hour24",
    numericCeiling: 100
  },
  "k": {
    group: "Hour",
    match: "Hour24",
    numericCeiling: 100
  },
  "K": {
    group: "Hour",
    match: "Hour12",
    numericCeiling: 100
  },
  "m": {
    group: "Minute",
    match: "Minute",
    numericCeiling: 100
  },
  "s": {
    group: "Second",
    match: "Second",
    numericCeiling: 100
  },
  "z": {
    group: "Timezone",
    match: "Timezone",
    numericCeiling: 1
  },
  "Z": {
    group: "Timezone",
    match: "Timezone",
    numericCeiling: 1
  },
  "O": {
    group: "Timezone",
    match: "Timezone",
    numericCeiling: 1
  },
  "v": {
    group: "Timezone",
    match: "Timezone",
    numericCeiling: 1
  },
  "V": {
    group: "Timezone",
    match: "Timezone",
    numericCeiling: 1
  },
  "X": {
    group: "Timezone",
    match: "Timezone",
    numericCeiling: 1
  },
  "x": {
    group: "Timezone",
    match: "Timezone",
    numericCeiling: 1
  },
  "S": {
    group: "Other",
    numericCeiling: 100
  },
  "u": {
    group: "Other",
    numericCeiling: 100
  },
  "U": {
    group: "Other",
    numericCeiling: 1
  },
  "r": {
    group: "Other",
    numericCeiling: 100
  },
  "F": {
    group: "Other",
    numericCeiling: 100
  },
  "g": {
    group: "Other",
    numericCeiling: 100
  },
  "a": {
    group: "DayPeriod",
    numericCeiling: 1
  },
  "b": {
    group: "Other",
    numericCeiling: 1
  },
  "B": {
    group: "Other",
    numericCeiling: 1
  },
  "A": {
    group: "Other",
    numericCeiling: 100
  }
};
function getDesigntimePropertyAsArray(sValue) {
  var m = /\$([-a-z0-9A-Z._]+)(?::([^$]*))?\$/.exec(sValue);
  return m && m[2] ? m[2].split(/,/) : null;
}
var _cldrLocales = getDesigntimePropertyAsArray("$cldr-locales:ar,ar_EG,ar_SA,bg,ca,cnr,cy,cs,da,de,de_AT,de_CH,el,el_CY,en,en_AU,en_GB,en_HK,en_IE,en_IN,en_NZ,en_PG,en_SG,en_ZA,es,es_AR,es_BO,es_CL,es_CO,es_MX,es_PE,es_UY,es_VE,et,fa,fi,fr,fr_BE,fr_CA,fr_CH,fr_LU,he,hi,hr,hu,id,it,it_CH,ja,kk,ko,lt,lv,mk,ms,nb,nl,nl_BE,pl,pt,pt_PT,ro,ru,ru_UA,sk,sl,sr,sr_Latn,sv,th,tr,uk,vi,zh_CN,zh_HK,zh_SG,zh_TW$");
var M_SUPPORTED_LOCALES = function() {
  var LOCALES = _cldrLocales, result = {}, i;
  if (LOCALES) {
    for (i = 0; i < LOCALES.length; i++) {
      result[LOCALES[i]] = true;
    }
  }
  return result;
}();
var mLocaleDatas = {};
function _resolveTimezoneTranslationStructure(oNode, sKey, oResult, aParentTranslations) {
  aParentTranslations = aParentTranslations ? aParentTranslations.slice() : [];
  oResult = oResult || {};
  sKey = sKey || "";
  Object.keys(oNode).forEach(function(sChildKey) {
    var vChildNode = oNode[sChildKey];
    if (typeof vChildNode === "object") {
      var aParentTranslationForChild = aParentTranslations.slice();
      var sParent = vChildNode["_parent"];
      if (sParent) {
        aParentTranslationForChild.push(sParent);
      }
      _resolveTimezoneTranslationStructure(vChildNode, sKey + sChildKey + "/", oResult, aParentTranslationForChild);
    } else if (typeof vChildNode === "string" && sChildKey !== "_parent") {
      var sParents = aParentTranslations.length ? aParentTranslations.join(", ") + ", " : "";
      oResult[sKey + sChildKey] = sParents + vChildNode;
    }
  });
  return oResult;
}
function getCLDRCalendarName(sCalendarType) {
  if (!sCalendarType) {
    sCalendarType = Configuration_default.getCalendarType();
  }
  return "ca-" + sCalendarType.toLowerCase();
}
function getData(oLocale) {
  var sLanguage = oLocale.getLanguage() || "", sScript = oLocale.getScript() || "", sRegion = oLocale.getRegion() || "", mData;
  function merge(obj, fallbackObj) {
    var name105, value, fallbackValue;
    if (!fallbackObj) {
      return;
    }
    for (name105 in fallbackObj) {
      if (fallbackObj.hasOwnProperty(name105)) {
        value = obj[name105];
        fallbackValue = fallbackObj[name105];
        if (value === void 0) {
          obj[name105] = fallbackValue;
        } else if (value === null) {
          delete obj[name105];
        } else if (typeof value === "object" && typeof fallbackValue === "object" && !Array.isArray(value)) {
          merge(value, fallbackValue);
        }
      }
    }
  }
  function getOrLoad(sId2) {
    if (!mLocaleDatas[sId2] && (!M_SUPPORTED_LOCALES || M_SUPPORTED_LOCALES[sId2] === true)) {
      var data = mLocaleDatas[sId2] = LoaderExtensions_default.loadResource("sap/ui/core/cldr/" + sId2 + ".json", {
        dataType: "json",
        failOnError: false
      });
      if (data && data.__fallbackLocale) {
        merge(data, getOrLoad(data.__fallbackLocale));
        delete data.__fallbackLocale;
      }
    }
    return mLocaleDatas[sId2];
  }
  sLanguage = sLanguage && Localization_default.getModernLanguage(sLanguage) || sLanguage;
  if (sLanguage === "no") {
    sLanguage = "nb";
  }
  if (sLanguage === "zh" && !sRegion) {
    if (sScript === "Hans") {
      sRegion = "CN";
    } else if (sScript === "Hant") {
      sRegion = "TW";
    }
  }
  if (sLanguage === "sh" || sLanguage === "sr" && sScript === "Latn") {
    sLanguage = "sr_Latn";
  }
  var sId = sLanguage + "_" + sRegion;
  var sCLDRLocaleId = sId;
  if (sLanguage && sRegion) {
    mData = getOrLoad(sId);
  }
  if (!mData && sLanguage) {
    mData = getOrLoad(sLanguage);
    sCLDRLocaleId = sLanguage;
  }
  if (!mData) {
    mData = getOrLoad("en");
    sCLDRLocaleId = "en";
  }
  mLocaleDatas[sId] = mData;
  sCLDRLocaleId = sCLDRLocaleId.replace(/_/g, "-");
  return {
    mData,
    sCLDRLocaleId
  };
}
var CustomLocaleData = LocaleData.extend("sap.ui.core.CustomLocaleData", {
  constructor: function(oLocale) {
    LocaleData.apply(this, arguments);
    this.mCustomData = Configuration_default.getFormatSettings().getCustomLocaleData();
  },
  /**
   * Retrieves the value for the given arguments by checking first <code>mCustomData</code> and if not
   * found <code>mData</code>
   * @returns {*} value
   * @private
   */
  _get: function() {
    var aArguments = Array.prototype.slice.call(arguments), sCalendar, sKey;
    if (aArguments[0].indexOf("ca-") == 0) {
      sCalendar = aArguments[0];
      if (sCalendar == getCLDRCalendarName()) {
        aArguments = aArguments.slice(1);
      }
    }
    sKey = aArguments.join("-");
    var vValue = this.mCustomData[sKey];
    if (vValue == null) {
      vValue = this._getDeep(this.mCustomData, arguments);
      if (vValue == null) {
        vValue = this._getDeep(this.mData, arguments);
      }
    }
    return vValue;
  },
  /**
   * Retrieves merged object from <code>mData</code> extended with <code>mCustomData</code>.
   * This function merges the content of <code>mData</code> and <code>mCustomData</code> instead of returning one or the other like <code>_get()</code> does.
   *
   * Note: Properties defined in <code>mCustomData</code> overwrite the ones from <code>mData</code>.
   * @private
   * @return {object} merged object
   */
  _getMerged: function() {
    var mData = this._getDeep(this.mData, arguments);
    var mCustomData = this._getDeep(this.mCustomData, arguments);
    return extend_default({}, mData, mCustomData);
  },
  /**
   * Returns the first day of the week defined by the calendar week numbering algorithm
   * set in the configuration, see {@link sap.ui.core.Configuration#setCalendarWeekNumbering}.
   * If no specific calendar week numbering algorithm is configured the value set by
   * {@link sap.ui.core.Configuration#setFirstDayOfWeek} is returned. Otherwise the first day
   * of the week is determined by the current locale, see {@link sap.ui.core.LocaleData#getFirstDayOfWeek}.
   *
   * Days are encoded as integer where Sunday=0, Monday=1 etc.
   *
   * @returns {int} The first day of week
   * @override sap.ui.core.LocalData#getFirstDayOfWeek
   * @since 1.113.0
   */
  getFirstDayOfWeek: function() {
    var sCalendarWeekNumbering = Configuration_default.getCalendarWeekNumbering();
    if (sCalendarWeekNumbering === CalendarWeekNumbering_default2.Default) {
      return LocaleData.prototype.getFirstDayOfWeek.call(this);
    }
    return CalendarWeekNumbering_default2.getWeekConfigurationValues(sCalendarWeekNumbering).firstDayOfWeek;
  },
  /**
   * Returns the required minimal number of days for the first week of a year defined by the
   * calendar week numbering algorithm set in the configuration,
   * see {@link sap.ui.core.Configuration#setCalendarWeekNumbering}.
   * If no specific calendar week numbering algorithm is configured the required minimal number
   * of days for the first week of a year is determined by the current locale,
   * see {@link sap.ui.core.LocaleData#getMinimalDaysInFirstWeek}.
   *
   * @returns {int} The required minimal number of days for the first week of a year
   * @override sap.ui.core.LocalData#getMinimalDaysInFirstWeek
   * @since 1.113.0
   */
  getMinimalDaysInFirstWeek: function() {
    var sCalendarWeekNumbering = Configuration_default.getCalendarWeekNumbering();
    if (sCalendarWeekNumbering === CalendarWeekNumbering_default2.Default) {
      return LocaleData.prototype.getMinimalDaysInFirstWeek.call(this);
    }
    return CalendarWeekNumbering_default2.getWeekConfigurationValues(sCalendarWeekNumbering).minimalDaysInFirstWeek;
  }
});
LocaleData.getInstance = function(oLocale) {
  oLocale = Locale_default._getCoreLocale(oLocale);
  return oLocale.hasPrivateUseSubtag("sapufmt") ? new CustomLocaleData(oLocale) : new LocaleData(oLocale);
};
LocaleData._cldrLocales = _cldrLocales;
LocaleData._mTimezoneTranslations = {};
var rContainsSymbol = new RegExp("[" + Object.keys(mCLDRSymbols).join("") + "]");
var rTextWithOptionalSpacesAtStartAndEnd = /^(\s)?(.*?)(\s)?$/;
LocaleData._escapeIfNeeded = function(sValue) {
  if (sValue === void 0) {
    return "";
  }
  if (rContainsSymbol.test(sValue)) {
    return sValue.replace(rTextWithOptionalSpacesAtStartAndEnd, "$1'$2'$3");
  }
  return sValue;
};
var LocaleData_default = LocaleData;

// node_modules/@ui5/webcomponents-localization/dist/sap/ui/core/date/_Calendars.js
var mRegistry = /* @__PURE__ */ new Map();
var _Calendars = {
  get: function(sCalendarType) {
    if (!mRegistry.has(sCalendarType)) {
      throw new Error("Required calendar type: " + sCalendarType + " not loaded.");
    }
    return mRegistry.get(sCalendarType);
  },
  set: function(sCalendarType, CalendarClass) {
    mRegistry.set(sCalendarType, CalendarClass);
  }
};
var Calendars_default = _Calendars;

// node_modules/@ui5/webcomponents-localization/dist/sap/ui/core/date/CalendarUtils.js
var CalendarUtils = {
  /**
   * Resolves calendar week configuration.
   *
   * Returns an object with the following fields:
   * <ul>
   *   <li><code>firstDayOfWeek</code>: specifies the first day of the week starting with
   *   <code>0</code> (which is Sunday)</li>
   *   <li><code>minimalDaysInFirstWeek</code>: minimal days at the beginning of the year
   *   which define the first calendar week</li>
   * </ul>
   *
   * @param {sap.ui.core.date.CalendarWeekNumbering} [sCalendarWeekNumbering]
   *   The calendar week numbering; if omitted, the calendar week numbering of the Configuration
   *   is used; see {@link sap.ui.core.Configuration#getCalendarWeekNumbering}. If this value is
   *   <code>Default</code> the returned calendar week configuration is derived from the given
   *   <code>oLocale</code>.
   * @param {sap.ui.core.Locale} [oLocale]
   *   The locale to use; if not provided, this falls back to the format locale from the
   *   Configuration; see {@link sap.ui.core.Configuration.FormatSettings#getFormatLocale}.
   *   Is only used when <code>sCalendarWeekNumbering</code> is set to <code>Default</code>.
   * @returns {{firstDayOfWeek: int, minimalDaysInFirstWeek: int}|undefined}
   *   The calendar week configuration, or <code>undefined<code> for an invalid value of
   *   <code>sap.ui.core.date.CalendarWeekNumbering</code>.
   * @public
   * @since 1.108.0
   */
  getWeekConfigurationValues: function(sCalendarWeekNumbering, oLocale) {
    var oLocaleData, oWeekConfigurationValues;
    if (!sCalendarWeekNumbering) {
      return CalendarUtils.getWeekConfigurationValues(Configuration_default.getCalendarWeekNumbering(), oLocale);
    }
    oWeekConfigurationValues = CalendarWeekNumbering_default2.getWeekConfigurationValues(sCalendarWeekNumbering);
    if (oWeekConfigurationValues) {
      return oWeekConfigurationValues;
    }
    if (sCalendarWeekNumbering === CalendarWeekNumbering_default2.Default) {
      oLocale = oLocale || Configuration_default.getFormatSettings().getFormatLocale();
      oLocaleData = LocaleData_default.getInstance(oLocale);
      return {
        firstDayOfWeek: oLocaleData.getFirstDayOfWeek(),
        minimalDaysInFirstWeek: oLocaleData.getMinimalDaysInFirstWeek()
      };
    }
    return void 0;
  }
};
var CalendarUtils_default = CalendarUtils;

// node_modules/@ui5/webcomponents-localization/dist/sap/ui/core/date/UniversalDate.js
var UniversalDate = Object_default.extend(
  "sap.ui.core.date.UniversalDate",
  /** @lends sap.ui.core.date.UniversalDate.prototype */
  {
    constructor: function() {
      var clDate = UniversalDate.getClass();
      return this.createDate(clDate, arguments);
    }
  }
);
UniversalDate.UTC = function() {
  var clDate = UniversalDate.getClass();
  return clDate.UTC.apply(clDate, arguments);
};
UniversalDate.now = function() {
  return Date.now();
};
UniversalDate.prototype.createDate = function(clDate, aArgs) {
  if (clDate === Date) {
    return UI5Date_default.getInstance.apply(null, aArgs);
  }
  switch (aArgs.length) {
    case 0:
      return new clDate();
    // new Date(new Date()) is officially not supported
    // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/Date
    case 1:
      return new clDate(aArgs[0] instanceof Date ? aArgs[0].getTime() : aArgs[0]);
    case 2:
      return new clDate(aArgs[0], aArgs[1]);
    case 3:
      return new clDate(aArgs[0], aArgs[1], aArgs[2]);
    case 4:
      return new clDate(aArgs[0], aArgs[1], aArgs[2], aArgs[3]);
    case 5:
      return new clDate(aArgs[0], aArgs[1], aArgs[2], aArgs[3], aArgs[4]);
    case 6:
      return new clDate(aArgs[0], aArgs[1], aArgs[2], aArgs[3], aArgs[4], aArgs[5]);
    case 7:
      return new clDate(aArgs[0], aArgs[1], aArgs[2], aArgs[3], aArgs[4], aArgs[5], aArgs[6]);
  }
};
UniversalDate.getInstance = function(oDate, sCalendarType) {
  var clDate, oInstance;
  if (oDate instanceof UniversalDate) {
    oDate = oDate.getJSDate();
  }
  if (oDate && isNaN(oDate.getTime())) {
    throw new Error("The given date object is invalid");
  }
  if (!sCalendarType) {
    sCalendarType = Configuration_default.getCalendarType();
  }
  clDate = UniversalDate.getClass(sCalendarType);
  oInstance = Object.create(clDate.prototype);
  oInstance.oDate = oDate ? UI5Date_default.getInstance(oDate) : UI5Date_default.getInstance();
  oInstance.sCalendarType = sCalendarType;
  return oInstance;
};
UniversalDate.getClass = function(sCalendarType) {
  if (!sCalendarType) {
    sCalendarType = Configuration_default.getCalendarType();
  }
  return Calendars_default.get(sCalendarType);
};
["getDate", "getMonth", "getFullYear", "getYear", "getDay", "getHours", "getMinutes", "getSeconds", "getMilliseconds", "getUTCDate", "getUTCMonth", "getUTCFullYear", "getUTCDay", "getUTCHours", "getUTCMinutes", "getUTCSeconds", "getUTCMilliseconds", "getTime", "valueOf", "getTimezoneOffset", "toString", "toDateString", "setDate", "setFullYear", "setYear", "setMonth", "setHours", "setMinutes", "setSeconds", "setMilliseconds", "setUTCDate", "setUTCFullYear", "setUTCMonth", "setUTCHours", "setUTCMinutes", "setUTCSeconds", "setUTCMilliseconds"].forEach(function(sName) {
  UniversalDate.prototype[sName] = function() {
    return this.oDate[sName].apply(this.oDate, arguments);
  };
});
UniversalDate.prototype.getJSDate = function() {
  return this.oDate;
};
UniversalDate.prototype.getCalendarType = function() {
  return this.sCalendarType;
};
UniversalDate.prototype.getEra = function() {
  return UniversalDate.getEraByDate(this.sCalendarType, this.oDate.getFullYear(), this.oDate.getMonth(), this.oDate.getDate());
};
UniversalDate.prototype.setEra = function(iEra) {
};
UniversalDate.prototype.getUTCEra = function() {
  return UniversalDate.getEraByDate(this.sCalendarType, this.oDate.getUTCFullYear(), this.oDate.getUTCMonth(), this.oDate.getUTCDate());
};
UniversalDate.prototype.setUTCEra = function(iEra) {
};
UniversalDate.prototype.getWeek = function(oLocale, vCalendarWeekNumbering) {
  return UniversalDate.getWeekByDate(this.sCalendarType, this.getFullYear(), this.getMonth(), this.getDate(), oLocale, vCalendarWeekNumbering);
};
UniversalDate.prototype.setWeek = function(oWeek, oLocale, vCalendarWeekNumbering) {
  var oDate = UniversalDate.getFirstDateOfWeek(this.sCalendarType, oWeek.year || this.getFullYear(), oWeek.week, oLocale, vCalendarWeekNumbering);
  this.setFullYear(oDate.year, oDate.month, oDate.day);
};
UniversalDate.prototype.getUTCWeek = function(oLocale, vCalendarWeekNumbering) {
  return UniversalDate.getWeekByDate(this.sCalendarType, this.getUTCFullYear(), this.getUTCMonth(), this.getUTCDate(), oLocale, vCalendarWeekNumbering);
};
UniversalDate.prototype.setUTCWeek = function(oWeek, oLocale, vCalendarWeekNumbering) {
  var oDate = UniversalDate.getFirstDateOfWeek(this.sCalendarType, oWeek.year || this.getFullYear(), oWeek.week, oLocale, vCalendarWeekNumbering);
  this.setUTCFullYear(oDate.year, oDate.month, oDate.day);
};
UniversalDate.prototype.getQuarter = function() {
  return Math.floor(this.getMonth() / 3);
};
UniversalDate.prototype.getUTCQuarter = function() {
  return Math.floor(this.getUTCMonth() / 3);
};
UniversalDate.prototype.getDayPeriod = function() {
  if (this.getHours() < 12) {
    return 0;
  } else {
    return 1;
  }
};
UniversalDate.prototype.getUTCDayPeriod = function() {
  if (this.getUTCHours() < 12) {
    return 0;
  } else {
    return 1;
  }
};
UniversalDate.prototype.getTimezoneShort = function() {
  if (this.oDate.getTimezoneShort) {
    return this.oDate.getTimezoneShort();
  }
};
UniversalDate.prototype.getTimezoneLong = function() {
  if (this.oDate.getTimezoneLong) {
    return this.oDate.getTimezoneLong();
  }
};
var iMillisecondsInWeek = 7 * 24 * 60 * 60 * 1e3;
UniversalDate.getWeekByDate = function(sCalendarType, iYear, iMonth, iDay, oLocale, vCalendarWeekNumbering) {
  vCalendarWeekNumbering = vCalendarWeekNumbering || Configuration_default.getCalendarWeekNumbering();
  checkWeekConfig(vCalendarWeekNumbering);
  oLocale = oLocale || Configuration_default.getFormatSettings().getFormatLocale();
  var clDate = this.getClass(sCalendarType);
  var oFirstDay = getFirstDayOfFirstWeek(clDate, iYear, oLocale, vCalendarWeekNumbering);
  var oDate = new clDate(clDate.UTC(iYear, iMonth, iDay));
  var iWeek, iLastYear, iNextYear, oLastFirstDay, oNextFirstDay;
  var bSplitWeek = isSplitWeek(vCalendarWeekNumbering, oLocale);
  if (bSplitWeek) {
    iWeek = calculateWeeks(oFirstDay, oDate);
  } else {
    iLastYear = iYear - 1;
    iNextYear = iYear + 1;
    oLastFirstDay = getFirstDayOfFirstWeek(clDate, iLastYear, oLocale, vCalendarWeekNumbering);
    oNextFirstDay = getFirstDayOfFirstWeek(clDate, iNextYear, oLocale, vCalendarWeekNumbering);
    if (oDate >= oNextFirstDay) {
      iYear = iNextYear;
      iWeek = 0;
    } else if (oDate < oFirstDay) {
      iYear = iLastYear;
      iWeek = calculateWeeks(oLastFirstDay, oDate);
    } else {
      iWeek = calculateWeeks(oFirstDay, oDate);
    }
  }
  return {
    year: iYear,
    week: iWeek
  };
};
UniversalDate.getFirstDateOfWeek = function(sCalendarType, iYear, iWeek, oLocale, vCalendarWeekNumbering) {
  vCalendarWeekNumbering = vCalendarWeekNumbering || Configuration_default.getCalendarWeekNumbering();
  checkWeekConfig(vCalendarWeekNumbering);
  oLocale = oLocale || Configuration_default.getFormatSettings().getFormatLocale();
  var clDate = this.getClass(sCalendarType);
  var oFirstDay = getFirstDayOfFirstWeek(clDate, iYear, oLocale, vCalendarWeekNumbering);
  var oDate = new clDate(oFirstDay.valueOf() + iWeek * iMillisecondsInWeek);
  var bSplitWeek = isSplitWeek(vCalendarWeekNumbering, oLocale);
  if (bSplitWeek && iWeek === 0 && oFirstDay.getUTCFullYear() < iYear) {
    return {
      year: iYear,
      month: 0,
      day: 1
    };
  }
  return {
    year: oDate.getUTCFullYear(),
    month: oDate.getUTCMonth(),
    day: oDate.getUTCDate()
  };
};
function isSplitWeek(vCalendarWeekNumbering, oLocale) {
  var oLocaleData = LocaleData_default.getInstance(oLocale);
  return (vCalendarWeekNumbering === CalendarWeekNumbering_default2.Default || vCalendarWeekNumbering === CalendarWeekNumbering_default2.WesternTraditional) && oLocaleData.firstDayStartsFirstWeek();
}
function checkWeekConfig(vCalendarWeekNumbering) {
  if (typeof vCalendarWeekNumbering === "object") {
    if (typeof vCalendarWeekNumbering.firstDayOfWeek !== "number" || typeof vCalendarWeekNumbering.minimalDaysInFirstWeek !== "number") {
      throw new TypeError("Week config requires firstDayOfWeek and minimalDaysInFirstWeek to be set");
    }
  } else if (!Object.values(CalendarWeekNumbering_default2).includes(vCalendarWeekNumbering)) {
    throw new TypeError("Illegal format option calendarWeekNumbering: '" + vCalendarWeekNumbering + "'");
  }
}
function resolveCalendarWeekConfiguration(vCalendarWeekNumbering, oLocale) {
  if (typeof vCalendarWeekNumbering === "object" && typeof vCalendarWeekNumbering.firstDayOfWeek === "number" && typeof vCalendarWeekNumbering.minimalDaysInFirstWeek === "number") {
    return vCalendarWeekNumbering;
  }
  return CalendarUtils_default.getWeekConfigurationValues(vCalendarWeekNumbering, oLocale);
}
function getFirstDayOfFirstWeek(clDate, iYear, oLocale, vCalendarWeekNumbering) {
  oLocale = oLocale || Configuration_default.getFormatSettings().getFormatLocale();
  var oWeekConfig = resolveCalendarWeekConfiguration(vCalendarWeekNumbering, oLocale);
  var iMinDays = oWeekConfig.minimalDaysInFirstWeek;
  var iFirstDayOfWeek = oWeekConfig.firstDayOfWeek;
  var oFirstDay = new clDate(clDate.UTC(iYear, 0, 1));
  var iDayCount = 7;
  if (isNaN(oFirstDay.getTime())) {
    throw new Error("Could not determine the first day of the week, because the date object is invalid");
  }
  while (oFirstDay.getUTCDay() !== iFirstDayOfWeek) {
    oFirstDay.setUTCDate(oFirstDay.getUTCDate() - 1);
    iDayCount--;
  }
  if (iDayCount < iMinDays) {
    oFirstDay.setUTCDate(oFirstDay.getUTCDate() + 7);
  }
  return oFirstDay;
}
function calculateWeeks(oFromDate, oToDate) {
  return Math.floor((oToDate.valueOf() - oFromDate.valueOf()) / iMillisecondsInWeek);
}
var mEras = {};
UniversalDate.getEraByDate = function(sCalendarType, iYear, iMonth, iDay) {
  var aEras = getEras(sCalendarType), iTimestamp = (/* @__PURE__ */ new Date(0)).setUTCFullYear(iYear, iMonth, iDay), oEra;
  for (var i = aEras.length - 1; i >= 0; i--) {
    oEra = aEras[i];
    if (!oEra) {
      continue;
    }
    if (oEra._start && iTimestamp >= oEra._startInfo.timestamp) {
      return i;
    }
    if (oEra._end && iTimestamp < oEra._endInfo.timestamp) {
      return i;
    }
  }
};
UniversalDate.getCurrentEra = function(sCalendarType) {
  var oNow = UI5Date_default.getInstance();
  return this.getEraByDate(sCalendarType, oNow.getFullYear(), oNow.getMonth(), oNow.getDate());
};
UniversalDate.getEraStartDate = function(sCalendarType, iEra) {
  var aEras = getEras(sCalendarType), oEra = aEras[iEra] || aEras[0];
  if (oEra._start) {
    return oEra._startInfo;
  }
};
function getEras(sCalendarType) {
  var oLocale = Configuration_default.getFormatSettings().getFormatLocale(), oLocaleData = LocaleData_default.getInstance(oLocale), aEras = mEras[sCalendarType];
  if (!aEras) {
    var aEras = oLocaleData.getEraDates(sCalendarType);
    if (!aEras[0]) {
      aEras[0] = {
        _start: "1-1-1"
      };
    }
    for (var i = 0; i < aEras.length; i++) {
      var oEra = aEras[i];
      if (!oEra) {
        continue;
      }
      if (oEra._start) {
        oEra._startInfo = parseDateString(oEra._start);
      }
      if (oEra._end) {
        oEra._endInfo = parseDateString(oEra._end);
      }
    }
    mEras[sCalendarType] = aEras;
  }
  return aEras;
}
function parseDateString(sDateString) {
  var aParts = sDateString.split("-"), iYear, iMonth, iDay;
  if (aParts[0] == "") {
    iYear = -parseInt(aParts[1]);
    iMonth = parseInt(aParts[2]) - 1;
    iDay = parseInt(aParts[3]);
  } else {
    iYear = parseInt(aParts[0]);
    iMonth = parseInt(aParts[1]) - 1;
    iDay = parseInt(aParts[2]);
  }
  return {
    // no need to use UI5Date.getInstance as only the UTC timestamp is used
    timestamp: (/* @__PURE__ */ new Date(0)).setUTCFullYear(iYear, iMonth, iDay),
    year: iYear,
    month: iMonth,
    day: iDay
  };
}
var UniversalDate_default = UniversalDate;

// node_modules/@ui5/webcomponents-localization/dist/dates/UniversalDate.js
var UniversalDate2 = UniversalDate_default;
var UniversalDate_default2 = UniversalDate2;

// node_modules/@ui5/webcomponents-localization/dist/dates/CalendarDate.js
var CalendarDate = class _CalendarDate {
  constructor(year, month, date, calendarType2) {
    let aArgs = arguments, oJSDate, oNow, sCalendarType;
    switch (aArgs.length) {
      case 0:
        oNow = UI5Date_default2.getInstance();
        return this.constructor(oNow.getFullYear(), oNow.getMonth(), oNow.getDate());
      case 1:
      // CalendarDate
      case 2:
        if (!(aArgs[0] instanceof _CalendarDate)) {
          throw new Error("Invalid arguments: the first argument must be of type CalendarDate.");
        }
        sCalendarType = aArgs[1] ? aArgs[1] : aArgs[0]._oUDate.sCalendarType;
        oJSDate = UI5Date_default2.getInstance(aArgs[0].valueOf());
        oJSDate.setFullYear(oJSDate.getUTCFullYear(), oJSDate.getUTCMonth(), oJSDate.getUTCDate());
        oJSDate.setHours(oJSDate.getUTCHours(), oJSDate.getUTCMinutes(), oJSDate.getUTCSeconds(), oJSDate.getUTCMilliseconds());
        this._oUDate = createUniversalUTCDate(oJSDate, sCalendarType);
        break;
      case 3:
      // year, month, date
      case 4:
        checkNumericLike(aArgs[0], `Invalid year: ${aArgs[0]}`);
        checkNumericLike(aArgs[1], `Invalid month: ${aArgs[1]}`);
        checkNumericLike(aArgs[2], `Invalid date: ${aArgs[2]}`);
        oJSDate = UI5Date_default2.getInstance(0, 0, 1);
        oJSDate.setFullYear(aArgs[0], aArgs[1], aArgs[2]);
        if (aArgs[3]) {
          sCalendarType = aArgs[3];
        }
        this._oUDate = createUniversalUTCDate(oJSDate, sCalendarType);
        break;
      default:
        throw new Error(`${"Invalid arguments. Accepted arguments are: 1) oCalendarDate, (optional)calendarTypeor 2) year, month, date, (optional) calendarType"}${aArgs}`);
    }
  }
  getYear() {
    return this._oUDate.getUTCFullYear();
  }
  setYear(year) {
    checkNumericLike(year, `Invalid year: ${year}`);
    this._oUDate.setUTCFullYear(year);
    return this;
  }
  getMonth() {
    return this._oUDate.getUTCMonth();
  }
  /**
   * Sets the given month as ordinal month of the year.
   * @param {int} month An integer between 0 and 11, representing the months January through December( or their
   * equivalent month names for the given calendar).
   * If the specified value is is outside of the expected range, this method attempts to update the date information
   * accordingly. For example, if 12 is given as a month, the year will be incremented by 1, and 1 will be used for month.
   * @param {int} [date] An integer between 1 and 31, representing the day of the month, but other values are allowed.
   * 0 will result in the previous month's last day.
   * -1 will result in the day before the previous month's last day.
   * 32 will result in:
   * - first day of the next month if the current month has 31 days.
   * - second day of the next month if the current month has 30 days.
   * Other value will result in adding or subtracting days according to the given value.
   * @returns {sap.ui.unified.calendar.CalendarDate} <code>this</code> for method chaining.
   */
  setMonth(month, date) {
    checkNumericLike(month, `Invalid month: ${month}`);
    if (date || date === 0) {
      checkNumericLike(date, `Invalid date: ${date}`);
      this._oUDate.setUTCMonth(month, date);
    } else {
      this._oUDate.setUTCMonth(month);
    }
    return this;
  }
  getDate() {
    return this._oUDate.getUTCDate();
  }
  setDate(date) {
    checkNumericLike(date, `Invalid date: ${date}`);
    this._oUDate.setUTCDate(date);
    return this;
  }
  getDay() {
    return this._oUDate.getUTCDay();
  }
  getCalendarType() {
    return this._oUDate.sCalendarType;
  }
  isBefore(oCalendarDate) {
    checkCalendarDate(oCalendarDate);
    return this.valueOf() < oCalendarDate.valueOf();
  }
  isAfter(oCalendarDate) {
    checkCalendarDate(oCalendarDate);
    return this.valueOf() > oCalendarDate.valueOf();
  }
  isSameOrBefore(oCalendarDate) {
    checkCalendarDate(oCalendarDate);
    return this.valueOf() <= oCalendarDate.valueOf();
  }
  isSameOrAfter(oCalendarDate) {
    checkCalendarDate(oCalendarDate);
    return this.valueOf() >= oCalendarDate.valueOf();
  }
  isSame(oCalendarDate) {
    checkCalendarDate(oCalendarDate);
    return this.valueOf() === oCalendarDate.valueOf();
  }
  toLocalJSDate() {
    const oLocalDate = UI5Date_default2.getInstance(this._oUDate.getTime());
    oLocalDate.setFullYear(oLocalDate.getUTCFullYear(), oLocalDate.getUTCMonth(), oLocalDate.getUTCDate());
    oLocalDate.setHours(0, 0, 0, 0);
    return oLocalDate;
  }
  toUTCJSDate() {
    const oUTCDate = UI5Date_default2.getInstance(this._oUDate.getTime());
    oUTCDate.setUTCHours(0, 0, 0, 0);
    return oUTCDate;
  }
  toString() {
    return `${this._oUDate.sCalendarType}: ${this.getYear()}/${this.getMonth() + 1}/${this.getDate()}`;
  }
  valueOf() {
    return this._oUDate.getTime();
  }
  static fromLocalJSDate(oJSDate, sCalendarType) {
    function isValidDate(date) {
      return date && Object.prototype.toString.call(date) === "[object Date]" && !isNaN(date);
    }
    if (!isValidDate(oJSDate)) {
      throw new Error(`Date parameter must be a JavaScript Date object: [${oJSDate}].`);
    }
    return new _CalendarDate(oJSDate.getFullYear(), oJSDate.getMonth(), oJSDate.getDate(), sCalendarType);
  }
  static fromTimestamp(iTimestamp, sCalendarType) {
    const oCalDate = new _CalendarDate(0, 0, 1);
    let oUDate;
    try {
      oUDate = UniversalDate_default2.getInstance(UI5Date_default2.getInstance(iTimestamp), sCalendarType);
    } catch (e) {
      oUDate = /* @__PURE__ */ new Date(NaN);
    }
    oCalDate._oUDate = oUDate;
    return oCalDate;
  }
};
function createUniversalUTCDate(oDate, sCalendarType) {
  if (sCalendarType) {
    return UniversalDate_default2.getInstance(createUTCDate(oDate), sCalendarType);
  }
  return new UniversalDate_default2(createUTCDate(oDate).getTime());
}
function createUTCDate(oDate) {
  const oUTCDate = new Date(Date.UTC(0, 0, 1));
  oUTCDate.setUTCFullYear(oDate.getFullYear(), oDate.getMonth(), oDate.getDate());
  return oUTCDate;
}
function checkCalendarDate(oCalendarDate) {
  if (!(oCalendarDate instanceof CalendarDate)) {
    throw new Error(`Invalid calendar date: [${oCalendarDate}]. Expected: CalendarDate`);
  }
}
function checkNumericLike(value, message) {
  if (value === void 0 || value === Infinity || isNaN(value)) {
    throw message;
  }
}
var CalendarDate_default = CalendarDate;

// node_modules/@ui5/webcomponents-localization/dist/dates/getDaysInMonth.js
var getDaysInMonth = (date) => {
  const tempCalendarDate = new CalendarDate_default(date);
  tempCalendarDate.setDate(1);
  tempCalendarDate.setMonth(tempCalendarDate.getMonth() + 1);
  tempCalendarDate.setDate(0);
  return tempCalendarDate.getDate();
};
var getDaysInMonth_default = getDaysInMonth;

// node_modules/@ui5/webcomponents-localization/dist/dates/transformDateToSecondaryType.js
var transformDateToSecondaryType = (primaryCalendarType, secondaryCalendarType2, timeStamp, hasYearPicker) => {
  let firstDate = CalendarDate_default.fromLocalJSDate(UI5Date_default2.getInstance(timeStamp * 1e3), primaryCalendarType);
  let lastDate = CalendarDate_default.fromLocalJSDate(UI5Date_default2.getInstance(timeStamp * 1e3), primaryCalendarType);
  firstDate.setDate(1);
  if (hasYearPicker) {
    firstDate.setMonth(0);
    lastDate.setMonth(11);
  }
  lastDate.setDate(getDaysInMonth_default(lastDate));
  firstDate = new CalendarDate_default(firstDate, secondaryCalendarType2);
  lastDate = new CalendarDate_default(lastDate, secondaryCalendarType2);
  return { firstDate, lastDate };
};
var transformDateToSecondaryType_default = transformDateToSecondaryType;

// node_modules/@ui5/webcomponents-localization/dist/LocaleData.js
var LocaleDataWrapped = LocaleData_default;
var LocaleData2 = class extends LocaleDataWrapped {
};
var LocaleData_default2 = LocaleData2;

// node_modules/@ui5/webcomponents-localization/dist/getCachedLocaleDataInstance.js
var cache = /* @__PURE__ */ new Map();
var getCachedLocaleDataInstance = (locale) => {
  if (!cache.has(locale)) {
    cache.set(locale, new LocaleData_default2(locale));
  }
  return cache.get(locale);
};
var getCachedLocaleDataInstance_default = getCachedLocaleDataInstance;

// node_modules/@ui5/webcomponents-localization/dist/dates/convertMonthNumbersToMonthNames.js
var convertMonthNumbersToMonthNames = (firstMonth, lastMonth, calendarType2) => {
  const localeData = getCachedLocaleDataInstance_default(getLocale_default());
  const pattern = localeData.getIntervalPattern("");
  const secondaryMonthsNames = localeData.getMonthsStandAlone("abbreviated", calendarType2);
  const secondaryMonthsNamesWide = localeData.getMonthsStandAlone("wide", calendarType2);
  if (firstMonth === lastMonth) {
    return {
      text: localeData.getMonths("abbreviated", calendarType2)[firstMonth],
      textInfo: localeData.getMonths("wide", calendarType2)[firstMonth]
    };
  }
  return {
    text: pattern.replace(/\{0\}/, secondaryMonthsNames[firstMonth]).replace(/\{1\}/, secondaryMonthsNames[lastMonth]),
    textInfo: pattern.replace(/\{0\}/, secondaryMonthsNamesWide[firstMonth]).replace(/\{1\}/, secondaryMonthsNamesWide[lastMonth])
  };
};
var convertMonthNumbersToMonthNames_default = convertMonthNumbersToMonthNames;

// node_modules/@ui5/webcomponents-localization/dist/sap/base/strings/formatMessage.js
var rMessageFormat = /('')|'([^']+(?:''[^']*)*)(?:'|$)|\{([0-9]+(?:\s*,[^{}]*)?)\}|[{}]/g;
var fnFormatMessage = function(sPattern, aValues) {
  assert_default(typeof sPattern === "string" || sPattern instanceof String, "pattern must be string");
  if (arguments.length > 2 || aValues != null && !Array.isArray(aValues)) {
    aValues = Array.prototype.slice.call(arguments, 1);
  }
  aValues = aValues || [];
  return sPattern.replace(rMessageFormat, function($0, $1, $2, $3, offset) {
    if ($1) {
      return "'";
    } else if ($2) {
      return $2.replace(/''/g, "'");
    } else if ($3) {
      return String(aValues[parseInt($3)]);
    }
    throw new Error("formatMessage: pattern syntax error at pos. " + offset);
  });
};
var formatMessage_default = fnFormatMessage;

// node_modules/@ui5/webcomponents-localization/dist/sap/base/util/deepEqual.js
var fnEqual = function(a, b, maxDepth, contains, depth) {
  if (typeof maxDepth == "boolean") {
    contains = maxDepth;
    maxDepth = void 0;
  }
  if (!depth) {
    depth = 0;
  }
  if (!maxDepth) {
    maxDepth = 10;
  }
  if (depth > maxDepth) {
    Log_default.warning("deepEqual comparison exceeded maximum recursion depth of " + maxDepth + ". Treating values as unequal");
    return false;
  }
  if (a === b || Number.isNaN(a) && Number.isNaN(b)) {
    return true;
  }
  if (Array.isArray(a) && Array.isArray(b)) {
    if (!contains && a.length !== b.length) {
      return false;
    }
    if (a.length > b.length) {
      return false;
    }
    for (var i = 0; i < a.length; i++) {
      if (!fnEqual(a[i], b[i], maxDepth, contains, depth + 1)) {
        return false;
      }
    }
    return true;
  }
  if (typeof a == "object" && typeof b == "object") {
    if (!a || !b) {
      return false;
    }
    if (a.constructor !== b.constructor) {
      return false;
    }
    if (!contains && Object.keys(a).length !== Object.keys(b).length) {
      return false;
    }
    if (a instanceof Node) {
      return a.isEqualNode(b);
    }
    if (a instanceof Date) {
      return a.valueOf() === b.valueOf();
    }
    for (var i in a) {
      if (!fnEqual(a[i], b[i], maxDepth, contains, depth + 1)) {
        return false;
      }
    }
    return true;
  }
  return false;
};
var deepEqual_default = fnEqual;

// node_modules/@ui5/webcomponents-localization/dist/sap/ui/core/Supportability.js
var Supportability_default = {
  collectOriginInfo() {
    return false;
  }
};

// node_modules/@ui5/webcomponents-localization/dist/sap/ui/core/format/DateFormat.js
var DateFormat = function() {
  throw new Error();
};
var mDateFormatTypes = {
  DATE: "date",
  TIME: "time",
  DATETIME: "datetime",
  DATETIME_WITH_TIMEZONE: "datetimeWithTimezone"
};
var mCldrDatePattern = {};
var checkTimezoneParameterType = function(sTimezone) {
  if (typeof sTimezone !== "string" && !(sTimezone instanceof String) && sTimezone != null) {
    throw new TypeError("The given timezone must be a string.");
  }
};
DateFormat.oDateInfo = {
  type: mDateFormatTypes.DATE,
  oDefaultFormatOptions: {
    style: "medium",
    relativeScale: "day",
    relativeStyle: "wide"
  },
  aFallbackFormatOptions: [{
    style: "short"
  }, {
    style: "medium"
  }, {
    pattern: "yyyy-MM-dd"
  }, {
    pattern: "yyyyMMdd",
    strictParsing: true
  }],
  bShortFallbackFormatOptions: true,
  bPatternFallbackWithoutDelimiter: true,
  getPattern: function(oLocaleData, sStyle, sCalendarType) {
    return oLocaleData.getDatePattern(sStyle, sCalendarType);
  },
  oRequiredParts: {
    "text": true,
    "year": true,
    "weekYear": true,
    "month": true,
    "day": true
  },
  aRelativeScales: ["year", "month", "week", "day"],
  aRelativeParseScales: ["year", "quarter", "month", "week", "day", "hour", "minute", "second"],
  aIntervalCompareFields: ["Era", "FullYear", "Quarter", "Month", "Week", "Date"]
};
DateFormat.oDateTimeInfo = {
  type: mDateFormatTypes.DATETIME,
  oDefaultFormatOptions: {
    style: "medium",
    relativeScale: "auto",
    relativeStyle: "wide"
  },
  aFallbackFormatOptions: [{
    style: "short"
  }, {
    style: "medium"
  }, {
    pattern: "yyyy-MM-dd'T'HH:mm:ss"
  }, {
    pattern: "yyyyMMdd HHmmss"
  }],
  getPattern: function(oLocaleData, sStyle, sCalendarType) {
    var iSlashIndex = sStyle.indexOf("/");
    if (iSlashIndex > 0) {
      return oLocaleData.getCombinedDateTimePattern(sStyle.substr(0, iSlashIndex), sStyle.substr(iSlashIndex + 1), sCalendarType);
    } else {
      return oLocaleData.getCombinedDateTimePattern(sStyle, sStyle, sCalendarType);
    }
  },
  oRequiredParts: {
    "text": true,
    "year": true,
    "weekYear": true,
    "month": true,
    "day": true,
    "hour0_23": true,
    "hour1_24": true,
    "hour0_11": true,
    "hour1_12": true
  },
  aRelativeScales: ["year", "month", "week", "day", "hour", "minute", "second"],
  aRelativeParseScales: ["year", "quarter", "month", "week", "day", "hour", "minute", "second"],
  aIntervalCompareFields: ["Era", "FullYear", "Quarter", "Month", "Week", "Date", "DayPeriod", "Hours", "Minutes", "Seconds"]
};
DateFormat._getDateTimeWithTimezoneInfo = function(oFormatOptions) {
  var bShowDate = oFormatOptions.showDate === void 0 || oFormatOptions.showDate;
  var bShowTime = oFormatOptions.showTime === void 0 || oFormatOptions.showTime;
  var bShowTimezone = oFormatOptions.showTimezone === void 0 || oFormatOptions.showTimezone;
  var oBaselineType = DateFormat.oDateTimeInfo;
  if (bShowDate && !bShowTime) {
    oBaselineType = DateFormat.oDateInfo;
  } else if (!bShowDate && bShowTime) {
    oBaselineType = DateFormat.oTimeInfo;
  }
  return Object.assign({}, oBaselineType, {
    type: mDateFormatTypes.DATETIME_WITH_TIMEZONE,
    // This function is used to transform the pattern of the fallbackFormatOptions to a timezone pattern.
    getTimezonePattern: function(sPattern) {
      if (!bShowDate && !bShowTime && bShowTimezone) {
        return "VV";
      } else if (!bShowTimezone) {
        return sPattern;
      } else {
        return sPattern + " VV";
      }
    },
    getPattern: function(oLocaleData, sStyle, sCalendarType) {
      if (!bShowDate && !bShowTime && bShowTimezone) {
        return "VV";
      }
      if (!bShowTimezone) {
        return oBaselineType.getPattern(oLocaleData, sStyle, sCalendarType);
      }
      var sPattern = oBaselineType.getPattern(oLocaleData, sStyle, sCalendarType);
      return oLocaleData.applyTimezonePattern(sPattern);
    }
  });
};
DateFormat.oTimeInfo = {
  type: mDateFormatTypes.TIME,
  oDefaultFormatOptions: {
    style: "medium",
    relativeScale: "auto",
    relativeStyle: "wide"
  },
  aFallbackFormatOptions: [{
    style: "short"
  }, {
    style: "medium"
  }, {
    pattern: "HH:mm:ss"
  }, {
    pattern: "HHmmss"
  }],
  getPattern: function(oLocaleData, sStyle, sCalendarType) {
    return oLocaleData.getTimePattern(sStyle, sCalendarType);
  },
  oRequiredParts: {
    "text": true,
    "hour0_23": true,
    "hour1_24": true,
    "hour0_11": true,
    "hour1_12": true
  },
  aRelativeScales: ["hour", "minute", "second"],
  aRelativeParseScales: ["year", "quarter", "month", "week", "day", "hour", "minute", "second"],
  aIntervalCompareFields: ["DayPeriod", "Hours", "Minutes", "Seconds"]
};
DateFormat.getInstance = function(oFormatOptions, oLocale) {
  return this.getDateInstance(oFormatOptions, oLocale);
};
DateFormat.getDateInstance = function(oFormatOptions, oLocale) {
  return this.createInstance(oFormatOptions, oLocale, this.oDateInfo);
};
DateFormat.getDateTimeInstance = function(oFormatOptions, oLocale) {
  return this.createInstance(oFormatOptions, oLocale, this.oDateTimeInfo);
};
DateFormat.getDateTimeWithTimezoneInstance = function(oFormatOptions, oLocale) {
  if (oFormatOptions && !(oFormatOptions instanceof Locale_default)) {
    (function() {
      oFormatOptions = Object.assign({}, oFormatOptions);
      if (typeof oFormatOptions.showTimezone === "string") {
        var sShowTimezone = oFormatOptions.showTimezone;
        if (oFormatOptions.showDate === void 0 && oFormatOptions.showTime === void 0) {
          if (sShowTimezone === "Hide") {
            oFormatOptions.showTimezone = false;
          } else if (sShowTimezone === "Only") {
            oFormatOptions.showDate = false;
            oFormatOptions.showTime = false;
          }
        }
        oFormatOptions.showTimezone = sShowTimezone !== "Hide";
      }
    })();
    if (oFormatOptions.showDate === false && oFormatOptions.showTime === false && oFormatOptions.showTimezone === false) {
      throw new TypeError("Invalid Configuration. One of the following format options must be true: showDate, showTime or showTimezone.");
    }
  }
  return this.createInstance(oFormatOptions, oLocale, DateFormat._getDateTimeWithTimezoneInfo(oFormatOptions || {}));
};
DateFormat.getTimeInstance = function(oFormatOptions, oLocale) {
  return this.createInstance(oFormatOptions, oLocale, this.oTimeInfo);
};
DateFormat.createInstance = function(oFormatOptions, oLocale, oInfo, bIsFallback) {
  var aFallbackFormatOptions, oFormat, sPattern;
  oFormat = Object.create(this.prototype);
  if (oFormatOptions instanceof Locale_default) {
    oLocale = oFormatOptions;
    oFormatOptions = void 0;
  }
  if (!oLocale) {
    oLocale = Configuration_default.getFormatSettings().getFormatLocale();
  }
  oFormat.oLocale = oLocale;
  oFormat.oLocaleData = LocaleData_default.getInstance(oLocale);
  oFormat.oFormatOptions = extend_default({}, oInfo.oDefaultFormatOptions, oFormatOptions);
  if (oInfo.type === mDateFormatTypes.DATETIME_WITH_TIMEZONE) {
    oFormat.oFormatOptions.interval = false;
    oFormat.oFormatOptions.singleIntervalValue = false;
    oFormat.oFormatOptions.UTC = false;
  } else {
    oFormat.oFormatOptions.showTimezone = void 0;
    oFormat.oFormatOptions.showDate = void 0;
    oFormat.oFormatOptions.showTime = void 0;
  }
  oFormat.type = oInfo.type;
  if (!oFormat.oFormatOptions.calendarType) {
    oFormat.oFormatOptions.calendarType = Configuration_default.getCalendarType();
  }
  if (oFormat.oFormatOptions.firstDayOfWeek === void 0 && oFormat.oFormatOptions.minimalDaysInFirstWeek !== void 0 || oFormat.oFormatOptions.firstDayOfWeek !== void 0 && oFormat.oFormatOptions.minimalDaysInFirstWeek === void 0) {
    throw new TypeError("Format options firstDayOfWeek and minimalDaysInFirstWeek need both to be set, but only one was provided.");
  }
  if (oFormat.oFormatOptions.calendarWeekNumbering && !Object.values(CalendarWeekNumbering_default2).includes(oFormat.oFormatOptions.calendarWeekNumbering)) {
    throw new TypeError("Illegal format option calendarWeekNumbering: '" + oFormat.oFormatOptions.calendarWeekNumbering + "'");
  }
  if (!oFormat.oFormatOptions.pattern) {
    if (oFormat.oFormatOptions.format) {
      oFormat.oFormatOptions.pattern = oFormat.oLocaleData.getCustomDateTimePattern(oFormat.oFormatOptions.format, oFormat.oFormatOptions.calendarType);
    } else {
      oFormat.oFormatOptions.pattern = oInfo.getPattern(oFormat.oLocaleData, oFormat.oFormatOptions.style, oFormat.oFormatOptions.calendarType);
    }
  }
  if (oFormat.oFormatOptions.interval) {
    var sSinglePattern, sDelimiter = oFormat.oFormatOptions.intervalDelimiter;
    if (oFormat.oFormatOptions.format) {
      oFormat.intervalPatterns = oFormat.oLocaleData.getCustomIntervalPattern(oFormat.oFormatOptions.format, null, oFormat.oFormatOptions.calendarType);
      if (typeof oFormat.intervalPatterns === "string") {
        oFormat.intervalPatterns = [oFormat.intervalPatterns];
      }
      sSinglePattern = oFormat.oLocaleData.getCustomDateTimePattern(oFormat.oFormatOptions.format, oFormat.oFormatOptions.calendarType);
      oFormat.intervalPatterns.push(sSinglePattern);
    } else {
      sSinglePattern = oFormat.oFormatOptions.pattern;
      oFormat.intervalPatterns = [
        // when 'format' option is not set, generate the combined interval pattern
        oFormat.oLocaleData.getCombinedIntervalPattern(oFormat.oFormatOptions.pattern, oFormat.oFormatOptions.calendarType),
        // Put the single date pattern into the array in case the date interval is formatted as a single date
        oFormat.oFormatOptions.pattern
      ];
    }
    oFormat.intervalPatterns.push(oFormat.oFormatOptions.pattern + " - " + oFormat.oFormatOptions.pattern);
    if (sDelimiter) {
      sDelimiter = sDelimiter.replace(/'/g, "''");
      sDelimiter = "'" + sDelimiter + "'";
      oFormat.intervalPatterns.unshift(sSinglePattern + sDelimiter + sSinglePattern);
    }
    oFormat.intervalPatterns = Array.from(new Set(oFormat.intervalPatterns));
  }
  if (!bIsFallback) {
    aFallbackFormatOptions = oInfo.aFallbackFormatOptions;
    if (oInfo.bShortFallbackFormatOptions) {
      sPattern = oInfo.getPattern(oFormat.oLocaleData, "short");
      aFallbackFormatOptions = aFallbackFormatOptions.concat(DateFormat._createFallbackOptionsWithoutDelimiter(sPattern));
    }
    if (oFormat.oFormatOptions.pattern && oInfo.bPatternFallbackWithoutDelimiter) {
      aFallbackFormatOptions = DateFormat._createFallbackOptionsWithoutDelimiter(oFormat.oFormatOptions.pattern).concat(aFallbackFormatOptions);
    }
    aFallbackFormatOptions = aFallbackFormatOptions.reduce(function(aFallbacks, oOptions) {
      var aKeys = Object.keys(oOptions), bDuplicate = aFallbacks.some(function(oOptions0) {
        return Object.keys(oOptions0).length === aKeys.length && aKeys.every(function(sKey) {
          return oOptions0[sKey] === oOptions[sKey];
        });
      });
      if (!bDuplicate) {
        aFallbacks.push(oOptions);
      }
      return aFallbacks;
    }, []);
    oFormat.aFallbackFormats = DateFormat._createFallbackFormat(aFallbackFormatOptions, oFormat.oFormatOptions.calendarType, oLocale, oInfo, oFormat.oFormatOptions);
  }
  oFormat.oRequiredParts = oInfo.oRequiredParts;
  oFormat.aRelativeScales = oInfo.aRelativeScales;
  oFormat.aRelativeParseScales = oInfo.aRelativeParseScales;
  oFormat.aIntervalCompareFields = oInfo.aIntervalCompareFields;
  oFormat.init();
  return oFormat;
};
DateFormat.prototype.init = function() {
  var sCalendarType = this.oFormatOptions.calendarType;
  this.aMonthsAbbrev = this.oLocaleData._getMonthsWithAlternatives("abbreviated", sCalendarType);
  this.aMonthsWide = this.oLocaleData.getMonths("wide", sCalendarType);
  this.aMonthsNarrow = this.oLocaleData.getMonths("narrow", sCalendarType);
  this.aMonthsAbbrevSt = this.oLocaleData._getMonthsStandAloneWithAlternatives("abbreviated", sCalendarType);
  this.aMonthsWideSt = this.oLocaleData.getMonthsStandAlone("wide", sCalendarType);
  this.aMonthsNarrowSt = this.oLocaleData.getMonthsStandAlone("narrow", sCalendarType);
  this.aDaysAbbrev = this.oLocaleData.getDays("abbreviated", sCalendarType);
  this.aDaysWide = this.oLocaleData.getDays("wide", sCalendarType);
  this.aDaysNarrow = this.oLocaleData.getDays("narrow", sCalendarType);
  this.aDaysShort = this.oLocaleData.getDays("short", sCalendarType);
  this.aDaysAbbrevSt = this.oLocaleData.getDaysStandAlone("abbreviated", sCalendarType);
  this.aDaysWideSt = this.oLocaleData.getDaysStandAlone("wide", sCalendarType);
  this.aDaysNarrowSt = this.oLocaleData.getDaysStandAlone("narrow", sCalendarType);
  this.aDaysShortSt = this.oLocaleData.getDaysStandAlone("short", sCalendarType);
  this.aQuartersAbbrev = this.oLocaleData.getQuarters("abbreviated", sCalendarType);
  this.aQuartersWide = this.oLocaleData.getQuarters("wide", sCalendarType);
  this.aQuartersNarrow = this.oLocaleData.getQuarters("narrow", sCalendarType);
  this.aQuartersAbbrevSt = this.oLocaleData.getQuartersStandAlone("abbreviated", sCalendarType);
  this.aQuartersWideSt = this.oLocaleData.getQuartersStandAlone("wide", sCalendarType);
  this.aQuartersNarrowSt = this.oLocaleData.getQuartersStandAlone("narrow", sCalendarType);
  this.aErasNarrow = this.oLocaleData.getEras("narrow", sCalendarType);
  this.aErasAbbrev = this.oLocaleData.getEras("abbreviated", sCalendarType);
  this.aErasWide = this.oLocaleData.getEras("wide", sCalendarType);
  this.aDayPeriodsAbbrev = this.oLocaleData.getDayPeriods("abbreviated", sCalendarType);
  this.aDayPeriodsNarrow = this.oLocaleData.getDayPeriods("narrow", sCalendarType);
  this.aDayPeriodsWide = this.oLocaleData.getDayPeriods("wide", sCalendarType);
  this.oFlexibleDayPeriodsAbbrev = this.oLocaleData.getFlexibleDayPeriods("abbreviated", sCalendarType);
  this.oFlexibleDayPeriodsNarrow = this.oLocaleData.getFlexibleDayPeriods("narrow", sCalendarType);
  this.oFlexibleDayPeriodsWide = this.oLocaleData.getFlexibleDayPeriods("wide", sCalendarType);
  this.oFlexibleDayPeriodsAbbrevSt = this.oLocaleData.getFlexibleDayPeriodsStandAlone("abbreviated", sCalendarType);
  this.oFlexibleDayPeriodsNarrowSt = this.oLocaleData.getFlexibleDayPeriodsStandAlone("narrow", sCalendarType);
  this.oFlexibleDayPeriodsWideSt = this.oLocaleData.getFlexibleDayPeriodsStandAlone("wide", sCalendarType);
  this.aFormatArray = this.parseCldrDatePattern(this.oFormatOptions.pattern);
  this.sAllowedCharacters = this.getAllowedCharacters(this.aFormatArray);
};
DateFormat._createFallbackFormat = function(aFallbackFormatOptions, sCalendarType, oLocale, oInfo, oParentFormatOptions) {
  return aFallbackFormatOptions.map(function(oOptions) {
    var oFormatOptions = Object.assign({}, oOptions);
    oFormatOptions.showDate = oParentFormatOptions.showDate;
    oFormatOptions.showTime = oParentFormatOptions.showTime;
    oFormatOptions.showTimezone = oParentFormatOptions.showTimezone;
    if (typeof oInfo.getTimezonePattern === "function" && oFormatOptions.pattern) {
      oFormatOptions.pattern = oInfo.getTimezonePattern(oFormatOptions.pattern);
    }
    if (oParentFormatOptions.interval) {
      oFormatOptions.interval = true;
    }
    oFormatOptions.calendarType = sCalendarType;
    return DateFormat.createInstance(oFormatOptions, oLocale, oInfo, true);
  });
};
DateFormat._createFallbackOptionsWithoutDelimiter = function(sBasePattern) {
  var rNonDateFields = /[^dMyGU]/g, oDayReplace = {
    regex: /d+/g,
    replace: "dd"
  }, oMonthReplace = {
    regex: /M+/g,
    replace: "MM"
  }, oYearReplace = {
    regex: /[yU]+/g,
    replace: ["yyyy", "yy"]
  };
  sBasePattern = sBasePattern.replace(rNonDateFields, "");
  sBasePattern = sBasePattern.replace(oDayReplace.regex, oDayReplace.replace);
  sBasePattern = sBasePattern.replace(oMonthReplace.regex, oMonthReplace.replace);
  return oYearReplace.replace.map(function(sReplace) {
    return {
      pattern: sBasePattern.replace(oYearReplace.regex, sReplace),
      strictParsing: true
    };
  });
};
var oParseHelper = {
  isNumber: function(iCharCode) {
    return iCharCode >= 48 && iCharCode <= 57;
  },
  findNumbers: function(sValue, iMaxLength) {
    var iLength = 0;
    while (iLength < iMaxLength && this.isNumber(sValue.charCodeAt(iLength))) {
      iLength++;
    }
    return sValue.substr(0, iLength);
  },
  /**
   * Returns if the given string starts with another given string ignoring the case.
   *
   * Takes the locale into account to ensure the characters are interpreted the right way.
   *
   * First, an exact case check is performed to remain backward compatible, then a case-insensitive check
   * based on the locale is done.
   *
   * When during the case conversion the length of the string changes we cannot safely match
   * it and return <code>false</code>.
   *
   * @param {string} sValue the value to check, e.g. "März 2013"
   * @param {string} sSubstring the string to compare it with, e.g. "MÄRZ"
   * @param {string} sLocale the locale, e.g. "de-DE"
   * @returns {boolean} true if the given string <code>sValue</code> starts with <code>sSubstring</code>
   * @private
   */
  startsWithIgnoreCase: function(sValue, sSubstring, sLocale) {
    if (sValue.startsWith(sSubstring)) {
      return true;
    }
    try {
      var sSubToLocaleUpperCase = sSubstring.toLocaleUpperCase(sLocale);
      var sValueUpperCase = sValue.toLocaleUpperCase(sLocale);
      if (sSubToLocaleUpperCase.length !== sSubstring.length || sValueUpperCase.length !== sValue.length) {
        return false;
      }
      return sValueUpperCase.startsWith(sSubToLocaleUpperCase);
    } catch (e) {
      return false;
    }
  },
  /**
   * Finds the longest matching entry for which the following applies:
   * * <code>sValue</code> starts with the found entry
   *
   * The index of the finding in <code>aList</code> and the length of the match is returned.
   * The case is ignored and the given locale is used for the string comparison.
   *
   * @example
   * findEntry("MÄRZ 2013", ["Januar", "Februar", "März", "April", ...], "de-DE");
   * // {length: 4, index: 2}
   * @example
   * findEntry("Sep 2013", [..., "Aug", ["Sept", "Sep"], "Oct", ...], "en-GB");
   * // {length: 3, index: 8}
   *
   * @param {string} sValue the input value, e.g. "MÄRZ 2013"
   * @param {string[]|Array<string[]>} aList
   *   The list of values to check, e.g. ["Januar", "Februar", "März", "April", ...]; the list may contain also
   *   arrays of strings containing alternatives, e.g. [..., "Aug", ["Sept", "Sep"], "Oct", ...]
   * @param {string} sLocale the locale which is used for the string comparison, e.g. "de-DE"
   * @returns {{length: number, index: number}} the length of the match in sValue, the index in the list of values
   *   e.g. length: 4, index: 2 ("MÄRZ")
   * @private
   */
  findEntry: function(sValue, aList, sLocale) {
    let iFoundIndex = -1;
    let iMatchedLength = 0;
    aList.forEach((vEntry, j) => {
      (Array.isArray(vEntry) ? vEntry : [vEntry]).forEach((sEntry) => {
        if (sEntry.length > iMatchedLength && this.startsWithIgnoreCase(sValue, sEntry, sLocale)) {
          iFoundIndex = j;
          iMatchedLength = sEntry.length;
        }
      });
    });
    return {
      index: iFoundIndex,
      length: iMatchedLength
    };
  },
  /**
   * Parses a given timezone
   *
   * @param {string} sValue String to parse, e.g. "-0800", "-08:00", "-08"
   * @param {boolean} bColonSeparated Whether or not the values are colon separated, e.g. "-08:00"
   * @returns {{tzDiff: number, length: number}} Object containing the timezone difference in seconds and the length of the parsed segment
   */
  parseTZ: function(sValue, bColonSeparated) {
    var iLength = 0;
    var iTZFactor = sValue.charAt(0) === "+" ? -1 : 1;
    var sPart;
    if (sValue[0] === "Z") {
      return {
        length: 1,
        tzDiff: 0
      };
    }
    iLength++;
    sPart = this.findNumbers(sValue.substr(iLength), 2);
    var iTZDiffHour = parseInt(sPart);
    iLength += 2;
    if (bColonSeparated) {
      iLength++;
    }
    sPart = this.findNumbers(sValue.substr(iLength), 2);
    var iTZDiff = 0;
    if (sPart) {
      iLength += 2;
      iTZDiff = parseInt(sPart);
    }
    return {
      length: iLength,
      tzDiff: (iTZDiff + 60 * iTZDiffHour) * 60 * iTZFactor
    };
  },
  /**
   * Returns <code>false</code> if the given pattern symbol name is required and the value for that part is
   * invalid, otherwise <code>true</code> is returned.
   *
   * @param {string} sSymbolName
   *   A unique pattern symbol name
   * @param {boolean} bPartInvalid
   *   Whether the value for the given pattern symbol name is invalid
   * @param {sap.ui.core.format.DateFormat} oFormat
   *   The <code>DateFormat</code> instance
   * @returns {boolean}
   *   <code>false</code> if the given pattern symbol name is required and the value for that part is invalid,
   *   otherwise <code>true</code>
   */
  checkValid: function(sSymbolName, bPartInvalid, oFormat) {
    if (sSymbolName in oFormat.oRequiredParts && bPartInvalid) {
      return false;
    }
    return true;
  }
};
DateFormat._oParseHelper = oParseHelper;
DateFormat._createPatternSymbol = function(mParameters) {
  var fnIsNumeric = typeof mParameters.isNumeric === "function" && mParameters.isNumeric || function() {
    return mParameters.isNumeric || false;
  };
  return {
    name: mParameters.name,
    /**
     * Formatter for a pattern symbol.
     *
     * @param {Object<string, any>} oField
     *   The date pattern field as parsed by {@link DateFormat#parseCldrDatePattern}
     * @param {sap.ui.core.date.UniversalDate} oDate
     *   The date object to format
     * @param {boolean} bUTC
     *   Whether the UTC option is set
     * @param {sap.ui.core.format.DateFormat} oFormat
     *   The <code>DateFormat</code> instance
     * @returns {string}
     *   The formatted date information for this date pattern part
     */
    format: mParameters.format || function() {
      return "";
    },
    /**
     * Parser for a pattern symbol.
     *
     * @param {string} sValue
     *   The given input
     * @param {Object<string, any>} oPart
     *   The date pattern field as parsed by {@link DateFormat#parseCldrDatePattern}
     * @param {sap.ui.core.format.DateFormat} oFormat
     *   The <code>DateFormat</code> instance
     * @param {object} oConfig
     *   The configuration object for parsing the value
     * @param {object} oConfig.dateValue
     *   The already parsed date fields
     * @param {boolean} oConfig.exactLength
     *   Whether parsing with the exact length specified by {@link DateFormat#parseCldrDatePattern} is needed
     * @param {object[]} oConfig.formatArray
     *   The complete format array as parsed by {@link DateFormat#parseCldrDatePattern}
     * @param {int} oConfig.index
     *   The current index in the format array
     * @param {boolean} oConfig.strict
     *   Whether to disallow overflows for component values of a date (see
     *   https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/Date).
     *   Note that the corresponding checks are just for number ranges which are possible <em>at max</em>
     *   without overflow; the check for day does not consider the month and year to compute the maximum
     *   number of days allowed.
     * @param {string} sTimezone
     *   The IANA timezone ID
     * @returns {object}
     *   The parsed date information for this date pattern part; could contain the property <code>valid</code>
     *   set to <code>false</code> if parsing was not successful
     */
    parse: mParameters.parse || function() {
      return {};
    },
    /**
     * Evaluates whether this symbol has a numeric representation.
     *
     * @param {int} [iDigits] The number of repetitions of the pattern symbol, e.g. <code>3</code> for "aaa"
     * @returns {boolean} Whether this symbol has a numeric representation
     */
    isNumeric: fnIsNumeric
  };
};
DateFormat.prototype.oSymbols = {
  "": DateFormat._createPatternSymbol({
    name: "text",
    format: function(oField, oDate) {
      return oField.value;
    },
    parse: function(sValue, oPart, oFormat, oConfig) {
      var sChar;
      var bValid = true;
      var iValueIndex = 0;
      var iPatternIndex = 0;
      var sDelimiter = "-~‐‑‒–—﹘﹣－～";
      const sPartValue = DateFormat._normalize(oPart.value);
      for (; iPatternIndex < sPartValue.length; iPatternIndex++) {
        sChar = sPartValue.charAt(iPatternIndex);
        if (sChar === " ") {
          while (sValue.charAt(iValueIndex) === " ") {
            iValueIndex++;
          }
        } else if (sDelimiter.includes(sChar)) {
          if (!sDelimiter.includes(sValue.charAt(iValueIndex))) {
            bValid = false;
          }
          iValueIndex++;
        } else {
          if (sValue.charAt(iValueIndex) !== sChar) {
            bValid = false;
          }
          iValueIndex++;
        }
        if (!bValid) {
          break;
        }
      }
      if (bValid) {
        return {
          length: iValueIndex
        };
      } else {
        var bPartInvalid = false;
        if (oConfig.index < oConfig.formatArray.length - 1) {
          bPartInvalid = oConfig.formatArray[oConfig.index + 1].type in oFormat.oRequiredParts;
        }
        return {
          valid: oParseHelper.checkValid(oPart.type, bPartInvalid, oFormat)
        };
      }
    }
  }),
  "G": DateFormat._createPatternSymbol({
    name: "era",
    format: function(oField, oDate, bUTC, oFormat) {
      var iEra = oDate.getUTCEra();
      if (oField.digits <= 3) {
        return oFormat.aErasAbbrev[iEra];
      } else if (oField.digits === 4) {
        return oFormat.aErasWide[iEra];
      } else {
        return oFormat.aErasNarrow[iEra];
      }
    },
    parse: function(sValue, oPart, oFormat, oConfig) {
      var aErasVariants = [oFormat.aErasWide, oFormat.aErasAbbrev, oFormat.aErasNarrow];
      for (var i = 0; i < aErasVariants.length; i++) {
        var aVariants = aErasVariants[i];
        var oFound = oParseHelper.findEntry(sValue, aVariants, oFormat.oLocaleData.sCLDRLocaleId);
        if (oFound.index !== -1) {
          return {
            era: oFound.index,
            length: oFound.length
          };
        }
      }
      return {
        era: oFormat.aErasWide.length - 1,
        valid: oParseHelper.checkValid(oPart.type, true, oFormat)
      };
    }
  }),
  "y": DateFormat._createPatternSymbol({
    name: "year",
    format: function(oField, oDate, bUTC, oFormat) {
      var iYear = oDate.getUTCFullYear();
      var sYear = String(iYear);
      var sCalendarType = oFormat.oFormatOptions.calendarType;
      if (oField.digits === 2 && sYear.length > 2) {
        sYear = sYear.substr(sYear.length - 2);
      }
      if (sCalendarType !== CalendarType_default3.Japanese && oField.digits === 1 && iYear < 100) {
        sYear = sYear.padStart(4, "0");
      }
      return sYear.padStart(oField.digits, "0");
    },
    parse: function(sValue, oPart, oFormat, oConfig) {
      var iExpectedDigits, sPart, bPartInvalid, sCalendarType = oFormat.oFormatOptions.calendarType;
      if (oPart.digits === 1) {
        iExpectedDigits = 4;
      } else if (oPart.digits === 2) {
        iExpectedDigits = 2;
      } else {
        iExpectedDigits = oPart.digits;
      }
      sPart = oParseHelper.findNumbers(sValue, iExpectedDigits);
      bPartInvalid = sPart === "" || oConfig.exactLength && sPart.length !== iExpectedDigits;
      var iYear = parseInt(sPart);
      if (sCalendarType !== CalendarType_default3.Japanese && sPart.length <= 2) {
        var oCurrentDate = UniversalDate_default.getInstance(UI5Date_default.getInstance(), sCalendarType), iCurrentYear = oCurrentDate.getUTCFullYear(), iCurrentCentury = Math.floor(iCurrentYear / 100), iYearDiff = iCurrentCentury * 100 + iYear - iCurrentYear;
        if (iYearDiff < -70) {
          iYear += (iCurrentCentury + 1) * 100;
        } else if (iYearDiff < 30) {
          iYear += iCurrentCentury * 100;
        } else {
          iYear += (iCurrentCentury - 1) * 100;
        }
      }
      return {
        length: sPart.length,
        valid: oParseHelper.checkValid(oPart.type, bPartInvalid, oFormat),
        year: iYear
      };
    },
    isNumeric: true
  }),
  "Y": DateFormat._createPatternSymbol({
    name: "weekYear",
    format: function(oField, oDate, bUTC, oFormat) {
      var oWeek = oDate.getUTCWeek(oFormat.oLocale, getCalendarWeekParameter(oFormat.oFormatOptions));
      var iWeekYear = oWeek.year;
      var sWeekYear = String(iWeekYear);
      var sCalendarType = oFormat.oFormatOptions.calendarType;
      if (oField.digits === 2 && sWeekYear.length > 2) {
        sWeekYear = sWeekYear.substr(sWeekYear.length - 2);
      }
      if (sCalendarType !== CalendarType_default3.Japanese && oField.digits === 1 && iWeekYear < 100) {
        sWeekYear = sWeekYear.padStart(4, "0");
      }
      return sWeekYear.padStart(oField.digits, "0");
    },
    parse: function(sValue, oPart, oFormat, oConfig) {
      var iExpectedDigits, sPart, bPartInvalid, sCalendarType = oFormat.oFormatOptions.calendarType;
      if (oPart.digits === 1) {
        iExpectedDigits = 4;
      } else if (oPart.digits === 2) {
        iExpectedDigits = 2;
      } else {
        iExpectedDigits = oPart.digits;
      }
      sPart = oParseHelper.findNumbers(sValue, iExpectedDigits);
      bPartInvalid = sPart === "" || oConfig.exactLength && sPart.length !== iExpectedDigits;
      var iYear = parseInt(sPart);
      var iWeekYear = iYear;
      if (sCalendarType !== CalendarType_default3.Japanese && sPart.length <= 2) {
        var oCurrentDate = UniversalDate_default.getInstance(UI5Date_default.getInstance(), sCalendarType), iCurrentYear = oCurrentDate.getUTCFullYear(), iCurrentCentury = Math.floor(iCurrentYear / 100), iYearDiff = iCurrentCentury * 100 + iWeekYear - iCurrentYear;
        if (iYearDiff < -70) {
          iWeekYear += (iCurrentCentury + 1) * 100;
        } else if (iYearDiff < 30) {
          iWeekYear += iCurrentCentury * 100;
        } else {
          iWeekYear += (iCurrentCentury - 1) * 100;
        }
      }
      return {
        length: sPart.length,
        valid: oParseHelper.checkValid(oPart.type, bPartInvalid, oFormat),
        year: iYear,
        weekYear: iWeekYear
      };
    },
    isNumeric: true
  }),
  "M": DateFormat._createPatternSymbol({
    name: "month",
    format: function(oField, oDate, bUTC, oFormat) {
      var iMonth = oDate.getUTCMonth();
      if (oField.digits === 3) {
        const vName = oFormat.aMonthsAbbrev[iMonth];
        return Array.isArray(vName) ? vName[0] : vName;
      } else if (oField.digits === 4) {
        return oFormat.aMonthsWide[iMonth];
      } else if (oField.digits > 4) {
        return oFormat.aMonthsNarrow[iMonth];
      } else {
        return String(iMonth + 1).padStart(oField.digits, "0");
      }
    },
    parse: function(sValue, oPart, oFormat, oConfig) {
      var iMonth, sPart, bPartInvalid, bValid, aMonthsVariants = [oFormat.aMonthsWide, oFormat.aMonthsWideSt, oFormat.aMonthsAbbrev, oFormat.aMonthsAbbrevSt, oFormat.aMonthsNarrow, oFormat.aMonthsNarrowSt];
      if (oPart.digits < 3) {
        sPart = oParseHelper.findNumbers(sValue, Math.max(oPart.digits, 2));
        bPartInvalid = sPart === "" || oConfig.exactLength && sPart.length < 2;
        bValid = oParseHelper.checkValid(oPart.type, bPartInvalid, oFormat);
        iMonth = parseInt(sPart) - 1;
        if (oConfig.strict && (iMonth > 11 || iMonth < 0)) {
          bValid = false;
        }
      } else {
        for (var i = 0; i < aMonthsVariants.length; i++) {
          var aVariants = aMonthsVariants[i];
          var oFound = oParseHelper.findEntry(sValue, aVariants, oFormat.oLocaleData.sCLDRLocaleId);
          if (oFound.index !== -1) {
            return {
              month: oFound.index,
              length: oFound.length
            };
          }
        }
        bValid = oParseHelper.checkValid(oPart.type, true, oFormat);
      }
      return {
        month: iMonth,
        length: sPart ? sPart.length : 0,
        valid: bValid
      };
    },
    isNumeric: function(iDigits) {
      return iDigits < 3;
    }
  }),
  "L": DateFormat._createPatternSymbol({
    name: "monthStandalone",
    format: function(oField, oDate, bUTC, oFormat) {
      var iMonth = oDate.getUTCMonth();
      if (oField.digits === 3) {
        const vName = oFormat.aMonthsAbbrevSt[iMonth];
        return Array.isArray(vName) ? vName[0] : vName;
      } else if (oField.digits === 4) {
        return oFormat.aMonthsWideSt[iMonth];
      } else if (oField.digits > 4) {
        return oFormat.aMonthsNarrowSt[iMonth];
      } else {
        return String(iMonth + 1).padStart(oField.digits, "0");
      }
    },
    parse: function(sValue, oPart, oFormat, oConfig) {
      var iMonth, sPart, bPartInvalid, bValid, aMonthsVariants = [oFormat.aMonthsWide, oFormat.aMonthsWideSt, oFormat.aMonthsAbbrev, oFormat.aMonthsAbbrevSt, oFormat.aMonthsNarrow, oFormat.aMonthsNarrowSt];
      if (oPart.digits < 3) {
        sPart = oParseHelper.findNumbers(sValue, Math.max(oPart.digits, 2));
        bPartInvalid = sPart === "" || oConfig.exactLength && sPart.length < 2;
        bValid = oParseHelper.checkValid(oPart.type, bPartInvalid, oFormat);
        iMonth = parseInt(sPart) - 1;
        if (oConfig.strict && (iMonth > 11 || iMonth < 0)) {
          bValid = false;
        }
      } else {
        for (var i = 0; i < aMonthsVariants.length; i++) {
          var aVariants = aMonthsVariants[i];
          var oFound = oParseHelper.findEntry(sValue, aVariants, oFormat.oLocaleData.sCLDRLocaleId);
          if (oFound.index !== -1) {
            return {
              month: oFound.index,
              length: oFound.length
            };
          }
        }
        bValid = oParseHelper.checkValid(oPart.type, true, oFormat);
      }
      return {
        month: iMonth,
        length: sPart ? sPart.length : 0,
        valid: bValid
      };
    },
    isNumeric: function(iDigits) {
      return iDigits < 3;
    }
  }),
  "w": DateFormat._createPatternSymbol({
    name: "weekInYear",
    format: function(oField, oDate, bUTC, oFormat) {
      var oWeek = oDate.getUTCWeek(oFormat.oLocale, getCalendarWeekParameter(oFormat.oFormatOptions));
      var iWeek = oWeek.week;
      var sWeek = String(iWeek + 1);
      if (oField.digits < 3) {
        sWeek = sWeek.padStart(oField.digits, "0");
      } else {
        sWeek = oFormat.oLocaleData.getCalendarWeek(oField.digits === 3 ? "narrow" : "wide", sWeek.padStart(2, "0"));
      }
      return sWeek;
    },
    parse: function(sValue, oPart, oFormat, oConfig) {
      var sPart, bPartInvalid, bValid, iWeek, iLength = 0;
      if (oPart.digits < 3) {
        sPart = oParseHelper.findNumbers(sValue, 2);
        iLength = sPart.length;
        iWeek = parseInt(sPart) - 1;
        bPartInvalid = !sPart || oConfig.exactLength && iLength < 2;
        bValid = oParseHelper.checkValid(oPart.type, bPartInvalid, oFormat);
      } else {
        sPart = oFormat.oLocaleData.getCalendarWeek(oPart.digits === 3 ? "narrow" : "wide");
        sPart = sPart.replace("{0}", "([0-9]+)");
        var rWeekNumber = new RegExp(sPart), oResult = rWeekNumber.exec(sValue);
        if (oResult) {
          iLength = oResult[0].length;
          iWeek = parseInt(oResult[oResult.length - 1]) - 1;
        } else {
          bValid = oParseHelper.checkValid(oPart.type, true, oFormat);
        }
      }
      return {
        length: iLength,
        valid: bValid,
        week: iWeek
      };
    },
    isNumeric: function(iDigits) {
      return iDigits < 3;
    }
  }),
  "W": DateFormat._createPatternSymbol({
    name: "weekInMonth"
  }),
  "D": DateFormat._createPatternSymbol({
    name: "dayInYear"
  }),
  "d": DateFormat._createPatternSymbol({
    name: "day",
    format: function(oField, oDate) {
      var iDate = oDate.getUTCDate();
      return String(iDate).padStart(oField.digits, "0");
    },
    parse: function(sValue, oPart, oFormat, oConfig) {
      var sPart = oParseHelper.findNumbers(sValue, Math.max(oPart.digits, 2)), bPartInvalid = sPart === "" || oConfig.exactLength && sPart.length < 2, bValid = oParseHelper.checkValid(oPart.type, bPartInvalid, oFormat), iDay = parseInt(sPart);
      if (oConfig.strict && (iDay > 31 || iDay < 1)) {
        bValid = false;
      }
      return {
        day: iDay,
        length: sPart.length,
        valid: bValid
      };
    },
    isNumeric: true
  }),
  "Q": DateFormat._createPatternSymbol({
    name: "quarter",
    format: function(oField, oDate, bUTC, oFormat) {
      var iQuarter = oDate.getUTCQuarter();
      if (oField.digits === 3) {
        return oFormat.aQuartersAbbrev[iQuarter];
      } else if (oField.digits === 4) {
        return oFormat.aQuartersWide[iQuarter];
      } else if (oField.digits > 4) {
        return oFormat.aQuartersNarrow[iQuarter];
      } else {
        return String(iQuarter + 1).padStart(oField.digits, "0");
      }
    },
    parse: function(sValue, oPart, oFormat, oConfig) {
      var sPart, bPartInvalid, iQuarter, bValid;
      var aQuartersVariants = [oFormat.aQuartersWide, oFormat.aQuartersWideSt, oFormat.aQuartersAbbrev, oFormat.aQuartersAbbrevSt, oFormat.aQuartersNarrow, oFormat.aQuartersNarrowSt];
      if (oPart.digits < 3) {
        sPart = oParseHelper.findNumbers(sValue, Math.max(oPart.digits, 2));
        bPartInvalid = sPart === "" || oConfig.exactLength && sPart.length < 2;
        bValid = oParseHelper.checkValid(oPart.type, bPartInvalid, oFormat);
        iQuarter = parseInt(sPart) - 1;
        if (oConfig.strict && iQuarter > 3) {
          bValid = false;
        }
      } else {
        for (var i = 0; i < aQuartersVariants.length; i++) {
          var aVariants = aQuartersVariants[i];
          var oFound = oParseHelper.findEntry(sValue, aVariants, oFormat.oLocaleData.sCLDRLocaleId);
          if (oFound.index !== -1) {
            return {
              quarter: oFound.index,
              length: oFound.length
            };
          }
        }
        bValid = oParseHelper.checkValid(oPart.type, true, oFormat);
      }
      return {
        length: sPart ? sPart.length : 0,
        quarter: iQuarter,
        valid: bValid
      };
    },
    isNumeric: function(iDigits) {
      return iDigits < 3;
    }
  }),
  "q": DateFormat._createPatternSymbol({
    name: "quarterStandalone",
    format: function(oField, oDate, bUTC, oFormat) {
      var iQuarter = oDate.getUTCQuarter();
      if (oField.digits === 3) {
        return oFormat.aQuartersAbbrevSt[iQuarter];
      } else if (oField.digits === 4) {
        return oFormat.aQuartersWideSt[iQuarter];
      } else if (oField.digits > 4) {
        return oFormat.aQuartersNarrowSt[iQuarter];
      } else {
        return String(iQuarter + 1).padStart(oField.digits, "0");
      }
    },
    parse: function(sValue, oPart, oFormat, oConfig) {
      var sPart, bPartInvalid, iQuarter, bValid;
      var aQuartersVariants = [oFormat.aQuartersWide, oFormat.aQuartersWideSt, oFormat.aQuartersAbbrev, oFormat.aQuartersAbbrevSt, oFormat.aQuartersNarrow, oFormat.aQuartersNarrowSt];
      if (oPart.digits < 3) {
        sPart = oParseHelper.findNumbers(sValue, Math.max(oPart.digits, 2));
        bPartInvalid = sPart === "" || oConfig.exactLength && sPart.length < 2;
        bValid = oParseHelper.checkValid(oPart.type, bPartInvalid, oFormat);
        iQuarter = parseInt(sPart) - 1;
        if (oConfig.strict && iQuarter > 3) {
          bValid = false;
        }
      } else {
        for (var i = 0; i < aQuartersVariants.length; i++) {
          var aVariants = aQuartersVariants[i];
          var oFound = oParseHelper.findEntry(sValue, aVariants, oFormat.oLocaleData.sCLDRLocaleId);
          if (oFound.index !== -1) {
            return {
              quarter: oFound.index,
              length: oFound.length
            };
          }
        }
        bValid = oParseHelper.checkValid(oPart.type, true, oFormat);
      }
      return {
        length: sPart ? sPart.length : 0,
        quarter: iQuarter,
        valid: bValid
      };
    },
    isNumeric: function(iDigits) {
      return iDigits < 3;
    }
  }),
  "F": DateFormat._createPatternSymbol({
    name: "dayOfWeekInMonth"
  }),
  "E": DateFormat._createPatternSymbol({
    name: "dayNameInWeek",
    //Day of week name, format style.
    format: function(oField, oDate, bUTC, oFormat) {
      var iDay = oDate.getUTCDay();
      if (oField.digits < 4) {
        return oFormat.aDaysAbbrev[iDay];
      } else if (oField.digits === 4) {
        return oFormat.aDaysWide[iDay];
      } else if (oField.digits === 5) {
        return oFormat.aDaysNarrow[iDay];
      } else {
        return oFormat.aDaysShort[iDay];
      }
    },
    parse: function(sValue, oPart, oFormat, oConfig) {
      var aDaysVariants = [oFormat.aDaysWide, oFormat.aDaysWideSt, oFormat.aDaysAbbrev, oFormat.aDaysAbbrevSt, oFormat.aDaysShort, oFormat.aDaysShortSt, oFormat.aDaysNarrow, oFormat.aDaysNarrowSt];
      for (var i = 0; i < aDaysVariants.length; i++) {
        var aVariants = aDaysVariants[i];
        var oFound = oParseHelper.findEntry(sValue, aVariants, oFormat.oLocaleData.sCLDRLocaleId);
        if (oFound.index !== -1) {
          return {
            // gets translated to dayOfWeek where the day of week is relative to the week
            dayOfWeek: oFound.index,
            length: oFound.length
          };
        }
      }
    }
  }),
  "c": DateFormat._createPatternSymbol({
    name: "dayNameInWeekStandalone",
    format: function(oField, oDate, bUTC, oFormat) {
      var iDay = oDate.getUTCDay();
      if (oField.digits < 4) {
        return oFormat.aDaysAbbrevSt[iDay];
      } else if (oField.digits === 4) {
        return oFormat.aDaysWideSt[iDay];
      } else if (oField.digits === 5) {
        return oFormat.aDaysNarrowSt[iDay];
      } else {
        return oFormat.aDaysShortSt[iDay];
      }
    },
    parse: function(sValue, oPart, oFormat, oConfig) {
      var aDaysVariants = [oFormat.aDaysWide, oFormat.aDaysWideSt, oFormat.aDaysAbbrev, oFormat.aDaysAbbrevSt, oFormat.aDaysShort, oFormat.aDaysShortSt, oFormat.aDaysNarrow, oFormat.aDaysNarrowSt];
      for (var i = 0; i < aDaysVariants.length; i++) {
        var aVariants = aDaysVariants[i];
        var oFound = oParseHelper.findEntry(sValue, aVariants, oFormat.oLocaleData.sCLDRLocaleId);
        if (oFound.index !== -1) {
          return {
            day: oFound.index,
            length: oFound.length
          };
        }
      }
    }
  }),
  // day number of week (depends on locale's first day of week)
  // e.g. Thursday
  // "de": 4 (firstDay: 1)
  // "en": 5 (firstDay: 0)
  // "ar": 6 (firstDay: 6)
  "u": DateFormat._createPatternSymbol({
    name: "dayNumberOfWeek",
    format: function(oField, oDate, bUTC, oFormat) {
      var iDay = oDate.getUTCDay();
      return oFormat._adaptDayOfWeek(iDay);
    },
    parse: function(sValue, oPart, oFormat, oConfig) {
      var sPart = oParseHelper.findNumbers(sValue, oPart.digits), bPartInvalid = oConfig.exactLength && sPart.length !== oPart.digits;
      return {
        dayNumberOfWeek: parseInt(sPart),
        length: sPart.length,
        valid: oParseHelper.checkValid(oPart.type, bPartInvalid, oFormat)
      };
    },
    isNumeric: true
  }),
  "a": DateFormat._createPatternSymbol({
    name: "amPmMarker",
    /**
     * Formats the day period.
     *
     * @param {Object<string, any>} oField
     *   The date pattern field as parsed by {@link DateFormat#parseCldrDatePattern}
     * @param {number} oField.digits
     *   The number of repetitions of the pattern symbol, e.g. <code>3</code> for "aaa"
     * @param {string} oField.symbol
     *   The pattern symbol "a"
     * @param {string} oField.type
     *   The symbol name "amPmMarker"
     * @param {sap.ui.core.date.UniversalDate} oDate
     *   The date to format
     * @param {boolean} [bUTC]
     *   Whether the UTC option is set; not used
     * @param {sap.ui.core.format.DateFormat} oFormat
     *   The <code>DateFormat</code> instance
     * @returns {string}
     *   The formatted day period, e.g. "AM" for symbol "a"
     */
    format: function(oField, oDate, bUTC, oFormat) {
      var iDayPeriod = oDate.getUTCDayPeriod();
      if (oField.digits <= 3) {
        return oFormat.aDayPeriodsAbbrev[iDayPeriod];
      } else if (oField.digits === 4) {
        return oFormat.aDayPeriodsWide[iDayPeriod];
      } else {
        return oFormat.aDayPeriodsNarrow[iDayPeriod];
      }
    },
    /**
     * Parses the day period from a given input string.
     *
     * @param {string} sValue
     *   The given input, e.g. "am 13:37"
     * @param {Object<string, any>} oPart
     *   The date pattern field as parsed by {@link DateFormat#parseCldrDatePattern}
     * @param {number} oPart.digits
     *   The number of repetitions of the pattern symbol, e.g. <code>3</code> for "aaa"
     * @param {string} oPart.symbol
     *   The pattern symbol "a"
     * @param {string} oPart.type
     *   The symbol name "amPmMarker"
     * @param {sap.ui.core.format.DateFormat} oFormat
     *   The <code>DateFormat</code> instance
     * @param {Object<string, any>} [oConfig]
     *   The configuration object for parsing the value
     * @param {object[]} [oConfig.formatArray]
     *   The complete format array as parsed by {@link DateFormat#parseCldrDatePattern}
     * @param {object} [oConfig.dateValue]
     *   The already parsed date fields
     * @param {number} [oConfig.index]
     *   The index in the format array
     * @param {boolean} [oConfig.strict]
     *   Whether to use the strict option
     * @param {string} [sTimezone]
     *   The IANA timezone ID
     * @returns {{length : number, pm : boolean}|{}}
     *   An object with the <code>length</code> of the match and the parsed <code>pm</code>
     *   value; or an object with property valid <code>false</code> if it could not be
     *   parsed correctly
     */
    parse: function(sValue, oPart, oFormat, oConfig, sTimezone) {
      var rAMPM, bAMPMAlternativeCase, oEntry, i, aMatch, aVariants, aDayPeriodsVariants = [oFormat.aDayPeriodsWide, oFormat.aDayPeriodsAbbrev, oFormat.aDayPeriodsNarrow];
      rAMPM = /[aApP](?:\.)?[\x20\xA0]?[mM](?:\.)?/;
      aMatch = sValue.match(rAMPM);
      bAMPMAlternativeCase = aMatch && aMatch.index === 0;
      function removeSpacesAndDots(sValue2) {
        return sValue2.replace(/[\x20\xA0]/g, "").replace(/\./g, "");
      }
      if (bAMPMAlternativeCase) {
        sValue = removeSpacesAndDots(sValue);
      }
      for (i = 0; i < aDayPeriodsVariants.length; i += 1) {
        aVariants = aDayPeriodsVariants[i].map((sDayPeriod) => {
          return DateFormat._normalize(sDayPeriod);
        });
        if (bAMPMAlternativeCase) {
          aVariants = aVariants.map(removeSpacesAndDots);
        }
        oEntry = oParseHelper.findEntry(sValue, aVariants, oFormat.oLocaleData.sCLDRLocaleId);
        if (oEntry.index !== -1) {
          return {
            pm: oEntry.index === 1,
            // am/pm alternative may include an additional dot, e.g. "am."
            // therefore the length for the am/pm alternative is the length of the
            // match
            length: bAMPMAlternativeCase ? aMatch[0].length : oEntry.length
          };
        }
      }
      return {
        valid: false
      };
    }
  }),
  "B": DateFormat._createPatternSymbol({
    name: "flexibleDayPeriod",
    /**
     * Formats the flexible day period.
     *
     * @param {Object<string, any>} oField
     *   The date pattern field as parsed by {@link DateFormat#parseCldrDatePattern}
     * @param {int} oField.digits
     *   The number of repetitions of the pattern symbol, e.g. <code>3</code> for "BBB"
     * @param {sap.ui.core.date.UniversalDate} oDate
     *   The date object to format
     * @param {boolean} bUTC
     *   Whether the UTC option is set; not used
     * @param {sap.ui.core.format.DateFormat} oFormat
     *   The <code>DateFormat</code> instance
     * @returns {string}
     *   The selected day period e.g. "in the afternoon" for the according style width
     *   "abbreviated", "narrow" or "wide"
     */
    format: function(oField, oDate, bUTC, oFormat) {
      var bContainsHour = oFormat.aFormatArray.some(function(oFormatElement) {
        return "hHKk".includes(oFormatElement.symbol);
      }), sFlexibleDayPeriod = oFormat.oLocaleData.getFlexibleDayPeriodOfTime(oDate.getUTCHours(), oDate.getUTCMinutes());
      if (bContainsHour) {
        if (oField.digits <= 3) {
          return oFormat.oFlexibleDayPeriodsAbbrev[sFlexibleDayPeriod];
        }
        if (oField.digits === 4) {
          return oFormat.oFlexibleDayPeriodsWide[sFlexibleDayPeriod];
        }
        return oFormat.oFlexibleDayPeriodsNarrow[sFlexibleDayPeriod];
      }
      if (oField.digits <= 3) {
        return oFormat.oFlexibleDayPeriodsAbbrevSt[sFlexibleDayPeriod];
      }
      if (oField.digits === 4) {
        return oFormat.oFlexibleDayPeriodsWideSt[sFlexibleDayPeriod];
      }
      return oFormat.oFlexibleDayPeriodsNarrowSt[sFlexibleDayPeriod];
    },
    /**
     * Parses the flexible day period from a given input string.
     *
     * @param {string} sValue
     *   The given input, e.g. "in the afternoon 01:37"
     * @param {Object<string, any>} oPart
     *   The date pattern field as parsed by {@link DateFormat#parseCldrDatePattern}
     * @param {sap.ui.core.format.DateFormat} oFormat
     *   The <code>DateFormat</code> instance
     * @param {object} oConfig
     *   The configuration object for parsing the value
     * @returns {{flexDayPeriod: string, length: number}|{valid: boolean}}
     *   An object with the parsed <code>flexDayPeriod</code> and the <code>length</code>
     *   value of the match; otherwise, an object with property <code>valid</code>
     *   <code>false</code> if it could not be parsed correctly or in case it is attempted
     *   to parse a string with a stand-alone format
     */
    parse: function(sValue, oPart, oFormat, oConfig) {
      var i, oFound, oVariant, bContainsHour = oFormat.aFormatArray.some(function(oFormatElement) {
        return "hHKk".includes(oFormatElement.symbol);
      }), aFlexibleDayPeriodVariants = [oFormat.oFlexibleDayPeriodsWide, oFormat.oFlexibleDayPeriodsAbbrev, oFormat.oFlexibleDayPeriodsNarrow];
      if (bContainsHour) {
        for (i = 0; i < aFlexibleDayPeriodVariants.length; i++) {
          oVariant = aFlexibleDayPeriodVariants[i];
          oFound = oParseHelper.findEntry(sValue, Object.values(oVariant), oFormat.oLocaleData.sCLDRLocaleId);
          if (oFound.index !== -1) {
            return {
              flexDayPeriod: Object.keys(oVariant)[oFound.index],
              length: oFound.length
            };
          }
        }
      }
      return {
        valid: false
      };
    }
  }),
  "H": DateFormat._createPatternSymbol({
    name: "hour0_23",
    format: function(oField, oDate) {
      var iHours = oDate.getUTCHours();
      return String(iHours).padStart(oField.digits, "0");
    },
    parse: function(sValue, oPart, oFormat, oConfig) {
      var sPart = oParseHelper.findNumbers(sValue, Math.max(oPart.digits, 2)), iHours = parseInt(sPart), bPartInvalid = sPart === "" || oConfig.exactLength && sPart.length < 2, bValid = oParseHelper.checkValid(oPart.type, bPartInvalid, oFormat);
      if (oConfig.strict && iHours > 23) {
        bValid = false;
      }
      return {
        hour: iHours,
        length: sPart.length,
        valid: bValid
      };
    },
    isNumeric: true
  }),
  "k": DateFormat._createPatternSymbol({
    name: "hour1_24",
    format: function(oField, oDate) {
      var iHours = oDate.getUTCHours();
      var sHours = iHours === 0 ? "24" : String(iHours);
      return sHours.padStart(oField.digits, "0");
    },
    parse: function(sValue, oPart, oFormat, oConfig) {
      var sPart = oParseHelper.findNumbers(sValue, Math.max(oPart.digits, 2)), iHours = parseInt(sPart), bPartInvalid = sPart === "" || oConfig.exactLength && sPart.length < 2, bValid = oParseHelper.checkValid(oPart.type, bPartInvalid, oFormat);
      if (iHours === 24) {
        iHours = 0;
      }
      if (oConfig.strict && iHours > 23) {
        bValid = false;
      }
      return {
        hour: iHours,
        length: sPart.length,
        valid: bValid
      };
    },
    isNumeric: true
  }),
  "K": DateFormat._createPatternSymbol({
    name: "hour0_11",
    format: function(oField, oDate) {
      var iHours = oDate.getUTCHours();
      var sHours = String(iHours > 11 ? iHours - 12 : iHours);
      return sHours.padStart(oField.digits, "0");
    },
    parse: function(sValue, oPart, oFormat, oConfig) {
      var sPart = oParseHelper.findNumbers(sValue, Math.max(oPart.digits, 2)), iHours = parseInt(sPart), bPartInvalid = sPart === "" || oConfig.exactLength && sPart.length < 2, bValid = oParseHelper.checkValid(oPart.type, bPartInvalid, oFormat);
      if (oConfig.strict && iHours > 11) {
        bValid = false;
      }
      return {
        hour: iHours,
        length: sPart.length,
        valid: bValid
      };
    },
    isNumeric: true
  }),
  "h": DateFormat._createPatternSymbol({
    name: "hour1_12",
    format: function(oField, oDate) {
      var iHours = oDate.getUTCHours();
      var sHours;
      if (iHours > 12) {
        sHours = String(iHours - 12);
      } else if (iHours === 0) {
        sHours = "12";
      } else {
        sHours = String(iHours);
      }
      return sHours.padStart(oField.digits, "0");
    },
    parse: function(sValue, oPart, oFormat, oConfig) {
      var bPM = oConfig.dateValue.pm, sPart = oParseHelper.findNumbers(sValue, Math.max(oPart.digits, 2)), iHours = parseInt(sPart), bPartInvalid = sPart === "" || oConfig.exactLength && sPart.length < 2, bValid = oParseHelper.checkValid(oPart.type, bPartInvalid, oFormat);
      if (iHours === 12) {
        iHours = 0;
        bPM = bPM === void 0 ? true : bPM;
      }
      if (oConfig.strict && iHours > 11) {
        bValid = false;
      }
      return {
        hour: iHours,
        length: sPart.length,
        pm: bPM,
        valid: bValid
      };
    },
    isNumeric: true
  }),
  "m": DateFormat._createPatternSymbol({
    name: "minute",
    format: function(oField, oDate) {
      var iMinutes = oDate.getUTCMinutes();
      return String(iMinutes).padStart(oField.digits, "0");
    },
    parse: function(sValue, oPart, oFormat, oConfig) {
      var sPart = oParseHelper.findNumbers(sValue, Math.max(oPart.digits, 2)), iMinutes = parseInt(sPart), bPartInvalid = sPart === "" || oConfig.exactLength && sPart.length < 2, bValid = oParseHelper.checkValid(oPart.type, bPartInvalid, oFormat);
      if (oConfig.strict && iMinutes > 59) {
        bValid = false;
      }
      return {
        length: sPart.length,
        minute: iMinutes,
        valid: bValid
      };
    },
    isNumeric: true
  }),
  "s": DateFormat._createPatternSymbol({
    name: "second",
    format: function(oField, oDate) {
      var iSeconds = oDate.getUTCSeconds();
      return String(iSeconds).padStart(oField.digits, "0");
    },
    parse: function(sValue, oPart, oFormat, oConfig) {
      var iExpectedDigits = Math.max(oPart.digits, 2), sPart = oParseHelper.findNumbers(sValue, iExpectedDigits), bPartInvalid = sPart === "" || oConfig.exactLength && sPart.length < iExpectedDigits, iSeconds = parseInt(sPart), bValid = oParseHelper.checkValid(oPart.type, bPartInvalid, oFormat);
      if (oConfig.strict && iSeconds > 59) {
        bValid = false;
      }
      return {
        length: sPart.length,
        second: iSeconds,
        valid: bValid
      };
    },
    isNumeric: true
  }),
  "S": DateFormat._createPatternSymbol({
    name: "fractionalsecond",
    format: function(oField, oDate) {
      var iMilliseconds = oDate.getUTCMilliseconds();
      var sMilliseconds = String(iMilliseconds);
      var sFractionalseconds = sMilliseconds.padStart(3, "0");
      sFractionalseconds = sFractionalseconds.substr(0, oField.digits);
      sFractionalseconds = sFractionalseconds.padEnd(oField.digits, "0");
      return sFractionalseconds;
    },
    parse: function(sValue, oPart, oFormat, oConfig) {
      var sPart = oParseHelper.findNumbers(sValue, oPart.digits), iLength = sPart.length, bPartInvalid = oConfig.exactLength && iLength < oPart.digits;
      sPart = sPart.substr(0, 3);
      sPart = sPart.padEnd(3, "0");
      var iMilliseconds = parseInt(sPart);
      return {
        length: iLength,
        millisecond: iMilliseconds,
        valid: oParseHelper.checkValid(oPart.type, bPartInvalid, oFormat)
      };
    },
    isNumeric: true
  }),
  "z": DateFormat._createPatternSymbol({
    name: "timezoneGeneral",
    format: function(oField, oDate, bUTC, oFormat, sTimezone) {
      if (oField.digits > 3 && oDate.getTimezoneLong && oDate.getTimezoneLong()) {
        return oDate.getTimezoneLong();
      } else if (oDate.getTimezoneShort && oDate.getTimezoneShort()) {
        return oDate.getTimezoneShort();
      }
      var iTimezoneOffset = TimezoneUtil_default.calculateOffset(oDate, sTimezone);
      var sTimeZone = "GMT";
      var iTZOffset = Math.abs(iTimezoneOffset / 60);
      var bPositiveOffset = iTimezoneOffset > 0;
      var iHourOffset = Math.floor(iTZOffset / 60);
      var iMinuteOffset = Math.floor(iTZOffset % 60);
      if (!bUTC && iTZOffset !== 0) {
        sTimeZone += bPositiveOffset ? "-" : "+";
        sTimeZone += String(iHourOffset).padStart(2, "0");
        sTimeZone += ":";
        sTimeZone += String(iMinuteOffset).padStart(2, "0");
      } else {
        sTimeZone += "Z";
      }
      return sTimeZone;
    },
    parse: function(sValue, oPart, oFormat, oConfig) {
      var iLength = 0;
      var iTZDiff;
      var oTZ = sValue.substring(0, 3);
      if (oTZ === "GMT" || oTZ === "UTC") {
        iLength = 3;
      } else if (sValue.substring(0, 2) === "UT") {
        iLength = 2;
      } else if (sValue.charAt(0) === "Z") {
        iLength = 1;
        iTZDiff = 0;
      } else {
        return {
          error: "cannot be parsed correctly by sap.ui.core.format.DateFormat: The given timezone is not supported!"
        };
      }
      if (sValue.charAt(0) !== "Z") {
        var oParsedTZ = oParseHelper.parseTZ(sValue.substr(iLength), true);
        iLength += oParsedTZ.length;
        iTZDiff = oParsedTZ.tzDiff;
      }
      return {
        length: iLength,
        tzDiff: iTZDiff
      };
    }
  }),
  "Z": DateFormat._createPatternSymbol({
    name: "timezoneRFC822",
    format: function(oField, oDate, bUTC, oFormat, sTimezone) {
      var iTimezoneOffset = TimezoneUtil_default.calculateOffset(oDate, sTimezone);
      var iTZOffset = Math.abs(iTimezoneOffset / 60);
      var bPositiveOffset = iTimezoneOffset > 0;
      var iHourOffset = Math.floor(iTZOffset / 60);
      var iMinuteOffset = Math.floor(iTZOffset % 60);
      var sTimeZone = "";
      if (!bUTC) {
        sTimeZone += bPositiveOffset ? "-" : "+";
        sTimeZone += String(iHourOffset).padStart(2, "0");
        sTimeZone += String(iMinuteOffset).padStart(2, "0");
      }
      return sTimeZone;
    },
    parse: function(sValue, oPart, oFormat, oConfig) {
      return oParseHelper.parseTZ(sValue, false);
    }
  }),
  "X": DateFormat._createPatternSymbol({
    name: "timezoneISO8601",
    format: function(oField, oDate, bUTC, oFormat, sTimezone) {
      var iTimezoneOffset = TimezoneUtil_default.calculateOffset(oDate, sTimezone);
      var iTZOffset = Math.abs(iTimezoneOffset / 60);
      var bPositiveOffset = iTimezoneOffset > 0;
      var iHourOffset = Math.floor(iTZOffset / 60);
      var iMinuteOffset = Math.floor(iTZOffset % 60);
      var sTimeZone = "";
      if (!bUTC && iTZOffset !== 0) {
        sTimeZone += bPositiveOffset ? "-" : "+";
        sTimeZone += String(iHourOffset).padStart(2, "0");
        if (oField.digits > 1 || iMinuteOffset > 0) {
          if (oField.digits === 3 || oField.digits === 5) {
            sTimeZone += ":";
          }
          sTimeZone += String(iMinuteOffset).padStart(2, "0");
        }
      } else {
        sTimeZone += "Z";
      }
      return sTimeZone;
    },
    parse: function(sValue, oPart, oFormat, oConfig) {
      if (sValue.charAt(0) === "Z") {
        return {
          length: 1,
          tzDiff: 0
        };
      } else {
        return oParseHelper.parseTZ(sValue, oPart.digits === 3 || oPart.digits === 5);
      }
    }
  }),
  "V": DateFormat._createPatternSymbol({
    name: "timezoneID",
    format: function(oField, oDate, bUTC, oFormat, sTimezone) {
      if (!bUTC && oField.digits === 2) {
        return oFormat.oLocaleData.getTimezoneTranslations()[sTimezone] || sTimezone;
      }
      return "";
    },
    parse: function(sValue, oPart, oFormat, oConfig, sTimezone) {
      var oTimezoneParsed = {
        timezone: "",
        length: 0
      };
      if (oPart.digits === 2) {
        var mTimezoneTranslations = oFormat.oLocaleData.getTimezoneTranslations();
        if (sValue === mTimezoneTranslations[sTimezone]) {
          return {
            timezone: sTimezone,
            length: sValue.length
          };
        }
        var aTimezoneTranslations = Object.values(mTimezoneTranslations);
        var oTimezoneResult = oParseHelper.findEntry(sValue, aTimezoneTranslations, oFormat.oLocaleData.sCLDRLocaleId);
        if (oTimezoneResult.index !== -1) {
          return {
            timezone: Object.keys(mTimezoneTranslations)[oTimezoneResult.index],
            length: oTimezoneResult.length
          };
        }
        var sCurrentValue = "";
        for (var i = sValue.length; i > 0; i -= 1) {
          sCurrentValue = sValue.slice(0, i);
          if (TimezoneUtil_default.isValidTimezone(sCurrentValue)) {
            oTimezoneParsed.timezone = sCurrentValue;
            oTimezoneParsed.length = sCurrentValue.length;
            break;
          }
        }
      }
      return oTimezoneParsed;
    }
  })
};
DateFormat.prototype._format = function(oJSDate, bUTC, sTimezone) {
  if (this.oFormatOptions.relative) {
    var sRes = this.formatRelative(oJSDate, bUTC, this.oFormatOptions.relativeRange, sTimezone);
    if (sRes) {
      return sRes;
    }
  }
  var sCalendarType = this.oFormatOptions.calendarType;
  var oDate = UniversalDate_default.getInstance(oJSDate, sCalendarType);
  var aBuffer = [], oPart, sResult, sSymbol;
  for (var i = 0; i < this.aFormatArray.length; i++) {
    oPart = this.aFormatArray[i];
    sSymbol = oPart.symbol || "";
    aBuffer.push(this.oSymbols[sSymbol].format(oPart, oDate, bUTC, this, sTimezone));
  }
  sResult = aBuffer.join("");
  if (Supportability_default.collectOriginInfo()) {
    sResult = new String(sResult);
    sResult.originInfo = {
      source: "Common Locale Data Repository",
      locale: this.oLocale.toString(),
      style: this.oFormatOptions.style,
      pattern: this.oFormatOptions.pattern
    };
  }
  return sResult;
};
DateFormat.prototype.format = function(vJSDate, bUTC) {
  var sTimezone;
  if (this.type === mDateFormatTypes.DATETIME_WITH_TIMEZONE) {
    sTimezone = bUTC;
    bUTC = false;
    checkTimezoneParameterType(sTimezone);
    if (sTimezone && !TimezoneUtil_default.isValidTimezone(sTimezone)) {
      Log_default.error("The given timezone isn't valid.");
      return "";
    }
  }
  var sCalendarType = this.oFormatOptions.calendarType, sResult;
  if (bUTC === void 0) {
    bUTC = this.oFormatOptions.UTC;
  }
  sTimezone = sTimezone || Configuration_default.getTimezone();
  if (Array.isArray(vJSDate)) {
    if (!this.oFormatOptions.interval) {
      Log_default.error("Non-interval DateFormat can't format more than one date instance.");
      return "";
    }
    if (vJSDate.length !== 2) {
      Log_default.error("Interval DateFormat can only format with 2 date instances but " + vJSDate.length + " is given.");
      return "";
    }
    vJSDate = vJSDate.map(function(oJSDate) {
      return convertToTimezone(oJSDate, sTimezone, bUTC);
    });
    if (this.oFormatOptions.singleIntervalValue) {
      if (vJSDate[0] === null) {
        Log_default.error("First date instance which is passed to the interval DateFormat shouldn't be null.");
        return "";
      }
      if (vJSDate[1] === null) {
        sResult = this._format(vJSDate[0], bUTC, sTimezone);
      }
    }
    if (sResult === void 0) {
      if (!vJSDate.every(isValidDateObject)) {
        Log_default.error("At least one date instance which is passed to the interval DateFormat isn't valid.");
        return "";
      }
      sResult = this._formatInterval(vJSDate, bUTC);
    }
  } else {
    if (!isValidDateObject(vJSDate)) {
      if (this.type === mDateFormatTypes.DATETIME_WITH_TIMEZONE && this.oFormatOptions.pattern.includes("VV")) {
        return this.oLocaleData.getTimezoneTranslations()[sTimezone] || sTimezone;
      }
      Log_default.error("The given date instance isn't valid.");
      return "";
    }
    if (this.oFormatOptions.interval) {
      Log_default.error("Interval DateFormat expects an array with two dates for the first argument but only one date is given.");
      return "";
    }
    vJSDate = convertToTimezone(vJSDate, sTimezone, bUTC);
    sResult = this._format(vJSDate, bUTC, sTimezone);
  }
  if (sCalendarType === CalendarType_default3.Japanese && this.oLocale.getLanguage() === "ja") {
    sResult = sResult.replace(/(^|[^\d])1年/g, "$1元年");
  }
  return sResult;
};
DateFormat.prototype._useCustomIntervalDelimiter = function(oDiffFields) {
  var aTokens;
  if (!this.oFormatOptions.intervalDelimiter) {
    return false;
  }
  if (this.oFormatOptions.format) {
    aTokens = this.oLocaleData._parseSkeletonFormat(this.oFormatOptions.format);
    return aTokens.some(function(oToken2) {
      return oDiffFields[oToken2.group];
    });
  }
  return true;
};
DateFormat.prototype._formatInterval = function(aJSDates, bUTC) {
  var oDate, oPart, sPattern, sSymbol, aBuffer = [], sCalendarType = this.oFormatOptions.calendarType, aFormatArray = [], oFromDate = UniversalDate_default.getInstance(aJSDates[0], sCalendarType), oToDate = UniversalDate_default.getInstance(aJSDates[1], sCalendarType), oDiffFields = this._getDiffFields([oFromDate, oToDate]);
  if (!oDiffFields) {
    return this._format(aJSDates[0], bUTC);
  }
  if (this._useCustomIntervalDelimiter(oDiffFields)) {
    sPattern = this.intervalPatterns[0];
  } else if (this.oFormatOptions.format) {
    sPattern = this.oLocaleData.getCustomIntervalPattern(this.oFormatOptions.format, oDiffFields, sCalendarType);
  } else {
    sPattern = this.oLocaleData.getCombinedIntervalPattern(this.oFormatOptions.pattern, sCalendarType);
  }
  aFormatArray = this.parseCldrDatePattern(sPattern);
  oDate = oFromDate;
  for (var i = 0; i < aFormatArray.length; i++) {
    oPart = aFormatArray[i];
    sSymbol = oPart.symbol || "";
    if (oPart.repeat) {
      oDate = oToDate;
    }
    aBuffer.push(this.oSymbols[sSymbol].format(oPart, oDate, bUTC, this));
  }
  return aBuffer.join("");
};
var mFieldToGroup = {
  Era: "Era",
  FullYear: "Year",
  Quarter: "Quarter",
  Month: "Month",
  Week: "Week",
  Date: "Day",
  DayPeriod: "DayPeriod",
  Hours: "Hour",
  Minutes: "Minute",
  Seconds: "Second"
};
DateFormat.prototype._getDiffFields = function(aDates) {
  var bDiffFound = false, mDiff = {};
  this.aIntervalCompareFields.forEach(function(sField) {
    var sGetterPrefix = "getUTC", sMethodName = sGetterPrefix + sField, sFieldGroup = mFieldToGroup[sField], vFromValue = aDates[0][sMethodName].apply(aDates[0]), vToValue = aDates[1][sMethodName].apply(aDates[1]);
    if (!deepEqual_default(vFromValue, vToValue)) {
      bDiffFound = true;
      mDiff[sFieldGroup] = true;
    }
  });
  if (bDiffFound) {
    return mDiff;
  }
  return null;
};
DateFormat.prototype._parse = function(sValue, aFormatArray, bUTC, bStrict, sTimezone) {
  var sFlexibleDayPeriod, oNextPart, oPart, bPM, oPrevPart, oResult, sSubValue, oDateValue = {
    valid: true,
    lastTimezonePatternSymbol: ""
  }, iIndex = 0, oParseConf = {
    formatArray: aFormatArray,
    dateValue: oDateValue,
    strict: bStrict
  }, that = this;
  function getSymbol(oPart0) {
    return that.oSymbols[oPart0.symbol || ""];
  }
  function isNumeric(oPart0) {
    return !!oPart0 && getSymbol(oPart0).isNumeric(oPart0.digits);
  }
  for (var i = 0; i < aFormatArray.length; i++) {
    sSubValue = sValue.substr(iIndex);
    oPart = aFormatArray[i];
    oPrevPart = aFormatArray[i - 1];
    oNextPart = aFormatArray[i + 1];
    oParseConf.index = i;
    oParseConf.exactLength = isNumeric(oPart) && (isNumeric(oPrevPart) || isNumeric(oNextPart));
    oResult = getSymbol(oPart).parse(sSubValue, oPart, this, oParseConf, sTimezone) || {};
    if (oResult.tzDiff !== void 0 || oResult.timezone) {
      oResult.lastTimezonePatternSymbol = oPart.symbol;
    }
    oDateValue = extend_default(oDateValue, oResult);
    if (oResult.valid === false) {
      break;
    }
    iIndex += oResult.length || 0;
  }
  oDateValue.index = iIndex;
  bPM = oDateValue.pm;
  if (oDateValue.flexDayPeriod && oDateValue.hour * 60 + (oDateValue.minute || 0) < 720) {
    sFlexibleDayPeriod = this.oLocaleData.getFlexibleDayPeriodOfTime(oDateValue.hour + 12, oDateValue.minute || 0);
    bPM = oDateValue.flexDayPeriod === sFlexibleDayPeriod;
  }
  if (bPM) {
    oDateValue.hour += 12;
  }
  if (oDateValue.dayNumberOfWeek === void 0 && oDateValue.dayOfWeek !== void 0) {
    oDateValue.dayNumberOfWeek = this._adaptDayOfWeek(oDateValue.dayOfWeek);
  }
  if (oDateValue.quarter !== void 0 && oDateValue.month === void 0 && oDateValue.day === void 0) {
    oDateValue.month = 3 * oDateValue.quarter;
    oDateValue.day = 1;
  }
  return oDateValue;
};
DateFormat.prototype._parseInterval = function(sValue, sCalendarType, bUTC, bStrict, sTimezone) {
  var aDateValues, iRepeat, oDateValue;
  this.intervalPatterns.some((function(sPattern) {
    var aFormatArray = this.parseCldrDatePattern(sPattern);
    iRepeat = void 0;
    for (var i = 0; i < aFormatArray.length; i++) {
      if (aFormatArray[i].repeat) {
        iRepeat = i;
        break;
      }
    }
    if (iRepeat === void 0) {
      oDateValue = this._parse(sValue, aFormatArray, bUTC, bStrict, sTimezone);
      if (oDateValue.index === 0 || oDateValue.index < sValue.length) {
        oDateValue.valid = false;
      }
      if (oDateValue.valid === false) {
        return;
      }
      aDateValues = [oDateValue, oDateValue];
      return true;
    } else {
      aDateValues = [];
      oDateValue = this._parse(sValue, aFormatArray.slice(0, iRepeat), bUTC, bStrict, sTimezone);
      if (oDateValue.valid === false) {
        return;
      }
      aDateValues.push(oDateValue);
      var iLength = oDateValue.index;
      oDateValue = this._parse(sValue.substring(iLength), aFormatArray.slice(iRepeat), bUTC, bStrict, sTimezone);
      if (oDateValue.index === 0 || oDateValue.index + iLength < sValue.length) {
        oDateValue.valid = false;
      }
      if (oDateValue.valid === false) {
        return;
      }
      aDateValues.push(oDateValue);
      return true;
    }
  }).bind(this));
  return aDateValues;
};
function getCalendarWeekParameter(oFormatOptions) {
  if (oFormatOptions.calendarWeekNumbering) {
    return oFormatOptions.calendarWeekNumbering;
  } else if (oFormatOptions.firstDayOfWeek !== void 0 && oFormatOptions.minimalDaysInFirstWeek !== void 0) {
    return {
      firstDayOfWeek: oFormatOptions.firstDayOfWeek,
      minimalDaysInFirstWeek: oFormatOptions.minimalDaysInFirstWeek
    };
  }
  return void 0;
}
var convertToTimezone = function(oJSDate, sTimezone, bUTC) {
  if (!bUTC && isValidDateObject(oJSDate)) {
    return TimezoneUtil_default.convertToTimezone(oJSDate, sTimezone);
  }
  return oJSDate;
};
var fnCreateDate = function(oDateValue, sCalendarType, bUTC, bStrict, sTimezone, oFormatOptions, oLocale) {
  if (!oDateValue.valid) {
    return null;
  }
  var oDate, iYear = typeof oDateValue.year === "number" ? oDateValue.year : 1970;
  oDate = UniversalDate_default.getInstance(/* @__PURE__ */ new Date(0), sCalendarType);
  oDate.setUTCEra(oDateValue.era || UniversalDate_default.getCurrentEra(sCalendarType));
  oDate.setUTCFullYear(iYear, oDateValue.month || 0, oDateValue.day || 1);
  oDate.setUTCHours(oDateValue.hour || 0);
  oDate.setUTCMinutes(oDateValue.minute || 0);
  oDate.setUTCSeconds(oDateValue.second || 0);
  oDate.setUTCMilliseconds(oDateValue.millisecond || 0);
  if (bStrict && (oDateValue.day || 1) !== oDate.getUTCDate()) {
    return null;
  }
  if (oDateValue.week !== void 0 && (oDateValue.month === void 0 || oDateValue.day === void 0)) {
    oDate.setUTCWeek({
      year: oDateValue.weekYear || oDateValue.year,
      week: oDateValue.week
    }, oLocale, getCalendarWeekParameter(oFormatOptions));
    if (oDateValue.dayNumberOfWeek !== void 0) {
      oDate.setUTCDate(oDate.getUTCDate() + oDateValue.dayNumberOfWeek - 1);
    }
  }
  oDate = oDate.getJSDate();
  if (!bUTC && (oDateValue.lastTimezonePatternSymbol === "V" && oDateValue.timezone || oDateValue.tzDiff === void 0)) {
    if (oDateValue.timezone) {
      sTimezone = oDateValue.timezone;
    }
    if (sTimezone) {
      oDateValue.tzDiff = TimezoneUtil_default.calculateOffset(oDate, sTimezone);
    }
  }
  if (oDateValue.tzDiff) {
    oDate.setUTCSeconds(oDate.getUTCSeconds() + oDateValue.tzDiff);
  }
  return oDate;
};
function mergeWithoutOverwrite(object1, object2) {
  if (object1 === object2) {
    return object1;
  }
  var oMergedObject = {};
  Object.keys(object1).forEach(function(sKey) {
    oMergedObject[sKey] = object1[sKey];
  });
  Object.keys(object2).forEach(function(sKey) {
    if (!oMergedObject.hasOwnProperty(sKey)) {
      oMergedObject[sKey] = object2[sKey];
    }
  });
  return oMergedObject;
}
function isValidDateRange(oStartDate, oEndDate) {
  if (oStartDate.getTime() > oEndDate.getTime()) {
    return false;
  }
  return true;
}
function isValidDateObject(oDate) {
  return oDate && typeof oDate.getTime === "function" && !isNaN(oDate.getTime());
}
DateFormat.prototype.parse = function(sValue, bUTC, bStrict) {
  var bShowDate = this.oFormatOptions.showDate === void 0 || this.oFormatOptions.showDate;
  var bShowTime = this.oFormatOptions.showTime === void 0 || this.oFormatOptions.showTime;
  if (this.type === mDateFormatTypes.DATETIME_WITH_TIMEZONE && (bShowDate && !bShowTime || !bShowDate && bShowTime)) {
    throw new TypeError("The input can only be parsed back to date if both date and time are supplied.");
  }
  var sTimezone;
  if (bUTC === void 0 && this.type !== mDateFormatTypes.DATETIME_WITH_TIMEZONE) {
    bUTC = this.oFormatOptions.UTC;
  }
  var bUTCInputParameter = bUTC;
  if (this.type === mDateFormatTypes.DATETIME_WITH_TIMEZONE) {
    sTimezone = bUTC;
    bUTC = false;
    checkTimezoneParameterType(sTimezone);
    if (sTimezone && !TimezoneUtil_default.isValidTimezone(sTimezone)) {
      Log_default.error("The given timezone isn't valid.");
      return null;
    }
  }
  sValue = sValue == null ? "" : String(sValue).trim();
  sValue = DateFormat._normalize(sValue);
  var oDateValue;
  var sCalendarType = this.oFormatOptions.calendarType;
  sTimezone = sTimezone || Configuration_default.getTimezone();
  if (bStrict === void 0) {
    bStrict = this.oFormatOptions.strictParsing;
  }
  if (sCalendarType === CalendarType_default3.Japanese && this.oLocale.getLanguage() === "ja") {
    sValue = sValue.replace(/元年/g, "1年");
  }
  if (!this.oFormatOptions.interval) {
    var oJSDate = this.parseRelative(sValue, bUTC);
    if (oJSDate) {
      return oJSDate;
    }
    oDateValue = this._parse(sValue, this.aFormatArray, bUTC, bStrict, sTimezone);
    if (oDateValue.index === 0 || oDateValue.index < sValue.length) {
      oDateValue.valid = false;
    }
    oJSDate = fnCreateDate(oDateValue, sCalendarType, bUTC, bStrict, sTimezone, this.oFormatOptions, this.oLocale);
    if (oJSDate) {
      if (this.type === mDateFormatTypes.DATETIME_WITH_TIMEZONE) {
        var bShowTimezone = this.oFormatOptions.showTimezone === void 0 || this.oFormatOptions.showTimezone;
        if (!bShowTimezone && bShowDate && bShowTime) {
          return [oJSDate, void 0];
        } else if (bShowTimezone && !bShowDate && !bShowTime) {
          return [void 0, oDateValue.timezone];
        }
        return [oJSDate, oDateValue.timezone || void 0];
      }
      return oJSDate;
    }
  } else {
    var aDateValues = this._parseInterval(sValue, sCalendarType, bUTC, bStrict, sTimezone);
    var oJSDate1, oJSDate2;
    if (aDateValues && aDateValues.length === 2) {
      var oDateValue1 = mergeWithoutOverwrite(aDateValues[0], aDateValues[1]);
      var oDateValue2 = mergeWithoutOverwrite(aDateValues[1], aDateValues[0]);
      oJSDate1 = fnCreateDate(oDateValue1, sCalendarType, bUTC, bStrict, sTimezone, this.oFormatOptions, this.oLocale);
      oJSDate2 = fnCreateDate(oDateValue2, sCalendarType, bUTC, bStrict, sTimezone, this.oFormatOptions, this.oLocale);
      if (oJSDate1 && oJSDate2) {
        if (this.oFormatOptions.singleIntervalValue && oJSDate1.getTime() === oJSDate2.getTime()) {
          return [oJSDate1, null];
        }
        var bValid = isValidDateRange(oJSDate1, oJSDate2);
        if (bStrict && !bValid) {
          Log_default.error("StrictParsing: Invalid date range. The given end date is before the start date.");
          return [null, null];
        }
        return [oJSDate1, oJSDate2];
      }
    }
  }
  if (this.aFallbackFormats) {
    var vDate;
    this.aFallbackFormats.every(function(oFallbackFormat) {
      vDate = oFallbackFormat.parse(sValue, bUTCInputParameter, bStrict);
      if (Array.isArray(vDate)) {
        if (oFallbackFormat.type === mDateFormatTypes.DATETIME_WITH_TIMEZONE) {
          return false;
        }
        return !(vDate[0] && vDate[1]);
      } else {
        return !vDate;
      }
    });
    return vDate;
  }
  if (!this.oFormatOptions.interval) {
    return null;
  } else {
    return [null, null];
  }
};
DateFormat.prototype.parseCldrDatePattern = function(sPattern) {
  if (mCldrDatePattern[sPattern]) {
    return mCldrDatePattern[sPattern];
  }
  var aFormatArray = [], i, bQuoted = false, oCurrentObject = null, sState = "", sNewState = "", mAppeared = {}, bIntervalStartFound = false;
  for (i = 0; i < sPattern.length; i++) {
    var sCurChar = sPattern.charAt(i), sNextChar, sPrevChar, sPrevPrevChar;
    if (bQuoted) {
      if (sCurChar === "'") {
        sPrevChar = sPattern.charAt(i - 1);
        sPrevPrevChar = sPattern.charAt(i - 2);
        sNextChar = sPattern.charAt(i + 1);
        if (sPrevChar === "'" && sPrevPrevChar !== "'") {
          bQuoted = false;
        } else if (sNextChar === "'") {
          i += 1;
        } else {
          bQuoted = false;
          continue;
        }
      }
      if (sState === "text") {
        oCurrentObject.value += sCurChar;
      } else {
        oCurrentObject = {
          type: "text",
          value: sCurChar
        };
        aFormatArray.push(oCurrentObject);
        sState = "text";
      }
    } else {
      if (sCurChar === "'") {
        bQuoted = true;
      } else if (this.oSymbols[sCurChar]) {
        sNewState = this.oSymbols[sCurChar].name;
        if (sState === sNewState) {
          oCurrentObject.digits++;
        } else {
          oCurrentObject = {
            type: sNewState,
            symbol: sCurChar,
            digits: 1
          };
          aFormatArray.push(oCurrentObject);
          sState = sNewState;
          if (!bIntervalStartFound) {
            if (mAppeared[sNewState]) {
              oCurrentObject.repeat = true;
              bIntervalStartFound = true;
            } else {
              mAppeared[sNewState] = true;
            }
          }
        }
      } else {
        if (sState === "text") {
          oCurrentObject.value += sCurChar;
        } else {
          oCurrentObject = {
            type: "text",
            value: sCurChar
          };
          aFormatArray.push(oCurrentObject);
          sState = "text";
        }
      }
    }
  }
  mCldrDatePattern[sPattern] = aFormatArray;
  return aFormatArray;
};
DateFormat.prototype.parseRelative = function(sValue, bUTC) {
  var aPatterns, oEntry, rPattern, oResult, iValue;
  if (!sValue) {
    return null;
  }
  aPatterns = this.oLocaleData.getRelativePatterns(this.aRelativeParseScales, this.oFormatOptions.relativeStyle);
  for (var i = 0; i < aPatterns.length; i++) {
    oEntry = aPatterns[i];
    rPattern = new RegExp("^\\s*" + oEntry.pattern.replace(/\{0\}/, "(\\d+)") + "\\s*$", "i");
    oResult = rPattern.exec(sValue);
    if (oResult) {
      if (oEntry.value !== void 0) {
        return computeRelativeDate(oEntry.value, oEntry.scale);
      } else {
        iValue = parseInt(oResult[1]);
        return computeRelativeDate(iValue * oEntry.sign, oEntry.scale);
      }
    }
  }
  function computeRelativeDate(iDiff, sScale) {
    var oResult2 = UI5Date_default.getInstance();
    if (bUTC) {
      oResult2.setUTCFullYear(oResult2.getFullYear(), oResult2.getMonth(), oResult2.getDate());
      oResult2.setUTCHours(oResult2.getHours(), oResult2.getMinutes(), oResult2.getSeconds(), oResult2.getMilliseconds());
      switch (sScale) {
        case "second":
          oResult2.setUTCSeconds(oResult2.getUTCSeconds() + iDiff);
          break;
        case "minute":
          oResult2.setUTCMinutes(oResult2.getUTCMinutes() + iDiff);
          break;
        case "hour":
          oResult2.setUTCHours(oResult2.getUTCHours() + iDiff);
          break;
        case "day":
          oResult2.setUTCDate(oResult2.getUTCDate() + iDiff);
          break;
        case "week":
          oResult2.setUTCDate(oResult2.getUTCDate() + iDiff * 7);
          break;
        case "month":
          oResult2.setUTCMonth(oResult2.getUTCMonth() + iDiff);
          break;
        case "quarter":
          oResult2.setUTCMonth(oResult2.getUTCMonth() + iDiff * 3);
          break;
        case "year":
          oResult2.setUTCFullYear(oResult2.getUTCFullYear() + iDiff);
          break;
      }
    } else {
      switch (sScale) {
        case "second":
          oResult2.setSeconds(oResult2.getSeconds() + iDiff);
          break;
        case "minute":
          oResult2.setMinutes(oResult2.getMinutes() + iDiff);
          break;
        case "hour":
          oResult2.setHours(oResult2.getHours() + iDiff);
          break;
        case "day":
          oResult2.setDate(oResult2.getDate() + iDiff);
          break;
        case "week":
          oResult2.setDate(oResult2.getDate() + iDiff * 7);
          break;
        case "month":
          oResult2.setMonth(oResult2.getMonth() + iDiff);
          break;
        case "quarter":
          oResult2.setMonth(oResult2.getMonth() + iDiff * 3);
          break;
        case "year":
          oResult2.setFullYear(oResult2.getFullYear() + iDiff);
          break;
      }
    }
    return oResult2;
  }
};
DateFormat.prototype.formatRelative = function(oJSDate, bUTC, aRange, sTimezone) {
  var oDateUTC, iDiff, iDiffSeconds, sPattern, oToday = convertToTimezone(/* @__PURE__ */ new Date(), sTimezone), sScale = this.oFormatOptions.relativeScale || "day";
  iDiffSeconds = (oJSDate.getTime() - oToday.getTime()) / 1e3;
  if (this.oFormatOptions.relativeScale === "auto") {
    sScale = this._getScale(iDiffSeconds, this.aRelativeScales);
    sScale = fixScaleForMonths(oJSDate, oToday, sScale, iDiffSeconds);
  }
  if (!aRange) {
    aRange = this._mRanges[sScale];
  }
  if (sScale === "year" || sScale === "month" || sScale === "day") {
    oToday = new Date(Date.UTC(oToday.getUTCFullYear(), oToday.getUTCMonth(), oToday.getUTCDate()));
    oDateUTC = /* @__PURE__ */ new Date(0);
    oDateUTC.setUTCFullYear(oJSDate.getUTCFullYear(), oJSDate.getUTCMonth(), oJSDate.getUTCDate());
    oJSDate = oDateUTC;
  }
  iDiff = this._getDifference(sScale, [oToday, oJSDate]);
  if (this.oFormatOptions.relativeScale !== "auto" && (iDiff < aRange[0] || iDiff > aRange[1])) {
    return null;
  }
  sPattern = this.oLocaleData.getRelativePattern(sScale, iDiff, iDiffSeconds > 0, this.oFormatOptions.relativeStyle);
  return formatMessage_default(sPattern, [Math.abs(iDiff)]);
};
DateFormat.prototype._mRanges = {
  second: [-60, 60],
  minute: [-60, 60],
  hour: [-24, 24],
  day: [-6, 6],
  week: [-4, 4],
  month: [-12, 12],
  year: [-10, 10]
};
DateFormat.prototype._mScales = {
  second: 1,
  // 1
  minute: 60,
  // 60
  hour: 3600,
  // 60*60
  day: 86400,
  // 60*60*24         1 day
  week: 604800,
  // 60*60*24*7       7 days
  month: 2592e3,
  // 60*60*24*30      30 days
  quarter: 7776e3,
  // 60*60*24*30*3    90 days
  year: 31536e3
  // 60*60*24*365     365 days
};
DateFormat.prototype._getScale = function(iDiffSeconds, aScales) {
  var sScale, sTestScale;
  iDiffSeconds = Math.abs(iDiffSeconds);
  for (var i = 0; i < aScales.length; i++) {
    sTestScale = aScales[i];
    if (iDiffSeconds >= this._mScales[sTestScale]) {
      sScale = sTestScale;
      break;
    }
  }
  if (!sScale) {
    sScale = aScales[aScales.length - 1];
  }
  return sScale;
};
function fixScaleForMonths(oJSDate, oToday, sScale, iDiffSeconds) {
  var iMonthDiff = Math.abs(oJSDate.getUTCMonth() - oToday.getUTCMonth());
  if (sScale === "week" && iMonthDiff === 2) {
    return "month";
  } else if (sScale === "week" && iMonthDiff === 1) {
    if (oJSDate.getUTCDate() === oToday.getUTCDate() || iDiffSeconds < 0 && oJSDate.getUTCDate() < oToday.getUTCDate() || iDiffSeconds > 0 && oJSDate.getUTCDate() > oToday.getUTCDate()) {
      return "month";
    }
  } else if (sScale === "month" && iMonthDiff === 1) {
    if (iDiffSeconds > 0 && oJSDate.getUTCDate() < oToday.getUTCDate() || iDiffSeconds < 0 && oJSDate.getUTCDate() > oToday.getUTCDate()) {
      return "week";
    }
  }
  return sScale;
}
function cutDateFields(oDate, iStartIndex) {
  var sMethodName, aFields = ["FullYear", "Month", "Date", "Hours", "Minutes", "Seconds", "Milliseconds"], oDateCopy = new Date(oDate.getTime());
  for (var i = iStartIndex; i < aFields.length; i++) {
    sMethodName = "setUTC" + aFields[iStartIndex];
    oDateCopy[sMethodName].apply(oDateCopy, [0]);
  }
  return oDateCopy;
}
var mRelativeDiffs = {
  year: function(oFromDate, oToDate) {
    return oToDate.getUTCFullYear() - oFromDate.getUTCFullYear();
  },
  month: function(oFromDate, oToDate) {
    return oToDate.getUTCMonth() - oFromDate.getUTCMonth() + this.year(oFromDate, oToDate) * 12;
  },
  week: function(oFromDate, oToDate, oFormat) {
    var iFromDay = oFormat._adaptDayOfWeek(oFromDate.getUTCDay());
    var iToDay = oFormat._adaptDayOfWeek(oToDate.getUTCDay());
    oFromDate = cutDateFields(oFromDate, 3);
    oToDate = cutDateFields(oToDate, 3);
    return (oToDate.getTime() - oFromDate.getTime() - (iToDay - iFromDay) * oFormat._mScales.day * 1e3) / (oFormat._mScales.week * 1e3);
  },
  day: function(oFromDate, oToDate, oFormat) {
    oFromDate = cutDateFields(oFromDate, 3);
    oToDate = cutDateFields(oToDate, 3);
    return (oToDate.getTime() - oFromDate.getTime()) / (oFormat._mScales.day * 1e3);
  },
  hour: function(oFromDate, oToDate, oFormat) {
    oFromDate = cutDateFields(oFromDate, 4);
    oToDate = cutDateFields(oToDate, 4);
    return (oToDate.getTime() - oFromDate.getTime()) / (oFormat._mScales.hour * 1e3);
  },
  minute: function(oFromDate, oToDate, oFormat) {
    oFromDate = cutDateFields(oFromDate, 5);
    oToDate = cutDateFields(oToDate, 5);
    return (oToDate.getTime() - oFromDate.getTime()) / (oFormat._mScales.minute * 1e3);
  },
  second: function(oFromDate, oToDate, oFormat) {
    oFromDate = cutDateFields(oFromDate, 6);
    oToDate = cutDateFields(oToDate, 6);
    return (oToDate.getTime() - oFromDate.getTime()) / (oFormat._mScales.second * 1e3);
  }
};
DateFormat.prototype._adaptDayOfWeek = function(iDayOfWeek) {
  var vCalendarWeekParameter = getCalendarWeekParameter(this.oFormatOptions), iFirstDayOfWeek;
  if (typeof vCalendarWeekParameter === "object") {
    iFirstDayOfWeek = vCalendarWeekParameter.firstDayOfWeek;
  } else {
    iFirstDayOfWeek = CalendarUtils_default.getWeekConfigurationValues(vCalendarWeekParameter, this.oLocale).firstDayOfWeek;
  }
  var iDayNumberOfWeek = iDayOfWeek - (iFirstDayOfWeek - 1);
  if (iDayNumberOfWeek <= 0) {
    iDayNumberOfWeek += 7;
  }
  return iDayNumberOfWeek;
};
DateFormat.prototype._getDifference = function(sScale, aDates) {
  var oFromDate = aDates[0];
  var oToDate = aDates[1];
  return Math.round(mRelativeDiffs[sScale](oFromDate, oToDate, this));
};
DateFormat.prototype.getAllowedCharacters = function(aFormatArray) {
  if (this.oFormatOptions.relative) {
    return "";
  }
  var sAllowedCharacters = "";
  var bNumbers = false;
  var bAll = false;
  var oPart;
  for (var i = 0; i < aFormatArray.length; i++) {
    oPart = aFormatArray[i];
    switch (oPart.type) {
      case "text":
        if (sAllowedCharacters.indexOf(oPart.value) < 0) {
          sAllowedCharacters += oPart.value;
        }
        break;
      case "day":
      case "year":
      case "weekYear":
      case "dayNumberOfWeek":
      case "weekInYear":
      case "hour0_23":
      case "hour1_24":
      case "hour0_11":
      case "hour1_12":
      case "minute":
      case "second":
      case "fractionalsecond":
        if (!bNumbers) {
          sAllowedCharacters += "0123456789";
          bNumbers = true;
        }
        break;
      case "month":
      case "monthStandalone":
        if (oPart.digits < 3) {
          if (!bNumbers) {
            sAllowedCharacters += "0123456789";
            bNumbers = true;
          }
        } else {
          bAll = true;
        }
        break;
      default:
        bAll = true;
        break;
    }
  }
  if (bAll) {
    sAllowedCharacters = "";
  }
  return sAllowedCharacters;
};
DateFormat.prototype.getPlaceholderText = function() {
  var oResourceBundle = Core_default.getLibraryResourceBundle();
  return oResourceBundle.getText("date.placeholder", [this.format.apply(this, this.getSampleValue())]);
};
DateFormat.prototype.getSampleValue = function() {
  var oDate, iFullYear = UI5Date_default.getInstance().getFullYear(), bUTC = this.oFormatOptions.UTC;
  function getDate(iYear, iMonth, iDay, iHours, iMinutes, iSeconds, iMilliseconds) {
    return bUTC ? UI5Date_default.getInstance(Date.UTC(iYear, iMonth, iDay, iHours, iMinutes, iSeconds, iMilliseconds)) : UI5Date_default.getInstance(iYear, iMonth, iDay, iHours, iMinutes, iSeconds, iMilliseconds);
  }
  oDate = getDate(iFullYear, 11, 31, 23, 59, 58, 123);
  if (this.type === mDateFormatTypes.DATETIME_WITH_TIMEZONE) {
    return [oDate, Configuration_default.getTimezone()];
  }
  if (this.oFormatOptions.interval) {
    return [[getDate(iFullYear, 11, 22, 9, 12, 34, 567), oDate]];
  }
  return [oDate];
};
var rAllRTLCharacters = /[\u200e\u200f\u202a\u202b\u202c]/g;
var rAllSpaces = /\s/g;
DateFormat._normalize = function(sValue) {
  return sValue.replace(rAllRTLCharacters, "").replace(rAllSpaces, " ");
};
var DateFormat_default = DateFormat;

// node_modules/@ui5/webcomponents-localization/dist/DateFormat.js
var DateFormatWrapped = DateFormat_default;
var DateFormat2 = class extends DateFormatWrapped {
};
var DateFormat_default2 = DateFormat2;

// node_modules/@ui5/webcomponents-icons/dist/v4/slim-arrow-left.js
var name5 = "slim-arrow-left";
var pathData5 = "M351.5 421q12 12 0 23-5 5-11 5t-11-5l-166-165q-9-10-9-23t9-23l165-164q5-5 11.5-5t11.5 5 5 11-5 11l-159 159q-6 6 0 12z";
var ltr5 = false;
var collection5 = "SAP-icons-v4";
var packageName5 = "@ui5/webcomponents-icons";
registerIcon(name5, { pathData: pathData5, ltr: ltr5, collection: collection5, packageName: packageName5 });

// node_modules/@ui5/webcomponents-icons/dist/v5/slim-arrow-left.js
var name6 = "slim-arrow-left";
var pathData6 = "M326 96q11 0 18.5 7.5T352 122q0 10-8 18L223 256l121 116q8 8 8 18 0 11-7.5 18.5T326 416q-10 0-17-7L168 274q-8-6-8-18 0-11 8-19l141-134q7-7 17-7z";
var ltr6 = false;
var collection6 = "SAP-icons-v5";
var packageName6 = "@ui5/webcomponents-icons";
registerIcon(name6, { pathData: pathData6, ltr: ltr6, collection: collection6, packageName: packageName6 });

// node_modules/@ui5/webcomponents-icons/dist/slim-arrow-left.js
var slim_arrow_left_default = "slim-arrow-left";

// node_modules/@ui5/webcomponents/dist/CalendarDate.js
var __decorate11 = function(decorators, target, key, desc) {
  var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
  if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
  else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
  return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var CalendarDate2 = class CalendarDate3 extends UI5Element_default {
  constructor() {
    super(...arguments);
    this.value = "";
  }
};
__decorate11([
  property_default()
], CalendarDate2.prototype, "value", void 0);
CalendarDate2 = __decorate11([
  customElement_default("ui5-date")
], CalendarDate2);
CalendarDate2.define();
var CalendarDate_default2 = CalendarDate2;

// node_modules/@ui5/webcomponents/dist/CalendarDateRange.js
var __decorate12 = function(decorators, target, key, desc) {
  var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
  if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
  else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
  return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var CalendarDateRange = class CalendarDateRange2 extends UI5Element_default {
  constructor() {
    super(...arguments);
    this.startValue = "";
    this.endValue = "";
  }
};
__decorate12([
  property_default()
], CalendarDateRange.prototype, "startValue", void 0);
__decorate12([
  property_default()
], CalendarDateRange.prototype, "endValue", void 0);
CalendarDateRange = __decorate12([
  customElement_default("ui5-date-range")
], CalendarDateRange);
CalendarDateRange.define();
var CalendarDateRange_default = CalendarDateRange;

// node_modules/@ui5/webcomponents/dist/SpecialCalendarDate.js
var __decorate13 = function(decorators, target, key, desc) {
  var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
  if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
  else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
  return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var SpecialCalendarDate = class SpecialCalendarDate2 extends UI5Element_default {
  constructor() {
    super(...arguments);
    this.value = "";
    this.type = "None";
    this._tooltip = "";
  }
};
__decorate13([
  property_default()
], SpecialCalendarDate.prototype, "value", void 0);
__decorate13([
  property_default()
], SpecialCalendarDate.prototype, "type", void 0);
__decorate13([
  property_default()
], SpecialCalendarDate.prototype, "_tooltip", void 0);
SpecialCalendarDate = __decorate13([
  customElement_default("ui5-special-date")
], SpecialCalendarDate);
SpecialCalendarDate.define();

// node_modules/@ui5/webcomponents-localization/dist/dates/modifyDateBy.js
var modifyDateBy = (date, amount, unit, preserveDate = true, minDate, maxDate) => {
  const newDate = new CalendarDate_default(date);
  switch (unit) {
    case "day":
      newDate.setDate(date.getDate() + amount);
      break;
    case "month":
      if (preserveDate) {
        newDate.setMonth(date.getMonth() + amount);
        const stillSameMonth = amount === -1 && newDate.getMonth() === date.getMonth();
        const monthSkipped = amount === 1 && newDate.getMonth() - date.getMonth() > 1;
        if (stillSameMonth || monthSkipped) {
          newDate.setDate(0);
        }
      } else {
        if (amount === 1) {
          newDate.setMonth(newDate.getMonth() + 1, 1);
        }
        if (amount === -1) {
          newDate.setDate(0);
        }
      }
      break;
    case "year":
      newDate.setYear(date.getYear() + amount);
      if (newDate.getMonth() !== date.getMonth()) {
        newDate.setDate(0);
      }
      break;
    default:
      break;
  }
  if (minDate && newDate.isBefore(minDate)) {
    return new CalendarDate_default(minDate);
  }
  if (maxDate && newDate.isAfter(maxDate)) {
    return new CalendarDate_default(maxDate);
  }
  return newDate;
};
var modifyDateBy_default = modifyDateBy;

// node_modules/@ui5/webcomponents-localization/dist/dates/getTodayUTCTimestamp.js
var getTodayUTCTimestamp = (primaryCalendarType) => CalendarDate_default.fromLocalJSDate(UI5Date_default2.getInstance(), primaryCalendarType).valueOf() / 1e3;
var getTodayUTCTimestamp_default = getTodayUTCTimestamp;

// node_modules/@ui5/webcomponents-localization/dist/dates/ExtremeDates.js
var cache2 = /* @__PURE__ */ new Map();
var getMinCalendarDate = (primaryCalendarType) => {
  const key = `min ${primaryCalendarType}`;
  if (!cache2.has(key)) {
    const minDate = new CalendarDate_default(1, 0, 1, primaryCalendarType);
    minDate.setYear(1);
    minDate.setMonth(0);
    minDate.setDate(1);
    cache2.set(key, minDate);
  }
  return cache2.get(key);
};
var getMaxCalendarDate = (primaryCalendarType) => {
  const key = `max ${primaryCalendarType}`;
  if (!cache2.has(key)) {
    const maxDate = new CalendarDate_default(1, 0, 1, primaryCalendarType);
    maxDate.setYear(9999);
    maxDate.setMonth(11);
    const tempDate = new CalendarDate_default(maxDate, primaryCalendarType);
    tempDate.setDate(1);
    tempDate.setMonth(tempDate.getMonth() + 1, 0);
    maxDate.setDate(tempDate.getDate());
    cache2.set(key, maxDate);
  }
  return cache2.get(key);
};

// node_modules/@ui5/webcomponents/dist/DateComponentBase.js
var __decorate14 = function(decorators, target, key, desc) {
  var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
  if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
  else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
  return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var DateComponentBase = class DateComponentBase2 extends UI5Element_default {
  constructor() {
    super();
    this.minDate = "";
    this.maxDate = "";
    this.calendarWeekNumbering = "Default";
  }
  get _primaryCalendarType() {
    const localeData = getCachedLocaleDataInstance_default(getLocale_default());
    return this.primaryCalendarType || getCalendarType2() || localeData.getPreferredCalendarType();
  }
  get _secondaryCalendarType() {
    return this.secondaryCalendarType || getSecondaryCalendarType2();
  }
  get _minDate() {
    let minDate;
    if (this.minDate) {
      minDate = this._getMinMaxCalendarDateFromString(this.minDate);
    }
    return minDate || getMinCalendarDate(this._primaryCalendarType);
  }
  get _maxDate() {
    let maxDate;
    if (this.maxDate) {
      maxDate = this._getMinMaxCalendarDateFromString(this.maxDate);
    }
    return maxDate || getMaxCalendarDate(this._primaryCalendarType);
  }
  get _formatPattern() {
    return this.formatPattern || "medium";
  }
  get _isPattern() {
    return this._formatPattern !== "medium" && this._formatPattern !== "short" && this._formatPattern !== "long";
  }
  get hasSecondaryCalendarType() {
    return !!this.secondaryCalendarType && this.secondaryCalendarType !== this.primaryCalendarType;
  }
  _getMinMaxCalendarDateFromString(date) {
    if (this.getFormat().parse(date)) {
      return this._getCalendarDateFromString(date);
    }
    const jsDate = this.getISOFormat().parse(date);
    if (jsDate) {
      return CalendarDate_default.fromLocalJSDate(jsDate, this._primaryCalendarType);
    }
  }
  _getCalendarDateFromString(value) {
    const jsDate = this.getFormat().parse(value);
    if (jsDate) {
      return CalendarDate_default.fromLocalJSDate(jsDate, this._primaryCalendarType);
    }
  }
  _getTimeStampFromString(value) {
    const calDate = this._getCalendarDateFromString(value);
    if (calDate) {
      return calDate.toUTCJSDate().valueOf();
    }
  }
  _getStringFromTimestamp(timestamp) {
    const localDate = UI5Date_default2.getInstance(timestamp);
    return this.getFormat().format(localDate, true);
  }
  getFormat() {
    return this._isPattern ? DateFormat_default2.getDateInstance({
      strictParsing: true,
      pattern: this._formatPattern,
      calendarType: this._primaryCalendarType
    }) : DateFormat_default2.getDateInstance({
      strictParsing: true,
      style: this._formatPattern,
      calendarType: this._primaryCalendarType
    });
  }
  getISOFormat() {
    if (!this._isoFormatInstance) {
      this._isoFormatInstance = DateFormat_default2.getDateInstance({
        strictParsing: true,
        pattern: "YYYY-MM-dd",
        calendarType: this._primaryCalendarType
      });
    }
    return this._isoFormatInstance;
  }
};
__decorate14([
  property_default()
], DateComponentBase.prototype, "primaryCalendarType", void 0);
__decorate14([
  property_default()
], DateComponentBase.prototype, "secondaryCalendarType", void 0);
__decorate14([
  property_default()
], DateComponentBase.prototype, "formatPattern", void 0);
__decorate14([
  property_default()
], DateComponentBase.prototype, "minDate", void 0);
__decorate14([
  property_default()
], DateComponentBase.prototype, "maxDate", void 0);
__decorate14([
  property_default()
], DateComponentBase.prototype, "calendarWeekNumbering", void 0);
__decorate14([
  i18n_default("@ui5/webcomponents")
], DateComponentBase, "i18nBundle", void 0);
DateComponentBase = __decorate14([
  customElement_default({
    languageAware: true,
    cldr: true,
    renderer: JsxRenderer_default
  })
], DateComponentBase);
var DateComponentBase_default = DateComponentBase;

// node_modules/@ui5/webcomponents/dist/CalendarPart.js
var __decorate15 = function(decorators, target, key, desc) {
  var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
  if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
  else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
  return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var CalendarPart = class CalendarPart2 extends DateComponentBase_default {
  get _minTimestamp() {
    return this._minDate.valueOf() / 1e3;
  }
  get _maxTimestamp() {
    return this._maxDate.valueOf() / 1e3;
  }
  /**
   * Returns the effective timestamp to be used by the respective calendar part
   * @protected
   */
  get _timestamp() {
    let timestamp = this.timestamp !== void 0 ? this.timestamp : getTodayUTCTimestamp_default(this._primaryCalendarType);
    if (this._maxTimestamp && this._maxTimestamp < timestamp) {
      timestamp = this._maxTimestamp;
    } else if (this._minTimestamp && this._minTimestamp > timestamp) {
      timestamp = this._minTimestamp;
    }
    return timestamp;
  }
  get _localDate() {
    return UI5Date_default2.getInstance(this._timestamp * 1e3);
  }
  /**
   * Returns a CalendarDate instance, representing the _timestamp getter - this date is central to all components' rendering logic
   * @protected
   */
  get _calendarDate() {
    return CalendarDate_default.fromTimestamp(this._localDate.getTime(), this._primaryCalendarType);
  }
  /**
   * Change a timestamp and enforce limits
   * @param timestamp
   * @protected
   */
  _safelySetTimestamp(timestamp) {
    const min = this._minDate.valueOf() / 1e3;
    const max = this._maxDate.valueOf() / 1e3;
    if (timestamp < min) {
      timestamp = min;
    }
    if (timestamp > max) {
      timestamp = max;
    }
    this.timestamp = timestamp;
  }
  /**
   * Modify a timestamp by a certain amount of days/months/years and enforce limits
   * @param amount
   * @param unit
   * @param preserveDate whether to preserve the day of the month (f.e. 15th of March + 1 month = 15th of April)
   * @protected
   */
  _safelyModifyTimestampBy(amount, unit, preserveDate) {
    const newDate = modifyDateBy_default(this._calendarDate, amount, unit, preserveDate);
    this._safelySetTimestamp(newDate.valueOf() / 1e3);
  }
  _getTimestampFromDom(domNode) {
    const oMonthDomRef = domNode.getAttribute("data-sap-timestamp");
    return parseInt(oMonthDomRef);
  }
};
__decorate15([
  property_default({ type: Number })
], CalendarPart.prototype, "timestamp", void 0);
CalendarPart = __decorate15([
  customElement_default()
], CalendarPart);
var CalendarPart_default = CalendarPart;

// node_modules/@ui5/webcomponents/dist/types/CalendarSelectionMode.js
var CalendarSelectionMode;
(function(CalendarSelectionMode2) {
  CalendarSelectionMode2["Single"] = "Single";
  CalendarSelectionMode2["Multiple"] = "Multiple";
  CalendarSelectionMode2["Range"] = "Range";
})(CalendarSelectionMode || (CalendarSelectionMode = {}));
var CalendarSelectionMode_default = CalendarSelectionMode;

// node_modules/@ui5/webcomponents/dist/types/CalendarPickersMode.js
var CalendarPickersMode;
(function(CalendarPickersMode2) {
  CalendarPickersMode2["DAY_MONTH_YEAR"] = "DAY_MONTH_YEAR";
  CalendarPickersMode2["MONTH_YEAR"] = "MONTH_YEAR";
  CalendarPickersMode2["YEAR"] = "YEAR";
})(CalendarPickersMode || (CalendarPickersMode = {}));
var CalendarPickersMode_default = CalendarPickersMode;

// node_modules/@ui5/webcomponents-localization/dist/sap/ui/core/date/Gregorian.js
var Gregorian = UniversalDate_default.extend(
  "sap.ui.core.date.Gregorian",
  /** @lends sap.ui.core.date.Gregorian.prototype */
  {
    constructor: function() {
      this.oDate = this.createDate(Date, arguments);
      this.sCalendarType = CalendarType_default3.Gregorian;
    }
  }
);
Gregorian.UTC = function() {
  return Date.UTC.apply(Date, arguments);
};
Gregorian.now = function() {
  return Date.now();
};
Calendars_default.set(CalendarType_default3.Gregorian, Gregorian);

// node_modules/@ui5/webcomponents-base/dist/types/InvisibleMessageMode.js
var InvisibleMessageMode = {
  /**
   * Indicates that updates to the region should be presented at the next graceful opportunity,
   * such as at the end of reading the current sentence, or when the user pauses typing.
   * @public
   */
  Polite: "Polite",
  /**
   * Indicates that updates to the region have the highest priority and should be presented to the user immediately.
   * @public
   */
  Assertive: "Assertive"
};
var InvisibleMessageMode_default = InvisibleMessageMode;

// node_modules/@ui5/webcomponents-base/dist/util/InvisibleMessage.js
var politeSpan;
var assertiveSpan;
var setOutOfViewportStyles = (el) => {
  el.style.position = "absolute";
  el.style.clip = "rect(1px,1px,1px,1px)";
  el.style.userSelect = "none";
  el.style.left = "-1000px";
  el.style.top = "-1000px";
  el.style.pointerEvents = "none";
};
attachBoot(() => {
  if (politeSpan && assertiveSpan) {
    return;
  }
  politeSpan = document.createElement("span");
  assertiveSpan = document.createElement("span");
  politeSpan.classList.add("ui5-invisiblemessage-polite");
  assertiveSpan.classList.add("ui5-invisiblemessage-assertive");
  politeSpan.setAttribute("aria-live", "polite");
  assertiveSpan.setAttribute("aria-live", "assertive");
  politeSpan.setAttribute("role", "alert");
  assertiveSpan.setAttribute("role", "alert");
  setOutOfViewportStyles(politeSpan);
  setOutOfViewportStyles(assertiveSpan);
  getSingletonElementInstance_default("ui5-announcement-area").appendChild(politeSpan);
  getSingletonElementInstance_default("ui5-announcement-area").appendChild(assertiveSpan);
});
var announce = (message, mode) => {
  const span = mode === InvisibleMessageMode_default.Assertive ? assertiveSpan : politeSpan;
  span.textContent = "";
  span.textContent = message;
  if (mode !== InvisibleMessageMode_default.Assertive && mode !== InvisibleMessageMode_default.Polite) {
    console.warn(`You have entered an invalid mode. Valid values are: "Polite" and "Assertive". The framework will automatically set the mode to "Polite".`);
  }
  setTimeout(() => {
    if (span.textContent === message) {
      span.textContent = "";
    }
  }, 3e3);
};
var InvisibleMessage_default = announce;

// node_modules/@ui5/webcomponents-localization/dist/CalendarUtils.js
var CalendarUtilsWrapped = CalendarUtils_default;
var CalendarUtils2 = CalendarUtilsWrapped;
var CalendarUtils_default2 = CalendarUtils2;

// node_modules/@ui5/webcomponents/dist/DayPickerTemplate.js
function DayPickerTemplate() {
  return jsx("div", { class: {
    "ui5-dp-root": true,
    "ui5-dp-twocalendartypes": this.hasSecondaryCalendarType
  }, style: {
    "justify-content": "center",
    display: this._hidden ? "none" : "flex"
  }, onKeyDown: this._onkeydown, onKeyUp: this._onkeyup, onClick: this._onclick, onMouseOver: this._onmouseover, onFocusIn: this._onfocusin, onFocusOut: this._onfocusout, children: jsxs("div", { id: `${this._id}-content`, class: "ui5-dp-content", role: "grid", "aria-roledescription": this.ariaRoledescription, children: [jsx("div", { role: "row", class: "ui5-dp-days-names-container", children: this._dayNames.map((day) => jsx("div", { role: "columnheader", "aria-label": day.name, class: day.classes, children: day.ultraShortName })) }), this._weeks.map((week) => {
    return week.length > 0 ? jsx("div", { class: "ui5-dp-weeks-row", role: "row", children: week.map((day) => {
      return "timestamp" in day ? jsxs("div", { "data-ui5-special-day": day.type ? day.type : void 0, tabindex: day._tabIndex, "data-sap-focus-ref": day.focusRef ? "true" : void 0, "data-sap-timestamp": day.timestamp, role: "gridcell", title: day.tooltip, "aria-selected": day.ariaSelected, "aria-label": day.ariaLabel, "aria-disabled": day.ariaDisabled, class: day.classes, part: day.parts, children: [jsx("span", { class: "ui5-dp-daytext", "data-sap-timestamp": day.timestamp, children: day.day }), day._isSecondaryCalendarType && jsx("span", { class: "ui5-dp-daytext ui5-dp-daysectext", children: day.secondDay }), day.type && jsx("div", { class: `ui5-dp-specialday ${day.type}` })] }) : !day.isHidden && jsx("div", { className: "ui5-dp-weekname-container", role: "rowheader", "aria-label": `Calendar Week ${day.weekNum}`, children: jsx("span", { className: "ui5-dp-weekname", children: day.weekNum }) });
    }) }) : jsx("div", { class: "ui5-dp-empty-week" });
  })] }) });
}

// node_modules/@ui5/webcomponents/dist/generated/themes/DayPicker.css.js
registerThemePropertiesLoader("@ui5/webcomponents-theming", "sap_horizon", async () => parameters_bundle_css_default);
registerThemePropertiesLoader("@ui5/webcomponents", "sap_horizon", async () => parameters_bundle_css_default2);
var DayPicker_css_default = `:host(:not([hidden])){display:block}:host{height:100%;width:100%}:host([hide-week-numbers]) .ui5-dp-content{flex-basis:100%}.ui5-dp-root.ui5-dp-twocalendartypes .ui5-dp-item{flex-direction:column;justify-content:var(--_ui5-v2-8-0_day_picker_item_justify_content)}.ui5-dp-root.ui5-dp-twocalendartypes .ui5-dp-daytext{height:1.5625rem;padding-inline-end:var(--_ui5-v2-8-0_dp_two_calendar_item_text_padding_top)}.ui5-dp-root.ui5-dp-twocalendartypes .ui5-dp-daysectext{font-size:.75rem;height:var(--_ui5-v2-8-0_dp_two_calendar_item_secondary_text_height);padding-block:var(--_ui5-v2-8-0_dp_two_calendar_item_secondary_text_padding_block);padding-inline:50% .4375rem}.ui5-dp-weekname,.ui5-dp-dayname,.ui5-dp-item{width:var(--_ui5-v2-8-0_day_picker_item_width);height:var(--_ui5-v2-8-0_day_picker_item_height);margin-block-start:var(--_ui5-v2-8-0_daypicker_item_margin);margin-inline-end:var(--_ui5-v2-8-0_daypicker_item_margin);font-family:"72override",var(--sapFontFamily);border-radius:var(--_ui5-v2-8-0_daypicker_item_border_radius)}.ui5-dp-weekname{color:var(--_ui5-v2-8-0_daypicker_weekname_color)}.ui5-dp-weeks-row{display:flex}.ui5-dp-content{display:flex;flex-basis:87.5%;flex-direction:column;font-family:"72override",var(--sapFontFamily)}.ui5-dp-days-names-container{display:flex;height:var(--_ui5-v2-8-0_daypicker_daynames_container_height)}.ui5-dp-weeknumber-container{padding-block-start:var(--_ui5-v2-8-0_daypicker_weeknumbers_container_padding_top);flex-basis:12.5%}.ui5-dp-weekname,.ui5-dp-dayname,.ui5-dp-weekname-container,.ui5-dp-item{display:flex;flex-grow:1;justify-content:center;align-items:center;font-size:var(--sapFontSmallSize);outline:none;box-sizing:border-box;-webkit-user-select:none;-moz-user-select:none;user-select:none}.ui5-dp-item{position:relative;color:var(--sapTextColor);background:var(--sapLegend_WorkingBackground);font-size:var(--sapFontSize);border:var(--_ui5-v2-8-0_daypicker_item_border);border-radius:var(--_ui5-v2-8-0_daypicker_item_border_radius);cursor:pointer}.ui5-dp-item:hover{background:var(--sapList_Hover_Background)}.ui5-dp-daytext{display:flex;width:100%;height:100%;justify-content:center;align-items:center;box-sizing:border-box}.ui5-dp-dayname{color:var(--_ui5-v2-8-0_daypicker_dayname_color);height:100%}.ui5-dp-item.ui5-dp-item--weekend{background:var(--sapLegend_NonWorkingBackground)}.ui5-dp-item.ui5-dp-item--disabled{pointer-events:none;opacity:.5}.ui5-dp-item.ui5-dp-item--weekend:hover{background:var(--sapList_Hover_Background);filter:var(--_ui5-v2-8-0_daypicker_item_weeekend_filter)}.ui5-dp-item.ui5-dp-item--othermonth{color:var(--_ui5-v2-8-0_daypicker_item_othermonth_color);background:var(--_ui5-v2-8-0_daypicker_item_othermonth_background_color);border-color:transparent}.ui5-dp-item.ui5-dp-item--othermonth:hover,.ui5-dp-item.ui5-dp-item--weekend.ui5-dp-item--othermonth:hover{color:var(--_ui5-v2-8-0_daypicker_item_othermonth_hover_color);background:var(--sapList_Hover_Background)}.ui5-dp-item:focus:after{content:"";border:var(--_ui5-v2-8-0_daypicker_item_not_selected_focus_border);position:absolute;inset:var(--_ui5-v2-8-0_daypicker_item_no_selected_inset);outline:none;border-radius:var(--_ui5-v2-8-0_daypicker_item_border_radius_focus_after)}.ui5-dp-item.ui5-dp-item--now:before{position:absolute;inset:var(--_ui5-v2-8-0_daypicker_item_now_not_selected_inset);border:.125rem solid var(--_ui5-v2-8-0_daypicker_item_now_border_color);content:"";border-radius:var(--_ui5-v2-8-0_daypicker_item_border_radius);z-index:1}.ui5-dp-item.ui5-dp-item--now.ui5-dp-item--selected{box-shadow:var(--_ui5-v2-8-0_daypicker_item_now_box_shadow)}.ui5-dp-item.ui5-dp-item--selected{background:var(--sapContent_Selected_Background)}.ui5-dp-item.ui5-dp-item--selected:not(.ui5-dp-item.ui5-dp-item--now) .ui5-dp-daytext:after{position:absolute;inset:0;border:var(--_ui5-v2-8-0_daypicker_item_selected_border);content:"";border-radius:var(--_ui5-v2-8-0_daypicker_item_border_radius_item);z-index:1}.ui5-dp-item.ui5-dp-item--selected.ui5-dp-item.ui5-dp-item--now .ui5-dp-daytext{border:var(--_ui5-v2-8-0_day_picker_item_selected_now_border);outline:var(--_ui5-v2-8-0_daypicker_item_selected_text_outline);outline-offset:var(--_ui5-v2-8-0_daypicker_item_now_selected_outline_offset);border-radius:var(--_ui5-v2-8-0_daypicker_item_border_radius_item);font-family:var(--_ui5-v2-8-0_daypicker_item_selected_text_font)}.ui5-dp-item.ui5-dp-item--selected .ui5-dp-daytext{background:var(--_ui5-v2-8-0_daypicker_item_selected_background);color:var(--sapContent_Selected_TextColor);border-radius:var(--_ui5-v2-8-0_daypicker_item_border_radius);border:var(--_ui5-v2-8-0_daypicker_item_selected_text_border);font-family:var(--_ui5-v2-8-0_daypicker_item_selected_text_font)}.ui5-dp-item.ui5-dp-item--selected .ui5-dp-daytext{background:var(--_ui5-v2-8-0_daypicker_item_selected_daytext_hover_background);color:var(--sapContent_Selected_TextColor)}.ui5-dp-item.ui5-dp-item--now:focus:after{inset:var(--_ui5-v2-8-0_daypicker_item_now_inset);border-radius:var(--_ui5-v2-8-0_daypicker_item_now_border_radius_focus_after);border:var(--_ui5-v2-8-0_daypicker_item_now_border_focus_after);position:absolute;content:"";width:auto;height:auto}.ui5-dp-item.ui5-dp-item--selected.ui5-dp-item--now:focus:after{inset:var(--_ui5-v2-8-0_daypicker_item_now_inset);border-radius:var(--_ui5-v2-8-0_day_picker_item_selected_now_border_radius_focus);border:var(--_ui5-v2-8-0_day_picker_item_selected_now_border_focus);position:absolute;content:"";width:auto;height:auto}.ui5-dp-item.ui5-dp-item--selected:hover{background:var( --_ui5-v2-8-0_daypicker_item_selected_hover);color:var(--sapContent_ContrastTextColor)}.ui5-dp-item.ui5-dp-item--selected:focus:after{border-color:var(--_ui5-v2-8-0_daypicker_item_selected_focus_color);border-width:var(--_ui5-v2-8-0_daypicker_item_selected_focus_width)}.ui5-dp-items-container{outline:none}.ui5-dp-item.ui5-dp-item--selected-between .ui5-dp-daytext{border-radius:var(--_ui5-v2-8-0_daypicker_item_border_radius);font-weight:var(--_ui5-v2-8-0_daypicker_item_selected_between_text_font)}.ui5-dp-item.ui5-dp-item--selected-between.ui5-dp-item--now:not(.ui5-dp-item--selected) .ui5-dp-daytext:after{content:"";position:absolute;inset:var(--_ui5-v2-8-0_daypicker_item_now_selected_between_inset);border:var(--_ui5-v2-8-0_daypicker_item_now_selected_between_border);border-radius:var(--_ui5-v2-8-0_daypicker_item_now_selected_between_border_radius)}.ui5-dp-item.ui5-dp-item--selected-between{border:var(--_ui5-v2-8-0_daypicker_item_select_between_border);border-radius:var(--_ui5-v2-8-0_daypicker_item_selected_between_border);background:var(--_ui5-v2-8-0_daypicker_item_selected_between_background)}.ui5-dp-item.ui5-dp-item--selected-between:hover{background:var(--_ui5-v2-8-0_daypicker_item_selected_between_hover_background)}.ui5-dp-item.ui5-dp-item--selected.ui5-dp-item--selected-between:focus:after{border-color:var(--sapContent_FocusColor)}.ui5-dp-items-container>:first-child{justify-content:flex-end}.ui5-dp-emptyweek{height:var(--_ui5-v2-8-0_day_picker_empty_height)}.ui5-dp-item.ui5-dp-item--now.ui5-dp-item--selected.ui5-dp-item--withsecondtype:focus:after{outline-offset:-.1875rem;border-radius:var(--_ui5-v2-8-0-dp-item_withsecondtype_border)}.ui5-dp-item.ui5-dp-item--selected.ui5-dp-item--now.ui5-dp-item--withsecondtype .ui5-dp-daysectext,.ui5-dp-item.ui5-dp-item--now.ui5-dp-item--selected.ui5-dp-item--withsecondtype .ui5-dp-daytext{border:none;outline:none}.ui5-dp-root.ui5-dp-twocalendartypes .ui5-dp-item.ui5-dp-item--selected:not(.ui5-dp-item.ui5-dp-item--now) .ui5-dp-daytext:after{border-width:.0625rem}.ui5-dp-root.ui5-dp-twocalendartypes .ui5-dp-item.ui5-dp-item--now .ui5-dp-daysectext{height:var(--_ui5-v2-8-0_dp_two_calendar_item_secondary_text_height);padding-block-start:0;border-radius:var(--_ui5-v2-8-0_dp_two_calendar_item_secondary_text_border_radios)}.ui5-dp-root.ui5-dp-twocalendartypes .ui5-dp-item.ui5-dp-item--selected.ui5-dp-item.ui5-dp-item--now .ui5-dp-daytext{border-radius:var(--_ui5-v2-8-0_daypicker_two_calendar_item_border_radius);margin-block-end:var(--_ui5-v2-8-0_daypicker_two_calendar_item_margin_bottom)}.ui5-dp-root.ui5-dp-twocalendartypes .ui5-dp-item:focus:after{inset:var(--_ui5-v2-8-0_daypicker_two_calendar_item_no_selected_inset);border-radius:var(--_ui5-v2-8-0_daypicker_two_calendar_item_border_focus_border_radius)}.ui5-dp-root.ui5-dp-twocalendartypes .ui5-dp-item.ui5-dp-item--now:after{inset:var(--_ui5-v2-8-0_daypicker_two_calendar_item_no_selected_focus_inset);border-radius:var(--_ui5-v2-8-0_daypicker_two_calendar_item_no_select_focus_border_radius)}.ui5-dp-root.ui5-dp-twocalendartypes .ui5-dp-item.ui5-dp-item--selected:focus:after{border-width:var(--_ui5-v2-8-0_daypicker_two_calendar_item_now_selected_border_width);inset:var(--_ui5-v2-8-0_daypicker_two_calendar_item_now_selected_border_inset);border-radius:var(--_ui5-v2-8-0_daypicker_two_calendar_item_border_focus_border_radius)}.ui5-dp-root.ui5-dp-twocalendartypes .ui5-dp-item.ui5-dp-item--selected.ui5-dp-item--now:after{inset:var(--_ui5-v2-8-0_daypicker_two_calendar_item_now_inset);border-radius:var(--_ui5-v2-8-0_daypicker_two_calendar_item_selected_now_border_radius_focus)}.ui5-dp-root.ui5-dp-twocalendartypes .ui5-dp-item.ui5-dp-item--now.ui5-dp-item--selected.ui5-dp-item--withsecondtype .ui5-dp-daytext:not(.ui5-dp-daysectext):before{content:var(--_ui5-v2-8-0_daypicker_two_calendar_item_now_day_text_content);position:absolute;inset:.25rem;border-radius:var(--_ui5-v2-8-0_daypicker_two_calendar_item_selected_now_border_radius_focus);outline:var(--_ui5-v2-8-0_daypicker_item_selected__secondary_type_text_outline);z-index:1}.ui5-dp-specialday{width:100%;height:.375rem;position:absolute;box-sizing:border-box;inset-block-start:var(--_ui5-v2-8-0_daypicker_special_day_top);border-end-end-radius:var(--_ui5-v2-8-0_daypicker_special_day_border_bottom_radius);border-end-start-radius:var(--_ui5-v2-8-0_daypicker_special_day_border_bottom_radius);border-block-start:var(--_ui5-v2-8-0_daypicker_special_day_border_top)}.ui5-dp-specialday.NonWorking,.ui5-dp-specialday.Working{border-block-start:none}.ui5-dp-item--selected .ui5-dp-specialday{width:var(--_ui5-v2-8-0_daypicker_selected_item_special_day_width)}.ui5-dp-item--selected.ui5-dp-item--now .ui5-dp-specialday{inset-block-start:var(--_ui5-v2-8-0_daypicker_selected_item_now_special_day_top);width:var(--_ui5-v2-8-0_daypicker_selected_item_now_special_day_width);border-end-end-radius:var(--_ui5-v2-8-0_daypicker_selected_item_now_special_day_border_bottom_radius);border-end-start-radius:var(--_ui5-v2-8-0_daypicker_selected_item_now_special_day_border_bottom_radius)}.ui5-dp-item--now .ui5-dp-specialday,.ui5-dp-item.ui5-dp-item--selected.ui5-dp-item--now .ui5-dp-specialday{height:.3125rem;border-end-end-radius:var(--_ui5-v2-8-0_daypicker_selected_item_now_special_day_border_bottom_radius_alternate);border-end-start-radius:var(--_ui5-v2-8-0_daypicker_selected_item_now_special_day_border_bottom_radius_alternate);inset-block-start:var(--_ui5-v2-8-0_daypicker_item_now_specialday_top);width:var(--_ui5-v2-8-0_daypicker_item_now_specialday_width)}.ui5-dp-item:not(:focus).ui5-dp-item--selected.ui5-dp-item--now .ui5-dp-specialday{border-end-end-radius:var(--_ui5-v2-8-0_daypicker_special_day_selected_border_radius_bottom);border-end-start-radius:var(--_ui5-v2-8-0_daypicker_special_day_selected_border_radius_bottom)}.ui5-dp-item--now .ui5-dp-specialday{width:var(--_ui5-v2-8-0_daypicker_selected_item_now_special_day_width);inset-block-start:var(--_ui5-v2-8-0_daypicker_selected_item_now_special_day_top)}.ui5-dp-item[data-ui5-special-day].ui5-dp-item--selected.ui5-dp-item--now .ui5-dp-daytext{border-radius:var(--_ui5-v2-8-0-daypicker_item_selected_now_border_radius)}.ui5-dp-item[data-ui5-special-day].ui5-dp-item--selected.ui5-dp-item--now:focus:after,.ui5-dp-item[data-ui5-special-day].ui5-dp-item--now:focus:after{margin:var(--_ui5-v2-8-0_daypicker_item_now_focus_margin)}.ui5-dp-item.ui5-dp-item--now:focus .ui5-dp-specialday{inset-block-start:var(--_ui5-v2-8-0_daypicker_specialday_focused_top);width:var(--_ui5-v2-8-0_daypicker_specialday_focused_width);border-end-end-radius:var(--_ui5-v2-8-0_daypicker_specialday_focused_border_bottom);border-end-start-radius:var(--_ui5-v2-8-0_daypicker_specialday_focused_border_bottom);height:.3125rem}.ui5-dp-root.ui5-dp-twocalendartypes .ui5-dp-item[data-ui5-special-day].ui5-dp-item--selected.ui5-dp-item--now:after,.ui5-dp-root.ui5-dp-twocalendartypes .ui5-dp-item[data-ui5-special-day].ui5-dp-item--now:after{inset:var(--_ui5-v2-8-0_daypicker_twocalendar_item_special_day_now_inset);border-radius:var(--_ui5-v2-8-0_daypicker_twocalendar_item_special_day_now_border_radius);border-width:var(--_ui5-v2-8-0_daypicker_twocalendar_item_special_day_after_border_width);border-color:var(--_ui5-v2-8-0_daypicker_item_selected_focus_color)}.ui5-dp-root.ui5-dp-twocalendartypes .ui5-dp-item[data-ui5-special-day].ui5-dp-item--now:not(.ui5-dp-item--selected):after{inset:.1875rem}.ui5-dp-root.ui5-dp-twocalendartypes .ui5-dp-item .ui5-dp-specialday{inset-block-start:var(--_ui5-v2-8-0_daypicker_twocalendar_item_special_day_top);inset-inline-end:var(--_ui5-v2-8-0_daypicker_twocalendar_item_special_day_right)}.ui5-dp-root.ui5-dp-twocalendartypes .ui5-dp-item:not(.ui5-dp-item--now) .ui5-dp-daysectext{padding-block:var(--_ui5-v2-8-0_dp_two_calendar_item_secondary_text_padding)}.ui5-dp-item.ui5-dp-item--selected.ui5-dp-item--now.ui5-dp-item--withsecondtype:focus .ui5-dp-specialday{inset-block-start:var(--_ui5-v2-8-0_daypicker_item_now_selected_two_calendar_focus_special_day_top);inset-inline-end:var(--_ui5-v2-8-0_daypicker_item_now_selected_two_calendar_focus_special_day_right)}.ui5-dp-item.ui5-dp-item--selected.ui5-dp-item--now.ui5-dp-item--withsecondtype:focus .ui5-dp-daysectext{padding-block:var(--_ui5-v2-8-0_daypicker_item_now_selected_two_calendar_focus_secondary_text_padding_block)}.ui5-dp-item--withsecondtype .ui5-dp-daytext{font-size:.75rem}.ui5-dp-item.ui5-dp-item--withsecondtype .ui5-dp-specialday,.ui5-dp-item.ui5-dp-item--withsecondtype.ui5-dp-item--now:focus .ui5-dp-specialday,.ui5-dp-item.ui5-dp-item--withsecondtype:not(:focus).ui5-dp-item--selected.ui5-dp-item--now .ui5-dp-specialday{border-radius:100%;width:var(--_ui5-v2-8-0_daypicker_twocalendar_item_special_day_dot);inset-block-start:var(--_ui5-v2-8-0_daypicker_twocalendar_item_special_day_top);inset-inline-end:var(--_ui5-v2-8-0_daypicker_twocalendar_item_special_day_right);height:var(--_ui5-v2-8-0_daypicker_twocalendar_item_special_day_dot);border-block-start:none}.ui5-dp-root.ui5-dp-twocalendartypes .ui5-dp-item.ui5-dp-item--selected.ui5-dp-item.ui5-dp-item--now:focus .ui5-dp-daytext{margin-block-end:var(--_ui5-v2-8-0_daypicker_two_calendar_item_selected_focus_margin_bottom);padding-inline-end:var(--_ui5-v2-8-0_daypicker_two_calendar_item_selected_focus_padding_right)}.Type01{background:var(--sapLegendColor1)}.Type02{background:var(--sapLegendColor2)}.Type03{background:var(--sapLegendColor3)}.Type04{background:var(--sapLegendColor4)}.Type05{background:var(--sapLegendColor5)}.Type06{background:var(--sapLegendColor6)}.Type07{background:var(--sapLegendColor7)}.Type08{background:var(--sapLegendColor8)}.Type09{background:var(--sapLegendColor9)}.Type10{background:var(--sapLegendColor10)}.Type11{background:var(--sapLegendColor11)}.Type12{background:var(--sapLegendColor12)}.Type13{background:var(--sapLegendColor13)}.Type14{background:var(--sapLegendColor14)}.Type15{background:var(--sapLegendColor15)}.Type16{background:var(--sapLegendColor16)}.Type17{background:var(--sapLegendColor17)}.Type18{background:var(--sapLegendColor18)}.Type19{background:var(--sapLegendColor19)}.Type20{background:var(--sapLegendColor20)}
`;

// node_modules/@ui5/webcomponents/dist/DayPicker.js
var __decorate16 = function(decorators, target, key, desc) {
  var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
  if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
  else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
  return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var DayPicker_1;
var isBetween = (x, num1, num2) => x > Math.min(num1, num2) && x < Math.max(num1, num2);
var DAYS_IN_WEEK = 7;
var DayPicker = DayPicker_1 = class DayPicker2 extends CalendarPart_default {
  constructor() {
    super(...arguments);
    this.selectedDates = [];
    this.selectionMode = "Single";
    this.hideWeekNumbers = false;
    this._weeks = [];
    this._dayNames = [];
    this._hidden = false;
    this.specialCalendarDates = [];
  }
  onBeforeRendering() {
    const localeData = getCachedLocaleDataInstance_default(getLocale_default());
    this._buildWeeks(localeData);
    this._buildDayNames(localeData);
  }
  /**
   * Builds the "_weeks" object that represents the month.
   * @param localeData
   * @private
   */
  _buildWeeks(localeData) {
    if (this._hidden) {
      return;
    }
    this._weeks = [];
    const firstDayOfWeek = this._getFirstDayOfWeek();
    const specialCalendarDates = this._specialCalendarDates;
    const monthsNames = localeData.getMonths("wide", this._primaryCalendarType);
    const secondaryMonthsNames = this.hasSecondaryCalendarType ? localeData.getMonths("wide", this.secondaryCalendarType) : [];
    const nonWorkingDayLabel = DayPicker_1.i18nBundle.getText(DAY_PICKER_NON_WORKING_DAY);
    const todayLabel = DayPicker_1.i18nBundle.getText(DAY_PICKER_TODAY);
    const tempDate = this._getFirstDay();
    const todayDate = CalendarDate_default.fromLocalJSDate(UI5Date_default2.getInstance(), this._primaryCalendarType);
    const calendarDate = this._calendarDate;
    const minDate = this._minDate;
    const maxDate = this._maxDate;
    const tempSecondDate = this.hasSecondaryCalendarType ? this._getSecondaryDay(tempDate) : void 0;
    let week = [];
    for (let i = 0; i < DAYS_IN_WEEK * 6; i++) {
      const timestamp = tempDate.valueOf() / 1e3;
      let dayOfTheWeek = tempDate.getDay() - firstDayOfWeek;
      if (dayOfTheWeek < 0) {
        dayOfTheWeek += DAYS_IN_WEEK;
      }
      const specialCalendarDate = specialCalendarDates.find((specialDate) => specialDate.specialDateTimestamp === timestamp);
      const specialDayType = specialCalendarDate ? specialCalendarDate.type : "";
      const specialDayTooltip = specialCalendarDate ? specialCalendarDate.tooltip : "";
      const unnamedCalendarTypeLabel = specialDayTooltip && !this._isDefaultCalendarLegendType(specialDayType) ? specialDayTooltip : "";
      const isFocused = tempDate.getMonth() === calendarDate.getMonth() && tempDate.getDate() === calendarDate.getDate();
      const isSelected = this._isDaySelected(timestamp);
      const isSelectedBetween = this._isDayInsideSelectionRange(timestamp);
      const isOtherMonth = tempDate.getMonth() !== calendarDate.getMonth();
      const isWeekend = this._isWeekend(tempDate);
      const isDisabled = tempDate.valueOf() < minDate.valueOf() || tempDate.valueOf() > maxDate.valueOf();
      const isToday = tempDate.isSame(todayDate);
      const isFirstDayOfWeek = tempDate.getDay() === firstDayOfWeek;
      const nonWorkingAriaLabel = (isWeekend || specialDayType === "NonWorking") && specialDayType !== "Working" ? `${nonWorkingDayLabel} ` : "";
      const todayAriaLabel = isToday ? `${todayLabel} ` : "";
      const tempSecondDateNumber = tempSecondDate ? tempSecondDate.getDate() : "";
      const tempSecondYearNumber = tempSecondDate ? tempSecondDate.getYear() : "";
      const secondaryMonthsNamesString = secondaryMonthsNames.length > 0 ? secondaryMonthsNames[tempSecondDate.getMonth()] : "";
      const tooltip = `${todayAriaLabel}${nonWorkingAriaLabel}${unnamedCalendarTypeLabel}`;
      const ariaLabel = this.hasSecondaryCalendarType ? `${monthsNames[tempDate.getMonth()]} ${tempDate.getDate()}, ${tempDate.getYear()}; ${secondaryMonthsNamesString} ${tempSecondDateNumber}, ${tempSecondYearNumber} ${tooltip} ` : `${monthsNames[tempDate.getMonth()]} ${tempDate.getDate()}, ${tempDate.getYear()} ${tooltip}`;
      const day = {
        timestamp: timestamp.toString(),
        focusRef: isFocused,
        _tabIndex: isFocused ? 0 : -1,
        selected: isSelected || isSelectedBetween,
        day: tempDate.getDate(),
        secondDay: this.hasSecondaryCalendarType ? tempSecondDate.getDate() : void 0,
        _isSecondaryCalendarType: this.hasSecondaryCalendarType,
        classes: `ui5-dp-item ui5-dp-wday${dayOfTheWeek}`,
        tooltip,
        ariaLabel,
        ariaSelected: isSelected || isSelectedBetween,
        ariaDisabled: isDisabled || isOtherMonth,
        disabled: isDisabled,
        type: specialDayType,
        parts: "day-cell"
      };
      if (isFirstDayOfWeek) {
        day.classes += " ui5-dp-firstday";
      }
      if (isSelected) {
        day.classes += " ui5-dp-item--selected";
        day.parts += " day-cell-selected";
      }
      if (isSelectedBetween) {
        day.classes += " ui5-dp-item--selected-between";
        day.parts += " day-cell-selected-between";
      }
      if (isToday) {
        day.classes += " ui5-dp-item--now";
      }
      if (isOtherMonth) {
        day.classes += " ui5-dp-item--othermonth";
      }
      if ((isWeekend || specialDayType === "NonWorking") && specialDayType !== "Working") {
        day.classes += " ui5-dp-item--weekend";
      }
      if (isDisabled) {
        day.classes += " ui5-dp-item--disabled";
      }
      if (this.hasSecondaryCalendarType) {
        day.classes += " ui5-dp-item--withsecondtype";
      }
      week.push(day);
      if (dayOfTheWeek === DAYS_IN_WEEK - 1) {
        const weekNumber = this._calculateWeekNumber(tempDate.toLocalJSDate());
        week.unshift({
          weekNum: weekNumber,
          isHidden: this.shouldHideWeekNumbers
        });
      }
      if (week.length === DAYS_IN_WEEK + 1) {
        this._weeks.push(week);
        week = [];
      }
      tempDate.setDate(tempDate.getDate() + 1);
      if (this.hasSecondaryCalendarType && tempSecondDate) {
        tempSecondDate.setDate(tempSecondDate.getDate() + 1);
      }
    }
  }
  _calculateWeekNumber(date) {
    const oDateFormat = DateFormat_default2.getDateInstance({ pattern: "w", calendarType: this.primaryCalendarType, calendarWeekNumbering: this.calendarWeekNumbering });
    const weekNumber = oDateFormat.format(date);
    return Number(weekNumber);
  }
  /**
   * Builds the dayNames object (header of the month).
   * @param localeData
   * @private
   */
  _buildDayNames(localeData) {
    if (this._hidden) {
      return;
    }
    let dayOfTheWeek;
    const aDayNamesWide = localeData.getDays("wide", this._primaryCalendarType);
    let aDayNamesAbbreviated = localeData.getDays("abbreviated", this._primaryCalendarType);
    let dayName;
    if (this.namesTooLong(aDayNamesAbbreviated)) {
      aDayNamesAbbreviated = localeData.getDays("narrow", this._primaryCalendarType);
    }
    this._dayNames = [];
    this._dayNames.push({
      classes: "ui5-dp-dayname",
      name: DayPicker_1.i18nBundle.getText(DAY_PICKER_WEEK_NUMBER_TEXT)
    });
    for (let i = 0; i < DAYS_IN_WEEK; i++) {
      dayOfTheWeek = i + this._getFirstDayOfWeek();
      if (dayOfTheWeek > DAYS_IN_WEEK - 1) {
        dayOfTheWeek -= DAYS_IN_WEEK;
      }
      dayName = {
        name: aDayNamesWide[dayOfTheWeek],
        ultraShortName: aDayNamesAbbreviated[dayOfTheWeek],
        classes: "ui5-dp-dayname"
      };
      this._dayNames.push(dayName);
    }
    this._dayNames[1].classes += " ui5-dp-firstday";
    if (this.shouldHideWeekNumbers) {
      this._dayNames.shift();
    }
  }
  /**
   * Tells if any of the days is more than 4 characters(too long to render).
   * @param dayNames
   * @private
   */
  namesTooLong(dayNames) {
    return dayNames.some((dayName) => dayName.length > 4);
  }
  onAfterRendering() {
    if (this._autoFocus && !this._hidden) {
      this.focus();
    }
    const focusedDay = this.shadowRoot.querySelector("[data-sap-focus-ref]");
    if (focusedDay && document.activeElement !== focusedDay && this._specialCalendarDates.length === 0) {
      focusedDay.focus();
    }
  }
  _onfocusin() {
    this._autoFocus = true;
  }
  _onfocusout() {
    this._autoFocus = false;
  }
  /**
   * Tells if the day is selected (dark blue).
   * @param timestamp
   * @private
   */
  _isDaySelected(timestamp) {
    if (this.selectionMode === CalendarSelectionMode_default.Single) {
      return timestamp === this.selectedDates[0];
    }
    if (this.selectionMode === CalendarSelectionMode_default.Multiple) {
      return this.selectedDates.includes(timestamp);
    }
    return timestamp === this.selectedDates[0] || timestamp === this.selectedDates[this.selectedDates.length - 1];
  }
  /**
   * Tells if the day is inside a selection range (light blue).
   * @param timestamp
   * @private
   */
  _isDayInsideSelectionRange(timestamp) {
    if (this.selectionMode !== CalendarSelectionMode_default.Range || !this.selectedDates.length) {
      return false;
    }
    if (this.selectedDates.length === 1 && this._secondTimestamp) {
      return isBetween(timestamp, this.selectedDates[0], this._secondTimestamp);
    }
    return isBetween(timestamp, this.selectedDates[0], this.selectedDates[this.selectedDates.length - 1]);
  }
  /**
   * Selects/deselects a day.
   * @param e
   * @param isShift true if the user did Click+Shift or Enter+Shift (but not Space+Shift)
   * @private
   */
  _selectDate(e, isShift2) {
    let target = e.target;
    if (!target.hasAttribute("data-sap-timestamp")) {
      target = target.parentNode;
    }
    if (!this._isDayPressed(target)) {
      return;
    }
    const timestamp = this._getTimestampFromDom(target);
    this._safelySetTimestamp(timestamp);
    this._updateSecondTimestamp();
    this._updateSelectedDates(timestamp, isShift2);
    this.fireDecoratorEvent("change", {
      timestamp: this.timestamp,
      dates: this.selectedDates
    });
  }
  _updateSelectedDates(timestamp, isShift2) {
    if (this.selectionMode === CalendarSelectionMode_default.Multiple) {
      if (this.selectedDates.length > 0 && isShift2) {
        this._multipleSelection(timestamp);
      } else {
        this._toggleTimestampInSelection(timestamp);
      }
      return;
    }
    InvisibleMessage_default(DayPicker_1.i18nBundle.getText(LIST_ITEM_SELECTED), InvisibleMessageMode_default.Assertive);
    if (this.selectionMode === CalendarSelectionMode_default.Range && this.selectedDates.length === 1) {
      this.selectedDates = [this.selectedDates[0], timestamp];
      return;
    }
    this.selectedDates = [timestamp];
  }
  /**
   * Selects/deselects the whole row (week).
   * @private
   */
  _selectWeek() {
    this._weeks.forEach((week) => {
      const _week = week;
      const dayInThisWeek = _week.findIndex((item2) => {
        const date = CalendarDate_default.fromTimestamp(parseInt(item2.timestamp) * 1e3);
        return date.getMonth() === this._calendarDate.getMonth() && date.getDate() === this._calendarDate.getDate();
      }) !== -1;
      if (dayInThisWeek) {
        const notAllDaysOfThisWeekSelected = _week.some((item2) => item2.timestamp && !this.selectedDates.includes(parseInt(item2.timestamp)));
        if (notAllDaysOfThisWeekSelected) {
          _week.filter((item2) => item2.timestamp).forEach((item2) => {
            this._addTimestampToSelection(parseInt(item2.timestamp));
          });
        } else {
          _week.filter((item2) => item2.timestamp).forEach((item2) => {
            this._removeTimestampFromSelection(parseInt(item2.timestamp));
          });
        }
      }
    });
    this.fireDecoratorEvent("change", {
      timestamp: this.timestamp,
      dates: this.selectedDates
    });
  }
  _toggleTimestampInSelection(timestamp) {
    if (this.selectedDates.includes(timestamp)) {
      this._removeTimestampFromSelection(timestamp);
    } else {
      this._addTimestampToSelection(timestamp);
      InvisibleMessage_default(DayPicker_1.i18nBundle.getText(LIST_ITEM_SELECTED), InvisibleMessageMode_default.Assertive);
    }
  }
  _addTimestampToSelection(timestamp) {
    if (!this.selectedDates.includes(timestamp)) {
      this.selectedDates = [...this.selectedDates, timestamp];
    }
  }
  _removeTimestampFromSelection(timestamp) {
    this.selectedDates = this.selectedDates.filter((value) => value !== timestamp);
  }
  /**
   * Called when at least one day is selected and the user presses "Shift".
   * @param timestamp
   * @private
   */
  _multipleSelection(timestamp) {
    const min = Math.min(...this.selectedDates);
    const max = Math.max(...this.selectedDates);
    let start;
    let end;
    let toggle = false;
    if (timestamp < min) {
      start = timestamp;
      end = min;
    } else if (timestamp >= min && timestamp <= max) {
      const distanceToMin = Math.abs(timestamp - min);
      const distanceToMax = Math.abs(timestamp - max);
      if (distanceToMin < distanceToMax) {
        start = timestamp;
        end = max;
      } else {
        start = min;
        end = timestamp;
      }
      toggle = true;
    } else {
      start = max;
      end = timestamp;
    }
    const startDate = CalendarDate_default.fromTimestamp(start * 1e3);
    const endDate = CalendarDate_default.fromTimestamp(end * 1e3);
    while (startDate.valueOf() <= endDate.valueOf()) {
      this[toggle ? "_toggleTimestampInSelection" : "_addTimestampToSelection"](startDate.valueOf() / 1e3);
      startDate.setDate(startDate.getDate() + 1);
    }
  }
  /**
   * Set the hovered day as the "_secondTimestamp".
   * @param e
   * @private
   */
  _onmouseover(e) {
    const target = e.target;
    const hoveredItem = target.closest(".ui5-dp-item");
    if (hoveredItem && this.selectionMode === CalendarSelectionMode_default.Range && this.selectedDates.length === 1) {
      this._secondTimestamp = this._getTimestampFromDom(hoveredItem);
    }
  }
  _onkeydown(e) {
    let preventDefault = true;
    if (isEnter(e) || isEnterShift(e)) {
      this._selectDate(e, isEnterShift(e));
    } else if (isSpace(e) || isSpaceShift(e)) {
      e.preventDefault();
    } else if (isLeft(e)) {
      this._modifyTimestampBy(-1, "day", false);
    } else if (isRight(e)) {
      this._modifyTimestampBy(1, "day", false);
    } else if (isUp(e)) {
      this._modifyTimestampBy(-7, "day", false);
    } else if (isDown(e)) {
      this._modifyTimestampBy(7, "day", false);
    } else if (isPageUp(e)) {
      this._modifyTimestampBy(-1, "month");
    } else if (isPageDown(e)) {
      this._modifyTimestampBy(1, "month");
    } else if (isPageUpShift(e) || isPageUpAlt(e)) {
      this._modifyTimestampBy(-1, "year");
    } else if (isPageDownShift(e) || isPageDownAlt(e)) {
      this._modifyTimestampBy(1, "year");
    } else if (isPageUpShiftCtrl(e)) {
      this._modifyTimestampBy(-10, "year");
    } else if (isPageDownShiftCtrl(e)) {
      this._modifyTimestampBy(10, "year");
    } else if (isHome(e) || isEnd(e)) {
      this._onHomeOrEnd(isHome(e));
    } else if (isHomeCtrl(e)) {
      const tempDate = new CalendarDate_default(this._calendarDate, this._primaryCalendarType);
      tempDate.setDate(1);
      this._setTimestamp(tempDate.valueOf() / 1e3);
    } else if (isEndCtrl(e)) {
      const tempDate = new CalendarDate_default(this._calendarDate, this._primaryCalendarType);
      tempDate.setMonth(tempDate.getMonth() + 1);
      tempDate.setDate(0);
      this._setTimestamp(tempDate.valueOf() / 1e3);
    } else {
      preventDefault = false;
    }
    if (preventDefault) {
      e.preventDefault();
    }
  }
  _onkeyup(e) {
    if (isSpace(e) || isSpaceShift(e) && this.selectionMode !== CalendarSelectionMode_default.Multiple) {
      this._selectDate(e, false);
    } else if (isSpaceShift(e)) {
      this._selectWeek();
    }
  }
  /**
   * Click is the same as "Enter".
   * **Note:** "Click+Shift" has the same effect as "Enter+Shift".
   * @param e
   * @private
   */
  _onclick(e) {
    this._selectDate(e, e.shiftKey);
  }
  /**
   * Called upon "Home" or "End" - moves the focus to the first or last item in the row.
   * @param homePressed
   * @private
   */
  _onHomeOrEnd(homePressed) {
    this._weeks.forEach((week) => {
      const _week = week;
      const dayInThisWeek = _week.findIndex((item2) => {
        const date = CalendarDate_default.fromTimestamp(parseInt(item2.timestamp) * 1e3);
        return date.getMonth() === this._calendarDate.getMonth() && date.getDate() === this._calendarDate.getDate();
      }) !== -1;
      if (dayInThisWeek) {
        const index = homePressed ? 1 : 7;
        this._setTimestamp(parseInt(_week[index].timestamp));
      }
    });
  }
  /**
   * Called by the Calendar component.
   * @protected
   */
  _hasPreviousPage() {
    return !(this._calendarDate.getMonth() === this._minDate.getMonth() && this._calendarDate.getYear() === this._minDate.getYear());
  }
  /**
   * Called by the Calendar component.
   * @protected
   */
  _hasNextPage() {
    return !(this._calendarDate.getMonth() === this._maxDate.getMonth() && this._calendarDate.getYear() === this._maxDate.getYear());
  }
  /**
   * Called by the Calendar component.
   * @protected
   */
  _showPreviousPage() {
    this._modifyTimestampBy(-1, "month", false);
  }
  /**
   * Called by the Calendar component.
   * @protected
   */
  _showNextPage() {
    this._modifyTimestampBy(1, "month", false);
  }
  /**
   * Modifies the timestamp by a certain amount of days/months/years.
   * @param amount
   * @param unit
   * @param preserveDate whether to preserve the day of the month (f.e. 15th of March + 1 month = 15th of April)
   * @private
   */
  _modifyTimestampBy(amount, unit, preserveDate) {
    this._safelyModifyTimestampBy(amount, unit, preserveDate);
    this._updateSecondTimestamp();
    this.fireDecoratorEvent("navigate", { timestamp: this.timestamp });
  }
  /**
   * Sets the timestamp to an absolute value.
   * @param value
   * @private
   */
  _setTimestamp(value) {
    this._safelySetTimestamp(value);
    this._updateSecondTimestamp();
    this.fireDecoratorEvent("navigate", { timestamp: this.timestamp });
  }
  /**
   * During range selection, when the user is navigating with the keyboard,
   * the currently focused day is considered the "second day".
   * @private
   */
  _updateSecondTimestamp() {
    if (this.selectionMode === CalendarSelectionMode_default.Range && (this.selectedDates.length === 1 || this.selectedDates.length === 2)) {
      this._secondTimestamp = this.timestamp;
    }
  }
  get _specialCalendarDates() {
    return this.specialCalendarDates;
  }
  get shouldHideWeekNumbers() {
    if (this._primaryCalendarType !== CalendarType_default.Gregorian) {
      return true;
    }
    return this.hideWeekNumbers;
  }
  _isWeekend(oDate) {
    const localeData = getCachedLocaleDataInstance_default(getLocale_default());
    const iWeekDay = oDate.getDay(), iWeekendStart = localeData.getWeekendStart(), iWeekendEnd = localeData.getWeekendEnd();
    return iWeekDay >= iWeekendStart && iWeekDay <= iWeekendEnd || iWeekendEnd < iWeekendStart && (iWeekDay >= iWeekendStart || iWeekDay <= iWeekendEnd);
  }
  _isDayPressed(target) {
    const targetParent = target.parentNode;
    return target.className.indexOf("ui5-dp-item") > -1 || targetParent && targetParent.classList && targetParent.classList.contains("ui5-dp-item");
  }
  _isDefaultCalendarLegendType(type) {
    return ["NonWorking", "Working", "Today", "Selected", "None"].includes(type);
  }
  _getSecondaryDay(tempDate) {
    return new CalendarDate_default(tempDate, this.secondaryCalendarType);
  }
  _getFirstDay() {
    let daysFromPreviousMonth;
    const firstDayOfWeek = this._getFirstDayOfWeek();
    const firstDay = new CalendarDate_default(this._calendarDate, this._primaryCalendarType);
    firstDay.setDate(1);
    daysFromPreviousMonth = firstDay.getDay() - firstDayOfWeek;
    if (daysFromPreviousMonth < 0) {
      daysFromPreviousMonth = 7 + daysFromPreviousMonth;
    }
    if (daysFromPreviousMonth > 0) {
      firstDay.setDate(1 - daysFromPreviousMonth);
    }
    return firstDay;
  }
  _getFirstDayOfWeek() {
    const result = CalendarUtils_default2.getWeekConfigurationValues(this.calendarWeekNumbering);
    const localeData = getCachedLocaleDataInstance_default(getLocale_default());
    return (result == null ? void 0 : result.firstDayOfWeek) ? result.firstDayOfWeek : localeData.getFirstDayOfWeek();
  }
  get styles() {
    return {
      wrapper: {
        display: this._hidden ? "none" : "flex",
        "justify-content": "center"
      },
      main: {
        width: "100%"
      }
    };
  }
  get ariaRoledescription() {
    return this.hasSecondaryCalendarType ? `${this._primaryCalendarType} calendar with secondary ${this.secondaryCalendarType} calendar` : `${this._primaryCalendarType} calendar`;
  }
};
__decorate16([
  property_default({ type: Array })
], DayPicker.prototype, "selectedDates", void 0);
__decorate16([
  property_default()
], DayPicker.prototype, "selectionMode", void 0);
__decorate16([
  property_default({ type: Boolean })
], DayPicker.prototype, "hideWeekNumbers", void 0);
__decorate16([
  property_default({ type: Array })
], DayPicker.prototype, "_weeks", void 0);
__decorate16([
  property_default({ type: Array })
], DayPicker.prototype, "_dayNames", void 0);
__decorate16([
  property_default({ type: Boolean, noAttribute: true })
], DayPicker.prototype, "_hidden", void 0);
__decorate16([
  property_default({ type: Number })
], DayPicker.prototype, "_secondTimestamp", void 0);
__decorate16([
  property_default({ type: Array })
], DayPicker.prototype, "specialCalendarDates", void 0);
__decorate16([
  i18n_default("@ui5/webcomponents")
], DayPicker, "i18nBundle", void 0);
DayPicker = DayPicker_1 = __decorate16([
  customElement_default({
    tag: "ui5-daypicker",
    styles: DayPicker_css_default,
    template: DayPickerTemplate
  }),
  event_strict_default("change", {
    bubbles: true
  }),
  event_strict_default("navigate", {
    bubbles: true
  })
], DayPicker);
DayPicker.define();
var DayPicker_default = DayPicker;

// node_modules/@ui5/webcomponents/dist/MonthPickerTemplate.js
function MonthPickerTemplate() {
  return jsx("div", { class: "ui5-mp-root", role: "grid", "aria-roledescription": this.roleDescription, "aria-readonly": "false", "aria-multiselectable": "false", onMouseOver: this._onmouseover, onKeyDown: this._onkeydown, onKeyUp: this._onkeyup, onClick: this._selectMonth, children: this._monthsInterval.map((months) => jsx("div", { role: "row", class: "ui5-mp-quarter", children: months.map((month) => jsxs("div", { "data-sap-timestamp": month.timestamp, tabindex: month._tabIndex, "data-sap-focus-ref": month.focusRef ? "true" : void 0, class: month.classes, part: month.parts, role: "gridcell", "aria-selected": month.ariaSelected, "aria-disabled": month.ariaDisabled, children: [jsx("span", { class: "ui5-dp-monthtext", children: month.name }), month.nameInSecType && jsx("span", { class: "ui5-dp-monthtext ui5-dp-monthsectext", children: month.nameInSecType })] })) })) });
}

// node_modules/@ui5/webcomponents/dist/generated/themes/MonthPicker.css.js
registerThemePropertiesLoader("@ui5/webcomponents-theming", "sap_horizon", async () => parameters_bundle_css_default);
registerThemePropertiesLoader("@ui5/webcomponents", "sap_horizon", async () => parameters_bundle_css_default2);
var MonthPicker_css_default = `:host(:not([hidden])){display:block}:host{width:100%;height:100%}.ui5-mp-root{box-sizing:border-box;padding:2rem 0 1rem;display:flex;flex-direction:column;font-family:"72override",var(--sapFontFamily);font-size:var(--sapFontSize);justify-content:center;align-items:center}.ui5-mp-quarter{display:flex;justify-content:center;align-items:center;width:100%}.ui5-mp-item{display:flex;flex-direction:column;width:calc(33.333% - .125rem);height:var(--_ui5-v2-8-0_month_picker_item_height);color:var(--sapButton_Lite_TextColor);background-color:var(--sapButton_Lite_Background);align-items:center;justify-content:center;margin:var(--_ui5-v2-8-0_monthpicker_item_margin);box-sizing:border-box;-webkit-user-select:none;-moz-user-select:none;user-select:none;cursor:default;outline:none;position:relative;border:var(--_ui5-v2-8-0_monthpicker_item_border);border-radius:var(--_ui5-v2-8-0_monthpicker_item_border_radius)}.ui5-dp-monthsectext{font-size:.75rem;color:var(--sapNeutralElementColor)}.ui5-mp-item.ui5-mp-item--selected,.ui5-mp-item.ui5-mp-item--selected-between{background:var(--sapButton_Selected_Background);border:var(--_ui5-v2-8-0_monthpicker_item_selected_border);color:var(--sapButton_Selected_TextColor)}.ui5-mp-item.ui5-mp-item--selected .ui5-dp-monthsectext,.ui5-mp-item.ui5-mp-item--selected-between .ui5-dp-monthsectext{color:var(--sapButton_Selected_TextColor)}.ui5-mp-item:hover{background:var(--sapButton_Lite_Hover_Background);border:var(--_ui5-v2-8-0_monthpicker_item_hover_border);color:var(--sapButton_Lite_Hover_TextColor)}.ui5-mp-item.ui5-mp-item--selected:hover,.ui5-mp-item.ui5-mp-item--selected-between:hover{background:var(--sapButton_Selected_Hover_Background);border:var(--_ui5-v2-8-0_monthpicker_item_selected_hover_border);color:var(--sapButton_Selected_TextColor)}.ui5-mp-item.ui5-mp-item--selected:hover .ui5-dp-monthsectext,.ui5-mp-item.ui5-mp-item--selected-between:hover .ui5-dp-monthsectext{color:var(--sapButton_Selected_TextColor)}.ui5-mp-item:active,.ui5-mp-item.ui5-mp-item--selected:active,.ui5-mp-item.ui5-mp-item--selected-between:active{background:var(--sapButton_Active_Background);border:var(--_ui5-v2-8-0_monthpicker_item_active_border);color:var(--sapButton_Active_TextColor)}.ui5-mp-item:active .ui5-dp-monthsectext,.ui5-mp-item.ui5-mp-item--selected:active .ui5-dp-monthsectext,.ui5-mp-item.ui5-mp-item--selected-between:active .ui5-dp-monthsectext{color:var(--sapButton_Active_TextColor)}.ui5-mp-item.ui5-mp-item--disabled{pointer-events:none;opacity:.5}.ui5-mp-item:focus:after{content:"";position:absolute;inset:.0625rem;border:var(--_ui5-v2-8-0_button_focused_border);border-radius:var(--_ui5-v2-8-0_button_focused_border_radius)}:host([secondary-calendar-type="Persian"]:not([primary-calendar-type="Persian"])) .ui5-mp-root,:host([secondary-calendar-type="Islamic"]:not([primary-calendar-type="Islamic"])) .ui5-mp-root{display:grid;padding:.5625rem 0;grid-template-columns:repeat(2,1fr);gap:var(--_ui5-v2-8-0_monthpicker_item_margin)}:host([secondary-calendar-type="Persian"]:not([primary-calendar-type="Persian"])) .ui5-mp-item,:host([secondary-calendar-type="Islamic"]:not([primary-calendar-type="Islamic"])) .ui5-mp-item{margin:0;width:auto}:host([secondary-calendar-type="Persian"]:not([primary-calendar-type="Persian"])) .ui5-mp-quarter,:host([secondary-calendar-type="Islamic"]:not([primary-calendar-type="Islamic"])) .ui5-mp-quarter{width:100%;display:contents}
`;

// node_modules/@ui5/webcomponents/dist/MonthPicker.js
var __decorate17 = function(decorators, target, key, desc) {
  var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
  if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
  else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
  return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var MonthPicker_1;
var isBetween2 = (x, num1, num2) => x > Math.min(num1, num2) && x < Math.max(num1, num2);
var PAGE_SIZE = 12;
var MonthPicker = MonthPicker_1 = class MonthPicker2 extends CalendarPart_default {
  constructor() {
    super(...arguments);
    this.selectedDates = [];
    this.selectionMode = "Single";
    this._monthsInterval = [];
    this._hidden = false;
  }
  get roleDescription() {
    return MonthPicker_1.i18nBundle.getText(MONTH_PICKER_DESCRIPTION);
  }
  onBeforeRendering() {
    this._buildMonths();
  }
  onAfterRendering() {
    if (!this._hidden) {
      this.focus();
    }
  }
  get rowSize() {
    return this.secondaryCalendarType === CalendarType_default.Islamic && this.primaryCalendarType !== CalendarType_default.Islamic || this.secondaryCalendarType === CalendarType_default.Persian && this.primaryCalendarType !== CalendarType_default.Persian ? 2 : 3;
  }
  _buildMonths() {
    if (this._hidden) {
      return;
    }
    const localeData = getCachedLocaleDataInstance_default(getLocale_default());
    const monthsNames = localeData.getMonthsStandAlone("wide", this._primaryCalendarType);
    const months = [];
    const calendarDate = this._calendarDate;
    const minDate = this._minDate;
    const maxDate = this._maxDate;
    const tempDate = new CalendarDate_default(calendarDate, this._primaryCalendarType);
    let timestamp;
    for (let i = 0; i < 12; i++) {
      tempDate.setMonth(i);
      timestamp = tempDate.valueOf() / 1e3;
      const isSelected = this.selectedDates.some((itemTimestamp) => {
        const date = CalendarDate_default.fromTimestamp(itemTimestamp * 1e3, this._primaryCalendarType);
        return date.getYear() === tempDate.getYear() && date.getMonth() === tempDate.getMonth();
      });
      const isFocused = tempDate.getMonth() === calendarDate.getMonth();
      const isDisabled = this._isOutOfSelectableRange(tempDate, minDate, maxDate);
      const isSelectedBetween = this._isMonthInsideSelectionRange(timestamp);
      const month = {
        timestamp: timestamp.toString(),
        focusRef: isFocused,
        _tabIndex: isFocused ? 0 : -1,
        selected: isSelected || isSelectedBetween,
        ariaSelected: isSelected || isSelectedBetween,
        name: monthsNames[i],
        nameInSecType: this.hasSecondaryCalendarType && this._getDisplayedSecondaryMonthText(timestamp).text,
        disabled: isDisabled,
        ariaDisabled: isDisabled,
        classes: "ui5-mp-item",
        parts: "month-cell"
      };
      if (isSelected) {
        month.classes += " ui5-mp-item--selected";
        month.parts += " month-cell-selected";
      }
      if (isSelectedBetween) {
        month.classes += " ui5-mp-item--selected-between";
        month.parts += " month-cell-selected-between";
      }
      if (isDisabled) {
        month.classes += " ui5-mp-item--disabled";
      }
      const quarterIndex = Math.floor(i / this.rowSize);
      if (months[quarterIndex]) {
        months[quarterIndex].push(month);
      } else {
        months[quarterIndex] = [month];
      }
    }
    this._monthsInterval = months;
  }
  _getDisplayedSecondaryMonthText(timestamp) {
    const monthsName = transformDateToSecondaryType_default(this._primaryCalendarType, this.secondaryCalendarType, timestamp);
    return convertMonthNumbersToMonthNames_default(monthsName.firstDate.getMonth(), monthsName.lastDate.getMonth(), this.secondaryCalendarType);
  }
  /**
    * Returns true if month timestamp is inside the selection range.
    * @private
    */
  _isMonthInsideSelectionRange(timestamp) {
    if (this.selectionMode !== CalendarSelectionMode_default.Range || !this.selectedDates.length) {
      return false;
    }
    if (this.selectedDates.length === 1 && this._secondTimestamp) {
      return isBetween2(timestamp, this.selectedDates[0], this._secondTimestamp);
    }
    return isBetween2(timestamp, this.selectedDates[0], this.selectedDates[1]);
  }
  _onkeydown(e) {
    let preventDefault = true;
    if (isEnter(e)) {
      this._selectMonth(e);
    } else if (isSpace(e)) {
      e.preventDefault();
    } else if (isLeft(e)) {
      this._modifyTimestampBy(-1);
    } else if (isRight(e)) {
      this._modifyTimestampBy(1);
    } else if (isUp(e)) {
      this._modifyTimestampBy(-this.rowSize);
    } else if (isDown(e)) {
      this._modifyTimestampBy(this.rowSize);
    } else if (isPageUp(e)) {
      this._modifyTimestampBy(-PAGE_SIZE);
    } else if (isPageDown(e)) {
      this._modifyTimestampBy(PAGE_SIZE);
    } else if (isHome(e) || isEnd(e)) {
      this._onHomeOrEnd(isHome(e));
    } else if (isHomeCtrl(e)) {
      this._setTimestamp(parseInt(this._monthsInterval[0][0].timestamp));
    } else if (isEndCtrl(e)) {
      this._setTimestamp(parseInt(this._monthsInterval[PAGE_SIZE / this.rowSize - 1][this.rowSize - 1].timestamp));
    } else {
      preventDefault = false;
    }
    if (preventDefault) {
      e.preventDefault();
    }
  }
  _onHomeOrEnd(homePressed) {
    this._monthsInterval.forEach((row) => {
      const indexInRow = row.findIndex((item2) => CalendarDate_default.fromTimestamp(parseInt(item2.timestamp) * 1e3).getMonth() === this._calendarDate.getMonth());
      if (indexInRow !== -1) {
        const index = homePressed ? 0 : this.rowSize - 1;
        this._setTimestamp(parseInt(row[index].timestamp));
      }
    });
  }
  /**
   * Sets the timestamp to an absolute value.
   * @param value
   * @private
   */
  _setTimestamp(value) {
    this._safelySetTimestamp(value);
    this.fireDecoratorEvent("navigate", { timestamp: this.timestamp });
  }
  /**
   * In range selection, the currently focused or hovered month is considered the "second day".
   * @private
   */
  _updateSecondTimestamp() {
    if (this.selectionMode === CalendarSelectionMode_default.Range && (this.selectedDates.length === 1 || this.selectedDates.length === 2)) {
      this._secondTimestamp = this.timestamp;
    }
  }
  /**
   * Set the hovered day as the "_secondTimestamp".
   *
   * @param e
   * @private
   */
  _onmouseover(e) {
    const target = e.target;
    const hoveredItem = target.closest(".ui5-mp-item");
    if (hoveredItem && this.selectionMode === CalendarSelectionMode_default.Range && this.selectedDates.length === 1) {
      this._secondTimestamp = this._getTimestampFromDom(hoveredItem);
    }
  }
  /**
   * Modifies timestamp by a given amount of months and,
   * if necessary, loads the prev/next page.
   * @param amount
   * @param preserveDate whether to preserve the day of the month (f.e. 15th of March + 1 month = 15th of April)
   * @private
   */
  _modifyTimestampBy(amount, preserveDate) {
    this._safelyModifyTimestampBy(amount, "month", preserveDate);
    this._updateSecondTimestamp();
    this.fireDecoratorEvent("navigate", { timestamp: this.timestamp });
  }
  _onkeyup(e) {
    if (isSpace(e)) {
      this._selectMonth(e);
    }
  }
  /**
   * Selects a month, when user made selection with mouse or using Space/Enter.
   * @param e
   * @private
   */
  _selectMonth(e) {
    e.preventDefault();
    const target = e.target;
    if (!target.classList.contains("ui5-mp-item")) {
      return;
    }
    const timestamp = this._getTimestampFromDom(target);
    this._safelySetTimestamp(timestamp);
    this._updateSecondTimestamp();
    this._updateSelectedDates(timestamp);
    this.fireDecoratorEvent("change", {
      timestamp: this.timestamp,
      dates: this.selectedDates
    });
  }
  _updateSelectedDates(timestamp) {
    if (this.selectionMode === CalendarSelectionMode_default.Range && this.selectedDates.length === 1) {
      this.selectedDates = [this.selectedDates[0], timestamp];
      return;
    }
    this.selectedDates = [timestamp];
  }
  /**
   * Called by the Calendar component.
   * @protected
   */
  _hasPreviousPage() {
    return this._calendarDate.getYear() !== this._minDate.getYear();
  }
  /**
   * Called by the Calendar component.
   * @protected
   */
  _hasNextPage() {
    return this._calendarDate.getYear() !== this._maxDate.getYear();
  }
  /**
   * Called by Calendar.js.
   *
   * **Note:** when the user presses the "<" button in the calendar header (same as "PageUp")
   * @protected
   */
  _showPreviousPage() {
    this._modifyTimestampBy(-PAGE_SIZE, true);
  }
  /**
   * Called by Calendar.js
   * **Note:** when the user presses the ">" button in the calendar header (same as "PageDown")
   * @protected
   */
  _showNextPage() {
    this._modifyTimestampBy(PAGE_SIZE, true);
  }
  _isOutOfSelectableRange(date, minDate, maxDate) {
    const month = date.getMonth();
    const year = date.getYear();
    const minYear = minDate.getYear();
    const minMonth = minDate.getMonth();
    const maxYear = maxDate.getYear();
    const maxMonth = maxDate.getMonth();
    return year < minYear || year === minYear && month < minMonth || year > maxYear || year === maxYear && month > maxMonth;
  }
};
__decorate17([
  property_default({ type: Array })
], MonthPicker.prototype, "selectedDates", void 0);
__decorate17([
  property_default()
], MonthPicker.prototype, "selectionMode", void 0);
__decorate17([
  property_default({ type: Array })
], MonthPicker.prototype, "_monthsInterval", void 0);
__decorate17([
  property_default({ type: Boolean, noAttribute: true })
], MonthPicker.prototype, "_hidden", void 0);
__decorate17([
  property_default({ type: Number })
], MonthPicker.prototype, "_secondTimestamp", void 0);
__decorate17([
  i18n_default("@ui5/webcomponents")
], MonthPicker, "i18nBundle", void 0);
MonthPicker = MonthPicker_1 = __decorate17([
  customElement_default({
    tag: "ui5-monthpicker",
    template: MonthPickerTemplate,
    styles: MonthPicker_css_default
  }),
  event_strict_default("change", {
    bubbles: true
  }),
  event_strict_default("navigate", {
    bubbles: true
  })
], MonthPicker);
MonthPicker.define();
var MonthPicker_default = MonthPicker;

// node_modules/@ui5/webcomponents/dist/YearPickerTemplate.js
function YearPickerTemplate() {
  return jsx("div", { class: "ui5-yp-root", role: "grid", "aria-roledescription": this.roleDescription, "aria-readonly": "false", "aria-multiselectable": "false", onMouseOver: this._onmouseover, onKeyDown: this._onkeydown, onKeyUp: this._onkeyup, onClick: this._selectYear, children: this._yearsInterval.map((years) => jsx("div", { role: "row", class: "ui5-yp-interval-container", children: years.map((year) => jsxs("div", { "data-sap-timestamp": year.timestamp, tabindex: year._tabIndex, "data-sap-focus-ref": year.focusRef ? "true" : void 0, class: year.classes, part: year.parts, role: "gridcell", "aria-selected": year.ariaSelected, "aria-disabled": year.ariaDisabled, children: [jsx("span", { class: "ui5-dp-yeartext", children: year.year }), year.yearInSecType && jsx("span", { class: "ui5-yp-year-sec-type", children: year.yearInSecType })] })) })) });
}

// node_modules/@ui5/webcomponents/dist/generated/themes/YearPicker.css.js
registerThemePropertiesLoader("@ui5/webcomponents-theming", "sap_horizon", async () => parameters_bundle_css_default);
registerThemePropertiesLoader("@ui5/webcomponents", "sap_horizon", async () => parameters_bundle_css_default2);
var YearPicker_css_default = `:host(:not([hidden])){display:block}:host{width:100%;height:100%}.ui5-yp-root{padding:2rem 0 1rem;display:flex;flex-direction:column;font-family:"72override",var(--sapFontFamily);font-size:var(--sapFontSize);justify-content:center;align-items:center}.ui5-yp-interval-container{display:flex;justify-content:center;align-items:center;width:100%}.ui5-yp-item{display:flex;margin:var(--_ui5-v2-8-0_yearpicker_item_margin);width:calc(25% - .125rem);height:var(--_ui5-v2-8-0_year_picker_item_height);color:var(--sapButton_Lite_TextColor);background-color:var(--sapButton_Lite_Background);align-items:center;justify-content:center;box-sizing:border-box;-webkit-user-select:none;-moz-user-select:none;user-select:none;cursor:default;outline:none;position:relative;border:var(--_ui5-v2-8-0_yearpicker_item_border);border-radius:var(--_ui5-v2-8-0_yearpicker_item_border_radius)}.ui5-yp-item-secondary-type{flex-direction:column;width:calc(50% - .125rem)}.ui5-yp-item-sec-type{font-size:.75rem;color:var(--sapNeutralElementColor)}.ui5-yp-item.ui5-yp-item--selected,.ui5-yp-item.ui5-yp-item--selected-between{background:var(--sapButton_Selected_Background);border:var(--_ui5-v2-8-0_yearpicker_item_selected_border);color:var(--sapButton_Selected_TextColor)}.ui5-yp-item.ui5-yp-item--selected .ui5-yp-item-sec-type,.ui5-yp-item.ui5-yp-item--selected-between .ui5-yp-item-sec-type{color:var(--sapButton_Selected_TextColor)}.ui5-yp-item:hover{background:var(--sapButton_Lite_Hover_Background);border:var(--_ui5-v2-8-0_yearpicker_item_hover_border);color:var(--sapButton_Lite_Hover_TextColor)}.ui5-yp-item.ui5-yp-item--selected:hover,.ui5-yp-item.ui5-yp-item--selected-between:hover{background:var(--sapButton_Selected_Hover_Background);border:var(--_ui5-v2-8-0_yearpicker_item_selected_hover_border);color:var(--sapButton_Selected_TextColor)}.ui5-yp-item.ui5-yp-item--selected:hover .ui5-yp-item-sec-type,.ui5-yp-item.ui5-yp-item--selected-between:hover .ui5-yp-item-sec-type{color:var(--sapButton_Selected_TextColor)}.ui5-yp-item:active,.ui5-yp-item.ui5-yp-item--selected:active,.ui5-yp-item.ui5-yp-item--selected-between:active{background:var(--sapButton_Active_Background);border:var(--_ui5-v2-8-0_monthpicker_item_active_border);color:var(--sapButton_Active_TextColor)}.ui5-yp-item:active .ui5-yp-item-sec-type,.ui5-yp-item.ui5-yp-item--selected:active .ui5-yp-item-sec-type,.ui5-yp-item.ui5-yp-item--selected-between:active .ui5-yp-item-sec-type{color:var(--sapButton_Active_TextColor)}.ui5-yp-item.ui5-yp-item--disabled{pointer-events:none;opacity:.5}.ui5-yp-item:focus:after{content:"";position:absolute;inset:.0625rem;border:var(--_ui5-v2-8-0_button_focused_border);border-radius:var(--_ui5-v2-8-0_button_focused_border_radius)}
`;

// node_modules/@ui5/webcomponents/dist/YearPicker.js
var __decorate18 = function(decorators, target, key, desc) {
  var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
  if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
  else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
  return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var YearPicker_1;
var isBetween3 = (x, num1, num2) => x > Math.min(num1, num2) && x < Math.max(num1, num2);
var YearPicker = YearPicker_1 = class YearPicker2 extends CalendarPart_default {
  constructor() {
    super(...arguments);
    this.selectedDates = [];
    this.selectionMode = "Single";
    this._yearsInterval = [];
    this._hidden = false;
  }
  get roleDescription() {
    return YearPicker_1.i18nBundle.getText(YEAR_PICKER_DESCRIPTION);
  }
  onBeforeRendering() {
    this._buildYears();
  }
  _getPageSize() {
    return this.hasSecondaryCalendarType ? 8 : 20;
  }
  _getRowSize() {
    return this.hasSecondaryCalendarType ? 2 : 4;
  }
  _buildYears() {
    if (this._hidden) {
      return;
    }
    const pageSize = this._getPageSize();
    const locale = getLocale_default();
    const oYearFormat = DateFormat_default2.getDateInstance({ format: "y", calendarType: this._primaryCalendarType }, locale);
    const oYearFormatInSecType = DateFormat_default2.getDateInstance({ format: "y", calendarType: this.secondaryCalendarType }, locale);
    this._calculateFirstYear();
    this._lastYear = this._firstYear + pageSize - 1;
    const calendarDate = this._calendarDate;
    const minDate = this._minDate;
    const maxDate = this._maxDate;
    const tempDate = new CalendarDate_default(calendarDate, this._primaryCalendarType);
    let tempDateInSecType;
    let textInSecType;
    tempDate.setYear(this._firstYear);
    const intervals = [];
    let timestamp;
    for (let i = 0; i < pageSize; i++) {
      timestamp = tempDate.valueOf() / 1e3;
      const isSelected = this.selectedDates.some((itemTimestamp) => {
        const date = CalendarDate_default.fromTimestamp(itemTimestamp * 1e3, this._primaryCalendarType);
        return date.getYear() === tempDate.getYear();
      });
      const isFocused = tempDate.getYear() === calendarDate.getYear();
      const isDisabled = tempDate.getYear() < minDate.getYear() || tempDate.getYear() > maxDate.getYear();
      const isSelectedBetween = this._isYearInsideSelectionRange(timestamp);
      if (this.hasSecondaryCalendarType) {
        tempDateInSecType = transformDateToSecondaryType_default(this._primaryCalendarType, this.secondaryCalendarType, timestamp, true);
        textInSecType = tempDateInSecType.firstDate.getYear() === tempDateInSecType.lastDate.getYear() ? `${oYearFormatInSecType.format(tempDateInSecType.firstDate.toLocalJSDate())}` : `${oYearFormatInSecType.format(tempDateInSecType.firstDate.toLocalJSDate())} - ${oYearFormatInSecType.format(tempDateInSecType.lastDate.toLocalJSDate())}`;
      }
      const year = {
        timestamp: timestamp.toString(),
        _tabIndex: isFocused ? 0 : -1,
        focusRef: isFocused,
        selected: isSelected || isSelectedBetween,
        ariaSelected: isSelected || isSelectedBetween,
        year: oYearFormat.format(tempDate.toLocalJSDate()),
        yearInSecType: textInSecType,
        disabled: isDisabled,
        ariaDisabled: isDisabled,
        classes: "ui5-yp-item",
        parts: "year-cell"
      };
      if (isSelected) {
        year.classes += " ui5-yp-item--selected";
        year.parts += " year-cell-selected";
      }
      if (isSelectedBetween) {
        year.classes += " ui5-yp-item--selected-between";
        year.parts += " year-cell-selected-between";
      }
      if (isDisabled) {
        year.classes += " ui5-yp-item--disabled";
      }
      if (this.hasSecondaryCalendarType) {
        year.classes += " ui5-yp-item-secondary-type";
      }
      const intervalIndex = Math.floor(i / this._getRowSize());
      if (intervals[intervalIndex]) {
        intervals[intervalIndex].push(year);
      } else {
        intervals[intervalIndex] = [year];
      }
      tempDate.setYear(tempDate.getYear() + 1);
    }
    this._yearsInterval = intervals;
  }
  _calculateFirstYear() {
    const pageSize = this._getPageSize();
    const absoluteMaxYear = getMaxCalendarDate(this._primaryCalendarType).getYear();
    const currentYear = this._calendarDate.getYear();
    if (!this._firstYear) {
      this._firstYear = currentYear - pageSize / 2;
    }
    if (currentYear < this._firstYear) {
      this._firstYear -= pageSize;
    } else if (currentYear >= this._firstYear + pageSize) {
      this._firstYear += pageSize;
    }
    if (Math.abs(this._firstYear - currentYear) >= pageSize) {
      this._firstYear = currentYear - pageSize / 2;
    }
    this._firstYear = Math.max(this._firstYear, this._minDate.getYear());
    this._firstYear = Math.min(this._firstYear, this._maxDate.getYear());
    if (this._firstYear > absoluteMaxYear - pageSize + 1) {
      this._firstYear = absoluteMaxYear - pageSize + 1;
    }
  }
  onAfterRendering() {
    if (!this._hidden) {
      this.focus();
    }
  }
  /**
    * Returns true if year timestamp is inside the selection range.
    * @private
    */
  _isYearInsideSelectionRange(timestamp) {
    if (this.selectionMode !== CalendarSelectionMode_default.Range || !this.selectedDates.length) {
      return false;
    }
    if (this.selectedDates.length === 1 && this._secondTimestamp) {
      return isBetween3(timestamp, this.selectedDates[0], this._secondTimestamp);
    }
    return isBetween3(timestamp, this.selectedDates[0], this.selectedDates[1]);
  }
  _onkeydown(e) {
    let preventDefault = true;
    const pageSize = this._getPageSize();
    const rowSize = this._getRowSize();
    if (isEnter(e)) {
      this._selectYear(e);
    } else if (isSpace(e)) {
      e.preventDefault();
    } else if (isLeft(e)) {
      this._modifyTimestampBy(-1);
    } else if (isRight(e)) {
      this._modifyTimestampBy(1);
    } else if (isUp(e)) {
      this._modifyTimestampBy(-rowSize);
    } else if (isDown(e)) {
      this._modifyTimestampBy(rowSize);
    } else if (isPageUp(e)) {
      this._modifyTimestampBy(-pageSize);
    } else if (isPageDown(e)) {
      this._modifyTimestampBy(pageSize);
    } else if (isHome(e) || isEnd(e)) {
      this._onHomeOrEnd(isHome(e));
    } else if (isHomeCtrl(e)) {
      this._setTimestamp(parseInt(this._yearsInterval[0][0].timestamp));
    } else if (isEndCtrl(e)) {
      this._setTimestamp(parseInt(this._yearsInterval[pageSize / rowSize - 1][rowSize - 1].timestamp));
    } else {
      preventDefault = false;
    }
    if (preventDefault) {
      e.preventDefault();
    }
  }
  _onHomeOrEnd(homePressed) {
    this._yearsInterval.forEach((row) => {
      const indexInRow = row.findIndex((item2) => CalendarDate_default.fromTimestamp(parseInt(item2.timestamp) * 1e3).getYear() === this._calendarDate.getYear());
      if (indexInRow !== -1) {
        const index = homePressed ? 0 : this._getRowSize() - 1;
        this._setTimestamp(parseInt(row[index].timestamp));
      }
    });
  }
  /**
   * In range selection, the currently focused or hovered year is considered the "second day".
   * @private
   */
  _updateSecondTimestamp() {
    if (this.selectionMode === CalendarSelectionMode_default.Range && (this.selectedDates.length === 1 || this.selectedDates.length === 2)) {
      this._secondTimestamp = this.timestamp;
    }
  }
  /**
   * Set the hovered day as the "_secondTimestamp".
   *
   * @param e
   * @private
   */
  _onmouseover(e) {
    const target = e.target;
    const hoveredItem = target.closest(".ui5-yp-item");
    if (hoveredItem && this.selectionMode === CalendarSelectionMode_default.Range && this.selectedDates.length === 1) {
      this._secondTimestamp = this._getTimestampFromDom(hoveredItem);
    }
  }
  /**
   * Sets the timestamp to an absolute value.
   * @param value
   * @private
   */
  _setTimestamp(value) {
    this._safelySetTimestamp(value);
    this.fireDecoratorEvent("navigate", { timestamp: this.timestamp });
  }
  /**
   * Modifies timestamp by a given amount of years and, if necessary, loads the prev/next page.
   * @param amount
   * @private
   */
  _modifyTimestampBy(amount) {
    this._safelyModifyTimestampBy(amount, "year");
    this._updateSecondTimestamp();
    this.fireDecoratorEvent("navigate", { timestamp: this.timestamp });
  }
  _onkeyup(e) {
    if (isSpace(e)) {
      this._selectYear(e);
    }
  }
  /**
   * User clicked with the mouser or pressed Enter/Space
   * @param e
   * @private
   */
  _selectYear(e) {
    e.preventDefault();
    const target = e.target;
    if (target.className.indexOf("ui5-yp-item") === -1) {
      return;
    }
    const timestamp = this._getTimestampFromDom(target);
    this._safelySetTimestamp(timestamp);
    this._updateSecondTimestamp();
    this._updateSelectedDates(timestamp);
    this.fireDecoratorEvent("change", {
      timestamp: this.timestamp,
      dates: this.selectedDates
    });
  }
  _updateSelectedDates(timestamp) {
    if (this.selectionMode === CalendarSelectionMode_default.Range && this.selectedDates.length === 1) {
      this.selectedDates = [this.selectedDates[0], timestamp];
      return;
    }
    this.selectedDates = [timestamp];
  }
  /**
   * Called by the Calendar component.
   * @protected
   */
  _hasPreviousPage() {
    return this._firstYear > this._minDate.getYear();
  }
  /**
   * Called by the Calendar component.
   * @protected
   */
  _hasNextPage() {
    return this._firstYear + this._getPageSize() - 1 < this._maxDate.getYear();
  }
  /**
   * Called by the Calendar component.
   * **Note:** when the user presses the "<" button in the calendar header (same as "PageUp")
   * @protected
   */
  _showPreviousPage() {
    const pageSize = this._getPageSize();
    this._modifyTimestampBy(-pageSize);
  }
  /**
   * Called by the Calendar component.
   * **Note:** when the user presses the ">" button in the calendar header (same as "PageDown")
   * @protected
   */
  _showNextPage() {
    this._modifyTimestampBy(this._getPageSize());
  }
};
__decorate18([
  property_default({ type: Array })
], YearPicker.prototype, "selectedDates", void 0);
__decorate18([
  property_default()
], YearPicker.prototype, "selectionMode", void 0);
__decorate18([
  property_default({ type: Array })
], YearPicker.prototype, "_yearsInterval", void 0);
__decorate18([
  property_default({ type: Boolean, noAttribute: true })
], YearPicker.prototype, "_hidden", void 0);
__decorate18([
  property_default({ type: Number })
], YearPicker.prototype, "_secondTimestamp", void 0);
__decorate18([
  i18n_default("@ui5/webcomponents")
], YearPicker, "i18nBundle", void 0);
YearPicker = YearPicker_1 = __decorate18([
  customElement_default({
    tag: "ui5-yearpicker",
    styles: YearPicker_css_default,
    template: YearPickerTemplate
  }),
  event_strict_default("change", {
    bubbles: true
  }),
  event_strict_default("navigate", {
    bubbles: true
  })
], YearPicker);
YearPicker.define();
var YearPicker_default = YearPicker;

// node_modules/@ui5/webcomponents/dist/CalendarHeaderTemplate.js
function CalendarTemplate() {
  return jsxs("div", { class: "ui5-calheader-root", children: [jsx("div", { "data-ui5-cal-header-btn-prev": true, class: {
    "ui5-calheader-arrowbtn": true,
    "ui5-calheader-arrowbtn-disabled": this._previousButtonDisabled
  }, role: "button", onMouseDown: this.onPrevButtonClick, title: this.headerPreviousButtonText, children: jsx(Icon_default, { class: "ui5-calheader-arrowicon", name: slim_arrow_left_default }) }), jsxs("div", { class: "ui5-calheader-midcontainer", children: [jsxs("div", { "data-ui5-cal-header-btn-month": true, class: "ui5-calheader-arrowbtn ui5-calheader-middlebtn", hidden: this._isHeaderMonthButtonHidden, tabindex: 0, role: "button", "aria-label": this.accInfo.ariaLabelMonthButton, onClick: this.onHeaderShowMonthPress, onKeyDown: this.onMonthButtonKeyDown, onKeyUp: this.onMonthButtonKeyUp, children: [jsx("span", { children: this._headerMonthButtonText }), this.hasSecondaryCalendarType && jsx("span", { class: "ui5-calheader-btn-sectext", children: this.secondMonthButtonText })] }), jsxs("div", { "data-ui5-cal-header-btn-year": true, class: "ui5-calheader-arrowbtn ui5-calheader-middlebtn", hidden: this._isHeaderYearButtonHidden, tabindex: 0, role: "button", onClick: this.onHeaderShowYearPress, onKeyDown: this.onYearButtonKeyDown, onKeyUp: this.onYearButtonKeyUp, children: [jsx("span", { children: this._headerYearButtonText }), this.hasSecondaryCalendarType && jsx("span", { class: "ui5-calheader-btn-sectext", children: this._headerYearButtonTextSecType })] })] }), jsx("div", { "data-ui5-cal-header-btn-next": true, class: {
    "ui5-calheader-arrowbtn": true,
    "ui5-calheader-arrowbtn-disabled": this._nextButtonDisabled
  }, role: "button", onMouseDown: this.onNextButtonClick, title: this.headerNextButtonText, children: jsx(Icon_default, { class: "ui5-calheader-arrowicon", name: slim_arrow_right_default }) })] });
}

// node_modules/@ui5/webcomponents/dist/CalendarTemplate.js
function CalendarTemplate2() {
  return jsxs(Fragment, { children: [jsxs("div", { class: "ui5-cal-root", onKeyDown: this._onkeydown, children: [jsxs("div", { id: `${this._id}-content`, class: "ui5-cal-content", children: [jsx(DayPicker_default, { id: `${this._id}-daypicker`, hidden: this._isDayPickerHidden, formatPattern: this._formatPattern, selectedDates: this._selectedDatesTimestamps, specialCalendarDates: this._specialCalendarDates, _hidden: this._isDayPickerHidden, primaryCalendarType: this._primaryCalendarType, secondaryCalendarType: this._secondaryCalendarType, selectionMode: this.selectionMode, minDate: this.minDate, maxDate: this.maxDate, calendarWeekNumbering: this.calendarWeekNumbering, timestamp: this._timestamp, hideWeekNumbers: this.hideWeekNumbers, onChange: this.onSelectedDatesChange, onNavigate: this.onNavigate, exportparts: "day-cell, day-cell-selected, day-cell-selected-between" }), jsx(MonthPicker_default, { id: `${this._id}-MP`, hidden: this._isMonthPickerHidden, formatPattern: this._formatPattern, selectedDates: this._selectedDatesTimestamps, _hidden: this._isMonthPickerHidden, primaryCalendarType: this._primaryCalendarType, secondaryCalendarType: this._secondaryCalendarType, selectionMode: this.selectionMode, minDate: this.minDate, maxDate: this.maxDate, timestamp: this._timestamp, onChange: this.onSelectedMonthChange, onNavigate: this.onNavigate, exportparts: "month-cell, month-cell-selected, month-cell-selected-between" }), jsx(YearPicker_default, { id: `${this._id}-YP`, hidden: this._isYearPickerHidden, formatPattern: this._formatPattern, selectedDates: this._selectedDatesTimestamps, _hidden: this._isYearPickerHidden, primaryCalendarType: this._primaryCalendarType, secondaryCalendarType: this._secondaryCalendarType, selectionMode: this.selectionMode, minDate: this.minDate, maxDate: this.maxDate, timestamp: this._timestamp, onChange: this.onSelectedYearChange, onNavigate: this.onNavigate, exportparts: "year-cell, year-cell-selected, year-cell-selected-between" })] }), jsx("div", { class: "ui5-calheader", children: CalendarTemplate.call(this) })] }), jsx("div", { "onui5-calendar-legend-selection-change": this._onCalendarLegendSelectionChange, "onui5-calendar-legend-focus-out": this._onLegendFocusOut, children: jsx("slot", { name: "calendarLegend" }) })] });
}

// node_modules/@ui5/webcomponents/dist/generated/themes/Calendar.css.js
registerThemePropertiesLoader("@ui5/webcomponents-theming", "sap_horizon", async () => parameters_bundle_css_default);
registerThemePropertiesLoader("@ui5/webcomponents", "sap_horizon", async () => parameters_bundle_css_default2);
var Calendar_css_default = `:host(:not([hidden])){display:inline-block}.ui5-cal-root .ui5-calheader{display:block;height:var(--_ui5-v2-8-0_calendar_header_height);font-family:var(--_ui5-v2-8-0_button_fontFamily)}.ui5-cal-root{background:var(--sapList_Background);box-sizing:border-box;height:var(--_ui5-v2-8-0_calendar_height);width:var(--_ui5-v2-8-0_calendar_width);padding:var(--_ui5-v2-8-0_calendar_top_bottom_padding) var(--_ui5-v2-8-0_calendar_left_right_padding) 0;display:flex;flex-direction:column-reverse;justify-content:flex-end;overflow:hidden}.ui5-cal-root .ui5-cal-content{padding:0 var(--_ui5-v2-8-0_calendar_left_right_padding) var(--_ui5-v2-8-0_calendar_top_bottom_padding)}
`;

// node_modules/@ui5/webcomponents/dist/generated/themes/CalendarHeader.css.js
registerThemePropertiesLoader("@ui5/webcomponents-theming", "sap_horizon", async () => parameters_bundle_css_default);
registerThemePropertiesLoader("@ui5/webcomponents", "sap_horizon", async () => parameters_bundle_css_default2);
var CalendarHeader_css_default = `:host{display:block;width:100%;height:100%}.ui5-calheader-root{display:flex;height:100%;padding:var(--_ui5-v2-8-0_calendar_header_padding);box-sizing:border-box}.ui5-calheader-arrowbtn{display:flex;justify-content:center;align-items:center;width:var(--_ui5-v2-8-0_calendar_header_arrow_button_width);background-color:var(--sapButton_Lite_Background);color:var(--sapButton_Lite_TextColor);cursor:pointer;overflow:hidden;white-space:nowrap;padding:0;font-size:var(--sapFontSize);user-select:none}.ui5-calheader-arrowbtn.ui5-calheader-arrowbtn-disabled:hover,.ui5-calheader-arrowbtn.ui5-calheader-arrowbtn-disabled:active,.ui5-calheader-arrowbtn.ui5-calheader-arrowbtn-disabled:focus,.ui5-calheader-arrowbtn.ui5-calheader-arrowbtn-disabled{opacity:.4;cursor:default;outline:none;background-color:var(--sapButton_Lite_Background);color:var(--sapButton_Lite_TextColor)}[hidden].ui5-calheader-arrowbtn.ui5-calheader-middlebtn{display:none}.ui5-calheader-arrowbtn:focus{outline:none}.ui5-calheader-arrowbtn:hover{background-color:var(--sapButton_Hover_Background);color:var(--sapButton_Lite_TextColor);box-shadow:var(--_ui5-v2-8-0_calendar_header_arrow_button_box_shadow)}.ui5-calheader-arrowbtn:active{background-color:var(--sapButton_Active_Background);color:var(--sapButton_Active_TextColor)}.ui5-calheader-arrowbtn,.ui5-calheader-middlebtn{border:var(--_ui5-v2-8-0_calendar_header_arrow_button_border);border-radius:var(--_ui5-v2-8-0_calendar_header_arrow_button_border_radius);display:flex;background-color:var(--sapButton_Lite_Background);border-color:var(--sapButton_Lite_BorderColor)}.ui5-calheader-middlebtn{flex-direction:column;align-items:center;justify-content:center}.ui5-calheader-arrowbtn:not(:active) .ui5-calheader-btn-sectext{color:var(--sapNeutralElementColor);font-size:var(--sapFontSmallSize)}.ui5-calheader-arrowicon{color:currentColor;pointer-events:none}.ui5-calheader-midcontainer{display:flex;justify-content:space-around;flex:1 1 auto;padding:0 .5rem}.ui5-calheader-midcontainer .ui5-calheader-middlebtn:first-child{margin-inline-end:.5rem}.ui5-calheader-middlebtn{font-family:var(--_ui5-v2-8-0_button_fontFamily);width:var(--_ui5-v2-8-0_calendar_header_middle_button_width);flex:var(--_ui5-v2-8-0_calendar_header_middle_button_flex);position:relative;box-sizing:border-box;-webkit-user-select:none;-moz-user-select:none;user-select:none}.ui5-calheader-middlebtn:focus{border:var(--_ui5-v2-8-0_calendar_header_middle_button_focus_border);border-radius:var(--_ui5-v2-8-0_calendar_header_middle_button_focus_border_radius);outline:var(--_ui5-v2-8-0_calendar_header_middle_button_focus_outline);outline-offset:-.125rem;background:var(--_ui5-v2-8-0_calendar_header_middle_button_focus_background)}.ui5-calheader-middlebtn:focus:active{outline:var(--_ui5-v2-8-0_calendar_header_middle_button_focus_active_outline);outline-offset:-.0625rem;background:var(--_ui5-v2-8-0_calendar_header_middle_button_focus_active_background)}.ui5-calheader-middlebtn:focus:after{content:"";display:var(--_ui5-v2-8-0_calendar_header_middle_button_focus_after_display);width:var(--_ui5-v2-8-0_calendar_header_middle_button_focus_after_width);height:var(--_ui5-v2-8-0_calendar_header_middle_button_focus_after_height);border:var(--_ui5-v2-8-0_calendar_header_middle_button_focus_after_border);position:absolute;top:var(--_ui5-v2-8-0_calendar_header_middle_button_focus_after_top_offset);left:var(--_ui5-v2-8-0_calendar_header_middle_button_focus_after_left_offset)}.ui5-calheader-middlebtn:focus:active:after{border-color:var(--sapContent_ContrastFocusColor)}
`;

// node_modules/@ui5/webcomponents/dist/Calendar.js
var __decorate19 = function(decorators, target, key, desc) {
  var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
  if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
  else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
  return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var Calendar_1;
var Calendar = Calendar_1 = class Calendar2 extends CalendarPart_default {
  constructor() {
    super();
    this.selectionMode = "Single";
    this.hideWeekNumbers = false;
    this._currentPicker = "day";
    this._previousButtonDisabled = false;
    this._nextButtonDisabled = false;
    this._pickersMode = "DAY_MONTH_YEAR";
    this._valueIsProcessed = false;
    this._selectedItemType = "None";
    this._valueIsProcessed = false;
  }
  /**
   * @private
   */
  get _selectedDatesTimestamps() {
    let selectedDates = [];
    if (this.selectionMode === CalendarSelectionMode_default.Range) {
      const range = this.dates.find((date) => date.hasAttribute("ui5-date-range"));
      const startDate = range && range.startValue && this.getFormat().parse(range.startValue, true);
      const endDate = range && range.endValue && this.getFormat().parse(range.endValue, true);
      if (startDate) {
        selectedDates.push(startDate.getTime() / 1e3);
      }
      if (endDate) {
        selectedDates.push(endDate.getTime() / 1e3);
      }
    } else {
      selectedDates = this.dates.filter((dateElement) => {
        return dateElement.hasAttribute("ui5-date") && dateElement.value && this._isValidCalendarDate(dateElement.value) && this._getTimeStampFromString(dateElement.value);
      }).map((dateElement) => Number(this._getTimeStampFromString(dateElement.value)) / 1e3);
    }
    return selectedDates;
  }
  /**
   * @private
   */
  _setSelectedDates(selectedDates) {
    const selectedUTCDates = selectedDates.map((timestamp) => this.getFormat().format(UI5Date_default2.getInstance(timestamp * 1e3), true));
    if (this.selectionMode === CalendarSelectionMode_default.Range) {
      if (selectedUTCDates.length) {
        let dateRange = this.dates.find((dateElement) => dateElement.hasAttribute("ui5-date-range") && dateElement.startValue === selectedUTCDates[0]);
        if (!dateRange) {
          dateRange = document.createElement(CalendarDateRange_default.getMetadata().getTag());
          dateRange.startValue = selectedUTCDates[0];
          this.appendChild(dateRange);
        } else {
          dateRange.endValue = selectedUTCDates[1];
        }
        this.dates.filter((dateElement) => {
          return dateElement.hasAttribute("ui5-date") || dateRange && dateElement.startValue !== dateRange.startValue;
        }).forEach((dateElement) => {
          this.removeChild(dateElement);
        });
      }
    } else {
      const valuesInDOM = this._selectedDatesTimestamps.map((timestamp) => this.getFormat().format(UI5Date_default2.getInstance(timestamp * 1e3)));
      this.dates.filter((dateElement) => {
        return dateElement.hasAttribute("ui5-date-range") || dateElement.hasAttribute("ui5-date") && !selectedUTCDates.includes(dateElement.value);
      }).forEach((dateElement) => {
        this.removeChild(dateElement);
      });
      selectedUTCDates.filter((value) => !valuesInDOM.includes(value)).forEach((value) => {
        const dateElement = document.createElement(CalendarDate_default2.getMetadata().getTag());
        dateElement.value = value;
        this.appendChild(dateElement);
      });
    }
  }
  _isValidCalendarDate(dateString) {
    const date = this.getFormat().parse(dateString);
    return !!date;
  }
  get _specialCalendarDates() {
    const hasSelectedType = this._specialDates.some((date) => date.type === this._selectedItemType);
    const validSpecialDates = this._specialDates.filter((date) => {
      const dateType = date.type;
      const dateValue = date.value;
      const isTypeMatch = hasSelectedType ? dateType === this._selectedItemType || dateType === "Working" || dateType === "NonWorking" : true;
      return isTypeMatch && dateValue && this._isValidCalendarDate(dateValue);
    });
    validSpecialDates.forEach((date) => {
      const refLegendItem = this.calendarLegend.length ? this.calendarLegend[0].items.find((item2) => item2.type === date.type) : void 0;
      date._tooltip = (refLegendItem == null ? void 0 : refLegendItem.text) || "";
    });
    const uniqueDates = /* @__PURE__ */ new Set();
    const uniqueSpecialDates = [];
    validSpecialDates.forEach((date) => {
      const dateFromValue = this.getFormat().parse(date.value);
      const timestamp = dateFromValue.getTime();
      if (!uniqueDates.has(timestamp)) {
        uniqueDates.add(timestamp);
        const specialDateTimestamp = CalendarDate_default.fromLocalJSDate(dateFromValue).valueOf() / 1e3;
        const type = date.type;
        const tooltip = date._tooltip;
        uniqueSpecialDates.push({ specialDateTimestamp, type, tooltip });
      }
    });
    return uniqueSpecialDates;
  }
  _onCalendarLegendSelectionChange(e) {
    const defaultTypes = ["Working", "NonWorking", "Selected", "Today"];
    this._selectedItemType = e.detail.item.type;
    if (defaultTypes.includes(this._selectedItemType)) {
      this._selectedItemType = "None";
    }
    this._currentPickerDOM._autoFocus = false;
  }
  /**
   * Makes sure that _currentPicker is always set to a value, allowed by _pickersMode
   */
  _normalizeCurrentPicker() {
    if (this._currentPicker === "day" && this._pickersMode !== CalendarPickersMode_default.DAY_MONTH_YEAR) {
      this._currentPicker = "month";
    }
    if (this._currentPicker === "month" && this._pickersMode === CalendarPickersMode_default.YEAR) {
      this._currentPicker = "year";
    }
  }
  onBeforeRendering() {
    this._normalizeCurrentPicker();
    if (!this._valueIsProcessed) {
      if (this._selectedDatesTimestamps) {
        this.timestamp = this._selectedDatesTimestamps[0];
      }
      this._valueIsProcessed = true;
    }
  }
  async onAfterRendering() {
    await renderFinished();
    this._previousButtonDisabled = !this._currentPickerDOM._hasPreviousPage();
    this._nextButtonDisabled = !this._currentPickerDOM._hasNextPage();
    const yearFormat = DateFormat_default2.getDateInstance({ format: "y", calendarType: this.primaryCalendarType });
    const localeData = getCachedLocaleDataInstance_default(getLocale_default());
    this._headerMonthButtonText = localeData.getMonthsStandAlone("wide", this.primaryCalendarType)[this._calendarDate.getMonth()];
    if (this._currentPicker === "year") {
      const rangeStart = new CalendarDate_default(this._calendarDate, this._primaryCalendarType);
      const rangeEnd = new CalendarDate_default(this._calendarDate, this._primaryCalendarType);
      rangeStart.setYear(this._currentPickerDOM._firstYear);
      rangeEnd.setYear(this._currentPickerDOM._lastYear);
      this._headerYearButtonText = `${yearFormat.format(rangeStart.toLocalJSDate(), true)} - ${yearFormat.format(rangeEnd.toLocalJSDate(), true)}`;
    } else {
      this._headerYearButtonText = String(yearFormat.format(this._localDate, true));
    }
    this._secondaryCalendarType && this._setSecondaryCalendarTypeButtonText();
  }
  onInvalidation(changeInfo) {
    if (changeInfo.reason === "childchange") {
      this._valueIsProcessed = false;
    }
  }
  /**
   * The user clicked the "month" button in the header
   */
  onHeaderShowMonthPress() {
    this.showMonth();
    this.fireDecoratorEvent("show-month-view");
  }
  showMonth() {
    this._currentPickerDOM._autoFocus = false;
    this._currentPicker = "month";
  }
  /**
   * The user clicked the "year" button in the header
   */
  onHeaderShowYearPress() {
    this.showYear();
    this.fireDecoratorEvent("show-year-view");
  }
  showYear() {
    this._currentPickerDOM._autoFocus = false;
    this._currentPicker = "year";
  }
  get _currentPickerDOM() {
    return this.shadowRoot.querySelector(`[ui5-${this._currentPicker}picker]`);
  }
  /**
   * The year clicked the "Previous" button in the header
   */
  onHeaderPreviousPress() {
    this._currentPickerDOM._showPreviousPage();
    if (this.calendarLegend) {
      this._currentPickerDOM._autoFocus = true;
    }
  }
  /**
   * The year clicked the "Next" button in the header
   */
  onHeaderNextPress() {
    this._currentPickerDOM._showNextPage();
    if (this.calendarLegend) {
      this._currentPickerDOM._autoFocus = true;
    }
  }
  _setSecondaryCalendarTypeButtonText() {
    const yearFormatSecType = DateFormat_default2.getDateInstance({ format: "y", calendarType: this._secondaryCalendarType });
    if (this._currentPicker === "year") {
      const rangeStart = new CalendarDate_default(this._calendarDate, this._primaryCalendarType);
      const rangeEnd = new CalendarDate_default(this._calendarDate, this._primaryCalendarType);
      rangeStart.setYear(this._currentPickerDOM._firstYear);
      rangeEnd.setYear(this._currentPickerDOM._lastYear);
      const rangeStartSecType = transformDateToSecondaryType_default(this.primaryCalendarType, this._secondaryCalendarType, rangeStart.valueOf() / 1e3, true).firstDate;
      const rangeEndSecType = transformDateToSecondaryType_default(this.primaryCalendarType, this._secondaryCalendarType, rangeEnd.valueOf() / 1e3, true).lastDate;
      this._headerYearButtonTextSecType = `${yearFormatSecType.format(rangeStartSecType.toLocalJSDate(), true)} - ${yearFormatSecType.format(rangeEndSecType.toLocalJSDate(), true)}`;
    } else {
      this._headerYearButtonTextSecType = String(yearFormatSecType.format(this._localDate, true));
    }
  }
  get secondaryCalendarTypeButtonText() {
    if (!this.hasSecondaryCalendarType) {
      return;
    }
    const localDate = UI5Date_default2.getInstance(this._timestamp * 1e3);
    const secondYearFormat = DateFormat_default2.getDateInstance({ format: "y", calendarType: this._secondaryCalendarType });
    const dateInSecType = transformDateToSecondaryType_default(this._primaryCalendarType, this._secondaryCalendarType, this._timestamp);
    const secondMonthInfo = convertMonthNumbersToMonthNames_default(dateInSecType.firstDate.getMonth(), dateInSecType.lastDate.getMonth(), this._secondaryCalendarType);
    const secondYearText = secondYearFormat.format(localDate);
    return {
      yearButtonText: secondYearText,
      monthButtonText: secondMonthInfo.text,
      monthButtonInfo: secondMonthInfo.textInfo
    };
  }
  /**
   * The month button is hidden when the month picker or year picker is shown
   * @private
   */
  get _isHeaderMonthButtonHidden() {
    return this._currentPicker === "month" || this._currentPicker === "year";
  }
  /**
   * The year button is hidden when the year picker is shown
   * @private
   */
  get _isHeaderYearButtonHidden() {
    return this._currentPicker === "year";
  }
  get _isDayPickerHidden() {
    return this._currentPicker !== "day";
  }
  get _isMonthPickerHidden() {
    return this._currentPicker !== "month";
  }
  get _isYearPickerHidden() {
    return this._currentPicker !== "year";
  }
  _fireEventAndUpdateSelectedDates(selectedDates) {
    const datesValues = selectedDates.map((timestamp) => {
      const calendarDate = CalendarDate_default.fromTimestamp(timestamp * 1e3, this._primaryCalendarType);
      return this.getFormat().format(calendarDate.toUTCJSDate(), true);
    });
    const defaultPrevented = !this.fireDecoratorEvent("selection-change", { timestamp: this.timestamp, selectedDates: [...selectedDates], selectedValues: datesValues });
    if (!defaultPrevented) {
      this._setSelectedDates(selectedDates);
    }
  }
  onSelectedDatesChange(e) {
    this.timestamp = e.detail.timestamp;
    this._fireEventAndUpdateSelectedDates(e.detail.dates);
  }
  onSelectedMonthChange(e) {
    this.timestamp = e.detail.timestamp;
    if (this._pickersMode === CalendarPickersMode_default.DAY_MONTH_YEAR) {
      this._currentPicker = "day";
    } else {
      this._fireEventAndUpdateSelectedDates(e.detail.dates);
    }
    this._currentPickerDOM._autoFocus = true;
  }
  onSelectedYearChange(e) {
    this.timestamp = e.detail.timestamp;
    if (this._pickersMode === CalendarPickersMode_default.DAY_MONTH_YEAR) {
      this._currentPicker = "day";
    } else if (this._pickersMode === CalendarPickersMode_default.MONTH_YEAR) {
      this._currentPicker = "month";
    } else {
      this._fireEventAndUpdateSelectedDates(e.detail.dates);
    }
    this._currentPickerDOM._autoFocus = true;
  }
  onNavigate(e) {
    this.timestamp = e.detail.timestamp;
  }
  _onkeydown(e) {
    if (isF4(e) && this._currentPicker !== "month") {
      this._currentPicker = "month";
      this.fireDecoratorEvent("show-month-view");
    }
    if (isF4Shift(e) && this._currentPicker !== "year") {
      this._currentPicker = "year";
      this.fireDecoratorEvent("show-year-view");
    }
  }
  _onLegendFocusOut() {
    this._selectedItemType = "None";
  }
  get _specialDates() {
    return this.getSlottedNodes("specialDates");
  }
  get classes() {
    return {
      prevButton: {
        "ui5-calheader-arrowbtn": true,
        "ui5-calheader-arrowbtn-disabled": this._previousButtonDisabled
      },
      nextButton: {
        "ui5-calheader-arrowbtn": true,
        "ui5-calheader-arrowbtn-disabled": this._nextButtonDisabled
      }
    };
  }
  get accInfo() {
    return {
      ariaLabelMonthButton: this.hasSecondaryCalendarType ? `${this._headerMonthButtonText}, ${this.secondMonthButtonText}` : `${this._headerMonthButtonText}`
    };
  }
  get headerPreviousButtonText() {
    var _a;
    return (_a = Calendar_1.i18nBundle) == null ? void 0 : _a.getText(CALENDAR_HEADER_PREVIOUS_BUTTON);
  }
  get headerNextButtonText() {
    var _a;
    return (_a = Calendar_1.i18nBundle) == null ? void 0 : _a.getText(CALENDAR_HEADER_NEXT_BUTTON);
  }
  get secondMonthButtonText() {
    var _a;
    const secondMonthButtonText = (_a = this.secondaryCalendarTypeButtonText) == null ? void 0 : _a.monthButtonText;
    return secondMonthButtonText;
  }
  onMonthButtonKeyDown(e) {
    if (isSpace(e)) {
      e.preventDefault();
    }
    if (isEnter(e)) {
      this.showMonth();
      this.fireDecoratorEvent("show-month-view");
    }
  }
  onMonthButtonKeyUp(e) {
    if (isSpace(e)) {
      e.preventDefault();
      this.showMonth();
      this.fireDecoratorEvent("show-month-view");
    }
  }
  onYearButtonKeyDown(e) {
    if (isSpace(e)) {
      e.preventDefault();
    }
    if (isEnter(e)) {
      this.showYear();
      this.fireDecoratorEvent("show-year-view");
    }
  }
  onYearButtonKeyUp(e) {
    if (isSpace(e)) {
      this.showYear();
      this.fireDecoratorEvent("show-year-view");
    }
  }
  onPrevButtonClick(e) {
    if (this._previousButtonDisabled) {
      e.preventDefault();
      return;
    }
    this.onHeaderPreviousPress();
    e.preventDefault();
  }
  onNextButtonClick(e) {
    if (this._nextButtonDisabled) {
      e.preventDefault();
      return;
    }
    this.onHeaderNextPress();
    e.preventDefault();
  }
  /**
   * Returns an array of UTC timestamps, representing the selected dates.
   * @protected
   * @deprecated
   */
  get selectedDates() {
    return this._selectedDatesTimestamps;
  }
  /**
   * Creates instances of `ui5-date` or `ui5-date-range` inside this `ui5-calendar` with values, equal to the provided UTC timestamps
   * @protected
   * @deprecated
   * @param selectedDates Array of UTC timestamps
   */
  set selectedDates(selectedDates) {
    this._setSelectedDates(selectedDates);
  }
};
__decorate19([
  property_default()
], Calendar.prototype, "selectionMode", void 0);
__decorate19([
  property_default({ type: Boolean })
], Calendar.prototype, "hideWeekNumbers", void 0);
__decorate19([
  property_default()
], Calendar.prototype, "_currentPicker", void 0);
__decorate19([
  property_default({ type: Boolean })
], Calendar.prototype, "_previousButtonDisabled", void 0);
__decorate19([
  property_default({ type: Boolean })
], Calendar.prototype, "_nextButtonDisabled", void 0);
__decorate19([
  property_default()
], Calendar.prototype, "_headerMonthButtonText", void 0);
__decorate19([
  property_default()
], Calendar.prototype, "_headerYearButtonText", void 0);
__decorate19([
  property_default()
], Calendar.prototype, "_headerYearButtonTextSecType", void 0);
__decorate19([
  property_default({ noAttribute: true })
], Calendar.prototype, "_pickersMode", void 0);
__decorate19([
  slot_default({ type: HTMLElement, invalidateOnChildChange: true })
], Calendar.prototype, "calendarLegend", void 0);
__decorate19([
  slot_default({ type: HTMLElement, invalidateOnChildChange: true, "default": true })
], Calendar.prototype, "dates", void 0);
__decorate19([
  slot_default({ type: HTMLElement, invalidateOnChildChange: true })
], Calendar.prototype, "specialDates", void 0);
__decorate19([
  property_default()
], Calendar.prototype, "_selectedItemType", void 0);
__decorate19([
  i18n_default("@ui5/webcomponents")
], Calendar, "i18nBundle", void 0);
Calendar = Calendar_1 = __decorate19([
  customElement_default({
    tag: "ui5-calendar",
    fastNavigation: true,
    template: CalendarTemplate2,
    styles: [Calendar_css_default, CalendarHeader_css_default]
  }),
  event_strict_default("selection-change", {
    bubbles: true,
    cancelable: true
  }),
  event_strict_default("show-month-view", {
    bubbles: true
  }),
  event_strict_default("show-year-view", {
    bubbles: true
  })
], Calendar);
Calendar.define();
var Calendar_default = Calendar;

// node_modules/@ui5/webcomponents-react/dist/webComponents/Calendar/index.js
var Calendar3 = withWebComponent("ui5-calendar", ["calendarWeekNumbering", "formatPattern", "maxDate", "minDate", "primaryCalendarType", "secondaryCalendarType", "selectionMode"], ["hideWeekNumbers"], ["calendarLegend", "specialDates"], ["selection-change"]);
Calendar3.displayName = "Calendar";

// node_modules/@ui5/webcomponents-react/dist/webComponents/CalendarDate/index.js
var CalendarDate4 = withWebComponent("ui5-date", ["value"], [], [], []);
CalendarDate4.displayName = "CalendarDate";

// node_modules/@ui5/webcomponents-react/dist/webComponents/CalendarDateRange/index.js
var CalendarDateRange3 = withWebComponent("ui5-date-range", ["endValue", "startValue"], [], [], []);
CalendarDateRange3.displayName = "CalendarDateRange";

// node_modules/@ui5/webcomponents/dist/types/CalendarLegendItemType.js
var CalendarLegendItemType;
(function(CalendarLegendItemType2) {
  CalendarLegendItemType2["Today"] = "Today";
  CalendarLegendItemType2["Selected"] = "Selected";
  CalendarLegendItemType2["None"] = "None";
  CalendarLegendItemType2["Working"] = "Working";
  CalendarLegendItemType2["NonWorking"] = "NonWorking";
  CalendarLegendItemType2["Type01"] = "Type01";
  CalendarLegendItemType2["Type02"] = "Type02";
  CalendarLegendItemType2["Type03"] = "Type03";
  CalendarLegendItemType2["Type04"] = "Type04";
  CalendarLegendItemType2["Type05"] = "Type05";
  CalendarLegendItemType2["Type06"] = "Type06";
  CalendarLegendItemType2["Type07"] = "Type07";
  CalendarLegendItemType2["Type08"] = "Type08";
  CalendarLegendItemType2["Type09"] = "Type09";
  CalendarLegendItemType2["Type10"] = "Type10";
  CalendarLegendItemType2["Type11"] = "Type11";
  CalendarLegendItemType2["Type12"] = "Type12";
  CalendarLegendItemType2["Type13"] = "Type13";
  CalendarLegendItemType2["Type14"] = "Type14";
  CalendarLegendItemType2["Type15"] = "Type15";
  CalendarLegendItemType2["Type16"] = "Type16";
  CalendarLegendItemType2["Type17"] = "Type17";
  CalendarLegendItemType2["Type18"] = "Type18";
  CalendarLegendItemType2["Type19"] = "Type19";
  CalendarLegendItemType2["Type20"] = "Type20";
})(CalendarLegendItemType || (CalendarLegendItemType = {}));
var CalendarLegendItemType_default = CalendarLegendItemType;

// node_modules/@ui5/webcomponents/dist/CalendarLegendItemTemplate.js
function CalendarLegendItemTemplate() {
  return jsxs("div", {
    class: "ui5-calendar-legend-item-root",
    // TOFIX: update after changing ITabbable
    tabindex: parseInt(this.forcedTabIndex),
    role: "listitem",
    children: [jsx("div", { class: "ui5-calendar-legend-item-box" }), jsx("div", { class: "ui5-calendar-legend-item-text", children: this.effectiveText })]
  });
}

// node_modules/@ui5/webcomponents/dist/generated/themes/CalendarLegendItem.css.js
registerThemePropertiesLoader("@ui5/webcomponents-theming", "sap_horizon", async () => parameters_bundle_css_default);
registerThemePropertiesLoader("@ui5/webcomponents", "sap_horizon", async () => parameters_bundle_css_default2);
var CalendarLegendItem_css_default = `.ui5-calendar-legend-item-root{display:flex;flex-direction:row;flex-wrap:wrap;width:var(--_ui5-v2-8-0-calendar-legend-item-root-width);white-space:pre-line;text-overflow:ellipsis;overflow:hidden;cursor:pointer;margin:.0625rem 0}.ui5-calendar-legend-item-box{display:inline-block;box-sizing:border-box;height:1rem;width:1rem;margin:var(--_ui5-v2-8-0-calendar-legend-item-box-margin);margin-inline-end:var(--_ui5-v2-8-0-calendar-legend-item-box-inner-margin);background:var(--sapLegend_WorkingBackground);border:.0625rem solid var(--sapContent_ForegroundBorderColor)}.ui5-calendar-legend-item-text{display:flex;align-items:center;font-size:.875rem;line-height:1.25rem;color:var(--sapContent_LabelColor);font-weight:400;font-family:var(--sapFontFamily);font-size:var(--sapFontSmallSize);white-space:pre-line;text-overflow:ellipsis;overflow:hidden}:host([type="Today"]) .ui5-calendar-legend-item-box{border-color:var(--sapLegend_CurrentDateTime);border:.125rem solid var(--sapLegend_CurrentDateTime)}:host([type="Selected"]) .ui5-calendar-legend-item-box{background:var(--sapContent_Selected_Background);border:.0625rem solid var(--sapContent_FocusColor)}:host([type="NonWorking"]) .ui5-calendar-legend-item-box{background:var(--sapLegend_NonWorkingBackground);border:.0625rem solid var(--sapContent_ForegroundBorderColor)}:host([type="Type01"]) .ui5-calendar-legend-item-box{background:var(--sapLegendColor1);border:.0625rem solid var(--sapContent_ForegroundBorderColor)}:host([type="Type02"]) .ui5-calendar-legend-item-box{background:var(--sapLegendColor2);border:.0625rem solid var(--sapContent_ForegroundBorderColor)}:host([type="Type03"]) .ui5-calendar-legend-item-box{background:var(--sapLegendColor3);border:.0625rem solid var(--sapContent_ForegroundBorderColor)}:host([type="Type04"]) .ui5-calendar-legend-item-box{background:var(--sapLegendColor4);border:.0625rem solid var(--sapContent_ForegroundBorderColor)}:host([type="Type05"]) .ui5-calendar-legend-item-box{background:var(--sapLegendColor5);border:.0625rem solid var(--sapContent_ForegroundBorderColor)}:host([type="Type06"]) .ui5-calendar-legend-item-box{background:var(--sapLegendColor6);border:.0625rem solid var(--sapContent_ForegroundBorderColor)}:host([type="Type07"]) .ui5-calendar-legend-item-box{background:var(--sapLegendColor7);border:.0625rem solid var(--sapContent_ForegroundBorderColor)}:host([type="Type08"]) .ui5-calendar-legend-item-box{background:var(--sapLegendColor8);border:.0625rem solid var(--sapContent_ForegroundBorderColor)}:host([type="Type09"]) .ui5-calendar-legend-item-box{background:var(--sapLegendColor9);border:.0625rem solid var(--sapContent_ForegroundBorderColor)}:host([type="Type10"]) .ui5-calendar-legend-item-box{background:var(--sapLegendColor10);border:.0625rem solid var(--sapContent_ForegroundBorderColor)}:host([type="Type11"]) .ui5-calendar-legend-item-box{background:var(--sapLegendColor11);border:.0625rem solid var(--sapContent_ForegroundBorderColor)}:host([type="Type12"]) .ui5-calendar-legend-item-box{background:var(--sapLegendColor12);border:.0625rem solid var(--sapContent_ForegroundBorderColor)}:host([type="Type13"]) .ui5-calendar-legend-item-box{background:var(--sapLegendColor13);border:.0625rem solid var(--sapContent_ForegroundBorderColor)}:host([type="Type14"]) .ui5-calendar-legend-item-box{background:var(--sapLegendColor14);border:.0625rem solid var(--sapContent_ForegroundBorderColor)}:host([type="Type15"]) .ui5-calendar-legend-item-box{background:var(--sapLegendColor15);border:.0625rem solid var(--sapContent_ForegroundBorderColor)}:host([type="Type16"]) .ui5-calendar-legend-item-box{background:var(--sapLegendColor16);border:.0625rem solid var(--sapContent_ForegroundBorderColor)}:host([type="Type17"]) .ui5-calendar-legend-item-box{background:var(--sapLegendColor17);border:.0625rem solid var(--sapContent_ForegroundBorderColor)}:host([type="Type18"]) .ui5-calendar-legend-item-box{background:var(--sapLegendColor18);border:.0625rem solid var(--sapContent_ForegroundBorderColor)}:host([type="Type19"]) .ui5-calendar-legend-item-box{background:var(--sapLegendColor19);border:.0625rem solid var(--sapContent_ForegroundBorderColor)}:host([type="Type20"]) .ui5-calendar-legend-item-box{background:var(--sapLegendColor20);border:.0625rem solid var(--sapContent_ForegroundBorderColor)}.ui5-calendar-legend-item-root:focus{outline:var(--_ui5-v2-8-0-calendar-legend-item-root-focus-border);outline-offset:var(--_ui5-v2-8-0-calendar-legend-item-root-focus-offset);border-radius:var(--_ui5-v2-8-0-calendar-legend-item-root-focus-border-radius);margin:.0625rem 0}
`;

// node_modules/@ui5/webcomponents/dist/CalendarLegendItem.js
var __decorate20 = function(decorators, target, key, desc) {
  var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
  if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
  else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
  return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var CalendarLegendItem_1;
var CalendarLegendItem = CalendarLegendItem_1 = class CalendarLegendItem2 extends UI5Element_default {
  constructor() {
    super(...arguments);
    this.type = "None";
    this.forcedTabIndex = "-1";
  }
  get effectiveText() {
    const TodayI18n = CalendarLegendItem_1.i18nBundle.getText(CAL_LEGEND_TODAY_TEXT);
    const SelectedI18n = CalendarLegendItem_1.i18nBundle.getText(CAL_LEGEND_SELECTED_TEXT);
    const WorkingI18n = CalendarLegendItem_1.i18nBundle.getText(CAL_LEGEND_WORKING_DAY_TEXT);
    const NonWorkingI18n = CalendarLegendItem_1.i18nBundle.getText(CAL_LEGEND_NON_WORKING_DAY_TEXT);
    const typeMapping = {
      [CalendarLegendItemType_default.Today]: TodayI18n,
      [CalendarLegendItemType_default.Selected]: SelectedI18n,
      [CalendarLegendItemType_default.NonWorking]: NonWorkingI18n,
      [CalendarLegendItemType_default.Working]: WorkingI18n
    };
    return typeMapping[this.type] || this.text || this.type;
  }
};
__decorate20([
  property_default()
], CalendarLegendItem.prototype, "text", void 0);
__decorate20([
  property_default()
], CalendarLegendItem.prototype, "type", void 0);
__decorate20([
  property_default({ noAttribute: true })
], CalendarLegendItem.prototype, "forcedTabIndex", void 0);
__decorate20([
  i18n_default("@ui5/webcomponents")
], CalendarLegendItem, "i18nBundle", void 0);
CalendarLegendItem = CalendarLegendItem_1 = __decorate20([
  customElement_default({
    tag: "ui5-calendar-legend-item",
    renderer: JsxRenderer_default,
    styles: CalendarLegendItem_css_default,
    template: CalendarLegendItemTemplate
  })
], CalendarLegendItem);
CalendarLegendItem.define();
var CalendarLegendItem_default = CalendarLegendItem;

// node_modules/@ui5/webcomponents/dist/CalendarLegendTemplate.js
function CalendarLegendTemplate() {
  return jsxs("div", { class: "ui5-calendar-legend-root", onFocusOut: this._onFocusOut, onFocusIn: this._onFocusIn, onKeyDown: this._onItemKeyDown, onMouseDown: this._onMouseDown, role: "list", "aria-roledescription": this._roleDescription, children: [this.defaultItemsMapping.filter((item2) => !item2.hide).map((item2) => jsx(CalendarLegendItem_default, { type: item2.type })), this.legendItems.map((item2) => jsx("slot", { name: item2._individualSlot }))] });
}

// node_modules/@ui5/webcomponents/dist/generated/themes/CalendarLegend.css.js
registerThemePropertiesLoader("@ui5/webcomponents-theming", "sap_horizon", async () => parameters_bundle_css_default);
registerThemePropertiesLoader("@ui5/webcomponents", "sap_horizon", async () => parameters_bundle_css_default2);
var CalendarLegend_css_default = `.ui5-calendar-legend-root{column-width:7.5rem;gap:.5rem;padding:var(--_ui5-v2-8-0-calendar-legend-root-padding);margin:1rem 0;width:var(--_ui5-v2-8-0-calendar-legend-root-width);background-color:var(--sapList_Background)}
`;

// node_modules/@ui5/webcomponents/dist/CalendarLegend.js
var __decorate21 = function(decorators, target, key, desc) {
  var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
  if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
  else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
  return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var CalendarLegend_1;
var CalendarLegend = CalendarLegend_1 = class CalendarLegend2 extends UI5Element_default {
  constructor() {
    super();
    this.hideToday = false;
    this.hideSelectedDay = false;
    this.hideNonWorkingDay = false;
    this.hideWorkingDay = false;
    this._lastFocusedItemIndex = null;
  }
  onAfterRendering() {
    if (!this._itemNavigation) {
      this._itemNavigation = new ItemNavigation_default(this, {
        navigationMode: NavigationMode_default.Horizontal,
        behavior: ItemNavigationBehavior_default.Static,
        getItemsCallback: () => this.focusableElements
      });
      const focusableItemIndex = this._lastFocusedItemIndex !== null ? this._lastFocusedItemIndex : 0;
      this._itemNavigation.setCurrentItem(this.focusableElements[focusableItemIndex]);
    }
  }
  _onMouseDown(e) {
    e.stopPropagation();
    const target = e.target;
    this._itemNavigation.setCurrentItem(target);
    this._itemNavigation._focusCurrentItem();
    this._lastFocusedItemIndex = this.focusableElements.indexOf(target);
  }
  _onFocusIn(e) {
    const target = e.target;
    this.fireDecoratorEvent("calendar-legend-selection-change", {
      item: target
    });
    this._lastFocusedItemIndex = this.focusableElements.indexOf(target);
  }
  _onFocusOut() {
    this.fireDecoratorEvent("calendar-legend-focus-out");
  }
  _onItemKeyDown(e) {
    const items3 = this.focusableElements;
    const itemsCount = items3.length;
    const currentItem = e.target;
    const currentIndex = items3.indexOf(currentItem);
    if (isDown(e)) {
      e.preventDefault();
      const nextIndex = currentIndex + 1;
      if (nextIndex < itemsCount) {
        this._itemNavigation.setCurrentItem(items3[nextIndex]);
        this._itemNavigation._focusCurrentItem();
        this._lastFocusedItemIndex = nextIndex;
      }
    }
    if (isUp(e)) {
      e.preventDefault();
      const nextIndex = currentIndex - 1;
      if (nextIndex >= 0) {
        this._itemNavigation.setCurrentItem(items3[nextIndex]);
        this._itemNavigation._focusCurrentItem();
        this._lastFocusedItemIndex = nextIndex;
      }
    }
  }
  get focusableElements() {
    const allFocusableItems = [...this.shadowRoot.querySelectorAll("[ui5-calendar-legend-item]"), ...this.legendItems];
    return allFocusableItems;
  }
  get legendItems() {
    const items3 = this.getSlottedNodes("items");
    return items3.filter((item2) => item2.hasAttribute("ui5-calendar-legend-item"));
  }
  get defaultItemsMapping() {
    const typeMapping = [
      { type: CalendarLegendItemType_default.Today, hide: this.hideToday },
      { type: CalendarLegendItemType_default.Selected, hide: this.hideSelectedDay },
      { type: CalendarLegendItemType_default.Working, hide: this.hideWorkingDay },
      { type: CalendarLegendItemType_default.NonWorking, hide: this.hideNonWorkingDay }
    ];
    return typeMapping;
  }
  get _roleDescription() {
    return CalendarLegend_1.i18nBundle.getText(CAL_LEGEND_ROLE_DESCRIPTION);
  }
};
__decorate21([
  property_default({ type: Boolean })
], CalendarLegend.prototype, "hideToday", void 0);
__decorate21([
  property_default({ type: Boolean })
], CalendarLegend.prototype, "hideSelectedDay", void 0);
__decorate21([
  property_default({ type: Boolean })
], CalendarLegend.prototype, "hideNonWorkingDay", void 0);
__decorate21([
  property_default({ type: Boolean })
], CalendarLegend.prototype, "hideWorkingDay", void 0);
__decorate21([
  slot_default({
    type: HTMLElement,
    invalidateOnChildChange: true,
    individualSlots: true,
    "default": true
  })
], CalendarLegend.prototype, "items", void 0);
__decorate21([
  i18n_default("@ui5/webcomponents")
], CalendarLegend, "i18nBundle", void 0);
CalendarLegend = CalendarLegend_1 = __decorate21([
  customElement_default({
    tag: "ui5-calendar-legend",
    renderer: JsxRenderer_default,
    styles: CalendarLegend_css_default,
    template: CalendarLegendTemplate
  }),
  event_strict_default("calendar-legend-selection-change", {
    bubbles: true
  }),
  event_strict_default("calendar-legend-focus-out", {
    bubbles: true
  })
], CalendarLegend);
CalendarLegend.define();

// node_modules/@ui5/webcomponents-react/dist/webComponents/CalendarLegend/index.js
var CalendarLegend3 = withWebComponent("ui5-calendar-legend", [], ["hideNonWorkingDay", "hideSelectedDay", "hideToday", "hideWorkingDay"], [], []);
CalendarLegend3.displayName = "CalendarLegend";

// node_modules/@ui5/webcomponents-react/dist/webComponents/CalendarLegendItem/index.js
var CalendarLegendItem3 = withWebComponent("ui5-calendar-legend-item", ["text", "type"], [], [], []);
CalendarLegendItem3.displayName = "CalendarLegendItem";

// node_modules/@ui5/webcomponents/dist/CardTemplate.js
function CardTemplate() {
  return jsx("div", { part: "root", role: "region", class: {
    "ui5-card-root": true,
    "ui5-card--interactive": this._hasHeader && this.header[0].interactive,
    "ui5-card--nocontent": !this.content.length
  }, "aria-label": this._getAriaLabel, children: jsx(BusyIndicator_default, { id: `${this._id}-busyIndicator`, delay: this.loadingDelay, active: this.loading, class: "ui5-card-busy-indicator", children: jsxs("div", { class: "ui5-card-inner", children: [this._hasHeader && jsx("div", { class: "ui5-card-header-root", children: jsx("slot", { name: "header" }) }), jsx("div", { role: "group", "aria-label": this._ariaCardContentLabel, part: "content", children: jsx("slot", {}) })] }) }) });
}

// node_modules/@ui5/webcomponents/dist/generated/themes/Card.css.js
registerThemePropertiesLoader("@ui5/webcomponents-theming", "sap_horizon", async () => parameters_bundle_css_default);
registerThemePropertiesLoader("@ui5/webcomponents", "sap_horizon", async () => parameters_bundle_css_default2);
var Card_css_default = `.ui5-hidden-text{position:absolute;clip:rect(1px,1px,1px,1px);user-select:none;left:-1000px;top:-1000px;pointer-events:none;font-size:0}:host(:not([hidden])){display:inline-block;width:100%}.ui5-card-root{width:100%;height:100%;color:var(--sapGroup_TitleTextColor);background:var(--sapTile_Background);box-shadow:var(--_ui5-v2-8-0_card_box_shadow);border-radius:var(--_ui5-v2-8-0_card_border-radius);border:var(--_ui5-v2-8-0_card_border);overflow:hidden;font-family:"72override",var(--sapFontFamily);font-size:var(--sapFontSize);box-sizing:border-box}.ui5-card-busy-indicator{width:100%;height:100%;border-radius:var(--_ui5-v2-8-0_card_border-radius)}.ui5-card-inner{width:100%;height:100%}.ui5-card-root.ui5-card--interactive:hover{box-shadow:var(--_ui5-v2-8-0_card_hover_box_shadow)}.ui5-card-root.ui5-card--interactive:active{box-shadow:var(--_ui5-v2-8-0_card_box_shadow)}.ui5-card-root.ui5-card--nocontent{height:auto}.ui5-card-root.ui5-card--nocontent .ui5-card-header-root{border-bottom:none}.ui5-card--nocontent ::slotted([ui5-card-header]){--_ui5-v2-8-0_card_header_focus_bottom_radius: var(--_ui5-v2-8-0_card_header_focus_radius)}.ui5-card-root .ui5-card-header-root{border-bottom:var(--_ui5-v2-8-0_card_header_border)}
`;

// node_modules/@ui5/webcomponents/dist/Card.js
var __decorate22 = function(decorators, target, key, desc) {
  var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
  if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
  else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
  return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var Card_1;
var Card = Card_1 = class Card2 extends UI5Element_default {
  constructor() {
    super(...arguments);
    this.loading = false;
    this.loadingDelay = 1e3;
  }
  get _hasHeader() {
    return !!this.header.length;
  }
  get _getAriaLabel() {
    const effectiveAriaLabelText = getEffectiveAriaLabelText(this), effectiveAriaLabel = effectiveAriaLabelText ? ` ${effectiveAriaLabelText}` : "";
    return Card_1.i18nBundle.getText(ARIA_ROLEDESCRIPTION_CARD) + effectiveAriaLabel;
  }
  get _ariaCardContentLabel() {
    return Card_1.i18nBundle.getText(ARIA_LABEL_CARD_CONTENT);
  }
};
__decorate22([
  property_default()
], Card.prototype, "accessibleName", void 0);
__decorate22([
  property_default()
], Card.prototype, "accessibleNameRef", void 0);
__decorate22([
  slot_default({ type: HTMLElement, "default": true })
], Card.prototype, "content", void 0);
__decorate22([
  slot_default({ type: HTMLElement, invalidateOnChildChange: true })
], Card.prototype, "header", void 0);
__decorate22([
  property_default({ type: Boolean })
], Card.prototype, "loading", void 0);
__decorate22([
  property_default({ type: Number })
], Card.prototype, "loadingDelay", void 0);
__decorate22([
  i18n_default("@ui5/webcomponents")
], Card, "i18nBundle", void 0);
Card = Card_1 = __decorate22([
  customElement_default({
    tag: "ui5-card",
    languageAware: true,
    renderer: JsxRenderer_default,
    template: CardTemplate,
    styles: Card_css_default
  })
], Card);
Card.define();

// node_modules/@ui5/webcomponents-react/dist/webComponents/Card/index.js
var Card3 = withWebComponent("ui5-card", ["accessibleName", "accessibleNameRef", "loadingDelay"], ["loading"], ["header"], []);
Card3.displayName = "Card";

// node_modules/@ui5/webcomponents/dist/CardHeaderTemplate.js
function CardHeaderTemplate() {
  return jsxs("div", { id: `${this._id}--header`, class: {
    "ui5-card-header": true,
    "ui5-card-header--interactive": this.interactive,
    "ui5-card-header--active": this.interactive && this._headerActive,
    "ui5-card-header-ff": isFirefox()
  }, part: "root", onClick: this._click, onKeyDown: this._keydown, onKeyUp: this._keyup, children: [jsxs("div", { class: "ui5-card-header-focusable-element", "aria-labelledby": this.ariaLabelledBy, "aria-roledescription": this.ariaRoleDescription, role: this.ariaRoleFocusableElement, "data-sap-focus-ref": true, tabindex: 0, children: [this.hasAvatar && jsx("div", { id: `${this._id}-avatar`, class: "ui5-card-header-avatar", "aria-label": this.ariaCardAvatarLabel, children: jsx("slot", { name: "avatar" }) }), jsxs("div", { class: "ui5-card-header-text", children: [jsxs("div", { class: "ui5-card-header-first-line", children: [this.titleText && jsx("div", { id: `${this._id}-title`, class: "ui5-card-header-title", part: "title", role: "heading", "aria-level": 3, children: this.titleText }), this.additionalText && jsx("div", { class: "ui5-card-header-additionalText", children: jsx("span", { id: `${this._id}-additionalText`, part: "additional-text", dir: "auto", children: this.additionalText }) })] }), this.subtitleText && jsx("div", { id: `${this._id}-subtitle`, class: "ui5-card-header-subtitle", part: "subtitle", children: this.subtitleText })] })] }), this.hasAction && jsx("div", { class: "ui5-card-header-action", onFocusIn: this._actionsFocusin, onFocusOut: this._actionsFocusout, children: jsx("slot", { name: "action" }) })] });
}

// node_modules/@ui5/webcomponents/dist/generated/themes/CardHeader.css.js
registerThemePropertiesLoader("@ui5/webcomponents-theming", "sap_horizon", async () => parameters_bundle_css_default);
registerThemePropertiesLoader("@ui5/webcomponents", "sap_horizon", async () => parameters_bundle_css_default2);
var CardHeader_css_default = `.ui5-hidden-text{position:absolute;clip:rect(1px,1px,1px,1px);user-select:none;left:-1000px;top:-1000px;pointer-events:none;font-size:0}.ui5-card-header{position:relative;display:flex;align-items:center;padding:var(--_ui5-v2-8-0_card_header_padding);outline:none}:host([subtitleText]) .ui5-card-header{align-items:flex-start}:host([desktop]) .ui5-card-header.ui5-card-header-ff:not(.ui5-card-header-hide-focus):focus-within:before,.ui5-card-header.ui5-card-header-ff:not(.ui5-card-header-hide-focus):focus-visible:before{outline:none;content:"";position:absolute;border:var(--_ui5-v2-8-0_card_header_focus_border);pointer-events:none;top:var(--_ui5-v2-8-0_card_header_focus_offset);left:var(--_ui5-v2-8-0_card_header_focus_offset);right:var(--_ui5-v2-8-0_card_header_focus_offset);bottom:var(--_ui5-v2-8-0_card_header_focus_offset);border-top-left-radius:var(--_ui5-v2-8-0_card_header_focus_radius);border-top-right-radius:var(--_ui5-v2-8-0_card_header_focus_radius);border-bottom-left-radius:var(--_ui5-v2-8-0_card_header_focus_bottom_radius);border-bottom-right-radius:var(--_ui5-v2-8-0_card_header_focus_bottom_radius)}:host([desktop]) .ui5-card-header:not(.ui5-card-header-ff):not(.ui5-card-header-hide-focus):has(.ui5-card-header-focusable-element:focus):before,.ui5-card-header:not(.ui5-card-header-ff):not(.ui5-card-header-hide-focus):has(.ui5-card-header-focusable-element:focus-visible):before{outline:none;content:"";position:absolute;border:var(--_ui5-v2-8-0_card_header_focus_border);pointer-events:none;top:var(--_ui5-v2-8-0_card_header_focus_offset);left:var(--_ui5-v2-8-0_card_header_focus_offset);right:var(--_ui5-v2-8-0_card_header_focus_offset);bottom:var(--_ui5-v2-8-0_card_header_focus_offset);border-top-left-radius:var(--_ui5-v2-8-0_card_header_focus_radius);border-top-right-radius:var(--_ui5-v2-8-0_card_header_focus_radius);border-bottom-left-radius:var(--_ui5-v2-8-0_card_header_focus_bottom_radius);border-bottom-right-radius:var(--_ui5-v2-8-0_card_header_focus_bottom_radius)}.ui5-card-header-focusable-element{outline:none}.ui5-card-header-focusable-element{display:inherit;align-items:inherit;flex:1;min-width:0}.ui5-card-header.ui5-card-header--interactive:hover{cursor:pointer;background:var(--_ui5-v2-8-0_card_header_hover_bg)}.ui5-card-header.ui5-card-header--active,.ui5-card-header.ui5-card-header--interactive:active{background:var(--_ui5-v2-8-0_card_header_active_bg)}.ui5-card-header .ui5-card-header-text{flex:1;min-width:0;pointer-events:none}.ui5-card-header-first-line{display:flex;flex-flow:row;justify-content:space-between}.ui5-card-header-additionalText{flex:none}.ui5-card-header .ui5-card-header-avatar{height:3rem;width:3rem;display:flex;align-items:center;justify-content:center;margin-inline-end:.75rem;pointer-events:none;align-self:flex-start}::slotted([ui5-icon]){width:1.5rem;height:1.5rem;color:var(--sapTile_IconColor)}::slotted(img[slot="avatar"]){width:100%;height:100%;border-radius:50%}.ui5-card-header .ui5-card-header-additionalText{display:inline-block;font-family:"72override",var(--sapFontFamily);font-size:var(--sapFontSmallSize);color:var(--sapTile_TextColor);text-align:left;text-overflow:ellipsis;overflow:hidden;white-space:nowrap;vertical-align:middle;margin-inline-start:1rem;margin-block-start:.125rem}.ui5-card-header .ui5-card-header-text .ui5-card-header-title{font-family:var(--_ui5-v2-8-0_card_header_title_font_family);font-size:var(--_ui5-v2-8-0_card_header_title_font_size);font-weight:var(--_ui5-v2-8-0_card_header_title_font_weight);color:var(--sapTile_TitleTextColor);max-height:3.5rem;align-self:flex-end}.ui5-card-header .ui5-card-header-text .ui5-card-header-subtitle{font-family:"72override",var(--sapFontFamily);font-size:var(--sapFontSize);font-weight:400;color:var(--sapTile_TextColor);margin-top:var(--_ui5-v2-8-0_card_header_subtitle_margin_top);max-height:2.1rem}.ui5-card-header .ui5-card-header-text .ui5-card-header-title,.ui5-card-header .ui5-card-header-text .ui5-card-header-subtitle{text-align:start;text-overflow:ellipsis;white-space:normal;word-wrap:break-word;overflow:hidden;-webkit-line-clamp:2;-webkit-box-orient:vertical;display:-webkit-box;max-width:100%}.ui5-card-header .ui5-card-header-text .ui5-card-header-title{-webkit-line-clamp:3}.ui5-card-header-action{display:flex;padding-inline-start:1rem;align-self:flex-start}
`;

// node_modules/@ui5/webcomponents/dist/CardHeader.js
var __decorate23 = function(decorators, target, key, desc) {
  var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
  if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
  else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
  return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var CardHeader_1;
var CardHeader = CardHeader_1 = class CardHeader2 extends UI5Element_default {
  constructor() {
    super(...arguments);
    this.interactive = false;
    this._ariaLevel = 3;
    this._headerActive = false;
  }
  onEnterDOM() {
    if (isDesktop()) {
      this.setAttribute("desktop", "");
    }
  }
  get _root() {
    return this.shadowRoot.querySelector(".ui5-card-header");
  }
  get ariaRoleDescription() {
    return this.interactive ? CardHeader_1.i18nBundle.getText(ARIA_ROLEDESCRIPTION_INTERACTIVE_CARD_HEADER) : CardHeader_1.i18nBundle.getText(ARIA_ROLEDESCRIPTION_CARD_HEADER);
  }
  get ariaRoleFocusableElement() {
    return this.interactive ? "button" : "group";
  }
  get ariaCardAvatarLabel() {
    return CardHeader_1.i18nBundle.getText(AVATAR_TOOLTIP);
  }
  get ariaLabelledBy() {
    const labels = [];
    if (this.titleText) {
      labels.push(`${this._id}-title`);
    }
    if (this.subtitleText) {
      labels.push(`${this._id}-subtitle`);
    }
    if (this.additionalText) {
      labels.push(`${this._id}-additionalText`);
    }
    if (this.hasAvatar) {
      labels.push(`${this._id}-avatar`);
    }
    return labels.length !== 0 ? labels.join(" ") : void 0;
  }
  get hasAvatar() {
    return !!this.avatar.length;
  }
  get hasAction() {
    return !!this.action.length;
  }
  _actionsFocusin() {
    this._root.classList.add("ui5-card-header-hide-focus");
  }
  _actionsFocusout() {
    this._root.classList.remove("ui5-card-header-hide-focus");
  }
  _click(e) {
    e.stopImmediatePropagation();
    if (this.interactive && this._root.contains(e.target)) {
      this.fireDecoratorEvent("click");
    }
  }
  _keydown(e) {
    if (!this.interactive || !this._root.contains(e.target)) {
      return;
    }
    const enter = isEnter(e);
    const space = isSpace(e);
    this._headerActive = enter || space;
    if (enter) {
      this.fireDecoratorEvent("click");
      return;
    }
    if (space) {
      e.preventDefault();
    }
  }
  _keyup(e) {
    if (!this.interactive || !this._root.contains(e.target)) {
      return;
    }
    const space = isSpace(e);
    this._headerActive = false;
    if (space) {
      this.fireDecoratorEvent("click");
    }
  }
};
__decorate23([
  property_default()
], CardHeader.prototype, "titleText", void 0);
__decorate23([
  property_default()
], CardHeader.prototype, "subtitleText", void 0);
__decorate23([
  property_default()
], CardHeader.prototype, "additionalText", void 0);
__decorate23([
  property_default({ type: Boolean })
], CardHeader.prototype, "interactive", void 0);
__decorate23([
  property_default({ type: Number })
], CardHeader.prototype, "_ariaLevel", void 0);
__decorate23([
  property_default({ type: Boolean, noAttribute: true })
], CardHeader.prototype, "_headerActive", void 0);
__decorate23([
  slot_default()
], CardHeader.prototype, "avatar", void 0);
__decorate23([
  slot_default()
], CardHeader.prototype, "action", void 0);
__decorate23([
  i18n_default("@ui5/webcomponents")
], CardHeader, "i18nBundle", void 0);
CardHeader = CardHeader_1 = __decorate23([
  customElement_default({
    tag: "ui5-card-header",
    languageAware: true,
    renderer: JsxRenderer_default,
    template: CardHeaderTemplate,
    styles: CardHeader_css_default
  }),
  event_strict_default("click", {
    bubbles: true
  })
], CardHeader);
CardHeader.define();

// node_modules/@ui5/webcomponents-react/dist/webComponents/CardHeader/index.js
var CardHeader3 = withWebComponent("ui5-card-header", ["additionalText", "subtitleText", "titleText"], ["interactive"], ["action", "avatar"], ["click"]);
CardHeader3.displayName = "CardHeader";

// node_modules/@ui5/webcomponents-base/dist/animations/AnimationQueue.js
var tasks = /* @__PURE__ */ new WeakMap();
var AnimationQueue = class _AnimationQueue {
  static get tasks() {
    return tasks;
  }
  static enqueue(element, task) {
    if (!tasks.has(element)) {
      tasks.set(element, []);
    }
    tasks.get(element).push(task);
  }
  static run(element, task) {
    if (!tasks.has(element)) {
      tasks.set(element, []);
    }
    return task().then(() => {
      const elementTasks = tasks.get(element);
      if (elementTasks.length > 0) {
        return _AnimationQueue.run(element, elementTasks.shift());
      }
      tasks.delete(element);
    });
  }
  static push(element, task) {
    const elementTasks = tasks.get(element);
    if (elementTasks) {
      _AnimationQueue.enqueue(element, task);
    } else {
      _AnimationQueue.run(element, task);
    }
  }
};
var AnimationQueue_default = AnimationQueue;

// node_modules/@ui5/webcomponents-base/dist/animations/animate.js
var animate = (options) => {
  let start = null;
  let stopped = false;
  let animationFrame;
  let stop;
  let advanceAnimation;
  const promise = new Promise((resolve, reject) => {
    advanceAnimation = (timestamp) => {
      start = start || timestamp;
      const timeElapsed = timestamp - start;
      const remaining = options.duration - timeElapsed;
      if (timeElapsed <= options.duration) {
        const currentAdvance = 1 - remaining / options.duration;
        options.advance(currentAdvance);
        if (!stopped) {
          animationFrame = requestAnimationFrame(advanceAnimation);
        }
      } else {
        options.advance(1);
        resolve();
      }
    };
    stop = () => {
      stopped = true;
      cancelAnimationFrame(animationFrame);
      reject(new Error("animation stopped"));
    };
  }).catch((reason) => reason);
  AnimationQueue_default.push(options.element, () => {
    if (typeof options.beforeStart === "function") {
      options.beforeStart();
    }
    requestAnimationFrame(advanceAnimation);
    return new Promise((resolve) => {
      promise.then(() => resolve());
    });
  });
  return {
    promise: () => promise,
    stop: () => stop
  };
};
var duration = 400;
var animate_default = animate;

// node_modules/@ui5/webcomponents-base/dist/animations/scroll.js
var scroll = (element, dx, dy) => {
  let scrollLeft;
  let scrollTop;
  return animate_default({
    beforeStart: () => {
      scrollLeft = element.scrollLeft;
      scrollTop = element.scrollTop;
    },
    duration,
    element,
    advance: (progress) => {
      element.scrollLeft = scrollLeft + progress * dx;
      element.scrollTop = scrollTop + progress * dy;
    }
  });
};
var scroll_default = scroll;

// node_modules/@ui5/webcomponents-base/dist/delegate/ScrollEnablement.js
var scrollEventName = "scroll";
var touchEndEventName = supportsTouch() ? "touchend" : "mouseup";
var ScrollEnablement = class extends EventProvider_default {
  constructor(containerComponent) {
    super();
    this.supportsTouch = supportsTouch();
    this.containerComponent = containerComponent;
    this.mouseMove = this.ontouchmove.bind(this);
    this.mouseUp = this.ontouchend.bind(this);
    this.touchStart = this.ontouchstart.bind(this);
    this.supportsTouch = supportsTouch();
    this.cachedValue = { dragX: 0, dragY: 0 };
    this.startX = 0;
    this.startY = 0;
    if (this.supportsTouch) {
      containerComponent.addEventListener("touchstart", this.touchStart, { passive: true });
      containerComponent.addEventListener("touchmove", this.mouseMove, { passive: true });
      containerComponent.addEventListener("touchend", this.mouseUp, { passive: true });
    } else {
      containerComponent.addEventListener("mousedown", this.touchStart, { passive: true });
    }
  }
  set scrollContainer(container) {
    this._container = container;
  }
  get scrollContainer() {
    return this._container;
  }
  /**
   * Scrolls the container to the left/top position, retrying retryCount times, if the container is not yet painted
   *
   * @param left
   * @param top
   * @param retryCount
   * @param retryInterval
   * @returns {Promise<void>} resolved when scrolled successfully
   */
  async scrollTo(left, top, retryCount = 0, retryInterval = 0) {
    let containerPainted = this.scrollContainer.clientHeight > 0 && this.scrollContainer.clientWidth > 0;
    while (!containerPainted && retryCount > 0) {
      await new Promise((resolve) => {
        setTimeout(() => {
          containerPainted = this.scrollContainer.clientHeight > 0 && this.scrollContainer.clientWidth > 0;
          retryCount--;
          resolve();
        }, retryInterval);
      });
    }
    this._container.scrollLeft = left;
    this._container.scrollTop = top;
  }
  move(dx, dy, disableAnimation) {
    if (disableAnimation) {
      this._container.scrollLeft += dx;
      this._container.scrollTop += dy;
      return;
    }
    if (this._container) {
      return scroll_default(this._container, dx, dy);
    }
  }
  getScrollLeft() {
    return this._container.scrollLeft;
  }
  getScrollTop() {
    return this._container.scrollTop;
  }
  _isTouchInside(event) {
    let touch = null;
    if (this.supportsTouch && event instanceof TouchEvent) {
      touch = event.touches[0];
    }
    const rect = this._container.getBoundingClientRect();
    const x = this.supportsTouch ? touch.clientX : event.x;
    const y = this.supportsTouch ? touch.clientY : event.y;
    return x >= rect.left && x <= rect.right && y >= rect.top && y <= rect.bottom;
  }
  ontouchstart(event) {
    let touch = null;
    if (this.supportsTouch && event instanceof TouchEvent) {
      touch = event.touches[0];
    }
    if (!touch) {
      document.addEventListener("mouseup", this.mouseUp, { passive: true });
      document.addEventListener("mousemove", this.mouseMove, { passive: true });
    } else {
      this.startX = touch.pageX;
      this.startY = touch.pageY;
    }
    if (touch) {
      this._prevDragX = touch.pageX;
      this._prevDragY = touch.pageY;
    }
    if (event instanceof MouseEvent) {
      this._prevDragX = event.x;
      this._prevDragY = event.y;
    }
    this._canScroll = this._isTouchInside(event);
  }
  ontouchmove(event) {
    if (!this._canScroll) {
      return;
    }
    const container = this._container;
    const touch = this.supportsTouch ? event.touches[0] : null;
    const dragX = this.supportsTouch ? touch.pageX : event.x;
    const dragY = this.supportsTouch ? touch.pageY : event.y;
    container.scrollLeft += this._prevDragX - dragX;
    container.scrollTop += this._prevDragY - dragY;
    this.fireEvent(scrollEventName, {
      isLeft: dragX > this._prevDragX,
      isRight: dragX < this._prevDragX
    });
    this.cachedValue.dragX = this._prevDragX;
    this.cachedValue.dragY = this._prevDragY;
    this._prevDragX = dragX;
    this._prevDragY = dragY;
  }
  ontouchend(event) {
    if (this.supportsTouch) {
      const deltaX = Math.abs(event.changedTouches[0].pageX - this.startX);
      const deltaY = Math.abs(event.changedTouches[0].pageY - this.startY);
      if (deltaX < 10 && deltaY < 10) {
        return;
      }
    }
    if (!this._canScroll) {
      return;
    }
    const container = this._container;
    const dragX = this.supportsTouch ? event.changedTouches[0].pageX : event.x;
    const dragY = this.supportsTouch ? event.changedTouches[0].pageY : event.y;
    container.scrollLeft += this._prevDragX - dragX;
    container.scrollTop += this._prevDragY - dragY;
    const useCachedValues = dragX === this._prevDragX;
    const _dragX = useCachedValues ? this.cachedValue.dragX : dragX;
    this.fireEvent(touchEndEventName, {
      isLeft: _dragX < this._prevDragX,
      isRight: _dragX > this._prevDragX
    });
    this._prevDragX = dragX;
    this._prevDragY = dragY;
    if (!this.supportsTouch) {
      document.removeEventListener("mousemove", this.mouseMove);
      document.removeEventListener("mouseup", this.mouseUp);
    }
  }
};
var ScrollEnablement_default = ScrollEnablement;

// node_modules/@ui5/webcomponents-base/dist/config/AnimationMode.js
var curAnimationMode;
attachConfigurationReset(() => {
  curAnimationMode = void 0;
});
var getAnimationMode2 = () => {
  if (curAnimationMode === void 0) {
    curAnimationMode = getAnimationMode();
  }
  return curAnimationMode;
};

// node_modules/@ui5/webcomponents/dist/types/CarouselArrowsPlacement.js
var CarouselArrowsPlacement;
(function(CarouselArrowsPlacement2) {
  CarouselArrowsPlacement2["Content"] = "Content";
  CarouselArrowsPlacement2["Navigation"] = "Navigation";
})(CarouselArrowsPlacement || (CarouselArrowsPlacement = {}));
var CarouselArrowsPlacement_default = CarouselArrowsPlacement;

// node_modules/@ui5/webcomponents/dist/types/CarouselPageIndicatorType.js
var CarouselPageIndicatorType;
(function(CarouselPageIndicatorType2) {
  CarouselPageIndicatorType2["Default"] = "Default";
  CarouselPageIndicatorType2["Numeric"] = "Numeric";
})(CarouselPageIndicatorType || (CarouselPageIndicatorType = {}));
var CarouselPageIndicatorType_default = CarouselPageIndicatorType;

// node_modules/@ui5/webcomponents/dist/CarouselTemplate.js
function CarouselTemplate() {
  return jsxs("section", { class: {
    "ui5-carousel-root": true,
    [`ui5-carousel-background-${this._backgroundDesign}`]: true
  }, tabindex: 0, role: "listbox", "aria-label": this.ariaLabelTxt, "aria-activedescendant": this.ariaActiveDescendant, onFocusIn: this._onfocusin, onKeyDown: this._onkeydown, onMouseOut: this._onmouseout, onMouseOver: this._onmouseover, children: [jsxs("div", { class: this.classes.viewport, part: "content", children: [jsx("div", { class: this.classes.content, style: { transform: `translateX(${this._isRTL ? "" : "-"}${this._selectedIndex * (this._itemWidth || 0)}px` }, children: this.items.map((itemInfo) => jsx("div", { id: itemInfo.id, class: {
    "ui5-carousel-item": true,
    "ui5-carousel-item--hidden": !itemInfo.selected
  }, style: { width: `${this._itemWidth || 0}px` }, part: "item", role: "option", "aria-posinset": itemInfo.posinset, "aria-setsize": itemInfo.setsize, "aria-selected": itemInfo.selected, children: jsx("slot", { name: itemInfo.item._individualSlot, tabindex: itemInfo.tabIndex }) })) }), this.showArrows.content && jsxs("div", { class: "ui5-carousel-navigation-arrows", children: [arrowBack.call(this), arrowForward.call(this)] })] }), this.renderNavigation && jsxs("div", { class: this.classes.navigation, children: [this.showArrows.navigation && arrowBack.call(this), jsx("div", { class: "ui5-carousel-navigation", children: !this.hidePageIndicator && navIndicator.call(this) }), this.showArrows.navigation && arrowForward.call(this)] })] });
}
function arrowBack() {
  return jsx(Button_default, { icon: slim_arrow_left_default, tabindex: -1, tooltip: this.previousPageText, class: {
    "ui5-carousel-navigation-button": true,
    "ui5-carousel-navigation-button--hidden": !this.hasPrev
  }, "data-ui5-arrow-back": true, onClick: this._navButtonClick });
}
function arrowForward() {
  return jsx(Button_default, { icon: slim_arrow_right_default, tabindex: -1, tooltip: this.nextPageText, class: {
    "ui5-carousel-navigation-button": true,
    "ui5-carousel-navigation-button--hidden": !this.hasNext
  }, "data-ui5-arrow-forward": true, onClick: this._navButtonClick });
}
function navIndicator() {
  return this.isPageTypeDots ? this.dots.map((dot) => jsx("div", { role: "img", "aria-label": dot.ariaLabel, class: {
    "ui5-carousel-navigation-dot": true,
    "ui5-carousel-navigation-dot--active": dot.active
  } })) : jsxs("div", { dir: "auto", class: "ui5-carousel-navigation-text", children: [this.selectedIndexToShow, " ", this.ofText, " ", this.pagesCount] });
}

// node_modules/@ui5/webcomponents/dist/generated/themes/Carousel.css.js
registerThemePropertiesLoader("@ui5/webcomponents-theming", "sap_horizon", async () => parameters_bundle_css_default);
registerThemePropertiesLoader("@ui5/webcomponents", "sap_horizon", async () => parameters_bundle_css_default2);
var Carousel_css_default = `:host(:not([hidden])){display:inline-block}:host{width:100%;min-width:15.5rem;height:100%}:host([desktop]) .ui5-carousel-root:focus,.ui5-carousel-root:focus-visible{outline:var(--sapContent_FocusWidth) var(--sapContent_FocusStyle) var(--sapContent_FocusColor)}.ui5-carousel-root{height:inherit;position:relative;display:flex;flex-direction:column;align-items:center;background:var(--ui5-v2-8-0_carousel_background_color_translucent)}.ui5-carousel-background-solid{background:var(--ui5-v2-8-0_carousel_background_color_solid)}.ui5-carousel-background-transparent{background:transparent}.ui5-carousel-viewport{width:100%;height:inherit;position:relative;display:flex;flex-direction:column;align-items:flex-start;overflow:hidden;padding:1px;flex:1;min-height:0}.ui5-carousel-viewport.ui5-carousel-viewport--single{align-items:center}.ui5-carousel-content{height:100%;position:relative;display:flex;flex-direction:row;flex-wrap:nowrap;transition:transform .5s cubic-bezier(.46,0,.44,1);will-change:transform}.ui5-carousel-content.ui5-carousel-content-no-animation{transition:none}.ui5-carousel-content.ui5-carousel-content-has-navigation{height:calc(100% - 1rem)}.ui5-carousel-item{height:100%;display:flex;align-items:center;justify-content:center;padding:0 .75rem;box-sizing:border-box;transition:opacity .5s linear;will-change:opacity}.ui5-carousel-item--hidden{opacity:0}.ui5-carousel-navigation-arrows{width:100%;padding:0 .5rem;position:absolute;top:calc(50% - var(--ui5-v2-8-0_carousel_button_size) / 2);left:0;display:flex;justify-content:space-between;box-sizing:border-box;pointer-events:none}.ui5-carousel-navigation-arrows>[ui5-button]{pointer-events:all}.ui5-carousel-navigation-wrapper{width:100%;height:2.75rem;display:flex;flex-wrap:nowrap;justify-content:center;align-items:center;box-sizing:border-box}.ui5-carousel-navigation-wrapper-bg-solid{background:var(--sapPageFooter_Background)}.ui5-carousel-navigation-wrapper-bg-translucent{background:var(--ui5-v2-8-0_carousel_background_color_translucent)}.ui5-carousel-navigation-wrapper-bg-transparent{background:transparent}.ui5-carousel-navigation-wrapper-border-solid{border-top:var(--sapElement_BorderWidth) solid var(--sapList_BorderColor)}.ui5-carousel-navigation-wrapper.ui5-carousel-navigation-with-buttons{height:3.5rem}.ui5-carousel-navigation-button{width:var(--ui5-v2-8-0_carousel_button_size);height:var(--ui5-v2-8-0_carousel_button_size);border-radius:50%;box-shadow:none;cursor:pointer;outline-offset:.1rem;--_ui5-v2-8-0_button_focused_border_radius: 50%}.ui5-carousel-navigation-arrows .ui5-carousel-navigation-button{box-shadow:var(--sapContent_Shadow1)}.ui5-carousel-navigation-arrows .ui5-carousel-navigation-button:active{box-shadow:var(--ui5-v2-8-0_carousel_navigation_button_active_box_shadow)}.ui5-carousel-navigation-button--hidden{visibility:hidden;padding:0}.ui5-carousel-navigation{width:9rem;height:2rem;display:flex;justify-content:center;align-items:center}.ui5-carousel-navigation:empty{width:1rem}.ui5-carousel-navigation-dot{box-sizing:border-box;width:var(--ui5-v2-8-0_carousel_inactive_dot_size);height:var(--ui5-v2-8-0_carousel_inactive_dot_size);margin:var(--ui5-v2-8-0_carousel_inactive_dot_margin);border-radius:50%;background-color:var(--ui5-v2-8-0_carousel_inactive_dot_background);border:var(--ui5-v2-8-0_carousel_inactive_dot_border);transition:background-color .1s ease-in}.ui5-carousel-navigation-dot.ui5-carousel-navigation-dot--active{width:.5rem;height:.5rem;margin:0 .25rem;background-color:var(--ui5-v2-8-0_carousel_active_dot_background);border:var(--ui5-v2-8-0_carousel_active_dot_border)}.ui5-carousel-navigation-text{font-family:var(--sapFontFamily);font-size:var(--sapFontSize);font-weight:400;color:var(--sapPageFooter_TextColor);white-space:nowrap;overflow:hidden;text-align:center;text-overflow:ellipsis}
`;

// node_modules/@ui5/webcomponents/dist/Carousel.js
var __decorate24 = function(decorators, target, key, desc) {
  var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
  if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
  else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
  return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var Carousel_1;
var Carousel = Carousel_1 = class Carousel2 extends UI5Element_default {
  static get pageTypeLimit() {
    return 9;
  }
  constructor() {
    super();
    this.cyclic = false;
    this.itemsPerPage = "S1 M1 L1 XL1";
    this.hideNavigationArrows = false;
    this.hidePageIndicator = false;
    this.pageIndicatorType = "Default";
    this.backgroundDesign = "Translucent";
    this.pageIndicatorBackgroundDesign = "Solid";
    this.pageIndicatorBorderDesign = "Solid";
    this._selectedIndex = 0;
    this.arrowsPlacement = "Content";
    this._visibleNavigationArrows = false;
    this._scrollEnablement = new ScrollEnablement_default(this);
    this._scrollEnablement.attachEvent("touchend", (e) => {
      this._updateScrolling(e);
    });
    this._onResizeBound = this._onResize.bind(this);
    this._resizing = false;
    this._lastFocusedElements = [];
    this._orderOfLastFocusedPages = [];
  }
  onBeforeRendering() {
    if (this.arrowsPlacement === CarouselArrowsPlacement_default.Navigation || !isDesktop()) {
      this._visibleNavigationArrows = true;
    }
    this.validateSelectedIndex();
  }
  onAfterRendering() {
    this._scrollEnablement.scrollContainer = this.getDomRef();
    this._resizing = false;
  }
  onEnterDOM() {
    ResizeHandler_default.register(this, this._onResizeBound);
    if (isDesktop()) {
      this.setAttribute("desktop", "");
    }
  }
  onExitDOM() {
    ResizeHandler_default.deregister(this, this._onResizeBound);
  }
  validateSelectedIndex() {
    if (!this.isIndexInRange(this._selectedIndex)) {
      this._selectedIndex = 0;
    }
  }
  _onResize() {
    const previousItemsPerPage = this.effectiveItemsPerPage;
    this._resizing = true;
    this._width = this.offsetWidth;
    this._itemWidth = Math.floor(this._width / this.effectiveItemsPerPage);
    if (this.effectiveItemsPerPage === previousItemsPerPage) {
      return;
    }
    if (this._selectedIndex > this.pagesCount - 1) {
      this._selectedIndex = this.pagesCount - 1;
      this.fireDecoratorEvent("navigate", { selectedIndex: this._selectedIndex });
    }
  }
  _updateScrolling(e) {
    if (!e) {
      return;
    }
    if (e.isLeft) {
      this.navigateLeft();
    } else if (e.isRight) {
      this.navigateRight();
    }
  }
  async _onkeydown(e) {
    if (isF7(e)) {
      this._handleF7Key(e);
      return;
    }
    if (e.target !== this.getDomRef()) {
      return;
    }
    if (isLeft(e) || isDown(e)) {
      this.navigateLeft();
      await renderFinished();
      this.getDomRef().focus();
    } else if (isRight(e) || isUp(e)) {
      this.navigateRight();
      await renderFinished();
      this.getDomRef().focus();
    }
  }
  _onfocusin(e) {
    const target = e.target;
    if (target === this.getDomRef()) {
      return;
    }
    let pageIndex = -1;
    for (let i = 0; i < this.content.length; i++) {
      if (this.content[i].contains(target)) {
        pageIndex = i;
        break;
      }
    }
    if (pageIndex === -1) {
      return;
    }
    this._lastFocusedElements[pageIndex] = target;
    const sortedPageIndex = this._orderOfLastFocusedPages.indexOf(pageIndex);
    if (sortedPageIndex === -1) {
      this._orderOfLastFocusedPages.unshift(pageIndex);
    } else {
      this._orderOfLastFocusedPages.splice(0, 0, this._orderOfLastFocusedPages.splice(sortedPageIndex, 1)[0]);
    }
  }
  _onmouseout() {
    if (this.arrowsPlacement === CarouselArrowsPlacement_default.Content) {
      this._visibleNavigationArrows = false;
    }
  }
  _onmouseover() {
    if (this.arrowsPlacement === CarouselArrowsPlacement_default.Content) {
      this._visibleNavigationArrows = true;
    }
  }
  _handleF7Key(e) {
    const lastFocusedElement = this._lastFocusedElements[this._getLastFocusedActivePageIndex];
    if (e.target === this.getDomRef() && lastFocusedElement) {
      lastFocusedElement.focus();
    } else {
      this.getDomRef().focus();
    }
  }
  get _backgroundDesign() {
    return this.backgroundDesign.toLowerCase();
  }
  get _getLastFocusedActivePageIndex() {
    for (let i = 0; i < this._orderOfLastFocusedPages.length; i++) {
      const pageIndex = this._orderOfLastFocusedPages[i];
      if (this.isItemInViewport(pageIndex)) {
        return pageIndex;
      }
    }
    return this._selectedIndex;
  }
  navigateLeft() {
    this._resizing = false;
    const previousSelectedIndex = this._selectedIndex;
    if (this._selectedIndex - 1 < 0) {
      if (this.cyclic) {
        this._selectedIndex = this.pagesCount - 1;
      }
    } else {
      --this._selectedIndex;
    }
    if (previousSelectedIndex !== this._selectedIndex) {
      this.fireDecoratorEvent("navigate", { selectedIndex: this._selectedIndex });
    }
  }
  navigateRight() {
    this._resizing = false;
    const previousSelectedIndex = this._selectedIndex;
    if (this._selectedIndex + 1 > this.pagesCount - 1) {
      if (this.cyclic) {
        this._selectedIndex = 0;
      } else {
        return;
      }
    } else {
      ++this._selectedIndex;
    }
    if (previousSelectedIndex !== this._selectedIndex) {
      this.fireDecoratorEvent("navigate", { selectedIndex: this._selectedIndex });
    }
  }
  _navButtonClick(e) {
    const button = e.target;
    if (button.hasAttribute("data-ui5-arrow-forward")) {
      this.navigateRight();
    } else {
      this.navigateLeft();
    }
    this.focus();
  }
  /**
   * Changes the currently displayed page.
   * @param itemIndex The index of the target page
   * @since 1.0.0-rc.15
   * @public
   */
  navigateTo(itemIndex) {
    this._resizing = false;
    this._selectedIndex = itemIndex;
  }
  /**
   * Assuming that all items have the same width
   * @private
   */
  get items() {
    return this.content.map((item2, idx) => {
      const visible = this.isItemInViewport(idx);
      return {
        id: `${this._id}-carousel-item-${idx + 1}`,
        item: item2,
        tabIndex: visible ? 0 : -1,
        posinset: idx + 1,
        setsize: this.content.length,
        selected: visible
      };
    });
  }
  get effectiveItemsPerPage() {
    const itemsPerPageArray = this.itemsPerPage.split(" ");
    let itemsPerPageSizeS = 1, itemsPerPageSizeM = 1, itemsPerPageSizeL = 1, itemsPerPageSizeXL = 1;
    itemsPerPageArray.forEach((element) => {
      if (element.startsWith("S")) {
        itemsPerPageSizeS = Number(element.slice(1)) || 1;
      } else if (element.startsWith("M")) {
        itemsPerPageSizeM = Number(element.slice(1)) || 1;
      } else if (element.startsWith("L")) {
        itemsPerPageSizeL = Number(element.slice(1)) || 1;
      } else if (element.startsWith("XL")) {
        itemsPerPageSizeXL = Number(element.slice(2)) || 1;
      }
    });
    if (!this._width) {
      return itemsPerPageSizeL;
    }
    if (this._width < 600) {
      return itemsPerPageSizeS;
    }
    if (this._width >= 600 && this._width < 1024) {
      return itemsPerPageSizeM;
    }
    if (this._width >= 1024 && this._width < 1440) {
      return itemsPerPageSizeL;
    }
    return itemsPerPageSizeXL;
  }
  isItemInViewport(index) {
    return index >= this._selectedIndex && index <= this._selectedIndex + this.effectiveItemsPerPage - 1;
  }
  isIndexInRange(index) {
    return index >= 0 && index <= this.pagesCount - 1;
  }
  /**
   * @private
   */
  get renderNavigation() {
    if (!this.hasManyPages) {
      return false;
    }
    if (this.arrowsPlacement === CarouselArrowsPlacement_default.Navigation && !this.hideNavigationArrows) {
      return true;
    }
    if (this.hidePageIndicator) {
      return false;
    }
    return true;
  }
  get hasManyPages() {
    return this.pagesCount > 1;
  }
  get classes() {
    return {
      viewport: {
        "ui5-carousel-viewport": true,
        "ui5-carousel-viewport--single": this.pagesCount === 1
      },
      content: {
        "ui5-carousel-content": true,
        "ui5-carousel-content-no-animation": this.suppressAnimation,
        "ui5-carousel-content-has-navigation": this.renderNavigation,
        "ui5-carousel-content-has-navigation-and-buttons": this.renderNavigation && this.arrowsPlacement === CarouselArrowsPlacement_default.Navigation && !this.hideNavigationArrows
      },
      navigation: {
        "ui5-carousel-navigation-wrapper": true,
        "ui5-carousel-navigation-with-buttons": this.renderNavigation && this.arrowsPlacement === CarouselArrowsPlacement_default.Navigation && !this.hideNavigationArrows,
        [`ui5-carousel-navigation-wrapper-bg-${this.pageIndicatorBackgroundDesign.toLowerCase()}`]: true,
        [`ui5-carousel-navigation-wrapper-border-${this.pageIndicatorBorderDesign.toLowerCase()}`]: true
      }
    };
  }
  get pagesCount() {
    const items3 = this.content.length;
    return items3 > this.effectiveItemsPerPage ? items3 - this.effectiveItemsPerPage + 1 : 1;
  }
  get isPageTypeDots() {
    if (this.pageIndicatorType === CarouselPageIndicatorType_default.Numeric) {
      return false;
    }
    return this.pagesCount < Carousel_1.pageTypeLimit;
  }
  get dots() {
    const dots = [];
    const pages = this.pagesCount;
    for (let index = 0; index < pages; index++) {
      dots.push({
        active: index === this._selectedIndex,
        ariaLabel: Carousel_1.i18nBundle.getText(CAROUSEL_DOT_TEXT, index + 1, pages)
      });
    }
    return dots;
  }
  get showArrows() {
    const displayArrows = this._visibleNavigationArrows && this.hasManyPages;
    return {
      content: !this.hideNavigationArrows && displayArrows && this.arrowsPlacement === CarouselArrowsPlacement_default.Content,
      navigation: !this.hideNavigationArrows && displayArrows && this.arrowsPlacement === CarouselArrowsPlacement_default.Navigation
    };
  }
  get hasPrev() {
    return this.cyclic || this._selectedIndex - 1 >= 0;
  }
  get hasNext() {
    return this.cyclic || this._selectedIndex + 1 <= this.pagesCount - 1;
  }
  get suppressAnimation() {
    return this._resizing || getAnimationMode2() === AnimationMode_default.None;
  }
  get _isRTL() {
    return this.effectiveDir === "rtl";
  }
  get selectedIndexToShow() {
    return this._isRTL ? this.pagesCount - (this.pagesCount - this._selectedIndex) + 1 : this._selectedIndex + 1;
  }
  get ofText() {
    return Carousel_1.i18nBundle.getText(CAROUSEL_OF_TEXT);
  }
  get ariaActiveDescendant() {
    return this.content.length ? `${this._id}-carousel-item-${this._selectedIndex + 1}` : void 0;
  }
  get ariaLabelTxt() {
    return getEffectiveAriaLabelText(this);
  }
  get nextPageText() {
    return Carousel_1.i18nBundle.getText(CAROUSEL_NEXT_ARROW_TEXT);
  }
  get previousPageText() {
    return Carousel_1.i18nBundle.getText(CAROUSEL_PREVIOUS_ARROW_TEXT);
  }
  /**
   * The indices of the currently visible items of the component.
   * @public
   * @since 1.0.0-rc.15
   * @default []
   */
  get visibleItemsIndices() {
    const visibleItemsIndices = [];
    this.items.forEach((item2, index) => {
      if (this.isItemInViewport(index)) {
        visibleItemsIndices.push(index);
      }
    });
    return visibleItemsIndices;
  }
};
__decorate24([
  property_default()
], Carousel.prototype, "accessibleName", void 0);
__decorate24([
  property_default()
], Carousel.prototype, "accessibleNameRef", void 0);
__decorate24([
  property_default({ type: Boolean })
], Carousel.prototype, "cyclic", void 0);
__decorate24([
  property_default()
], Carousel.prototype, "itemsPerPage", void 0);
__decorate24([
  property_default({ type: Boolean })
], Carousel.prototype, "hideNavigationArrows", void 0);
__decorate24([
  property_default({ type: Boolean })
], Carousel.prototype, "hidePageIndicator", void 0);
__decorate24([
  property_default()
], Carousel.prototype, "pageIndicatorType", void 0);
__decorate24([
  property_default()
], Carousel.prototype, "backgroundDesign", void 0);
__decorate24([
  property_default()
], Carousel.prototype, "pageIndicatorBackgroundDesign", void 0);
__decorate24([
  property_default()
], Carousel.prototype, "pageIndicatorBorderDesign", void 0);
__decorate24([
  property_default({ type: Number })
], Carousel.prototype, "_selectedIndex", void 0);
__decorate24([
  property_default()
], Carousel.prototype, "arrowsPlacement", void 0);
__decorate24([
  property_default({ type: Number })
], Carousel.prototype, "_width", void 0);
__decorate24([
  property_default({ type: Number })
], Carousel.prototype, "_itemWidth", void 0);
__decorate24([
  property_default({ type: Boolean, noAttribute: true })
], Carousel.prototype, "_visibleNavigationArrows", void 0);
__decorate24([
  slot_default({ "default": true, type: HTMLElement, individualSlots: true })
], Carousel.prototype, "content", void 0);
__decorate24([
  i18n_default("@ui5/webcomponents")
], Carousel, "i18nBundle", void 0);
Carousel = Carousel_1 = __decorate24([
  customElement_default({
    tag: "ui5-carousel",
    languageAware: true,
    fastNavigation: true,
    renderer: JsxRenderer_default,
    styles: Carousel_css_default,
    template: CarouselTemplate
  }),
  event_strict_default("navigate", {
    bubbles: true
  })
], Carousel);
Carousel.define();
var Carousel_default = Carousel;

// node_modules/@ui5/webcomponents-react/dist/webComponents/Carousel/index.js
var Carousel3 = withWebComponent("ui5-carousel", ["accessibleName", "accessibleNameRef", "arrowsPlacement", "backgroundDesign", "itemsPerPage", "pageIndicatorBackgroundDesign", "pageIndicatorBorderDesign", "pageIndicatorType"], ["cyclic", "hideNavigationArrows", "hidePageIndicator"], [], ["navigate"]);
Carousel3.displayName = "Carousel";

// node_modules/@ui5/webcomponents/dist/ColorPaletteItemTemplate.js
function ColorPaletteItemTemplate() {
  return jsx("div", { class: "ui5-cp-item", style: {
    "background-color": this.value
  }, tabindex: parseInt(this.forcedTabIndex), role: "button", "aria-label": `${this.colorLabel} - ${this.index}: ${this.value}`, title: `${this.colorLabel} - ${this.index}: ${this.value}` });
}

// node_modules/@ui5/webcomponents/dist/generated/themes/ColorPaletteItem.css.js
registerThemePropertiesLoader("@ui5/webcomponents-theming", "sap_horizon", async () => parameters_bundle_css_default);
registerThemePropertiesLoader("@ui5/webcomponents", "sap_horizon", async () => parameters_bundle_css_default2);
var ColorPaletteItem_css_default = `:host(:not([hidden])){height:var(--_ui5-v2-8-0_color-palette-item-height);width:var(--_ui5-v2-8-0_color-palette-item-height);border:.0625rem solid var(--sapContent_ForegroundBorderColor);border-radius:var(--_ui5-v2-8-0_color-palette-item-outer-border-radius);display:inline-block;margin:var(--_ui5-v2-8-0_color-palette-item-margin);box-sizing:border-box}:host(:not([_disabled]):hover),:host([selected]){height:var(--_ui5-v2-8-0_color-palette-item-hover-height);width:var(--_ui5-v2-8-0_color-palette-item-hover-height);margin:var(--_ui5-v2-8-0_color-palette-item-hover-margin);border-radius:var(--_ui5-v2-8-0_color-palette-item-hover-outer-border-radius)}:host(:not([hidden])[on-phone]){width:calc(100% - .5rem);padding-block-start:calc(100% - .625rem);border:.0625rem solid var(--sapContent_ForegroundBorderColor);border-radius:.25rem;display:inline-block;margin:.625rem;height:0;max-width:4.5rem;max-height:4.5rem}:host([selected][on-phone]){padding-block-start:calc(100% - .125rem);width:100%;margin:0}.ui5-cp-item{position:relative;box-sizing:border-box;border-radius:var(--_ui5-v2-8-0_color-palette-item-inner-border-radius);width:100%;height:100%}:host(:not([_disabled]):not([on-phone]):hover) .ui5-cp-item{border-radius:var(--_ui5-v2-8-0_color-palette-item-hover-inner-border-radius)}:host(:not([_disabled])[on-phone]) .ui5-cp-item{border-radius:.1875rem}.ui5-cp-item:hover:not(:focus),:host([selected]:not([on-phone])) .ui5-cp-item{border-radius:var(--_ui5-v2-8-0_color-palette-item-hover-inner-border-radius);box-sizing:border-box}:host(:not([_disabled]):not([on-phone])) .ui5-cp-item:focus,:host([selected]:not([_disabled]):not([on-phone]):hover:focus) .ui5-cp-item{border:var(--_ui5-v2-8-0_color-palette-item-selected-focused-border)}:host([selected]) .ui5-cp-item:focus,:host(:not([_disabled])) .ui5-cp-item:focus{outline:none}:host(:not([_disabled]):not([on-phone]):focus) .ui5-cp-item{pointer-events:none}:host(:not([_disabled]):not([on-phone])) .ui5-cp-item:focus:not(:hover):before{content:"";box-sizing:border-box;position:absolute;inset:var(--_ui5-v2-8-0_color-palette-item-before-focus-inset);border:var(--_ui5-v2-8-0_color-palette-item-before-focus-color);border-radius:var(--_ui5-v2-8-0_color-palette-item-before-focus-border-radius);pointer-events:none}:host(:not([_disabled]):not([on-phone])) .ui5-cp-item:focus:not(:hover):after{content:"";box-sizing:border-box;position:absolute;inset:var(--_ui5-v2-8-0_color-palette-item-after-focus-inset);border:var(--_ui5-v2-8-0_color-palette-item-after-focus-color);border-radius:var(--_ui5-v2-8-0_color-palette-item-after-focus-border-radius);pointer-events:none}:host(:not([_disabled]):not([on-phone]):hover:focus) .ui5-cp-item:focus:not(:hover):before{content:"";box-sizing:border-box;position:absolute;inset:var(--_ui5-v2-8-0_color-palette-item-before-focus-hover-inset);border:var(--_ui5-v2-8-0_color-palette-item-before-focus-color);border-radius:var(--_ui5-v2-8-0_color-palette-item-before-focus-border-radius);pointer-events:none}:host(:not([_disabled]):not([on-phone]):focus:not(:hover)) .ui5-cp-item:focus:not(:hover):after{content:"";box-sizing:border-box;position:absolute;inset:var(--_ui5-v2-8-0_color-palette-item-after-focus-hover-inset);border:var(--_ui5-v2-8-0_color-palette-item-after-focus-color);border-radius:var(--_ui5-v2-8-0_color-palette-item-after-focus-border-radius);pointer-events:none}:host([selected]:not([_disabled]):not([on-phone]):not(:focus):not(:hover)) .ui5-cp-item:after,:host([selected]:not([_disabled]):not([on-phone]):not(:focus):hover) .ui5-cp-item:after,:host(:not([selected]):not([on-phone]):hover) .ui5-cp-item:after{content:"";box-sizing:border-box;position:absolute;inset:calc(var(--_ui5-v2-8-0_color-palette-item-after-focus-hover-inset) - .0625rem);border:var(--_ui5-v2-8-0_color-palette-item-after-not-focus-color);border-radius:calc(var(--_ui5-v2-8-0_color-palette-item-after-focus-border-radius) + .0625rem);pointer-events:none}:host(:not([_disabled]):not([on-phone]):not([selected]):not(:hover)) .ui5-cp-item:focus:not(:hover):after{border:var(--_ui5-v2-8-0_color-palette-item-after-focus-not-selected-border)}:host([selected]:not([_disabled]):not([on-phone])) .ui5-cp-item:focus:not(:hover):before,:host([selected]:not([_disabled]):not([on-phone])) .ui5-cp-item:focus:hover:before{content:"";box-sizing:border-box;position:absolute;inset:var(--_ui5-v2-8-0_color-palette-item-selected-focused-border-before);border:var(--_ui5-v2-8-0_color-palette-item-before-focus-color);border-radius:var(--_ui5-v2-8-0_color-palette-item-before-focus-border-radius);pointer-events:none}:host(:not([disabled])) .ui5-cp-item:focus-visible:before,:host(:not([disabled])) .ui5-cp-item:focus-visible:after{content:"";box-sizing:border-box;position:absolute;pointer-events:none}:host(:not([disabled])) .ui5-cp-item:focus-visible:before{inset:calc(100% - var(--_ui5-v2-8-0_color_palette_item_height) + var(--_ui5-v2-8-0-color-palette-item-mobile-focus-inset)) var(--_ui5-v2-8-0_color-palette-item-mobile-focus-sides-inset);border:var(--_ui5-v2-8-0_color-palette-item-before-focus-color);border-radius:var(--_ui5-v2-8-0_color-palette-item-after-focus-border-radius)}:host(:not([disabled])) .ui5-cp-item:focus-visible:after{inset:calc(100% - var(--_ui5-v2-8-0_color_palette_item_height) + var(--_ui5-v2-8-0-color-palette-item-mobile-focus-inset)) var(--_ui5-v2-8-0_color-palette-item-mobile-focus-sides-inset);border:var(--_ui5-v2-8-0_color-palette-item-after-mobile-focus-border)}
`;

// node_modules/@ui5/webcomponents/dist/ColorPaletteItem.js
var __decorate25 = function(decorators, target, key, desc) {
  var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
  if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
  else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
  return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var ColorPaletteItem_1;
var ColorPaletteItem = ColorPaletteItem_1 = class ColorPaletteItem2 extends UI5Element_default {
  constructor() {
    super();
    this.value = "";
    this.selected = false;
    this.forcedTabIndex = "-1";
    this.onPhone = false;
    this._disabled = false;
  }
  onBeforeRendering() {
    this._disabled = !this.value;
    this.onPhone = isPhone();
    this.setAttribute("style", `background-color: ${this.value}`);
    const itemHeight = this.offsetHeight + 4;
    this.style.setProperty(getScopedVarName("--_ui5_color_palette_item_height"), `${itemHeight}px`);
  }
  get colorLabel() {
    return ColorPaletteItem_1.i18nBundle.getText(COLORPALETTE_COLOR_LABEL);
  }
  get styles() {
    return {
      root: {
        "background-color": this.value
      }
    };
  }
  get classes() {
    return {
      root: {
        "ui5-cp-item": true
      }
    };
  }
};
__decorate25([
  property_default()
], ColorPaletteItem.prototype, "value", void 0);
__decorate25([
  property_default({ type: Boolean })
], ColorPaletteItem.prototype, "selected", void 0);
__decorate25([
  property_default({ noAttribute: true })
], ColorPaletteItem.prototype, "forcedTabIndex", void 0);
__decorate25([
  property_default({ type: Number })
], ColorPaletteItem.prototype, "index", void 0);
__decorate25([
  property_default({ type: Boolean })
], ColorPaletteItem.prototype, "onPhone", void 0);
__decorate25([
  property_default({ type: Boolean })
], ColorPaletteItem.prototype, "_disabled", void 0);
__decorate25([
  i18n_default("@ui5/webcomponents")
], ColorPaletteItem, "i18nBundle", void 0);
ColorPaletteItem = ColorPaletteItem_1 = __decorate25([
  customElement_default({
    tag: "ui5-color-palette-item",
    renderer: JsxRenderer_default,
    styles: ColorPaletteItem_css_default,
    template: ColorPaletteItemTemplate,
    shadowRootOptions: { delegatesFocus: true }
  })
], ColorPaletteItem);
ColorPaletteItem.define();
var ColorPaletteItem_default = ColorPaletteItem;

// node_modules/@ui5/webcomponents/dist/ColorPaletteTemplate.js
function ColorPaletteTemplate() {
  var _a;
  return jsxs(Fragment, { children: [jsxs("div", { class: {
    "ui5-cp-root": true,
    "ui5-cp-root-phone": isPhone()
  }, onClick: this._onclick, onKeyUp: this._onkeyup, onKeyDown: this._onkeydown, children: [this.showDefaultColor && jsxs("div", { class: "ui5-cp-default-color-button-wrapper", children: [jsx(Button_default, { class: "ui5-cp-default-color-button", design: "Transparent", onClick: this._onDefaultColorClick, onKeyUp: this._onDefaultColorKeyUp, onKeyDown: this._onDefaultColorKeyDown, children: this.colorPaletteDefaultColorText }), jsx("div", { class: "ui5-cp-separator" })] }), jsx("div", { class: "ui5-cp-item-container", role: "region", "aria-label": this.colorContainerLabel, onKeyDown: this._onColorContainerKeyDown, children: this.displayedColors.map((color) => jsx("slot", { name: color._individualSlot })) }), this.showMoreColors && jsxs("div", { class: "ui5-cp-more-colors-wrapper", children: [jsx("div", { class: "ui5-cp-separator" }), jsx(Button_default, { design: "Transparent", class: "ui5-cp-more-colors", onClick: this._openMoreColorsDialog, onKeyDown: this._onMoreColorsKeyDown, children: this.colorPaletteMoreColorsText })] }), this.showRecentColors && jsxs("div", { class: "ui5-cp-recent-colors-wrapper", children: [jsx("div", { class: "ui5-cp-separator" }), jsx("div", { class: "ui5-cp-recent-colors-container", onKeyDown: this._onRecentColorsContainerKeyDown, children: this.recentColors.map((color) => jsx(ColorPaletteItem_default, { value: color })) })] })] }), this.showMoreColors && ((_a = this.showMoreColorsTemplate) == null ? void 0 : _a.call(this))] });
}

// node_modules/@ui5/webcomponents/dist/generated/themes/ColorPalette.css.js
registerThemePropertiesLoader("@ui5/webcomponents-theming", "sap_horizon", async () => parameters_bundle_css_default);
registerThemePropertiesLoader("@ui5/webcomponents", "sap_horizon", async () => parameters_bundle_css_default2);
var ColorPalette_css_default = `:host(:not([hidden])){display:inline-block}:host(:not([hidden])[popup-mode]),:host(:not([hidden])[on-phone]){width:100%;overflow:hidden}.ui5-cp-root{display:flex;flex-direction:column}.ui5-cp-root.ui5-cp-root-phone,.ui5-cp-separator,.ui5-cp-root.ui5-cp-root-phone .ui5-cp-more-colors-wrapper,.ui5-cp-root.ui5-cp-root-phone .ui5-cp-default-color-button-wrapper,.ui5-cp-recent-colors-wrapper{width:100%}.ui5-cp-root.ui5-cp-root-phone .ui5-cp-item-container{padding:.375rem .625rem;width:100%;max-width:100%;max-height:100%;box-sizing:border-box}.ui5-cp-root-phone .ui5-cp-default-color-button,.ui5-cp-root-phone .ui5-cp-more-colors,.ui5-cp-root-phone .ui5-cp-more-colors-wrapper,.ui5-cp-root-phone .ui5-cp-default-color-button-wrapper{height:2.875rem}.ui5-cp-root-phone .ui5-cp-item-container{display:grid;grid-template-columns:repeat(5,1fr);grid-gap:.75rem;justify-items:center;align-items:center}.ui5-cp-root-phone .ui5-cp-recent-colors-container{padding:.375rem .625rem;display:grid;grid-template-columns:repeat(5,1fr);grid-gap:.75rem;justify-items:center;align-items:center;width:100%;box-sizing:border-box}.ui5-cp-root-phone .ui5-cp-recent-colors-wrapper{max-width:100%;padding:0;display:flex;justify-content:center;flex-flow:wrap;max-height:var(--_ui5-v2-8-0_color-palette-row-height);overflow:hidden}.ui5-cp-recent-colors-wrapper{display:flex;align-items:center;flex-direction:column;gap:.25rem}.ui5-cp-root.ui5-cp-root-phone{display:flex}.ui5-cp-item-container{display:flex;max-width:var(--_ui5-v2-8-0_color-palette-row-width);flex-flow:wrap;max-height:var(--_ui5-v2-8-0_color-palette-row-height);overflow:hidden;padding:var(--_ui5-v2-8-0_color-palette-swatch-container-padding)}.ui5-cp-more-colors,.ui5-cp-default-color-button{width:100%;height:var(--_ui5-v2-8-0_color-palette-button-height);text-align:center;border:none}.ui5-cp-more-colors-wrapper,.ui5-cp-default-color-button-wrapper{display:flex;flex-direction:column}.ui5-cp-separator{height:.0625rem;background:var(--sapToolbar_SeparatorColor)}.ui5-cp-default-color-button,.ui5-cp-more-colors{padding:.0625rem}
`;

// node_modules/@ui5/webcomponents/dist/generated/themes/ColorPaletteDialog.css.js
registerThemePropertiesLoader("@ui5/webcomponents-theming", "sap_horizon", async () => parameters_bundle_css_default);
registerThemePropertiesLoader("@ui5/webcomponents", "sap_horizon", async () => parameters_bundle_css_default2);
var ColorPaletteDialog_css_default = `.ui5-cp-dialog-content{display:flex;justify-content:center;align-items:center;margin:1rem 0}.ui5-cp-dialog-footer{width:100%;display:flex;justify-content:flex-end;margin:.1875rem 1rem}.ui5-cp-dialog-footer [ui5-button]:first-child{margin-right:1rem}
`;

// node_modules/@ui5/webcomponents/dist/ColorPalette.js
var __decorate26 = function(decorators, target, key, desc) {
  var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
  if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
  else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
  return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var ColorPalette_1;
var ColorPalette = ColorPalette_1 = class ColorPalette2 extends UI5Element_default {
  constructor() {
    super();
    this.showRecentColors = false;
    this.showMoreColors = false;
    this.showDefaultColor = false;
    this.popupMode = false;
    this.onPhone = false;
    this.dialogOpen = false;
    this.colorPickerValue = "rgba(255,255,255,1)";
    this._shouldFocusRecentColors = false;
    this._itemNavigation = new ItemNavigation_default(this, {
      getItemsCallback: () => this.displayedColors,
      rowSize: this.rowSize,
      behavior: ItemNavigationBehavior_default.Cyclic
    });
    this._itemNavigationRecentColors = new ItemNavigation_default(this, {
      getItemsCallback: () => this.recentColorsElements,
      rowSize: this.rowSize,
      behavior: ItemNavigationBehavior_default.Static
    });
    this._recentColors = [];
  }
  onBeforeRendering() {
    this._ensureSingleSelectionOrDeselectAll();
    const selectedItem = this.selectedItem;
    if (selectedItem && !this.showRecentColors) {
      this._selectedColor = selectedItem.value;
    }
    this.displayedColors.forEach((item2, index) => {
      item2.index = index + 1;
    });
    if (this.showMoreColors) {
      if (ColorPalette_1.ColorPaletteMoreColorsTemplate) {
        this.showMoreColorsTemplate = ColorPalette_1.ColorPaletteMoreColorsTemplate;
      } else {
        import("./ColorPaletteMoreColorsTemplate-U7ET6NEB.js").then((module) => {
          this.showMoreColorsTemplate = module.default;
        });
      }
    }
    this.onPhone = isPhone();
  }
  onAfterRendering() {
    if (this.hasRecentColors && this._shouldFocusRecentColors) {
      if (this.selectedItem) {
        this.selectedItem.selected = false;
      }
      const firstRecentColor = this.recentColorsElements[0];
      firstRecentColor.selected = true;
      this._currentlySelected = firstRecentColor;
      this._currentlySelected.focus();
      this._shouldFocusRecentColors = false;
    }
  }
  selectColor(item2) {
    if (!item2.value) {
      return;
    }
    item2.focus();
    if (this.displayedColors.includes(item2)) {
      this._itemNavigation.setCurrentItem(item2);
    }
    this._setColor(item2.value);
  }
  _setColor(color) {
    this._selectedColor = color;
    if (this._recentColors[0] !== this._selectedColor) {
      if (this._recentColors.includes(this._selectedColor)) {
        this._recentColors.unshift(this._recentColors.splice(this._recentColors.indexOf(this._selectedColor), 1)[0]);
      } else {
        this._addRecentColor(this._selectedColor);
      }
    }
    this.fireDecoratorEvent("item-click", {
      color: this._selectedColor
    });
  }
  get effectiveColorItems() {
    let colorItems = this.colors;
    if (this.popupMode) {
      colorItems = this.getSlottedNodes("colors");
    }
    return colorItems;
  }
  /**
   * Ensures that only one item is selected or only the last selected item remains active if more than one are explicitly set as 'selected'.
   * @private
   */
  _ensureSingleSelectionOrDeselectAll() {
    let lastSelectedItem;
    this.allColorsInPalette.forEach((item2) => {
      if (item2.selected) {
        if (lastSelectedItem) {
          lastSelectedItem.selected = false;
        }
        lastSelectedItem = item2;
      }
    });
  }
  _onclick(e) {
    this.handleSelection(e.target);
  }
  _onkeyup(e) {
    const target = e.target;
    if (isSpace(e)) {
      e.preventDefault();
      this.handleSelection(target);
    }
  }
  _onkeydown(e) {
    const target = e.target;
    if (isEnter(e)) {
      this.handleSelection(target);
    }
    if (isSpace(e)) {
      e.preventDefault();
    }
  }
  handleSelection(target) {
    if (!target.hasAttribute("ui5-color-palette-item") || !target.value) {
      return;
    }
    this._shouldFocusRecentColors = false;
    this.selectColor(target);
    if (this.recentColorsElements.includes(target)) {
      this.recentColorsElements[0].selected = true;
      this.recentColorsElements[0].focus();
      this._currentlySelected = this.recentColorsElements[0];
    } else {
      this.allColorsInPalette.forEach((item2) => {
        item2.selected = item2 === target;
      });
      this._currentlySelected = target;
    }
    this._ensureSingleSelectionOrDeselectAll();
  }
  _handleDefaultColorClick(e) {
    e.preventDefault();
    this._onDefaultColorClick();
  }
  _onDefaultColorKeyUp(e) {
    if (isSpace(e)) {
      this._handleDefaultColorClick(e);
    }
  }
  _onDefaultColorKeyDown(e) {
    if (isTabNext(e) && this.popupMode) {
      this._handleDefaultColorClick(e);
    }
    if (isEnter(e)) {
      this._handleDefaultColorClick(e);
    }
    if (isDown(e)) {
      e.stopPropagation();
      this.focusColorElement(this.colorPaletteNavigationElements[1], this._itemNavigation);
    } else if (isUp(e)) {
      e.stopPropagation();
      const lastElementInNavigation = this.colorPaletteNavigationElements[this.colorPaletteNavigationElements.length - 1];
      if (this.hasRecentColors) {
        this.focusColorElement(lastElementInNavigation, this._itemNavigationRecentColors);
      } else if (this.showMoreColors) {
        lastElementInNavigation.focus();
      } else {
        const colorPaletteFocusIndex = this.displayedColors.length % this.rowSize * this.rowSize;
        this.focusColorElement(this.displayedColors[colorPaletteFocusIndex], this._itemNavigation);
      }
    }
  }
  _onMoreColorsKeyDown(e) {
    const target = e.target;
    const index = this.colorPaletteNavigationElements.indexOf(target);
    const colorPaletteFocusIndex = this.displayedColors.length % this.rowSize * this.rowSize;
    if (isUp(e)) {
      e.stopPropagation();
      this.focusColorElement(this.displayedColors[colorPaletteFocusIndex], this._itemNavigation);
    } else if (isDown(e)) {
      e.stopPropagation();
      if (this.hasRecentColors) {
        this.focusColorElement(this.colorPaletteNavigationElements[index + 1], this._itemNavigationRecentColors);
      } else if (this.showDefaultColor) {
        this.firstFocusableElement.focus();
      } else {
        this.focusColorElement(this.displayedColors[0], this._itemNavigation);
      }
    }
  }
  _isUpOrDownNavigatableColorPaletteItem(e) {
    return (isUp(e) || isDown(e)) && this._currentlySelected && this.colorPaletteNavigationElements.includes(this._currentlySelected);
  }
  _onColorContainerKeyDown(e) {
    const target = e.target;
    const lastElementInNavigation = this.colorPaletteNavigationElements[this.colorPaletteNavigationElements.length - 1];
    if (this._isUpOrDownNavigatableColorPaletteItem(e)) {
      this._currentlySelected = void 0;
    }
    if (isTabNext(e) && this.popupMode) {
      e.preventDefault();
      this.selectColor(target);
    }
    if (isUp(e) && target === this.displayedColors[0] && this.colorPaletteNavigationElements.length > 1) {
      e.stopPropagation();
      if (this.showDefaultColor) {
        this.firstFocusableElement.focus();
      } else if (!this.showDefaultColor && this.hasRecentColors) {
        this.focusColorElement(lastElementInNavigation, this._itemNavigationRecentColors);
      } else if (!this.showDefaultColor && this.showMoreColors) {
        lastElementInNavigation.focus();
      }
    } else if (isDown(e) && target === this.displayedColors[this.displayedColors.length - 1] && this.colorPaletteNavigationElements.length > 1) {
      e.stopPropagation();
      const isRecentColorsNextElement = this.showDefaultColor && !this.showMoreColors && this.hasRecentColors || !this.showDefaultColor && !this.showMoreColors && this.hasRecentColors;
      if (this.showDefaultColor && this.showMoreColors) {
        this.colorPaletteNavigationElements[2].focus();
      } else if (this.showDefaultColor && !this.showMoreColors && (!this.showRecentColors || !this.recentColors[0])) {
        this.firstFocusableElement.focus();
      } else if (isRecentColorsNextElement) {
        this.focusColorElement(lastElementInNavigation, this._itemNavigationRecentColors);
      } else if (!this.showDefaultColor && this.showMoreColors) {
        this.colorPaletteNavigationElements[1].focus();
      }
    }
  }
  _onRecentColorsContainerKeyDown(e) {
    if (this._isUpOrDownNavigatableColorPaletteItem(e)) {
      this._currentlySelected = void 0;
    }
    if (isUp(e)) {
      if (this.showMoreColors) {
        const navigationElementsIndex = this.showDefaultColor ? 2 : 1;
        this.colorPaletteNavigationElements[navigationElementsIndex].focus();
      } else if (!this.showMoreColors && this.colorPaletteNavigationElements.length > 1) {
        const colorPaletteFocusIndex = this.displayedColors.length % this.rowSize * this.rowSize;
        e.stopPropagation();
        this.focusColorElement(this.displayedColors[colorPaletteFocusIndex], this._itemNavigation);
      }
    } else if (isDown(e)) {
      if (this.showDefaultColor) {
        this.firstFocusableElement.focus();
      } else {
        e.stopPropagation();
        this.focusColorElement(this.displayedColors[0], this._itemNavigation);
      }
    }
  }
  focusColorElement(element, itemNavigation) {
    itemNavigation.setCurrentItem(element);
    itemNavigation._focusCurrentItem();
  }
  get firstFocusableElement() {
    return this.colorPaletteNavigationElements[0];
  }
  onColorPickerChange(e) {
    this.colorPickerValue = e.target.value;
  }
  _chooseCustomColor() {
    this._setColor(this.colorPickerValue);
    this._closeDialog();
    this._shouldFocusRecentColors = true;
  }
  _addRecentColor(color) {
    if (this.showRecentColors && !this._recentColors.includes(color)) {
      this._recentColors.unshift(color);
      if (this._recentColors.length > this.rowSize) {
        this._recentColors.pop();
      }
    }
  }
  _closeDialog() {
    this.dialogOpen = false;
  }
  _openMoreColorsDialog() {
    const value = this._currentlySelected ? this._currentlySelected.value : void 0;
    if (value) {
      this.colorPickerValue = value;
    }
    this.dialogOpen = true;
  }
  _onDefaultColorClick() {
    if (this.defaultColor) {
      this._setColor(this.defaultColor);
      this._addRecentColor(this.defaultColor);
      if (this.selectedItem) {
        this.selectedItem.selected = false;
        this._currentlySelected = void 0;
      }
    }
  }
  /**
   * Returns the selected item.
   */
  get selectedItem() {
    return this.allColorsInPalette.find((item2) => item2.selected);
  }
  get allColorsInPalette() {
    return [...this.effectiveColorItems, ...this.recentColorsElements];
  }
  get colorPaletteDialogTitle() {
    return ColorPalette_1.i18nBundle.getText(COLOR_PALETTE_DIALOG_TITLE);
  }
  get colorPaletteDialogOKButton() {
    return ColorPalette_1.i18nBundle.getText(COLOR_PALETTE_DIALOG_OK_BUTTON);
  }
  get colorPaletteCancelButton() {
    return ColorPalette_1.i18nBundle.getText(COLOR_PALETTE_DIALOG_CANCEL_BUTTON);
  }
  /**
   * Returns the selected color.
   */
  get selectedColor() {
    return this._selectedColor;
  }
  get displayedColors() {
    const colors = this.getSlottedNodes("colors");
    return colors.filter((item2) => item2.value).slice(0, 15);
  }
  get colorContainerLabel() {
    return ColorPalette_1.i18nBundle.getText(COLORPALETTE_CONTAINER_LABEL);
  }
  get colorPaletteMoreColorsText() {
    return ColorPalette_1.i18nBundle.getText(COLOR_PALETTE_MORE_COLORS_TEXT);
  }
  get colorPaletteDefaultColorText() {
    return ColorPalette_1.i18nBundle.getText(COLOR_PALETTE_DEFAULT_COLOR_TEXT);
  }
  get rowSize() {
    return 5;
  }
  get hasRecentColors() {
    return this.showRecentColors && this.recentColors[0];
  }
  get recentColors() {
    if (this._recentColors.length > this.rowSize) {
      this._recentColors = this._recentColors.slice(0, this.rowSize);
    }
    while (this._recentColors.length < this.rowSize) {
      this._recentColors.push("");
    }
    return this._recentColors;
  }
  get recentColorsElements() {
    const domRef = this.getDomRef();
    if (domRef) {
      return Array.from(domRef.querySelectorAll(".ui5-cp-recent-colors-wrapper [ui5-color-palette-item]")).filter((x) => x.value !== "");
    }
    return [];
  }
  get colorPaletteNavigationElements() {
    const navigationElements = [];
    const rootElement = this.shadowRoot.querySelector(".ui5-cp-root");
    if (this._currentlySelected) {
      navigationElements.push(this._currentlySelected);
    }
    if (this.showDefaultColor) {
      navigationElements.push(rootElement.querySelector(".ui5-cp-default-color-button"));
    }
    navigationElements.push(this.displayedColors[0]);
    if (this.showMoreColors) {
      navigationElements.push(rootElement.querySelector(".ui5-cp-more-colors"));
    }
    if (this.showRecentColors && !!this.recentColorsElements.length) {
      navigationElements.push(this.recentColorsElements[0]);
    }
    return navigationElements;
  }
  get classes() {
    return {
      colorPaletteRoot: {
        "ui5-cp-root": true,
        "ui5-cp-root-phone": isPhone()
      }
    };
  }
};
__decorate26([
  property_default({ type: Boolean })
], ColorPalette.prototype, "showRecentColors", void 0);
__decorate26([
  property_default({ type: Boolean })
], ColorPalette.prototype, "showMoreColors", void 0);
__decorate26([
  property_default({ type: Boolean })
], ColorPalette.prototype, "showDefaultColor", void 0);
__decorate26([
  property_default()
], ColorPalette.prototype, "defaultColor", void 0);
__decorate26([
  property_default()
], ColorPalette.prototype, "_selectedColor", void 0);
__decorate26([
  property_default({ type: Boolean })
], ColorPalette.prototype, "popupMode", void 0);
__decorate26([
  property_default({ type: Boolean })
], ColorPalette.prototype, "onPhone", void 0);
__decorate26([
  property_default({ noAttribute: true })
], ColorPalette.prototype, "showMoreColorsTemplate", void 0);
__decorate26([
  property_default({ type: Boolean })
], ColorPalette.prototype, "dialogOpen", void 0);
__decorate26([
  property_default()
], ColorPalette.prototype, "colorPickerValue", void 0);
__decorate26([
  slot_default({
    "default": true,
    type: HTMLElement,
    invalidateOnChildChange: true,
    individualSlots: true
  })
], ColorPalette.prototype, "colors", void 0);
__decorate26([
  i18n_default("@ui5/webcomponents")
], ColorPalette, "i18nBundle", void 0);
ColorPalette = ColorPalette_1 = __decorate26([
  customElement_default({
    tag: "ui5-color-palette",
    renderer: JsxRenderer_default,
    template: ColorPaletteTemplate,
    styles: [ColorPalette_css_default, ColorPaletteDialog_css_default]
  }),
  event_strict_default("item-click")
], ColorPalette);
ColorPalette.define();
var ColorPalette_default = ColorPalette;

// node_modules/@ui5/webcomponents-react/dist/webComponents/ColorPalette/index.js
var ColorPalette3 = withWebComponent("ui5-color-palette", [], [], [], ["item-click"]);
ColorPalette3.displayName = "ColorPalette";

// node_modules/@ui5/webcomponents-react/dist/webComponents/ColorPaletteItem/index.js
var ColorPaletteItem3 = withWebComponent("ui5-color-palette-item", ["value"], ["selected"], [], []);
ColorPaletteItem3.displayName = "ColorPaletteItem";

// node_modules/@ui5/webcomponents/dist/ColorPalettePopoverTemplate.js
function ColorPalettePopoverTemplate() {
  return jsxs(ResponsivePopover_default, { hideArrow: true, contentOnlyOnDesktop: true, placement: "Bottom", opener: this.opener, open: this._open, onClose: this.onAfterClose, onOpen: this.onAfterOpen, children: [jsx("div", { slot: "header", class: "ui5-cp-header", children: jsx(Title_default, { level: "H1", wrappingType: "None", children: this._colorPaletteTitle }) }), jsx("div", { children: jsx(ColorPalette_default, { showMoreColors: this.showMoreColors, showRecentColors: this.showRecentColors, showDefaultColor: this.showDefaultColor, defaultColor: this.defaultColor, popupMode: true, onItemClick: this.onSelectedColor, children: this.colorPaletteColors.map((color) => jsx("slot", { name: color._individualSlot })) }) }), jsx("div", { slot: "footer", class: "ui5-cp-footer", children: jsx(Button_default, { design: "Transparent", onClick: this.closePopover, children: this._cancelButtonLabel }) })] });
}

// node_modules/@ui5/webcomponents/dist/generated/themes/ColorPalettePopover.css.js
registerThemePropertiesLoader("@ui5/webcomponents-theming", "sap_horizon", async () => parameters_bundle_css_default);
registerThemePropertiesLoader("@ui5/webcomponents", "sap_horizon", async () => parameters_bundle_css_default2);
var ColorPalettePopover_css_default = `.ui5-cp-header{width:100%;height:var(--_ui5-v2-8-0_color-palette-button-height);display:flex;align-items:center}.ui5-cp-footer{width:100%;display:flex;justify-content:flex-end;align-items:center;margin:.1875rem 0}[ui5-responsive-popover]::part(content){padding:0}.ui5-cp-item-container{padding:.3125rem .6875rem}
`;

// node_modules/@ui5/webcomponents/dist/ColorPalettePopover.js
var __decorate27 = function(decorators, target, key, desc) {
  var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
  if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
  else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
  return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var ColorPalettePopover_1;
var ColorPalettePopover = ColorPalettePopover_1 = class ColorPalettePopover2 extends UI5Element_default {
  constructor() {
    super();
    this.showRecentColors = false;
    this.showMoreColors = false;
    this.showDefaultColor = false;
    this.open = false;
  }
  get responsivePopover() {
    return this.shadowRoot.querySelector("[ui5-responsive-popover]");
  }
  get respPopover() {
    return this.shadowRoot.querySelector("[ui5-responsive-popover]");
  }
  closePopover() {
    this.open = false;
  }
  onAfterClose() {
    this.closePopover();
    this.fireDecoratorEvent("close");
  }
  onAfterOpen() {
    var _a;
    const colorPalette = this._colorPalette;
    if (colorPalette._currentlySelected) {
      (_a = colorPalette._currentlySelected) == null ? void 0 : _a.focus();
    } else if (colorPalette.showRecentColors && colorPalette.recentColorsElements.length) {
      colorPalette.recentColorsElements[0].focus();
    } else if (colorPalette.showDefaultColor) {
      colorPalette.colorPaletteNavigationElements[0].focus();
    }
    colorPalette.allColorsInPalette.forEach((item2) => {
      const itemHeight = item2.offsetHeight + 4;
      item2.style.setProperty(getScopedVarName("--_ui5_color_palette_item_height"), `${itemHeight}px`);
    });
  }
  onSelectedColor(e) {
    this.closePopover();
    this.fireDecoratorEvent("item-click", e.detail);
  }
  get _colorPalette() {
    return this.responsivePopover.content[0].querySelector("[ui5-color-palette]");
  }
  /**
   * Returns if the component is opened.
   * @protected
   * @since 1.0.0-rc.16
   */
  isOpen() {
    return this.open;
  }
  get colorPaletteColors() {
    return this.getSlottedNodes("colors");
  }
  get _colorPaletteTitle() {
    return ColorPalettePopover_1.i18nBundle.getText(COLORPALETTE_POPOVER_TITLE);
  }
  get _cancelButtonLabel() {
    return ColorPalettePopover_1.i18nBundle.getText(COLOR_PALETTE_DIALOG_CANCEL_BUTTON);
  }
  get _open() {
    return this.open || void 0;
  }
};
__decorate27([
  property_default({ type: Boolean })
], ColorPalettePopover.prototype, "showRecentColors", void 0);
__decorate27([
  property_default({ type: Boolean })
], ColorPalettePopover.prototype, "showMoreColors", void 0);
__decorate27([
  property_default({ type: Boolean })
], ColorPalettePopover.prototype, "showDefaultColor", void 0);
__decorate27([
  property_default()
], ColorPalettePopover.prototype, "defaultColor", void 0);
__decorate27([
  property_default({ type: Boolean })
], ColorPalettePopover.prototype, "open", void 0);
__decorate27([
  property_default({ converter: DOMReference_default })
], ColorPalettePopover.prototype, "opener", void 0);
__decorate27([
  slot_default({ "default": true, type: HTMLElement, individualSlots: true })
], ColorPalettePopover.prototype, "colors", void 0);
__decorate27([
  i18n_default("@ui5/webcomponents")
], ColorPalettePopover, "i18nBundle", void 0);
ColorPalettePopover = ColorPalettePopover_1 = __decorate27([
  customElement_default({
    tag: "ui5-color-palette-popover",
    renderer: JsxRenderer_default,
    styles: [ResponsivePopoverCommon_css_default, ColorPalettePopover_css_default],
    template: ColorPalettePopoverTemplate
  }),
  event_strict_default("item-click", {
    bubbles: true
  }),
  event_strict_default("close", {
    bubbles: true
  })
], ColorPalettePopover);
ColorPalettePopover.define();

// node_modules/@ui5/webcomponents-react/dist/webComponents/ColorPalettePopover/index.js
var ColorPalettePopover3 = withWebComponent("ui5-color-palette-popover", ["defaultColor", "opener"], ["open", "showDefaultColor", "showMoreColors", "showRecentColors"], [], ["close", "item-click"]);
ColorPalettePopover3.displayName = "ColorPalettePopover";

// node_modules/@ui5/webcomponents-react/dist/webComponents/ColorPicker/index.js
var ColorPicker = withWebComponent("ui5-color-picker", ["name", "value"], ["simplified"], [], ["change"]);
ColorPicker.displayName = "ColorPicker";

// node_modules/@ui5/webcomponents/dist/ComboBoxPopoverTemplate.js
function ComboBoxPopoverTemplate() {
  return jsxs(Fragment, { children: [jsxs(ResponsivePopover_default, { id: this.responsivePopoverId, class: this.classes.popover, style: this.styles.suggestionsPopover, tabindex: -1, open: this.open, opener: this, hideArrow: true, preventFocusRestore: true, preventInitialFocus: true, placement: "Bottom", horizontalAlign: "Start", accessibleName: this._popupLabel, onBeforeOpen: this._beforeOpenPopover, onOpen: this._afterOpenPopover, onClose: this._afterClosePopover, onKeyDown: this._handlePopoverKeydown, onFocusOut: this._handlePopoverFocusout, children: [jsx(BusyIndicator_default, { active: this.loading, class: "ui5-combobox-busy" }), this._isPhone && jsxs(Fragment, { children: [jsxs("div", { slot: "header", class: "ui5-responsive-popover-header", children: [jsxs("div", { class: "row", children: [jsx("span", { children: this._headerTitleText }), jsx(Button_default, { class: "ui5-responsive-popover-close-btn", icon: decline_default, design: "Transparent", onClick: this._closeRespPopover })] }), jsx("div", { class: "row", children: jsx(Input_default, { open: this.openOnMobile, placeholder: this.placeholder, valueState: this.valueState, showClearIcon: this.showClearIcon, noTypeahead: this.noTypeahead, onKeyDown: this._handleMobileKeydown, onInput: this._handleMobileInput, onChange: this._inputChange, children: this._filteredItems.map((item2) => jsx(SuggestionItem_default, { text: item2.text, "additional-text": item2.additionalText })) }) })] }), this.hasValueStateText && jsxs("div", { class: this.classes.popoverValueState, style: this.styles.popoverValueStateMessage, children: [jsx(Icon_default, { class: "ui5-input-value-state-message-icon", name: this._valueStateMessageIcon }), this.open && valueStateMessage.call(this)] })] }), !this._isPhone && this.hasValueStateText && jsxs("div", { slot: "header", class: {
    "ui5-responsive-popover-header": true,
    "ui5-responsive-popover-header--focused": this._isValueStateFocused,
    ...this.classes.popoverValueState
  }, style: this.styles.suggestionPopoverHeader, children: [jsx(Icon_default, { class: "ui5-input-value-state-message-icon", name: this._valueStateMessageIcon }), this.open && valueStateMessage.call(this)] }), jsx(List_default, { class: "ui5-combobox-items-list", separators: "None", accessibleRole: "ListBox", selectionMode: "Single", onItemClick: this._selectItem, onItemFocused: this._onItemFocus, onMouseDown: this._itemMousedown, children: this._filteredItems.map((item2) => jsx("slot", { name: item2._individualSlot })) }), this._isPhone && jsx("div", { slot: "footer", class: "ui5-responsive-popover-footer", children: jsx(Button_default, { design: "Transparent", onClick: this._closeRespPopover, children: "OK" }) })] }), this.shouldOpenValueStateMessagePopover && jsx(Popover_default, { preventFocusRestore: true, preventInitialFocus: true, hideArrow: true, tabindex: -1, class: "ui5-valuestatemessage-popover", horizontalAlign: this._valueStatePopoverHorizontalAlign, placement: "Bottom", opener: this, open: this.valueStateOpen, onClose: this._handleValueStatePopoverAfterClose, onFocusOut: this._handleValueStatePopoverFocusout, children: jsxs("div", { slot: "header", class: this.classes.popoverValueState, style: this.styles.popoverHeader, children: [jsx(Icon_default, { class: "ui5-input-value-state-message-icon", name: this._valueStateMessageIcon }), valueStateMessage.call(this)] }) })] });
}
function valueStateMessage() {
  return jsx(Fragment, { children: this.shouldDisplayDefaultValueStateMessage ? this.valueStateDefaultText : jsx("slot", { name: "valueStateMessage" }) });
}

// node_modules/@ui5/webcomponents/dist/ComboBoxTemplate.js
function ComboBoxTemplate() {
  return jsxs(Fragment, { children: [jsxs("div", { class: "ui5-combobox-root ui5-input-focusable-element", children: [this.hasValueState && jsx("span", { id: "value-state-description", class: "ui5-hidden-text", children: this.ariaValueStateHiddenText }), jsx("input", { id: "ui5-combobox-input", value: this.value, "inner-input": true, placeholder: this.placeholder, disabled: this.disabled, readonly: this.readonly, "value-state": this.valueState, onKeyDown: this._keydown, onInput: this._input, onChange: this._inputChange, onClick: this._click, onKeyUp: this._keyup, onFocusIn: this._focusin, onFocusOut: this._focusout, "aria-expanded": this.open, role: "combobox", "aria-haspopup": "dialog", "aria-autocomplete": "both", "aria-describedby": "value-state-description", "aria-label": this.ariaLabelText, "aria-required": this.required, "aria-controls": this.responsivePopoverId, autocomplete: "off", "data-sap-focus-ref": true }), this._effectiveShowClearIcon && jsx("div", { onClick: this._clear, class: "ui5-input-clear-icon-wrapper inputIcon", tabindex: -1, children: jsx(Icon_default, { tabindex: -1, class: "ui5-input-clear-icon", name: decline_default, accessibleName: this.clearIconAccessibleName }) }), this.icon && jsx("slot", { name: "icon" }), !this.readonly && jsx(Icon_default, { slot: "icon", name: slim_arrow_down_default, tabindex: -1, class: {
    "inputIcon": true,
    "inputIcon--pressed": this._iconPressed
  }, accessibleName: this._iconAccessibleNameText, onClick: this._arrowClick })] }), ComboBoxPopoverTemplate.call(this)] });
}

// node_modules/@ui5/webcomponents/dist/generated/themes/ComboBox.css.js
registerThemePropertiesLoader("@ui5/webcomponents-theming", "sap_horizon", async () => parameters_bundle_css_default);
registerThemePropertiesLoader("@ui5/webcomponents", "sap_horizon", async () => parameters_bundle_css_default2);
var ComboBox_css_default = `:host{vertical-align:middle}.ui5-hidden-text{position:absolute;clip:rect(1px,1px,1px,1px);user-select:none;left:-1000px;top:-1000px;pointer-events:none;font-size:0}:host(:not([hidden])){display:inline-block}:host{width:var(--_ui5-v2-8-0_input_width);min-width:calc(var(--_ui5-v2-8-0_input_min_width) + (var(--_ui5-v2-8-0-input-icons-count)*var(--_ui5-v2-8-0_input_icon_width)));margin:var(--_ui5-v2-8-0_input_margin_top_bottom) 0;height:var(--_ui5-v2-8-0_input_height);color:var(--sapField_TextColor);font-size:var(--sapFontSize);font-family:"72override",var(--sapFontFamily);font-style:normal;border:var(--_ui5-v2-8-0-input-border);border-radius:var(--_ui5-v2-8-0_input_border_radius);box-sizing:border-box;text-align:start;transition:var(--_ui5-v2-8-0_input_transition);background:var(--sapField_BackgroundStyle);background-color:var(--_ui5-v2-8-0_input_background_color)}:host(:not([readonly])),:host([readonly][disabled]){box-shadow:var(--sapField_Shadow)}:host([focused]:not([opened])){border-color:var(--_ui5-v2-8-0_input_focused_border_color);background-color:var(--sapField_Focus_Background)}.ui5-input-focusable-element{position:relative}:host([focused]:not([opened])) .ui5-input-focusable-element:after{content:var(--ui5-v2-8-0_input_focus_pseudo_element_content);position:absolute;pointer-events:none;z-index:2;border:var(--sapContent_FocusWidth) var(--sapContent_FocusStyle) var(--_ui5-v2-8-0_input_focus_outline_color);border-radius:var(--_ui5-v2-8-0_input_focus_border_radius);top:var(--_ui5-v2-8-0_input_focus_offset);bottom:var(--_ui5-v2-8-0_input_focus_offset);left:var(--_ui5-v2-8-0_input_focus_offset);right:var(--_ui5-v2-8-0_input_focus_offset)}:host([focused][readonly]:not([opened])) .ui5-input-focusable-element:after{top:var(--_ui5-v2-8-0_input_readonly_focus_offset);bottom:var(--_ui5-v2-8-0_input_readonly_focus_offset);left:var(--_ui5-v2-8-0_input_readonly_focus_offset);right:var(--_ui5-v2-8-0_input_readonly_focus_offset);border-radius:var(--_ui5-v2-8-0_input_readonly_focus_border_radius)}.ui5-input-root:before{content:"";position:absolute;width:calc(100% - 2px);left:1px;bottom:-2px;border-bottom-left-radius:8px;border-bottom-right-radius:8px;height:var(--_ui5-v2-8-0_input_bottom_border_height);transition:var(--_ui5-v2-8-0_input_transition);background-color:var(--_ui5-v2-8-0_input_bottom_border_color)}.ui5-input-root{width:100%;height:100%;position:relative;background:transparent;display:inline-block;outline:none;box-sizing:border-box;color:inherit;transition:border-color .2s ease-in-out;border-radius:var(--_ui5-v2-8-0_input_border_radius);overflow:hidden}:host([disabled]){opacity:var(--_ui5-v2-8-0_input_disabled_opacity);cursor:default;pointer-events:none;background-color:var(--_ui5-v2-8-0-input_disabled_background);border-color:var(--_ui5-v2-8-0_input_disabled_border_color)}:host([disabled]) .ui5-input-root:before,:host([readonly]) .ui5-input-root:before{content:none}[inner-input]{background:transparent;color:inherit;border:none;font-style:inherit;-webkit-appearance:none;-moz-appearance:textfield;padding:var(--_ui5-v2-8-0_input_inner_padding);box-sizing:border-box;width:100%;text-overflow:ellipsis;flex:1;outline:none;font-size:inherit;font-family:inherit;line-height:inherit;letter-spacing:inherit;word-spacing:inherit;text-align:inherit}[inner-input][inner-input-with-icon]{padding:var(--_ui5-v2-8-0_input_inner_padding_with_icon)}[inner-input][type=search]::-webkit-search-decoration,[inner-input][type=search]::-webkit-search-cancel-button,[inner-input][type=search]::-webkit-search-results-button,[inner-input][type=search]::-webkit-search-results-decoration{display:none}.ui5-input-value-state-icon{height:100%;display:var(--_ui5-v2-8-0-input-value-state-icon-display);align-items:center}.ui5-input-value-state-icon>svg{margin-right:8px}[inner-input]::selection{background:var(--sapSelectedColor);color:var(--sapContent_ContrastTextColor)}:host([disabled]) [inner-input]::-webkit-input-placeholder{visibility:hidden}:host([readonly]) [inner-input]::-webkit-input-placeholder{visibility:hidden}:host([disabled]) [inner-input]::-moz-placeholder{visibility:hidden}:host([readonly]) [inner-input]::-moz-placeholder{visibility:hidden}[inner-input]::-webkit-input-placeholder{font-weight:400;font-style:var(--_ui5-v2-8-0_input_placeholder_style);color:var(--_ui5-v2-8-0_input_placeholder_color);padding-right:.125rem}[inner-input]::-moz-placeholder{font-weight:400;font-style:var(--_ui5-v2-8-0_input_placeholder_style);color:var(--_ui5-v2-8-0_input_placeholder_color);padding-right:.125rem}:host([value-state="Negative"]) [inner-input]::-webkit-input-placeholder{color:var(--_ui5-v2-8-0-input_error_placeholder_color);font-weight:var(--_ui5-v2-8-0_input_value_state_error_warning_placeholder_font_weight)}:host([value-state="Negative"]) [inner-input]::-moz-placeholder{color:var(--_ui5-v2-8-0-input_error_placeholder_color);font-weight:var(--_ui5-v2-8-0_input_value_state_error_warning_placeholder_font_weight)}:host([value-state="Critical"]) [inner-input]::-webkit-input-placeholder{font-weight:var(--_ui5-v2-8-0_input_value_state_error_warning_placeholder_font_weight)}:host([value-state="Critical"]) [inner-input]::-moz-placeholder{font-weight:var(--_ui5-v2-8-0_input_value_state_error_warning_placeholder_font_weight)}:host([value-state="Positive"]) [inner-input]::-webkit-input-placeholder{color:var(--_ui5-v2-8-0_input_placeholder_color)}:host([value-state="Positive"]) [inner-input]::-moz-placeholder{color:var(--_ui5-v2-8-0_input_placeholder_color)}:host([value-state="Information"]) [inner-input]::-webkit-input-placeholder{color:var(--_ui5-v2-8-0_input_placeholder_color)}:host([value-state="Information"]) [inner-input]::-moz-placeholder{color:var(--_ui5-v2-8-0_input_placeholder_color)}.ui5-input-content{height:100%;box-sizing:border-box;display:flex;flex-direction:row;justify-content:flex-end;overflow:hidden;outline:none;background:transparent;color:inherit;border-radius:var(--_ui5-v2-8-0_input_border_radius)}:host([readonly]:not([disabled])){border-color:var(--_ui5-v2-8-0_input_readonly_border_color);background:var(--sapField_ReadOnly_BackgroundStyle);background-color:var(--_ui5-v2-8-0_input_readonly_background)}:host([value-state="None"]:not([readonly]):hover),:host(:not([value-state]):not([readonly]):hover){border:var(--_ui5-v2-8-0_input_hover_border);border-color:var(--_ui5-v2-8-0_input_focused_border_color);box-shadow:var(--sapField_Hover_Shadow);background:var(--sapField_Hover_BackgroundStyle);background-color:var(--sapField_Hover_Background)}:host(:not([value-state]):not([readonly])[focused]:not([opened]):hover),:host([value-state="None"]:not([readonly])[focused]:not([opened]):hover){box-shadow:none}:host([focused]):not([opened]) .ui5-input-root:before{content:none}:host(:not([readonly]):not([disabled])[value-state]:not([value-state="None"])){border-width:var(--_ui5-v2-8-0_input_state_border_width)}:host([value-state="Negative"]) [inner-input],:host([value-state="Critical"]) [inner-input]{font-style:var(--_ui5-v2-8-0_input_error_warning_font_style);text-indent:var(--_ui5-v2-8-0_input_error_warning_text_indent)}:host([value-state="Negative"]) [inner-input]{font-weight:var(--_ui5-v2-8-0_input_error_font_weight)}:host([value-state="Critical"]) [inner-input]{font-weight:var(--_ui5-v2-8-0_input_warning_font_weight)}:host([value-state="Negative"]:not([readonly]):not([disabled])){background:var(--sapField_InvalidBackgroundStyle);background-color:var(--sapField_InvalidBackground);border-color:var(--_ui5-v2-8-0_input_value_state_error_border_color);box-shadow:var(--sapField_InvalidShadow)}:host([value-state="Negative"][focused]:not([opened]):not([readonly])){background-color:var(--_ui5-v2-8-0_input_focused_value_state_error_background);border-color:var(--_ui5-v2-8-0_input_focused_value_state_error_border_color)}:host([value-state="Negative"][focused]:not([opened]):not([readonly])) .ui5-input-focusable-element:after{border-color:var(--_ui5-v2-8-0_input_focused_value_state_error_focus_outline_color)}:host([value-state="Negative"]:not([readonly])) .ui5-input-root:before{background-color:var(--_ui5-v2-8-0-input-value-state-error-border-botom-color)}:host([value-state="Negative"]:not([readonly]):not([focused]):hover),:host([value-state="Negative"]:not([readonly])[focused][opened]:hover){background-color:var(--_ui5-v2-8-0_input_value_state_error_hover_background);box-shadow:var(--sapField_Hover_InvalidShadow)}:host([value-state="Negative"]:not([readonly]):not([disabled])),:host([value-state="Critical"]:not([readonly]):not([disabled])),:host([value-state="Information"]:not([readonly]):not([disabled])){border-style:var(--_ui5-v2-8-0_input_error_warning_border_style)}:host([value-state="Critical"]:not([readonly]):not([disabled])){background:var(--sapField_WarningBackgroundStyle);background-color:var(--sapField_WarningBackground);border-color:var(--_ui5-v2-8-0_input_value_state_warning_border_color);box-shadow:var(--sapField_WarningShadow)}:host([value-state="Critical"][focused]:not([opened]):not([readonly])){background-color:var(--_ui5-v2-8-0_input_focused_value_state_warning_background);border-color:var(--_ui5-v2-8-0_input_focused_value_state_warning_border_color)}:host([value-state="Critical"][focused]:not([opened]):not([readonly])) .ui5-input-focusable-element:after{border-color:var(--_ui5-v2-8-0_input_focused_value_state_warning_focus_outline_color)}:host([value-state="Critical"]:not([readonly])) .ui5-input-root:before{background-color:var(--_ui5-v2-8-0_input_value_state_warning_border_botom_color)}:host([value-state="Critical"]:not([readonly]):not([focused]):hover),:host([value-state="Critical"]:not([readonly])[focused][opened]:hover){background-color:var(--sapField_Hover_Background);box-shadow:var(--sapField_Hover_WarningShadow)}:host([value-state="Positive"]:not([readonly]):not([disabled])){background:var(--sapField_SuccessBackgroundStyle);background-color:var(--sapField_SuccessBackground);border-color:var(--_ui5-v2-8-0_input_value_state_success_border_color);border-width:var(--_ui5-v2-8-0_input_value_state_success_border_width);box-shadow:var(--sapField_SuccessShadow)}:host([value-state="Positive"][focused]:not([opened]):not([readonly])){background-color:var(--_ui5-v2-8-0_input_focused_value_state_success_background);border-color:var(--_ui5-v2-8-0_input_focused_value_state_success_border_color)}:host([value-state="Positive"][focused]:not([opened]):not([readonly])) .ui5-input-focusable-element:after{border-color:var(--_ui5-v2-8-0_input_focused_value_state_success_focus_outline_color)}:host([value-state="Positive"]:not([readonly])) .ui5-input-root:before{background-color:var(--_ui5-v2-8-0_input_value_state_success_border_botom_color)}:host([value-state="Positive"]:not([readonly]):not([focused]):hover),:host([value-state="Positive"]:not([readonly])[focused][opened]:hover){background-color:var(--sapField_Hover_Background);box-shadow:var(--sapField_Hover_SuccessShadow)}:host([value-state="Information"]:not([readonly]):not([disabled])){background:var(--sapField_InformationBackgroundStyle);background-color:var(--sapField_InformationBackground);border-color:var(--_ui5-v2-8-0_input_value_state_information_border_color);border-width:var(--_ui5-v2-8-0_input_information_border_width);box-shadow:var(--sapField_InformationShadow)}:host([value-state="Information"][focused]:not([opened]):not([readonly])){background-color:var(--_ui5-v2-8-0_input_focused_value_state_information_background);border-color:var(--_ui5-v2-8-0_input_focused_value_state_information_border_color)}:host([value-state="Information"]:not([readonly])) .ui5-input-root:before{background-color:var(--_ui5-v2-8-0_input_value_success_information_border_botom_color)}:host([value-state="Information"]:not([readonly]):not([focused]):hover),:host([value-state="Information"]:not([readonly])[focused][opened]:hover){background-color:var(--sapField_Hover_Background);box-shadow:var(--sapField_Hover_InformationShadow)}.ui5-input-icon-root{min-width:var(--_ui5-v2-8-0_input_icon_min_width);height:100%;display:flex;justify-content:center;align-items:center}::slotted([ui5-icon][slot="icon"]){align-self:start;padding:var(--_ui5-v2-8-0_input_custom_icon_padding);box-sizing:content-box!important}:host([value-state="Negative"]) .inputIcon,:host([value-state="Critical"]) .inputIcon{padding:var(--_ui5-v2-8-0_input_error_warning_icon_padding)}:host([value-state="Negative"][focused]) .inputIcon,:host([value-state="Critical"][focused]) .inputIcon{padding:var(--_ui5-v2-8-0_input_error_warning_focused_icon_padding)}:host([value-state="Information"]) .inputIcon{padding:var(--_ui5-v2-8-0_input_information_icon_padding)}:host([value-state="Information"][focused]) .inputIcon{padding:var(--_ui5-v2-8-0_input_information_focused_icon_padding)}:host([value-state="Negative"]) ::slotted(.inputIcon[ui5-icon]),:host([value-state="Negative"]) ::slotted([ui5-icon][slot="icon"]),:host([value-state="Critical"]) ::slotted([ui5-icon][slot="icon"]){padding:var(--_ui5-v2-8-0_input_error_warning_custom_icon_padding)}:host([value-state="Negative"][focused]) ::slotted(.inputIcon[ui5-icon]),:host([value-state="Negative"][focused]) ::slotted([ui5-icon][slot="icon"]),:host([value-state="Critical"][focused]) ::slotted([ui5-icon][slot="icon"]){padding:var(--_ui5-v2-8-0_input_error_warning_custom_focused_icon_padding)}:host([value-state="Information"]) ::slotted([ui5-icon][slot="icon"]){padding:var(--_ui5-v2-8-0_input_information_custom_icon_padding)}:host([value-state="Information"][focused]) ::slotted([ui5-icon][slot="icon"]){padding:var(--_ui5-v2-8-0_input_information_custom_focused_icon_padding)}:host([value-state="Negative"]) .inputIcon:active,:host([value-state="Negative"]) .inputIcon.inputIcon--pressed{box-shadow:var(--_ui5-v2-8-0_input_error_icon_box_shadow);color:var(--_ui5-v2-8-0_input_icon_error_pressed_color)}:host([value-state="Negative"]) .inputIcon:not(.inputIcon--pressed):not(:active):hover{box-shadow:var(--_ui5-v2-8-0_input_error_icon_box_shadow)}:host([value-state="Critical"]) .inputIcon:active,:host([value-state="Critical"]) .inputIcon.inputIcon--pressed{box-shadow:var(--_ui5-v2-8-0_input_warning_icon_box_shadow);color:var(--_ui5-v2-8-0_input_icon_warning_pressed_color)}:host([value-state="Critical"]) .inputIcon:not(.inputIcon--pressed):not(:active):hover{box-shadow:var(--_ui5-v2-8-0_input_warning_icon_box_shadow)}:host([value-state="Information"]) .inputIcon:active,:host([value-state="Information"]) .inputIcon.inputIcon--pressed{box-shadow:var(--_ui5-v2-8-0_input_information_icon_box_shadow);color:var(--_ui5-v2-8-0_input_icon_information_pressed_color)}:host([value-state="Information"]) .inputIcon:not(.inputIcon--pressed):not(:active):hover{box-shadow:var(--_ui5-v2-8-0_input_information_icon_box_shadow)}:host([value-state="Positive"]) .inputIcon:active,:host([value-state="Positive"]) .inputIcon.inputIcon--pressed{box-shadow:var(--_ui5-v2-8-0_input_success_icon_box_shadow);color:var(--_ui5-v2-8-0_input_icon_success_pressed_color)}:host([value-state="Positive"]) .inputIcon:not(.inputIcon--pressed):not(:active):hover{box-shadow:var(--_ui5-v2-8-0_input_success_icon_box_shadow)}.ui5-input-clear-icon-wrapper{height:var(--_ui5-v2-8-0_input_icon_wrapper_height);padding:0;width:var(--_ui5-v2-8-0_input_icon_width);min-width:var(--_ui5-v2-8-0_input_icon_width);display:flex;justify-content:center;align-items:center;box-sizing:border-box}:host([value-state]:not([value-state="None"]):not([value-state="Positive"])) .ui5-input-clear-icon-wrapper{height:var(--_ui5-v2-8-0_input_icon_wrapper_state_height);vertical-align:top}:host([value-state="Positive"]) .ui5-input-clear-icon-wrapper{height:var(--_ui5-v2-8-0_input_icon_wrapper_success_state_height)}[ui5-icon].ui5-input-clear-icon{padding:0;color:inherit}[inner-input]::-webkit-outer-spin-button,[inner-input]::-webkit-inner-spin-button{-webkit-appearance:inherit;margin:inherit}.inputIcon{color:var(--_ui5-v2-8-0_input_icon_color);cursor:pointer;outline:none;padding:var(--_ui5-v2-8-0_input_icon_padding);border-inline-start:var(--_ui5-v2-8-0_input_icon_border);min-width:1rem;min-height:1rem;border-radius:var(--_ui5-v2-8-0_input_icon_border_radius)}.inputIcon.inputIcon--pressed{background:var(--_ui5-v2-8-0_input_icon_pressed_bg);box-shadow:var(--_ui5-v2-8-0_input_icon_box_shadow);border-inline-start:var(--_ui5-v2-8-0_select_hover_icon_left_border);color:var(--_ui5-v2-8-0_input_icon_pressed_color)}.inputIcon:active{background-color:var(--sapButton_Active_Background);box-shadow:var(--_ui5-v2-8-0_input_icon_box_shadow);border-inline-start:var(--_ui5-v2-8-0_select_hover_icon_left_border);color:var(--_ui5-v2-8-0_input_icon_pressed_color)}.inputIcon:not(.inputIcon--pressed):not(:active):hover{background:var(--_ui5-v2-8-0_input_icon_hover_bg);box-shadow:var(--_ui5-v2-8-0_input_icon_box_shadow)}.inputIcon:hover{border-inline-start:var(--_ui5-v2-8-0_select_hover_icon_left_border);box-shadow:var(--_ui5-v2-8-0_input_icon_box_shadow)}.ui5-combobox-root{display:flex;overflow:hidden;width:100%;height:100%;border-radius:var(--_ui5-v2-8-0_input_border_radius)}
`;

// node_modules/@ui5/webcomponents/dist/generated/themes/ComboBoxPopover.css.js
registerThemePropertiesLoader("@ui5/webcomponents-theming", "sap_horizon", async () => parameters_bundle_css_default);
registerThemePropertiesLoader("@ui5/webcomponents", "sap_horizon", async () => parameters_bundle_css_default2);
var ComboBoxPopover_css_default = `.ui5-combobox-busy{position:absolute;left:50%;top:50%;transform:translate(-50%,-50%);z-index:42;width:100%;height:100%;display:flex;justify-content:center;align-items:center;pointer-events:all}.ui5-combobox-busy:not([active]){display:none}
`;

// node_modules/@ui5/webcomponents/dist/ComboBoxItemTemplate.js
function ComboBoxItemTemplate() {
  return ListItemBaseTemplate.call(this, { listItemContent: listItemContent2 }, { role: "option" });
}
function listItemContent2() {
  return jsx("div", { part: "content", id: "content", class: "ui5-li-content", children: jsxs("div", { class: "ui5-li-text-wrapper", children: [this.text && jsx("span", { part: "title", className: "ui5-li-title", children: this.text }), this.additionalText && jsx("span", { part: "additional-text", class: "ui5-li-additional-text", children: this.additionalText })] }) });
}

// node_modules/@ui5/webcomponents/dist/generated/themes/ComboBoxItem.css.js
registerThemePropertiesLoader("@ui5/webcomponents-theming", "sap_horizon", async () => parameters_bundle_css_default);
registerThemePropertiesLoader("@ui5/webcomponents", "sap_horizon", async () => parameters_bundle_css_default2);
var ComboBoxItem_css_default = `:host([ui5-cb-item]){height:auto;min-height:var(--_ui5-v2-8-0_list_item_base_height)}:host([ui5-cb-item]) .ui5-li-root{min-height:var(--_ui5-v2-8-0_list_item_base_height)}:host([ui5-cb-item]) .ui5-li-content{padding-bottom:.875rem;padding-top:.875rem;box-sizing:border-box}:host([ui5-cb-item][text][additional-text]) .ui5-li-text-wrapper{gap:1rem}
`;

// node_modules/@ui5/webcomponents/dist/ComboBoxItem.js
var __decorate28 = function(decorators, target, key, desc) {
  var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
  if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
  else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
  return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var ComboBoxItem = class ComboBoxItem2 extends ListItemBase_default {
  constructor() {
    super(...arguments);
    this._isVisible = false;
    this.focused = false;
    this.selected = false;
    this.markupText = "";
  }
};
__decorate28([
  property_default()
], ComboBoxItem.prototype, "text", void 0);
__decorate28([
  property_default()
], ComboBoxItem.prototype, "additionalText", void 0);
__decorate28([
  property_default({ type: Boolean, noAttribute: true })
], ComboBoxItem.prototype, "_isVisible", void 0);
__decorate28([
  property_default({ type: Boolean })
], ComboBoxItem.prototype, "focused", void 0);
__decorate28([
  property_default({ type: Boolean })
], ComboBoxItem.prototype, "selected", void 0);
__decorate28([
  property_default()
], ComboBoxItem.prototype, "markupText", void 0);
ComboBoxItem = __decorate28([
  customElement_default({
    tag: "ui5-cb-item",
    template: ComboBoxItemTemplate,
    styles: [ListItemBase_default.styles, ComboBoxItem_css_default]
  })
], ComboBoxItem);
ComboBoxItem.define();
var ComboBoxItem_default = ComboBoxItem;

// node_modules/@ui5/webcomponents/dist/ComboBoxItemGroupTemplate.js
function ComboBoxItemGroupTemplate() {
  return [ListItemGroupTemplate.call(this, { items })];
}
function items() {
  return this.items.filter((item2) => item2._isVisible).map((item2) => jsx("slot", { name: item2._individualSlot }));
}

// node_modules/@ui5/webcomponents/dist/ComboBoxItemGroup.js
var __decorate29 = function(decorators, target, key, desc) {
  var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
  if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
  else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
  return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var ComboBoxItemGroup = class ComboBoxItemGroup2 extends ListItemGroup_default {
  get isGroupItem() {
    return true;
  }
  get _isVisible() {
    return this.items.some((item2) => item2._isVisible);
  }
};
__decorate29([
  slot_default({
    "default": true,
    invalidateOnChildChange: true,
    individualSlots: true,
    type: HTMLElement
  })
], ComboBoxItemGroup.prototype, "items", void 0);
ComboBoxItemGroup = __decorate29([
  customElement_default({
    tag: "ui5-cb-item-group",
    template: ComboBoxItemGroupTemplate
  })
], ComboBoxItemGroup);
ComboBoxItemGroup.define();
var isInstanceOfComboBoxItemGroup = (object) => {
  return "isGroupItem" in object;
};
var ComboBoxItemGroup_default = ComboBoxItemGroup;

// node_modules/@ui5/webcomponents/dist/ComboBox.js
var __decorate30 = function(decorators, target, key, desc) {
  var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
  if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
  else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
  return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var ComboBox_1;
var SKIP_ITEMS_SIZE = 10;
var ValueStateIconMapping;
(function(ValueStateIconMapping2) {
  ValueStateIconMapping2["Negative"] = "error";
  ValueStateIconMapping2["Critical"] = "alert";
  ValueStateIconMapping2["Positive"] = "sys-enter-2";
  ValueStateIconMapping2["Information"] = "information";
})(ValueStateIconMapping || (ValueStateIconMapping = {}));
var ComboBox = ComboBox_1 = class ComboBox2 extends UI5Element_default {
  get formValidityMessage() {
    return ComboBox_1.i18nBundle.getText(FORM_TEXTFIELD_REQUIRED);
  }
  get formValidity() {
    return { valueMissing: this.required && !this.value };
  }
  async formElementAnchor() {
    return this.getFocusDomRefAsync();
  }
  get formFormattedValue() {
    return this.value;
  }
  constructor() {
    super();
    this.value = "";
    this.noTypeahead = false;
    this.filterValue = "";
    this.disabled = false;
    this.valueState = "None";
    this.readonly = false;
    this.required = false;
    this.loading = false;
    this.filter = "StartsWithPerTerm";
    this.showClearIcon = false;
    this.focused = false;
    this._isValueStateFocused = false;
    this._iconPressed = false;
    this._filteredItems = [];
    this._effectiveShowClearIcon = false;
    this.valueStateOpen = false;
    this.open = false;
    this._initialRendering = true;
    this._itemFocused = false;
    this._autocomplete = false;
    this._isKeyNavigation = false;
    this._selectionPerformed = false;
    this._selectedItemText = "";
    this._userTypedValue = "";
    this._lastValue = this.getAttribute("value") || "";
  }
  onBeforeRendering() {
    this._effectiveShowClearIcon = this.showClearIcon && !!this.value && !this.readonly && !this.disabled;
    if (this._initialRendering || this.filter === "None") {
      this._filteredItems = this.items;
    }
    if (this.open && !this._isKeyNavigation) {
      const items3 = this._filterItems(this.filterValue);
      this._filteredItems = items3.length && items3 || [];
    }
    const hasNoVisibleItems = !this._filteredItems.length || !this._filteredItems.some((i) => i._isVisible);
    if (hasNoVisibleItems && !isPhone() && this.value) {
      this.items.forEach(this._makeAllVisible.bind(this));
      this._filteredItems = this.items;
    }
    if (this.shouldOpenValueStateMessagePopover) {
      this.valueStateOpen = true;
    } else {
      this.valueStateOpen = false;
    }
    this._selectMatchingItem();
    this._initialRendering = false;
    this.style.setProperty(getScopedVarName("--_ui5-input-icons-count"), `${this.iconsCount}`);
  }
  get iconsCount() {
    var _a;
    const slottedIconsCount = ((_a = this.icon) == null ? void 0 : _a.length) || 0;
    const clearIconCount = Number(this._effectiveShowClearIcon) ?? 0;
    const arrowDownIconsCount = this.readonly ? 0 : 1;
    return slottedIconsCount + clearIconCount + arrowDownIconsCount;
  }
  onAfterRendering() {
    if (this.inner && this.value !== this.inner.value) {
      this.value = this.inner.value;
    }
    this.storeResponsivePopoverWidth();
  }
  _focusin(e) {
    this.focused = true;
    this._autocomplete = false;
    !isPhone() && e.target.setSelectionRange(0, this.value.length);
  }
  _focusout(e) {
    const toBeFocused = e.relatedTarget;
    const clearIconWrapper = this.shadowRoot.querySelector(".ui5-input-clear-icon-wrapper");
    const focusedOutToClearIcon = clearIconWrapper === toBeFocused || (clearIconWrapper == null ? void 0 : clearIconWrapper.contains(toBeFocused));
    if (this._effectiveShowClearIcon && focusedOutToClearIcon) {
      return;
    }
    this._fireChangeEvent();
    const focusedOutToItemsPicker = this.open && this._getPicker().contains(toBeFocused);
    const focusedOutToValueState = this.valueStateOpen && this.contains(toBeFocused);
    if (focusedOutToItemsPicker || focusedOutToValueState) {
      e.stopImmediatePropagation();
      return;
    }
    if (!this.getDomRef().contains(toBeFocused) && this._getPicker() !== e.relatedTarget) {
      this.focused = false;
    }
  }
  _beforeOpenPopover() {
    if (isPhone()) {
      this._getPickerInput().value = this.value;
    }
  }
  _afterOpenPopover() {
    this._iconPressed = true;
    this.inner.focus();
  }
  _afterClosePopover() {
    this._iconPressed = false;
    this._filteredItems = this.items;
    this.filterValue = "";
    this._selectedItemText = "";
    if (isPhone()) {
      this.blur();
    }
    if (this._selectionPerformed) {
      this._lastValue = this.value;
      this._selectionPerformed = false;
    }
    this.open = false;
  }
  _toggleRespPopover() {
    if (this.open) {
      this._closeRespPopover();
    } else {
      this._openRespPopover();
    }
  }
  storeResponsivePopoverWidth() {
    if (this.open && !this._listWidth) {
      this._listWidth = this._getPicker().offsetWidth;
    }
  }
  _handleValueStatePopoverFocusout() {
    this.focused = false;
  }
  _handleValueStatePopoverAfterClose() {
    this.valueStateOpen = false;
  }
  _getValueStatePopover() {
    return this.shadowRoot.querySelector(".ui5-valuestatemessage-popover");
  }
  _getItemsList() {
    return this._getPicker().querySelector(".ui5-combobox-items-list");
  }
  _resetFilter() {
    this._userTypedValue = "";
    this.inner.setSelectionRange(0, this.value.length);
    this._filteredItems = this._filterItems("");
    this._selectMatchingItem();
  }
  _resetItemVisibility() {
    this.items.forEach((item2) => {
      var _a;
      if (isInstanceOfComboBoxItemGroup(item2)) {
        (_a = item2.items) == null ? void 0 : _a.forEach((i) => {
          i._isVisible = false;
        });
        return;
      }
      item2._isVisible = false;
    });
  }
  _arrowClick() {
    this.inner.focus();
    this._resetFilter();
    if (isPhone() && this.value && !this._lastValue) {
      this._lastValue = this.value;
    }
    this._toggleRespPopover();
  }
  _handleMobileKeydown(e) {
    if (isEscape(e)) {
      this.value = this._lastValue || "";
      this.filterValue = this._lastValue || "";
      this._closeRespPopover();
    }
  }
  _handleMobileInput(e) {
    const { target } = e;
    this.filterValue = target.value;
    this.value = target.value;
    this.fireDecoratorEvent("input");
  }
  _input(e) {
    const { value } = e.target;
    const shouldAutocomplete = this.shouldAutocomplete(e);
    if (e.target === this.inner) {
      e.stopImmediatePropagation();
      this.focused = true;
      this._isValueStateFocused = false;
    }
    this._filteredItems = this._filterItems(value);
    this.value = value;
    this.filterValue = value;
    this._clearFocus();
    if (shouldAutocomplete && !isAndroid()) {
      this._handleTypeAhead(value, value, true);
    }
    this.fireDecoratorEvent("input");
    if (isPhone()) {
      return;
    }
    if (!this._filteredItems.length || value === "") {
      this._closeRespPopover();
    } else {
      this._openRespPopover();
    }
  }
  shouldAutocomplete(e) {
    const eventType = e.inputType;
    const allowedEventTypes = [
      "deleteWordBackward",
      "deleteWordForward",
      "deleteSoftLineBackward",
      "deleteSoftLineForward",
      "deleteEntireSoftLine",
      "deleteHardLineBackward",
      "deleteHardLineForward",
      "deleteByDrag",
      "deleteByCut",
      "deleteContent",
      "deleteContentBackward",
      "deleteContentForward",
      "historyUndo"
    ];
    return !this.noTypeahead && !allowedEventTypes.includes(eventType);
  }
  _startsWithMatchingItems(str) {
    const allItems = this._getItems().filter((item2) => !isInstanceOfComboBoxItemGroup(item2));
    return StartsWith(str, allItems, "text");
  }
  _clearFocus() {
    const allItems = this._getItems();
    allItems.map((item2) => {
      item2.focused = false;
      return item2;
    });
  }
  // Get groups and items as a flat array for filtering
  _getItems() {
    const allItems = [];
    this._filteredItems.forEach((item2) => {
      if (isInstanceOfComboBoxItemGroup(item2)) {
        const visibleItems = this.open ? item2.items.filter((i) => i._isVisible) : item2.items;
        const groupedItems = [item2, ...visibleItems];
        allItems.push(...groupedItems);
        return;
      }
      allItems.push(item2);
    });
    return allItems;
  }
  handleNavKeyPress(e) {
    const allItems = this._getItems();
    if (this.focused && (isHome(e) || isEnd(e)) && this.value) {
      return;
    }
    const isOpen = this.open;
    const currentItem = allItems.find((item2) => {
      return item2.selected || item2.focused;
    });
    const indexOfItem = currentItem ? allItems.indexOf(currentItem) : -1;
    e.preventDefault();
    if (this.focused && isOpen && (isUp(e) || isPageUp(e) || isPageDown(e))) {
      return;
    }
    if (allItems.length - 1 === indexOfItem && isDown(e)) {
      return;
    }
    this._isKeyNavigation = true;
    if (e.key === "ArrowDown" || e.key === "ArrowUp" || e.key === "PageUp" || e.key === "PageDown" || e.key === "Home" || e.key === "End") {
      this[`_handle${e.key}`](e, indexOfItem);
    }
  }
  _handleItemNavigation(e, indexOfItem, isForward) {
    const allItems = this._getItems();
    const currentItem = allItems[indexOfItem];
    const isGroupItem = currentItem && currentItem.isGroupItem;
    const nextItem = isForward ? allItems[indexOfItem + 1] : allItems[indexOfItem - 1];
    if (!this.open && (isGroupItem && !nextItem || !isGroupItem && !currentItem)) {
      return;
    }
    this._clearFocus();
    if (this.open) {
      this._itemFocused = true;
      this.value = isGroupItem ? "" : currentItem.text;
      this.focused = false;
      currentItem.focused = true;
    } else {
      this.focused = true;
      this.value = isGroupItem ? nextItem.text : currentItem.text;
      currentItem.focused = false;
    }
    this._isValueStateFocused = false;
    this._announceSelectedItem(indexOfItem);
    this._scrollToItem(indexOfItem);
    if (isGroupItem && this.open) {
      return;
    }
    this._handleTypeAhead(this.value, this.open ? this._userTypedValue : "", false);
    this.fireDecoratorEvent("input");
  }
  _handleTypeAhead(value, filterValue, checkForGroupItem) {
    const item2 = this._getFirstMatchingItem(value);
    if (!item2) {
      return;
    }
    this._applyAtomicValueAndSelection(item2, filterValue);
    if (value !== "" && !item2.selected && (!checkForGroupItem || !item2.isGroupItem)) {
      this.fireDecoratorEvent("selection-change", {
        item: item2
      });
    }
  }
  _handleArrowDown(e, indexOfItem) {
    const isOpen = this.open;
    if (this.focused && indexOfItem === -1 && this.hasValueStateText && isOpen) {
      this._isValueStateFocused = true;
      this._announceValueStateText();
      this.focused = false;
      return;
    }
    indexOfItem = !isOpen && this.hasValueState && indexOfItem === -1 ? 0 : indexOfItem;
    this._handleItemNavigation(
      e,
      ++indexOfItem,
      true
      /* isForward */
    );
  }
  _handleArrowUp(e, indexOfItem) {
    const isOpen = this.open;
    if (indexOfItem === 0 && !this.hasValueStateText) {
      this._clearFocus();
      this.focused = true;
      this._itemFocused = false;
      return;
    }
    if (indexOfItem === 0 && this.hasValueStateText && isOpen && !this._isValueStateFocused) {
      this._clearFocus();
      this._itemFocused = false;
      this._isValueStateFocused = true;
      this._announceValueStateText();
      this._filteredItems[0].selected = false;
      this.value = this._userTypedValue;
      return;
    }
    if (this._isValueStateFocused) {
      this.focused = true;
      this._isValueStateFocused = false;
      this.value = this._userTypedValue;
      return;
    }
    indexOfItem = !isOpen && this.hasValueState && indexOfItem === -1 ? 0 : indexOfItem;
    this._handleItemNavigation(
      e,
      --indexOfItem,
      false
      /* isForward */
    );
  }
  _handlePageUp(e, indexOfItem) {
    const allItems = this._getItems();
    const isProposedIndexValid = indexOfItem - SKIP_ITEMS_SIZE > -1;
    indexOfItem = isProposedIndexValid ? indexOfItem - SKIP_ITEMS_SIZE : 0;
    const shouldMoveForward = isInstanceOfComboBoxItemGroup(allItems[indexOfItem]) && !this.open;
    if (!isProposedIndexValid && this.hasValueStateText && this.open) {
      this._clearFocus();
      this._itemFocused = false;
      this._isValueStateFocused = true;
      this._announceValueStateText();
      return;
    }
    this._handleItemNavigation(e, indexOfItem, shouldMoveForward);
  }
  _handlePageDown(e, indexOfItem) {
    const allItems = this._getItems();
    const itemsLength = allItems.length;
    const isProposedIndexValid = indexOfItem + SKIP_ITEMS_SIZE < itemsLength;
    indexOfItem = isProposedIndexValid ? indexOfItem + SKIP_ITEMS_SIZE : itemsLength - 1;
    const shouldMoveForward = isInstanceOfComboBoxItemGroup(allItems[indexOfItem]) && !this.open;
    this._handleItemNavigation(e, indexOfItem, shouldMoveForward);
  }
  _handleHome(e) {
    const shouldMoveForward = isInstanceOfComboBoxItemGroup(this._filteredItems[0]) && !this.open;
    if (this.hasValueStateText && this.open) {
      this._clearFocus();
      this._itemFocused = false;
      this._isValueStateFocused = true;
      this._announceValueStateText();
      return;
    }
    this._handleItemNavigation(e, 0, shouldMoveForward);
  }
  _handleEnd(e) {
    this._handleItemNavigation(
      e,
      this._getItems().length - 1,
      true
      /* isForward */
    );
  }
  _keyup() {
    this._userTypedValue = this.value.substring(0, this.inner.selectionStart || 0);
  }
  _keydown(e) {
    const isNavKey = isDown(e) || isUp(e) || isPageUp(e) || isPageDown(e) || isHome(e) || isEnd(e);
    const allItems = this._getItems();
    this._autocomplete = !(isBackSpace(e) || isDelete(e));
    this._isKeyNavigation = false;
    if (isNavKey && !this.readonly && this._filteredItems.length) {
      this.handleNavKeyPress(e);
    }
    if (isEnter(e)) {
      let focusedItem;
      this._filteredItems.forEach((item2) => {
        if (isInstanceOfComboBoxItemGroup(item2) && !focusedItem) {
          focusedItem = item2.items.find((groupItem) => groupItem.focused);
        }
        if (item2.focused) {
          focusedItem = item2;
        }
      });
      this._fireChangeEvent();
      if (this.open && !(focusedItem == null ? void 0 : focusedItem.isGroupItem)) {
        this._closeRespPopover();
        this.focused = true;
        this.inner.setSelectionRange(this.value.length, this.value.length);
      } else if (this._internals.form) {
        submitForm(this);
      }
    }
    if (isEscape(e)) {
      this.focused = true;
      this.value = !this.open ? this._lastValue : this.value;
      this._isValueStateFocused = false;
    }
    if ((isTabNext(e) || isTabPrevious(e)) && this.open) {
      this._closeRespPopover();
    }
    if (isShow(e) && !this.readonly && !this.disabled) {
      e.preventDefault();
      this._resetFilter();
      this._toggleRespPopover();
      const selectedItem = allItems.find((item2) => {
        return item2.selected;
      });
      if (selectedItem && this.open) {
        this._itemFocused = true;
        selectedItem.focused = true;
        this.focused = false;
      } else if (this.open && this._filteredItems.length && !this.value.length) {
        const firstNonGroupItem = this._getItems().findIndex((item2) => item2._isVisible && !item2.isGroupItem);
        this._handleItemNavigation(
          e,
          firstNonGroupItem,
          true
          /* isForward */
        );
      } else {
        this.focused = true;
      }
    }
  }
  _handlePopoverKeydown(e) {
    if (isTabNext(e)) {
      this._closeRespPopover();
    }
  }
  _handlePopoverFocusout() {
    this.focused = false;
  }
  _click() {
    if (isPhone() && !this.readonly) {
      this._openRespPopover();
    }
  }
  _closeRespPopover(e) {
    if (e && e.target.classList.contains("ui5-responsive-popover-close-btn")) {
      if (this._selectedItemText) {
        this.value = this._selectedItemText;
        this.filterValue = this._selectedItemText;
      } else {
        this.value = this._lastValue || "";
        this.filterValue = this._lastValue || "";
      }
    }
    if (isPhone()) {
      this._fireChangeEvent();
    }
    this._isValueStateFocused = false;
    this._clearFocus();
    this.open = false;
    this.valueStateOpen = false;
  }
  _openRespPopover() {
    this.open = true;
  }
  _filterItems(str) {
    let filteredItem;
    let filteredGroupItems = [];
    const filteredItems = [];
    const filteredItemGroups = [];
    this._resetItemVisibility();
    this.items.forEach((item2) => {
      if (isInstanceOfComboBoxItemGroup(item2)) {
        filteredGroupItems = (Filters_exports[this.filter] || StartsWithPerTerm)(str, item2.items, "text");
        filteredGroupItems.forEach((i) => {
          i._isVisible = true;
        });
        if (filteredGroupItems.length) {
          filteredItemGroups.push(item2);
        }
        return;
      }
      [filteredItem] = (Filters_exports[this.filter] || StartsWithPerTerm)(str, [item2], "text");
      if (filteredItem) {
        filteredItem._isVisible = true;
        filteredItems.push(filteredItem);
      }
    });
    return [...filteredItemGroups, ...filteredItems];
  }
  _getFirstMatchingItem(current) {
    const allItems = this._getItems();
    const currentlyFocusedItem = allItems.find((item2) => item2.focused === true);
    if (currentlyFocusedItem == null ? void 0 : currentlyFocusedItem.isGroupItem) {
      this.value = this.filterValue;
      return;
    }
    const matchingItems = this._startsWithMatchingItems(current);
    if (matchingItems.length) {
      return matchingItems[0];
    }
  }
  _applyAtomicValueAndSelection(item2, filterValue) {
    const value = item2 && item2.text || "";
    this.inner.value = value;
    this.inner.setSelectionRange(filterValue.length, value.length);
    this.value = value;
  }
  _selectMatchingItem() {
    const currentlyFocusedItem = this.items.find((item2) => item2.focused);
    const shouldSelectionBeCleared = currentlyFocusedItem && currentlyFocusedItem.isGroupItem;
    let itemToBeSelected;
    this._filteredItems.forEach((item2) => {
      var _a;
      if (!shouldSelectionBeCleared && !itemToBeSelected) {
        itemToBeSelected = !item2.isGroupItem && item2.text === this.value ? item2 : (_a = item2 == null ? void 0 : item2.items) == null ? void 0 : _a.find((i) => i.text === this.value);
      }
    });
    this._filteredItems = this._filteredItems.map((item2) => {
      var _a;
      if (!isInstanceOfComboBoxItemGroup(item2)) {
        item2.selected = item2 === itemToBeSelected;
        return item2;
      }
      (_a = item2.items) == null ? void 0 : _a.forEach((groupItem) => {
        groupItem.selected = itemToBeSelected === groupItem;
      });
      return item2;
    });
  }
  _fireChangeEvent() {
    if (this.value !== this._lastValue) {
      this.fireDecoratorEvent("change");
      this._lastValue = this.value;
    }
  }
  _inputChange(e) {
    e.preventDefault();
  }
  _itemMousedown(e) {
    e.preventDefault();
  }
  _selectItem(e) {
    const item2 = e.detail.item;
    this._selectedItemText = item2.text || "";
    this._selectionPerformed = true;
    const sameItemSelected = this.value === this._selectedItemText;
    const sameSelectionPerformed = this.value.toLowerCase() === this.filterValue.toLowerCase();
    if (sameItemSelected && sameSelectionPerformed) {
      this._fireChangeEvent();
      return this._closeRespPopover();
    }
    this.value = this._selectedItemText;
    if (!item2.selected) {
      this.fireDecoratorEvent("selection-change", {
        item: item2
      });
    }
    this._fireChangeEvent();
    this._closeRespPopover();
    this.inner.setSelectionRange(this.value.length, this.value.length);
  }
  _onItemFocus() {
    this._itemFocused = true;
  }
  _announceSelectedItem(indexOfItem) {
    const allItems = this._getItems();
    const currentItem = allItems[indexOfItem];
    const nonGroupItems = allItems.filter((item2) => !item2.isGroupItem);
    const currentItemAdditionalText = (currentItem == null ? void 0 : currentItem.additionalText) || "";
    const isGroupItem = currentItem == null ? void 0 : currentItem.isGroupItem;
    const itemPositionText = ComboBox_1.i18nBundle.getText(LIST_ITEM_POSITION, nonGroupItems.indexOf(currentItem) + 1, nonGroupItems.length);
    const groupHeaderText = ComboBox_1.i18nBundle.getText(LIST_ITEM_GROUP_HEADER);
    if (isGroupItem) {
      InvisibleMessage_default(`${groupHeaderText} ${currentItem.headerText}`, InvisibleMessageMode_default.Polite);
    } else {
      InvisibleMessage_default(`${currentItemAdditionalText} ${itemPositionText}`.trim(), InvisibleMessageMode_default.Polite);
    }
  }
  _clear() {
    const selectedItem = this.items.find((item2) => item2.selected);
    if ((selectedItem == null ? void 0 : selectedItem.text) === this.value) {
      this.fireDecoratorEvent("change");
    }
    this.value = "";
    this.fireDecoratorEvent("input");
    if (this._isPhone) {
      this._lastValue = "";
      this.fireDecoratorEvent("change");
    } else {
      this.focus();
    }
  }
  _makeAllVisible(item2) {
    if (isInstanceOfComboBoxItemGroup(item2)) {
      item2.items.forEach((groupItem) => {
        groupItem._isVisible = true;
      });
      return;
    }
    item2._isVisible = true;
  }
  _scrollToItem(indexOfItem) {
    const picker = this._getPicker();
    const list = this._getItemsList();
    const listItem = list == null ? void 0 : list.listItems[indexOfItem];
    if (listItem) {
      const pickerRect = picker.getBoundingClientRect();
      const listItemRect = listItem.getBoundingClientRect();
      const isListItemInVisibleArea = listItemRect.top >= pickerRect.top && listItemRect.bottom <= pickerRect.bottom;
      if (!isListItemInVisibleArea) {
        listItem.scrollIntoView({
          behavior: "auto",
          block: "nearest",
          inline: "nearest"
        });
      }
    }
  }
  _announceValueStateText() {
    const valueStateText = this.shouldDisplayDefaultValueStateMessage ? this.valueStateDefaultText : this.valueStateMessage.map((el) => el.textContent).join(" ");
    if (valueStateText) {
      InvisibleMessage_default(valueStateText, InvisibleMessageMode_default.Polite);
    }
  }
  get _headerTitleText() {
    return ComboBox_1.i18nBundle.getText(INPUT_SUGGESTIONS_TITLE);
  }
  get _iconAccessibleNameText() {
    return ComboBox_1.i18nBundle.getText(SELECT_OPTIONS);
  }
  get _popupLabel() {
    return ComboBox_1.i18nBundle.getText(COMBOBOX_AVAILABLE_OPTIONS);
  }
  get inner() {
    return isPhone() && this.open ? this._getPickerInput().shadowRoot.querySelector("input") : this.shadowRoot.querySelector("[inner-input]");
  }
  _getPicker() {
    return this.shadowRoot.querySelector("[ui5-responsive-popover]");
  }
  _getPickerInput() {
    return this._getPicker().querySelector("[ui5-input]");
  }
  get openOnMobile() {
    return this._isPhone && this.open;
  }
  get hasValueState() {
    return this.valueState !== ValueState_default.None;
  }
  get hasValueStateText() {
    return this.hasValueState && this.valueState !== ValueState_default.Positive;
  }
  get ariaValueStateHiddenText() {
    if (!this.hasValueState) {
      return "";
    }
    let text = "";
    if (this.valueState !== ValueState_default.None) {
      text = this.valueStateTypeMappings[this.valueState];
    }
    if (this.shouldDisplayDefaultValueStateMessage) {
      return `${text} ${this.valueStateDefaultText || ""}`;
    }
    return `${text}`.concat(" ", this.valueStateMessage.map((el) => el.textContent).join(" "));
  }
  get valueStateDefaultText() {
    if (this.valueState === ValueState_default.None) {
      return;
    }
    return this.valueStateTextMappings[this.valueState];
  }
  get valueStateTextMappings() {
    return {
      [ValueState_default.Positive]: ComboBox_1.i18nBundle.getText(VALUE_STATE_SUCCESS),
      [ValueState_default.Negative]: ComboBox_1.i18nBundle.getText(VALUE_STATE_ERROR),
      [ValueState_default.Critical]: ComboBox_1.i18nBundle.getText(VALUE_STATE_WARNING),
      [ValueState_default.Information]: ComboBox_1.i18nBundle.getText(VALUE_STATE_INFORMATION)
    };
  }
  get valueStateTypeMappings() {
    return {
      [ValueState_default.Positive]: ComboBox_1.i18nBundle.getText(VALUE_STATE_TYPE_SUCCESS),
      [ValueState_default.Information]: ComboBox_1.i18nBundle.getText(VALUE_STATE_TYPE_INFORMATION),
      [ValueState_default.Negative]: ComboBox_1.i18nBundle.getText(VALUE_STATE_TYPE_ERROR),
      [ValueState_default.Critical]: ComboBox_1.i18nBundle.getText(VALUE_STATE_TYPE_WARNING)
    };
  }
  get shouldOpenValueStateMessagePopover() {
    return this.focused && !this.readonly && this.hasValueStateText && !this._iconPressed && !this.open && !this._isPhone;
  }
  get shouldDisplayDefaultValueStateMessage() {
    return !this.valueStateMessage.length && this.hasValueStateText;
  }
  get _valueStatePopoverHorizontalAlign() {
    return this.effectiveDir !== "rtl" ? PopoverHorizontalAlign_default.Start : PopoverHorizontalAlign_default.End;
  }
  /**
   * This method is relevant for sap_horizon theme only
   */
  get _valueStateMessageIcon() {
    return this.valueState !== ValueState_default.None ? ValueStateIconMapping[this.valueState] : "";
  }
  get _isPhone() {
    return isPhone();
  }
  get itemTabIndex() {
    return void 0;
  }
  get ariaLabelText() {
    return getEffectiveAriaLabelText(this);
  }
  get clearIconAccessibleName() {
    return ComboBox_1.i18nBundle.getText(INPUT_CLEAR_ICON_ACC_NAME);
  }
  get responsivePopoverId() {
    return `${this._id}-popover`;
  }
  get styles() {
    const remSizeInPx = parseInt(getComputedStyle(document.documentElement).fontSize);
    return {
      popoverHeader: {
        "width": `${this.offsetWidth}px`
      },
      suggestionPopoverHeader: {
        "display": this._listWidth === 0 ? "none" : "inline-block",
        "width": `${this._listWidth || ""}px`
      },
      suggestionsPopover: {
        "min-width": `${this.offsetWidth || 0}px`,
        "max-width": this.offsetWidth / remSizeInPx > 40 ? `${this.offsetWidth}px` : "40rem"
      },
      popoverValueStateMessage: {}
    };
  }
  get classes() {
    return {
      popover: {
        "ui5-suggestions-popover": true,
        "ui5-popover-with-value-state-header-phone": this._isPhone && this.hasValueStateText,
        "ui5-popover-with-value-state-header": !this._isPhone && this.hasValueStateText
      },
      popoverValueState: {
        "ui5-valuestatemessage-header": true,
        "ui5-valuestatemessage-root": true,
        "ui5-valuestatemessage--success": this.valueState === ValueState_default.Positive,
        "ui5-valuestatemessage--error": this.valueState === ValueState_default.Negative,
        "ui5-valuestatemessage--warning": this.valueState === ValueState_default.Critical,
        "ui5-valuestatemessage--information": this.valueState === ValueState_default.Information
      }
    };
  }
};
__decorate30([
  property_default()
], ComboBox.prototype, "value", void 0);
__decorate30([
  property_default()
], ComboBox.prototype, "name", void 0);
__decorate30([
  property_default({ type: Boolean })
], ComboBox.prototype, "noTypeahead", void 0);
__decorate30([
  property_default()
], ComboBox.prototype, "filterValue", void 0);
__decorate30([
  property_default()
], ComboBox.prototype, "placeholder", void 0);
__decorate30([
  property_default({ type: Boolean })
], ComboBox.prototype, "disabled", void 0);
__decorate30([
  property_default()
], ComboBox.prototype, "valueState", void 0);
__decorate30([
  property_default({ type: Boolean })
], ComboBox.prototype, "readonly", void 0);
__decorate30([
  property_default({ type: Boolean })
], ComboBox.prototype, "required", void 0);
__decorate30([
  property_default({ type: Boolean })
], ComboBox.prototype, "loading", void 0);
__decorate30([
  property_default()
], ComboBox.prototype, "filter", void 0);
__decorate30([
  property_default({ type: Boolean })
], ComboBox.prototype, "showClearIcon", void 0);
__decorate30([
  property_default({ type: Boolean })
], ComboBox.prototype, "focused", void 0);
__decorate30([
  property_default({ type: Boolean })
], ComboBox.prototype, "_isValueStateFocused", void 0);
__decorate30([
  property_default()
], ComboBox.prototype, "accessibleName", void 0);
__decorate30([
  property_default()
], ComboBox.prototype, "accessibleNameRef", void 0);
__decorate30([
  property_default({ type: Boolean, noAttribute: true })
], ComboBox.prototype, "_iconPressed", void 0);
__decorate30([
  property_default({ type: Array })
], ComboBox.prototype, "_filteredItems", void 0);
__decorate30([
  property_default({ type: Number, noAttribute: true })
], ComboBox.prototype, "_listWidth", void 0);
__decorate30([
  property_default({ type: Boolean, noAttribute: true })
], ComboBox.prototype, "_effectiveShowClearIcon", void 0);
__decorate30([
  property_default({ type: Boolean, noAttribute: true })
], ComboBox.prototype, "valueStateOpen", void 0);
__decorate30([
  property_default({ type: Boolean, noAttribute: true })
], ComboBox.prototype, "open", void 0);
__decorate30([
  slot_default({
    type: HTMLElement,
    "default": true,
    individualSlots: true,
    invalidateOnChildChange: true
  })
], ComboBox.prototype, "items", void 0);
__decorate30([
  slot_default()
], ComboBox.prototype, "valueStateMessage", void 0);
__decorate30([
  slot_default()
], ComboBox.prototype, "icon", void 0);
__decorate30([
  i18n_default("@ui5/webcomponents")
], ComboBox, "i18nBundle", void 0);
ComboBox = ComboBox_1 = __decorate30([
  customElement_default({
    tag: "ui5-combobox",
    languageAware: true,
    formAssociated: true,
    renderer: JsxRenderer_default,
    styles: [
      ComboBox_css_default,
      ResponsivePopoverCommon_css_default,
      ValueStateMessage_css_default,
      ComboBoxPopover_css_default,
      Suggestions_css_default
    ],
    template: ComboBoxTemplate
  }),
  event_strict_default("change", {
    bubbles: true
  }),
  event_strict_default("input", {
    bubbles: true
  }),
  event_strict_default("selection-change", {
    bubbles: true
  })
], ComboBox);
ComboBox.define();

// node_modules/@ui5/webcomponents-react/dist/webComponents/ComboBox/index.js
var ComboBox3 = withWebComponent("ui5-combobox", ["accessibleName", "accessibleNameRef", "filter", "name", "placeholder", "value", "valueState"], ["disabled", "loading", "noTypeahead", "readonly", "required", "showClearIcon"], ["icon", "valueStateMessage"], ["change", "input", "selection-change"]);
ComboBox3.displayName = "ComboBox";

// node_modules/@ui5/webcomponents-react/dist/webComponents/ComboBoxItem/index.js
var ComboBoxItem3 = withWebComponent("ui5-cb-item", ["additionalText", "text"], [], [], []);
ComboBoxItem3.displayName = "ComboBoxItem";

// node_modules/@ui5/webcomponents-react/dist/webComponents/ComboBoxItemGroup/index.js
var ComboBoxItemGroup3 = withWebComponent("ui5-cb-item-group", ["headerAccessibleName", "headerText"], [], ["header"], ["move-over", "move"]);
ComboBoxItemGroup3.displayName = "ComboBoxItemGroup";

// node_modules/@ui5/webcomponents-localization/dist/dates/getRoundedTimestamp.js
var getRoundedTimestamp = (millisecondsUTC) => {
  if (!millisecondsUTC) {
    millisecondsUTC = (/* @__PURE__ */ new Date()).getTime();
  }
  const rounded = millisecondsUTC - millisecondsUTC % (24 * 60 * 60 * 1e3);
  return rounded / 1e3;
};
var getRoundedTimestamp_default = getRoundedTimestamp;

// node_modules/@ui5/webcomponents-icons/dist/v4/appointment-2.js
var name7 = "appointment-2";
var pathData7 = "M32 481V65q0-14 9.5-23T64 33h64V1h32v32h192V1h32v32h64q14 0 23 9t9 23v416q0 14-9 23t-23 9H64q-13 0-22.5-9T32 481zm416 0V129H64v352h384zM256 193q14 0 23 9t9 23-9 23-23 9-23-9-9-23 9-23 23-9zM128 321q14 0 23 9t9 23-9 23-23 9-23-9-9-23 9-23 23-9zm256-128q14 0 23 9t9 23-9 23-23 9-23-9-9-23 9-23 23-9zm0 128q14 0 23 9t9 23-9 23-23 9-23-9-9-23 9-23 23-9zm-128 0q14 0 23 9t9 23-9 23-23 9-23-9-9-23 9-23 23-9zM96 225q0-14 9-23t23-9 23 9 9 23-9 23-23 9-23-9-9-23zM384 97V65h-32v32h32zM128 65v32h32V65h-32z";
var ltr7 = false;
var collection7 = "SAP-icons-v4";
var packageName7 = "@ui5/webcomponents-icons";
registerIcon(name7, { pathData: pathData7, ltr: ltr7, collection: collection7, packageName: packageName7 });

// node_modules/@ui5/webcomponents-icons/dist/v5/appointment-2.js
var name8 = "appointment-2";
var pathData8 = "M403 64q32 0 54.5 22.5T480 141v294q0 32-22.5 54.5T403 512H109q-32 0-54.5-22.5T32 435V141q0-32 22.5-54.5T109 64h25V26q0-11 7.5-18.5T160 0t18.5 7.5T186 26v38h140V26q0-11 7.5-18.5T352 0t18.5 7.5T378 26v38h25zm-294 51q-11 0-18.5 7.5T83 141v64h346v-64q0-11-7.5-18.5T403 115h-25v19q0 11-7.5 18.5T352 160t-18.5-7.5T326 134v-19H186v19q0 11-7.5 18.5T160 160t-18.5-7.5T134 134v-19h-25zm294 346q11 0 18.5-7.5T429 435V256H83v179q0 11 7.5 18.5T109 461h294zM160 320q14 0 23 9t9 23-9 23-23 9-23-9-9-23 9-23 23-9zm96 0q14 0 23 9t9 23-9 23-23 9-23-9-9-23 9-23 23-9zm96 0q14 0 23 9t9 23-9 23-23 9-23-9-9-23 9-23 23-9z";
var ltr8 = false;
var collection8 = "SAP-icons-v5";
var packageName8 = "@ui5/webcomponents-icons";
registerIcon(name8, { pathData: pathData8, ltr: ltr8, collection: collection8, packageName: packageName8 });

// node_modules/@ui5/webcomponents/dist/DatePickerInputTemplate.js
function DatePickerInputTemplate() {
  return jsx("div", { class: "ui5-date-picker-root", style: {
    width: "100%"
  }, children: jsxs(Input_default, { "data-sap-focus-ref": true, id: `${this._id}-inner`, class: "ui5-date-picker-input", placeholder: this._placeholder, type: this.type, value: this.value, disabled: this.disabled, required: this.required, readonly: this.readonly, valueState: this.valueState, _inputAccInfo: this.accInfo, onChange: this._onInputChange, onInput: this._onInputInput, onSubmit: this._onInputSubmit, onKeyDown: this._onkeydown, children: [this.valueStateMessage.length > 0 && jsx("slot", { name: "valueStateMessage", slot: "valueStateMessage" }), !this.readonly && jsx(Icon_default, { id: `${this._id}-value-help`, slot: "icon", name: this.openIconName, tabindex: -1, accessibleName: this.openIconTitle, mode: this._iconMode, showTooltip: true, class: {
    "inputIcon": true,
    "inputIcon--pressed": this.open
  }, onClick: this._togglePicker })] }) });
}

// node_modules/@ui5/webcomponents/dist/DatePickerPopoverTemplate.js
function DatePickerPopoverTemplate(hooks) {
  const header3 = (hooks == null ? void 0 : hooks.header) || defaultHeader;
  const content4 = (hooks == null ? void 0 : hooks.content) || defaultContent;
  const footer2 = (hooks == null ? void 0 : hooks.footer) || defaultFooter;
  return jsxs(ResponsivePopover_default, { id: `${this._id}-responsive-popover`, opener: this, open: this.open, allowTargetOverlap: true, placement: "Bottom", horizontalAlign: "Start", accessibleName: this.pickerAccessibleName, hideArrow: true, _hideHeader: this._shouldHideHeader, onKeyDown: this._onkeydown, onClose: this.onResponsivePopoverAfterClose, onOpen: this.onResponsivePopoverAfterOpen, onBeforeOpen: this.onResponsivePopoverBeforeOpen, children: [this.showHeader && header3.call(this), content4.call(this), this.showFooter && footer2.call(this)] });
}
function defaultHeader() {
  return jsx("div", { slot: "header", class: "ui5-responsive-popover-header", children: jsxs("div", { class: "row", children: [jsx("span", { children: this._headerTitleText }), jsx(Button_default, { class: "ui5-responsive-popover-close-btn", icon: decline_default, design: "Transparent", onClick: this._togglePicker })] }) });
}
function defaultContent() {
  return jsx(Calendar_default, { id: `${this._id}-calendar`, primaryCalendarType: this._primaryCalendarType, secondaryCalendarType: this.secondaryCalendarType, formatPattern: this._formatPattern, selectionMode: this._calendarSelectionMode, minDate: this.minDate, maxDate: this.maxDate, calendarWeekNumbering: this.calendarWeekNumbering, onSelectionChange: this.onSelectedDatesChange, onShowMonthView: this.onHeaderShowMonthPress, onShowYearView: this.onHeaderShowYearPress, hideWeekNumbers: this.hideWeekNumbers, _currentPicker: this._calendarCurrentPicker, _pickersMode: this._calendarPickersMode, children: this._calendarSelectedDates.map((date) => jsx(CalendarDate_default2, { value: date })) });
}
function defaultFooter() {
}

// node_modules/@ui5/webcomponents/dist/DatePickerTemplate.js
function DatePickerTemplate() {
  return [
    DatePickerInputTemplate.call(this),
    DatePickerPopoverTemplate.call(this)
  ];
}

// node_modules/@ui5/webcomponents/dist/generated/themes/DatePicker.css.js
registerThemePropertiesLoader("@ui5/webcomponents-theming", "sap_horizon", async () => parameters_bundle_css_default);
registerThemePropertiesLoader("@ui5/webcomponents", "sap_horizon", async () => parameters_bundle_css_default2);
var DatePicker_css_default = `.ui5-hidden-text{position:absolute;clip:rect(1px,1px,1px,1px);user-select:none;left:-1000px;top:-1000px;pointer-events:none;font-size:0}.inputIcon{color:var(--_ui5-v2-8-0_input_icon_color);cursor:pointer;outline:none;padding:var(--_ui5-v2-8-0_input_icon_padding);border-inline-start:var(--_ui5-v2-8-0_input_icon_border);min-width:1rem;min-height:1rem;border-radius:var(--_ui5-v2-8-0_input_icon_border_radius)}.inputIcon.inputIcon--pressed{background:var(--_ui5-v2-8-0_input_icon_pressed_bg);box-shadow:var(--_ui5-v2-8-0_input_icon_box_shadow);border-inline-start:var(--_ui5-v2-8-0_select_hover_icon_left_border);color:var(--_ui5-v2-8-0_input_icon_pressed_color)}.inputIcon:active{background-color:var(--sapButton_Active_Background);box-shadow:var(--_ui5-v2-8-0_input_icon_box_shadow);border-inline-start:var(--_ui5-v2-8-0_select_hover_icon_left_border);color:var(--_ui5-v2-8-0_input_icon_pressed_color)}.inputIcon:not(.inputIcon--pressed):not(:active):hover{background:var(--_ui5-v2-8-0_input_icon_hover_bg);box-shadow:var(--_ui5-v2-8-0_input_icon_box_shadow)}.inputIcon:hover{border-inline-start:var(--_ui5-v2-8-0_select_hover_icon_left_border);box-shadow:var(--_ui5-v2-8-0_input_icon_box_shadow)}:host([readonly]:not([disabled])){border-color:var(--_ui5-v2-8-0_input_readonly_border_color);background:var(--sapField_ReadOnly_BackgroundStyle);background-color:var(--_ui5-v2-8-0_input_readonly_background)}:host([disabled]){opacity:var(--_ui5-v2-8-0_input_disabled_opacity);cursor:default;pointer-events:none;background-color:var(--_ui5-v2-8-0-input_disabled_background);border-color:var(--_ui5-v2-8-0_input_disabled_border_color)}:host([value-state="Negative"]) .inputIcon:not(.inputIcon--pressed):not(:active):hover{box-shadow:var(--_ui5-v2-8-0_input_error_icon_box_shadow)}:host([value-state="Critical"]) .inputIcon:not(.inputIcon--pressed):not(:active):hover{box-shadow:var(--_ui5-v2-8-0_input_warning_icon_box_shadow)}:host([value-state="Information"]) .inputIcon:not(.inputIcon--pressed):not(:active):hover{box-shadow:var(--_ui5-v2-8-0_input_information_icon_box_shadow)}:host([value-state="Positive"]) .inputIcon:not(.inputIcon--pressed):not(:active):hover{box-shadow:var(--_ui5-v2-8-0_input_success_icon_box_shadow)}:host([value-state="Negative"]:not([readonly]):not([disabled])){background:var(--sapField_InvalidBackgroundStyle);background-color:var(--sapField_InvalidBackground);border-color:var(--_ui5-v2-8-0_input_value_state_error_border_color);box-shadow:var(--sapField_InvalidShadow)}:host([value-state="Critical"]:not([readonly]):not([disabled])){background:var(--sapField_WarningBackgroundStyle);background-color:var(--sapField_WarningBackground);border-color:var(--_ui5-v2-8-0_input_value_state_warning_border_color);box-shadow:var(--sapField_WarningShadow)}:host([value-state="Positive"]:not([readonly]):not([disabled])){background:var(--sapField_SuccessBackgroundStyle);background-color:var(--sapField_SuccessBackground);border-color:var(--_ui5-v2-8-0_input_value_state_success_border_color);border-width:var(--_ui5-v2-8-0_input_value_state_success_border_width);box-shadow:var(--sapField_SuccessShadow)}:host([value-state="Information"]:not([readonly]):not([disabled])){background:var(--sapField_InformationBackgroundStyle);background-color:var(--sapField_InformationBackground);border-color:var(--_ui5-v2-8-0_input_value_state_information_border_color);border-width:var(--_ui5-v2-8-0_input_information_border_width);box-shadow:var(--sapField_InformationShadow)}:host([value-state="Negative"]) .inputIcon:active,:host([value-state="Negative"]) .inputIcon.inputIcon--pressed{box-shadow:var(--_ui5-v2-8-0_input_error_icon_box_shadow);color:var(--_ui5-v2-8-0_input_icon_error_pressed_color)}:host([value-state="Critical"]) .inputIcon:active,:host([value-state="Critical"]) .inputIcon.inputIcon--pressed{box-shadow:var(--_ui5-v2-8-0_input_warning_icon_box_shadow);color:var(--_ui5-v2-8-0_input_icon_warning_pressed_color)}:host([value-state="Information"]) .inputIcon:active,:host([value-state="Information"]) .inputIcon.inputIcon--pressed{box-shadow:var(--_ui5-v2-8-0_input_information_icon_box_shadow);color:var(--_ui5-v2-8-0_input_icon_information_pressed_color)}:host([value-state="Positive"]) .inputIcon:active,:host([value-state="Positive"]) .inputIcon.inputIcon--pressed{box-shadow:var(--_ui5-v2-8-0_input_success_icon_box_shadow);color:var(--_ui5-v2-8-0_input_icon_success_pressed_color)}:host([value-state="Negative"]) .inputIcon,:host([value-state="Critical"]) .inputIcon{padding:var(--_ui5-v2-8-0_input_error_warning_icon_padding)}:host([value-state="Information"]) .inputIcon{padding:var(--_ui5-v2-8-0_input_information_icon_padding)}:host(:not([hidden])){display:inline-block;line-height:normal;letter-spacing:normal;word-spacing:normal;height:var(--_ui5-v2-8-0_input_height);border-radius:var(--_ui5-v2-8-0_input_border_radius)}:host{min-width:calc(var(--_ui5-v2-8-0_input_min_width) + var(--_ui5-v2-8-0_input_icon_width));color:var(--sapField_TextColor);background-color:var(--sapField_Background);border-radius:var(--_ui5-v2-8-0-datepicker_border_radius);margin:var(--_ui5-v2-8-0_input_margin_top_bottom) 0;user-select:none;-moz-user-select:none;-webkit-user-select:none;-ms-user-select:none}:host(:not([disabled]):not([readonly]):active){background:var(--_ui5-v2-8-0-datepicker-hover-background)}:host(:not([disabled]):not([readonly]):hover){background:var(--_ui5-v2-8-0-datepicker-hover-background)}.ui5-date-picker-root{border-radius:inherit;height:inherit;line-height:inherit;letter-spacing:inherit;word-spacing:inherit}:host .ui5-date-picker-input{width:100%;min-width:12.5625rem;color:inherit;background-color:inherit;border-radius:inherit;height:inherit;line-height:inherit;letter-spacing:inherit;word-spacing:inherit;margin:inherit}:host(:not([disabled]):not([readonly])) .ui5-date-picker-input[focused]{background-color:var(--_ui5-v2-8-0-datepicker-hover-background)}
`;

// node_modules/@ui5/webcomponents/dist/generated/themes/DatePickerPopover.css.js
registerThemePropertiesLoader("@ui5/webcomponents-theming", "sap_horizon", async () => parameters_bundle_css_default);
registerThemePropertiesLoader("@ui5/webcomponents", "sap_horizon", async () => parameters_bundle_css_default2);
var DatePickerPopover_css_default = `[ui5-calendar]{width:100%;display:flex;justify-content:center}[ui5-responsive-popover]::part(content){padding:0}
`;

// node_modules/@ui5/webcomponents/dist/DatePicker.js
var __decorate31 = function(decorators, target, key, desc) {
  var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
  if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
  else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
  return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var DatePicker_1;
var DatePicker = DatePicker_1 = class DatePicker2 extends DateComponentBase_default {
  constructor() {
    super(...arguments);
    this.value = "";
    this.valueState = "None";
    this.required = false;
    this.disabled = false;
    this.readonly = false;
    this.hideWeekNumbers = false;
    this.open = false;
    this._calendarCurrentPicker = "day";
  }
  get formValidityMessage() {
    return DatePicker_1.i18nBundle.getText(FORM_TEXTFIELD_REQUIRED);
  }
  get formValidity() {
    return { valueMissing: this.required && !this.value };
  }
  async formElementAnchor() {
    var _a;
    return (_a = await this.getFocusDomRefAsync()) == null ? void 0 : _a.getFocusDomRefAsync();
  }
  get formFormattedValue() {
    return this.value;
  }
  /**
   * @protected
   */
  onResponsivePopoverAfterClose() {
    var _a;
    this.open = false;
    if (isPhone()) {
      this.blur();
    } else {
      (_a = this._getInput()) == null ? void 0 : _a.focus();
    }
    this.fireDecoratorEvent("close");
  }
  onResponsivePopoverAfterOpen() {
    this.fireDecoratorEvent("open");
  }
  onResponsivePopoverBeforeOpen() {
    this._calendar.timestamp = this._calendarTimestamp;
    this._calendarCurrentPicker = this.firstPicker;
  }
  onBeforeRendering() {
    ["minDate", "maxDate"].forEach((prop) => {
      const propValue = this[prop];
      if (!this.isValid(propValue)) {
        console.warn(`Invalid value for property "${prop}": ${propValue} is not compatible with the configured format pattern: "${this._displayFormat}"`);
      }
    });
    this.value = this.normalizeValue(this.value) || this.value;
    this.liveValue = this.value;
  }
  get _calendar() {
    return this.shadowRoot.querySelector("[ui5-responsive-popover]").querySelector("[ui5-calendar]");
  }
  /**
   * Override in derivatives to change calendar selection mode
   * @protected
   */
  get _calendarSelectionMode() {
    return "Single";
  }
  /**
   * Used to provide a timestamp to the Calendar (to focus it to a relevant date when open) based on the component's state
   * Override in derivatives to provide the calendar a timestamp based on their properties
   * By default focus the calendar on the selected date if set, or the current day otherwise
   * @protected
   */
  get _calendarTimestamp() {
    if (this.value && this.dateValueUTC && this._checkValueValidity(this.value)) {
      const millisecondsUTC = this.dateValueUTC.getTime();
      return getRoundedTimestamp_default(millisecondsUTC);
    }
    return getTodayUTCTimestamp_default(this._primaryCalendarType);
  }
  /**
   * Used to provide selectedDates to the calendar based on the component's state
   * Override in derivatives to provide different rules for setting the calendar's selected dates
   * @protected
   */
  get _calendarSelectedDates() {
    if (this.value && this._checkValueValidity(this.value)) {
      return [this.value];
    }
    return [];
  }
  _onkeydown(e) {
    if (isShow(e)) {
      e.preventDefault();
      if (this.open) {
        if (!isF4(e)) {
          this._toggleAndFocusInput();
        }
      } else {
        this._toggleAndFocusInput();
      }
    }
    const target = e.target;
    if (target && this.open && this._getInput().id === target.id && (isTabNext(e) || isTabPrevious(e) || isF6Next(e) || isF6Previous(e))) {
      this._togglePicker();
    }
    if (this.open) {
      return;
    }
    if (isEnter(e)) {
      if (this._internals.form) {
        submitForm(this);
      }
    } else if (isPageUpShiftCtrl(e)) {
      e.preventDefault();
      this._modifyDateValue(1, "year");
    } else if (isPageUpShift(e)) {
      e.preventDefault();
      this._modifyDateValue(1, "month");
    } else if (isPageUp(e)) {
      e.preventDefault();
      this._modifyDateValue(1, "day");
    } else if (isPageDownShiftCtrl(e)) {
      e.preventDefault();
      this._modifyDateValue(-1, "year");
    } else if (isPageDownShift(e)) {
      e.preventDefault();
      this._modifyDateValue(-1, "month");
    } else if (isPageDown(e)) {
      e.preventDefault();
      this._modifyDateValue(-1, "day");
    }
  }
  /**
   * @param amount
   * @param unit
   * @param preserveDate whether to preserve the day of the month (f.e. 15th of March + 1 month = 15th of April)
   * @protected
   */
  _modifyDateValue(amount, unit, preserveDate) {
    if (!this.dateValue) {
      return;
    }
    const modifiedDate = modifyDateBy_default(CalendarDate_default.fromLocalJSDate(this.dateValue), amount, unit, preserveDate, this._minDate, this._maxDate);
    const newValue = this.formatValue(modifiedDate.toUTCJSDate());
    this._updateValueAndFireEvents(newValue, true, ["change", "value-changed"]);
  }
  _updateValueAndFireEvents(value, normalizeValue, events, updateValue = true) {
    const valid = this._checkValueValidity(value);
    if (valid && normalizeValue) {
      value = this.normalizeValue(value);
    }
    let executeEvent = true;
    this.liveValue = value;
    const previousValue = this.value;
    if (updateValue) {
      this._getInput().value = value;
      this.value = value;
      this._updateValueState();
    }
    events.forEach((e) => {
      if (!this.fireDecoratorEvent(e, { value, valid })) {
        executeEvent = false;
      }
    });
    if (!executeEvent && updateValue) {
      if (this.value !== previousValue && this.value !== this._getInput().value) {
        return;
      }
      this._getInput().value = previousValue;
      this.value = previousValue;
    }
  }
  _updateValueState() {
    const valid = this._checkValueValidity(this.value);
    const previousValueState = this.valueState;
    this.valueState = valid ? ValueState_default.None : ValueState_default.Negative;
    const eventPrevented = !this.fireDecoratorEvent("value-state-change", { valueState: this.valueState, valid });
    if (eventPrevented) {
      this.valueState = previousValueState;
    }
  }
  _getInput() {
    return this.shadowRoot.querySelector("[ui5-input]");
  }
  /**
   * The ui5-input "submit" event handler - fire change event when the user presses enter
   * @protected
   */
  _onInputSubmit() {
  }
  /**
   * The ui5-input "change" event handler - fire change event when the user focuses out of the input
   * @protected
   */
  _onInputChange(e) {
    this._updateValueAndFireEvents(e.target.value, true, ["change", "value-changed"]);
  }
  /**
   * The ui5-input "input" event handler - fire input even when the user types
   * @protected
   */
  _onInputInput(e) {
    this._updateValueAndFireEvents(e.target.value, false, ["input"], false);
  }
  /**
   * Checks if the provided value is valid and within valid range.
   * @protected
   * @param value
   */
  _checkValueValidity(value) {
    if (value === "") {
      return true;
    }
    return this.isValid(value) && this.isInValidRange(value);
  }
  _click(e) {
    if (isPhone()) {
      this.responsivePopover.opener = this;
      this.responsivePopover.open = true;
      e.preventDefault();
    }
  }
  /**
   * Checks if a value is valid against the current date format of the DatePicker.
   * @public
   * @param value A value to be tested against the current date format
   */
  isValid(value) {
    if (value === "" || value === void 0) {
      return true;
    }
    return !!this.getFormat().parse(value);
  }
  /**
   * Checks if a date is between the minimum and maximum date.
   * @public
   * @param value A value to be checked
   */
  isInValidRange(value) {
    if (value === "" || value === void 0) {
      return true;
    }
    const calendarDate = this._getCalendarDateFromString(value);
    if (!calendarDate || !this._minDate || !this._maxDate) {
      return false;
    }
    return calendarDate.valueOf() >= this._minDate.valueOf() && calendarDate.valueOf() <= this._maxDate.valueOf();
  }
  /**
   * The parser understands many formats, but we need one format
   * @protected
   */
  normalizeValue(value) {
    if (value === "") {
      return value;
    }
    return this.getFormat().format(this.getFormat().parse(value, true), true);
  }
  get _displayFormat() {
    return this.getFormat().oFormatOptions.pattern;
  }
  /**
   * @protected
   */
  get _placeholder() {
    return this.placeholder !== void 0 ? this.placeholder : this._displayFormat;
  }
  get _headerTitleText() {
    return DatePicker_1.i18nBundle.getText(INPUT_SUGGESTIONS_TITLE);
  }
  get phone() {
    return isPhone();
  }
  get showHeader() {
    return this.phone;
  }
  get showFooter() {
    return this.phone;
  }
  get accInfo() {
    return {
      "ariaRoledescription": this.dateAriaDescription,
      "ariaHasPopup": "grid",
      "ariaRequired": this.required,
      "ariaLabel": getEffectiveAriaLabelText(this)
    };
  }
  get openIconTitle() {
    return DatePicker_1.i18nBundle.getText(DATEPICKER_OPEN_ICON_TITLE);
  }
  get openIconName() {
    return "appointment-2";
  }
  get dateAriaDescription() {
    return DatePicker_1.i18nBundle.getText(DATEPICKER_DATE_DESCRIPTION);
  }
  get pickerAccessibleName() {
    return DatePicker_1.i18nBundle.getText(DATEPICKER_POPOVER_ACCESSIBLE_NAME);
  }
  /**
   * Defines whether the dialog on mobile should have header
   * @private
   */
  get _shouldHideHeader() {
    return false;
  }
  /**
   * Returns the first picker depending on the CalendarPickerMode
   */
  get firstPicker() {
    const calendarPickerMode = this._calendarPickersMode;
    let firstPicker = "day";
    if (calendarPickerMode === CalendarPickersMode_default.YEAR) {
      firstPicker = "year";
    } else if (calendarPickerMode === CalendarPickersMode_default.MONTH_YEAR) {
      firstPicker = "month";
    }
    return firstPicker;
  }
  /**
   * Defines whether the value help icon is hidden
   * @private
   */
  get _iconMode() {
    return isDesktop() ? IconMode_default.Decorative : IconMode_default.Interactive;
  }
  _respPopover() {
    return this.shadowRoot.querySelector("[ui5-responsive-popover]");
  }
  _canOpenPicker() {
    return !this.disabled && !this.readonly;
  }
  get _calendarPickersMode() {
    const format = this.getFormat();
    const patternSymbolTypes = format.aFormatArray.map((patternSymbolSettings) => {
      return patternSymbolSettings.type.toLowerCase();
    });
    if (patternSymbolTypes.includes("day")) {
      return CalendarPickersMode_default.DAY_MONTH_YEAR;
    }
    if (patternSymbolTypes.includes("month") || patternSymbolTypes.includes("monthstandalone")) {
      return CalendarPickersMode_default.MONTH_YEAR;
    }
    return CalendarPickersMode_default.YEAR;
  }
  /**
   * The user selected a new date in the calendar
   * @param e
   * @protected
   */
  onSelectedDatesChange(e) {
    e.preventDefault();
    const newValue = e.detail.selectedValues && e.detail.selectedValues[0];
    this._updateValueAndFireEvents(newValue, true, ["change", "value-changed"]);
    this._togglePicker();
  }
  /**
   * The user clicked the "month" button in the header
   */
  onHeaderShowMonthPress() {
    this._calendarCurrentPicker = "month";
  }
  /**
   * The user clicked the "year" button in the header
   */
  onHeaderShowYearPress() {
    this._calendarCurrentPicker = "year";
  }
  /**
   * Formats a Java Script date object into a string representing a locale date
   * according to the `formatPattern` property of the DatePicker instance
   * @public
   * @param date A Java Script date object to be formatted as string
   * @returns The date as string
   */
  formatValue(date) {
    return this.getFormat().format(date);
  }
  _togglePicker() {
    this.open = !this.open;
  }
  _toggleAndFocusInput() {
    this._togglePicker();
    this._getInput().focus();
  }
  /**
   * Currently selected date represented as a Local JavaScript Date instance.
   * @public
   * @default null
   */
  get dateValue() {
    return this.liveValue ? this.getFormat().parse(this.liveValue) : this.getFormat().parse(this.value);
  }
  get dateValueUTC() {
    return this.liveValue ? this.getFormat().parse(this.liveValue, true) : this.getFormat().parse(this.value);
  }
  get styles() {
    return {
      main: {
        width: "100%"
      }
    };
  }
  get type() {
    return InputType_default.Text;
  }
};
__decorate31([
  property_default()
], DatePicker.prototype, "value", void 0);
__decorate31([
  property_default()
], DatePicker.prototype, "valueState", void 0);
__decorate31([
  property_default({ type: Boolean })
], DatePicker.prototype, "required", void 0);
__decorate31([
  property_default({ type: Boolean })
], DatePicker.prototype, "disabled", void 0);
__decorate31([
  property_default({ type: Boolean })
], DatePicker.prototype, "readonly", void 0);
__decorate31([
  property_default()
], DatePicker.prototype, "placeholder", void 0);
__decorate31([
  property_default()
], DatePicker.prototype, "name", void 0);
__decorate31([
  property_default({ type: Boolean })
], DatePicker.prototype, "hideWeekNumbers", void 0);
__decorate31([
  property_default({ type: Boolean })
], DatePicker.prototype, "open", void 0);
__decorate31([
  property_default()
], DatePicker.prototype, "accessibleName", void 0);
__decorate31([
  property_default()
], DatePicker.prototype, "accessibleNameRef", void 0);
__decorate31([
  property_default({ type: Object })
], DatePicker.prototype, "_respPopoverConfig", void 0);
__decorate31([
  property_default()
], DatePicker.prototype, "_calendarCurrentPicker", void 0);
__decorate31([
  slot_default({ type: HTMLElement })
], DatePicker.prototype, "valueStateMessage", void 0);
__decorate31([
  i18n_default("@ui5/webcomponents")
], DatePicker, "i18nBundle", void 0);
DatePicker = DatePicker_1 = __decorate31([
  customElement_default({
    tag: "ui5-date-picker",
    languageAware: true,
    formAssociated: true,
    template: DatePickerTemplate,
    styles: [
      DatePicker_css_default,
      ResponsivePopoverCommon_css_default,
      DatePickerPopover_css_default
    ]
  }),
  event_strict_default("change", {
    bubbles: true,
    cancelable: true
  }),
  event_strict_default("input", {
    bubbles: true,
    cancelable: true
  }),
  event_strict_default("value-state-change", {
    bubbles: true,
    cancelable: true
  }),
  event_strict_default("open"),
  event_strict_default("close")
], DatePicker);
DatePicker.define();
var DatePicker_default = DatePicker;

// node_modules/@ui5/webcomponents-react/dist/webComponents/DatePicker/index.js
var DatePicker3 = withWebComponent("ui5-date-picker", ["accessibleName", "accessibleNameRef", "calendarWeekNumbering", "formatPattern", "maxDate", "minDate", "name", "placeholder", "primaryCalendarType", "secondaryCalendarType", "value", "valueState"], ["disabled", "hideWeekNumbers", "open", "readonly", "required"], ["valueStateMessage"], ["change", "close", "input", "open", "value-state-change"]);
DatePicker3.displayName = "DatePicker";

// node_modules/@ui5/webcomponents/dist/DateRangePickerTemplate.js
function DateRangePickerTemplate() {
  return [
    DatePickerInputTemplate.call(this),
    DatePickerPopoverTemplate.call(this, { content: content2 })
  ];
}
function content2() {
  return jsx(Calendar_default, { id: `${this._id}-calendar`, primaryCalendarType: this._primaryCalendarType, secondaryCalendarType: this.secondaryCalendarType, formatPattern: this._formatPattern, selectionMode: this._calendarSelectionMode, minDate: this.minDate, maxDate: this.maxDate, calendarWeekNumbering: this.calendarWeekNumbering, onSelectionChange: this.onSelectedDatesChange, onShowMonthView: this.onHeaderShowMonthPress, onShowYearView: this.onHeaderShowYearPress, hideWeekNumbers: this.hideWeekNumbers, _currentPicker: this._calendarCurrentPicker, _pickersMode: this._calendarPickersMode, children: jsx(CalendarDateRange_default, { startValue: this.startValue, endValue: this.endValue }) });
}

// node_modules/@ui5/webcomponents/dist/generated/themes/DateRangePicker.css.js
registerThemePropertiesLoader("@ui5/webcomponents-theming", "sap_horizon", async () => parameters_bundle_css_default);
registerThemePropertiesLoader("@ui5/webcomponents", "sap_horizon", async () => parameters_bundle_css_default2);
var DateRangePicker_css_default = `:host(:not([hidden])){display:inline-block}:host{min-width:15rem;color:var(--sapField_TextColor);background-color:var(--sapField_Background)}:host .ui5-date-picker-input{width:100%;min-width:inherit;color:inherit;background-color:inherit}
`;

// node_modules/@ui5/webcomponents/dist/DateRangePicker.js
var __decorate32 = function(decorators, target, key, desc) {
  var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
  if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
  else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
  return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var DateRangePicker_1;
var DEFAULT_DELIMITER = "-";
var DateRangePicker = DateRangePicker_1 = class DateRangePicker2 extends DatePicker_default {
  get formFormattedValue() {
    const values = this._splitValueByDelimiter(this.value || "").filter(Boolean);
    if (values.length && this.name) {
      const formData = new FormData();
      for (let i = 0; i < values.length; i++) {
        formData.append(this.name, values[i]);
      }
      return formData;
    }
    return this.value;
  }
  constructor() {
    super();
    this.delimiter = "-";
    this._prevDelimiter = null;
  }
  /**
   * **Note:** The getter method is inherited and not supported. If called it will return an empty value.
   * @public
   * @default null
   */
  get dateValue() {
    return null;
  }
  /**
   * **Note:** The getter method is inherited and not supported. If called it will return an empty value.
   * @public
   * @default null
   */
  get dateValueUTC() {
    return null;
  }
  get _startDateTimestamp() {
    return this._extractFirstTimestamp(this.value);
  }
  get _endDateTimestamp() {
    return this._extractLastTimestamp(this.value);
  }
  get _tempTimestamp() {
    return this._tempValue && this.getFormat().parse(this._tempValue, true).getTime() / 1e3;
  }
  /**
   * Required by DatePicker.js
   * @override
   */
  get _calendarSelectionMode() {
    return "Range";
  }
  /**
   * Required by DatePicker.js - set the calendar focus on the first selected date (or today if not set)
   * @override
   */
  get _calendarTimestamp() {
    return this._tempTimestamp || this._startDateTimestamp || getTodayUTCTimestamp_default(this._primaryCalendarType);
  }
  /**
   * Required by DatePicker.js
   * @override
   */
  get _calendarSelectedDates() {
    if (this._tempValue) {
      return [this._tempValue];
    }
    if (this.value && this._checkValueValidity(this.value)) {
      return this._splitValueByDelimiter(this.value);
    }
    return [];
  }
  /**
   * Returns the start date of the currently selected range as JavaScript Date instance.
   * @public
   * @default null
   */
  get startDateValue() {
    return CalendarDate_default.fromTimestamp(this._startDateTimestamp * 1e3).toLocalJSDate();
  }
  /**
   * Returns the end date of the currently selected range as JavaScript Date instance.
   * @public
   * @default null
   */
  get endDateValue() {
    return CalendarDate_default.fromTimestamp(this._endDateTimestamp * 1e3).toLocalJSDate();
  }
  get startValue() {
    return this._calendarSelectedDates[0] || "";
  }
  get endValue() {
    return this._calendarSelectedDates[1] || "";
  }
  /**
   * @override
   */
  get _placeholder() {
    return this.placeholder !== void 0 ? this.placeholder : `${this._displayFormat} ${this._effectiveDelimiter} ${this._displayFormat}`;
  }
  /**
   * @override
   */
  get dateAriaDescription() {
    return DateRangePicker_1.i18nBundle.getText(DATERANGE_DESCRIPTION);
  }
  /**
   * @override
   */
  get pickerAccessibleName() {
    return DateRangePicker_1.i18nBundle.getText(DATERANGEPICKER_POPOVER_ACCESSIBLE_NAME);
  }
  /**
   * @override
   */
  async _onInputSubmit() {
    const input = this._getInput();
    const caretPos = input.getCaretPosition();
    await renderFinished();
    input.setCaretPosition(caretPos);
  }
  /**
   * @override
   */
  onResponsivePopoverAfterClose() {
    this._tempValue = "";
    super.onResponsivePopoverAfterClose();
  }
  /**
   * @override
   */
  isValid(value) {
    const parts = this._splitValueByDelimiter(value);
    return parts.length <= 2 && parts.every((dateString) => super.isValid(dateString));
  }
  /**
   * @override
   */
  isInValidRange(value) {
    return this._splitValueByDelimiter(value).every((dateString) => super.isInValidRange(dateString));
  }
  /**
   * Extract both dates as timestamps, flip if necessary, and build (which will use the desired format so we enforce the format too)
   * @override
   */
  normalizeValue(value) {
    const firstDateTimestamp = this._extractFirstTimestamp(value);
    const lastDateTimestamp = this._extractLastTimestamp(value);
    if (firstDateTimestamp && lastDateTimestamp && firstDateTimestamp > lastDateTimestamp) {
      return this._buildValue(lastDateTimestamp, firstDateTimestamp);
    }
    return this._buildValue(firstDateTimestamp, lastDateTimestamp);
  }
  /**
   * @override
   */
  onSelectedDatesChange(event) {
    event.preventDefault();
    const values = event.detail.selectedValues;
    if (values.length === 0) {
      return;
    }
    if (values.length === 1) {
      this._tempValue = values[0];
      return;
    }
    const newValue = this._buildValue(event.detail.selectedDates[0], event.detail.selectedDates[1]);
    this._updateValueAndFireEvents(newValue, true, ["change", "value-changed"]);
    this._togglePicker();
  }
  /**
   * @override
   */
  async _modifyDateValue(amount, unit, preserveDate) {
    if (!this._endDateTimestamp) {
      return super._modifyDateValue(amount, unit, preserveDate);
    }
    const input = this._getInput();
    let caretPos = input.getCaretPosition();
    let newValue;
    if (caretPos <= this.value.indexOf(this._effectiveDelimiter)) {
      const startDateModified = modifyDateBy_default(CalendarDate_default.fromTimestamp(this._startDateTimestamp * 1e3), amount, unit, preserveDate, this._minDate, this._maxDate);
      const newStartDateTimestamp = startDateModified.valueOf() / 1e3;
      if (newStartDateTimestamp > this._endDateTimestamp) {
        caretPos += Math.ceil(this.value.length / 2);
      }
      newValue = this._buildValue(newStartDateTimestamp, this._endDateTimestamp);
    } else {
      const endDateModified = modifyDateBy_default(CalendarDate_default.fromTimestamp(this._endDateTimestamp * 1e3), amount, unit, preserveDate, this._minDate, this._maxDate);
      const newEndDateTimestamp = endDateModified.valueOf() / 1e3;
      newValue = this._buildValue(this._startDateTimestamp, newEndDateTimestamp);
      if (newEndDateTimestamp < this._startDateTimestamp) {
        caretPos -= Math.ceil(this.value.length / 2);
      }
    }
    this._updateValueAndFireEvents(newValue, true, ["change", "value-changed"]);
    await renderFinished();
    input.setCaretPosition(caretPos);
  }
  get _effectiveDelimiter() {
    return this.delimiter || DEFAULT_DELIMITER;
  }
  _splitValueByDelimiter(value) {
    const valuesArray = [];
    const partsArray = value.split(this._prevDelimiter || this._effectiveDelimiter);
    if (this.getFormat().parse(value)) {
      valuesArray[0] = partsArray.join(this._effectiveDelimiter);
      valuesArray[1] = "";
    } else {
      valuesArray[0] = partsArray.slice(0, partsArray.length / 2).join(this._effectiveDelimiter);
      valuesArray[1] = partsArray.slice(partsArray.length / 2).join(this._effectiveDelimiter);
    }
    return valuesArray;
  }
  /**
   * Returns a UTC timestamp, representing the first date in the value string or undefined if the value is empty
   * @private
   */
  _extractFirstTimestamp(value) {
    if (!value || !this._checkValueValidity(value)) {
      return void 0;
    }
    const dateStrings = this._splitValueByDelimiter(value);
    const parsedDate = this.getFormat().parse(dateStrings[0], true);
    return parsedDate.getTime() / 1e3;
  }
  /**
   * Returns a UTC timestamp, representing the last date in the value string or undefined if the value is empty or there is just one date
   * @private
   */
  _extractLastTimestamp(value) {
    if (!value || !this._checkValueValidity(value)) {
      return void 0;
    }
    const dateStrings = this._splitValueByDelimiter(value);
    if (dateStrings[1]) {
      const parsedDate = this.getFormat().parse(dateStrings[1], true);
      return parsedDate.getTime() / 1e3;
    }
    return void 0;
  }
  /**
   * Builds a string value out of two UTC timestamps - this method is the counterpart to _extractFirstTimestamp/_extractLastTimestamp
   * @private
   */
  _buildValue(firstDateTimestamp, lastDateTimestamp) {
    this._prevDelimiter = this._effectiveDelimiter;
    if (firstDateTimestamp) {
      const firstDateString = this._getStringFromTimestamp(firstDateTimestamp * 1e3);
      if (!lastDateTimestamp) {
        return firstDateString;
      }
      const lastDateString = this._getStringFromTimestamp(lastDateTimestamp * 1e3);
      return `${firstDateString} ${this._effectiveDelimiter} ${lastDateString}`;
    }
    return "";
  }
};
__decorate32([
  property_default()
], DateRangePicker.prototype, "delimiter", void 0);
__decorate32([
  property_default()
], DateRangePicker.prototype, "_tempValue", void 0);
DateRangePicker = DateRangePicker_1 = __decorate32([
  customElement_default({
    tag: "ui5-daterange-picker",
    styles: [DatePicker_default.styles, DateRangePicker_css_default],
    template: DateRangePickerTemplate
  })
], DateRangePicker);
DateRangePicker.define();

// node_modules/@ui5/webcomponents-react/dist/webComponents/DateRangePicker/index.js
var DateRangePicker3 = withWebComponent("ui5-daterange-picker", ["accessibleName", "accessibleNameRef", "calendarWeekNumbering", "delimiter", "formatPattern", "maxDate", "minDate", "name", "placeholder", "primaryCalendarType", "secondaryCalendarType", "value", "valueState"], ["disabled", "hideWeekNumbers", "open", "readonly", "required"], ["valueStateMessage"], ["change", "close", "input", "open", "value-state-change"]);
DateRangePicker3.displayName = "DateRangePicker";

// node_modules/@ui5/webcomponents-icons/dist/v4/date-time.js
var name9 = "date-time";
var pathData9 = "M352 192q33 0 62 12.5t51 34.5 34.5 51 12.5 62-12.5 62-34.5 51-51 34.5-62 12.5-62-12.5-51-34.5-34.5-51-12.5-62 12.5-62 34.5-51 51-34.5 62-12.5zM32 32h64V0h32v32h192V0h32v32h64q14 0 23 9t9 23v96h-32v-32H32v352h128v32H32q-14 0-23-9t-9-23V64q0-14 9-23t23-9zm192 320q0 27 10 50t27.5 40.5T302 470t50 10 50-10 40.5-27.5T470 402t10-50-10-50-27.5-40.5T402 234t-50-10-50 10-40.5 27.5T234 302t-10 50zm127-64q16 0 16 16v48h49q16 0 16 16 0 6-4.5 11t-11.5 5h-65q-7 0-11.5-5t-4.5-11v-64q0-16 16-16zm1-192V64h-32v32h32zM96 64v32h32V64H96z";
var ltr9 = true;
var collection9 = "SAP-icons-v4";
var packageName9 = "@ui5/webcomponents-icons";
registerIcon(name9, { pathData: pathData9, ltr: ltr9, collection: collection9, packageName: packageName9 });

// node_modules/@ui5/webcomponents-icons/dist/v5/date-time.js
var name10 = "date-time";
var pathData10 = "M83 243v147q0 17 11 28t28 11h4q11 0 18.5 7t7.5 18-7.5 18.5T126 480h-4q-38 0-64-26t-26-64V154q0-38 26-64t64-26h6V26q0-11 7.5-18.5T154 0t18 7.5 7 18.5v38h122V26q0-11 7-18.5T326 0t18.5 7.5T352 26v38h6q38 0 64 26t26 64v4q0 11-7.5 18.5T422 184t-18-7.5-7-18.5v-4q0-17-11-28t-28-11h-6v19q0 11-7.5 18.5T326 160t-18-7.5-7-18.5v-19H179v19q0 11-7 18.5t-18 7.5-18.5-7.5T128 134v-19h-6q-17 0-28 11t-11 28v38h51q11 0 18.5 7.5T160 218t-7.5 18-18.5 7H83zm237-51q33 0 62 12.5t51 34.5 34.5 51 12.5 62-12.5 62-34.5 51-51 34.5-62 12.5-62-12.5-51-34.5-34.5-51-12.5-62 12.5-62 34.5-51 51-34.5 62-12.5zm0 269q23 0 42.5-8.5T397 429t23.5-35 8.5-42q0-23-8.5-42.5T397 275t-34.5-23.5T320 243q-22 0-42 8.5T243 275t-23.5 34.5T211 352q0 22 8.5 42t23.5 35 35 23.5 42 8.5zm55-90q9 7 9 19 0 11-7.5 18.5T358 416q-8 0-16-6l-45-39q-9-8-9-19v-46q0-11 7.5-18.5T314 280t18 7.5 7 18.5v34z";
var ltr10 = true;
var collection10 = "SAP-icons-v5";
var packageName10 = "@ui5/webcomponents-icons";
registerIcon(name10, { pathData: pathData10, ltr: ltr10, collection: collection10, packageName: packageName10 });

// node_modules/@ui5/webcomponents/dist/SegmentedButtonItemTemplate.js
function SegmentedButtonItemTemplate() {
  return jsxs("li", { role: "option", class: "ui5-segmented-button-item-root", "aria-posinset": this.posInSet, "aria-setsize": this.sizeOfSet, "aria-selected": this.selected, "aria-disabled": this.disabled, "aria-roledescription": this.ariaDescription, "data-sap-focus-ref": true, onClick: this._onclick, onKeyUp: this._onkeyup, tabindex: this.tabIndexValue ? parseInt(this.tabIndexValue) : void 0, "aria-label": this.ariaLabelText, title: this.tooltip, children: [this.icon && jsx(Icon_default, { part: "icon", class: "ui5-segmented-button-item-icon", name: this.icon, showTooltip: this.showIconTooltip }), jsx("span", { id: `${this._id}-content`, class: "ui5-segmented-button-item-text", children: jsx("bdi", { children: jsx("slot", {}) }) })] });
}

// node_modules/@ui5/webcomponents/dist/generated/themes/SegmentedButtonItem.css.js
registerThemePropertiesLoader("@ui5/webcomponents-theming", "sap_horizon", async () => parameters_bundle_css_default);
registerThemePropertiesLoader("@ui5/webcomponents", "sap_horizon", async () => parameters_bundle_css_default2);
var SegmentedButtonItem_css_default = `:host{vertical-align:middle}:host(:not([hidden])){display:inline-block}:host{min-width:var(--_ui5-v2-8-0_button_base_min_width);height:var(--_ui5-v2-8-0_button_base_height);line-height:normal;font-family:var(--_ui5-v2-8-0_button_fontFamily);font-size:var(--sapFontSize);text-shadow:var(--_ui5-v2-8-0_button_text_shadow);border-radius:var(--_ui5-v2-8-0_button_border_radius);cursor:pointer;background-color:var(--sapButton_Background);border:var(--sapButton_BorderWidth) solid var(--sapButton_BorderColor);color:var(--sapButton_TextColor);box-sizing:border-box;white-space:nowrap;overflow:hidden;text-overflow:ellipsis}.ui5-segmented-button-item-root{min-width:inherit;cursor:inherit;height:100%;width:100%;box-sizing:border-box;display:flex;justify-content:center;align-items:center;outline:none;padding:0 var(--_ui5-v2-8-0_button_base_padding);position:relative;background:transparent;border:none;color:inherit;text-shadow:inherit;font:inherit;white-space:inherit;overflow:inherit;text-overflow:inherit;letter-spacing:inherit;word-spacing:inherit;line-height:inherit;-webkit-user-select:none;-moz-user-select:none;user-select:none}:host(:not([active]):not([non-interactive]):not([_is-touch]):not([disabled]):hover),:host(:not([hidden]):not([disabled]).ui5_hovered){background:var(--sapButton_Hover_Background);border:.0625rem solid var(--sapButton_Hover_BorderColor);color:var(--sapButton_Hover_TextColor)}.ui5-segmented-button-item-icon{color:inherit;flex-shrink:0;padding-inline-end:.375rem}:host([icon-only]) .ui5-segmented-button-item-icon{padding-inline-end:0}:host([icon-only]) .ui5-segmented-button-item-root{min-width:auto;padding:0}:host([icon-only]) .ui5-segmented-button-item-text{display:none}.ui5-segmented-button-item-text{outline:none;position:relative;white-space:inherit;overflow:inherit;text-overflow:inherit}:host([has-icon]:not([icon-end])) .ui5-segmented-button-item-text{margin-inline-start:var(--_ui5-v2-8-0_button_base_icon_margin)}:host([has-icon][icon-end]) .ui5-segmented-button-item-text{margin-inline-start:0}:host([disabled]){opacity:var(--sapContent_DisabledOpacity);pointer-events:unset;cursor:default}:host([has-icon]:not([icon-only])) .ui5-segmented-button-item-text{min-width:calc(var(--_ui5-v2-8-0_button_base_min_width) - var(--_ui5-v2-8-0_button_base_icon_margin) - 1rem)}:host([disabled]){pointer-events:none}:host([desktop]:not([active])) .ui5-segmented-button-item-root:focus-within:after,:host(:not([active])) .ui5-segmented-button-item-root:focus-visible:after,:host([desktop][active]) .ui5-segmented-button-item-root:focus-within:before,:host([active]) .ui5-segmented-button-item-root:focus-visible:before{content:"";position:absolute;box-sizing:border-box;inset:.0625rem;border:var(--_ui5-v2-8-0_button_focused_border);border-radius:var(--_ui5-v2-8-0_button_focused_border_radius)}:host([desktop][active]) .ui5-segmented-button-item-root:focus-within:before,:host([active]) .ui5-segmented-button-item-root:focus-visible:before{border-color:var(--_ui5-v2-8-0_button_pressed_focused_border_color)}.ui5-segmented-button-item-root::-moz-focus-inner{border:0}bdi{display:block;white-space:inherit;overflow:inherit;text-overflow:inherit}:host([active][desktop]) .ui5-segmented-button-item-root:focus-within:after,:host([active]) .ui5-segmented-button-item-root:focus-visible:after,:host([selected][desktop]) .ui5-segmented-button-item-root:focus-within:after,:host([selected]) .ui5-segmented-button-item-root:focus-visible:after{border-color:var(--_ui5-v2-8-0_button_pressed_focused_border_color);outline:none}:host([desktop]:not(:last-child)) .ui5-segmented-button-item-root:focus-within:after,:host(:not(:last-child)) .ui5-segmented-button-item-root:focus-visible:after{border-start-end-radius:var(--_ui5-v2-8-0_button_focused_inner_border_radius);border-end-end-radius:var(--_ui5-v2-8-0_button_focused_inner_border_radius)}:host([desktop]:not(:first-child)) .ui5-segmented-button-item-root:focus-within:after,:host(:not(:first-child)) .ui5-segmented-button-item-root:focus-visible:after{border-start-start-radius:var(--_ui5-v2-8-0_button_focused_inner_border_radius);border-end-start-radius:var(--_ui5-v2-8-0_button_focused_inner_border_radius)}
`;

// node_modules/@ui5/webcomponents/dist/SegmentedButtonItem.js
var __decorate33 = function(decorators, target, key, desc) {
  var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
  if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
  else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
  return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var SegmentedButtonItem_1;
var SegmentedButtonItem = SegmentedButtonItem_1 = class SegmentedButtonItem2 extends UI5Element_default {
  get ariaDescription() {
    return SegmentedButtonItem_1.i18nBundle.getText(SEGMENTEDBUTTONITEM_ARIA_DESCRIPTION);
  }
  constructor() {
    super();
    this.disabled = false;
    this.selected = false;
    this.iconOnly = false;
    this.nonInteractive = false;
    this.posInSet = 0;
    this.sizeOfSet = 0;
  }
  _onclick(e) {
    if (this.disabled) {
      e.preventDefault();
      e.stopPropagation();
    }
    this.selected = !this.selected;
  }
  onEnterDOM() {
    if (isDesktop()) {
      this.setAttribute("desktop", "");
    }
  }
  onBeforeRendering() {
    this.iconOnly = !willShowContent_default(this.text);
  }
  _onkeyup(e) {
    if (isSpaceShift(e)) {
      e.preventDefault();
    }
  }
  get tabIndexValue() {
    if (this.disabled) {
      return;
    }
    const tabindex = this.getAttribute("tabindex");
    if (tabindex) {
      return tabindex;
    }
    return this.forcedTabIndex;
  }
  get ariaLabelText() {
    return getEffectiveAriaLabelText(this);
  }
  get showIconTooltip() {
    return getEnableDefaultTooltips() && this.iconOnly && !this.tooltip;
  }
};
__decorate33([
  property_default({ type: Boolean })
], SegmentedButtonItem.prototype, "disabled", void 0);
__decorate33([
  property_default({ type: Boolean })
], SegmentedButtonItem.prototype, "selected", void 0);
__decorate33([
  property_default()
], SegmentedButtonItem.prototype, "tooltip", void 0);
__decorate33([
  property_default()
], SegmentedButtonItem.prototype, "accessibleName", void 0);
__decorate33([
  property_default()
], SegmentedButtonItem.prototype, "accessibleNameRef", void 0);
__decorate33([
  property_default()
], SegmentedButtonItem.prototype, "icon", void 0);
__decorate33([
  property_default({ type: Boolean })
], SegmentedButtonItem.prototype, "iconOnly", void 0);
__decorate33([
  property_default({ type: Boolean })
], SegmentedButtonItem.prototype, "nonInteractive", void 0);
__decorate33([
  property_default({ noAttribute: true })
], SegmentedButtonItem.prototype, "forcedTabIndex", void 0);
__decorate33([
  property_default({ type: Number })
], SegmentedButtonItem.prototype, "posInSet", void 0);
__decorate33([
  property_default({ type: Number })
], SegmentedButtonItem.prototype, "sizeOfSet", void 0);
__decorate33([
  slot_default({ type: Node, "default": true })
], SegmentedButtonItem.prototype, "text", void 0);
__decorate33([
  i18n_default("@ui5/webcomponents")
], SegmentedButtonItem, "i18nBundle", void 0);
SegmentedButtonItem = SegmentedButtonItem_1 = __decorate33([
  customElement_default({
    tag: "ui5-segmented-button-item",
    renderer: JsxRenderer_default,
    template: SegmentedButtonItemTemplate,
    styles: SegmentedButtonItem_css_default
  })
], SegmentedButtonItem);
SegmentedButtonItem.define();
var SegmentedButtonItem_default = SegmentedButtonItem;

// node_modules/@ui5/webcomponents/dist/types/SegmentedButtonSelectionMode.js
var SegmentedButtonSelectionMode;
(function(SegmentedButtonSelectionMode2) {
  SegmentedButtonSelectionMode2["Single"] = "Single";
  SegmentedButtonSelectionMode2["Multiple"] = "Multiple";
})(SegmentedButtonSelectionMode || (SegmentedButtonSelectionMode = {}));
var SegmentedButtonSelectionMode_default = SegmentedButtonSelectionMode;

// node_modules/@ui5/webcomponents/dist/SegmentedButtonTemplate.js
function SegmentedButtonTemplate() {
  return jsxs("ul", { role: "listbox", class: "ui5-segmented-button-root", onClick: this._onclick, onMouseDown: this._onmousedown, onKeyDown: this._onkeydown, onKeyUp: this._onkeyup, onFocusIn: this._onfocusin, "aria-multiselectable": "true", "aria-describedby": `${this._id}-invisibleText`, "aria-roledescription": this.ariaDescription, "aria-label": this.accessibleName, children: [jsx("slot", {}), jsx("span", { id: `${this._id}-invisibleText`, class: "ui5-hidden-text", children: this.ariaDescribedBy })] });
}

// node_modules/@ui5/webcomponents/dist/generated/themes/SegmentedButton.css.js
registerThemePropertiesLoader("@ui5/webcomponents-theming", "sap_horizon", async () => parameters_bundle_css_default);
registerThemePropertiesLoader("@ui5/webcomponents", "sap_horizon", async () => parameters_bundle_css_default2);
var SegmentedButton_css_default = `:host{vertical-align:middle}.ui5-hidden-text{position:absolute;clip:rect(1px,1px,1px,1px);user-select:none;left:-1000px;top:-1000px;pointer-events:none;font-size:0}:host(:not([hidden])){display:inline-block;min-width:calc(var(--_ui5-v2-8-0_segmented_btn_items_count) * var(--_ui5-v2-8-0_button_base_min_width))}.ui5-segmented-button-root{width:inherit;display:grid;grid-template-columns:repeat(var(--_ui5-v2-8-0_segmented_btn_items_count),minmax(var(--_ui5-v2-8-0_button_base_min_width),1fr));margin:0;padding:0;background-color:var(--sapButton_Background);border-radius:var(--sapButton_BorderCornerRadius);box-shadow:inset 0 0 0 var(--sapButton_BorderWidth) var(--sapButton_BorderColor)}::slotted([ui5-segmented-button-item]){border-radius:var(--sapButton_Segment_BorderCornerRadius);border-color:var(--_ui5-v2-8-0_segmented_btn_border_color);background-color:var(--_ui5-v2-8-0_segmented_btn_background_color);height:var(--_ui5-v2-8-0_button_base_height);white-space:nowrap;overflow:hidden;text-overflow:ellipsis;z-index:initial}::slotted([ui5-segmented-button-item]:hover){z-index:2;box-shadow:var(--_ui5-v2-8-0_segmented_btn_hover_box_shadow);border-color:var(--sapButton_Hover_BorderColor);background-color:var(--sapButton_Hover_Background)}::slotted([ui5-segmented-button-item][selected]),::slotted([ui5-segmented-button-item][active]){border-color:var(--sapButton_Selected_BorderColor);background-color:var(--sapButton_Selected_Background);color:var(--sapButton_Selected_TextColor)}::slotted([ui5-segmented-button-item][selected]:hover){border-color:var(--sapButton_Selected_Hover_BorderColor);background-color:var(--sapButton_Selected_Hover_Background);color:var(--sapButton_Selected_TextColor)}::slotted([ui5-segmented-button-item]:last-child){border-start-end-radius:var(--sapButton_BorderCornerRadius);border-end-end-radius:var(--sapButton_BorderCornerRadius)}::slotted([ui5-segmented-button-item]:first-child){border-start-start-radius:var(--sapButton_BorderCornerRadius);border-end-start-radius:var(--sapButton_BorderCornerRadius)}::slotted([ui5-segmented-button-item]:not(:first-child)){border-left-width:var(--_ui5-v2-8-0_segmented_btn_item_border_left);border-right-width:var(--_ui5-v2-8-0_segmented_btn_item_border_right)}::slotted([ui5-segmented-button-item][active]:not([active]):hover){border-color:var(--sapButton_BorderColor)}::slotted([ui5-segmented-button-item][active]:hover){border-color:var(--sapButton_Selected_BorderColor)}
`;

// node_modules/@ui5/webcomponents/dist/SegmentedButton.js
var __decorate34 = function(decorators, target, key, desc) {
  var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
  if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
  else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
  return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var SegmentedButton_1;
var SegmentedButton = SegmentedButton_1 = class SegmentedButton2 extends UI5Element_default {
  constructor() {
    super();
    this.selectionMode = "Single";
    this._itemNavigation = new ItemNavigation_default(this, {
      getItemsCallback: () => this.navigatableItems
    });
    this.hasPreviouslyFocusedItem = false;
  }
  onBeforeRendering() {
    const items3 = this.getSlottedNodes("items");
    items3.forEach((item2, index, arr) => {
      item2.posInSet = index + 1;
      item2.sizeOfSet = arr.length;
    });
    this.normalizeSelection();
    this.style.setProperty(getScopedVarName("--_ui5_segmented_btn_items_count"), `${items3.length}`);
  }
  normalizeSelection() {
    if (!this.items.length) {
      return;
    }
    switch (this.selectionMode) {
      case SegmentedButtonSelectionMode_default.Single: {
        const selectedItems = this.selectedItems;
        const selectedItemIndex = this._selectedItem ? selectedItems.indexOf(this._selectedItem) : -1;
        if (this._selectedItem && selectedItems.length > 1) {
          selectedItems.splice(selectedItemIndex, 1);
        }
        const selectedItem = selectedItems.pop() || this.items[0];
        this._applySingleSelection(selectedItem);
        break;
      }
      default:
    }
  }
  _selectItem(e) {
    const target = e.target;
    const isTargetSegmentedButtonItem = target.hasAttribute("ui5-segmented-button-item");
    if (target.disabled || target === this.getDomRef() || !isTargetSegmentedButtonItem) {
      return;
    }
    switch (this.selectionMode) {
      case SegmentedButtonSelectionMode_default.Multiple:
        if (e instanceof KeyboardEvent) {
          target.selected = !target.selected;
        }
        break;
      default:
        this._applySingleSelection(target);
    }
    this.fireDecoratorEvent("selection-change", {
      selectedItems: this.selectedItems
    });
    this._itemNavigation.setCurrentItem(target);
    return this;
  }
  _applySingleSelection(item2) {
    this.items.forEach((currentItem) => {
      currentItem.selected = false;
    });
    item2.selected = true;
    this._selectedItem = item2;
  }
  _onclick(e) {
    this._selectItem(e);
  }
  _onkeydown(e) {
    if (isEnter(e)) {
      this._selectItem(e);
    } else if (isSpace(e)) {
      e.preventDefault();
    }
  }
  _onkeyup(e) {
    if (isSpace(e)) {
      this._selectItem(e);
    }
  }
  _onmousedown(e) {
    const eventTarget = e.target;
    const isTargetSegmentedButtonItem = eventTarget.hasAttribute("ui5-segmented-button-item");
    if (isTargetSegmentedButtonItem) {
      this._itemNavigation.setCurrentItem(eventTarget);
      this.hasPreviouslyFocusedItem = true;
    }
  }
  _onfocusin(e) {
    if (this.hasPreviouslyFocusedItem) {
      this._itemNavigation.setCurrentItem(e.target);
      return;
    }
    if (this.selectedItems.length) {
      this._itemNavigation.setCurrentItem(this.selectedItems[0]);
      this.selectedItems[0].focus();
      this.hasPreviouslyFocusedItem = true;
    }
  }
  /**
   * Returns an array of the currently selected items.
   * @since 1.14.0
   * @public
   * @default []
   */
  get selectedItems() {
    return this.items.filter((item2) => item2.selected);
  }
  get navigatableItems() {
    return this.getSlottedNodes("items").filter((item2) => {
      return !item2.disabled;
    });
  }
  get ariaDescribedBy() {
    return SegmentedButton_1.i18nBundle.getText(SEGMENTEDBUTTON_ARIA_DESCRIBEDBY);
  }
  get ariaDescription() {
    return SegmentedButton_1.i18nBundle.getText(SEGMENTEDBUTTON_ARIA_DESCRIPTION);
  }
};
__decorate34([
  property_default()
], SegmentedButton.prototype, "accessibleName", void 0);
__decorate34([
  property_default()
], SegmentedButton.prototype, "selectionMode", void 0);
__decorate34([
  slot_default({ type: HTMLElement, invalidateOnChildChange: true, "default": true })
], SegmentedButton.prototype, "items", void 0);
__decorate34([
  i18n_default("@ui5/webcomponents")
], SegmentedButton, "i18nBundle", void 0);
SegmentedButton = SegmentedButton_1 = __decorate34([
  customElement_default({
    tag: "ui5-segmented-button",
    languageAware: true,
    renderer: JsxRenderer_default,
    template: SegmentedButtonTemplate,
    styles: SegmentedButton_css_default
  }),
  event_strict_default("selection-change", {
    bubbles: true
  })
], SegmentedButton);
SegmentedButton.define();
var SegmentedButton_default = SegmentedButton;

// node_modules/@ui5/webcomponents/dist/timepicker-utils/TimeSlider.js
var getHoursConfigByFormat = (type) => {
  const config = {
    minHour: 0,
    maxHour: 0,
    isTwelveHoursFormat: false
  };
  if (type === "hour0_23") {
    config.minHour = 0;
    config.maxHour = 23;
    config.isTwelveHoursFormat = false;
  } else if (type === "hour1_24") {
    config.minHour = 1;
    config.maxHour = 24;
    config.isTwelveHoursFormat = false;
  } else if (type === "hour0_11") {
    config.minHour = 0;
    config.maxHour = 11;
    config.isTwelveHoursFormat = true;
  } else if (type === "hour1_12") {
    config.minHour = 1;
    config.maxHour = 12;
    config.isTwelveHoursFormat = true;
  }
  return config;
};
var getTimeControlsByFormat = (formatArray, hoursConfig) => {
  const timeControls = [false, false, false, false];
  for (let i = 0; i < formatArray.length; i++) {
    if (hoursConfig.maxHour !== 0) {
      timeControls[0] = true;
    }
    if (hoursConfig.maxHour !== 0 && hoursConfig.isTwelveHoursFormat) {
      timeControls[0] = true;
    }
    if (formatArray[i].type === "minute") {
      timeControls[1] = true;
    }
    if (formatArray[i].type === "second") {
      timeControls[2] = true;
    }
    if (formatArray[i].type === "amPmMarker") {
      timeControls[3] = true;
    }
  }
  return timeControls;
};

// node_modules/@ui5/webcomponents/dist/TimePickerInternals.js
var __decorate35 = function(decorators, target, key, desc) {
  var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
  if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
  else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
  return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var TimePickerInternals_1;
var TYPE_COOLDOWN_DELAY = 1e3;
var TimePickerInternals = TimePickerInternals_1 = class TimePickerInternals2 extends UI5Element_default {
  constructor() {
    super(...arguments);
    this._activeIndex = 0;
    this._entities = [];
    this._periods = [];
    this._keyboardBuffer = "";
  }
  get _hoursConfiguration() {
    const formatArray = this.getFormat().aFormatArray;
    const hourFormat = formatArray.find((item2) => item2.type.startsWith("hour"));
    return getHoursConfigByFormat(hourFormat ? hourFormat.type : "hour0_23");
  }
  get _zeroPaddedHours() {
    const formatArray = this.getFormat().aFormatArray;
    const hourFormat = formatArray.find((item2) => item2.type.startsWith("hour"));
    return !(hourFormat.digits && hourFormat.digits === 1);
  }
  get _neededComponents() {
    const formatArray = this.getFormat().aFormatArray;
    return getTimeControlsByFormat(formatArray, this._hoursConfiguration);
  }
  get _hasHoursComponent() {
    return this._neededComponents[0];
  }
  get _hasMinutesComponent() {
    return this._neededComponents[1];
  }
  get _hasSecondsComponent() {
    return this._neededComponents[2];
  }
  get _hasPeriodsComponent() {
    return this._neededComponents[3];
  }
  get dateValue() {
    return this.value ? this.getFormat().parse(this.value, void 0, void 0) : UI5Date_default2.getInstance();
  }
  get validDateValue() {
    return this.value !== void 0 && this.isValid(this.value) ? this.dateValue : UI5Date_default2.getInstance();
  }
  get periodsArray() {
    const dayPeriodsAbbrev = this.getFormat().aDayPeriodsAbbrev;
    return dayPeriodsAbbrev.map((x) => x.toUpperCase());
  }
  get _hours() {
    let hours;
    const dateValue = this.validDateValue;
    if (this._hoursConfiguration.isTwelveHoursFormat && dateValue.getHours() > this._hoursConfiguration.maxHour) {
      hours = dateValue.getHours() - 12;
    } else if (this._hoursConfiguration.isTwelveHoursFormat && dateValue.getHours() < this._hoursConfiguration.minHour) {
      hours = dateValue.getHours() + 12;
    } else {
      hours = dateValue.getHours();
    }
    if (hours.toString().length === 1 && this._zeroPaddedHours) {
      hours = `0${hours}`;
    }
    return hours.toString();
  }
  get _minutes() {
    const minutes = this.validDateValue.getMinutes().toString();
    return minutes.length === 1 ? `0${minutes}` : minutes;
  }
  get _seconds() {
    const seconds = this.validDateValue.getSeconds().toString();
    return seconds.length === 1 ? `0${seconds}` : seconds;
  }
  get _period() {
    let period;
    const dateValue = this.validDateValue;
    if (!this._hoursConfiguration.isTwelveHoursFormat) {
      return void 0;
    }
    if (this._hoursConfiguration.minHour === 1) {
      period = dateValue.getHours() >= this._hoursConfiguration.maxHour ? this.periodsArray[1] : this.periodsArray[0];
    } else {
      period = dateValue.getHours() > this._hoursConfiguration.maxHour || dateValue.getHours() === this._hoursConfiguration.minHour ? this.periodsArray[1] : this.periodsArray[0];
    }
    return period;
  }
  get _formatPattern() {
    const pattern = this.formatPattern;
    const hasHours = !!(pattern == null ? void 0 : pattern.match(/H/i));
    const fallback = !pattern || !hasHours;
    const localeData = getCachedLocaleDataInstance_default(getLocale_default());
    return fallback ? localeData.getCombinedDateTimePattern("medium", "medium", void 0) : pattern;
  }
  get _isPattern() {
    return this._formatPattern !== "medium" && this._formatPattern !== "short" && this._formatPattern !== "long";
  }
  get hoursLabel() {
    return TimePickerInternals_1.i18nBundle.getText(TIMEPICKER_HOURS_LABEL);
  }
  get minutesLabel() {
    return TimePickerInternals_1.i18nBundle.getText(TIMEPICKER_MINUTES_LABEL);
  }
  get secondsLabel() {
    return TimePickerInternals_1.i18nBundle.getText(TIMEPICKER_SECONDS_LABEL);
  }
  get clockDialAriaLabel() {
    return TimePickerInternals_1.i18nBundle.getText(TIMEPICKER_CLOCK_DIAL_LABEL);
  }
  setValue(date) {
    const value = this.formatValue(date);
    if (this.isValid(value)) {
      this.value = this.normalizeValue(value);
      this.fireDecoratorEvent("change", { value: this.value, valid: true });
    }
  }
  isValid(value) {
    return value === "" || this.getFormat().parse(value, void 0, void 0);
  }
  normalizeValue(value) {
    if (value === "") {
      return value;
    }
    return this.getFormat().format(this.getFormat().parse(value, void 0, void 0));
  }
  getFormat() {
    let dateFormat;
    if (this._isPattern) {
      dateFormat = DateFormat_default2.getDateInstance({
        calendarType: this._calendarType,
        pattern: this._formatPattern
      });
    } else {
      dateFormat = DateFormat_default2.getDateInstance({
        calendarType: this._calendarType,
        style: this._formatPattern
      });
    }
    return dateFormat;
  }
  formatValue(date) {
    return this.getFormat().format(date);
  }
  _componentKey(name105) {
    return name105;
  }
  _indexFromName(name105) {
    return this._componentMap[this._componentKey(name105)];
  }
  /**
   * Returns name of the clock or button from the id of the event target.
   * @returns name of the clock/button
   */
  _getNameFromId(id) {
    const parts = id.split("_");
    return parts.length ? parts[parts.length - 1] : void 0;
  }
  /**
   * Returns index of the clock or button from the id of the event target.
   * @returns index of the clock/button
   */
  _getIndexFromId(id) {
    const name105 = this._getNameFromId(id);
    return name105 ? this._indexFromName(name105) : 0;
  }
  /**
   * Changes hours value.
   * @param hours new hours value
   */
  _hoursChange(hours) {
    if (this._hoursConfiguration.isTwelveHoursFormat) {
      hours = this._shiftHours(hours);
    }
    const date = this.validDateValue;
    date.setHours(hours);
    this.setValue(date);
  }
  /**
   * Changes minutes value.
   * @param minutes new minutes value
   */
  _minutesChange(minutes) {
    const date = this.validDateValue;
    date.setMinutes(minutes);
    this.setValue(date);
  }
  /**
   * Changes seconds value.
   * @param seconds new seconds value
   */
  _secondsChange(seconds) {
    const date = this.validDateValue;
    date.setSeconds(seconds);
    this.setValue(date);
  }
  _buttonAmPm() {
    var _a;
    return this._hasPeriodsComponent ? (_a = this.shadowRoot) == null ? void 0 : _a.querySelector(`#${this._id}_AmPm`) : void 0;
  }
  _createPeriodComponent() {
    if (this._hasPeriodsComponent) {
      this.periodsArray.forEach((item2) => {
        this._periods.push({
          "label": item2,
          "selected": this._period === item2
        });
      });
    }
  }
  _periodChange(evt) {
    const periodItem = evt.target;
    if (periodItem) {
      const period = periodItem.textContent;
      this._calculatePeriodChange(period);
    }
  }
  _calculatePeriodChange(period) {
    const date = this.validDateValue;
    if (period === this._periods[0].label && date.getHours() >= 12) {
      date.setHours(date.getHours() - 12);
    }
    if (period === this._periods[1].label && date.getHours() < 12) {
      date.setHours(date.getHours() + 12);
    }
    this.setValue(date);
  }
  /**
   * Shifts hours value with +/- 12 depending on hour value and day period.
   * @param hours current hours
   * @returns shifted hours
   */
  _shiftHours(hours) {
    if (this._period === this.periodsArray[0]) {
      hours = hours === 12 ? 0 : hours;
    } else if (this._period === this.periodsArray[1]) {
      hours = hours === 12 ? hours : hours + 12;
    }
    return hours;
  }
  /**
   * Clears the currently existing cooldown period and starts new one if requested.
   * @param startNewCooldown whether to start new cooldown period after clearing previous one
   */
  _resetCooldown(startNewCooldown) {
    if (!TYPE_COOLDOWN_DELAY) {
      return;
    }
    if (this._typeCooldownId) {
      clearTimeout(this._typeCooldownId);
    }
    if (startNewCooldown) {
      this._startCooldown();
    }
  }
  /**
   * Starts new cooldown period.
   */
  _startCooldown() {
    if (!TYPE_COOLDOWN_DELAY) {
      return;
    }
    this._typeCooldownId = setTimeout(() => {
      this._keyboardBuffer = "";
      this._typeCooldownId = void 0;
      if (this._exactMatch) {
        this._setExactMatch();
        this._exactMatch = void 0;
      }
    }, TYPE_COOLDOWN_DELAY);
  }
  /**
   * Sets the exact match value. Override if necessary.
   */
  _setExactMatch() {
  }
};
__decorate35([
  property_default()
], TimePickerInternals.prototype, "value", void 0);
__decorate35([
  property_default()
], TimePickerInternals.prototype, "formatPattern", void 0);
__decorate35([
  property_default({ type: Number, noAttribute: true })
], TimePickerInternals.prototype, "_activeIndex", void 0);
__decorate35([
  property_default()
], TimePickerInternals.prototype, "_calendarType", void 0);
__decorate35([
  property_default({ type: Array })
], TimePickerInternals.prototype, "_entities", void 0);
__decorate35([
  property_default({ type: Object })
], TimePickerInternals.prototype, "_componentMap", void 0);
__decorate35([
  property_default({ type: Array })
], TimePickerInternals.prototype, "_periods", void 0);
__decorate35([
  property_default({ type: Number, noAttribute: true })
], TimePickerInternals.prototype, "_typeCooldownId", void 0);
__decorate35([
  property_default({ type: Number, noAttribute: true })
], TimePickerInternals.prototype, "_exactMatch", void 0);
__decorate35([
  property_default({ noAttribute: true })
], TimePickerInternals.prototype, "_keyboardBuffer", void 0);
__decorate35([
  i18n_default("@ui5/webcomponents")
], TimePickerInternals, "i18nBundle", void 0);
TimePickerInternals = TimePickerInternals_1 = __decorate35([
  customElement_default({
    cldr: true,
    renderer: JsxRenderer_default
  }),
  event_strict_default("change", {
    bubbles: true
  })
], TimePickerInternals);
var TimePickerInternals_default = TimePickerInternals;

// node_modules/@ui5/webcomponents/dist/ToggleButtonTemplate.js
function ToggleButtonTemplate() {
  return jsx(Fragment, { children: ButtonTemplate.call(this, { ariaPressed: this.pressed }) });
}

// node_modules/@ui5/webcomponents/dist/generated/themes/ToggleButton.css.js
registerThemePropertiesLoader("@ui5/webcomponents-theming", "sap_horizon", async () => parameters_bundle_css_default);
registerThemePropertiesLoader("@ui5/webcomponents", "sap_horizon", async () => parameters_bundle_css_default2);
var ToggleButton_css_default = `:host(:not([hidden])){display:inline-block}:host([design="Emphasized"]:not([pressed])){text-shadow:var(--_ui5-v2-8-0_toggle_button_emphasized_text_shadow)}:host([pressed]),:host([design="Default"][pressed]),:host([design="Transparent"][pressed]),:host([design="Emphasized"][pressed]){background:var(--sapButton_Selected_Background);border-color:var(--sapButton_Selected_BorderColor);color:var(--sapButton_Selected_TextColor);text-shadow:none}:host([pressed]:hover),:host([pressed]:not([active]):not([non-interactive]):not([_is-touch]):hover),:host([design="Default"][pressed]:hover),:host([design="Default"][pressed]:not([active]):not([non-interactive]):not([_is-touch]):hover),:host([design="Transparent"][pressed]:hover),:host([design="Transparent"][pressed]:not([active]):not([non-interactive]):not([_is-touch]):hover),:host([design="Emphasized"][pressed]:hover),:host([design="Emphasized"][pressed]:not([active]):not([non-interactive]):not([_is-touch]):hover){background:var(--sapButton_Selected_Hover_Background);border-color:var(--sapButton_Selected_Hover_BorderColor);color:var(--sapButton_Selected_TextColor)}:host([active]:not([disabled])),:host([design="Default"][active]:not([disabled])),:host([design="Transparent"][active]:not([disabled])),:host([design="Emphasized"][active]:not([disabled])){background:var(--sapButton_Active_Background);border-color:var(--sapButton_Active_BorderColor);color:var(--sapButton_Selected_TextColor)}:host([pressed]:not([active]):not([non-interactive]):not([_is-touch])),:host([design="Default"][pressed]:not([active]):not([non-interactive]):not([_is-touch])),:host([design="Transparent"][pressed]:not([active]):not([non-interactive]):not([_is-touch])),:host([design="Emphasized"][pressed]:not([active]):not([non-interactive]):not([_is-touch])){background:var(--sapButton_Selected_Background);border-color:var(--sapButton_Selected_BorderColor);color:var(--sapButton_Selected_TextColor)}:host([design="Negative"][pressed]){background:var(--sapButton_Reject_Selected_Background);border-color:var(--sapButton_Reject_Selected_BorderColor);color:var(--sapButton_Reject_Selected_TextColor)}:host([design="Negative"][active]:not([disabled])){background:var(--sapButton_Reject_Active_Background);border-color:var(--sapButton_Reject_Active_BorderColor);color:var(--sapButton_Reject_Active_TextColor)}:host([design="Negative"][pressed][active]:hover),:host([design="Negative"][pressed]:not([active]):not([non-interactive]):not([_is-touch]):hover){background:var(--sapButton_Reject_Selected_Hover_Background);border-color:var(--sapButton_Reject_Selected_Hover_BorderColor);color:var(--sapButton_Reject_Selected_TextColor)}:host([design="Negative"][pressed]:not([active]):not([non-interactive]):not([_is-touch])){background:var(--sapButton_Reject_Selected_Background);border-color:var(--sapButton_Reject_Selected_BorderColor);color:var(--sapButton_Reject_Selected_TextColor)}:host([design="Positive"][pressed]){background:var(--sapButton_Accept_Selected_Background);border-color:var(--sapButton_Accept_Selected_BorderColor);color:var(--sapButton_Accept_Selected_TextColor)}:host([design="Positive"][active]:not([disabled])){background:var(--sapButton_Accept_Active_Background);border-color:var(--sapButton_Accept_Active_BorderColor);color:var(--sapButton_Accept_Selected_TextColor)}:host([design="Positive"][pressed][active]:hover),:host([design="Positive"][pressed]:not([active]):not([non-interactive]):not([_is-touch]):hover){background:var(--sapButton_Accept_Selected_Hover_Background);border-color:var(--sapButton_Accept_Selected_Hover_BorderColor);color:var(--sapButton_Accept_Selected_TextColor)}:host([design="Positive"][pressed]:not([active]):not([non-interactive]):not([_is-touch])){background:var(--sapButton_Accept_Selected_Background);border-color:var(--sapButton_Accept_Selected_BorderColor);color:var(--sapButton_Accept_Selected_TextColor)}:host([design="Attention"][pressed]){background:var(--sapButton_Attention_Selected_Background);border-color:var(--sapButton_Attention_Selected_BorderColor);color:var(--sapButton_Attention_Selected_TextColor)}:host([design="Attention"][active]:not([disabled])){background:var(--sapButton_Attention_Active_Background);border-color:var(--sapButton_Attention_Active_BorderColor);color:var(--sapButton_Attention_Active_TextColor)}:host([design="Attention"][pressed][active]:hover),:host([design="Attention"][pressed]:not([active]):not([non-interactive]):not([_is-touch]):hover){background:var(--sapButton_Attention_Selected_Hover_Background);border-color:var(--sapButton_Attention_Selected_Hover_BorderColor);color:var(--sapButton_Attention_Selected_TextColor)}:host([design="Attention"][pressed]:not([active]):not([non-interactive]):not([_is-touch])){background:var(--sapButton_Attention_Selected_Background);border-color:var(--sapButton_Attention_Selected_BorderColor);color:var(--sapButton_Attention_Selected_TextColor)}
`;

// node_modules/@ui5/webcomponents/dist/ToggleButton.js
var __decorate36 = function(decorators, target, key, desc) {
  var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
  if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
  else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
  return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var ToggleButton = class ToggleButton2 extends Button_default {
  constructor() {
    super(...arguments);
    this.pressed = false;
  }
  _onclick() {
    this.pressed = !this.pressed;
    if (isSafari()) {
      this.getDomRef().focus();
    }
  }
  _onkeyup(e) {
    if (isSpaceShift(e)) {
      e.preventDefault();
      return;
    }
    super._onkeyup(e);
  }
};
__decorate36([
  property_default({ type: Boolean })
], ToggleButton.prototype, "pressed", void 0);
ToggleButton = __decorate36([
  customElement_default({
    tag: "ui5-toggle-button",
    template: ToggleButtonTemplate,
    styles: [Button_default.styles, ToggleButton_css_default]
  })
], ToggleButton);
ToggleButton.define();
var ToggleButton_default = ToggleButton;

// node_modules/@ui5/webcomponents/dist/ToggleSpinButtonTemplate.js
function ToggleSpinButtonTemplate() {
  return jsx(Fragment, { children: ButtonTemplate.call(this, {
    ariaPressed: this.pressed,
    ariaValueMax: this.valueMax,
    ariaValueMin: this.valueMin,
    ariaValueNow: this.valueNow,
    ariaValueText: this.valueText
  }) });
}

// node_modules/@ui5/webcomponents/dist/ToggleSpinButton.js
var __decorate37 = function(decorators, target, key, desc) {
  var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
  if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
  else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
  return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var ToggleSpinButton = class ToggleSpinButton2 extends ToggleButton_default {
  constructor() {
    super(...arguments);
    this.valueMin = -1;
    this.valueMax = -1;
    this.valueNow = -1;
  }
  /**
   * Override of the handler in order to prevent button toggle functionality
   */
  _onclick() {
  }
  /**
   * Override
   */
  get effectiveAccRole() {
    return "spinbutton";
  }
};
__decorate37([
  property_default({ type: Number })
], ToggleSpinButton.prototype, "valueMin", void 0);
__decorate37([
  property_default({ type: Number })
], ToggleSpinButton.prototype, "valueMax", void 0);
__decorate37([
  property_default({ type: Number })
], ToggleSpinButton.prototype, "valueNow", void 0);
__decorate37([
  property_default()
], ToggleSpinButton.prototype, "valueText", void 0);
ToggleSpinButton = __decorate37([
  customElement_default({
    tag: "ui5-toggle-spin-button",
    renderer: JsxRenderer_default,
    styles: [Button_default.styles, ToggleButton_default.styles],
    template: ToggleSpinButtonTemplate
  })
], ToggleSpinButton);
ToggleSpinButton.define();
var ToggleSpinButton_default = ToggleSpinButton;

// node_modules/@ui5/webcomponents-base/dist/decorators/query.js
var query = (selector) => {
  return (target, propertyKey) => {
    Object.defineProperty(target, propertyKey, {
      get() {
        var _a;
        return (_a = this.shadowRoot) == null ? void 0 : _a.querySelector(selector);
      }
    });
  };
};
var query_default = query;

// node_modules/@ui5/webcomponents/dist/TimePickerClockTemplate.js
function TimePickerClockTemplate() {
  return jsxs("div", { id: `${this._id}`, onDragStart: this.noop, onDrop: this.noop, "aria-hidden": "true", class: {
    "ui5-tp-clock": true,
    "ui5-tp-clock-active": this.active
  }, children: [jsx("div", { "data-label": this.label, class: "ui5-tp-clock-dial" }), jsx("div", { class: "ui5-tp-clock-items", children: this._items.map((item2, i) => jsx("div", { class: "ui5-tp-clock-item", style: { transform: `translate(-50%) rotate(${(i + 1) * this._angleStep}deg` }, children: item2.item ? jsxs(Fragment, { children: [jsx("span", { class: "ui5-tp-clock-dot" }), jsx("span", { id: `${this._id}-${item2.item}`, class: "ui5-tp-clock-number", style: { transform: `rotate(-${(i + 1) * this._angleStep}deg)` }, children: item2.item })] }) : jsx("span", { class: "ui5-tp-clock-mid-dot" }) })) }), jsxs("div", { class: "ui5-tp-clock-markers", children: [this._selectedItem.showMarker && jsxs("div", { class: "ui5-tp-clock-item", style: { transform: `translate(-50%) rotate(${this._selectedItem.angle || 0}deg)` }, children: [jsx("div", { class: "ui5-tp-clock-select-marker" }), jsx("div", { class: this._selectedItem.itemClasses, style: { transform: `rotate(-${this._selectedItem.angle || 0}deg)` }, children: this._selectedItem.item })] }), this._hoveredItem.showMarker && jsxs("div", { class: "ui5-tp-clock-item", style: { transform: `translate(-50%) rotate(${this._hoveredItem.angle || 0}deg)` }, children: [jsx("div", { class: "ui5-tp-clock-hover-marker" }), jsx("div", { class: this._hoveredItem.itemClasses, style: { transform: `rotate(-${this._hoveredItem.angle || 0}deg)` }, children: this._hoveredItem.item })] })] }), jsx("div", { class: {
    "ui5-tp-clock-cover": true,
    "ui5-tp-clock-pointer": this._hoveredItem.showMarker
  }, onTouchStart: this._onTouchStart, onTouchMove: this._onTouchMove, onTouchEnd: this._onTouchEnd, onMouseDown: this._onTouchStart, onMouseMove: this._onTouchMove, onMouseUp: this._onTouchEnd, onMouseOut: this._onMouseOut, onWheel: this._onMouseWheel })] });
}

// node_modules/@ui5/webcomponents/dist/generated/themes/TimePickerClock.css.js
registerThemePropertiesLoader("@ui5/webcomponents-theming", "sap_horizon", async () => parameters_bundle_css_default);
registerThemePropertiesLoader("@ui5/webcomponents", "sap_horizon", async () => parameters_bundle_css_default2);
var TimePickerClock_css_default = `.ui5-tp-clock{position:relative;width:auto;padding:.5625rem;outline:none;display:none}.ui5-tp-clock-active{display:block}.ui5-tp-clock-dial{position:relative;width:auto;display:block;border-radius:100%;background-color:var(--sapLegend_WorkingBackground);text-align:center;z-index:1}.ui5-tp-clock-dial:before{content:attr(data-label);display:flex;align-items:center;justify-content:center;position:absolute;font-family:var(--sapFontFamily);font-size:var(--sapFontSize);color:var(--sapContent_LabelColor);inset:2.75rem;border-radius:100%;z-index:2}.ui5-tp-clock-dial:after{content:"";display:block;padding-bottom:100%}.ui5-tp-clock-inner .ui5-tp-clock-dial:before{background-color:var(--sapLegend_WorkingBackground)}.ui5-tp-clock-cover{position:absolute;inset:-.25rem;border-radius:100%;z-index:10;touch-action:none}.ui5-tp-clock-item{position:absolute;top:0;left:50%;display:inline-block;width:2.75rem;height:100%;z-index:3;-webkit-touch-callout:none;-webkit-user-select:none;-khtml-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none}.ui5-tp-clock-item.ui5-tp-clock-marker{z-index:4}.ui5-tp-clock-dot{display:block;box-sizing:border-box;width:.25rem;height:.3125rem;margin:0 auto .25rem;border-radius:100%;background-color:var(--sapField_BorderColor)}.ui5-tp-clock-mid-dot{display:block;box-sizing:border-box;width:.125rem;height:.1875rem;margin:0 auto .375rem;border-radius:100%;background-color:var(--sapField_BorderColor)}.ui5-tp-clock-select-marker{box-sizing:border-box;width:.25rem;height:.5625rem;margin:0 auto;border-radius:100%;background-color:var(--sapButton_Selected_Background);border:.0625rem solid var(--sapButton_Selected_BorderColor)}.ui5-tp-clock-hover-marker{box-sizing:border-box;width:.25rem;height:.5625rem;margin:0 auto;border-radius:100%;background-color:var(--sapList_Hover_Background);border:.0625rem solid var(--sapGroup_TitleBorderColor)}.ui5-tp-clock-number{box-sizing:border-box;display:inline-block;width:2.75rem;height:2.75rem;border-radius:100%;line-height:2.75rem;text-align:center;vertical-align:top;font-family:var(--sapFontFamily);font-size:var(--sapFontSize);color:var(--sapTextColor);border:.0625rem solid transparent}.ui5-tp-clock-number.ui5-tp-clock-number-hover:not(.ui5-tp-clock-selected){background-color:var(--sapList_Hover_Background);z-index:5}.ui5-tp-clock-selected{color:var(--sapButton_Selected_TextColor);background-color:var(--sapButton_Selected_Background);border:.0625rem solid var(--sapButton_Selected_BorderColor)}.ui5-tp-clock-hovered{background-color:var(--sapList_Hover_Background);z-index:5}.ui5-tp-clock-pointer{cursor:pointer}.ui5-tp-clock-items,.ui5-tp-clock-markers{position:absolute;inset:0}:host(:not([_skip-animation])) .ui5-tp-clock-active:not(.ui5-tp-clock-transition) .ui5-tp-clock-items .ui5-tp-clock-number,:host(:not([_skip-animation])) .ui5-tp-clock-active:not(.ui5-tp-clock-transition) .ui5-tp-clock-items .ui5-tp-clock-mid-dot,:host(:not([_skip-animation])) .ui5-tp-clock-active:not(.ui5-tp-clock-transition) .ui5-tp-clock-number.ui5-tp-clock-selected,:host(:not([_skip-animation])) .ui5-tp-clock-active:not(.ui5-tp-clock-transition) .ui5-tp-clock-select-marker,:host(:not([_skip-animation])) .ui5-tp-clock-active:not(.ui5-tp-clock-transition) .ui5-tp-clock-dial:before{opacity:0}.ui5-tp-clock-transition .ui5-tp-clock-items .ui5-tp-clock-number{animation-name:fadeOutClockItems;animation-delay:.15s;animation-duration:.2s;animation-timing-function:ease-out;animation-fill-mode:forwards}.ui5-tp-clock-transition .ui5-tp-clock-dial:before{animation-name:fadeOutClockLabel;animation-duration:.35s;animation-timing-function:ease-out;animation-fill-mode:forwards}.ui5-tp-clock-transition .ui5-tp-clock-number.ui5-tp-clock-selected,.ui5-tp-clock-transition .ui5-tp-clock-select-marker{animation-name:fadeOutSelectedItem;animation-delay:.1s;animation-duration:.15s;animation-timing-function:ease-out;animation-fill-mode:forwards}.ui5-tp-clock-transition .ui5-tp-clock-items .ui5-tp-clock-mid-dot{animation-name:fadeOutSelectedItem;animation-delay:.15s;animation-duration:.2s;animation-timing-function:ease-out;animation-fill-mode:forwards}:host(:not([_skip-animation])) .ui5-tp-clock-active:not(.ui5-tp-clock-transition) .ui5-tp-clock-items .ui5-tp-clock-number{animation-name:fadeInClockItems;animation-delay:.15s;animation-duration:.2s;animation-timing-function:ease-in;animation-fill-mode:forwards}:host(:not([_skip-animation])) .ui5-tp-clock-active:not(.ui5-tp-clock-transition) .ui5-tp-clock-dial:before{animation-name:fadeInClockLabel;animation-duration:.35s;animation-timing-function:ease-in;animation-fill-mode:forwards}:host(:not([_skip-animation])) .ui5-tp-clock-active:not(.ui5-tp-clock-transition) .ui5-tp-clock-number.ui5-tp-clock-selected,:host(:not([_skip-animation])) .ui5-tp-clock-active:not(.ui5-tp-clock-transition) .ui5-tp-clock-select-marker{animation-name:fadeInSelectedItem;animation-delay:.1s;animation-duration:.15s;animation-timing-function:ease-in;animation-fill-mode:forwards}:host(:not([_skip-animation])) .ui5-tp-clock-active:not(.ui5-tp-clock-transition) .ui5-tp-clock-items .ui5-tp-clock-mid-dot{animation-name:fadeInSelectedItem;animation-delay:.15s;animation-duration:.2s;animation-timing-function:ease-in;animation-fill-mode:forwards}@keyframes fadeOutClockItems{0%{opacity:1;display:block}to{opacity:0;display:block}}@keyframes fadeOutClockLabel{0%{opacity:1;display:flex;transform:translateY(0)}to{opacity:0;display:flex;transform:translateY(-16px)}}@keyframes fadeOutSelectedItem{0%{opacity:1;display:block}to{opacity:0;display:block}}@keyframes fadeInClockItems{0%{opacity:0;display:block}to{opacity:1;display:block}}@keyframes fadeInClockLabel{0%{opacity:0;display:flex;transform:translateY(16px)}to{opacity:1;display:flex;transform:translateY(0)}}@keyframes fadeInSelectedItem{0%{opacity:0;display:block}50%{opacity:.5;display:block}to{opacity:1;display:block}}
`;

// node_modules/@ui5/webcomponents/dist/TimePickerClock.js
var __decorate38 = function(decorators, target, key, desc) {
  var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
  if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
  else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
  return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var CLOCK_NUMBER_CLASS = "ui5-tp-clock-number";
var CLOCK_NUMBER_SELECTED_CLASS = "ui5-tp-clock-selected";
var CLOCK_NUMBER_HOVERED_CLASS = "ui5-tp-clock-hovered";
var CLOCK_MIDDOT_CLASS = "ui5-tp-clock-mid-dot";
var TimePickerClock = class TimePickerClock2 extends UI5Element_default {
  constructor() {
    super();
    this.disabled = false;
    this.active = false;
    this.itemMin = -1;
    this.itemMax = -1;
    this.hideFractions = false;
    this.lastItemReplacement = -1;
    this.prependZero = false;
    this.selectedValue = -1;
    this.displayStep = 5;
    this.valueStep = 1;
    this._items = [];
    this._selectedItem = {};
    this._hoveredItem = {};
    this._dimensionParameters = {
      radius: 0,
      centerX: 0,
      centerY: 0,
      dotHeight: 0,
      numberHeight: 0,
      activeRadiusMax: 0,
      activeRadiusMin: 0,
      offsetX: 0,
      offsetY: 0
    };
    this._mouseOrTouchDown = false;
    this._cancelTouchOut = false;
    this._selectedValue = -1;
    this._movSelectedValue = -1;
    this._hoveredValue = -1;
    this._prevHoveredValue = -1;
    this._skipAnimation = false;
    this._fnOnMouseOutUp = () => {
      this._mouseOrTouchDown = false;
    };
  }
  onEnterDOM() {
    document.addEventListener("mouseup", this._fnOnMouseOutUp, false);
  }
  onExitDOM() {
    document.removeEventListener("mouseup", this._fnOnMouseOutUp, false);
  }
  onBeforeRendering() {
    this._prepareClockItems();
    this._selectedItem = this._updateSelectedOrHoveredItem(this._fixReplacementValue(this.selectedValue), CLOCK_NUMBER_SELECTED_CLASS);
    this._hoveredItem = this._updateSelectedOrHoveredItem(this._fixReplacementValue(this._hoveredValue), CLOCK_NUMBER_HOVERED_CLASS);
  }
  get _itemsCount() {
    return this.itemMax - this.itemMin + 1;
  }
  get _angleStep() {
    return this.hideFractions ? 360 / this._itemsCount : 6;
  }
  /**
   * Returns the real value of the passed clock item, if the replacement must be done, returns the replaced value.
   * @param value The value of the clock item
   * @returns The real/replaced value
   */
  _fixReplacementValue(value) {
    let realValue = value;
    if (realValue === 0) {
      realValue = this.itemMax;
    }
    if (realValue === this.itemMax && this.lastItemReplacement !== -1) {
      realValue = this.lastItemReplacement;
    }
    return realValue;
  }
  /**
   * Returns internally selected or hovered value object constructed for rendering purposes.
   * @param value currently selected or hovered value.
   * @returns Selected or hovered value object
   */
  _updateSelectedOrHoveredItem(value, cssClass) {
    if (value === -1) {
      return {
        showMarker: false
      };
    }
    const selectedOrHoveredItem = value >= this.itemMin && value <= this.itemMax || value === this.lastItemReplacement;
    const stepAngle = 360 / (this.itemMax - this.itemMin + 1);
    let currentAngle = selectedOrHoveredItem ? value * stepAngle : void 0;
    if (currentAngle !== void 0) {
      currentAngle %= 360;
    }
    return {
      "angle": currentAngle,
      "item": selectedOrHoveredItem ? value.toString() : "",
      "showMarker": selectedOrHoveredItem,
      "itemClasses": `${CLOCK_NUMBER_CLASS} ${selectedOrHoveredItem ? cssClass : ""}`
    };
  }
  /**
   * Prepares clock items objects according to current clock settings. Item objects are used for rendering purposes.
   */
  _prepareClockItems() {
    const values = [];
    const angleStep = this._angleStep;
    const visualItemsCount = 360 / angleStep;
    const multiplier = visualItemsCount / this._itemsCount;
    let item2;
    let i;
    this._items = [];
    for (i = this.itemMin; i <= this.itemMax; i++) {
      values.push({
        "item": i.toString()
      });
    }
    if (this.lastItemReplacement !== -1) {
      values[values.length - 1].item = this.lastItemReplacement.toString();
    }
    for (i = 1; i <= visualItemsCount; i++) {
      item2 = i % (this.displayStep * multiplier) !== 0 ? {} : values[i / multiplier - 1];
      item2.angle = i * angleStep;
      this._items.push(item2);
    }
  }
  /**
   * Returns the DOM Reference of the clock cover element
   * @returns the DOM Reference
   */
  _getClockCoverContainerDomRef() {
    const domRef = this.getDomRef();
    return domRef && domRef.querySelector(".ui5-tp-clock-cover");
  }
  /**
   * Calculates the outer height of a HTML element.
   * @param element The element which outer height to be calculated
   * @returns Outer height of the passed HTML element
   */
  _outerHeight(element) {
    if (!element) {
      return 0;
    }
    const style = window.getComputedStyle(element);
    return element.offsetHeight + parseInt(style.marginTop) + parseInt(style.marginBottom);
  }
  /**
   * Returns the Id of the DOM element of the clock item that display specific value.
   * @param value The value of the clock item
   * @returns Id of the clock item element
   */
  _hoveredId(value) {
    if (value === this.itemMax && this.lastItemReplacement !== -1) {
      value = this.lastItemReplacement;
    }
    return `#${this._id}-${value.toString()}`;
  }
  /**
   * Returns provided value as string. Padding with additional zero is applied if necessary.
   * @param value The value that should be returned as string
   * @returns The value as string
   */
  _getStringValue(value) {
    return this.prependZero ? value.toString().padStart(2, "0") : value.toString();
  }
  /**
   * Calculates dimension variables necessary for determining of item selection.
   * @returns Dimensions object
   */
  _calculateDimensions() {
    const cover = this.getDomRef();
    const scrollLeft = window.pageXOffset || document.documentElement.scrollLeft;
    const scrollTop = window.pageYOffset || document.documentElement.scrollTop;
    if (!cover) {
      return;
    }
    const domRef = this.getDomRef();
    const dotElement = domRef.querySelector(`.${CLOCK_MIDDOT_CLASS}`);
    const numberElement = domRef.querySelector(`.${CLOCK_NUMBER_CLASS}`);
    const radius = Math.round(cover.offsetHeight / 2);
    const dotHeight = this._outerHeight(dotElement);
    const numberHeight = this._outerHeight(numberElement);
    const offset = cover.getBoundingClientRect();
    this._dimensionParameters = {
      "radius": radius,
      "centerX": radius,
      "centerY": radius,
      "dotHeight": dotHeight,
      "numberHeight": numberHeight,
      "activeRadiusMax": radius,
      "activeRadiusMin": radius - numberHeight * 1.5 - 1,
      "offsetX": offset.left + scrollLeft,
      "offsetY": offset.top + scrollTop
    };
  }
  /**
   * Calculates selected and hovered values based on click/touch position.
   * @param x X position of click/touch returned by the event
   * @param y Y position of click/touch returned by the event
   */
  _calculatePosition(x, y) {
    const dX = x - this._dimensionParameters.offsetX + 1 - this._dimensionParameters.radius;
    const dY = y - this._dimensionParameters.offsetY + 1 - this._dimensionParameters.radius;
    const mod = dX >= 0 ? 0 : 180;
    const angle = Math.atan(dY / dX) * 180 / Math.PI + 90 + mod;
    const angleStep = 360 / this.itemMax * this.valueStep;
    const radius = Math.sqrt(dX * dX + dY * dY);
    const isInActiveZone = radius <= this._dimensionParameters.activeRadiusMax && radius > this._dimensionParameters.activeRadiusMin;
    let finalAngle = Math.round((angle === 0 ? 360 : angle) / angleStep) * angleStep;
    if (finalAngle === 0) {
      finalAngle = 360;
    }
    this._selectedValue = isInActiveZone ? finalAngle / angleStep * this.valueStep : -1;
    this._hoveredValue = isInActiveZone ? this._selectedValue : -1;
    if (this._selectedValue === this.itemMax && this.lastItemReplacement !== -1) {
      this._selectedValue = this.lastItemReplacement;
    }
  }
  /**
   * Mousewheel handler. Increases/decreases value of the clock.
   * @param increase whether to increase or decrease the value
   */
  _modifyValue(increase) {
    let selectedValue = this.selectedValue;
    const replacementValue = this.lastItemReplacement;
    let step = this.valueStep;
    let newValue;
    if (selectedValue % step !== 0) {
      newValue = increase ? Math.ceil(selectedValue / step) * step : Math.floor(selectedValue / step) * step;
      step = Math.abs(selectedValue - newValue);
    }
    if (selectedValue === replacementValue) {
      selectedValue = this.itemMax;
    }
    if (increase) {
      selectedValue += step;
      if (selectedValue > this.itemMax) {
        selectedValue -= this.itemMax;
      }
    } else {
      selectedValue -= step;
      if (selectedValue < this.itemMin) {
        selectedValue = this.itemMax;
      }
    }
    this._setSelectedValue(selectedValue);
  }
  /**
   * Sets new selected value, fires change event and updates selected value object used for rendering purposes.
   * @param value a value to be set
   * @param bFinalChange whether the change is final or not
   */
  _setSelectedValue(value, bFinalChange = false) {
    const realValue = this._fixReplacementValue(value);
    this.selectedValue = realValue;
    this.fireDecoratorEvent("change", {
      value: realValue,
      stringValue: this._getStringValue(realValue),
      finalChange: bFinalChange
    });
    this._selectedItem = this._updateSelectedOrHoveredItem(realValue, CLOCK_NUMBER_SELECTED_CLASS);
  }
  /**
   * TouchStart/MouseDown event handler.
   * @param evt Event object
   */
  _onTouchStart(evt) {
    this._cancelTouchOut = false;
    if (this.disabled || this._mouseOrTouchDown) {
      return;
    }
    const x = evt.type === "touchstart" ? evt.touches[0].pageX : evt.pageX;
    const y = evt.type === "touchstart" ? evt.touches[0].pageY : evt.pageY;
    this._movSelectedValue = this.selectedValue;
    this._calculateDimensions();
    this._calculatePosition(x, y);
    this._mouseOrTouchDown = true;
  }
  /**
   * TouchMove/MouseMove event handler.
   * @param evt Event object
   */
  _onTouchMove(evt) {
    evt.preventDefault();
    if (this._mouseOrTouchDown) {
      const x = evt.type === "touchmove" ? evt.touches[0].pageX : evt.pageX;
      const y = evt.type === "touchmove" ? evt.touches[0].pageY : evt.pageY;
      this._calculatePosition(x, y);
      if (!this.disabled && this._selectedValue !== -1 && this._selectedValue !== this._movSelectedValue) {
        this._setSelectedValue(this._selectedValue);
        this._movSelectedValue = 0 + this._selectedValue;
      }
    } else if (evt.type === "mousemove") {
      if (!this._dimensionParameters.radius) {
        this._calculateDimensions();
      }
      this._calculatePosition(evt.pageX, evt.pageY);
    }
  }
  /**
   * TouchEnd/MouseUp event handler.
   * @param evt Event object
   */
  _onTouchEnd(evt) {
    if (!this._mouseOrTouchDown) {
      return;
    }
    this._mouseOrTouchDown = false;
    evt.preventDefault();
    if (this.disabled || this._selectedValue === -1) {
      return;
    }
    if (!this._cancelTouchOut) {
      this._setSelectedValue(this._selectedValue, true);
    }
  }
  /**
   * Mouse Wheel event handler.
   * @param evt Event object
   */
  _onMouseWheel(evt) {
    const increase = evt.detail ? evt.detail > 0 : evt.deltaY > 0 || evt.deltaX > 0;
    evt.preventDefault();
    if (!this._mouseOrTouchDown) {
      this._modifyValue(increase);
    }
  }
  /**
   * MouseOut event handler.
   */
  _onMouseOut() {
    this._hoveredValue = -1;
    this._prevHoveredValue = -1;
  }
  noop() {
    return false;
  }
};
__decorate38([
  property_default({ type: Boolean })
], TimePickerClock.prototype, "disabled", void 0);
__decorate38([
  property_default({ type: Boolean })
], TimePickerClock.prototype, "active", void 0);
__decorate38([
  property_default({ type: Number })
], TimePickerClock.prototype, "itemMin", void 0);
__decorate38([
  property_default({ type: Number })
], TimePickerClock.prototype, "itemMax", void 0);
__decorate38([
  property_default()
], TimePickerClock.prototype, "label", void 0);
__decorate38([
  property_default({ type: Boolean })
], TimePickerClock.prototype, "hideFractions", void 0);
__decorate38([
  property_default({ type: Number })
], TimePickerClock.prototype, "lastItemReplacement", void 0);
__decorate38([
  property_default({ type: Boolean })
], TimePickerClock.prototype, "prependZero", void 0);
__decorate38([
  property_default({ type: Number })
], TimePickerClock.prototype, "selectedValue", void 0);
__decorate38([
  property_default({ type: Number })
], TimePickerClock.prototype, "displayStep", void 0);
__decorate38([
  property_default({ type: Number })
], TimePickerClock.prototype, "valueStep", void 0);
__decorate38([
  property_default({ type: Array })
], TimePickerClock.prototype, "_items", void 0);
__decorate38([
  property_default({ type: Object })
], TimePickerClock.prototype, "_selectedItem", void 0);
__decorate38([
  property_default({ type: Object })
], TimePickerClock.prototype, "_hoveredItem", void 0);
__decorate38([
  property_default({ type: Object })
], TimePickerClock.prototype, "_dimensionParameters", void 0);
__decorate38([
  property_default({ type: Boolean, noAttribute: true })
], TimePickerClock.prototype, "_mouseOrTouchDown", void 0);
__decorate38([
  property_default({ type: Boolean, noAttribute: true })
], TimePickerClock.prototype, "_cancelTouchOut", void 0);
__decorate38([
  property_default({ type: Number, noAttribute: true })
], TimePickerClock.prototype, "_selectedValue", void 0);
__decorate38([
  property_default({ type: Number, noAttribute: true })
], TimePickerClock.prototype, "_movSelectedValue", void 0);
__decorate38([
  property_default({ type: Number, noAttribute: true })
], TimePickerClock.prototype, "_hoveredValue", void 0);
__decorate38([
  property_default({ type: Number, noAttribute: true })
], TimePickerClock.prototype, "_prevHoveredValue", void 0);
__decorate38([
  property_default({ type: Boolean })
], TimePickerClock.prototype, "_skipAnimation", void 0);
__decorate38([
  query_default(".ui5-tp-clock-number")
], TimePickerClock.prototype, "_firstNumberElement", void 0);
__decorate38([
  query_default(".ui5-tp-clock")
], TimePickerClock.prototype, "_clockWrapper", void 0);
TimePickerClock = __decorate38([
  customElement_default({
    tag: "ui5-time-picker-clock",
    renderer: JsxRenderer_default,
    styles: TimePickerClock_css_default,
    template: TimePickerClockTemplate
  }),
  event_strict_default("change", {
    bubbles: true
  })
], TimePickerClock);
TimePickerClock.define();
var TimePickerClock_default = TimePickerClock;

// node_modules/@ui5/webcomponents/dist/TimeSelectionClocksTemplate.js
function TimeSelectionClocksTemplate() {
  return jsxs("div", { id: `${this._id}`, class: "ui5-time-picker-tsc-container", tabindex: -1, onKeyDown: this._onkeydown, onKeyUp: this._onkeyup, onFocusIn: this._clocksFocusIn, children: [jsxs("div", { class: "ui5-time-picker-tsc-buttons", children: [this._entities.map((entity) => jsxs(Fragment, { children: [entity.hasSeparator && jsx("span", { class: "ui5-time-selection-separator", children: ":" }), jsx(ToggleSpinButton_default, { id: `${this._id}_button_${entity.entity}`, "data-ui5-clock": entity.entity, valueMin: entity.attributes && entity.attributes.min, valueMax: entity.attributes && entity.attributes.max, valueNow: entity.value, valueText: entity.textValue, accessibleName: entity.label, pressed: entity.active, onFocusIn: this._buttonFocusIn, children: entity.stringValue })] })), this._periods.length > 0 && jsxs(Fragment, { children: [jsx("span", { class: "ui5-time-selection-separator" }), jsx(SegmentedButton_default, { id: `${this._id}_AmPm`, onClick: this._periodChange, onFocusIn: this._amPmFocusIn, onFocusOut: this._amPmFocusOut, children: this._periods.map((period) => jsx(SegmentedButtonItem_default, { selected: period.selected, children: period.label })) })] })] }), jsx("div", { class: "ui5-time-picker-tsc-clocks", role: "img", "aria-label": this.clockDialAriaLabel, children: this._entities.map((entity) => jsx(TimePickerClock_default, { id: `${this._id}_clock_${entity.entity}`, "data-ui5-clock": entity.entity, active: entity.active, label: entity.label, itemMin: entity.itemMin, itemMax: entity.itemMax, selectedValue: entity.value, displayStep: entity.displayStep, valueStep: entity.attributes && entity.attributes.step, lastItemReplacement: entity.lastItemReplacement, hideFractions: entity.hideFractions, prependZero: entity.prependZero, _skipAnimation: entity.skipAnimation, onChange: this._clockChange })) })] });
}

// node_modules/@ui5/webcomponents/dist/generated/themes/TimeSelectionClocks.css.js
registerThemePropertiesLoader("@ui5/webcomponents-theming", "sap_horizon", async () => parameters_bundle_css_default);
registerThemePropertiesLoader("@ui5/webcomponents", "sap_horizon", async () => parameters_bundle_css_default2);
var TimeSelectionClocks_css_default = `.ui5-time-picker-tsc-container{margin:0 auto;box-sizing:border-box;width:100%;padding:1rem;text-align:center}.ui5-time-picker-tsc-container:focus{outline:none}.ui5-time-picker-tsc-buttons{display:flex;justify-content:center;align-items:center;padding-bottom:1rem;width:100%}.ui5-time-picker-tsc-buttons .ui5-time-selection-separator{min-width:.5rem;padding:0 .125rem;text-align:center;font-family:var(--sapFontFamily);font-size:var(--sapFontSize);color:var(--sapContent_LabelColor)}.ui5-time-picker-tsc-clocks{display:block;text-align:center;width:100%;touch-action:none}
`;

// node_modules/@ui5/webcomponents/dist/TimeSelectionClocks.js
var __decorate39 = function(decorators, target, key, desc) {
  var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
  if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
  else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
  return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var TimeSelectionClocks = class TimeSelectionClocks2 extends TimePickerInternals_default {
  constructor() {
    super(...arguments);
    this._spacePressed = false;
    this._focused = false;
    this._amPmFocused = false;
    this._skipAnimation = false;
  }
  onBeforeRendering() {
    this._createComponents();
  }
  /**
   * Returns ToggleSpinButton component by index or name.
   * @param indexOrName the index or name of the component
   * @returns component (if exists) or undefined
   */
  _buttonComponent(indexOrName) {
    var _a;
    const index = typeof indexOrName === "string" ? this._indexFromName(indexOrName) : indexOrName;
    const entity = this._entities[index].entity;
    return entity ? (_a = this.shadowRoot) == null ? void 0 : _a.querySelector(`#${this._id}_button_${entity}`) : void 0;
  }
  /**
   * Returns TimePickerClock component by index or name.
   * @param indexOrName the index or name of the component
   * @returns component (if exists) or undefined
   */
  _clockComponent(indexOrName) {
    var _a;
    const index = typeof indexOrName === "string" ? this._indexFromName(indexOrName) : indexOrName;
    const entity = this._entities[index].entity;
    return entity ? (_a = this.shadowRoot) == null ? void 0 : _a.querySelector(`#${this._id}_clock_${entity}`) : void 0;
  }
  /**
   * TimePickerClocks focusin event handler. Focuses the active button and switches to active clock.
   * @param evt Event object
   */
  _clocksFocusIn(evt) {
    const target = evt.target;
    if (target.id === this._id) {
      this._switchClock(this._activeIndex);
    }
  }
  /**
   * ToggleSpinButton focusin event handler. Switches to clock which button is being focused.
   * @param evt Event object
   */
  _buttonFocusIn(evt) {
    const target = evt.target;
    const newName = this._getNameFromId(target.id);
    const newIndex = this._getIndexFromId(target.id);
    if (this._activeIndex !== newIndex && newName) {
      this._switchTo(newName);
    }
  }
  /**
   * AM/PM segmented button focusin event handler.
   */
  _amPmFocusIn() {
    this._amPmFocused = true;
  }
  /**
   * AM/PM segmented button focusout event handler.
   */
  _amPmFocusOut() {
    this._amPmFocused = false;
  }
  /**
   * keyup event handler.
   * @param evt Event object
   */
  _onkeyup(evt) {
    if (isSpace(evt)) {
      this._spacePressed = false;
    }
  }
  /**
   * keydown event handler.
   * @param evt Event object
   */
  _onkeydown(evt) {
    let clock;
    const toggleSpinButtonTarget = evt.target && evt.target.tagName.toLowerCase().indexOf("segmented") === -1;
    if (isEnter(evt)) {
      this.fireDecoratorEvent("close-picker");
    } else if (isSpace(evt) && toggleSpinButtonTarget && !this._spacePressed) {
      evt.preventDefault();
      this._spacePressed = true;
      this._keyboardBuffer = "";
      this._resetCooldown(true);
      this._switchNextClock(true, true);
    } else if ((isUp(evt) || isDown(evt)) && !isUpAlt(evt) && !isDownAlt(evt)) {
      clock = this._clockComponent(this._activeIndex);
      clock && !clock.disabled && !this._amPmFocused && clock._modifyValue(isUp(evt));
      evt.preventDefault();
    } else if (isPageUp(evt) || isPageDown(evt)) {
      clock = this._clockComponent("hours");
      if (clock && !clock.disabled) {
        this._switchTo("hours", true);
        clock._modifyValue(isPageUp(evt));
      }
      evt.preventDefault();
    } else if (isPageUpShift(evt) || isPageDownShift(evt)) {
      clock = this._clockComponent("minutes");
      if (clock && !clock.disabled) {
        this._switchTo("minutes", true);
        clock._modifyValue(isPageUpShift(evt));
      }
      evt.preventDefault();
    } else if (isPageUpShiftCtrl(evt) || isPageDownShiftCtrl(evt)) {
      clock = this._clockComponent("seconds");
      if (clock && !clock.disabled) {
        this._switchTo("seconds", true);
        clock._modifyValue(isPageUpShiftCtrl(evt));
      }
      evt.preventDefault();
    } else if (isKeyA(evt) || isKeyP(evt)) {
      const buttonAmPm = this._buttonAmPm();
      if (buttonAmPm) {
        buttonAmPm.items[0].selected = isKeyA(evt);
        buttonAmPm.items[1].selected = isKeyP(evt);
        const period = isKeyA(evt) ? buttonAmPm.items[0].textContent : buttonAmPm.items[1].textContent;
        period && this._calculatePeriodChange(period);
      }
      evt.preventDefault();
    } else if (isColon(evt)) {
      this._keyboardBuffer = "";
      this._exactMatch = void 0;
      this._resetCooldown(true);
      this._switchNextClock(true, true);
    } else if (isNumber(evt) && this._entities[this._activeIndex]) {
      this._exactMatch = void 0;
      this._resetCooldown(true);
      this._numbersInput(evt);
    }
  }
  /**
   * Handles direct numbers entry.
   * @param evt Event object
   */
  _numbersInput(evt) {
    const char = evt.key;
    const bufferStr = this._keyboardBuffer + char;
    const bufferNum = parseInt(bufferStr);
    const entity = this._entities[this._activeIndex];
    let activeClock = this._clockComponent(this._activeIndex);
    if (!entity || !entity.attributes) {
      return;
    }
    if (bufferNum > entity.attributes.max) {
      activeClock && activeClock._setSelectedValue(parseInt(this._keyboardBuffer));
      this._switchNextClock(false, true);
      this._keyboardBuffer = char;
      activeClock = this._clockComponent(this._activeIndex);
      activeClock && activeClock._setSelectedValue(parseInt(char));
      this._resetCooldown(true);
    } else {
      this._keyboardBuffer = bufferStr;
      activeClock && activeClock._setSelectedValue(parseInt(this._keyboardBuffer));
      if (this._keyboardBuffer.length === 2 || parseInt(`${this._keyboardBuffer}0`) > entity.attributes.max) {
        this._resetCooldown(this._keyboardBuffer.length !== 2);
        this._keyboardBuffer = "";
        this._switchNextClock(false, true);
      }
    }
  }
  /**
   * Focuses the first available button.
   */
  _focusFirstButton() {
    this._activeIndex = 0;
    this._buttonComponent(0).focus();
  }
  /**
   * Sets the exact match value. Must be overriden.
   */
  _setExactMatch() {
    const clock = this._clockComponent(this._activeIndex);
    clock && this._exactMatch !== void 0 && clock._setSelectedValue(this._exactMatch);
  }
  /**
   * Creates clock and button components according to the display format pattern.
   */
  _createComponents() {
    const time = {
      hours: parseInt(this._hours),
      minutes: parseInt(this._minutes),
      seconds: parseInt(this._seconds)
    };
    this._entities = [];
    this._periods = [];
    this._componentMap = {
      hours: -1,
      minutes: -1,
      seconds: -1
    };
    if (this._hasHoursComponent) {
      this._componentMap.hours = this._entities.length;
      this._entities.push({
        "label": this.hoursLabel,
        "entity": "hours",
        "itemMin": 1,
        "itemMax": this._hoursConfiguration.isTwelveHoursFormat ? 12 : 24,
        "value": time.hours,
        "stringValue": this._hours,
        "textValue": `${time.hours} ${this.hoursLabel}`,
        "displayStep": this._hoursConfiguration.isTwelveHoursFormat ? 1 : 2,
        "lastItemReplacement": this._hoursConfiguration.isTwelveHoursFormat ? -1 : 0,
        "hideFractions": !this._hoursConfiguration.isTwelveHoursFormat,
        "prependZero": this._zeroPaddedHours,
        "hasSeparator": this._entities.length > 0,
        "active": false,
        "skipAnimation": false,
        "attributes": {
          "min": this._hoursConfiguration.minHour,
          "max": this._hoursConfiguration.maxHour,
          "step": 1
        }
      });
    }
    if (this._hasMinutesComponent) {
      this._componentMap.minutes = this._entities.length;
      this._entities.push({
        "label": this.minutesLabel,
        "entity": "minutes",
        "itemMin": 1,
        "itemMax": 60,
        "value": time.minutes,
        "stringValue": this._minutes,
        "textValue": `${time.minutes} ${this.minutesLabel}`,
        "displayStep": 5,
        "lastItemReplacement": 0,
        "hideFractions": false,
        "prependZero": false,
        "hasSeparator": this._entities.length > 0,
        "active": false,
        "skipAnimation": false,
        "attributes": {
          "min": 0,
          "max": 59,
          "step": 1
        }
      });
    }
    if (this._hasSecondsComponent) {
      this._componentMap.seconds = this._entities.length;
      this._entities.push({
        "label": this.secondsLabel,
        "entity": "seconds",
        "itemMin": 1,
        "itemMax": 60,
        "value": time.seconds,
        "stringValue": this._seconds,
        "textValue": `${time.seconds} ${this.secondsLabel}`,
        "displayStep": 5,
        "lastItemReplacement": 0,
        "hideFractions": false,
        "prependZero": false,
        "hasSeparator": this._entities.length > 0,
        "active": false,
        "skipAnimation": false,
        "attributes": {
          "min": 0,
          "max": 59,
          "step": 1
        }
      });
    }
    this._entities[this._activeIndex].active = true;
    this._entities[this._activeIndex].skipAnimation = this._skipAnimation;
    this._createPeriodComponent();
  }
  /**
   * Switches to the specific clock by name.
   * @param clockName the name of the clock
   * @param skipAnimation whether to skip transition animation while displaying the next clock
   */
  _switchTo(clockName, skipAnimation = false) {
    const key = this._componentKey(clockName);
    if (this._componentMap[key] !== void 0) {
      this._switchClock(this._componentMap[key], skipAnimation);
    }
  }
  /**
   * Switches to the specific clock by its index in _clocks property.
   * @param clockIndex the index of the clock
   * @param skipAnimation whether to skip transition animation while displaying the next clock
   */
  _switchClock(clockIndex, skipAnimation = false) {
    var _a, _b;
    if (this._activeIndex === clockIndex || !this._entities.length || clockIndex >= this._entities.length) {
      return;
    }
    const currentClockComponent = this._clockComponent(this._activeIndex);
    const newClockComponent = this._clockComponent(clockIndex);
    if (this._skipAnimation && clockIndex !== 0 && this._activeIndex === 0 && currentClockComponent) {
      currentClockComponent._skipAnimation = false;
      this._skipAnimation = skipAnimation;
    }
    if (newClockComponent && skipAnimation) {
      newClockComponent._skipAnimation = true;
      this._activateClock(clockIndex);
    } else {
      (_a = currentClockComponent == null ? void 0 : currentClockComponent._firstNumberElement) == null ? void 0 : _a.addEventListener("animationend", () => this._activateClock(clockIndex), { once: true });
      (_b = currentClockComponent == null ? void 0 : currentClockComponent._clockWrapper) == null ? void 0 : _b.classList.add("ui5-tp-clock-transition");
    }
  }
  /**
   * Makes specific clock active.
   * @param clockIndex the index of the clock to be activated
   */
  _activateClock(clockIndex) {
    const newButton = this._buttonComponent(clockIndex);
    this._entities[this._activeIndex].active = false;
    this._activeIndex = clockIndex;
    this._entities[this._activeIndex].active = true;
    newButton && newButton.focus();
  }
  /**
   * Switches to the next available clock.
   * @param wrapAround whether to switch to the first clock if there are no next clock
   * @param skipAnimation whether to skip transition animation while displaying the next clock
   */
  _switchNextClock(wrapAround = false, skipAnimation = false) {
    let activeIndex = this._activeIndex;
    const startActiveIndex = activeIndex;
    const activeClock = this._clockComponent(activeIndex);
    do {
      activeIndex++;
      if (activeIndex >= this._entities.length) {
        activeIndex = wrapAround ? 0 : this._entities.length - 1;
      }
    } while (activeClock && activeClock.disabled && activeIndex !== startActiveIndex && (wrapAround || activeIndex < this._entities.length - 1));
    const newClock = this._clockComponent(activeIndex);
    if (activeIndex !== startActiveIndex && newClock && !newClock.disabled) {
      this._switchClock(activeIndex, skipAnimation);
    }
  }
  /**
   * Clock 'change' event handler.
   * @param evt Event object
   */
  _clockChange(evt) {
    const index = this._getIndexFromId(evt.target.id);
    const stringValue = evt.detail.stringValue;
    const value = evt.detail.value;
    const button = this._buttonComponent(index);
    if (!button) {
      return;
    }
    this._entities[index].stringValue = stringValue;
    this._entities[index].value = value;
    this._entities = JSON.parse(JSON.stringify(this._entities));
    switch (index) {
      case this._componentMap.hours:
        this._hoursChange(value);
        break;
      case this._componentMap.minutes:
        this._minutesChange(value);
        break;
      case this._componentMap.seconds:
        this._secondsChange(value);
        break;
    }
    if (evt.detail.finalChange) {
      if (this._activeIndex < this._entities.length - 1) {
        this._switchNextClock();
      } else {
        button.focus();
      }
    }
  }
};
__decorate39([
  property_default({ type: Boolean, noAttribute: true })
], TimeSelectionClocks.prototype, "_spacePressed", void 0);
__decorate39([
  property_default({ type: Boolean, noAttribute: true })
], TimeSelectionClocks.prototype, "_focused", void 0);
__decorate39([
  property_default({ type: Boolean, noAttribute: true })
], TimeSelectionClocks.prototype, "_amPmFocused", void 0);
__decorate39([
  property_default({ type: Boolean })
], TimeSelectionClocks.prototype, "_skipAnimation", void 0);
TimeSelectionClocks = __decorate39([
  event_strict_default("close-picker", {
    bubbles: true
  }),
  customElement_default({
    tag: "ui5-time-selection-clocks",
    styles: TimeSelectionClocks_css_default,
    template: TimeSelectionClocksTemplate
  })
], TimeSelectionClocks);
TimeSelectionClocks.define();
var TimeSelectionClocks_default = TimeSelectionClocks;

// node_modules/@ui5/webcomponents/dist/DateTimePickerTemplate.js
function DateTimePickerTemplate() {
  return [
    DatePickerInputTemplate.call(this),
    DatePickerPopoverTemplate.call(this, { header, content: content3, footer })
  ];
}
function header() {
  return jsx(Fragment, { children: this.phone && jsx("div", { class: "ui5-dt-picker-header", children: jsxs(SegmentedButton_default, { class: "ui5-dt-picker-toggle-button", onSelectionChange: this._dateTimeSwitchChange, children: [jsx(SegmentedButtonItem_default, { "data-ui5-key": "Date", selected: this.showDateView, children: this.btnDateLabel }), jsx(SegmentedButtonItem_default, { "data-ui5-key": "Time", selected: this.showTimeView, children: this.btnTimeLabel })] }) }) });
}
function content3() {
  return jsxs("div", { class: {
    "ui5-dt-picker-content": true,
    "ui5-dt-picker-content--phone": this.phone
  }, children: [jsx(Calendar_default, { class: {
    "ui5-dt-cal": true,
    "ui5-dt-cal--hidden": this.phone && this.showTimeView,
    "ui5-dt-time--hidden": this.phone && this.showDateView
  }, id: `${this._id}-calendar`, primaryCalendarType: this._primaryCalendarType, secondaryCalendarType: this.secondaryCalendarType, formatPattern: this._formatPattern, selectionMode: this._calendarSelectionMode, minDate: this.minDate, maxDate: this.maxDate, calendarWeekNumbering: this.calendarWeekNumbering, onSelectionChange: this.onSelectedDatesChange, onShowMonthView: this.onHeaderShowMonthPress, onShowYearView: this.onHeaderShowYearPress, hideWeekNumbers: this.hideWeekNumbers, _currentPicker: this._calendarCurrentPicker, children: this._calendarSelectedDates.map((date) => jsx(CalendarDate_default2, { value: date })) }), !this.phone && jsx("span", { class: "ui5-dt-picker-separator" }), this.showTimeView && jsx(TimeSelectionClocks_default, { id: `${this._id}-time-sel`, class: {
    "ui5-dt-time": true,
    ...this.classes.dateTimeView
  }, formatPattern: this._formatPattern, value: this._timeSelectionValue, onChange: this.onTimeSelectionChange, _calendarType: this._primaryCalendarType })] });
}
function footer() {
  return jsxs("div", { slot: "footer", class: {
    "ui5-dt-picker-footer": true,
    "ui5-dt-picker-footer-time-hidden": this.phone && this.showTimeView || this.phone && this.showDateView
  }, children: [jsx(Button_default, { id: "ok", class: "ui5-dt-picker-action", design: "Emphasized", disabled: this._submitDisabled, onClick: this._submitClick, children: this.btnOKLabel }), jsx(Button_default, { id: "cancel", class: "ui5-dt-picker-action", design: "Transparent", onClick: this._cancelClick, children: this.btnCancelLabel })] });
}

// node_modules/@ui5/webcomponents/dist/generated/themes/DateTimePicker.css.js
registerThemePropertiesLoader("@ui5/webcomponents-theming", "sap_horizon", async () => parameters_bundle_css_default);
registerThemePropertiesLoader("@ui5/webcomponents", "sap_horizon", async () => parameters_bundle_css_default2);
var DateTimePicker_css_default = `:host{min-width:15rem;color:var(--sapField_TextColor);background-color:var(--sapField_Background)}:host .ui5-date-picker-input{min-width:inherit;color:inherit;background-color:inherit}
`;

// node_modules/@ui5/webcomponents/dist/generated/themes/DateTimePickerPopover.css.js
registerThemePropertiesLoader("@ui5/webcomponents-theming", "sap_horizon", async () => parameters_bundle_css_default);
registerThemePropertiesLoader("@ui5/webcomponents", "sap_horizon", async () => parameters_bundle_css_default2);
var DateTimePickerPopover_css_default = `.ui5-dt-picker-content{display:flex;flex-direction:row;height:var(--_ui5-v2-8-0_datetime_picker_height);min-width:var(--_ui5-v2-8-0_datetime_picker_width);box-sizing:border-box;justify-content:center}.ui5-dt-picker-toggle-button{width:8rem}.ui5-dt-cal{width:auto;box-sizing:border-box}.ui5-dt-time{width:100%;min-width:var(--_ui5-v2-8-0_datetime_timeview_width);box-sizing:border-box}.ui5-dt-cal.ui5-dt-cal--hidden,.ui5-dt-time.ui5-dt-time--hidden{display:none}.ui5-dt-picker-header{display:flex;justify-content:center;width:100%;margin-top:1rem;box-sizing:border-box}.ui5-dt-picker-separator{height:calc(100% - 2rem);width:0px;margin-top:1rem;margin-bottom:1rem;border-left:1px solid var(--sapGroup_ContentBorderColor);box-sizing:border-box}.ui5-dt-picker-footer{display:flex;justify-content:flex-end;align-items:center;height:2.75rem;width:100%}.ui5-dt-picker-footer.ui5-dt-picker-footer-time-hidden{padding:0}.ui5-dt-picker-action{margin:.25rem}#ok.ui5-dt-picker-action{width:4rem}.ui5-dt-picker-content--phone.ui5-dt-picker-content{min-width:20rem;height:calc(100% - 4rem)}.ui5-dt-picker-content--phone.ui5-dt-picker-content [ui5-time-selection-clocks]{height:var(--_ui5-v2-8-0_datetime_timeview_phonemode_clocks_width);width:auto}.ui5-dt-picker-content--phone.ui5-dt-picker-content [ui5-calendar]{margin-bottom:var(--_ui5-v2-8-0_datetime_dateview_phonemode_margin_bottom)}.ui5-dt-picker-content--phone .ui5-dt-cal{width:100%}.ui5-dt-picker-content--phone .ui5-dt-time{min-width:var(--_ui5-v2-8-0_datetime_timeview_phonemode_width)}
`;

// node_modules/@ui5/webcomponents/dist/DateTimePicker.js
var __decorate40 = function(decorators, target, key, desc) {
  var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
  if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
  else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
  return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var DateTimePicker_1;
var PHONE_MODE_BREAKPOINT = 640;
var DateTimePicker = DateTimePicker_1 = class DateTimePicker2 extends DatePicker_default {
  constructor() {
    super();
    this._showTimeView = false;
    this._phoneMode = false;
    this._previewValues = {};
    this._handleResizeBound = this._handleResize.bind(this);
  }
  /**
   * @override
   */
  onResponsivePopoverAfterClose() {
    super.onResponsivePopoverAfterClose();
    this._showTimeView = false;
    this._previewValues = {};
  }
  /**
   * LIFECYCLE METHODS
   */
  onEnterDOM() {
    ResizeHandler_default.register(document.body, this._handleResizeBound);
  }
  onExitDOM() {
    ResizeHandler_default.deregister(document.body, this._handleResizeBound);
  }
  /**
   * @override
   * @private
   */
  _togglePicker() {
    super._togglePicker();
    if (this.open) {
      this._previewValues = {
        ...this._previewValues,
        timeSelectionValue: this.value || this.getFormat().format(UI5Date_default2.getInstance())
      };
    }
  }
  /**
   * Read-only getters
   */
  get classes() {
    return {
      // Remove after deliting the hbs template, the classes are added in the jsx template
      picker: {
        "ui5-dt-picker-content--phone": this.phone
      },
      dateTimeView: {
        "ui5-dt-cal--hidden": this.phone && this.showTimeView,
        "ui5-dt-time--hidden": this.phone && this.showDateView
      },
      footer: {
        "ui5-dt-picker-footer-time-hidden": this.phone && this.showTimeView || this.phone && this.showDateView
      }
    };
  }
  get _formatPattern() {
    const hasHours = !!(this.formatPattern || "").match(/H/i);
    const fallback = !this.formatPattern || !hasHours;
    const localeData = getCachedLocaleDataInstance_default(getLocale_default());
    return fallback ? localeData.getCombinedDateTimePattern("medium", "medium", this._primaryCalendarType) : this.formatPattern || "";
  }
  get _calendarTimestamp() {
    return this._previewValues.calendarTimestamp ? this._previewValues.calendarTimestamp : super._calendarTimestamp;
  }
  get _calendarSelectedDates() {
    return this._previewValues.calendarValue ? [this._previewValues.calendarValue] : super._calendarSelectedDates;
  }
  get _timeSelectionValue() {
    return this._previewValues.timeSelectionValue ? this._previewValues.timeSelectionValue : this.value;
  }
  get openIconName() {
    return "date-time";
  }
  get btnOKLabel() {
    return DateTimePicker_1.i18nBundle.getText(TIMEPICKER_SUBMIT_BUTTON);
  }
  get btnCancelLabel() {
    return DateTimePicker_1.i18nBundle.getText(TIMEPICKER_CANCEL_BUTTON);
  }
  get btnDateLabel() {
    return DateTimePicker_1.i18nBundle.getText(DATETIME_PICKER_DATE_BUTTON);
  }
  get btnTimeLabel() {
    return DateTimePicker_1.i18nBundle.getText(DATETIME_PICKER_TIME_BUTTON);
  }
  get showFooter() {
    return true;
  }
  get showDateView() {
    return this.phone ? !this._showTimeView : true;
  }
  get showTimeView() {
    return this.phone ? this._showTimeView : true;
  }
  get phone() {
    return super.phone || this._phoneMode;
  }
  /**
   * @override
   */
  get dateAriaDescription() {
    return DateTimePicker_1.i18nBundle.getText(DATETIME_DESCRIPTION);
  }
  /**
   * @override
   */
  get pickerAccessibleName() {
    return DateTimePicker_1.i18nBundle.getText(DATETIMEPICKER_POPOVER_ACCESSIBLE_NAME);
  }
  /**
   * Defines whether the dialog on mobile should have header
   * @private
   */
  get _shouldHideHeader() {
    return true;
  }
  /**
   * EVENT HANDLERS
   */
  /**
   * @override
   */
  onSelectedDatesChange(e) {
    e.preventDefault();
    const dateTimePickerContent = e.path ? e.path[1] : e.composedPath()[1];
    this._previewValues = {
      ...this._previewValues,
      calendarTimestamp: e.detail.timestamp,
      calendarValue: e.detail.selectedValues[0],
      timeSelectionValue: dateTimePickerContent.lastChild.value
    };
  }
  onTimeSelectionChange(e) {
    this._previewValues = {
      ...this._previewValues,
      timeSelectionValue: e.detail.value
    };
  }
  /**
   * Handles document resize to switch between `phoneMode` and normal appearance.
   */
  _handleResize() {
    const documentWidth = document.body.offsetWidth;
    const toPhoneMode = documentWidth <= PHONE_MODE_BREAKPOINT;
    const modeChange = toPhoneMode && !this._phoneMode || !toPhoneMode && this._phoneMode;
    if (modeChange) {
      this._phoneMode = toPhoneMode;
    }
  }
  get _submitDisabled() {
    return !this._calendarSelectedDates || !this._calendarSelectedDates.length;
  }
  /**
   * Handles clicking on the `submit` button, within the picker`s footer.
   */
  _submitClick() {
    const selectedDate = this.getSelectedDateTime();
    const value = this.getFormat().format(selectedDate);
    if (this.value !== value) {
      this._updateValueAndFireEvents(value, true, ["change", "value-changed"]);
    }
    this._togglePicker();
  }
  /**
   * Handles clicking on the `cancel` button, within the picker`s footer,
   * that would disregard the user selection.
   */
  _cancelClick() {
    this._togglePicker();
  }
  /**
   * Handles the date/time switch available in `phoneMode` to switch
   * between the date and time views.
   * @param e
   */
  _dateTimeSwitchChange(e) {
    const selectedItem = e.detail.selectedItems[0];
    this._showTimeView = selectedItem.getAttribute("data-ui5-key") === "Time";
  }
  /**
   * @override
   */
  _modifyDateValue(amount, unit, preserveDate) {
    if (!this.dateValue) {
      return;
    }
    const modifiedDate = modifyDateBy_default(CalendarDate_default.fromLocalJSDate(this.dateValue), amount, unit, preserveDate, this._minDate, this._maxDate);
    const modifiedLocalDate = modifiedDate.toLocalJSDate();
    modifiedLocalDate.setHours(this.dateValue.getHours());
    modifiedLocalDate.setMinutes(this.dateValue.getMinutes());
    modifiedLocalDate.setSeconds(this.dateValue.getSeconds());
    const newValue = this.formatValue(modifiedLocalDate);
    this._updateValueAndFireEvents(newValue, true, ["change", "value-changed"]);
  }
  getPicker() {
    return this.shadowRoot.querySelector("[ui5-responsive-popover]");
  }
  getSelectedDateTime() {
    const selectedDate = this.getFormat().parse(this._calendarSelectedDates[0]);
    const selectedTime = this.getFormat().parse(this._timeSelectionValue);
    if (selectedTime) {
      selectedDate.setHours(selectedTime.getHours());
      selectedDate.setMinutes(selectedTime.getMinutes());
      selectedDate.setSeconds(selectedTime.getSeconds());
    }
    return selectedDate;
  }
  getFormat() {
    return this._isPattern ? DateFormat_default2.getDateTimeInstance({
      strictParsing: true,
      pattern: this._formatPattern,
      calendarType: this._primaryCalendarType
    }) : DateFormat_default2.getDateTimeInstance({
      strictParsing: true,
      style: this._formatPattern,
      calendarType: this._primaryCalendarType
    });
  }
  /**
   * @override
   */
  get _calendarPickersMode() {
    return CalendarPickersMode_default.DAY_MONTH_YEAR;
  }
};
__decorate40([
  property_default({ type: Boolean, noAttribute: true })
], DateTimePicker.prototype, "_showTimeView", void 0);
__decorate40([
  property_default({ type: Boolean })
], DateTimePicker.prototype, "_phoneMode", void 0);
__decorate40([
  property_default({ type: Object })
], DateTimePicker.prototype, "_previewValues", void 0);
DateTimePicker = DateTimePicker_1 = __decorate40([
  customElement_default({
    tag: "ui5-datetime-picker",
    template: DateTimePickerTemplate,
    styles: [
      DatePicker_default.styles,
      DateTimePicker_css_default,
      DateTimePickerPopover_css_default
    ]
  })
], DateTimePicker);
DateTimePicker.define();

// node_modules/@ui5/webcomponents-react/dist/webComponents/DateTimePicker/index.js
var DateTimePicker3 = withWebComponent("ui5-datetime-picker", ["accessibleName", "accessibleNameRef", "calendarWeekNumbering", "formatPattern", "maxDate", "minDate", "name", "placeholder", "primaryCalendarType", "secondaryCalendarType", "value", "valueState"], ["disabled", "hideWeekNumbers", "open", "readonly", "required"], ["valueStateMessage"], ["change", "close", "input", "open", "value-state-change"]);
DateTimePicker3.displayName = "DateTimePicker";

// node_modules/@ui5/webcomponents-react/dist/webComponents/Dialog/index.js
var Dialog = withWebComponent("ui5-dialog", ["accessibleName", "accessibleNameRef", "accessibleRole", "headerText", "initialFocus", "state"], ["draggable", "open", "preventFocusRestore", "preventInitialFocus", "resizable", "stretch"], ["footer", "header"], ["before-close", "before-open", "close", "open"]);
Dialog.displayName = "Dialog";

// node_modules/@ui5/webcomponents-icons/dist/v4/slim-arrow-up.js
var name11 = "slim-arrow-up";
var pathData11 = "M261.5 197q-6-6-11 0l-160 160q-5 5-11.5 5t-11.5-5-5-11.5 5-11.5l166-165q9-9 22-9t23 9l165 165q5 5 5 11t-5 11q-12 12-23 0z";
var ltr11 = false;
var collection11 = "SAP-icons-v4";
var packageName11 = "@ui5/webcomponents-icons";
registerIcon(name11, { pathData: pathData11, ltr: ltr11, collection: collection11, packageName: packageName11 });

// node_modules/@ui5/webcomponents-icons/dist/v5/slim-arrow-up.js
var name12 = "slim-arrow-up";
var pathData12 = "M96 326q0-10 7-17l135-141q6-8 18-8 11 0 19 8l134 141q7 7 7 17 0 11-7.5 18.5T390 352q-10 0-18-8L256 223 140 344q-8 8-18 8-11 0-18.5-7.5T96 326z";
var ltr12 = false;
var collection12 = "SAP-icons-v5";
var packageName12 = "@ui5/webcomponents-icons";
registerIcon(name12, { pathData: pathData12, ltr: ltr12, collection: collection12, packageName: packageName12 });

// node_modules/@ui5/webcomponents-icons/dist/slim-arrow-up.js
var slim_arrow_up_default = "slim-arrow-up";

// node_modules/@ui5/webcomponents-icons/dist/v4/pushpin-off.js
var name13 = "pushpin-off";
var pathData13 = "M454 155q10 9 10 22t-10 23q-9 9-23.5 17t-32 15.5-35 14T331 258q12 37 3.5 76.5T296 403l-90-90L75 443q-11 12-23 0-5-5-5-11t5-11l131-131-91-90q30-30 69-38.5t77 3.5q4-15 10.5-32.5t14-35 16-32.5T296 41q10-9 23-9t22 9zM319 64q-11 11-24 40t-26 71l-10 30-31-9q-22-8-44.5-6T141 203l152 152q11-20 13-42.5t-6-45.5l-10-30 31-10q31-10 51.5-18t33-14.5 18.5-11 8-6.5z";
var ltr13 = false;
var collection13 = "SAP-icons-v4";
var packageName13 = "@ui5/webcomponents-icons";
registerIcon(name13, { pathData: pathData13, ltr: ltr13, collection: collection13, packageName: packageName13 });

// node_modules/@ui5/webcomponents-icons/dist/v5/pushpin-off.js
var name14 = "pushpin-off";
var pathData14 = "M473 168q7 9 7 18 0 11-7.5 18.5T454 212h-32l-52 52-41 165q-5 19-25 19-10 0-18-8l-89-89L76 472q-8 8-18 8-11 0-18.5-7.5T32 454q0-10 8-18l121-121-89-89q-8-8-8-18 0-20 19-25l165-41 52-52V58q0-11 7.5-18.5T326 32q9 0 18 7zm-76-3l-50-50-68 68q-6 6-11 7l-128 32 150 150 32-128q1-5 7-11z";
var ltr14 = false;
var collection14 = "SAP-icons-v5";
var packageName14 = "@ui5/webcomponents-icons";
registerIcon(name14, { pathData: pathData14, ltr: ltr14, collection: collection14, packageName: packageName14 });

// node_modules/@ui5/webcomponents-icons/dist/pushpin-off.js
var pushpin_off_default = "pushpin-off";

// node_modules/@ui5/webcomponents-icons/dist/v4/pushpin-on.js
var name15 = "pushpin-on";
var pathData15 = "M353 416h31v64q0 14-8.5 23t-22.5 9H33q-14 0-23.5-9T0 480V128L128 0h128v32h-96v96q0 14-9 23t-23 9H32v320h321v-64zm151-289q8 8 8 18t-8 18q-7 7-18.5 13.5t-25 12-27 10.5-25.5 8q10 29 3 60t-30 54l-68-68-79 79q-5 5-11.5 5t-11.5-5-5-11 5-11l80-80-68-67q23-23 53.5-30t59.5 3q4-12 9-25.5t10.5-27 12-25.5T381 39q8-7 18-7t17 7zm-105 50q31-10 50-18.5t27-14.5l-77-77q-6 9-14 28t-18 50l-10 31-31-10q-26-9-53 1l103 104q10-25 2-54l-10-30z";
var ltr15 = false;
var collection15 = "SAP-icons-v4";
var packageName15 = "@ui5/webcomponents-icons";
registerIcon(name15, { pathData: pathData15, ltr: ltr15, collection: collection15, packageName: packageName15 });

// node_modules/@ui5/webcomponents-icons/dist/v5/pushpin-on.js
var name16 = "pushpin-on";
var pathData16 = "M473 168q7 9 7 18 0 11-7.5 18.5T454 212h-32l-52 52-41 165q-5 19-25 19-10 0-18-8l-89-89L76 472q-8 8-18 8-11 0-18.5-7.5T32 454q0-10 8-18l121-121-89-89q-8-8-8-18 0-20 19-25l165-41 52-52V58q0-11 7.5-18.5T326 32q9 0 18 7z";
var ltr16 = false;
var collection16 = "SAP-icons-v5";
var packageName16 = "@ui5/webcomponents-icons";
registerIcon(name16, { pathData: pathData16, ltr: ltr16, collection: collection16, packageName: packageName16 });

// node_modules/@ui5/webcomponents-icons/dist/pushpin-on.js
var pushpin_on_default = "pushpin-on";

// node_modules/@ui5/webcomponents-fiori/dist/DynamicPageHeaderActionsTemplate.js
function DynamicPageHeaderActionsTemplate() {
  return jsx("div", { class: "ui5-dynamic-page-header-actions-root", children: jsxs("div", { class: "ui5-dynamic-page-header-actions--wrapper", children: [jsx(Button_default, { class: "ui5-dynamic-page-header-action ui5-dynamic-page-header-action-expand", onClick: this.onExpandClick, icon: this.arrowButtonIcon, accessibleName: this.expandLabel, accessibilityAttributes: this.accessibilityAttributes, tooltip: this.expandLabel, onMouseOver: this.onExpandHoverIn, onMouseOut: this.onExpandHoverOut }), this.showPinButton && jsx(ToggleButton_default, { class: "ui5-dynamic-page-header-action ui5-dynamic-page-header-action-pin", onClick: this.onPinClick, icon: this.pinButtonIcon, pressed: this.pinned, accessibilityAttributes: this.accessibilityAttributes, accessibleName: this.pinLabel, tooltip: this.pinLabel })] }) });
}

// node_modules/@ui5/webcomponents-fiori/dist/generated/themes/DynamicPageHeaderActions.css.js
registerThemePropertiesLoader("@ui5/webcomponents-theming", "sap_horizon", async () => parameters_bundle_css_default);
registerThemePropertiesLoader("@ui5/webcomponents-fiori", "sap_horizon", async () => parameters_bundle_css_default3);
var DynamicPageHeaderActions_css_default = `.ui5-dynamic-page-header-actions-root{position:relative;display:flex;justify-content:center;align-items:center;width:100%;.ui5-dynamic-page-header-action{position:relative;z-index:1;min-width:1.5rem;height:1.5rem;background-color:var(--_ui5-v2-8-0_dynamic_page_header-actions-background);border:1px solid var(--sapButton_BorderColor);box-shadow:var(--_ui5-v2-8-0_dynamic_page_header-actions-box-shadow);color:var(--_ui5-v2-8-0_dynamic_page_header-actions-color)}.ui5-dynamic-page-header-action-pin[pressed]{background-color:var(--_ui5-v2-8-0_dynamic_page_header-actions-background-pressed);color:var(--_ui5-v2-8-0_dynamic_page_header-actions-color-pressed)}.ui5-dynamic-page-header-actions--wrapper{position:absolute;display:flex;gap:.5rem;z-index:1;&:before,&:after{content:"";position:absolute;top:50%;transform:translateY(-100%);width:6.125rem;height:.0625rem;z-index:0}&:before{right:50%;background:linear-gradient(to right,transparent,var(--_ui5-v2-8-0_dynamic_page_actions-lines-color))}&:after{left:50%;background:linear-gradient(to left,transparent,var(--_ui5-v2-8-0_dynamic_page_actions-lines-color))}}}
`;

// node_modules/@ui5/webcomponents-fiori/dist/DynamicPageHeaderActions.js
var __decorate41 = function(decorators, target, key, desc) {
  var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
  if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
  else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
  return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var DynamicPageHeaderActions_1;
var DynamicPageHeaderActions = DynamicPageHeaderActions_1 = class DynamicPageHeaderActions2 extends UI5Element_default {
  constructor() {
    super(...arguments);
    this.pinned = false;
    this.hidePinButton = false;
    this.snapped = false;
    this.accessibilityAttributes = {};
  }
  get arrowButtonIcon() {
    return this.snapped ? "slim-arrow-down" : "slim-arrow-up";
  }
  get pinButtonIcon() {
    if (isLegacyThemeFamily()) {
      return "pushpin-off";
    }
    return this.pinned ? "pushpin-on" : "pushpin-off";
  }
  get expandButton() {
    return this.shadowRoot.querySelector(".ui5-dynamic-page-header-action-expand");
  }
  get pinButton() {
    return this.shadowRoot.querySelector(".ui5-dynamic-page-header-action-pin");
  }
  get pinLabel() {
    return DynamicPageHeaderActions_1.i18nBundle.getText(DYNAMIC_PAGE_ARIA_LABEL_PIN_HEADER);
  }
  get expandLabel() {
    return this.snapped ? DynamicPageHeaderActions_1.i18nBundle.getText(DYNAMIC_PAGE_ARIA_LABEL_EXPAND_HEADER) : DynamicPageHeaderActions_1.i18nBundle.getText(DYNAMIC_PAGE_ARIA_LABEL_SNAP_HEADER);
  }
  focusExpandButton() {
    var _a;
    (_a = this.expandButton) == null ? void 0 : _a.focus();
  }
  focusPinButton() {
    var _a;
    (_a = this.pinButton) == null ? void 0 : _a.focus();
  }
  onExpandClick() {
    this.fireDecoratorEvent("expand-button-click");
  }
  onPinClick() {
    this.fireDecoratorEvent("pin-button-click");
  }
  onExpandHoverIn() {
    this.fireDecoratorEvent("expand-button-hover-in");
  }
  onExpandHoverOut() {
    this.fireDecoratorEvent("expand-button-hover-out");
  }
  get showPinButton() {
    return !this.hidePinButton && !this.snapped;
  }
};
__decorate41([
  property_default({ type: Boolean })
], DynamicPageHeaderActions.prototype, "pinned", void 0);
__decorate41([
  property_default({ type: Boolean })
], DynamicPageHeaderActions.prototype, "hidePinButton", void 0);
__decorate41([
  property_default({ type: Boolean })
], DynamicPageHeaderActions.prototype, "snapped", void 0);
__decorate41([
  property_default({ type: Object })
], DynamicPageHeaderActions.prototype, "accessibilityAttributes", void 0);
__decorate41([
  i18n_default("@ui5/webcomponents-fiori")
], DynamicPageHeaderActions, "i18nBundle", void 0);
DynamicPageHeaderActions = DynamicPageHeaderActions_1 = __decorate41([
  customElement_default({
    tag: "ui5-dynamic-page-header-actions",
    renderer: JsxRenderer_default,
    styles: DynamicPageHeaderActions_css_default,
    template: DynamicPageHeaderActionsTemplate
  }),
  event_strict_default("expand-button-click", {
    bubbles: true
  }),
  event_strict_default("pin-button-click", {
    bubbles: true
  }),
  event_strict_default("expand-button-hover-in", {
    bubbles: true
  }),
  event_strict_default("expand-button-hover-out", {
    bubbles: true
  })
], DynamicPageHeaderActions);
DynamicPageHeaderActions.define();
var DynamicPageHeaderActions_default = DynamicPageHeaderActions;

// node_modules/@ui5/webcomponents-fiori/dist/DynamicPageTemplate.js
function DynamicPageTemplate() {
  return jsxs("div", { class: "ui5-dynamic-page-root", children: [jsxs("div", { class: "ui5-dynamic-page-scroll-container", onScroll: this.snapOnScroll, children: [jsxs("header", { class: "ui5-dynamic-page-title-header-wrapper", id: `${this._id}-header`, "aria-label": this._headerLabel, "aria-expanded": this._headerExpanded, "onui5-toggle-title": this.onToggleTitle, children: [jsx("slot", { name: "titleArea" }), this.headerInTitle && jsx("slot", { tabIndex: this.headerTabIndex, "aria-hidden": this.headerAriaHidden, name: "headerArea" }), this.actionsInTitle && headerActions.call(this)] }), this.headerInContent && jsx("slot", { tabIndex: this.headerTabIndex, "aria-hidden": this.headerAriaHidden, name: "headerArea" }), !this.actionsInTitle && headerActions.call(this), jsx("div", { class: "ui5-dynamic-page-content", part: "content", children: jsxs("div", { class: "ui5-dynamic-page-fit-content", part: "fit-content", children: [jsx("slot", {}), this.showFooter && jsx("div", { class: "ui5-dynamic-page-spacer" })] }) })] }), jsx("div", { class: "ui5-dynamic-page-footer", part: "footer", children: jsx("slot", { name: "footerArea" }) })] });
}
function headerActions() {
  if (!this.hasSnappedTitleOnMobile && this.hasHeading) {
    return jsx(DynamicPageHeaderActions_default, { snapped: this.headerSnapped, pinned: this.headerPinned, hidePinButton: this.hidePinButton, accessibilityAttributes: this._accAttributesForHeaderActions, "onui5-expand-button-click": this.onExpandClick, "onui5-pin-button-click": this.onPinClick, "onui5-expand-button-hover-in": this.onExpandHoverIn, "onui5-expand-button-hover-out": this.onExpandHoverOut });
  }
}

// node_modules/@ui5/webcomponents-fiori/dist/generated/themes/DynamicPage.css.js
registerThemePropertiesLoader("@ui5/webcomponents-theming", "sap_horizon", async () => parameters_bundle_css_default);
registerThemePropertiesLoader("@ui5/webcomponents-fiori", "sap_horizon", async () => parameters_bundle_css_default3);
var DynamicPage_css_default = `.ui5-dynamic-page-title-header-wrapper{position:sticky;top:0;z-index:98}:host{display:block;height:100%;background-color:var(--ui5-v2-8-0_dynamic_page_background)}.ui5-dynamic-page-root{container-type:size;height:inherit;overflow-y:hidden}.ui5-dynamic-page-scroll-container{overflow-y:auto;height:100%}.ui5-dynamic-page-scroll-container{display:flex;flex-direction:column}.ui5-dynamic-page-content{flex-grow:1;position:relative}.ui5-dynamic-page-fit-content{position:absolute;inset:0}.ui5-dynamic-page-footer{position:sticky;bottom:.5rem;box-sizing:border-box;z-index:110;opacity:0;transform:translateY(100%);transition:opacity .35s ease-in-out,transform .35s ease-in-out}.ui5-dynamic-page-spacer{height:var(--_ui5-v2-8-0_dynamic_page_footer_spacer)}:host([show-footer]) .ui5-dynamic-page-fit-content{bottom:var(--_ui5-v2-8-0_dynamic_page_footer_spacer)}:host([show-footer]) .ui5-dynamic-page-footer{transform:translateY(0);opacity:1}::slotted([slot="footerArea"]){border-radius:.25rem;background-color:var(--_ui5-v2-8-0_dynamic_page_header_background_color);box-sizing:content-box;width:auto;margin:0 .5rem .5rem}::slotted([slot="titleArea"]){width:auto}@container (max-width: 599px){.ui5-dynamic-page-fit-content{padding:var(--_ui5-v2-8-0_dynamic_page_content_padding_S)}::slotted([slot="titleArea"]){padding:var(--_ui5-v2-8-0_dynamic_page_title_padding_S)}::slotted([slot="headerArea"]){padding:var(--_ui5-v2-8-0_dynamic_page_header_padding_S)}}@container (min-width: 600px) and (max-width: 1023px){.ui5-dynamic-page-fit-content{padding:var(--_ui5-v2-8-0_dynamic_page_content_padding_M)}::slotted([slot="titleArea"]){padding:var(--_ui5-v2-8-0_dynamic_page_title_padding_M)}::slotted([slot="headerArea"]){padding:var(--_ui5-v2-8-0_dynamic_page_header_padding_M)}}@container (min-width: 1024px) and (max-width: 1439px){.ui5-dynamic-page-fit-content{padding:var(--_ui5-v2-8-0_dynamic_page_content_padding_L)}::slotted([slot="titleArea"]){padding:var(--_ui5-v2-8-0_dynamic_page_title_padding_L)}::slotted([slot="headerArea"]){padding:var(--_ui5-v2-8-0_dynamic_page_header_padding_L)}}@container (min-width: 1440px){.ui5-dynamic-page-fit-content{padding:var(--_ui5-v2-8-0_dynamic_page_content_padding_XL)}::slotted([slot="titleArea"]){padding:var(--_ui5-v2-8-0_dynamic_page_title_padding_XL)}::slotted([slot="headerArea"]){padding:var(--_ui5-v2-8-0_dynamic_page_header_padding_XL)}}
`;

// node_modules/@ui5/webcomponents-fiori/dist/DynamicPageHeaderTemplate.js
function DynamicPageHeaderTemplate() {
  return jsx("div", { class: "ui5-dynamic-page-header-root", role: "region", children: jsx("slot", {}) });
}

// node_modules/@ui5/webcomponents-fiori/dist/generated/themes/DynamicPageHeader.css.js
registerThemePropertiesLoader("@ui5/webcomponents-theming", "sap_horizon", async () => parameters_bundle_css_default);
registerThemePropertiesLoader("@ui5/webcomponents-fiori", "sap_horizon", async () => parameters_bundle_css_default3);
var DynamicPageHeader_css_default = `:host{background-color:var(--_ui5-v2-8-0_dynamic_page_header_background_color);display:block;box-shadow:var(--_ui5-v2-8-0_dynamic_page_header-box-shadow)}.ui5-dynamic-page-header-root{background:inherit}
`;

// node_modules/@ui5/webcomponents-fiori/dist/DynamicPageHeader.js
var __decorate42 = function(decorators, target, key, desc) {
  var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
  if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
  else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
  return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var DynamicPageHeader = class DynamicPageHeader2 extends UI5Element_default {
};
__decorate42([
  slot_default({ "default": true, type: HTMLElement })
], DynamicPageHeader.prototype, "content", void 0);
DynamicPageHeader = __decorate42([
  customElement_default({
    tag: "ui5-dynamic-page-header",
    renderer: JsxRenderer_default,
    styles: DynamicPageHeader_css_default,
    template: DynamicPageHeaderTemplate
  })
], DynamicPageHeader);
DynamicPageHeader.define();
var DynamicPageHeader_default = DynamicPageHeader;

// node_modules/@ui5/webcomponents/dist/types/ToolbarItemOverflowBehavior.js
var ToolbarItemOverflowBehavior;
(function(ToolbarItemOverflowBehavior2) {
  ToolbarItemOverflowBehavior2["Default"] = "Default";
  ToolbarItemOverflowBehavior2["NeverOverflow"] = "NeverOverflow";
  ToolbarItemOverflowBehavior2["AlwaysOverflow"] = "AlwaysOverflow";
})(ToolbarItemOverflowBehavior || (ToolbarItemOverflowBehavior = {}));
var ToolbarItemOverflowBehavior_default = ToolbarItemOverflowBehavior;

// node_modules/@ui5/webcomponents-fiori/dist/DynamicPageTitleTemplate.js
function DynamicPageTitleTemplate() {
  return jsxs("div", { class: "ui5-dynamic-page-title-root", children: [jsx("span", { class: "ui5-dynamic-page-title-focus-area", "data-sap-focus-ref": true, tabIndex: this._tabIndex, onKeyDown: this._onkeydown, onClick: this.onTitleClick, role: "button", "aria-expanded": this._headerExpanded, "aria-labelledby": this._ariaLabelledBy, "aria-describedby": `${this._id}-toggle-description` }), this.hasSnappedTitleOnMobile ? jsxs("div", { id: `${this._id}-heading`, class: "ui5-dynamic-page--snapped-title-on-mobile", children: [jsx("slot", { name: "snappedTitleOnMobile" }), jsx(Icon_default, { name: slim_arrow_down_default, mode: "Decorative" })] }) : jsxs(Fragment, { children: [jsxs("div", { class: "ui5-dynamic-page-title--top-area", children: [jsx("slot", { name: "breadcrumbs" }), this.mobileNavigationActions && jsx("slot", { name: "navigationBar" })] }), jsxs("div", { class: "ui5-dynamic-page-title--wrapper", "onui5-_min-content-width-change": this.onMinContentWidthChange, children: [jsx("div", { id: `${this._id}-heading`, class: "ui5-dynamic-page-title--heading", children: jsx("slot", { name: this.headingSlotName }) }), this.hasContent && jsx("div", { class: "ui5-dynamic-page-title--content", style: {
    "min-width": this.minContentWidth ? `${this.minContentWidth || 0}px` : void 0
  }, children: jsx("slot", {}) }), jsxs("div", { class: "ui5-dynamic-page-title--actions", style: {
    "min-width": this.minActionsWidth ? `${this.minActionsWidth || 0}px` : void 0
  }, children: [jsx("slot", { name: "actionsBar" }), !this.mobileNavigationActions && jsxs(Fragment, { children: [this._needsSeparator && jsx("div", { class: "ui5-dynamic-page-title--actions-separator" }), jsx("slot", { name: "navigationBar" })] })] })] }), jsx("div", { class: "ui5-dynamic-page-title--subheading", children: jsx("slot", { name: this.subheadingSlotName }) })] }), jsx("span", { id: `${this._id}-toggle-description`, class: "ui5-hidden-text", children: this._ariaDescribedbyText })] });
}

// node_modules/@ui5/webcomponents-fiori/dist/generated/themes/DynamicPageTitle.css.js
registerThemePropertiesLoader("@ui5/webcomponents-theming", "sap_horizon", async () => parameters_bundle_css_default);
registerThemePropertiesLoader("@ui5/webcomponents-fiori", "sap_horizon", async () => parameters_bundle_css_default3);
var DynamicPageTitle_css_default = `.ui5-hidden-text{position:absolute;clip:rect(1px,1px,1px,1px);user-select:none;left:-1000px;top:-1000px;pointer-events:none;font-size:0}:host{display:flex;flex-direction:column;position:relative;width:100%;background-color:var(--_ui5-v2-8-0_dynamic_page_header_background_color);min-height:var(--_ui5-v2-8-0_dynamic_page_title_min_height);word-wrap:break-word;padding-top:var(--_ui5-v2-8-0_dynamic_page_title_padding_top);padding-bottom:var(--_ui5-v2-8-0_dynamic_page_title_padding_bottom);border-bottom:var(--_ui5-v2-8-0_dynamic_page_title_border)}:host(:not([interactive])){box-shadow:var(--_ui5-v2-8-0_dynamic_page_header-box-shadow)}:host .ui5-dynamic-page-title-root{display:inherit;flex-direction:inherit;width:inherit;height:inherit}:host:host([interactive]:hover),:host:host([interactive][hovered]){background-color:var(--_ui5-v2-8-0_dynamic_page_title_hover_background);cursor:pointer;border-bottom:var(--_ui5-v2-8-0_dynamic_page_title_hover_border)}:host([snapped]){box-shadow:var(--sapContent_HeaderShadow)}:host([has-snapped-title-on-mobile]){min-height:var(--_ui5-v2-8-0_dynamic_page_snapped_title_on_mobile_min_height);line-height:var(--_ui5-v2-8-0_dynamic_page_snapped_title_on_mobile_line_height)}::slotted([ui5-breadcrumbs][slot="breadcrumbs"]){padding:var(--_ui5-v2-8-0_dynamic_page_title_breadcrumbs_padding_top) 0 var(--_ui5-v2-8-0_dynamic_page_title_breadcrumbs_padding_bottom) 0}::slotted([ui5-title][slot="heading"]),::slotted([ui5-title][slot="snappedHeading"]){font-family:var(--sapObjectHeader_Title_FontFamily);color:var(--sapObjectHeader_Title_TextColor);padding:var(--_ui5-v2-8-0_dynamic_page_title_heading_padding_top) 0 0 0;margin:var(--_ui5-v2-8-0_dynamic_page_title_heading_margin)}::slotted([ui5-title][slot="heading"]){font-size:var(--sapObjectHeader_Title_FontSize)}::slotted([ui5-title][slot="snappedHeading"]),:host([snapped]) ::slotted([ui5-title][slot="heading"]){font-size:var(--sapObjectHeader_Title_SnappedFontSize);text-overflow:ellipsis}::slotted([slot="content"]),::slotted([slot="snappedSubheading"]){color:var(--sapObjectHeader_Subtitle_TextColor);font-size:var(--sapFontSize);margin-top:var(--_ui5-v2-8-0_dynamic_page_title_subheading_margin_top);min-width:0}::slotted([ui5-tag]){max-width:100%}::slotted([ui5-toolbar][slot="actionsBar"]){padding:0 0 0 1rem}.ui5-dynamic-page-title--wrapper{display:flex}.ui5-dynamic-page-title--heading{flex-shrink:1;min-width:1px}.ui5-dynamic-page--snapped-title-on-mobile{display:flex;justify-content:space-between;align-items:center;pointer-events:none}.ui5-dynamic-page-title--content{padding:.6rem 0 0 1rem;flex-shrink:1.6;min-width:3rem;flex-grow:1;display:flex}.ui5-dynamic-page-title--actions{flex-shrink:1.6;min-width:3rem;flex-grow:1;display:flex}.ui5-dynamic-page-title--actions ::slotted([slot="actionsBar"]){border:none;flex:1}.ui5-dynamic-page-title--actions .ui5-dynamic-page-title--actions-separator{flex:0 1;&:before{content:"";display:inline-block;height:var(--_ui5-v2-8-0_dynamic_page_title_actions_separator_height);width:.0625rem;vertical-align:middle;background:var(--sapToolbar_SeparatorColor);margin:.5rem .5rem 0 .25rem}}::slotted([slot="navigationBar"]){border:none;margin-left:auto;flex:0 1;padding-left:0;padding-right:0}.ui5-dynamic-page-title--top-area ::slotted([slot="navigationBar"]){flex:0 1.6 auto}.ui5-dynamic-page-title--top-area{display:flex;justify-content:space-between;align-items:center}.ui5-dynamic-page-title--subheading{max-width:fit-content;z-index:1}:host([desktop]:focus),.ui5-dynamic-page-title-focus-area:focus-visible{outline:var(--_ui5-v2-8-0_dynamic_page_title_focus_outline);outline-offset:var(--_ui5-v2-8-0_dynamic_page_title_focus_outline_offset)}.ui5-dynamic-page-title-focus-area{outline:none;position:absolute;top:0;left:0;width:100%;height:100%}
`;

// node_modules/@ui5/webcomponents-fiori/dist/DynamicPageTitle.js
var __decorate43 = function(decorators, target, key, desc) {
  var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
  if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
  else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
  return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var DynamicPageTitle_1;
var DynamicPageTitle = DynamicPageTitle_1 = class DynamicPageTitle2 extends UI5Element_default {
  constructor() {
    super();
    this.snapped = false;
    this.mobileNavigationActions = false;
    this.focused = false;
    this.hasSnappedTitleOnMobile = false;
    this.interactive = false;
    this._handleResize = this.handleResize.bind(this);
  }
  onEnterDOM() {
    ResizeHandler_default.register(this, this._handleResize);
    if (isDesktop()) {
      this.setAttribute("desktop", "");
    }
  }
  onExitDOM() {
    ResizeHandler_default.deregister(this, this._handleResize);
  }
  onBeforeRendering() {
    this.prepareLayoutActions();
  }
  get hasContent() {
    return !!this.content.length;
  }
  get headingSlotName() {
    if (!this.snapped) {
      return "heading";
    }
    return "snappedHeading";
  }
  get subheadingSlotName() {
    return !this.snapped ? "subheading" : "snappedSubheading";
  }
  get _tabIndex() {
    return this.interactive ? 0 : void 0;
  }
  get _headerExpanded() {
    return !this.snapped;
  }
  get _ariaDescribedbyText() {
    return DynamicPageTitle_1.i18nBundle.getText(DYNAMIC_PAGE_ARIA_DESCR_TOGGLE_HEADER);
  }
  get _ariaLabelledBy() {
    const hasAnyHeading = this[this.headingSlotName].length;
    if (hasAnyHeading) {
      return `${this._id}-heading`;
    }
  }
  get _needsSeparator() {
    return this.navigationBar.length > 0 && this.actionsBar.length > 0;
  }
  prepareLayoutActions() {
    const navigationBar = this.querySelector("[ui5-toolbar][slot='navigationBar']"), isWideScreen = this.offsetWidth >= 1280;
    if (!navigationBar) {
      return;
    }
    navigationBar.items.forEach((action) => {
      action.overflowPriority = isWideScreen ? ToolbarItemOverflowBehavior_default.NeverOverflow : ToolbarItemOverflowBehavior_default.Default;
    });
  }
  handleResize() {
    this.mobileNavigationActions = this.offsetWidth < 1280;
  }
  onMinContentWidthChange(e) {
    var _a, _b;
    const slotName = (_b = (_a = e.target) == null ? void 0 : _a.assignedSlot) == null ? void 0 : _b.name;
    if (!slotName || slotName === "content") {
      this.minContentWidth = e.detail.minWidth;
    } else if (slotName === "actionsBar") {
      this.minActionsWidth = e.detail.minWidth;
    }
  }
  onTitleClick() {
    this.fireDecoratorEvent("toggle-title");
  }
  _onkeydown(e) {
    if (isEnter(e) || isSpace(e)) {
      e.preventDefault();
      this.fireDecoratorEvent("toggle-title");
    }
  }
};
__decorate43([
  property_default({ type: Boolean })
], DynamicPageTitle.prototype, "snapped", void 0);
__decorate43([
  property_default({ type: Boolean })
], DynamicPageTitle.prototype, "mobileNavigationActions", void 0);
__decorate43([
  property_default({ type: Boolean })
], DynamicPageTitle.prototype, "focused", void 0);
__decorate43([
  property_default({ type: Number })
], DynamicPageTitle.prototype, "minContentWidth", void 0);
__decorate43([
  property_default({ type: Number })
], DynamicPageTitle.prototype, "minActionsWidth", void 0);
__decorate43([
  property_default({ type: Boolean })
], DynamicPageTitle.prototype, "hasSnappedTitleOnMobile", void 0);
__decorate43([
  slot_default({ type: HTMLElement })
], DynamicPageTitle.prototype, "heading", void 0);
__decorate43([
  slot_default({ type: HTMLElement })
], DynamicPageTitle.prototype, "snappedHeading", void 0);
__decorate43([
  slot_default({ type: HTMLElement })
], DynamicPageTitle.prototype, "snappedTitleOnMobile", void 0);
__decorate43([
  slot_default({ type: HTMLElement })
], DynamicPageTitle.prototype, "actionsBar", void 0);
__decorate43([
  slot_default({ type: HTMLElement })
], DynamicPageTitle.prototype, "navigationBar", void 0);
__decorate43([
  slot_default({ "default": true, type: HTMLElement })
], DynamicPageTitle.prototype, "content", void 0);
__decorate43([
  slot_default({ type: HTMLElement })
], DynamicPageTitle.prototype, "subheading", void 0);
__decorate43([
  slot_default({ type: HTMLElement })
], DynamicPageTitle.prototype, "snappedSubheading", void 0);
__decorate43([
  slot_default({ type: HTMLElement })
], DynamicPageTitle.prototype, "breadcrumbs", void 0);
__decorate43([
  property_default({ type: Boolean })
], DynamicPageTitle.prototype, "interactive", void 0);
__decorate43([
  i18n_default("@ui5/webcomponents-fiori")
], DynamicPageTitle, "i18nBundle", void 0);
DynamicPageTitle = DynamicPageTitle_1 = __decorate43([
  customElement_default({
    tag: "ui5-dynamic-page-title",
    fastNavigation: true,
    renderer: JsxRenderer_default,
    styles: DynamicPageTitle_css_default,
    template: DynamicPageTitleTemplate
  }),
  event_strict_default("toggle-title", {
    bubbles: true
  })
], DynamicPageTitle);
DynamicPageTitle.define();
var DynamicPageTitle_default = DynamicPageTitle;

// node_modules/@ui5/webcomponents-fiori/dist/DynamicPage.js
var __decorate44 = function(decorators, target, key, desc) {
  var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
  if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
  else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
  return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var DynamicPage_1;
var SCROLL_DEBOUNCE_RATE = 5;
var SCROLL_THRESHOLD = 10;
var DynamicPage = DynamicPage_1 = class DynamicPage2 extends UI5Element_default {
  constructor() {
    super();
    this.hidePinButton = false;
    this.headerPinned = false;
    this.showFooter = false;
    this.skipSnapOnScroll = false;
    this.showHeaderInStickArea = false;
    this.isToggled = false;
    this._headerSnapped = false;
  }
  onBeforeRendering() {
    if (this.dynamicPageTitle) {
      this.dynamicPageTitle.snapped = this._headerSnapped;
      this.dynamicPageTitle.interactive = this.hasHeading;
      this.dynamicPageTitle.hasSnappedTitleOnMobile = !!this.hasSnappedTitleOnMobile;
      this.dynamicPageTitle.removeAttribute("hovered");
    }
  }
  get dynamicPageTitle() {
    return this.querySelector("[ui5-dynamic-page-title]");
  }
  get dynamicPageHeader() {
    return this.querySelector("[ui5-dynamic-page-header]");
  }
  get actionsInTitle() {
    return this._headerSnapped || this.showHeaderInStickArea || this.headerPinned;
  }
  get headerInTitle() {
    return !this._headerSnapped && (this.showHeaderInStickArea || this.headerPinned);
  }
  get headerInContent() {
    return !this.showHeaderInStickArea && !this.headerInTitle && !this.hasSnappedTitleOnMobile;
  }
  get _headerLabel() {
    return this._headerSnapped ? DynamicPage_1.i18nBundle.getText(DYNAMIC_PAGE_ARIA_LABEL_SNAPPED_HEADER) : DynamicPage_1.i18nBundle.getText(DYNAMIC_PAGE_ARIA_LABEL_EXPANDED_HEADER);
  }
  get _headerExpanded() {
    return !this._headerSnapped;
  }
  get _accAttributesForHeaderActions() {
    return {
      controls: `${this._id}-header`
    };
  }
  get headerTabIndex() {
    return this._headerSnapped || this.showHeaderInStickArea ? -1 : 0;
  }
  get headerAriaHidden() {
    return this._headerSnapped || this.showHeaderInStickArea;
  }
  get hasHeading() {
    return this.headerArea.length > 0;
  }
  get headerSnapped() {
    return this._headerSnapped;
  }
  get hasSnappedTitleOnMobile() {
    var _a;
    return isPhone() && this.headerSnapped && ((_a = this.dynamicPageTitle) == null ? void 0 : _a.snappedTitleOnMobile.length);
  }
  /**
   * Defines if the header is snapped.
   *
   * @default false
   * @public
   */
  set headerSnapped(snapped) {
    if (snapped !== this._headerSnapped) {
      this._toggleHeader();
    }
  }
  snapOnScroll() {
    debounce_default(() => this.snapTitleByScroll(), SCROLL_DEBOUNCE_RATE);
  }
  snapTitleByScroll() {
    if (!this.dynamicPageTitle || !this.dynamicPageHeader || this.headerPinned) {
      return;
    }
    if (this.isToggled) {
      this.isToggled = false;
      return;
    }
    if (this.skipSnapOnScroll) {
      this.skipSnapOnScroll = false;
      return;
    }
    const scrollTop = this.scrollContainer.scrollTop;
    const headerHeight = this.dynamicPageHeader.getBoundingClientRect().height;
    const lastHeaderSnapped = this._headerSnapped;
    if (this._headerSnapped && scrollTop > headerHeight) {
      this.showHeaderInStickArea = false;
    }
    const shouldSnap = !this._headerSnapped && scrollTop > headerHeight + SCROLL_THRESHOLD;
    const shouldExpand = this._headerSnapped && (scrollTop < headerHeight - SCROLL_THRESHOLD || !scrollTop && !headerHeight);
    if (shouldSnap) {
      this.showHeaderInStickArea = false;
      this._headerSnapped = true;
      requestAnimationFrame(() => {
        if (this.scrollContainer.scrollTop === 0) {
          this.scrollContainer.scrollTop = SCROLL_THRESHOLD;
        }
      });
    } else if (shouldExpand) {
      this._headerSnapped = false;
    }
    if (lastHeaderSnapped !== this._headerSnapped) {
      this.fireDecoratorEvent("title-toggle");
    }
  }
  async onExpandClick() {
    var _a, _b;
    this.isToggled = true;
    this._toggleHeader();
    this.fireDecoratorEvent("title-toggle");
    await renderFinished();
    (_a = this.headerActions) == null ? void 0 : _a.focusExpandButton();
    if (this.hasSnappedTitleOnMobile) {
      (_b = this.dynamicPageTitle) == null ? void 0 : _b.focus();
    }
    InvisibleMessage_default(this._headerLabel, InvisibleMessageMode_default.Polite);
  }
  async onPinClick() {
    var _a;
    this.headerPinned = !this.headerPinned;
    if (this.headerPinned) {
      this.showHeaderInStickArea = true;
    }
    this.fireDecoratorEvent("pin-button-toggle");
    await renderFinished();
    (_a = this.headerActions) == null ? void 0 : _a.focusPinButton();
  }
  async onToggleTitle() {
    if (!this.hasHeading) {
      return;
    }
    this.isToggled = true;
    this._toggleHeader();
    this.fireDecoratorEvent("title-toggle");
    await renderFinished();
    this.dynamicPageTitle.focus();
  }
  async _toggleHeader() {
    var _a;
    const headerHeight = ((_a = this.dynamicPageHeader) == null ? void 0 : _a.getBoundingClientRect().height) || 0;
    const currentScrollTop = this.scrollContainer.scrollTop;
    if (currentScrollTop > SCROLL_THRESHOLD && currentScrollTop < headerHeight) {
      if (!this._headerSnapped) {
        this._headerSnapped = true;
        this.showHeaderInStickArea = true;
        this.scrollContainer.scrollTop = 0;
      } else {
        this.showHeaderInStickArea = false;
        this._headerSnapped = false;
      }
      return;
    }
    if (this.scrollContainer.scrollTop === SCROLL_THRESHOLD) {
      this.scrollContainer.scrollTop = 0;
    }
    this.showHeaderInStickArea = !this.showHeaderInStickArea;
    this._headerSnapped = !this._headerSnapped;
    this.skipSnapOnScroll = true;
    await renderFinished();
    if (this._headerSnapped && this.scrollContainer.scrollTop < SCROLL_THRESHOLD) {
      this.scrollContainer.scrollTop = SCROLL_THRESHOLD;
    }
  }
  async onExpandHoverIn() {
    var _a;
    (_a = this.dynamicPageTitle) == null ? void 0 : _a.setAttribute("hovered", "");
    await renderFinished();
  }
  async onExpandHoverOut() {
    var _a;
    (_a = this.dynamicPageTitle) == null ? void 0 : _a.removeAttribute("hovered");
    await renderFinished();
  }
};
__decorate44([
  property_default({ type: Boolean })
], DynamicPage.prototype, "hidePinButton", void 0);
__decorate44([
  property_default({ type: Boolean })
], DynamicPage.prototype, "headerPinned", void 0);
__decorate44([
  property_default({ type: Boolean })
], DynamicPage.prototype, "showFooter", void 0);
__decorate44([
  slot_default({ "default": true, type: HTMLElement })
], DynamicPage.prototype, "content", void 0);
__decorate44([
  slot_default({ type: DynamicPageTitle_default })
], DynamicPage.prototype, "titleArea", void 0);
__decorate44([
  slot_default({ type: DynamicPageHeader_default })
], DynamicPage.prototype, "headerArea", void 0);
__decorate44([
  slot_default({ type: HTMLElement })
], DynamicPage.prototype, "footerArea", void 0);
__decorate44([
  property_default({ type: Boolean })
], DynamicPage.prototype, "_headerSnapped", void 0);
__decorate44([
  query_default(".ui5-dynamic-page-scroll-container")
], DynamicPage.prototype, "scrollContainer", void 0);
__decorate44([
  query_default("[ui5-dynamic-page-header-actions]")
], DynamicPage.prototype, "headerActions", void 0);
__decorate44([
  property_default({ type: Boolean })
], DynamicPage.prototype, "headerSnapped", null);
__decorate44([
  i18n_default("@ui5/webcomponents-fiori")
], DynamicPage, "i18nBundle", void 0);
DynamicPage = DynamicPage_1 = __decorate44([
  customElement_default({
    tag: "ui5-dynamic-page",
    renderer: JsxRenderer_default,
    styles: DynamicPage_css_default,
    template: DynamicPageTemplate
  }),
  event_strict_default("pin-button-toggle", {
    bubbles: true
  }),
  event_strict_default("title-toggle", {
    bubbles: true
  })
], DynamicPage);
DynamicPage.define();

// node_modules/@ui5/webcomponents-react/dist/webComponents/DynamicPage/index.js
var DynamicPage3 = withWebComponent("ui5-dynamic-page", [], ["headerPinned", "headerSnapped", "hidePinButton", "showFooter"], ["footerArea", "headerArea", "titleArea"], ["pin-button-toggle", "title-toggle"]);
DynamicPage3.displayName = "DynamicPage";

// node_modules/@ui5/webcomponents-react/dist/webComponents/DynamicPageHeader/index.js
var DynamicPageHeader3 = withWebComponent("ui5-dynamic-page-header", [], [], [], []);
DynamicPageHeader3.displayName = "DynamicPageHeader";

// node_modules/@ui5/webcomponents-react/dist/webComponents/DynamicPageTitle/index.js
var DynamicPageTitle3 = withWebComponent("ui5-dynamic-page-title", [], [], ["actionsBar", "breadcrumbs", "heading", "navigationBar", "snappedHeading", "snappedSubheading", "snappedTitleOnMobile", "subheading"], []);
DynamicPageTitle3.displayName = "DynamicPageTitle";

// node_modules/@ui5/webcomponents-fiori/dist/types/SideContentPosition.js
var SideContentPosition;
(function(SideContentPosition2) {
  SideContentPosition2["End"] = "End";
  SideContentPosition2["Start"] = "Start";
})(SideContentPosition || (SideContentPosition = {}));
var SideContentPosition_default = SideContentPosition;

// node_modules/@ui5/webcomponents-fiori/dist/types/SideContentVisibility.js
var SideContentVisibility;
(function(SideContentVisibility2) {
  SideContentVisibility2["AlwaysShow"] = "AlwaysShow";
  SideContentVisibility2["ShowAboveL"] = "ShowAboveL";
  SideContentVisibility2["ShowAboveM"] = "ShowAboveM";
  SideContentVisibility2["ShowAboveS"] = "ShowAboveS";
  SideContentVisibility2["NeverShow"] = "NeverShow";
})(SideContentVisibility || (SideContentVisibility = {}));
var SideContentVisibility_default = SideContentVisibility;

// node_modules/@ui5/webcomponents-fiori/dist/types/SideContentFallDown.js
var SideContentFallDown;
(function(SideContentFallDown2) {
  SideContentFallDown2["BelowXL"] = "BelowXL";
  SideContentFallDown2["BelowL"] = "BelowL";
  SideContentFallDown2["BelowM"] = "BelowM";
  SideContentFallDown2["OnMinimumWidth"] = "OnMinimumWidth";
})(SideContentFallDown || (SideContentFallDown = {}));
var SideContentFallDown_default = SideContentFallDown;

// node_modules/@ui5/webcomponents-fiori/dist/DynamicSideContentTemplate.js
function DynamicSideContentTemplate() {
  return jsx("div", { class: "ui5-dsc-root", style: this.styles.root, children: this._isSideContentFirst ? jsxs(Fragment, { children: [sideContent.call(this), mainContent.call(this)] }) : jsxs(Fragment, { children: [mainContent.call(this), sideContent.call(this)] }) });
}
function mainContent() {
  var _a;
  return jsx("div", { role: "main", "aria-label": (_a = this.accInfo.mainContent) == null ? void 0 : _a.ariaLabel, class: this.classes.main, style: this.styles.main, children: jsx("slot", {}) });
}
function sideContent() {
  var _a;
  return jsx("aside", { role: "complementary", "aria-label": (_a = this.accInfo.sideContent) == null ? void 0 : _a.ariaLabel, class: this.classes.side, style: this.styles.side, children: jsx("slot", { name: "sideContent" }) });
}

// node_modules/@ui5/webcomponents-fiori/dist/generated/themes/DynamicSideContent.css.js
registerThemePropertiesLoader("@ui5/webcomponents-theming", "sap_horizon", async () => parameters_bundle_css_default);
registerThemePropertiesLoader("@ui5/webcomponents-fiori", "sap_horizon", async () => parameters_bundle_css_default3);
var DynamicSideContent_css_default = `:host{display:block;width:100%;height:100%;position:relative}.ui5-dsc-root{width:100%;height:100%;position:relative;overflow-x:hidden;overflow-y:auto;display:flex}.ui5-dsc-main,.ui5-dsc-side{display:inline;position:relative;overflow-x:hidden;overflow-y:auto;box-sizing:border-box;flex:none}.ui5-dsc-root>div[class^=ui5-dcs-span],.ui5-dsc-root>aside[class^=ui5-dsc-span]{overflow:auto}.ui5-dsc-main.ui5-dsc-span-fixed{width:calc(100% - 21.25rem)}.ui5-dsc-side.ui5-dsc-span-fixed{width:21.25rem}.ui5-dsc-root>.ui5-dsc-span-0{display:none}.ui5-dsc-root>.ui5-dsc-span-3{width:25%}.ui5-dsc-root>.ui5-dsc-span-4{width:33.333%}.ui5-dsc-root>.ui5-dsc-span-6{width:50%}.ui5-dsc-root>.ui5-dsc-span-8{width:66.666%}.ui5-dsc-root>.ui5-dsc-span-9{width:75%}.ui5-dsc-root>.ui5-dsc-span-12{width:100%}
`;

// node_modules/@ui5/webcomponents-fiori/dist/DynamicSideContent.js
var __decorate45 = function(decorators, target, key, desc) {
  var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
  if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
  else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
  return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var DynamicSideContent_1;
var S_M_BREAKPOINT = 720;
var M_L_BREAKPOINT = 1024;
var L_XL_BREAKPOINT = 1440;
var MINIMUM_WIDTH_BREAKPOINT = 960;
var DynamicSideContent = DynamicSideContent_1 = class DynamicSideContent2 extends UI5Element_default {
  constructor() {
    super();
    this.hideMainContent = false;
    this.hideSideContent = false;
    this.sideContentPosition = "End";
    this.sideContentVisibility = "ShowAboveS";
    this.sideContentFallDown = "OnMinimumWidth";
    this.equalSplit = false;
    this.accessibilityAttributes = {};
    this._mcSpan = "0";
    this._scSpan = "0";
    this._toggled = false;
    this._handleResizeBound = this.handleResize.bind(this);
  }
  onAfterRendering() {
    this._resizeContents();
  }
  onEnterDOM() {
    ResizeHandler_default.register(this, this._handleResizeBound);
  }
  onExitDOM() {
    ResizeHandler_default.deregister(this, this._handleResizeBound);
  }
  /**
   * Toggles visibility of main and side contents on S screen size (mobile device).
   * @public
   */
  toggleContents() {
    if (this.breakpoint === this.sizeS && this.sideContentVisibility !== SideContentVisibility_default.AlwaysShow) {
      this._toggled = !this._toggled;
    }
  }
  get classes() {
    const gridPrefix = "ui5-dsc-span", mcSpan = this._toggled ? this._scSpan : this._mcSpan, scSpan = this._toggled ? this._mcSpan : this._scSpan;
    return {
      main: {
        "ui5-dsc-main": true,
        [`${gridPrefix}-${mcSpan}`]: true
      },
      side: {
        "ui5-dsc-side": true,
        [`${gridPrefix}-${scSpan}`]: true
      }
    };
  }
  get styles() {
    const isToggled = this.breakpoint === this.sizeS && this._toggled, mcSpan = isToggled ? this._scSpan : this._mcSpan, scSpan = isToggled ? this._mcSpan : this._scSpan, contentHeight = this.breakpoint === this.sizeS && this.sideContentVisibility !== SideContentVisibility_default.AlwaysShow ? "100%" : "auto";
    return {
      root: {
        "flex-wrap": this._mcSpan === "12" ? "wrap" : "nowrap"
      },
      main: {
        "height": mcSpan === this.span12 ? contentHeight : "100%"
      },
      side: {
        "height": scSpan === this.span12 ? contentHeight : "100%"
      }
    };
  }
  get accInfo() {
    var _a, _b;
    return {
      mainContent: {
        ariaLabel: ((_a = this.accessibilityAttributes.mainContent) == null ? void 0 : _a.ariaLabel) || DynamicSideContent_1.i18nBundle.getText(DSC_MAIN_ARIA_LABEL)
      },
      sideContent: {
        ariaLabel: ((_b = this.accessibilityAttributes.sideContent) == null ? void 0 : _b.ariaLabel) || DynamicSideContent_1.i18nBundle.getText(DSC_SIDE_ARIA_LABEL)
      }
    };
  }
  get sizeS() {
    return "S";
  }
  get sizeM() {
    return "M";
  }
  get sizeL() {
    return "L";
  }
  get sizeXL() {
    return "XL";
  }
  get span0() {
    return "0";
  }
  get span3() {
    return "3";
  }
  get span4() {
    return "4";
  }
  get span6() {
    return "6";
  }
  get span8() {
    return "8";
  }
  get span9() {
    return "9";
  }
  get span12() {
    return "12";
  }
  get spanFixed() {
    return "fixed";
  }
  get containerWidth() {
    return this.parentElement.getBoundingClientRect().width;
  }
  get breakpoint() {
    let size;
    if (this.containerWidth <= S_M_BREAKPOINT) {
      size = this.sizeS;
    } else if (this.containerWidth > S_M_BREAKPOINT && this.containerWidth <= M_L_BREAKPOINT) {
      size = this.sizeM;
    } else if (this.containerWidth > M_L_BREAKPOINT && this.containerWidth <= L_XL_BREAKPOINT) {
      size = this.sizeL;
    } else {
      size = this.sizeXL;
    }
    return size;
  }
  get _isSideContentFirst() {
    return this.sideContentPosition === SideContentPosition_default.Start;
  }
  handleResize() {
    this._resizeContents();
  }
  _resizeContents() {
    let mainSize, sideSize, sideVisible = false;
    switch (this.breakpoint) {
      case this.sizeS:
        mainSize = this.span12;
        sideSize = this.span12;
        break;
      case this.sizeM:
        if (this.sideContentFallDown === SideContentFallDown_default.BelowXL || this.sideContentFallDown === SideContentFallDown_default.BelowL || this.containerWidth <= MINIMUM_WIDTH_BREAKPOINT && this.sideContentFallDown === SideContentFallDown_default.OnMinimumWidth) {
          mainSize = this.span12;
          sideSize = this.span12;
        } else {
          mainSize = this.equalSplit ? this.span6 : this.spanFixed;
          sideSize = this.equalSplit ? this.span6 : this.spanFixed;
        }
        sideVisible = this.sideContentVisibility === SideContentVisibility_default.ShowAboveS || this.sideContentVisibility === SideContentVisibility_default.AlwaysShow;
        break;
      case this.sizeL:
        if (this.sideContentFallDown === SideContentFallDown_default.BelowXL) {
          mainSize = this.span12;
          sideSize = this.span12;
        } else {
          mainSize = this.equalSplit ? this.span6 : this.span8;
          sideSize = this.equalSplit ? this.span6 : this.span4;
        }
        sideVisible = this.sideContentVisibility === SideContentVisibility_default.ShowAboveS || this.sideContentVisibility === SideContentVisibility_default.ShowAboveM || this.sideContentVisibility === SideContentVisibility_default.AlwaysShow;
        break;
      case this.sizeXL:
        mainSize = this.equalSplit ? this.span6 : this.span9;
        sideSize = this.equalSplit ? this.span6 : this.span3;
        sideVisible = this.sideContentVisibility !== SideContentVisibility_default.NeverShow;
    }
    if (this.sideContentVisibility === SideContentVisibility_default.AlwaysShow) {
      sideVisible = true;
    }
    if (this.hideSideContent) {
      mainSize = this.hideMainContent ? this.span0 : this.span12;
      sideSize = this.span0;
      sideVisible = false;
    }
    if (this.hideMainContent) {
      mainSize = this.span0;
      sideSize = this.hideSideContent ? this.span0 : this.span12;
      sideVisible = true;
    }
    if (!sideVisible) {
      mainSize = this.span12;
      sideSize = this.span0;
    }
    if (this._currentBreakpoint !== this.breakpoint) {
      const eventParams = {
        currentBreakpoint: this.breakpoint,
        previousBreakpoint: this._currentBreakpoint,
        mainContentVisible: mainSize !== this.span0,
        sideContentVisible: sideSize !== this.span0
      };
      this.fireDecoratorEvent("layout-change", eventParams);
      this._currentBreakpoint = this.breakpoint;
    }
    this._setSpanSizes(mainSize, sideSize);
  }
  _setSpanSizes(mainSize, sideSize) {
    this._mcSpan = mainSize;
    this._scSpan = sideSize;
    if (this.breakpoint !== this.sizeS) {
      this._toggled = false;
    }
  }
};
__decorate45([
  property_default({ type: Boolean })
], DynamicSideContent.prototype, "hideMainContent", void 0);
__decorate45([
  property_default({ type: Boolean })
], DynamicSideContent.prototype, "hideSideContent", void 0);
__decorate45([
  property_default()
], DynamicSideContent.prototype, "sideContentPosition", void 0);
__decorate45([
  property_default()
], DynamicSideContent.prototype, "sideContentVisibility", void 0);
__decorate45([
  property_default()
], DynamicSideContent.prototype, "sideContentFallDown", void 0);
__decorate45([
  property_default({ type: Boolean })
], DynamicSideContent.prototype, "equalSplit", void 0);
__decorate45([
  property_default({ type: Object })
], DynamicSideContent.prototype, "accessibilityAttributes", void 0);
__decorate45([
  property_default({ noAttribute: true })
], DynamicSideContent.prototype, "_mcSpan", void 0);
__decorate45([
  property_default({ noAttribute: true })
], DynamicSideContent.prototype, "_scSpan", void 0);
__decorate45([
  property_default({ type: Boolean, noAttribute: true })
], DynamicSideContent.prototype, "_toggled", void 0);
__decorate45([
  property_default({ noAttribute: true })
], DynamicSideContent.prototype, "_currentBreakpoint", void 0);
__decorate45([
  slot_default()
], DynamicSideContent.prototype, "sideContent", void 0);
__decorate45([
  i18n_default("@ui5/webcomponents-fiori")
], DynamicSideContent, "i18nBundle", void 0);
DynamicSideContent = DynamicSideContent_1 = __decorate45([
  customElement_default({
    tag: "ui5-dynamic-side-content",
    renderer: JsxRenderer_default,
    styles: [DynamicSideContent_css_default, getEffectiveScrollbarStyle_default()],
    template: DynamicSideContentTemplate
  }),
  event_strict_default("layout-change", {
    bubbles: true
  })
], DynamicSideContent);
DynamicSideContent.define();

// node_modules/@ui5/webcomponents-react/dist/webComponents/DynamicSideContent/index.js
var DynamicSideContent3 = withWebComponent("ui5-dynamic-side-content", ["accessibilityAttributes", "sideContentFallDown", "sideContentPosition", "sideContentVisibility"], ["equalSplit", "hideMainContent", "hideSideContent"], ["sideContent"], ["layout-change"]);
DynamicSideContent3.displayName = "DynamicSideContent";

// node_modules/@ui5/webcomponents/dist/types/ExpandableTextOverflowMode.js
var ExpandableTextOverflowMode;
(function(ExpandableTextOverflowMode2) {
  ExpandableTextOverflowMode2["InPlace"] = "InPlace";
  ExpandableTextOverflowMode2["Popover"] = "Popover";
})(ExpandableTextOverflowMode || (ExpandableTextOverflowMode = {}));
var ExpandableTextOverflowMode_default = ExpandableTextOverflowMode;

// node_modules/@ui5/webcomponents/dist/types/TextEmptyIndicatorMode.js
var TextEmptyIndicatorMode;
(function(TextEmptyIndicatorMode2) {
  TextEmptyIndicatorMode2["Off"] = "Off";
  TextEmptyIndicatorMode2["On"] = "On";
})(TextEmptyIndicatorMode || (TextEmptyIndicatorMode = {}));
var TextEmptyIndicatorMode_default = TextEmptyIndicatorMode;

// node_modules/@ui5/webcomponents/dist/TextTemplate.js
function TextTemplate() {
  return jsx(Fragment, { children: jsx("span", { children: this._renderEmptyIndicator ? jsxs(Fragment, { children: [jsx("span", { className: "empty-indicator", "aria-hidden": "true", children: this._emptyIndicatorSymbol }), jsx("span", { className: "empty-indicator-aria-label", children: this._emptyIndicatorAriaLabel })] }) : jsx("slot", {}) }) });
}

// node_modules/@ui5/webcomponents/dist/generated/themes/Text.css.js
registerThemePropertiesLoader("@ui5/webcomponents-theming", "sap_horizon", async () => parameters_bundle_css_default);
registerThemePropertiesLoader("@ui5/webcomponents", "sap_horizon", async () => parameters_bundle_css_default2);
var Text_css_default = `:host{max-width:100%;font-size:var(--sapFontSize);font-family:var(--sapFontFamily);color:var(--sapTextColor);line-height:normal;cursor:text;overflow:hidden}:host([max-lines="1"]){display:inline-block;text-overflow:ellipsis;white-space:nowrap}:host(:not([max-lines="1"])){display:-webkit-box;-webkit-line-clamp:var(--_ui5-v2-8-0_text_max_lines);line-clamp:var(--_ui5-v2-8-0_text_max_lines);-webkit-box-orient:vertical;white-space:normal;word-wrap:break-word}.empty-indicator-aria-label{position:absolute!important;clip:rect(1px,1px,1px,1px);user-select:none;left:0;top:0;font-size:0}
`;

// node_modules/@ui5/webcomponents/dist/Text.js
var __decorate46 = function(decorators, target, key, desc) {
  var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
  if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
  else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
  return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var Text_1;
var Text = Text_1 = class Text2 extends UI5Element_default {
  constructor() {
    super(...arguments);
    this.maxLines = Infinity;
    this.emptyIndicatorMode = "Off";
  }
  onBeforeRendering() {
    this.style.setProperty(getScopedVarName("--_ui5_text_max_lines"), `${this.maxLines}`);
  }
  get hasText() {
    return willShowContent_default(this.text);
  }
  get _renderEmptyIndicator() {
    return !this.hasText && this.emptyIndicatorMode === TextEmptyIndicatorMode_default.On;
  }
  get _emptyIndicatorAriaLabel() {
    return Text_1.i18nBundle.getText(EMPTY_INDICATOR_ACCESSIBLE_TEXT);
  }
  get _emptyIndicatorSymbol() {
    return Text_1.i18nBundle.getText(EMPTY_INDICATOR_SYMBOL);
  }
};
__decorate46([
  property_default({ type: Number })
], Text.prototype, "maxLines", void 0);
__decorate46([
  property_default()
], Text.prototype, "emptyIndicatorMode", void 0);
__decorate46([
  slot_default({ type: Node, "default": true })
], Text.prototype, "text", void 0);
__decorate46([
  i18n_default("@ui5/webcomponents")
], Text, "i18nBundle", void 0);
Text = Text_1 = __decorate46([
  customElement_default({
    tag: "ui5-text",
    renderer: JsxRenderer_default,
    template: TextTemplate,
    styles: Text_css_default
  })
], Text);
Text.define();
var Text_default = Text;

// node_modules/@ui5/webcomponents/dist/ExpandableTextTemplate.js
function ExpandableTextTemplate() {
  return jsxs("div", { children: [jsx(Text_default, { class: "ui5-exp-text-text", emptyIndicatorMode: this.emptyIndicatorMode, children: this._displayedText }), this._maxCharactersExceeded && jsxs(Fragment, { children: [jsx("span", { class: "ui5-exp-text-ellipsis", children: this._ellipsisText }), jsx(Link_default, { id: "toggle", class: "ui5-exp-text-toggle", accessibleRole: "Button", accessibleName: this._accessibleNameForToggle, accessibilityAttributes: this._accessibilityAttributesForToggle, onClick: this._handleToggleClick, children: this._textForToggle }), this._usePopover && jsxs(ResponsivePopover_default, { open: this._expanded, opener: "toggle", accessibleNameRef: "popover-text", contentOnlyOnDesktop: true, _hideHeader: true, class: "ui5-exp-text-popover", onClose: this._handlePopoverClose, children: [jsx(Text_default, { id: "popover-text", children: this.text }), jsx("div", { slot: "footer", class: "ui5-exp-text-footer", children: jsx(Button_default, { design: "Transparent", onClick: this._handleCloseButtonClick, children: this._closeButtonText }) })] })] })] });
}

// node_modules/@ui5/webcomponents/dist/generated/themes/ExpandableText.css.js
registerThemePropertiesLoader("@ui5/webcomponents-theming", "sap_horizon", async () => parameters_bundle_css_default);
registerThemePropertiesLoader("@ui5/webcomponents", "sap_horizon", async () => parameters_bundle_css_default2);
var ExpandableText_css_default = `:host{display:inline-block;font-family:var(--sapFontFamily);font-size:var(--sapFontSize);color:var(--sapTextColor)}:host([hidden]){display:none}.ui5-exp-text-text{display:inline}.ui5-exp-text-text,.ui5-exp-text-toggle{font-family:inherit;font-size:inherit}.ui5-exp-text-text,.ui5-exp-text-ellipsis{color:inherit}.ui5-exp-text-popover::part(content){padding-inline:1rem}.ui5-exp-text-footer{width:100%;display:flex;align-items:center;justify-content:flex-end}
`;

// node_modules/@ui5/webcomponents/dist/ExpandableText.js
var __decorate47 = function(decorators, target, key, desc) {
  var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
  if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
  else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
  return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var ExpandableText_1;
var ExpandableText = ExpandableText_1 = class ExpandableText2 extends UI5Element_default {
  constructor() {
    super(...arguments);
    this.maxCharacters = 100;
    this.overflowMode = "InPlace";
    this.emptyIndicatorMode = "Off";
    this._expanded = false;
  }
  getFocusDomRef() {
    var _a, _b;
    if (this._usePopover) {
      return (_a = this.shadowRoot) == null ? void 0 : _a.querySelector("[ui5-responsive-popover]");
    }
    return (_b = this.shadowRoot) == null ? void 0 : _b.querySelector("[ui5-link]");
  }
  get _displayedText() {
    var _a;
    if (this._expanded && !this._usePopover) {
      return this.text;
    }
    return (_a = this.text) == null ? void 0 : _a.substring(0, this.maxCharacters);
  }
  get _maxCharactersExceeded() {
    var _a;
    return (((_a = this.text) == null ? void 0 : _a.length) || 0) > this.maxCharacters;
  }
  get _usePopover() {
    return this.overflowMode === ExpandableTextOverflowMode_default.Popover;
  }
  get _ellipsisText() {
    if (this._expanded && !this._usePopover) {
      return " ";
    }
    return "... ";
  }
  get _textForToggle() {
    return this._expanded ? ExpandableText_1.i18nBundle.getText(EXPANDABLE_TEXT_SHOW_LESS) : ExpandableText_1.i18nBundle.getText(EXPANDABLE_TEXT_SHOW_MORE);
  }
  get _closeButtonText() {
    return ExpandableText_1.i18nBundle.getText(EXPANDABLE_TEXT_CLOSE);
  }
  get _accessibilityAttributesForToggle() {
    if (this._usePopover) {
      return {
        expanded: this._expanded,
        hasPopup: "dialog"
      };
    }
    return {
      expanded: this._expanded
    };
  }
  get _accessibleNameForToggle() {
    if (this._usePopover) {
      return this._expanded ? ExpandableText_1.i18nBundle.getText(EXPANDABLE_TEXT_SHOW_LESS_POPOVER_ARIA_LABEL) : ExpandableText_1.i18nBundle.getText(EXPANDABLE_TEXT_SHOW_MORE_POPOVER_ARIA_LABEL);
    }
    return void 0;
  }
  _handlePopoverClose() {
    if (!isPhone()) {
      this._expanded = false;
    }
  }
  _handleToggleClick() {
    this._expanded = !this._expanded;
  }
  _handleCloseButtonClick(e) {
    this._expanded = false;
    e.stopPropagation();
  }
};
__decorate47([
  property_default()
], ExpandableText.prototype, "text", void 0);
__decorate47([
  property_default({ type: Number })
], ExpandableText.prototype, "maxCharacters", void 0);
__decorate47([
  property_default()
], ExpandableText.prototype, "overflowMode", void 0);
__decorate47([
  property_default()
], ExpandableText.prototype, "emptyIndicatorMode", void 0);
__decorate47([
  property_default({ type: Boolean })
], ExpandableText.prototype, "_expanded", void 0);
__decorate47([
  i18n_default("@ui5/webcomponents")
], ExpandableText, "i18nBundle", void 0);
ExpandableText = ExpandableText_1 = __decorate47([
  customElement_default({
    tag: "ui5-expandable-text",
    renderer: JsxRenderer_default,
    styles: ExpandableText_css_default,
    template: ExpandableTextTemplate
  })
], ExpandableText);
ExpandableText.define();

// node_modules/@ui5/webcomponents-react/dist/webComponents/ExpandableText/index.js
addCustomCSSWithScoping("ui5-expandable-text", `
:host([data-_render-whitespace]) [ui5-text]{
white-space: pre-wrap;
}`);
var ExpandableText3 = withWebComponent("ui5-expandable-text", ["emptyIndicatorMode", "maxCharacters", "overflowMode", "text"], [], [], []);
ExpandableText3.displayName = "ExpandableText";

// node_modules/@ui5/webcomponents/dist/FileUploaderPopoverTemplate.js
function FileUploaderPopoverTemplate() {
  return jsx(Popover_default, { preventInitialFocus: true, preventFocusRestore: true, hideArrow: true, placement: "Bottom", horizontalAlign: "Start", class: "ui5-valuestatemessage-popover", children: jsxs("div", { slot: "header", class: {
    "ui5-valuestatemessage-root": true,
    "ui5-valuestatemessage--success": this.valueState === ValueState_default.Positive,
    "ui5-valuestatemessage--error": this.valueState === ValueState_default.Negative,
    "ui5-valuestatemessage--warning": this.valueState === ValueState_default.Critical,
    "ui5-valuestatemessage--information": this.valueState === ValueState_default.Information
  }, style: {
    "width": `${this.ui5Input ? this.ui5Input.offsetWidth : 0}px`
  }, children: [this._valueStateMessageInputIcon && jsx(Icon_default, { class: "ui5-input-value-state-message-icon", name: this._valueStateMessageInputIcon }), valueStateMessage2.call(this)] }) });
}
function valueStateMessage2() {
  return jsx(Fragment, { children: this.shouldDisplayDefaultValueStateMessage ? this.valueStateText : jsx("slot", { name: "valueStateMessage" }) });
}

// node_modules/@ui5/webcomponents/dist/FileUploaderTemplate.js
function FileUploaderTemplate() {
  return jsxs(Fragment, { children: [jsxs("div", { class: "ui5-file-uploader-root", onMouseOver: this._onmouseover, onMouseOut: this._onmouseout, onFocusIn: this._onfocusin, onFocusOut: this._onfocusout, onKeyDown: this._onkeydown, onKeyUp: this._onkeyup, onClick: this._onclick, onDragOver: this._ondrag, onDrop: this._ondrop, children: [jsxs("div", { class: "ui5-file-uploader-mask", children: [!this.hideInput && jsx(Input_default, { value: this.value, valueState: this.valueState, placeholder: this.placeholder, disabled: this.disabled, tabindex: -1, class: "ui5-file-uploader-input" }), jsx("slot", {})] }), jsx("input", { type: "file", tabindex: -1, "aria-hidden": "true", multiple: this.multiple, accept: this.accept, title: this.titleText, disabled: this.disabled, onChange: this._onChange })] }), FileUploaderPopoverTemplate.call(this)] });
}

// node_modules/@ui5/webcomponents/dist/generated/themes/FileUploader.css.js
registerThemePropertiesLoader("@ui5/webcomponents-theming", "sap_horizon", async () => parameters_bundle_css_default);
registerThemePropertiesLoader("@ui5/webcomponents", "sap_horizon", async () => parameters_bundle_css_default2);
var FileUploader_css_default = `:host{vertical-align:middle}:host{display:inline-block}.ui5-file-uploader-root{position:relative}.ui5-file-uploader-root input[type=file]{opacity:0;position:absolute;top:0;left:0;height:100%;width:100%;font-size:0}.ui5-file-uploader-root input[type=file]:not([disabled]){cursor:pointer}.ui5-file-uploader-mask{display:flex;align-items:center}.ui5-file-uploader-mask [ui5-input]{margin-right:.25rem}:host([value-state="None"]:not([disabled]):hover) [ui5-input],:host(:not([value-state]):not([disabled]):hover) [ui5-input]{border:var(--_ui5-v2-8-0_file_uploader_hover_border);background-color:var(--sapField_Hover_Background);box-shadow:var(--sapField_Hover_Shadow)}:host([value-state="Negative"]:not([disabled]):hover) [ui5-input]{background-color:var(--_ui5-v2-8-0_file_uploader_value_state_error_hover_background_color);box-shadow:var(--sapField_Hover_InvalidShadow)}:host([value-state="Critical"]:not([disabled]):hover) [ui5-input]{background-color:var(--sapField_Hover_Background);box-shadow:var(--sapField_Hover_WarningShadow)}:host([value-state="Positive"]:not([disabled]):hover) [ui5-input]{background-color:var(--sapField_Hover_Background);box-shadow:var(--sapField_Hover_SuccessShadow)}:host([value-state="Information"]:not([disabled]):hover) [ui5-input]{background-color:var(--sapField_Hover_Background);box-shadow:var(--sapField_Hover_InformationShadow)}:host(:not([disabled]):active) [ui5-button]{background-color:var(--sapButton_Active_Background);border-color:var(--sapButton_Active_BorderColor);color:var(--sapButton_Active_TextColor);text-shadow:none}
`;

// node_modules/@ui5/webcomponents/dist/FileUploader.js
var __decorate48 = function(decorators, target, key, desc) {
  var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
  if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
  else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
  return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var FileUploader_1;
var convertBytesToMegabytes = (bytes) => bytes / 1024 / 1024;
var FileUploader = FileUploader_1 = class FileUploader2 extends UI5Element_default {
  constructor() {
    super(...arguments);
    this.hideInput = false;
    this.disabled = false;
    this.multiple = false;
    this.value = "";
    this.valueState = "None";
    this.focused = false;
  }
  async formElementAnchor() {
    return this.getFocusDomRefAsync();
  }
  /**
   * @override
   */
  getFocusDomRef() {
    return this.content[0];
  }
  get formFormattedValue() {
    if (this.files && this.name) {
      const formData = new FormData();
      for (let i = 0; i < this.files.length; i++) {
        formData.append(this.name, this.files[i]);
      }
      return formData;
    }
    return null;
  }
  _onmouseover() {
    this.content.forEach((item2) => {
      item2.classList.add("ui5_hovered");
    });
  }
  _onmouseout() {
    this.content.forEach((item2) => {
      item2.classList.remove("ui5_hovered");
    });
  }
  _onclick() {
    var _a;
    if ((_a = this.getFocusDomRef()) == null ? void 0 : _a.matches(":focus-within")) {
      this._input.click();
    }
  }
  _onkeydown(e) {
    if (isEnter(e)) {
      this._input.click();
      e.preventDefault();
    }
  }
  _onkeyup(e) {
    if (isSpace(e)) {
      this._input.click();
      e.preventDefault();
    }
  }
  _ondrag(e) {
    e.preventDefault();
    e.stopPropagation();
  }
  _ondrop(e) {
    var _a;
    e.preventDefault();
    e.stopPropagation();
    const files = (_a = e.dataTransfer) == null ? void 0 : _a.files;
    if (!files) {
      return;
    }
    const validatedFiles = this._validateFiles(files);
    if (!this.value && !validatedFiles.length) {
      return;
    }
    this._input.files = validatedFiles;
    this._updateValue(validatedFiles);
    this.fireDecoratorEvent("change", {
      files: validatedFiles
    });
  }
  _onfocusin() {
    this.focused = true;
  }
  _onfocusout() {
    this.focused = false;
  }
  /**
   * FileList of all selected files.
   * @public
   * @default null
   */
  get files() {
    if (this._input) {
      return this._input.files;
    }
    return FileUploader_1._emptyFilesList;
  }
  onAfterRendering() {
    if (!this.value) {
      this._input.value = "";
    }
    this.toggleValueStatePopover(this.shouldOpenValueStateMessagePopover);
  }
  _onChange(e) {
    let changedFiles = e.target.files;
    if (changedFiles) {
      changedFiles = this._validateFiles(changedFiles);
    }
    if (!this.value && !(changedFiles == null ? void 0 : changedFiles.length)) {
      return;
    }
    this._updateValue(changedFiles);
    this.fireDecoratorEvent("change", {
      files: changedFiles
    });
  }
  _updateValue(files) {
    this.value = Array.from(files || []).reduce((acc, currFile) => {
      return `${acc}"${currFile.name}" `;
    }, "");
  }
  /**
   * Checks whether all files are below `maxFileSize` (if set),
   * and fires a `file-size-exceed` event if any file exceeds it.
   * @private
   */
  _validateFiles(changedFiles) {
    const exceededFilesData = this.maxFileSize ? this._getExceededFiles(changedFiles) : [];
    if (exceededFilesData.length) {
      this.fireDecoratorEvent("file-size-exceed", {
        filesData: exceededFilesData
      });
      changedFiles = new DataTransfer().files;
    }
    return changedFiles;
  }
  _getExceededFiles(files) {
    const filesArray = Array.from(files);
    const exceededFiles = [];
    for (let i = 0; i < filesArray.length; i++) {
      const fileSize = convertBytesToMegabytes(filesArray[i].size);
      if (fileSize > this.maxFileSize) {
        exceededFiles.push({
          fileName: filesArray[i].name,
          fileSize
        });
      }
    }
    return exceededFiles;
  }
  toggleValueStatePopover(open2) {
    if (open2) {
      this.openValueStatePopover();
    } else {
      this.closeValueStatePopover();
    }
  }
  openValueStatePopover() {
    const popover = this._getPopover();
    if (popover) {
      popover.opener = this;
      popover.open = true;
    }
  }
  closeValueStatePopover() {
    const popover = this._getPopover();
    if (popover) {
      popover.open = false;
    }
  }
  _getPopover() {
    return this.shadowRoot.querySelector(".ui5-valuestatemessage-popover");
  }
  /**
   * in case when the component is not placed in the DOM, return empty FileList, like native input would do
   * @private
   */
  static get _emptyFilesList() {
    if (!this.emptyInput) {
      this.emptyInput = document.createElement("input");
      this.emptyInput.type = "file";
    }
    return this.emptyInput.files;
  }
  get browseText() {
    return FileUploader_1.i18nBundle.getText(FILEUPLOAD_BROWSE);
  }
  get titleText() {
    return FileUploader_1.i18nBundle.getText(FILEUPLOADER_TITLE);
  }
  get _input() {
    return this.shadowRoot.querySelector("input[type=file]") || this.querySelector("input[type=file][data-ui5-form-support]");
  }
  get valueStateTextMappings() {
    return {
      "Positive": FileUploader_1.i18nBundle.getText(VALUE_STATE_SUCCESS),
      "Information": FileUploader_1.i18nBundle.getText(VALUE_STATE_INFORMATION),
      "Negative": FileUploader_1.i18nBundle.getText(VALUE_STATE_ERROR),
      "Critical": FileUploader_1.i18nBundle.getText(VALUE_STATE_WARNING)
    };
  }
  get valueStateText() {
    return this.valueStateTextMappings[this.valueState];
  }
  get hasValueState() {
    return this.valueState !== ValueState_default.None;
  }
  get hasValueStateText() {
    return this.hasValueState && this.valueState !== ValueState_default.Positive;
  }
  get shouldDisplayDefaultValueStateMessage() {
    return !this.valueStateMessage.length && this.hasValueStateText;
  }
  get shouldOpenValueStateMessagePopover() {
    return this.focused && this.hasValueStateText && !this.hideInput;
  }
  /**
   * This method is relevant for sap_horizon theme only
   */
  get _valueStateMessageInputIcon() {
    const iconPerValueState = {
      Negative: "error",
      Critical: "alert",
      Positive: "sys-enter-2",
      Information: "information"
    };
    return this.valueState !== ValueState_default.None ? iconPerValueState[this.valueState] : "";
  }
  get ui5Input() {
    return this.shadowRoot.querySelector(".ui5-file-uploader-input");
  }
};
__decorate48([
  property_default()
], FileUploader.prototype, "accept", void 0);
__decorate48([
  property_default({ type: Boolean })
], FileUploader.prototype, "hideInput", void 0);
__decorate48([
  property_default({ type: Boolean })
], FileUploader.prototype, "disabled", void 0);
__decorate48([
  property_default({ type: Boolean })
], FileUploader.prototype, "multiple", void 0);
__decorate48([
  property_default()
], FileUploader.prototype, "name", void 0);
__decorate48([
  property_default()
], FileUploader.prototype, "placeholder", void 0);
__decorate48([
  property_default()
], FileUploader.prototype, "value", void 0);
__decorate48([
  property_default({ type: Number })
], FileUploader.prototype, "maxFileSize", void 0);
__decorate48([
  property_default()
], FileUploader.prototype, "valueState", void 0);
__decorate48([
  property_default({ type: Boolean })
], FileUploader.prototype, "focused", void 0);
__decorate48([
  slot_default({ type: HTMLElement, "default": true })
], FileUploader.prototype, "content", void 0);
__decorate48([
  slot_default()
], FileUploader.prototype, "valueStateMessage", void 0);
__decorate48([
  i18n_default("@ui5/webcomponents")
], FileUploader, "i18nBundle", void 0);
FileUploader = FileUploader_1 = __decorate48([
  customElement_default({
    tag: "ui5-file-uploader",
    languageAware: true,
    formAssociated: true,
    renderer: JsxRenderer_default,
    styles: [
      FileUploader_css_default,
      ResponsivePopoverCommon_css_default,
      ValueStateMessage_css_default
    ],
    template: FileUploaderTemplate
  }),
  event_strict_default("change", {
    bubbles: true
  }),
  event_strict_default("file-size-exceed", {
    bubbles: true
  })
], FileUploader);
FileUploader.define();

// node_modules/@ui5/webcomponents-react/dist/webComponents/FileUploader/index.js
var FileUploader3 = withWebComponent("ui5-file-uploader", ["accept", "maxFileSize", "name", "placeholder", "value", "valueState"], ["disabled", "hideInput", "multiple"], ["valueStateMessage"], ["change", "file-size-exceed"]);
FileUploader3.displayName = "FileUploader";

// node_modules/@ui5/webcomponents-fiori/dist/FilterItem.js
var __decorate49 = function(decorators, target, key, desc) {
  var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
  if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
  else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
  return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var FilterItem = class FilterItem2 extends UI5Element_default {
};
__decorate49([
  property_default()
], FilterItem.prototype, "text", void 0);
__decorate49([
  property_default()
], FilterItem.prototype, "additionalText", void 0);
__decorate49([
  slot_default()
], FilterItem.prototype, "values", void 0);
FilterItem = __decorate49([
  customElement_default("ui5-filter-item")
], FilterItem);
FilterItem.define();

// node_modules/@ui5/webcomponents-react/dist/webComponents/FilterItem/index.js
var FilterItem3 = withWebComponent("ui5-filter-item", ["additionalText", "text"], [], ["values"], []);
FilterItem3.displayName = "FilterItem";

// node_modules/@ui5/webcomponents-fiori/dist/FilterItemOption.js
var __decorate50 = function(decorators, target, key, desc) {
  var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
  if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
  else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
  return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var FilterItemOption = class FilterItemOption2 extends UI5Element_default {
  constructor() {
    super(...arguments);
    this.selected = false;
  }
};
__decorate50([
  property_default()
], FilterItemOption.prototype, "text", void 0);
__decorate50([
  property_default({ type: Boolean })
], FilterItemOption.prototype, "selected", void 0);
FilterItemOption = __decorate50([
  customElement_default("ui5-filter-item-option")
], FilterItemOption);
FilterItemOption.define();

// node_modules/@ui5/webcomponents-react/dist/webComponents/FilterItemOption/index.js
var FilterItemOption3 = withWebComponent("ui5-filter-item-option", ["text"], ["selected"], [], []);
FilterItemOption3.displayName = "FilterItemOption";

// node_modules/@ui5/webcomponents-icons/dist/v4/vertical-grip.js
var name17 = "vertical-grip";
var pathData17 = "M224 480v-64h64v64h-64zm0-384V32h64v64h-64zm0 128v-64h64v64h-64zm0 128v-64h64v64h-64z";
var ltr17 = false;
var collection17 = "SAP-icons-v4";
var packageName17 = "@ui5/webcomponents-icons";
registerIcon(name17, { pathData: pathData17, ltr: ltr17, collection: collection17, packageName: packageName17 });

// node_modules/@ui5/webcomponents-icons/dist/v5/vertical-grip.js
var name18 = "vertical-grip";
var pathData18 = "M176 0q20 0 34 14t14 34-14 34-34 14-34-14-14-34 14-34 34-14zm160 96q-20 0-34-14t-14-34 14-34 34-14 34 14 14 34-14 34-34 14zm-160 42q20 0 34 14t14 34-14 34-34 14-34-14-14-34 14-34 34-14zm160 0q20 0 34 14t14 34-14 34-34 14-34-14-14-34 14-34 34-14zM176 278q20 0 34 14t14 34q0 19-14.5 33.5T176 374t-33.5-14.5T128 326q0-20 14-34t34-14zm160 0q20 0 34 14t14 34q0 19-14.5 33.5T336 374t-33.5-14.5T288 326q0-20 14-34t34-14zM176 416q20 0 34 14t14 34-14 34-34 14-34-14-14-34 14-34 34-14zm160 0q20 0 34 14t14 34-14 34-34 14-34-14-14-34 14-34 34-14z";
var ltr18 = false;
var collection18 = "SAP-icons-v5";
var packageName18 = "@ui5/webcomponents-icons";
registerIcon(name18, { pathData: pathData18, ltr: ltr18, collection: collection18, packageName: packageName18 });

// node_modules/@ui5/webcomponents-icons/dist/vertical-grip.js
var vertical_grip_default = "vertical-grip";

// node_modules/@ui5/webcomponents-fiori/dist/types/FCLLayout.js
var FCLLayout;
(function(FCLLayout2) {
  FCLLayout2["OneColumn"] = "OneColumn";
  FCLLayout2["TwoColumnsStartExpanded"] = "TwoColumnsStartExpanded";
  FCLLayout2["TwoColumnsMidExpanded"] = "TwoColumnsMidExpanded";
  FCLLayout2["ThreeColumnsMidExpanded"] = "ThreeColumnsMidExpanded";
  FCLLayout2["ThreeColumnsEndExpanded"] = "ThreeColumnsEndExpanded";
  FCLLayout2["ThreeColumnsStartExpandedEndHidden"] = "ThreeColumnsStartExpandedEndHidden";
  FCLLayout2["ThreeColumnsMidExpandedEndHidden"] = "ThreeColumnsMidExpandedEndHidden";
  FCLLayout2["ThreeColumnsStartHiddenMidExpanded"] = "ThreeColumnsStartHiddenMidExpanded";
  FCLLayout2["ThreeColumnsStartHiddenEndExpanded"] = "ThreeColumnsStartHiddenEndExpanded";
  FCLLayout2["MidColumnFullScreen"] = "MidColumnFullScreen";
  FCLLayout2["EndColumnFullScreen"] = "EndColumnFullScreen";
})(FCLLayout || (FCLLayout = {}));
var FCLLayout_default = FCLLayout;

// node_modules/@ui5/webcomponents-fiori/dist/fcl-utils/FCLLayout.js
var getLayoutsByMedia = () => {
  return {
    desktop: {
      "OneColumn": {
        layout: ["100%", "0px", "0px"],
        separators: [
          { visible: false },
          { visible: false }
        ]
      },
      "TwoColumnsStartExpanded": {
        layout: ["67%", "33%", "0px"],
        separators: [
          { visible: true, gripVisible: true },
          { visible: false }
        ]
      },
      "TwoColumnsMidExpanded": {
        layout: ["33%", "67%", "0px"],
        separators: [
          { visible: true, gripVisible: true },
          { visible: false }
        ]
      },
      "ThreeColumnsMidExpanded": {
        layout: ["25%", "50%", "25%"],
        separators: [
          {
            visible: true,
            gripVisible: true,
            arrowVisible: true,
            arrowDirection: "backward"
          },
          { visible: true, gripVisible: true }
        ]
      },
      "ThreeColumnsEndExpanded": {
        layout: ["25%", "25%", "50%"],
        separators: [
          {
            visible: true,
            gripVisible: false,
            arrowVisible: true,
            arrowDirection: "backward"
          },
          { visible: true, gripVisible: true }
        ]
      },
      "ThreeColumnsStartExpandedEndHidden": {
        layout: ["67%", "33%", "0px"],
        separators: [
          { visible: true, gripVisible: true },
          { visible: false }
        ]
      },
      "ThreeColumnsMidExpandedEndHidden": {
        layout: ["33%", "67%", "0px"],
        separators: [
          { visible: true, gripVisible: true },
          { visible: true, gripVisible: true }
        ]
      },
      "ThreeColumnsStartHiddenMidExpanded": {
        layout: ["0px", "33%", "67%"],
        separators: [
          {
            visible: true,
            gripVisible: true,
            arrowVisible: true,
            arrowDirection: "forward"
          },
          { visible: true, gripVisible: true }
        ]
      },
      "ThreeColumnsStartHiddenEndExpanded": {
        layout: ["0px", "33%", "67%"],
        separators: [
          {
            visible: true,
            gripVisible: false,
            arrowVisible: true,
            arrowDirection: "forward"
          },
          { visible: true, gripVisible: true }
        ]
      },
      "MidColumnFullScreen": {
        layout: ["0px", "100%", "0px"],
        separators: [
          { visible: false },
          { visible: false }
        ]
      },
      "EndColumnFullScreen": {
        layout: ["0px", "0px", "100%"],
        separators: [
          { visible: false },
          { visible: false }
        ]
      }
    },
    tablet: {
      "OneColumn": {
        layout: ["100%", "0px", "0px"],
        separators: [
          { visible: false },
          { visible: false }
        ]
      },
      "TwoColumnsStartExpanded": {
        layout: ["67%", "33%", "0px"],
        separators: [
          { visible: true, gripVisible: true },
          { visible: false }
        ]
      },
      "TwoColumnsMidExpanded": {
        layout: ["33%", "67%", "0px"],
        separators: [
          { visible: true, gripVisible: true },
          { visible: false }
        ]
      },
      "ThreeColumnsMidExpanded": {
        layout: ["0px", "67%", "33%"],
        separators: [
          { visible: true, gripVisible: true },
          { visible: true, gripVisible: true }
        ]
      },
      "ThreeColumnsEndExpanded": {
        layout: ["0px", "33%", "67%"],
        separators: [
          { visible: false },
          { visible: true, gripVisible: true }
        ]
      },
      "ThreeColumnsStartExpandedEndHidden": {
        layout: ["67%", "33%", "0px"],
        separators: [
          { visible: true, gripVisible: true },
          { visible: false }
        ]
      },
      "ThreeColumnsMidExpandedEndHidden": {
        layout: ["33%", "67%", "0px"],
        separators: [
          { visible: true, gripVisible: true },
          { visible: true, gripVisible: true }
        ]
      },
      "ThreeColumnsStartHiddenMidExpanded": {
        layout: ["0px", "67%", "33%"],
        separators: [
          { visible: true, gripVisible: true },
          { visible: true, gripVisible: true }
        ]
      },
      "ThreeColumnsStartHiddenEndExpanded": {
        layout: ["0px", "33%", "67%"],
        separators: [
          { visible: false },
          { visible: true, gripVisible: true }
        ]
      },
      "MidColumnFullScreen": {
        layout: ["0px", "100%", "0px"],
        separators: [
          { visible: false },
          { visible: false }
        ]
      },
      "EndColumnFullScreen": {
        layout: ["0px", "0px", "100%"],
        separators: [
          { visible: false },
          { visible: false }
        ]
      }
    },
    phone: {
      "OneColumn": {
        layout: ["100%", "0px", "0px"],
        separators: [
          { visible: false },
          { visible: false }
        ]
      },
      "TwoColumnsStartExpanded": {
        layout: ["0px", "100%", "0px"],
        separators: [
          { visible: false },
          { visible: false }
        ]
      },
      "TwoColumnsMidExpanded": {
        layout: ["0px", "100%", "0px"],
        separators: [
          { visible: false },
          { visible: false }
        ]
      },
      "ThreeColumnsMidExpanded": {
        layout: ["0px", "0px", "100%"],
        separators: [
          { visible: false },
          { visible: false }
        ]
      },
      "ThreeColumnsEndExpanded": {
        layout: ["0px", "0px", "100%"],
        separators: [
          { visible: false },
          { visible: false }
        ]
      },
      "ThreeColumnsStartExpandedEndHidden": {
        layout: ["0px", "0px", "100%"],
        separators: [
          { visible: false },
          { visible: false }
        ]
      },
      "ThreeColumnsMidExpandedEndHidden": {
        layout: ["0px", "0px", "100%"],
        separators: [
          { visible: false },
          { visible: false }
        ]
      },
      "ThreeColumnsStartHiddenMidExpanded": {
        layout: ["0px", "0px", "100%"],
        separators: [
          { visible: false },
          { visible: false }
        ]
      },
      "ThreeColumnsStartHiddenEndExpanded": {
        layout: ["0px", "0px", "100%"],
        separators: [
          { visible: false },
          { visible: false }
        ]
      },
      "MidColumnFullScreen": {
        layout: ["0px", "100%", "0px"],
        separators: [
          { visible: false },
          { visible: false }
        ]
      },
      "EndColumnFullScreen": {
        layout: ["0px", "0px", "100%"],
        separators: [
          { visible: false },
          { visible: false }
        ]
      }
    }
  };
};
var getNextLayoutByArrowPress = () => {
  return {
    "ThreeColumnsMidExpanded": "ThreeColumnsStartHiddenMidExpanded",
    "ThreeColumnsEndExpanded": "ThreeColumnsStartHiddenEndExpanded",
    "ThreeColumnsStartHiddenMidExpanded": "ThreeColumnsMidExpanded",
    "ThreeColumnsStartHiddenEndExpanded": "ThreeColumnsEndExpanded"
  };
};

// node_modules/@ui5/webcomponents-fiori/dist/FlexibleColumnLayoutTemplate.js
function FlexibleColumnLayoutTemplate() {
  const hasAnimation = getAnimationMode2() !== AnimationMode_default.None;
  return jsxs("div", { class: "ui5-fcl-root", children: [jsxs("div", { role: this._accAttributes.columns.start.role, class: {
    "ui5-fcl-column": true,
    "ui5-fcl-column-animation": hasAnimation,
    "ui5-fcl-column--start": true
  }, "aria-hidden": this._accAttributes.columns.start.ariaHidden, "aria-labelledby": `${this._id}-startColumnText`, children: [jsx("span", { id: `${this._id}-startColumnText`, class: "ui5-hidden-text", children: this.accStartColumnText }), jsx("slot", { name: "startColumn", "aria-hidden": this._accAttributes.columns.start.ariaHidden })] }), jsxs("div", { role: this.accStartSeparatorRole, title: this.accStartSeparatorText, class: "ui5-fcl-separator ui5-fcl-separator-start", style: { display: this.showStartSeparator ? "flex" : "none" }, tabindex: this.startSeparatorTabIndex, onMouseDown: this.onSeparatorPress, onTouchStart: this.onSeparatorPress, onKeyDown: this._onSeparatorKeydown, onKeyUp: this._onSeparatorKeyUp, children: [this.showStartSeparatorArrow && arrowStart.call(this), gripStart.call(this)] }), jsxs("div", { role: this._accAttributes.columns.middle.role, class: {
    "ui5-fcl-column": true,
    "ui5-fcl-column-animation": hasAnimation,
    "ui5-fcl-column--middle": true
  }, "aria-hidden": this._accAttributes.columns.middle.ariaHidden, "aria-labelledby": `${this._id}-midColumnText`, children: [jsx("span", { id: `${this._id}-midColumnText`, class: "ui5-hidden-text", children: this.accMiddleColumnText }), jsx("slot", { name: "midColumn", "aria-hidden": this._accAttributes.columns.middle.ariaHidden })] }), jsx("div", { role: this.accEndSeparatorRole, title: this.accEndSeparatorText, class: "ui5-fcl-separator ui5-fcl-separator-end", style: { display: this.showEndSeparator ? "flex" : "none" }, tabindex: this.endSeparatorTabIndex, onMouseDown: this.onSeparatorPress, onTouchStart: this.onSeparatorPress, onKeyDown: this._onSeparatorKeydown, onKeyUp: this._onSeparatorKeyUp, children: gripEnd.call(this) }), jsxs("div", { role: this._accAttributes.columns.end.role, class: {
    "ui5-fcl-column": true,
    "ui5-fcl-column-animation": hasAnimation,
    "ui5-fcl-column--end": true
  }, "aria-hidden": this._accAttributes.columns.end.ariaHidden, "aria-labelledby": `${this._id}-endColumnText`, children: [jsx("span", { id: `${this._id}-endColumnText`, class: "ui5-hidden-text", children: this.accEndColumnText }), jsx("slot", { name: "endColumn", "aria-hidden": this._accAttributes.columns.end.ariaHidden })] })] });
}
function arrowStart() {
  return jsx(Button_default, { icon: this.startArrowDirection === "backward" ? slim_arrow_left_default : slim_arrow_right_default, design: "Transparent", onClick: this.switchLayoutOnArrowPress, onKeyDown: this._onArrowKeydown, class: "ui5-fcl-arrow ui5-fcl-arrow--start" });
}
function gripStart() {
  return jsx("div", { class: "ui5-fcl-grip ui5-fcl-grip--start", style: { display: this.showStartSeparatorGrip ? "flex" : "none" }, children: jsx(Icon_default, { name: vertical_grip_default, class: "ui5-fcl-grip-icon" }) });
}
function gripEnd() {
  return jsx("div", { class: "ui5-fcl-grip ui5-fcl-grip--end", style: { display: this.showEndSeparatorGrip ? "flex" : "none" }, children: jsx(Icon_default, { name: vertical_grip_default, class: "ui5-fcl-grip-icon" }) });
}

// node_modules/@ui5/webcomponents-fiori/dist/generated/themes/FlexibleColumnLayout.css.js
registerThemePropertiesLoader("@ui5/webcomponents-theming", "sap_horizon", async () => parameters_bundle_css_default);
registerThemePropertiesLoader("@ui5/webcomponents-fiori", "sap_horizon", async () => parameters_bundle_css_default3);
var FlexibleColumnLayout_css_default = `.ui5-hidden-text{position:absolute;clip:rect(1px,1px,1px,1px);user-select:none;left:-1000px;top:-1000px;pointer-events:none;font-size:0}:host(:not([hidden])){display:block;background:var(--_ui5-v2-8-0_fcl_solid_bg)}.ui5-fcl-root{height:100%;display:flex;flex-direction:row}.ui5-fcl-column{background:inherit;box-sizing:border-box;will-change:width;overflow-y:auto}:host([_resizing]) .ui5-fcl-column{pointer-events:none}.ui5-fcl-column-animation{transition:width .56s cubic-bezier(.1,0,.05,1),visibility .56s ease-in}.ui5-fcl-column--hidden{display:none}.ui5-fcl-separator{display:flex;flex-direction:column;align-items:center;justify-content:center;width:1rem;background-color:var(--sapShell_Background);border-inline-start:var(--_ui5-v2-8-0_fcl_column_border);border-inline-end:var(--_ui5-v2-8-0_fcl_column_border);position:relative;box-sizing:border-box;z-index:1}.ui5-fcl-separator:focus{outline:var(--sapContent_FocusWidth) var(--sapContent_FocusStyle) var(--sapContent_FocusColor);outline-offset:calc(-1 * var(--sapContent_FocusWidth))}.ui5-fcl-grip{cursor:col-resize;overflow:visible;display:flex;justify-content:center;align-items:center;width:1.5rem;height:2rem;z-index:10}.ui5-fcl-grip-icon{color:var(--sapButton_TextColor)}.ui5-fcl-arrow{position:absolute;top:1rem;width:1.5rem;height:1.5rem;min-width:1.5rem;will-change:transform;overflow:visible;z-index:10;cursor:pointer}.ui5-fcl-grip:before{background-image:var(--_ui5-v2-8-0_fcl_decoration_top);bottom:calc(50% + 1rem)}.ui5-fcl-grip:after{background-image:var(--_ui5-v2-8-0_fcl_decoration_bottom);top:calc(50% + 1rem)}.ui5-fcl-grip:before,.ui5-fcl-grip:after{content:"";position:absolute;left:0;height:4rem;width:100%;transition:all .1s ease-in;background-repeat:no-repeat;background-size:.0625rem 100%;background-position-x:calc(50% - .03125rem)}.ui5-fcl-separator:hover .ui5-fcl-grip:before,.ui5-fcl-separator:hover .ui5-fcl-grip:after{height:calc(50% - 1rem)}.ui5-fcl-separator:hover .ui5-fcl-arrow+.ui5-fcl-grip:before{height:calc(40% - 1rem)}[aria-hidden] ::slotted([slot="startColumn"]),[aria-hidden] ::slotted([slot="midColumn"]),[aria-hidden] ::slotted([slot="endColumn"]){visibility:hidden}
`;

// node_modules/@ui5/webcomponents-fiori/dist/FlexibleColumnLayout.js
var __decorate51 = function(decorators, target, key, desc) {
  var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
  if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
  else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
  return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var FlexibleColumnLayout_1;
var MEDIA;
(function(MEDIA2) {
  MEDIA2["PHONE"] = "phone";
  MEDIA2["TABLET"] = "tablet";
  MEDIA2["DESKTOP"] = "desktop";
})(MEDIA || (MEDIA = {}));
var BREAKPOINTS = {
  "PHONE": 599,
  "TABLET": 1023
};
var COLUMN = {
  START: 0,
  MID: 1,
  END: 2
};
var COLUMN_MIN_WIDTH = 248;
var FlexibleColumnLayout = FlexibleColumnLayout_1 = class FlexibleColumnLayout2 extends UI5Element_default {
  constructor() {
    super();
    this.layout = "OneColumn";
    this.disableResizing = false;
    this.accessibilityAttributes = {};
    this._width = 0;
    this._visibleColumns = 1;
    this._resizing = false;
    this._userDefinedColumnLayouts = {
      tablet: {},
      desktop: {}
    };
    this.columnResizeHandler = (e) => {
      e.target.classList.add("ui5-fcl-column--hidden");
    };
    this._prevLayout = null;
    this.initialRendering = true;
    this._handleResize = this.handleResize.bind(this);
    this._onSeparatorMove = this.onSeparatorMove.bind(this);
    this._onSeparatorMoveEnd = this.onSeparatorMoveEnd.bind(this);
    const handleTouchStartEvent = (e) => {
      this.onSeparatorPress(e);
    };
    this._ontouchstart = {
      handleEvent: handleTouchStartEvent,
      passive: true
    };
  }
  static get ANIMATION_DURATION() {
    return getAnimationMode2() !== AnimationMode_default.None ? 560 : 0;
  }
  onEnterDOM() {
    ResizeHandler_default.register(this, this._handleResize.bind(this));
  }
  onExitDOM() {
    ResizeHandler_default.deregister(this, this._handleResize);
  }
  onAfterRendering() {
    if (this.initialRendering) {
      this.handleInitialRendering();
      return;
    }
    this.syncLayout();
  }
  handleInitialRendering() {
    this._prevLayout = this.layout;
    this.updateLayout();
    this.initialRendering = false;
  }
  handleResize() {
    if (this.initialRendering) {
      return;
    }
    const prevLayoutHash = this.columnLayout.join();
    this.updateLayout();
    if (prevLayoutHash !== this.columnLayout.join()) {
      this.fireLayoutChange(false, true);
    }
  }
  updateLayout() {
    this._width = this.widthDOM;
    this._columnLayout = this.nextColumnLayout(this.effectiveLayout);
    this._visibleColumns = this.calcVisibleColumns(this._columnLayout);
    this.toggleColumns();
  }
  syncLayout() {
    if (this._prevLayout !== this.layout) {
      this.updateLayout();
      this._prevLayout = this.layout;
    }
  }
  toggleColumns() {
    this.toggleColumn("start");
    this.toggleColumn("mid");
    this.toggleColumn("end");
  }
  toggleColumn(column) {
    let columnWidth;
    let columnDOM;
    if (column === "start") {
      columnWidth = this.startColumnWidth;
      columnDOM = this.startColumnDOM;
    } else if (column === "mid") {
      columnWidth = this.midColumnWidth;
      columnDOM = this.midColumnDOM;
    } else {
      columnWidth = this.endColumnWidth;
      columnDOM = this.endColumnDOM;
    }
    const currentlyHidden = this._isColumnHidden(columnWidth);
    const previouslyHidden = this._isColumnHidden(columnDOM.style.width);
    if (currentlyHidden && previouslyHidden) {
      return;
    }
    if (!currentlyHidden && !previouslyHidden) {
      columnDOM.style.width = typeof columnWidth === "number" ? `${columnWidth}px` : columnWidth;
      return;
    }
    if (currentlyHidden) {
      columnDOM.style.width = typeof columnWidth === "number" ? `${columnWidth}px` : columnWidth;
      columnDOM.addEventListener("transitionend", this.columnResizeHandler);
      return;
    }
    if (previouslyHidden) {
      columnDOM.removeEventListener("transitionend", this.columnResizeHandler);
      columnDOM.classList.remove("ui5-fcl-column--hidden");
      columnDOM.style.width = typeof columnWidth === "number" ? `${columnWidth}px` : columnWidth;
    }
  }
  nextColumnLayout(layout) {
    let userDefinedLayout;
    if (this.media !== MEDIA.PHONE) {
      userDefinedLayout = this._userDefinedColumnLayouts[this.media][layout];
    }
    return userDefinedLayout || this._effectiveLayoutsByMedia[this.media][layout].layout;
  }
  calcVisibleColumns(colLayout) {
    return colLayout.filter((colWidth) => !this._isColumnHidden(colWidth)).length;
  }
  fireLayoutChange(separatorUsed, resized) {
    this.fireDecoratorEvent("layout-change", {
      layout: this.layout,
      columnLayout: this._columnLayout,
      startColumnVisible: this.startColumnVisible,
      midColumnVisible: this.midColumnVisible,
      endColumnVisible: this.endColumnVisible,
      separatorsUsed: separatorUsed,
      resized
    });
  }
  onSeparatorPress(e) {
    if (e.target === this.startArrowDOM) {
      return;
    }
    const pressedSeparator = e.target.closest(".ui5-fcl-separator");
    if (pressedSeparator.classList.contains("ui5-fcl-separator-start") && !this.showStartSeparatorGrip) {
      return;
    }
    const isTouch = supportsTouch() && e instanceof TouchEvent, cursorPositionX = this.getPageXValueFromEvent(e);
    this.separatorMovementSession = this.initSeparatorMovementSession(pressedSeparator, cursorPositionX, isTouch);
  }
  onSeparatorMove(e) {
    e.preventDefault();
    if (!this.separatorMovementSession) {
      return;
    }
    const latestCursorX = this.getPageXValueFromEvent(e), movementDelta = latestCursorX - this.separatorMovementSession.cursorPositionX;
    if (!movementDelta) {
      return;
    }
    const movedSeparator = this.separatorMovementSession.separator, latestSeparatorX = movedSeparator.getBoundingClientRect().x, isForwardMove = movementDelta > 0;
    if (this.isSeparatorAheadOfCursor(latestCursorX, latestSeparatorX, isForwardMove)) {
      this.separatorMovementSession.cursorPositionX = latestCursorX;
      return;
    }
    const layoutBeforeMove = this.separatorMovementSession.tmpFCLLayout;
    const layoutAfterMove = this.moveSeparator(movedSeparator, movementDelta, layoutBeforeMove);
    this.separatorMovementSession.cursorPositionX = latestCursorX;
    this.separatorMovementSession.tmpFCLLayout = layoutAfterMove;
  }
  onSeparatorMoveEnd() {
    if (!this.separatorMovementSession) {
      return;
    }
    const newLayout = this.separatorMovementSession.tmpFCLLayout;
    const newColumnLayout = this._columnLayout;
    this.saveUserDefinedColumnLayout(newLayout, newColumnLayout);
    this.exitSeparatorMovementSession();
  }
  initSeparatorMovementSession(separator, cursorPositionX, isTouch) {
    this.attachMoveListeners(isTouch);
    this.toggleSideAnimations(separator, false);
    this._resizing = true;
    return {
      separator,
      cursorPositionX,
      tmpFCLLayout: this.layout
    };
  }
  exitSeparatorMovementSession() {
    const movedSeparator = this.separatorMovementSession.separator;
    const hasAnimation = getAnimationMode2() !== AnimationMode_default.None;
    this.detachMoveListeners();
    this.toggleSideAnimations(movedSeparator, hasAnimation);
    this._resizing = false;
    movedSeparator.focus();
    this.separatorMovementSession = null;
  }
  saveUserDefinedColumnLayout(newLayout, newColumnLayout) {
    const media = this.media;
    this._userDefinedColumnLayouts[media][newLayout] = newColumnLayout;
    if (this.layout !== newLayout) {
      this.layout = newLayout;
      this.fireLayoutChange(true, false);
    }
  }
  isSeparatorAheadOfCursor(cursorX, separatorX, isForwardMove) {
    if (isForwardMove) {
      return separatorX > cursorX;
    }
    return separatorX < cursorX;
  }
  calculateNewColumnWidth(columnToResize, widthDelta) {
    const columnWidths = this._columnLayout.map((x) => this.convertColumnWidthToPixels(x)), adjacentColumnToResize = COLUMN.MID, columnNewWidth = columnWidths[columnToResize] + widthDelta, adjacentColumnNewWidth = columnWidths[adjacentColumnToResize] - widthDelta;
    if (columnNewWidth < COLUMN_MIN_WIDTH) {
      return COLUMN_MIN_WIDTH;
    }
    if (adjacentColumnNewWidth < COLUMN_MIN_WIDTH) {
      const correction = COLUMN_MIN_WIDTH - adjacentColumnNewWidth;
      return columnNewWidth - correction;
    }
    return columnNewWidth;
  }
  moveSeparator(separator, offsetX, fclLayoutBeforeMove) {
    const isStartSeparator = separator === this.startSeparatorDOM, isRTL = this.effectiveDir === "rtl";
    let selectedColumnToResize, columnWidthDelta;
    if (isRTL) {
      offsetX = -offsetX;
    }
    if (isStartSeparator) {
      selectedColumnToResize = COLUMN.START;
      columnWidthDelta = offsetX;
    } else {
      selectedColumnToResize = COLUMN.END;
      columnWidthDelta = -offsetX;
    }
    const isStartToEndDirection = offsetX > 0, newColumnWidth = this.calculateNewColumnWidth(selectedColumnToResize, columnWidthDelta), newColumnLayout = this.adjustColumnLayout(selectedColumnToResize, newColumnWidth, true), newFCLLayout = this.getNextLayoutOnSeparatorMovement(separator, isStartToEndDirection, fclLayoutBeforeMove, newColumnLayout);
    if (fclLayoutBeforeMove !== newFCLLayout) {
      this._columnLayout = this.nextColumnLayout(newFCLLayout);
      this._visibleColumns = this.calcVisibleColumns(this._columnLayout);
    }
    this.adjustColumnLayout(selectedColumnToResize, newColumnWidth);
    this.toggleColumns();
    return newFCLLayout;
  }
  adjustColumnLayout(columnToResize, newSize, createNewArray = false) {
    if (!this._columnLayout) {
      return;
    }
    const columnLayoutInPx = this._columnLayout.map((x) => this.convertColumnWidthToPixels(x));
    columnLayoutInPx[columnToResize] = newSize;
    columnLayoutInPx[COLUMN.MID] = this._availableWidthForColumns - columnLayoutInPx[COLUMN.START] - columnLayoutInPx[COLUMN.END];
    const columnLayoutToAdjust = createNewArray ? [] : this._columnLayout;
    columnLayoutInPx.forEach((x, i) => {
      columnLayoutToAdjust[i] = this.convertToRelativeColumnWidth(columnLayoutInPx[i]);
    });
    return columnLayoutToAdjust;
  }
  _onArrowKeydown(e) {
    if (isEnter(e) || isSpace(e)) {
      e.preventDefault();
      const focusedElement = e.target;
      if (focusedElement === this.startArrowDOM) {
        this.switchLayoutOnArrowPress();
      }
    }
  }
  async _onSeparatorKeydown(e) {
    const separator = e.target;
    if (!separator.classList.contains("ui5-fcl-separator")) {
      return;
    }
    const stepSize = 2, bigStepSize = this._width, isRTL = this.effectiveDir === "rtl";
    let step = 0;
    if (isLeft(e)) {
      step = -stepSize * 10;
    } else if (isRight(e)) {
      step = stepSize * 10;
    } else if (isLeftShift(e)) {
      step = -stepSize;
    } else if (isRightShift(e)) {
      step = stepSize;
    } else if (isHome(e)) {
      e.preventDefault();
      step = isRTL ? bigStepSize : -bigStepSize;
    } else if (isEnd(e)) {
      e.preventDefault();
      step = isRTL ? -bigStepSize : bigStepSize;
    }
    if (!step) {
      return;
    }
    if (!this.separatorMovementSession) {
      this.separatorMovementSession = this.initSeparatorMovementSession(separator, 0, false);
    }
    const layoutBeforeMove = this.separatorMovementSession.tmpFCLLayout;
    const layoutAfterMove = this.moveSeparator(separator, step, layoutBeforeMove);
    this.separatorMovementSession.tmpFCLLayout = layoutAfterMove;
    await renderFinished();
    separator.focus();
  }
  _onSeparatorKeyUp() {
    if (this.separatorMovementSession) {
      this.onSeparatorMoveEnd();
    }
  }
  attachMoveListeners(isTouch) {
    const domRef = this.getDomRef();
    if (!domRef) {
      return;
    }
    if (isTouch && supportsTouch()) {
      domRef.addEventListener("touchmove", this._onSeparatorMove);
      domRef.addEventListener("touchend", this._onSeparatorMoveEnd);
    } else {
      domRef.addEventListener("mousemove", this._onSeparatorMove);
      domRef.addEventListener("mouseup", this._onSeparatorMoveEnd);
    }
  }
  detachMoveListeners() {
    const domRef = this.getDomRef();
    if (!domRef) {
      return;
    }
    domRef.removeEventListener("mouseup", this._onSeparatorMoveEnd);
    domRef.removeEventListener("touchend", this._onSeparatorMoveEnd);
    domRef.removeEventListener("mousemove", this._onSeparatorMove);
    domRef.removeEventListener("touchmove", this._onSeparatorMove);
  }
  toggleSideAnimations(separator, shouldAnimate) {
    const adjacentColumns = [
      separator.previousElementSibling,
      separator.nextElementSibling
    ];
    adjacentColumns.forEach((column) => column.classList.toggle("ui5-fcl-column-animation", shouldAnimate));
  }
  getPageXValueFromEvent(e) {
    if (supportsTouch() && e instanceof TouchEvent) {
      if (e.changedTouches && e.changedTouches.length > 0) {
        return e.changedTouches[0].pageX;
      }
      return 0;
    }
    return e.pageX;
  }
  convertColumnWidthToPixels(width) {
    if (typeof width === "number") {
      return width;
    }
    const parsedValue = parseFloat(width), totalWidth = this._availableWidthForColumns;
    if (width.endsWith("%")) {
      return totalWidth / 100 * parsedValue;
    }
    return parsedValue;
  }
  convertToRelativeColumnWidth(pxWidth) {
    if (typeof pxWidth === "string") {
      return pxWidth;
    }
    if (pxWidth === 0) {
      return "0px";
    }
    return `${pxWidth / this._availableWidthForColumns * 100}%`;
  }
  getNextLayoutOnSeparatorMovement(separator, isStartToEndDirection, fclLayoutBeforeMove, columnLayoutAfterMove) {
    const isStartSeparator = separator === this.startSeparatorDOM, separatorName = isStartSeparator ? "start" : "end", moved = (options) => {
      return options.from === fclLayoutBeforeMove && options.separator === separatorName && options.forward === isStartToEndDirection;
    }, newColumnLayout = columnLayoutAfterMove.map((x) => this.convertColumnWidthToPixels(x)), newColumnWidths = {
      start: newColumnLayout[0],
      mid: newColumnLayout[1],
      end: newColumnLayout[2]
    }, startColumnPxWidth = newColumnWidths.start, startColumnPercentWidth = startColumnPxWidth / this.widthDOM * 100, isTablet3 = this.media === MEDIA.TABLET;
    if (moved({
      separator: "start",
      from: FCLLayout_default.TwoColumnsMidExpanded,
      forward: true
    }) && newColumnWidths.start >= newColumnWidths.mid) {
      return FCLLayout_default.TwoColumnsStartExpanded;
    }
    if (moved({
      separator: "start",
      from: FCLLayout_default.TwoColumnsStartExpanded,
      forward: false
    }) && newColumnWidths.start < newColumnWidths.mid) {
      return FCLLayout_default.TwoColumnsMidExpanded;
    }
    if (moved({
      separator: "start",
      from: FCLLayout_default.ThreeColumnsMidExpanded,
      forward: true
    }) && startColumnPercentWidth >= 33) {
      return FCLLayout_default.ThreeColumnsMidExpandedEndHidden;
    }
    if (moved({
      separator: "start",
      from: FCLLayout_default.ThreeColumnsMidExpandedEndHidden,
      forward: false
    }) && !isTablet3 && startColumnPercentWidth < 33) {
      return FCLLayout_default.ThreeColumnsMidExpanded;
    }
    if (moved({
      separator: "start",
      from: FCLLayout_default.ThreeColumnsStartHiddenMidExpanded,
      forward: true
    }) && !isTablet3 && Math.ceil(startColumnPxWidth) >= COLUMN_MIN_WIDTH) {
      return FCLLayout_default.ThreeColumnsMidExpanded;
    }
    if (moved({
      separator: "end",
      from: FCLLayout_default.ThreeColumnsStartHiddenMidExpanded,
      forward: false
    }) && newColumnWidths.mid < newColumnWidths.end) {
      return FCLLayout_default.ThreeColumnsStartHiddenEndExpanded;
    }
    if (moved({
      separator: "end",
      from: FCLLayout_default.ThreeColumnsStartHiddenEndExpanded,
      forward: true
    }) && newColumnWidths.mid >= newColumnWidths.end) {
      return FCLLayout_default.ThreeColumnsStartHiddenMidExpanded;
    }
    if (moved({
      separator: "end",
      from: FCLLayout_default.ThreeColumnsMidExpandedEndHidden,
      forward: false
      // ceil before comparing to avoid floating point precision issues
    }) && Math.ceil(newColumnWidths.end) >= COLUMN_MIN_WIDTH) {
      return FCLLayout_default.ThreeColumnsMidExpanded;
    }
    if (moved({
      separator: "end",
      from: FCLLayout_default.ThreeColumnsMidExpanded,
      forward: false
    }) && newColumnWidths.mid < newColumnWidths.end) {
      return FCLLayout_default.ThreeColumnsEndExpanded;
    }
    if (moved({
      separator: "end",
      from: FCLLayout_default.ThreeColumnsEndExpanded,
      forward: true
    }) && newColumnWidths.mid >= newColumnWidths.end) {
      return FCLLayout_default.ThreeColumnsMidExpanded;
    }
    if (moved({
      separator: "start",
      from: FCLLayout_default.ThreeColumnsMidExpandedEndHidden,
      forward: true
    }) && newColumnWidths.start >= newColumnWidths.mid) {
      return FCLLayout_default.ThreeColumnsStartExpandedEndHidden;
    }
    if (moved({
      separator: "start",
      from: FCLLayout_default.ThreeColumnsStartExpandedEndHidden,
      forward: false
    }) && newColumnWidths.start < newColumnWidths.mid) {
      return FCLLayout_default.ThreeColumnsMidExpandedEndHidden;
    }
    if (moved({
      separator: "start",
      from: FCLLayout_default.ThreeColumnsMidExpanded,
      forward: true
      // ceil before comparing to avoid floating point precision issues
    }) && isTablet3 && Math.ceil(startColumnPxWidth) >= COLUMN_MIN_WIDTH) {
      return FCLLayout_default.ThreeColumnsMidExpandedEndHidden;
    }
    if (moved({
      separator: "end",
      from: FCLLayout_default.ThreeColumnsMidExpandedEndHidden,
      forward: false
      // ceil before comparing to avoid floating point precision issues
    }) && isTablet3 && Math.ceil(newColumnWidths.end) >= COLUMN_MIN_WIDTH) {
      return FCLLayout_default.ThreeColumnsMidExpanded;
    }
    return fclLayoutBeforeMove;
  }
  switchLayoutOnArrowPress() {
    const lastUsedLayout = this.layout;
    this.layout = getNextLayoutByArrowPress()[lastUsedLayout];
    if (this.layout !== lastUsedLayout) {
      this.fireLayoutChange(true, false);
    }
  }
  get _availableWidthForColumns() {
    let width = this._width;
    if (this.showStartSeparator) {
      width -= this.startSeparatorDOM.offsetWidth;
    }
    if (this.showEndSeparator) {
      width -= this.endSeparatorDOM.offsetWidth;
    }
    return width;
  }
  /**
   * Checks if a column is hidden based on its width.
   */
  _isColumnHidden(columnWidth) {
    return columnWidth === 0 || columnWidth === "0px";
  }
  /**
  * Returns the current column layout, based on both the `layout` property and the screen size.
  *
  * **For example:** ["67%", "33%", 0], ["100%", 0, 0], ["25%", "50%", "25%"], etc,
  * where the numbers represents the width of the start, middle and end columns.
  * @default undefined
  * @public
  */
  get columnLayout() {
    return this._columnLayout;
  }
  /**
  * Returns if the `start` column is visible.
  * @default true
  * @public
  */
  get startColumnVisible() {
    if (this._columnLayout) {
      return !this._isColumnHidden(this._columnLayout[0]);
    }
    return false;
  }
  /**
  * Returns if the `middle` column is visible.
  * @default false
  * @public
  */
  get midColumnVisible() {
    if (this._columnLayout) {
      return !this._isColumnHidden(this._columnLayout[1]);
    }
    return false;
  }
  /**
  * Returns if the `end` column is visible.
  * @default false
  * @public
  */
  get endColumnVisible() {
    if (this._columnLayout) {
      return !this._isColumnHidden(this._columnLayout[2]);
    }
    return false;
  }
  /**
  * Returns the number of currently visible columns.
  * @default 1
  * @public
  */
  get visibleColumns() {
    return this._visibleColumns;
  }
  get startColumnWidth() {
    return this._columnLayout ? this._columnLayout[0] : "100%";
  }
  get midColumnWidth() {
    return this._columnLayout ? this._columnLayout[1] : "0px";
  }
  get endColumnWidth() {
    return this._columnLayout ? this._columnLayout[2] : "0px";
  }
  get showStartSeparator() {
    return this.effectiveSeparatorsInfo[0].visible;
  }
  get showEndSeparator() {
    return this.effectiveSeparatorsInfo[1].visible;
  }
  get showStartSeparatorGrip() {
    return this.disableResizing ? false : this.startSeparatorGripVisibility;
  }
  get showStartSeparatorArrow() {
    return this.disableResizing ? false : this.startSeparatorArrowVisibility;
  }
  get showEndSeparatorGrip() {
    return this.disableResizing ? false : this.endSeparatorGripVisibility;
  }
  get startSeparatorGripVisibility() {
    return this.effectiveSeparatorsInfo[0].gripVisible;
  }
  get endSeparatorGripVisibility() {
    return this.effectiveSeparatorsInfo[1].gripVisible;
  }
  get startSeparatorArrowVisibility() {
    return this.effectiveSeparatorsInfo[0].arrowVisible;
  }
  get startArrowDirection() {
    return this.effectiveSeparatorsInfo[0].arrowDirection;
  }
  get startArrowDOM() {
    return this.shadowRoot.querySelector(".ui5-fcl-arrow--start");
  }
  get effectiveSeparatorsInfo() {
    return this._effectiveLayoutsByMedia[this.media][this.effectiveLayout].separators;
  }
  get effectiveLayout() {
    var _a;
    return ((_a = this.separatorMovementSession) == null ? void 0 : _a.tmpFCLLayout) || this.layout;
  }
  get startSeparatorDOM() {
    return this.shadowRoot.querySelector(".ui5-fcl-separator-start");
  }
  get endSeparatorDOM() {
    return this.shadowRoot.querySelector(".ui5-fcl-separator-end");
  }
  get startSeparatorTabIndex() {
    if (this.showStartSeparatorGrip) {
      return 0;
    }
  }
  get endSeparatorTabIndex() {
    if (this.showEndSeparatorGrip) {
      return 0;
    }
    return -1;
  }
  get media() {
    if (this._width <= BREAKPOINTS.PHONE) {
      return MEDIA.PHONE;
    }
    if (this._width <= BREAKPOINTS.TABLET) {
      return MEDIA.TABLET;
    }
    return MEDIA.DESKTOP;
  }
  get widthDOM() {
    return this.getBoundingClientRect().width;
  }
  get startColumnDOM() {
    return this.shadowRoot.querySelector(".ui5-fcl-column--start");
  }
  get midColumnDOM() {
    return this.shadowRoot.querySelector(".ui5-fcl-column--middle");
  }
  get endColumnDOM() {
    return this.shadowRoot.querySelector(".ui5-fcl-column--end");
  }
  get accStartColumnText() {
    var _a;
    return ((_a = this.accessibilityAttributes.startColumn) == null ? void 0 : _a.name) || FlexibleColumnLayout_1.i18nBundle.getText(FCL_START_COLUMN_TXT);
  }
  get accMiddleColumnText() {
    var _a;
    return ((_a = this.accessibilityAttributes.midColumn) == null ? void 0 : _a.name) || FlexibleColumnLayout_1.i18nBundle.getText(FCL_MIDDLE_COLUMN_TXT);
  }
  get accEndColumnText() {
    var _a;
    return ((_a = this.accessibilityAttributes.endColumn) == null ? void 0 : _a.name) || FlexibleColumnLayout_1.i18nBundle.getText(FCL_END_COLUMN_TXT);
  }
  get accStartSeparatorText() {
    var _a;
    let name105 = (_a = this.accessibilityAttributes.startSeparator) == null ? void 0 : _a.name;
    if (!name105 && this.showStartSeparatorGrip) {
      name105 = FlexibleColumnLayout_1.i18nBundle.getText(FCL_START_SEPARATOR_TOOLTIP);
    }
    return name105;
  }
  get accEndSeparatorText() {
    var _a;
    return ((_a = this.accessibilityAttributes.endSeparator) == null ? void 0 : _a.name) || FlexibleColumnLayout_1.i18nBundle.getText(FCL_END_SEPARATOR_TOOLTIP);
  }
  get accStartColumnRole() {
    var _a;
    if (this.startColumnVisible) {
      return ((_a = this.accessibilityAttributes.startColumn) == null ? void 0 : _a.role) || "region";
    }
    return void 0;
  }
  get accMiddleColumnRole() {
    var _a;
    if (this.midColumnVisible) {
      return ((_a = this.accessibilityAttributes.midColumn) == null ? void 0 : _a.role) || "region";
    }
    return void 0;
  }
  get accEndColumnRole() {
    var _a;
    if (this.endColumnVisible) {
      return ((_a = this.accessibilityAttributes.endColumn) == null ? void 0 : _a.role) || "region";
    }
    return void 0;
  }
  get accStartSeparatorRole() {
    var _a;
    return ((_a = this.accessibilityAttributes.startSeparator) == null ? void 0 : _a.role) || "separator";
  }
  get accEndSeparatorRole() {
    var _a;
    return ((_a = this.accessibilityAttributes.endSeparator) == null ? void 0 : _a.role) || "separator";
  }
  get _effectiveLayoutsByMedia() {
    return this._layoutsConfiguration || getLayoutsByMedia();
  }
  get _accAttributes() {
    return {
      columns: {
        start: {
          role: this.accStartColumnRole,
          ariaHidden: !this.startColumnVisible || void 0
        },
        middle: {
          role: this.accMiddleColumnRole,
          ariaHidden: !this.midColumnVisible || void 0
        },
        end: {
          role: this.accEndColumnRole,
          ariaHidden: !this.endColumnVisible || void 0
        }
      }
    };
  }
};
__decorate51([
  property_default()
], FlexibleColumnLayout.prototype, "layout", void 0);
__decorate51([
  property_default({ type: Boolean })
], FlexibleColumnLayout.prototype, "disableResizing", void 0);
__decorate51([
  property_default({ type: Object })
], FlexibleColumnLayout.prototype, "accessibilityAttributes", void 0);
__decorate51([
  property_default({ type: Number })
], FlexibleColumnLayout.prototype, "_width", void 0);
__decorate51([
  property_default({ type: Array })
], FlexibleColumnLayout.prototype, "_columnLayout", void 0);
__decorate51([
  property_default({ type: Number })
], FlexibleColumnLayout.prototype, "_visibleColumns", void 0);
__decorate51([
  property_default({ type: Boolean })
], FlexibleColumnLayout.prototype, "_resizing", void 0);
__decorate51([
  property_default({ type: Object })
], FlexibleColumnLayout.prototype, "_layoutsConfiguration", void 0);
__decorate51([
  slot_default()
], FlexibleColumnLayout.prototype, "startColumn", void 0);
__decorate51([
  slot_default()
], FlexibleColumnLayout.prototype, "midColumn", void 0);
__decorate51([
  slot_default()
], FlexibleColumnLayout.prototype, "endColumn", void 0);
__decorate51([
  i18n_default("@ui5/webcomponents-fiori")
], FlexibleColumnLayout, "i18nBundle", void 0);
FlexibleColumnLayout = FlexibleColumnLayout_1 = __decorate51([
  customElement_default({
    tag: "ui5-flexible-column-layout",
    fastNavigation: true,
    renderer: JsxRenderer_default,
    styles: FlexibleColumnLayout_css_default,
    template: FlexibleColumnLayoutTemplate,
    dependencies: [Icon_default, Button_default]
  }),
  event_strict_default("layout-change", {
    bubbles: true
  })
], FlexibleColumnLayout);
FlexibleColumnLayout.define();

// node_modules/@ui5/webcomponents-react/dist/webComponents/FlexibleColumnLayout/index.js
var FlexibleColumnLayout3 = withWebComponent("ui5-flexible-column-layout", ["accessibilityAttributes", "layout"], ["disableResizing"], ["endColumn", "midColumn", "startColumn"], ["layout-change"]);
FlexibleColumnLayout3.displayName = "FlexibleColumnLayout";

// node_modules/@ui5/webcomponents/dist/FormTemplate.js
function FormTemplate() {
  return jsxs("div", { class: "ui5-form-root", role: this.effectiveAccessibleRole, "aria-labelledby": this.effectiveАccessibleNameRef, children: [this.hasHeader && jsx("div", { class: "ui5-form-header", part: "header", children: this.hasCustomHeader ? jsx("slot", { name: "header" }) : jsx(Title_default, { id: `${this._id}-header-text`, level: "H4", children: this.headerText }) }), jsx("div", { class: "ui5-form-layout", part: "layout", children: this.hasGroupItems ? jsx(Fragment, { children: this.groupItemsInfo.map((groupItemInfo) => {
    const groupItem = groupItemInfo.groupItem;
    return jsx("div", { class: {
      "ui5-form-column": true,
      [`ui5-form-column-spanL-${groupItem.colsL}`]: true,
      [`ui5-form-column-spanXL-${groupItem.colsXl}`]: true,
      [`ui5-form-column-spanM-${groupItem.colsM}`]: true,
      [`ui5-form-column-spanS-${groupItem.colsS}`]: true
    }, part: "column", children: jsxs("div", { class: "ui5-form-group", role: "form", "aria-labelledby": groupItemInfo.accessibleNameRef, children: [groupItem.headerText && jsx("div", { class: "ui5-form-group-heading", children: jsx(Title_default, { id: `${groupItem._id}-group-header-text`, level: "H6", children: groupItem.headerText }) }), jsx("div", { class: "ui5-form-group-layout", children: jsx("slot", { name: groupItem._individualSlot }) })] }) });
  }) }) : jsx(Fragment, { children: this.itemsInfo.map((itemInfo) => {
    const item2 = itemInfo.item;
    return jsx("div", { class: {
      "ui5-form-item": true,
      [`ui5-form-item-span-${item2.columnSpan}`]: item2.columnSpan !== void 0
    }, children: jsx("slot", { name: item2._individualSlot }) });
  }) }) })] });
}

// node_modules/@ui5/webcomponents/dist/generated/themes/Form.css.js
registerThemePropertiesLoader("@ui5/webcomponents-theming", "sap_horizon", async () => parameters_bundle_css_default);
registerThemePropertiesLoader("@ui5/webcomponents", "sap_horizon", async () => parameters_bundle_css_default2);
var Form_css_default = `@container (max-width: 600px){.ui5-form-layout{grid-template-columns:1fr}::slotted(*){justify-self:start}::slotted(:nth-child(2n)){margin-bottom:.5rem}}@container (width > 600px) and (width <= 1024px){.ui5-form-layout{grid-template-columns:1fr}:host([columns-m="1"]) .ui5-form-layout{grid-template-columns:1fr}:host([columns-m="2"]) .ui5-form-layout{grid-template-columns:repeat(2,1fr)}.ui5-form-column-spanM-2{grid-column:span 2}.ui5-form-column-spanM-2 .ui5-form-group-layout{grid-template-columns:repeat(2,1fr)}}@container (width > 1024px) and (width <= 1440px){.ui5-form-layout{grid-template-columns:repeat(2,1fr)}.ui5-form-column{grid-template-columns:1fr}:host([columns-l="1"]) .ui5-form-layout{grid-template-columns:1fr}:host([columns-l="2"]) .ui5-form-layout{grid-template-columns:repeat(2,1fr)}:host([columns-l="3"]) .ui5-form-layout{grid-template-columns:repeat(3,1fr)}.ui5-form-column-spanL-2{grid-column:span 2}.ui5-form-column-spanL-2 .ui5-form-group-layout{grid-template-columns:repeat(2,1fr)}.ui5-form-column-spanL-3{grid-column:span 3}.ui5-form-column-spanL-3 .ui5-form-group-layout{grid-template-columns:repeat(3,1fr)}}@container (min-width: 1441px){.ui5-form-layout{grid-template-columns:repeat(3,1fr)}:host([columns-xl="1"]) .ui5-form-layout{grid-template-columns:1fr}:host([columns-xl="2"]) .ui5-form-layout{grid-template-columns:repeat(2,1fr)}:host([columns-xl="3"]) .ui5-form-layout{grid-template-columns:repeat(3,1fr)}:host([columns-xl="4"]) .ui5-form-layout{grid-template-columns:repeat(4,1fr)}:host([columns-xl="5"]) .ui5-form-layout{grid-template-columns:repeat(5,1fr)}:host([columns-xl="6"]) .ui5-form-layout{grid-template-columns:repeat(6,1fr)}.ui5-form-column-spanXL-2{grid-column:span 2}.ui5-form-column-spanXL-2 .ui5-form-group-layout{grid-template-columns:repeat(2,1fr)}.ui5-form-column-spanXL-3{grid-column:span 3}.ui5-form-column-spanXL-3 .ui5-form-group-layout{grid-template-columns:repeat(3,1fr)}.ui5-form-column-spanXL-4{grid-column:span 4}.ui5-form-column-spanXL-4 .ui5-form-group-layout{grid-template-columns:repeat(4,1fr)}.ui5-form-column-spanXL-5{grid-column:span 5}.ui5-form-column-spanXL-5 .ui5-form-group-layout{grid-template-columns:repeat(5,1fr)}.ui5-form-column-spanXL-6{grid-column:span 6}.ui5-form-column-spanXL-6 .ui5-form-group-layout{grid-template-columns:repeat(6,1fr)}}.ui5-form-item-span-2{grid-column:span 2}.ui5-form-item-span-3{grid-column:span 3}.ui5-form-item-span-4{grid-column:span 4}.ui5-form-item-span-5{grid-column:span 5}.ui5-form-item-span-6{grid-column:span 6}@container (max-width: 600px){.ui5-form-item,.ui5-form-group{--ui5-v2-8-0-form-item-layout: var(--ui5-v2-8-0-form-item-layout-S)}:host([label-span-s="12"]) .ui5-form-item,:host([label-span-s="12"]) .ui5-form-group{--ui5-v2-8-0-form-item-label-justify: var(--ui5-v2-8-0-form-item-label-justify-span12);--ui5-v2-8-0-form-item-label-padding: var(--ui5-v2-8-0-form-item-label-padding-span12)}}@container (width > 600px) and (width <= 1024px){.ui5-form-item,.ui5-form-group{--ui5-v2-8-0-form-item-layout: var(--ui5-v2-8-0-form-item-layout-M)}:host([label-span-m="12"]) .ui5-form-item,:host([label-span-m="12"]) .ui5-form-group{--ui5-v2-8-0-form-item-label-justify: var(--ui5-v2-8-0-form-item-label-justify-span12);--ui5-v2-8-0-form-item-label-padding: var(--ui5-v2-8-0-form-item-label-padding-span12)}}@container (width > 1024px) and (width <= 1440px){.ui5-form-item,.ui5-form-group{--ui5-v2-8-0-form-item-layout: var(--ui5-v2-8-0-form-item-layout-L)}:host([label-span-l="12"]) .ui5-form-item,:host([label-span-l="12"]) .ui5-form-group{--ui5-v2-8-0-form-item-label-justify: var(--ui5-v2-8-0-form-item-label-justify-span12);--ui5-v2-8-0-form-item-label-padding: var(--ui5-v2-8-0-form-item-label-padding-span12)}}@container (min-width: 1441px){.ui5-form-item,.ui5-form-group{--ui5-v2-8-0-form-item-layout: var(--ui5-v2-8-0-form-item-layout-XL)}:host([label-span-xl="12"]) .ui5-form-item,:host([label-span-xl="12"]) .ui5-form-group{--ui5-v2-8-0-form-item-label-justify: var(--ui5-v2-8-0-form-item-label-justify-span12);--ui5-v2-8-0-form-item-label-padding: var(--ui5-v2-8-0-form-item-label-padding-span12)}}:host{display:block}.ui5-form-root{display:flex;flex-direction:column;background-color:var(--sapGroup_ContentBackground);border-radius:.75rem;container-type:inline-size}.ui5-form-header{display:flex;min-height:2.75rem;align-items:center;border-bottom:1px solid var(--sapGroup_TitleBorderColor);padding:.875rem 1rem;box-sizing:border-box}.ui5-form-layout{display:grid;column-gap:1rem;row-gap:.125rem;padding:1rem .75rem}.ui5-form-group-layout{display:grid;column-gap:1rem}.ui5-form-group-heading{height:var(--_ui5-v2-8-0-form-group-heading-height);line-height:var(--_ui5-v2-8-0-form-group-heading-height);padding-inline-start:.25rem}.ui5-form-column{padding-top:.5rem;padding-bottom:1rem;box-sizing:border-box}::slotted([ui5-form-group]){display:contents}
`;

// node_modules/@ui5/webcomponents/dist/Form.js
var __decorate52 = function(decorators, target, key, desc) {
  var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
  if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
  else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
  return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var additionalStylesMap = /* @__PURE__ */ new Map();
var StepColumn = {
  "S": 1,
  "M": 2,
  "L": 3,
  "XL": 6
};
var breakpoints = ["S", "M", "L", "Xl"];
var MAX_FORM_ITEM_CELLS = 12;
var DEFAULT_FORM_ITEM_LAYOUT = "4fr 8fr 0fr";
var DEFAULT_FORM_ITEM_LAYOUT_S = "1fr";
var Form = class Form2 extends UI5Element_default {
  constructor() {
    super(...arguments);
    this.layout = "S1 M1 L2 XL3";
    this.labelSpan = "S12 M4 L4 XL4";
    this.emptySpan = "S0 M0 L0 XL0";
    this.itemSpacing = "Normal";
    this.columnsS = 1;
    this.labelSpanS = 12;
    this.emptySpanS = 0;
    this.columnsM = 1;
    this.labelSpanM = 4;
    this.emptySpanM = 0;
    this.columnsL = 2;
    this.labelSpanL = 4;
    this.emptySpanL = 0;
    this.columnsXl = 3;
    this.labelSpanXl = 4;
    this.emptySpanXl = 0;
  }
  onBeforeRendering() {
    this.setColumnLayout();
    this.setFormItemLayout();
    this.setGroupsColSpan();
  }
  onAfterRendering() {
    this.createAdditionalCSSStyleSheet();
    this.setFastNavGroup();
  }
  setColumnLayout() {
    const layoutArr = this.layout.split(" ");
    layoutArr.forEach((breakpoint) => {
      if (breakpoint.startsWith("S")) {
        this.columnsS = parseInt(breakpoint.slice(1));
      } else if (breakpoint.startsWith("M")) {
        this.columnsM = parseInt(breakpoint.slice(1));
      } else if (breakpoint.startsWith("L")) {
        this.columnsL = parseInt(breakpoint.slice(1));
      } else if (breakpoint.startsWith("XL")) {
        this.columnsXl = parseInt(breakpoint.slice(2));
      }
    });
  }
  parseFormItemSpan() {
    this.labelSpan.split(" ").forEach((breakpoint) => {
      if (breakpoint.startsWith("S")) {
        this.labelSpanS = parseInt(breakpoint.slice(1));
      } else if (breakpoint.startsWith("M")) {
        this.labelSpanM = parseInt(breakpoint.slice(1));
      } else if (breakpoint.startsWith("L")) {
        this.labelSpanL = parseInt(breakpoint.slice(1));
      } else if (breakpoint.startsWith("XL")) {
        this.labelSpanXl = parseInt(breakpoint.slice(2));
      }
    });
    this.emptySpan.split(" ").forEach((breakpoint) => {
      if (breakpoint.startsWith("S")) {
        this.emptySpanS = parseInt(breakpoint.slice(1));
      } else if (breakpoint.startsWith("M")) {
        this.emptySpanM = parseInt(breakpoint.slice(1));
      } else if (breakpoint.startsWith("L")) {
        this.emptySpanL = parseInt(breakpoint.slice(1));
      } else if (breakpoint.startsWith("XL")) {
        this.emptySpanXl = parseInt(breakpoint.slice(2));
      }
    });
  }
  setFormItemLayout() {
    this.parseFormItemSpan();
    [
      {
        breakpoint: "S",
        labelSpan: this.labelSpanS,
        emptySpan: this.emptySpanS
      },
      {
        breakpoint: "M",
        labelSpan: this.labelSpanM,
        emptySpan: this.emptySpanM
      },
      {
        breakpoint: "L",
        labelSpan: this.labelSpanL,
        emptySpan: this.emptySpanL
      },
      {
        breakpoint: "XL",
        labelSpan: this.labelSpanXl,
        emptySpan: this.emptySpanXl
      }
    ].forEach((layout) => {
      if (this.isValidFormItemLayout(layout.labelSpan, layout.emptySpan)) {
        const formItemLayout = layout.labelSpan === MAX_FORM_ITEM_CELLS ? `1fr` : `${layout.labelSpan}fr ${MAX_FORM_ITEM_CELLS - (layout.labelSpan + layout.emptySpan)}fr ${layout.emptySpan}fr`;
        this.style.setProperty(getScopedVarName(`--ui5-form-item-layout-${layout.breakpoint}`), formItemLayout);
      } else {
        console.warn(`Form :: invalid usage of emptySpan and/or labelSpan in ${layout.breakpoint} size. The labelSpan must be <=12 and when emptySpace is used - their combined values must not exceed 11.`);
        this.style.setProperty(getScopedVarName(`--ui5-form-item-layout-${layout.breakpoint}`), layout.breakpoint === "S" ? DEFAULT_FORM_ITEM_LAYOUT_S : DEFAULT_FORM_ITEM_LAYOUT);
      }
    });
  }
  isValidFormItemLayout(labelSpan, emptySpan) {
    return emptySpan === 0 ? labelSpan <= MAX_FORM_ITEM_CELLS : labelSpan + emptySpan <= MAX_FORM_ITEM_CELLS - 1;
  }
  setFastNavGroup() {
    if (this.hasGroupItems) {
      this.removeAttribute("data-sap-ui-fastnavgroup");
    } else {
      this.setAttribute("data-sap-ui-fastnavgroup", "true");
    }
  }
  setGroupsColSpan() {
    if (!this.hasGroupItems) {
      return;
    }
    const itemsCount = this.items.length;
    const sortedItems = [...this.items].sort((itemA, itemB) => {
      return (itemB == null ? void 0 : itemB.items.length) - (itemA == null ? void 0 : itemA.items.length);
    });
    sortedItems.forEach((item2, idx) => {
      item2.colsXl = this.getGroupsColSpan(this.columnsXl, itemsCount, idx, item2);
      item2.colsL = this.getGroupsColSpan(this.columnsL, itemsCount, idx, item2);
      item2.colsM = this.getGroupsColSpan(this.columnsM, itemsCount, idx, item2);
      item2.colsS = this.getGroupsColSpan(this.columnsS, itemsCount, idx, item2);
    });
  }
  getGroupsColSpan(cols, groups, index, group) {
    if (group.columnSpan) {
      return group.columnSpan;
    }
    if (cols === 1 || cols <= groups) {
      return 1;
    }
    if (cols % groups === 0) {
      return cols / groups;
    }
    const MIN_COL_SPAN = 1;
    const delta = cols - groups;
    if (delta <= groups) {
      return index < delta ? MIN_COL_SPAN + 1 : MIN_COL_SPAN;
    }
    return index === 0 ? MIN_COL_SPAN + (delta - groups) + 1 : MIN_COL_SPAN + 1;
  }
  get hasGroupItems() {
    return this.items.some((item2) => item2.isGroup);
  }
  get hasHeader() {
    return this.hasCustomHeader || !!this.headerText;
  }
  get hasCustomHeader() {
    return !!this.header.length;
  }
  get effectiveАccessibleNameRef() {
    return this.hasCustomHeader ? void 0 : `${this._id}-header-text`;
  }
  get effectiveAccessibleRole() {
    return this.hasGroupItems ? "region" : "form";
  }
  get groupItemsInfo() {
    return this.items.map((groupItem) => {
      const items3 = this.getItemsInfo(Array.from(groupItem.children));
      breakpoints.forEach((breakpoint) => {
        const cols = groupItem[`cols${breakpoint}`] || 1;
        const rows = Math.ceil(items3.length / cols);
        const total = cols * rows;
        const lastRowColumns = cols - (total - items3.length) - 1;
        let currentItem = 0;
        for (let i = 0; i < total; i++) {
          const column = Math.floor(i / rows);
          const row = i % rows;
          if (row === rows - 1 && column > lastRowColumns) {
            continue;
          }
          items3[currentItem].item.style.setProperty(getScopedVarName(`--ui5-form-item-order-${breakpoint}`), `${column + row * cols}`);
          currentItem++;
        }
      });
      return {
        groupItem,
        accessibleNameRef: groupItem.headerText ? `${groupItem._id}-group-header-text` : void 0,
        items: this.getItemsInfo(Array.from(groupItem.children))
      };
    });
  }
  get itemsInfo() {
    return this.getItemsInfo();
  }
  getItemsInfo(items3) {
    return (items3 || this.items).map((item2) => {
      return {
        item: item2,
        // eslint-disable-next-line
        // TODO: remove classes and classMap after deleting the hbs template
        classes: item2.columnSpan ? `ui5-form-item-span-${item2.columnSpan}` : "",
        classMap: {
          [`ui5-form-item-span-${item2.columnSpan}`]: item2.columnSpan !== void 0
        }
      };
    });
  }
  createAdditionalCSSStyleSheet() {
    [
      { breakpoint: "S", columns: this.columnsS },
      { breakpoint: "M", columns: this.columnsM },
      { breakpoint: "L", columns: this.columnsL },
      { breakpoint: "XL", columns: this.columnsXl }
    ].forEach((step) => {
      const additionalStyle = this.getAdditionalCSS(step.breakpoint, step.columns);
      if (additionalStyle) {
        this.shadowRoot.adoptedStyleSheets = [...this.shadowRoot.adoptedStyleSheets, this.getCSSStyleSheet(additionalStyle)];
      }
    });
  }
  getAdditionalCSS(step, colsNumber) {
    if (StepColumn[step] >= colsNumber) {
      return;
    }
    const key = `${step}-${colsNumber}`;
    if (!additionalStylesMap.has(key)) {
      let containerQuery;
      let supporedColumnsNumber = StepColumn.S;
      let stepSpanCSS = "";
      let cols = colsNumber;
      if (step === "S") {
        supporedColumnsNumber = StepColumn.S;
        containerQuery = `@container (max-width: 599px) {`;
      } else if (step === "M") {
        supporedColumnsNumber = StepColumn.M;
        containerQuery = `@container (width > 599px) and (width < 1024px) {`;
      } else if (step === "L") {
        supporedColumnsNumber = StepColumn.L;
        containerQuery = `@container (width > 1023px) and (width < 1439px) {`;
      } else if (step === "XL") {
        containerQuery = `@container (min-width: 1440px) {`;
        supporedColumnsNumber = StepColumn.XL;
      }
      while (cols > supporedColumnsNumber) {
        stepSpanCSS += `
				:host([columns-${step.toLocaleLowerCase()}="${cols}"]) .ui5-form-layout {
					grid-template-columns: repeat(${cols}, 1fr);
				}

				.ui5-form-column-span${step}-${cols},
				.ui5-form-item-span-${cols} {
					grid-column: span ${cols};
				}

				.ui5-form-column-span${step}-${cols} .ui5-form-group-layout {
					grid-template-columns: repeat(${cols}, 1fr);
				}
				`;
        cols--;
      }
      const css = `${containerQuery}${stepSpanCSS}}`;
      additionalStylesMap.set(key, css);
    }
    return additionalStylesMap.get(key);
  }
  getCSSStyleSheet(cssText) {
    const style = new CSSStyleSheet();
    style.replaceSync(cssText);
    return style;
  }
};
__decorate52([
  property_default()
], Form.prototype, "layout", void 0);
__decorate52([
  property_default()
], Form.prototype, "labelSpan", void 0);
__decorate52([
  property_default()
], Form.prototype, "emptySpan", void 0);
__decorate52([
  property_default()
], Form.prototype, "headerText", void 0);
__decorate52([
  property_default()
], Form.prototype, "itemSpacing", void 0);
__decorate52([
  slot_default({ type: HTMLElement })
], Form.prototype, "header", void 0);
__decorate52([
  slot_default({
    type: HTMLElement,
    "default": true,
    individualSlots: true,
    invalidateOnChildChange: true
  })
], Form.prototype, "items", void 0);
__decorate52([
  property_default({ type: Number })
], Form.prototype, "columnsS", void 0);
__decorate52([
  property_default({ type: Number })
], Form.prototype, "labelSpanS", void 0);
__decorate52([
  property_default({ type: Number })
], Form.prototype, "emptySpanS", void 0);
__decorate52([
  property_default({ type: Number })
], Form.prototype, "columnsM", void 0);
__decorate52([
  property_default({ type: Number })
], Form.prototype, "labelSpanM", void 0);
__decorate52([
  property_default({ type: Number })
], Form.prototype, "emptySpanM", void 0);
__decorate52([
  property_default({ type: Number })
], Form.prototype, "columnsL", void 0);
__decorate52([
  property_default({ type: Number })
], Form.prototype, "labelSpanL", void 0);
__decorate52([
  property_default({ type: Number })
], Form.prototype, "emptySpanL", void 0);
__decorate52([
  property_default({ type: Number })
], Form.prototype, "columnsXl", void 0);
__decorate52([
  property_default({ type: Number })
], Form.prototype, "labelSpanXl", void 0);
__decorate52([
  property_default({ type: Number })
], Form.prototype, "emptySpanXl", void 0);
Form = __decorate52([
  customElement_default({
    tag: "ui5-form",
    renderer: JsxRenderer_default,
    styles: Form_css_default,
    template: FormTemplate
  })
], Form);
Form.define();

// node_modules/@ui5/webcomponents-react/dist/webComponents/Form/index.js
var Form3 = withWebComponent("ui5-form", ["emptySpan", "headerText", "itemSpacing", "labelSpan", "layout"], [], ["header"], []);
Form3.displayName = "Form";

// node_modules/@ui5/webcomponents/dist/FormGroup.js
var __decorate53 = function(decorators, target, key, desc) {
  var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
  if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
  else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
  return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var FormGroup = class FormGroup2 extends UI5Element_default {
  constructor() {
    super(...arguments);
    this.colsS = 1;
    this.colsM = 1;
    this.colsL = 1;
    this.colsXl = 1;
    this.itemSpacing = "Normal";
  }
  onBeforeRendering() {
    this.processFormItems();
  }
  processFormItems() {
    this.items.forEach((item2) => {
      item2.itemSpacing = this.itemSpacing;
    });
  }
  get isGroup() {
    return true;
  }
};
__decorate53([
  property_default()
], FormGroup.prototype, "headerText", void 0);
__decorate53([
  property_default({ type: Number })
], FormGroup.prototype, "columnSpan", void 0);
__decorate53([
  slot_default({
    type: HTMLElement,
    "default": true
  })
], FormGroup.prototype, "items", void 0);
__decorate53([
  property_default({ type: Number })
], FormGroup.prototype, "colsS", void 0);
__decorate53([
  property_default({ type: Number })
], FormGroup.prototype, "colsM", void 0);
__decorate53([
  property_default({ type: Number })
], FormGroup.prototype, "colsL", void 0);
__decorate53([
  property_default({ type: Number })
], FormGroup.prototype, "colsXl", void 0);
__decorate53([
  property_default()
], FormGroup.prototype, "itemSpacing", void 0);
FormGroup = __decorate53([
  customElement_default({
    tag: "ui5-form-group",
    fastNavigation: true
  })
], FormGroup);
FormGroup.define();

// node_modules/@ui5/webcomponents-react/dist/webComponents/FormGroup/index.js
var FormGroup3 = withWebComponent("ui5-form-group", ["columnSpan", "headerText"], [], [], []);
FormGroup3.displayName = "FormGroup";

// node_modules/@ui5/webcomponents/dist/FormItemTemplate.js
function FormItemTemplate() {
  return jsx("div", { class: "ui5-form-item-root", children: jsxs("div", { class: "ui5-form-item-layout", part: "layout", children: [jsx("div", { class: "ui5-form-item-label", part: "label", children: jsx("slot", { name: "labelContent" }) }), jsx("div", { class: "ui5-form-item-content", part: "content", children: this.content.map((item2) => jsx("div", { class: "ui5-form-item-content-child", children: jsx("slot", { name: item2._individualSlot }) })) })] }) });
}

// node_modules/@ui5/webcomponents/dist/generated/themes/FormItem.css.js
registerThemePropertiesLoader("@ui5/webcomponents-theming", "sap_horizon", async () => parameters_bundle_css_default);
registerThemePropertiesLoader("@ui5/webcomponents", "sap_horizon", async () => parameters_bundle_css_default2);
var FormItem_css_default = `:host([column-span="1"]){grid-column:span 1}:host([column-span="2"]){grid-column:span 2}:host([column-span="3"]){grid-column:span 3}:host([column-span="4"]){grid-column:span 4}:host([column-span="5"]){grid-column:span 5}:host([column-span="6"]){grid-column:span 6}.ui5-form-item-root{container-type:inline-size;background-color:inherit;color:inherit}.ui5-form-item-layout{display:grid;grid-template-columns:var(--ui5-v2-8-0-form-item-layout);align-items:center}.ui5-form-item-label{padding:var(--ui5-v2-8-0-form-item-label-padding);padding-inline-end:var(--ui5-v2-8-0-form-item-label-padding-end);justify-self:var(--ui5-v2-8-0-form-item-label-justify)}.ui5-form-item-content{overflow:hidden;width:100%;display:flex;padding:0 .25rem}.ui5-form-item-content-child{padding-inline-end:.5rem;box-sizing:border-box;width:100%}:host([item-spacing="Large"]) .ui5-form-item-layout{min-height:var(--_ui5-v2-8-0_form_item_min_height);padding-top:var(--_ui5-v2-8-0_form_item_padding);padding-bottom:var(--_ui5-v2-8-0_form_item_padding);box-sizing:border-box}::slotted(*){width:100%}@container (max-width: 600px){:host{order:var(--ui5-v2-8-0-form-item-order-S, unset)}}@container (width > 600px) and (width <= 1024px){:host{order:var(--ui5-v2-8-0-form-item-order-M, unset)}}@container (width > 1024px) and (width <= 1440px){:host{order:var(--ui5-v2-8-0-form-item-order-L, unset)}}@container (min-width: 1441px){:host{order:var(--ui5-v2-8-0-form-item-order-Xl, unset)}}
`;

// node_modules/@ui5/webcomponents/dist/FormItem.js
var __decorate54 = function(decorators, target, key, desc) {
  var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
  if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
  else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
  return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var FormItem = class FormItem2 extends UI5Element_default {
  constructor() {
    super(...arguments);
    this.itemSpacing = "Normal";
  }
  get isGroup() {
    return false;
  }
};
__decorate54([
  property_default({ type: Number })
], FormItem.prototype, "columnSpan", void 0);
__decorate54([
  slot_default()
], FormItem.prototype, "labelContent", void 0);
__decorate54([
  slot_default({
    type: HTMLElement,
    "default": true,
    individualSlots: true
  })
], FormItem.prototype, "content", void 0);
__decorate54([
  property_default()
], FormItem.prototype, "itemSpacing", void 0);
FormItem = __decorate54([
  customElement_default({
    tag: "ui5-form-item",
    renderer: JsxRenderer_default,
    styles: FormItem_css_default,
    template: FormItemTemplate
  })
], FormItem);
FormItem.define();

// node_modules/@ui5/webcomponents-react/dist/webComponents/FormItem/index.js
var FormItem3 = withWebComponent("ui5-form-item", ["columnSpan"], [], ["labelContent"], []);
FormItem3.displayName = "FormItem";

// node_modules/@ui5/webcomponents-react/dist/webComponents/Icon/index.js
var Icon = withWebComponent("ui5-icon", ["accessibleName", "design", "mode", "name"], ["showTooltip"], [], []);
Icon.displayName = "Icon";

// node_modules/@ui5/webcomponents-base/dist/asset-registries/Illustrations.js
var IllustrationCollections = /* @__PURE__ */ new Map([
  ["sap_horizon", "V5"],
  ["sap_horizon_dark", "V5"],
  ["sap_horizon_hcb", "V5/HC"],
  ["sap_horizon_hcw", "V5/HC"]
]);
var FALLBACK_COLLECTION = "V4";
var loaders = /* @__PURE__ */ new Map();
var registry = getSharedResource_default("SVGIllustration.registry", /* @__PURE__ */ new Map());
var illustrationPromises = getSharedResource_default("SVGIllustration.promises", /* @__PURE__ */ new Map());
var getCollection = () => {
  const theme = getTheme();
  if (IllustrationCollections.has(theme)) {
    return IllustrationCollections.get(theme);
  }
  return FALLBACK_COLLECTION;
};
var processName = (name105) => {
  let collection104 = getCollection();
  const [set4, illustrationName] = name105.split("/");
  let registryKey = `${set4}/${collection104}/${illustrationName}`;
  if (!loaders.has(registryKey) && collection104 !== FALLBACK_COLLECTION) {
    collection104 = FALLBACK_COLLECTION;
    registryKey = `${set4}/${collection104}/${illustrationName}`;
  }
  return {
    registryKey,
    collection: collection104
  };
};
var registerIllustration = (name105, data) => {
  const collection104 = data.collection || FALLBACK_COLLECTION;
  registry.set(`${data.set}/${collection104}/${name105}`, {
    dialogSvg: data.dialogSvg,
    sceneSvg: data.sceneSvg,
    spotSvg: data.spotSvg,
    dotSvg: data.dotSvg,
    title: data.title,
    subtitle: data.subtitle
  });
};
var _loadIllustrationOnce = (illustrationName) => {
  const { registryKey } = processName(illustrationName);
  if (!illustrationPromises.has(registryKey)) {
    if (!loaders.has(registryKey)) {
      const illustrationPath = illustrationName.startsWith("fiori/") ? illustrationName.replace("fiori/", "") : illustrationName;
      throw new Error(`No loader registered for the ${illustrationName} illustration. Probably you forgot to import the "@ui5/webcomponents-fiori/dist/illustrations/${illustrationPath}.js" module. Or you can import the "@ui5/webcomponents-fiori/dist/illustrations/AllIllustrations.js" module that will make all illustrations available, but fetch only the ones used.`);
    }
    const loadIllustrations = loaders.get(registryKey);
    illustrationPromises.set(registryKey, loadIllustrations(registryKey));
  }
  return illustrationPromises.get(registryKey);
};
var getIllustrationDataSync = (illustrationName) => {
  const { registryKey } = processName(illustrationName);
  return registry.get(registryKey);
};
var getIllustrationData = async (illustrationName) => {
  const { registryKey } = processName(illustrationName);
  await _loadIllustrationOnce(illustrationName);
  return registry.get(registryKey);
};

// node_modules/@ui5/webcomponents-fiori/dist/types/IllustrationMessageDesign.js
var IllustrationMessageDesign;
(function(IllustrationMessageDesign2) {
  IllustrationMessageDesign2["Auto"] = "Auto";
  IllustrationMessageDesign2["Base"] = "Base";
  IllustrationMessageDesign2["Dot"] = "Dot";
  IllustrationMessageDesign2["Spot"] = "Spot";
  IllustrationMessageDesign2["Dialog"] = "Dialog";
  IllustrationMessageDesign2["Scene"] = "Scene";
})(IllustrationMessageDesign || (IllustrationMessageDesign = {}));
var IllustrationMessageDesign_default = IllustrationMessageDesign;

// node_modules/@ui5/webcomponents-fiori/dist/types/IllustrationMessageType.js
var IllustrationMessageType;
(function(IllustrationMessageType2) {
  IllustrationMessageType2["BeforeSearch"] = "BeforeSearch";
  IllustrationMessageType2["NewMail"] = "NewMail";
  IllustrationMessageType2["NoActivities"] = "NoActivities";
  IllustrationMessageType2["NoColumnsSet"] = "NoColumnsSet";
  IllustrationMessageType2["NoData"] = "NoData";
  IllustrationMessageType2["NoMail"] = "NoMail";
  IllustrationMessageType2["NoMail_v1"] = "NoMail_v1";
  IllustrationMessageType2["NoEntries"] = "NoEntries";
  IllustrationMessageType2["NoNotifications"] = "NoNotifications";
  IllustrationMessageType2["NoSavedItems"] = "NoSavedItems";
  IllustrationMessageType2["NoSavedItems_v1"] = "NoSavedItems_v1";
  IllustrationMessageType2["NoSearchResults"] = "NoSearchResults";
  IllustrationMessageType2["NoTasks"] = "NoTasks";
  IllustrationMessageType2["NoTasks_v1"] = "NoTasks_v1";
  IllustrationMessageType2["NoDimensionsSet"] = "NoDimensionsSet";
  IllustrationMessageType2["UnableToLoad"] = "UnableToLoad";
  IllustrationMessageType2["UnableToLoadImage"] = "UnableToLoadImage";
  IllustrationMessageType2["UnableToUpload"] = "UnableToUpload";
  IllustrationMessageType2["UploadToCloud"] = "UploadToCloud";
  IllustrationMessageType2["AddColumn"] = "AddColumn";
  IllustrationMessageType2["AddPeople"] = "AddPeople";
  IllustrationMessageType2["AddDimensions"] = "AddDimensions";
  IllustrationMessageType2["BalloonSky"] = "BalloonSky";
  IllustrationMessageType2["Connection"] = "Connection";
  IllustrationMessageType2["EmptyCalendar"] = "EmptyCalendar";
  IllustrationMessageType2["EmptyList"] = "EmptyList";
  IllustrationMessageType2["EmptyPlanningCalendar"] = "EmptyPlanningCalendar";
  IllustrationMessageType2["ErrorScreen"] = "ErrorScreen";
  IllustrationMessageType2["FilterTable"] = "FilterTable";
  IllustrationMessageType2["GroupTable"] = "GroupTable";
  IllustrationMessageType2["NoFilterResults"] = "NoFilterResults";
  IllustrationMessageType2["PageNotFound"] = "PageNotFound";
  IllustrationMessageType2["ReloadScreen"] = "ReloadScreen";
  IllustrationMessageType2["ResizeColumn"] = "ResizeColumn";
  IllustrationMessageType2["SearchEarth"] = "SearchEarth";
  IllustrationMessageType2["SearchFolder"] = "SearchFolder";
  IllustrationMessageType2["SignOut"] = "SignOut";
  IllustrationMessageType2["SimpleBalloon"] = "SimpleBalloon";
  IllustrationMessageType2["SimpleBell"] = "SimpleBell";
  IllustrationMessageType2["SimpleCalendar"] = "SimpleCalendar";
  IllustrationMessageType2["SimpleCheckMark"] = "SimpleCheckMark";
  IllustrationMessageType2["SimpleConnection"] = "SimpleConnection";
  IllustrationMessageType2["SimpleEmptyDoc"] = "SimpleEmptyDoc";
  IllustrationMessageType2["SimpleEmptyList"] = "SimpleEmptyList";
  IllustrationMessageType2["SimpleError"] = "SimpleError";
  IllustrationMessageType2["SimpleMagnifier"] = "SimpleMagnifier";
  IllustrationMessageType2["SimpleMail"] = "SimpleMail";
  IllustrationMessageType2["SimpleNoSavedItems"] = "SimpleNoSavedItems";
  IllustrationMessageType2["SimpleNotFoundMagnifier"] = "SimpleNotFoundMagnifier";
  IllustrationMessageType2["SimpleReload"] = "SimpleReload";
  IllustrationMessageType2["SimpleTask"] = "SimpleTask";
  IllustrationMessageType2["SleepingBell"] = "SleepingBell";
  IllustrationMessageType2["SortColumn"] = "SortColumn";
  IllustrationMessageType2["SuccessBalloon"] = "SuccessBalloon";
  IllustrationMessageType2["SuccessCheckMark"] = "SuccessCheckMark";
  IllustrationMessageType2["SuccessHighFive"] = "SuccessHighFive";
  IllustrationMessageType2["SuccessScreen"] = "SuccessScreen";
  IllustrationMessageType2["Survey"] = "Survey";
  IllustrationMessageType2["Tent"] = "Tent";
  IllustrationMessageType2["UploadCollection"] = "UploadCollection";
  IllustrationMessageType2["TntAvatar"] = "TntAvatar";
  IllustrationMessageType2["TntCalculator"] = "TntCalculator";
  IllustrationMessageType2["TntChartArea"] = "TntChartArea";
  IllustrationMessageType2["TntChartArea2"] = "TntChartArea2";
  IllustrationMessageType2["TntChartBar"] = "TntChartBar";
  IllustrationMessageType2["TntChartBPMNFlow"] = "TntChartBPMNFlow";
  IllustrationMessageType2["TntChartBullet"] = "TntChartBullet";
  IllustrationMessageType2["TntChartDoughnut"] = "TntChartDoughnut";
  IllustrationMessageType2["TntChartFlow"] = "TntChartFlow";
  IllustrationMessageType2["TntChartGantt"] = "TntChartGantt";
  IllustrationMessageType2["TntChartOrg"] = "TntChartOrg";
  IllustrationMessageType2["TntChartPie"] = "TntChartPie";
  IllustrationMessageType2["TntCodePlaceholder"] = "TntCodePlaceholder";
  IllustrationMessageType2["TntCompany"] = "TntCompany";
  IllustrationMessageType2["TntCompass"] = "TntCompass";
  IllustrationMessageType2["TntComponents"] = "TntComponents";
  IllustrationMessageType2["TntDialog"] = "TntDialog";
  IllustrationMessageType2["TntExternalLink"] = "TntExternalLink";
  IllustrationMessageType2["TntFaceID"] = "TntFaceID";
  IllustrationMessageType2["TntFingerprint"] = "TntFingerprint";
  IllustrationMessageType2["TntHandshake"] = "TntHandshake";
  IllustrationMessageType2["TntHelp"] = "TntHelp";
  IllustrationMessageType2["TntLock"] = "TntLock";
  IllustrationMessageType2["TntMission"] = "TntMission";
  IllustrationMessageType2["TntMissionFailed"] = "TntMissionFailed";
  IllustrationMessageType2["TntNoApplications"] = "TntNoApplications";
  IllustrationMessageType2["TntNoFlows"] = "TntNoFlows";
  IllustrationMessageType2["TntNoUsers"] = "TntNoUsers";
  IllustrationMessageType2["TntRadar"] = "TntRadar";
  IllustrationMessageType2["TntRoadMap"] = "TntRoadMap";
  IllustrationMessageType2["TntSecrets"] = "TntSecrets";
  IllustrationMessageType2["TntServices"] = "TntServices";
  IllustrationMessageType2["TntSessionExpired"] = "TntSessionExpired";
  IllustrationMessageType2["TntSessionExpiring"] = "TntSessionExpiring";
  IllustrationMessageType2["TntSettings"] = "TntSettings";
  IllustrationMessageType2["TntSuccess"] = "TntSuccess";
  IllustrationMessageType2["TntSuccessfulAuth"] = "TntSuccessfulAuth";
  IllustrationMessageType2["TntSystems"] = "TntSystems";
  IllustrationMessageType2["TntTeams"] = "TntTeams";
  IllustrationMessageType2["TntTools"] = "TntTools";
  IllustrationMessageType2["TntTutorials"] = "TntTutorials";
  IllustrationMessageType2["TntUnableToLoad"] = "TntUnableToLoad";
  IllustrationMessageType2["TntUnlock"] = "TntUnlock";
  IllustrationMessageType2["TntUnsuccessfulAuth"] = "TntUnsuccessfulAuth";
  IllustrationMessageType2["TntUser2"] = "TntUser2";
})(IllustrationMessageType || (IllustrationMessageType = {}));
var IllustrationMessageType_default = IllustrationMessageType;

// node_modules/@ui5/webcomponents-fiori/dist/illustrations/sapIllus-Dialog-BeforeSearch.js
var sapIllus_Dialog_BeforeSearch_default = `<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" width="160" height="160" viewBox="0 0 160 160" id="sapIllus-Dialog-BeforeSearch">
      <path class="sapIllus_AccentColor" d="M132.6937,27.73c-3.2533-1.26-4.83-4.3131-6.05-7.4252A.4783.4783,0,0,0,126.2047,20a.5881.5881,0,0,0-.4465.2938c-1.6253,3.8672-4.04,5.8423-6.8353,8.13l-.0664.0545a.481.481,0,0,0,.2027.8428c2.5332.54,6.303,5.2112,6.303,7.81a.4778.4778,0,0,0,.9369.1352c.8192-2.8039,3.1973-7.4187,6.3928-8.6383a.4815.4815,0,0,0,.0018-.8977Z"/>
      <path class="sapIllus_AccentColor" d="M112.8666,47.768c-1.831-.7278-2.728-2.5166-3.4249-4.3412a.4884.4884,0,0,0-.4476-.3185h-.0057a.4885.4885,0,0,0-.45.3067,11.7736,11.7736,0,0,1-3.943,4.8026l-.0392.0333a.5123.5123,0,0,0-.1665.5079.4964.4964,0,0,0,.3732.3735c1.3845.3028,3.5269,3.0264,3.5269,4.4835a.4983.4983,0,0,0,.4181.4976.4735.4735,0,0,0,.07.0049.49.49,0,0,0,.4676-.3607c.4694-1.6445,1.82-4.3465,3.6192-5.0512a.508.508,0,0,0,.0019-.9384Z"/>
    <ellipse class="sapIllus_BackgroundColor" cx="80.5" cy="142" rx="42.5" ry="6"/>
    <path class="sapIllus_NoColor" d="M85.2249,48.2865A25.9088,25.9088,0,1,0,68.9265,78.275,25.9112,25.9112,0,0,0,85.2249,48.2865Z"/>
    <path class="sapIllus_NoColor" d="M40.0092,59.22l.0312.1187c-.0051-.02-.0086-.04-.0136-.06S40.0142,59.2393,40.0092,59.22Z"/>
    <path class="sapIllus_PatternShadow" d="M68.9265,78.275A25.9007,25.9007,0,0,0,72.468,31.2983a34.2591,34.2591,0,0,1,1.2231,4.4233,29.3159,29.3159,0,0,1-23.416,34.2131,33.9609,33.9609,0,0,1-8.5285.3409c-.7736-.077-1.49-.1849-2.1779-.3039A25.9118,25.9118,0,0,0,68.9265,78.275Z"/>
    <path class="sapIllus_StrokeDetailColor" d="M72.291,84.5876c.3059.4336.59.8349.9111,1.2933l-.8993-1.2978Z"/>
      <path class="sapIllus_StrokeDetailColor" d="M42.626,66.5166a.5.5,0,0,1-.418-.2256,21.9665,21.9665,0,0,1-2.873-6.5459l.0009-.0005a21.0917,21.0917,0,0,1-.206-9.3359q.0557-.2739.1172-.543a.5.5,0,1,1,.9746.2217q-.0587.2586-.1113.52a20.0791,20.0791,0,0,0,.2246,9.0083l-.001,0a20.9567,20.9567,0,0,0,2.71,6.1265.5.5,0,0,1-.4179.7744Z"/>
      <path class="sapIllus_StrokeDetailColor" d="M40.39,48.2061a.4995.4995,0,0,1-.4716-.6651,21.0763,21.0763,0,0,1,1.0293-2.437.5.5,0,0,1,.8945.4463,20.0851,20.0851,0,0,0-.98,2.3208A.5.5,0,0,1,40.39,48.2061Z"/>
    <path class="sapIllus_StrokeDetailColor" d="M85.5592,81.5767l-2.658-3.8454a43.4693,43.4693,0,0,1-4.9776,3.7875A47.882,47.882,0,0,1,72.29,84.5854l.0015.0022.0118-.0045.8993,1.2978.0521.0741S82.053,86.1378,85.5592,81.5767Z"/>
    <path class="sapIllus_BrandColorSecondary" d="M107.3985,113.1019,82.8973,77.7253a32.9823,32.9823,0,1,0-13.0759,7.752c.8435-.2634,1.6632-.5664,2.47-.89l-.0015-.0022a47.882,47.882,0,0,0,5.6341-3.0666,43.4693,43.4693,0,0,0,4.9776-3.7875l2.658,3.8454c-3.5062,4.5611-12.305,4.3783-12.305,4.3783l-.0521-.0741,23.905,34.4959c.0969.1415.2021.2735.3081.4044a6.3072,6.3072,0,0,0,8.3437,1.09h0A6.308,6.308,0,0,0,107.3985,113.1019ZM68.9265,78.275A25.9007,25.9007,0,1,1,85.2249,48.2865,25.9118,25.9118,0,0,1,68.9265,78.275Z"/>
</svg>
`;

// node_modules/@ui5/webcomponents-fiori/dist/illustrations/sapIllus-Scene-BeforeSearch.js
var sapIllus_Scene_BeforeSearch_default = `<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" width="320" height="240" viewBox="0 0 320 240" id="sapIllus-Scene-BeforeSearch">
    <path class="sapIllus_BackgroundColor" d="M245.38,171.4746H242.546a11.5477,11.5477,0,0,1-10.9266-7.3527,9.3554,9.3554,0,0,1-.5977-2.96q-.0036-.1521-.0052-.3028a10.9462,10.9462,0,0,1,9.0747-10.7733c14.4689-2.67,28.3441-7.5976,39.0055-15.8435,15.8174-12.234,25.2983-30.1413,25.2986-48.2414,0-32.3337-28.7569-59.0139-66.2417-63.7612-19.1224-2.4216-39.22-1.8209-58.5032-1.8821q-30.51-.0966-61.0186-.0241c-25.038.0517-52.0666.6182-73.0249,13.849C26.4294,46.2886,15,65.8607,15,86c0,35.2454,33.6343,58.1414,71.8081,63.7773l.4956.0738q1.2916.1853,2.5889.3434c6.4013,1.288,9.952,5.6046,9.654,11.6212-.2047,4.1329-3.1466,7.23-7.7849,8.5154a95.9553,95.9553,0,0,0-12.8274,1.6864c-16.781,3.4816-30.1267,18.0291-24.73,35.5255,3.8016,12.3243,15.09,16.07,26.8749,17.7281,7.8472,1.1038,16.2067,1.1088,23.4419,1.1037,49.2867-.035,98.2475,0,147.38,0,13.4976,0,26.5205-.3844,34.9722-11.9494a26.5531,26.5531,0,0,0,.3955-31.3C277.4067,169.5317,260.427,171.4746,245.38,171.4746Z"/>
    <path class="sapIllus_BrandColorSecondary" d="M200.4067,60.6067a23.5169,23.5169,0,0,0-7.5478.8318c-.1641.0456-.3193.1068-.4812.1562a68.011,68.011,0,1,0,15.6289,44.1992,23.503,23.503,0,0,0,2.7229-1.3057c.0181-.01.0354-.0214.0535-.0317q.6788-.386,1.3258-.8127c.0562-.0374.11-.0776.1656-.1155.3909-.2629.7749-.5342,1.147-.8186.1094-.084.2128-.1744.32-.26.3139-.2489.6264-.4995.9257-.7633.1886-.1667.3662-.3438.5491-.516.21-.198.4262-.3911.6289-.5965q.5751-.5837,1.1085-1.2033C215.551,83.3423,207.9,69.7109,200.4067,60.6067Z"/>
    <path class="sapIllus_ObjectFillColor" d="M206.2947,187.3667q.0581-.0273.1152-.0563c2.09-1.06,2.2331-3.5861,3.8061-5.1221a4.093,4.093,0,0,1,6.9452,2.6826,15.1474,15.1474,0,0,0,.0276,2.6661c.72,2.9709,4.22.1975,5.72-.2054,1.2042-.3234,2.7606.0306,3.1779,1.2055.3065.8632-.0046,2.0639.7782,2.5394a2.0413,2.0413,0,0,0,1.53-.0022,4.9625,4.9625,0,0,1,3.549.2143,2.3663,2.3663,0,0,1,1.0916,3.074,2.8633,2.8633,0,0,1-1.0306.9412c-4.18,2.5122-9.178-.3139-13.5276-.7287-4.0935-.39-8.0438.9672-12.0985,1.1232a6.7827,6.7827,0,0,1-4.991-1.5419c-1.2925-1.2377-1.68-3.5045-.4695-4.8225C202.2274,187.9081,204.5427,188.192,206.2947,187.3667Z"/>
    <path class="sapIllus_ObjectFillColor" d="M263.9157,71.1341a4.7593,4.7593,0,0,0,1.4264-1.0856c1.34-1.5112,1.7157-3.7163,3.1322-5.1559a4.6827,4.6827,0,0,1,8.0424,3.3349c.0108,1.02-1.1452,3.0131.3635,3.37,1.7592.4157,3.985-2.1423,5.3933-2.8955,1.606-.859,3.6623-1.3029,5.1967-.3216a5.6206,5.6206,0,0,1,2.0587,3.1888,14.2924,14.2924,0,0,0,.9982,3.0139c.6181,1.043,1.3085.6245,2.3111.2451a2.3715,2.3715,0,0,1,2.0013.1057,2.411,2.411,0,0,1,1.0337,2.4814c-.4956,2.8331-4.3163,4.042-6.7354,4.4454a16.8725,16.8725,0,0,1-8.989-1.07,17.27,17.27,0,0,0-4.0393-1.4079,11.0206,11.0206,0,0,0-3.5445.2615c-4.17.8082-10.4025,3.0568-14.0654-.198-1.5741-1.3988-2.129-4.0475-.7634-5.65C259.2669,71.999,261.8685,72.1787,263.9157,71.1341Z"/>
    <path class="sapIllus_NoColor" d="M84.7369,52.0775a1.5445,1.5445,0,0,0,1.7676.06,1.5729,1.5729,0,0,0,.5647-.6375,1.562,1.562,0,0,0-1.9941-2.1346,1.5711,1.5711,0,0,0-.8013.74,1.55,1.55,0,0,0-.179.7127,1.5568,1.5568,0,0,0,.6421,1.2593Z"/>
    <path class="sapIllus_StrokeDetailColor" d="M205.92,148.2069a.5445.5445,0,0,0-.7695.0175l-8.9787,9.3825a2.6338,2.6338,0,0,0-1.6609-.5993,2.6611,2.6611,0,0,0-2.6582,2.6582,2.6315,2.6315,0,0,0,.5942,1.6545A76.737,76.737,0,0,1,83.9874,52.8645a2.632,2.632,0,0,0,1.6758.6119A2.6438,2.6438,0,0,0,87.68,49.1058l9.2463-9.1177a.5442.5442,0,1,0-.7637-.7754l-9.3488,9.2189a2.5827,2.5827,0,0,0-2.5425.1318l-8.928-8.9054a.5448.5448,0,1,0-.7695.7715l8.904,8.8815A2.602,2.602,0,0,0,83.3,52.009,77.8259,77.8259,0,0,0,193.2946,162.0156a2.6015,2.6015,0,0,0,2.7229-.1635l7.758,7.78a.5449.5449,0,0,0,.7715-.77l-7.7817-7.8032a2.5778,2.5778,0,0,0,.1-2.6022l9.0722-9.48A.5435.5435,0,0,0,205.92,148.2069Z"/>
    <path class="sapIllus_AccentColor" d="M84.2738,50.1055a1.5672,1.5672,0,0,1,2.9578.7127,1.5508,1.5508,0,0,1-.1624.6819,1.5729,1.5729,0,0,1-.5647.6375,1.5715,1.5715,0,0,1-2.3762-.9986,1.5768,1.5768,0,0,1-.0335-.3208A1.55,1.55,0,0,1,84.2738,50.1055Z"/>
    <path class="sapIllus_AccentColor" d="M195.9633,160.2547a1.571,1.571,0,0,1-.74.8008,1.4918,1.4918,0,0,1-1.0632.1358,1.5744,1.5744,0,0,1-1.2173-1.5255,1.5511,1.5511,0,0,1,.186-.7255,1.5639,1.5639,0,0,1,2.8348,1.3144Z"/>
    <path class="sapIllus_Layering1" d="M133.9905,189.6417v8.869h12.008v-7.78C139.62,191.6866,135.834,190.365,133.9905,189.6417Z"/>
    <path class="sapIllus_Layering2" d="M128.0443,97.1c-3,0-8-4-9,1s6,3,8,3,2,2,5,3,11,4,10-3S131.0443,97.1,128.0443,97.1Z"/>
    <path class="sapIllus_Layering2" d="M143.0443,44.1c3,1,5,0,6,1s1,4,3,5,7,1,9-1c2.4146-2.4145-1.0737-7.6142-2.5287-9.5543a68.0023,68.0023,0,0,0-18.4887-2.5568c-.34,0-.6739.0207-1.0123.0255C139.0862,37.417,140.15,43.1354,143.0443,44.1Z"/>
    <path class="sapIllus_Layering2" d="M200.9238,119.1458c-4,5-4,6-3,9,.7951,2.385,4.6172.5069,6.1543-.3648a67.4853,67.4853,0,0,0,2.5279-9.0345C206.0549,117.677,204.2134,115.0339,200.9238,119.1458Z"/>
    <path class="sapIllus_Layering2" d="M140.99,167.967c.107-3.2751,8.1121-3.0805,11.012-2.9721a2.9656,2.9656,0,0,0,2-1c1.9773-2.4254,7.5274-9.3608,10.0057-11.0129,3-2,4.99-1.0022,7.99-4.0022s.9948-4.9906,2.9948-7.9906,5.6053-3.0273,7.051-6.8886c2.1127-5.6424.9623-8.1083-6.0377-8.1083S167.0443,129.1,164.0443,127.1c-3.0621-2.0414-1.9568-7.2086-7.3187-6.9935a12.2831,12.2831,0,0,1-9.2341-3.6557c-2.9258-3-6.628-.3508-9.4472-.3508a8.4183,8.4183,0,0,1-7-4c-1-2-2-2-4,1s-2,4-5,0-5-7-7-8-4-1-5-3,1-5-5-5-4-4-2-7,5-5,9-1,7,3,9,1,3-4,4-8,3-10,9-11,11-1,13-4,4-9-1-14-12.5679-6.5187-18,0c-5,6-7,7-10,4-2-2-2-7,2-9,3.6878-1.8439,8.2042.4264,12-4,2.7138-3.1645,1.3126-5.2734-.5912-6.5541a68.0449,68.0449,0,0,0-55.93,45.9251,22.315,22.315,0,0,0,.5216,3.629,9.6051,9.6051,0,0,0,9,7c4,0,7,1,9,6s6.9476,7.8827,9.9476,8.8827,5.9981.9838,7.9981,5.9838,6.0239,3.8978,8.0181,4.0248c1.9958.1272,5.994-.0018,1.994,6.9982s-3.0174,9.991-1.0174,13.991a16.4617,16.4617,0,0,0,12.0038,8.9981c6,1,4.0069,8.0025,2.0069,12.0025s-4.0137,4.9984-4.0137,6.9984a16.871,16.871,0,0,0,.9752,4.5164,68.6077,68.6077,0,0,0,8.07.493c.9841,0,1.9606-.0323,2.9345-.0736C142.3678,172.5518,140.8812,171.3049,140.99,167.967Z"/>
    <path class="sapIllus_PatternHighlight" d="M113.7623,61.0757c21.6526-13.041,60.5282-7.7931,72.7831-5.6616a67.9819,67.9819,0,0,0-114.5185,49.575,68.6576,68.6576,0,0,0,.4375,7.6332C75.8542,93.4065,98.3638,70.35,113.7623,61.0757Z"/>
    <path class="sapIllus_PatternShadow" d="M140.0267,172.9717a67.9842,67.9842,0,0,0,67.89-64.4319c-4.9717,12.7237-23.5447,49.2273-74.26,53.826-16.6413,1.5088-35.3975-5.7754-45.9912-14.02A67.84,67.84,0,0,0,140.0267,172.9717Z"/>
    <path class="sapIllus_ObjectFillColor" d="M221.8728,111.9629a11.3351,11.3351,0,0,1-1.2415,1.1365c-.0256.02-.0493.0424-.0749.0626a13.7469,13.7469,0,0,1-1.3433.9217c-.0332.02-.0653.042-.0987.0619-.4685.28-.9467.5309-1.4276.7587l-.0652.0312c-.4966.233-.9921.4393-1.4809.6222l-.0014.0006-.0042.0015c-.1747.0654-.348.1292-.52.1887l-.0009,0-.0032.0011A24.9873,24.9873,0,0,1,211,116.8594l29.2333,45.6252a5.8976,5.8976,0,1,0,9.9353-6.3573Z"/>
    <path class="sapIllus_StrokeDetailColor" d="M199.1544,59.4084a24.6642,24.6642,0,1,0,24.6641,24.6641A24.6642,24.6642,0,0,0,199.1544,59.4084Zm0,48.152a23.4879,23.4879,0,1,1,23.4878-23.4879A23.4878,23.4878,0,0,1,199.1544,107.56Z"/>
    <path class="sapIllus_Layering2" d="M145.8778,198.5107H134.0693a34.0352,34.0352,0,0,0-23.5949,17.4854h58.9924A34.0271,34.0271,0,0,0,145.8778,198.5107Z"/>
    <path class="sapIllus_StrokeDetailColor" d="M268.39,216.9936h-6.786a.5046.5046,0,1,1,0-.9874h6.786a.5046.5046,0,1,1,0,.9874Z"/>
    <path class="sapIllus_StrokeDetailColor" d="M253.4376,215.9961H63.5441a.5063.5063,0,1,0,0,1.01H253.4376a.5063.5063,0,1,0,0-1.01Z"/>
    <path class="sapIllus_Layering2" d="M175.6665,84.0725a23.4165,23.4165,0,0,0,1.6063,8.5353c8.0688,4.85,18.5629,4.9635,22.5292-2.726,5.119-9.924-6.0742-19.6617-16.6635-22.9826A23.4179,23.4179,0,0,0,175.6665,84.0725Z"/>
    <path class="sapIllus_NoColor" d="M221.8728,111.9629a11.3035,11.3035,0,0,1-1.2415,1.1365c-.0253.02-.0493.0426-.0749.0626a13.7469,13.7469,0,0,1-1.3433.9217c-.033.02-.0654.042-.0987.0619-.4683.2793-.947.5314-1.4276.7587l-.0652.0312c-.4956.2321-.9928.4395-1.4809.6222l-.0056.0021c-.1747.0652-.348.1294-.52.1887l-.0041.0015A24.9873,24.9873,0,0,1,211,116.8594l29.2333,45.6252a5.8976,5.8976,0,1,0,9.9353-6.3573Z"/>
    <path class="sapIllus_Layering2" d="M127.4462,181.9507l-.048-.0044a14.15,14.15,0,0,0,6.5923,6.3849c.0471.0221.0932.0458.1405.0675a17.815,17.815,0,0,0,4.83,1.2261c.3211.0229.6414.0482.9679.0493.0177,0,.0352.0017.0529.0017.3567,0,.7068-.0274,1.0569-.0537a17.9755,17.9755,0,0,0,4.8134-1.2408c.0491-.0227.0972-.0468.146-.07a14.15,14.15,0,0,0,6.52-6.3093,79.0543,79.0543,0,0,1-12.4066.994A78.0942,78.0942,0,0,1,127.4462,181.9507Z"/>
    <path class="sapIllus_StrokeDetailColor" d="M145.8525,188.3813a17.9755,17.9755,0,0,1-4.8134,1.2408c-.35.0263-.7.0534-1.0569.0537-.0177,0-.0352-.0017-.0529-.0017-.3265-.0011-.6468-.0264-.9679-.0493a17.815,17.815,0,0,1-4.83-1.2261c-.0473-.0217-.0934-.0454-.1405-.0675v1.31c1.8435.7233,5.63,2.0449,12.008,1.0889l.001-2.42-.001,0C145.95,188.3345,145.9016,188.3586,145.8525,188.3813Z"/>
    <path class="sapIllus_ObjectFillColor" d="M222.3417,60.75a32.8936,32.8936,0,1,0,9.7044,23.3267A32.7916,32.7916,0,0,0,222.3417,60.75Zm-23.1873,47.9867a24.6642,24.6642,0,1,1,24.6641-24.6642A24.6643,24.6643,0,0,1,199.1544,108.7367Z"/>
    <path class="sapIllus_StrokeDetailColor" d="M251.1582,155.494l-29.4154-45.9162a34.119,34.119,0,0,0-22.6617-59.63c-.63,0-1.2557.02-1.8772.0537-.2028.011-.4029.0314-.6045.0459-.4189.03-.8369.0625-1.2513.1077-.2326.0253-.4627.0581-.6939.0881-.3821.05-.7631.1021-1.1413.1641-.2358.0388-.47.0821-.7039.1257q-.5572.1036-1.1078.2241-.3435.0759-.6846.158c-.3739.0906-.7445.1887-1.1135.2915-.2116.059-.4234.1169-.6331.18-.3935.1181-.7823.2459-1.17.3774-.1785.0607-.3585.1178-.5357.1813-.4621.1657-.9181.3435-1.3708.5283-.0968.04-.1958.0748-.2922.1153A34.13,34.13,0,0,0,206.88,117.2959h0l.0007,0q1.2936-.3033,2.549-.7l29.814,46.5226a7.0724,7.0724,0,0,0,11.9143-7.6238Zm-52.0771-38.4916a32.93,32.93,0,0,1-13.8623-62.8h0q.7686-.3573,1.5585-.675c.0391-.0156.0787-.0308.1177-.0464q.7251-.2893,1.4668-.5446.1155-.04.2315-.0782.6836-.23,1.3807-.43c.1108-.0318.2216-.0639.3329-.0945.4321-.12.8686-.2287,1.3078-.3308.14-.0325.28-.0664.42-.0971.414-.09.8319-.17,1.2514-.2448.164-.0292.327-.0612.4919-.0878.4046-.0659.8133-.1194,1.2227-.17.1777-.022.354-.0486.5324-.0677.4205-.0453.8448-.0766,1.27-.1059.1663-.0112.3308-.029.4978-.0378.59-.0316,1.1826-.0493,1.78-.0493a32.93,32.93,0,0,1,32.93,32.93c0,.5294-.0152,1.0552-.04,1.5785-.0081.17-.0221.339-.0329.5085-.0219.3532-.0471.7055-.08,1.0556-.0186.1963-.0411.3916-.0631.587q-.0549.4869-.1233.97c-.0282.1971-.0573.3941-.0891.59-.0523.3241-.1109.6461-.1726.967-.0356.1846-.0693.37-.1079.5532-.0763.3628-.1614.7224-.2495,1.081-.0331.1342-.062.27-.0967.4036q-.189.7284-.41,1.4435c-.04.1278-.0847.2532-.1257.38-.1128.35-.2285.6975-.3525,1.0417-.0657.1828-.1365.363-.2054.5441-.1089.2864-.22.5715-.3367.854-.08.1928-.1618.384-.2448.575q-.1758.4032-.3621.8c-.0887.19-.1775.3794-.27.5671-.1314.2676-.2688.5318-.4073.7955-.0929.1765-.1833.3547-.2793.5294-.1708.3111-.35.617-.53.922-.1063.18-.2126.359-.3221.5363-.2116.3422-.4274.6814-.6509,1.0152-.119.1775-.2438.3507-.3661.5259-.157.2247-.3141.4494-.4765.67-.1392.1891-.2823.3751-.4255.5612q-.231.3-.4681.5959-.2289.2837-.4636.5623c-.1571.1865-.3175.37-.4788.5528-.1638.1857-.3271.3715-.4951.5535-.1619.1754-.3284.3464-.4941.5183-.1741.18-.3457.3634-.5237.54-.1648.1635-.3357.3206-.5039.48q-.5318.5055-1.0852.9873c-.159.1383-.316.2784-.4776.4137-.2113.1767-.4275.3476-.6432.5193-.1627.1293-.3253.259-.4906.3854-.2223.17-.4475.3364-.6743.5008q-.2442.1771-.4923.35c-.2347.1637-.4706.3257-.71.4834-.1587.1048-.32.2063-.4807.3083-.2515.16-.5026.32-.7585.4727-.1272.0762-.2576.1476-.386.222-.6579.3813-1.3274.7445-2.013,1.0805l-.0273.0139c-.29.1421-.5862.2749-.8814.4086-.15.0681-.3.1383-.4515.2042-.2833.123-.57.24-.8573.355-.167.0669-.3341.1338-.5024.198q-.43.1644-.8665.3172c-.1695.0595-.34.1164-.511.173-.2975.0986-.5954.1958-.8966.2861-.156.0469-.3138.0891-.4708.1337-.3208.0911-.6414.1827-.9661.2643h0A32.989,32.989,0,0,1,199.0811,117.0024Zm51.88,43.5686a5.8976,5.8976,0,0,1-10.7281,1.9136L211,116.8594a24.9873,24.9873,0,0,0,4.611-1.1094l.0041-.0015c.1719-.0593.3452-.1235.52-.1887l.0056-.0021c.4881-.1827.9853-.39,1.4809-.6222l.0652-.0312c.4806-.2273.9593-.4794,1.4276-.7587.0333-.02.0657-.0416.0987-.0619a13.7469,13.7469,0,0,0,1.3433-.9217c.0256-.02.05-.0424.0749-.0626a11.3035,11.3035,0,0,0,1.2415-1.1365l28.2959,44.1644A5.8612,5.8612,0,0,1,250.9615,160.571Z"/>
    <path class="sapIllus_ObjectFillColor" d="M99.43,80.439a8.714,8.714,0,0,0-2.4814.1436c.8751-.18-.9907-4.38-1.2793-4.8751A9.642,9.642,0,0,0,91.38,71.7453c-3.3445-1.5088-6.6853-.49-9.3569,1.8191-2.5543,2.2075-4.1191,5.612-7.2313,7.154a.6592.6592,0,0,1-.42.0963.6868.6868,0,0,1-.2844-.172,9.6442,9.6442,0,0,0-5.7058-2.5079,8.9977,8.9977,0,0,0-9.0681,5.7335,9.9439,9.9439,0,0,1-.8512,2.2429c-1.654,2.556-4.235.6613-6.4695-.1543C42.8483,82.6188,38.1285,100.51,50.5782,98.983c3.4714-.4257,7.0373-1.492,10.525-1.7161a75.9961,75.9961,0,0,1,9.8793.17c7.097.4815,14.1175,1.6856,21.188,2.422,4.9234.5128,10.9559-.4458,14.0624-4.7269A9.268,9.268,0,0,0,99.43,80.439Z"/>
    <path class="sapIllus_AccentColor" d="M260.6345,19.2893c-3.8045-1.4729-5.6484-5.0437-7.0748-8.683a.5593.5593,0,0,0-.5135-.3562.6882.6882,0,0,0-.5221.3435c-1.9006,4.5224-4.724,6.8321-7.9932,9.5068l-.0776.0637a.5623.5623,0,0,0,.237.9855c2.9623.6316,7.3708,6.094,7.3708,9.1331a.5587.5587,0,0,0,1.0956.158c.958-3.2788,3.7388-8.6753,7.4756-10.1016a.5631.5631,0,0,0,.0022-1.05Z"/>
    <path class="sapIllus_AccentColor" d="M241.3939,38.7768c-2.1412-.851-3.19-2.9429-4.0051-5.0766a.571.571,0,0,0-.5234-.3724h-.0067a.5712.5712,0,0,0-.5256.3587c-1.09,2.66-2.7213,4.03-4.6109,5.616l-.0459.0391a.5989.5989,0,0,0-.1948.5939.5806.5806,0,0,0,.4365.4367c1.619.3541,4.1243,3.5392,4.1243,5.243a.5828.5828,0,0,0,.489.582.5651.5651,0,0,0,.0812.0057.5729.5729,0,0,0,.5468-.4218c.549-1.9231,2.1279-5.0829,4.2324-5.907a.5939.5939,0,0,0,.0022-1.0973Z"/>
</svg>
`;

// node_modules/@ui5/webcomponents-fiori/dist/illustrations/sapIllus-Spot-BeforeSearch.js
var sapIllus_Spot_BeforeSearch_default = `<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" width="128" height="128" viewBox="0 0 128 128" id="sapIllus-Spot-BeforeSearch">
    <path class="sapIllus_AccentColor" d="M111.7219,25.5662c-2.7032-1.0653-4.0145-3.653-5.029-6.29A.4258.4258,0,0,0,106.3022,19h-.0051a.4254.4254,0,0,0-.3924.2664c-1.3529,3.2782-3.3643,4.9541-5.6934,6.8946l-.054.0452a.442.442,0,0,0-.1455.44.4317.4317,0,0,0,.3259.3238c2.0547.4459,5.2344,4.4584,5.2344,6.6053a.433.433,0,0,0,.365.4315.4206.4206,0,0,0,.0607.0042.4272.4272,0,0,0,.4083-.3127c.6818-2.3766,2.66-6.2863,5.3142-7.3185a.4394.4394,0,0,0,.0016-.8139Z"/>
    <path class="sapIllus_AccentColor" d="M94.7267,41.78c-1.4341-.5859-2.1375-2.0305-2.6847-3.5041A.4115.4115,0,0,0,91.6655,38h-.0048a.4111.4111,0,0,0-.3782.266,9.48,9.48,0,0,1-3.1,3.8839l-.03.0263a.4512.4512,0,0,0-.14.44.4239.4239,0,0,0,.3141.3234c1.0576.2375,2.7592,2.4639,2.7592,3.609a.4281.4281,0,0,0,.3517.4308.4063.4063,0,0,0,.0585.0043.4143.4143,0,0,0,.3934-.3124c.3677-1.3281,1.4268-3.51,2.8369-4.0784a.4451.4451,0,0,0,.0016-.8128Z"/>
    <polygon class="sapIllus_NoColor" points="59.063 28.836 59.062 28.836 59.063 28.836 59.063 28.836"/>
    <path class="sapIllus_StrokeDetailColor" d="M30.0687,49a16.599,16.599,0,0,1,.4815-7.4287l.13-.42a.5.5,0,1,0-.9512-.3067q-.0718.219-.1377.4419a17.5953,17.5953,0,0,0-.5254,7.7735,18.2682,18.2682,0,0,0,1.8985,5.6533.5.5,0,1,0,.8808-.4727A17.281,17.281,0,0,1,30.0687,49Z"/>
    <path class="sapIllus_StrokeDetailColor" d="M30.7074,39.6243a.5.5,0,0,0,.6621-.248,16.5661,16.5661,0,0,1,.9785-1.8369.5.5,0,1,0-.8515-.5244,17.6783,17.6783,0,0,0-1.0371,1.9472A.5.5,0,0,0,30.7074,39.6243Z"/>
    <path class="sapIllus_PatternShadow" d="M67.5611,41.6163a21.3965,21.3965,0,0,0-8.4985-12.78c.0423.2961.079.5908.1065.8778a27.0961,27.0961,0,0,1-24.384,29.5606,28.7268,28.7268,0,0,1-5.3583-.0488,21.4795,21.4795,0,0,0,38.1343-17.61Z"/>
    <path class="sapIllus_BrandColorSecondary" d="M79.0359,93.8809l-.0015.001L64.0288,67.6342a27.5031,27.5031,0,1,0-40.1212-5.7376c.0709.1048.14.2081.2133.3138.12.17.2437.3358.3672.5026a25.3986,25.3986,0,0,0,4.9373,5.12A27.4452,27.4452,0,0,0,52.6378,73.192c.7224-.1625,1.4274-.36,2.1227-.5752l.4564.7986.2163.3786h0L74.889,107.8254l.0106.0148.3516.6152a4.82,4.82,0,0,0,6.5768,1.7922l.7631-.4363a4.82,4.82,0,0,0,1.7923-6.5769ZM46.6048,67.8157A21.4848,21.4848,0,1,1,68.09,46.3309,21.4848,21.4848,0,0,1,46.6048,67.8157Z"/>
    <path class="sapIllus_StrokeDetailColor" d="M54.76,72.6162l.6714,1.176s7.3005,1.4574,10.7275-2.421l-2.1312-3.7377-.36.2689a21.6468,21.6468,0,0,1-7.44,4.1914Z"/>
</svg>
`;

// node_modules/@ui5/webcomponents-fiori/dist/illustrations/BeforeSearch.js
var name19 = "BeforeSearch";
var set = "fiori";
var collection19 = "V4";
var title = IM_TITLE_BEFORESEARCH;
var subtitle = IM_SUBTITLE_BEFORESEARCH;
registerIllustration(name19, {
  dialogSvg: sapIllus_Dialog_BeforeSearch_default,
  sceneSvg: sapIllus_Scene_BeforeSearch_default,
  spotSvg: sapIllus_Spot_BeforeSearch_default,
  dotSvg: sapIllus_Spot_BeforeSearch_default,
  title,
  subtitle,
  set,
  collection: collection19
});

// node_modules/@ui5/webcomponents-fiori/dist/generated/themes/IllustratedMessage.css.js
registerThemePropertiesLoader("@ui5/webcomponents-theming", "sap_horizon", async () => parameters_bundle_css_default);
registerThemePropertiesLoader("@ui5/webcomponents-fiori", "sap_horizon", async () => parameters_bundle_css_default3);
var IllustratedMessage_css_default = `:host(:not([hidden])){display:block}:host{box-sizing:border-box;width:100%;height:100%;padding:1rem}.ui5-illustrated-message-root,.ui5-illustrated-message-inner,.ui5-illustrated-message-text-and-actions-container{display:flex;flex-direction:column;align-items:center;justify-content:center;height:inherit;min-height:0;flex-basis:content}.ui5-illustrated-message-illustration{margin:2rem 0}.ui5-illustrated-message-illustration svg{max-height:100%;max-width:100%}.ui5-illustrated-message-illustration.ui5-illustrated-message-illustration-fit-content{position:relative;width:0;padding:0 0 0 100%;height:100%;display:flex;align-items:center}.ui5-illustrated-message-illustration.ui5-illustrated-message-illustration-fit-content svg{position:absolute;height:100%;width:100%;left:0;top:0}.ui5-illustrated-message-title [ui5-title],.ui5-illustrated-message-title ::slotted([slot="title"]){text-align:center;margin-bottom:1rem;font-size:var(--sapFontHeader2Size);font-family:var(--sapFontHeaderFamily);font-weight:700;line-height:1.3;max-width:61.9375rem}.ui5-illustrated-message-subtitle{text-align:center;font-size:var(--sapFontLargeSize);font-family:var(--sapFontFamily);line-height:1.4;color:var(--sapTextColor);margin-bottom:.5rem;max-width:61.9375rem}.ui5-illustrated-message-actions{margin:1rem 0}:host([media="dialog"]) .ui5-illustrated-message-illustration{margin:1rem 0}:host([media="dialog"]) .ui5-illustrated-message-title [ui5-title],:host([media="dialog"]) ::slotted([slot="title"]){margin-bottom:.5rem;font-size:var(--sapFontHeader3Size);max-width:40.5625rem}:host([media="dialog"]) .ui5-illustrated-message-subtitle{margin-bottom:.5rem;font-size:var(--sapFontSize);max-width:40.5625rem}:host([media="dialog"]) .ui5-illustrated-message-actions{margin-top:.5rem;margin-bottom:1rem}:host([media="spot"]){padding:.5rem}:host([media="spot"]) .ui5-illustrated-message-illustration{margin-bottom:.5rem;margin-top:0}:host([media="spot"]) .ui5-illustrated-message-title [ui5-title],:host([media="spot"]) ::slotted([slot="title"]){margin-bottom:.5rem;font-size:var(--sapFontHeader4Size);line-height:1.25rem;max-width:21.5rem}:host([media="spot"]) .ui5-illustrated-message-subtitle{font-size:var(--sapFontSize);max-width:21.5rem;margin-bottom:.5rem}:host([media="spot"]) .ui5-illustrated-message-actions{margin:.5rem 0}:host([media="dot"]){padding:.25rem;min-height:4rem}:host([media="dot"]) .ui5-illustrated-message-inner{flex-direction:row}:host([media="dot"]) .ui5-illustrated-message-illustration{margin:0 .25rem 0 0;height:2.8125rem;width:2.8125rem;align-self:baseline}:host([media="dot"]) .ui5-illustrated-message-title [ui5-title],:host([media="dot"]) ::slotted([slot="title"]){margin-bottom:.25rem;font-size:var(--sapFontHeader5Size);line-height:1.25rem;max-width:12.6875rem}:host([media="dot"]) .ui5-illustrated-message-subtitle{font-size:var(--sapFontSize);max-width:12.6875rem;margin-bottom:.25rem}:host([media="dot"]) .ui5-illustrated-message-actions{margin:.25rem 0}:host([media="base"]) .ui5-illustrated-message-illustration{display:none}:host([media="base"]) .ui5-illustrated-message-title [ui5-title],:host([media="base"]) ::slotted([slot="title"]){margin-bottom:.25rem;font-size:var(--sapFontHeader5Size);line-height:1.25rem;max-width:10rem}:host([media="base"]) .ui5-illustrated-message-subtitle{font-size:var(--sapFontSize);max-width:10rem;margin-bottom:0rem}.ui5-illustrated-message-util{position:fixed;top:-9999px;left:-9999px}.sapIllus_MaskTypeAlpha{mask-type:alpha}.sapIllus_BackgroundColor{fill:var(--sapIllus_BackgroundColor)}.sapIllus_BrandColorPrimary{fill:var(--sapIllus_BrandColorPrimary)}.sapIllus_BrandColorSecondary{fill:var(--sapIllus_BrandColorSecondary)}.sapIllus_StrokeDetailColor{fill:var(--sapIllus_StrokeDetailColor)}.sapIllus_Layering1{fill:var(--sapIllus_Layering1)}.sapIllus_Layering2{fill:var(--sapIllus_Layering2)}.sapIllus_ObjectFillColor{fill:var(--sapIllus_ObjectFillColor)}.sapIllus_AccentColor{fill:var(--sapIllus_AccentColor)}.sapIllus_NoColor{fill:var(--sapIllus_NoColor)}.sapIllus_PatternShadow{fill:var(--sapIllus_PatternShadow)}.sapIllus_PatternHighlight{fill:var(--sapIllus_PatternHighlight)}.sapIllus_NoColor_Fill{fill:var(--sapIllus_NoColor)}.sapIllus_BrandColorPrimary_Fill{fill:var(--sapIllus_BrandColorPrimary)}.sapIllus_ObjectFillColor_Fill{fill:var(--sapIllus_ObjectFillColor)}
`;

// node_modules/@ui5/webcomponents-fiori/dist/IllustratedMessageTemplate.js
function IllustratedMessageTemplate() {
  return jsxs("div", { class: "ui5-illustrated-message-root", children: [jsxs("div", { class: "ui5-illustrated-message-inner", children: [jsx("div", { class: "ui5-illustrated-message-illustration", dangerouslySetInnerHTML: { __html: this.effectiveIllustration || "" } }), jsxs("div", { class: "ui5-illustrated-message-text-and-actions-container", children: [this.hasTitle && jsx("div", { part: "title", class: "ui5-illustrated-message-title", children: this.hasFormattedTitle ? jsx("slot", { name: "title" }) : jsx(Title_default, { children: this.effectiveTitleText }) }), this.hasSubtitle && jsx("div", { part: "subtitle", class: "ui5-illustrated-message-subtitle", children: this.hasFormattedSubtitle ? jsx("slot", { name: "subtitle" }) : this.effectiveSubitleText }), this.hasActions && jsx("div", { class: "ui5-illustrated-message-actions", children: jsx("slot", {}) })] })] }), jsx("svg", { xmlns: "http://www.w3.org/2000/svg", class: "ui5-illustrated-message-util", children: jsxs("defs", { children: [jsxs("pattern", { id: "sapIllus_PatternShadow", "data-name": "sapIllus_PatternShadow", width: "3", height: "5.5", patternUnits: "userSpaceOnUse", viewBox: "0 0 3 5.5", children: [jsx("rect", { class: "sapIllus_NoColor sapIllus_NoColor_Fill", width: "3", height: "5.5" }), jsx("circle", { class: "sapIllus_BrandColorPrimary sapIllus_BrandColorPrimary_Fill", cx: "3", cy: "5.5001", r: "0.5" }), jsx("circle", { class: "sapIllus_BrandColorPrimary sapIllus_BrandColorPrimary_Fill", cy: "5.5001", r: "0.5" }), jsx("circle", { class: "sapIllus_BrandColorPrimary sapIllus_BrandColorPrimary_Fill", cx: "1.5", cy: "2.7501", r: "0.5" }), jsx("circle", { class: "sapIllus_BrandColorPrimary sapIllus_BrandColorPrimary_Fill", cx: "3", cy: "0.0001", r: "0.5" }), jsx("circle", { class: "sapIllus_BrandColorPrimary sapIllus_BrandColorPrimary_Fill", cy: "0.0001", r: "0.5" })] }), jsxs("pattern", { id: "sapIllus_PatternHighlight", "data-name": "sapIllus_PatternHighlight", width: "3", height: "5.5", patternTransform: "translate(35.9059 309.6208)", patternUnits: "userSpaceOnUse", viewBox: "0 0 3 5.5", children: [jsx("rect", { class: "sapIllus_NoColor sapIllus_NoColor_Fill", width: "3", height: "5.5" }), jsx("circle", { class: "sapIllus_ObjectFillColor sapIllus_ObjectFillColor_Fill", cx: "3.0001", cy: "5.5001", r: "0.5" }), jsx("circle", { class: "sapIllus_ObjectFillColor sapIllus_ObjectFillColor_Fill", cx: "0.0001", cy: "5.5001", r: "0.5" }), jsx("circle", { class: "sapIllus_ObjectFillColor sapIllus_ObjectFillColor_Fill", cx: "1.5001", cy: "2.7501", r: "0.5" }), jsx("circle", { class: "sapIllus_ObjectFillColor sapIllus_ObjectFillColor_Fill", cx: "3.0001", cy: "0.0001", r: "0.5" }), jsx("circle", { class: "sapIllus_ObjectFillColor sapIllus_ObjectFillColor_Fill", cx: "0.0001", cy: "0.0001", r: "0.5" })] })] }) })] });
}

// node_modules/@ui5/webcomponents-fiori/dist/IllustratedMessage.js
var __decorate55 = function(decorators, target, key, desc) {
  var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
  if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
  else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
  return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var IllustratedMessage_1;
var getEffectiveIllustrationName = (name105) => {
  if (name105.startsWith("Tnt")) {
    return name105.replace("Tnt", "tnt/");
  }
  if (name105.includes("/")) {
    return name105;
  }
  return `fiori/${name105}`;
};
var IllustratedMessage = IllustratedMessage_1 = class IllustratedMessage2 extends UI5Element_default {
  constructor() {
    super();
    this.name = "BeforeSearch";
    this.design = "Auto";
    this._handleResize = this.handleResize.bind(this);
    this._lastKnownOffsetWidthForMedia = {};
    this._lastKnownOffsetHeightForMedia = {};
    this._lastKnownMedia = "base";
  }
  static get BREAKPOINTS() {
    return {
      DIALOG: 681,
      SPOT: 360,
      DOT: 260,
      BASE: 160
    };
  }
  static get BREAKPOINTS_HEIGHT() {
    return {
      DIALOG: 415,
      SPOT: 284,
      DOT: 207,
      BASE: 61
    };
  }
  static get MEDIA() {
    return {
      BASE: "base",
      DOT: "dot",
      SPOT: "spot",
      DIALOG: "dialog",
      SCENE: "scene"
    };
  }
  async onBeforeRendering() {
    let effectiveName = getEffectiveIllustrationName(this.name);
    let illustrationData = getIllustrationDataSync(effectiveName);
    if (this.hasAttribute("name") && !this.isValidIllustration(effectiveName)) {
      effectiveName = getEffectiveIllustrationName(IllustrationMessageType_default.BeforeSearch);
      console.warn(`The illustration "${effectiveName}" does not exist. The default illustration "${IllustrationMessageType_default.BeforeSearch}" is loaded instead.`);
    }
    if (illustrationData === void 0) {
      illustrationData = await getIllustrationData(effectiveName);
    }
    this.dotSvg = illustrationData.dotSvg;
    this.spotSvg = illustrationData.spotSvg;
    this.dialogSvg = illustrationData.dialogSvg;
    this.sceneSvg = illustrationData.sceneSvg;
    this.illustrationTitle = IllustratedMessage_1.i18nBundle.getText(illustrationData.title);
    this.illustrationSubtitle = IllustratedMessage_1.i18nBundle.getText(illustrationData.subtitle);
    if (this.design !== IllustrationMessageDesign_default.Auto) {
      this._handleCustomSize();
    }
  }
  onEnterDOM() {
    ResizeHandler_default.register(this, this._handleResize);
  }
  onExitDOM() {
    ResizeHandler_default.deregister(this, this._handleResize);
  }
  handleResize() {
    if (this.design !== IllustrationMessageDesign_default.Auto) {
      this._adjustHeightToFitContainer();
      return;
    }
    this._applyMedia();
    window.requestAnimationFrame(this._adjustHeightToFitContainer.bind(this));
  }
  _applyMedia(heightChange) {
    const currOffsetWidth = this.offsetWidth, currOffsetHeight = this.offsetHeight;
    const design = heightChange ? currOffsetHeight : currOffsetWidth, oBreakpounts = heightChange ? IllustratedMessage_1.BREAKPOINTS_HEIGHT : IllustratedMessage_1.BREAKPOINTS;
    let newMedia = "";
    if (design <= oBreakpounts.BASE) {
      newMedia = IllustratedMessage_1.MEDIA.BASE;
    } else if (design <= oBreakpounts.DOT) {
      newMedia = IllustratedMessage_1.MEDIA.DOT;
    } else if (design <= oBreakpounts.SPOT) {
      newMedia = IllustratedMessage_1.MEDIA.SPOT;
    } else if (design <= oBreakpounts.DIALOG) {
      newMedia = IllustratedMessage_1.MEDIA.DIALOG;
    } else {
      newMedia = IllustratedMessage_1.MEDIA.SCENE;
    }
    const lastKnownOffsetWidth = this._lastKnownOffsetWidthForMedia[newMedia], lastKnownOffsetHeight = this._lastKnownOffsetHeightForMedia[newMedia];
    if (!(lastKnownOffsetWidth && currOffsetWidth === lastKnownOffsetWidth && lastKnownOffsetHeight && currOffsetHeight === lastKnownOffsetHeight) || this._lastKnownOffsetWidthForMedia[this._lastKnownMedia] === 0 || this._lastKnownOffsetHeightForMedia[this._lastKnownMedia] === 0) {
      this.media = newMedia;
      this._lastKnownOffsetWidthForMedia[newMedia] = currOffsetWidth;
      this._lastKnownOffsetHeightForMedia[newMedia] = currOffsetHeight;
      this._lastKnownMedia = newMedia;
    }
  }
  _setSVGAccAttrs() {
    const svg = this.shadowRoot.querySelector(".ui5-illustrated-message-illustration svg");
    if (svg) {
      if (this.ariaLabelText) {
        svg.setAttribute("aria-label", this.ariaLabelText);
      } else {
        svg.removeAttribute("aria-label");
      }
    }
  }
  _adjustHeightToFitContainer() {
    const illustrationWrapper = this.shadowRoot.querySelector(".ui5-illustrated-message-illustration"), illustration = illustrationWrapper.querySelector("svg");
    if (illustration) {
      illustrationWrapper.classList.toggle("ui5-illustrated-message-illustration-fit-content", false);
      if (this.getDomRef().scrollHeight > this.getDomRef().offsetHeight) {
        illustrationWrapper.classList.toggle("ui5-illustrated-message-illustration-fit-content", true);
        this._applyMedia(
          true
          /* height change */
        );
      }
    }
  }
  onAfterRendering() {
    this._setSVGAccAttrs();
  }
  /**
   * Modifies the IM styles in accordance to the `size` property's value.
   * Note: The resize handler has no effect when size is different than "Auto".
   * @private
   * @since 1.5.0
   */
  _handleCustomSize() {
    switch (this.design) {
      case IllustrationMessageDesign_default.Base:
        this.media = IllustratedMessage_1.MEDIA.BASE;
        return;
      case IllustrationMessageDesign_default.Dot:
        this.media = IllustratedMessage_1.MEDIA.DOT;
        return;
      case IllustrationMessageDesign_default.Spot:
        this.media = IllustratedMessage_1.MEDIA.SPOT;
        return;
      case IllustrationMessageDesign_default.Dialog:
        this.media = IllustratedMessage_1.MEDIA.DIALOG;
        return;
      default:
        this.media = IllustratedMessage_1.MEDIA.SCENE;
    }
  }
  get ariaLabelText() {
    return getEffectiveAriaLabelText(this);
  }
  get effectiveIllustration() {
    switch (this.media) {
      case IllustratedMessage_1.MEDIA.DOT:
        return this.dotSvg;
      case IllustratedMessage_1.MEDIA.SPOT:
        return this.spotSvg;
      case IllustratedMessage_1.MEDIA.DIALOG:
        return this.dialogSvg;
      case IllustratedMessage_1.MEDIA.SCENE:
        return this.sceneSvg;
      default:
        return "";
    }
  }
  get hasFormattedSubtitle() {
    return !!this.subtitle.length;
  }
  get hasFormattedTitle() {
    return !!this.title.length;
  }
  get effectiveTitleText() {
    return this.titleText ? this.titleText : this.illustrationTitle;
  }
  get effectiveSubitleText() {
    return this.subtitleText ? this.subtitleText : this.illustrationSubtitle;
  }
  get hasTitle() {
    return !!(this.hasFormattedTitle || this.titleText || this.illustrationTitle);
  }
  get hasSubtitle() {
    return !!(this.hasFormattedSubtitle || this.subtitleText || this.illustrationSubtitle);
  }
  get hasActions() {
    return !!this.actions.length && this.media !== IllustratedMessage_1.MEDIA.BASE;
  }
  isValidIllustration(currentIllustration) {
    currentIllustration = currentIllustration.startsWith("tnt/") ? currentIllustration.replace("tnt/", "Tnt") : currentIllustration.replace("fiori/", "");
    return currentIllustration in IllustrationMessageType_default;
  }
};
__decorate55([
  property_default()
], IllustratedMessage.prototype, "name", void 0);
__decorate55([
  property_default()
], IllustratedMessage.prototype, "design", void 0);
__decorate55([
  property_default()
], IllustratedMessage.prototype, "subtitleText", void 0);
__decorate55([
  property_default()
], IllustratedMessage.prototype, "titleText", void 0);
__decorate55([
  property_default()
], IllustratedMessage.prototype, "accessibleNameRef", void 0);
__decorate55([
  property_default({ noAttribute: true })
], IllustratedMessage.prototype, "dotSvg", void 0);
__decorate55([
  property_default({ noAttribute: true })
], IllustratedMessage.prototype, "spotSvg", void 0);
__decorate55([
  property_default({ noAttribute: true })
], IllustratedMessage.prototype, "sceneSvg", void 0);
__decorate55([
  property_default({ noAttribute: true })
], IllustratedMessage.prototype, "dialogSvg", void 0);
__decorate55([
  property_default()
], IllustratedMessage.prototype, "media", void 0);
__decorate55([
  slot_default({ type: HTMLElement })
], IllustratedMessage.prototype, "title", void 0);
__decorate55([
  slot_default({ type: HTMLElement })
], IllustratedMessage.prototype, "subtitle", void 0);
__decorate55([
  slot_default({ type: HTMLElement, "default": true })
], IllustratedMessage.prototype, "actions", void 0);
__decorate55([
  i18n_default("@ui5/webcomponents-fiori")
], IllustratedMessage, "i18nBundle", void 0);
IllustratedMessage = IllustratedMessage_1 = __decorate55([
  customElement_default({
    tag: "ui5-illustrated-message",
    languageAware: true,
    themeAware: true,
    renderer: JsxRenderer_default,
    styles: IllustratedMessage_css_default,
    template: IllustratedMessageTemplate
  })
], IllustratedMessage);
IllustratedMessage.define();
var IllustratedMessage_default = IllustratedMessage;

// node_modules/@ui5/webcomponents-react/dist/webComponents/IllustratedMessage/index.js
var IllustratedMessage3 = withWebComponent("ui5-illustrated-message", ["accessibleNameRef", "design", "name", "subtitleText", "titleText"], [], ["subtitle", "title"], []);
IllustratedMessage3.displayName = "IllustratedMessage";

// node_modules/@ui5/webcomponents-react/dist/webComponents/Input/index.js
var Input = withWebComponent("ui5-input", ["accessibleName", "accessibleNameRef", "maxlength", "name", "placeholder", "type", "value", "valueState"], ["disabled", "noTypeahead", "open", "readonly", "required", "showClearIcon", "showSuggestions"], ["icon", "valueStateMessage"], ["change", "close", "input", "open", "select", "selection-change"]);
Input.displayName = "Input";

// node_modules/@ui5/webcomponents-react/dist/webComponents/Label/index.js
var Label = withWebComponent("ui5-label", ["for", "wrappingType"], ["required", "showColon"], [], []);
Label.displayName = "Label";

// node_modules/@ui5/webcomponents-react/dist/webComponents/Link/index.js
var Link3 = withWebComponent("ui5-link", ["accessibilityAttributes", "accessibleDescription", "accessibleName", "accessibleNameRef", "accessibleRole", "design", "endIcon", "href", "icon", "target", "tooltip", "wrappingType"], ["disabled"], [], ["click"]);
Link3.displayName = "Link";

// node_modules/@ui5/webcomponents-react/dist/webComponents/List/index.js
var List = withWebComponent("ui5-list", ["accessibleDescription", "accessibleDescriptionRef", "accessibleName", "accessibleNameRef", "accessibleRole", "footerText", "growing", "growingButtonText", "headerText", "loadingDelay", "noDataText", "selectionMode", "separators"], ["indent", "loading"], ["header"], ["item-click", "item-close", "item-delete", "item-toggle", "load-more", "move-over", "move", "selection-change"]);
List.displayName = "List";

// node_modules/@ui5/webcomponents-react/dist/webComponents/ListItemCustom/index.js
var ListItemCustom = withWebComponent("ui5-li-custom", ["accessibilityAttributes", "accessibleName", "highlight", "tooltip", "type"], ["movable", "navigated", "selected"], ["deleteButton"], ["detail-click"]);
ListItemCustom.displayName = "ListItemCustom";

// node_modules/@ui5/webcomponents-react/dist/webComponents/ListItemGroup/index.js
var ListItemGroup = withWebComponent("ui5-li-group", ["headerAccessibleName", "headerText"], [], ["header"], ["move-over", "move"]);
ListItemGroup.displayName = "ListItemGroup";

// node_modules/@ui5/webcomponents-react/dist/webComponents/ListItemStandard/index.js
var ListItemStandard3 = withWebComponent("ui5-li", ["accessibilityAttributes", "accessibleName", "additionalText", "additionalTextState", "description", "highlight", "icon", "tooltip", "type"], ["iconEnd", "movable", "navigated", "selected"], ["deleteButton", "image"], ["detail-click"]);
ListItemStandard3.displayName = "ListItemStandard";

// node_modules/@ui5/webcomponents-fiori/dist/generated/themes/MediaGalleryItem.css.js
registerThemePropertiesLoader("@ui5/webcomponents-theming", "sap_horizon", async () => parameters_bundle_css_default);
registerThemePropertiesLoader("@ui5/webcomponents-fiori", "sap_horizon", async () => parameters_bundle_css_default3);
var MediaGalleryItem_css_default = `:host{width:100%;height:100%;position:relative;display:flex}:host([_square]){height:0;padding-top:100%}.ui5-media-gallery-item-root{width:100%;height:100%;display:flex}:host([_square]) .ui5-media-gallery-item-root{position:absolute;top:0;left:0}:host([layout="Wide"]) .ui5-media-gallery-item-root{align-items:center}:host([_thumbnail-design]) .ui5-media-gallery-item-root{border:var(--_ui5-v2-8-0_media_gallery_thumbnail_border);box-sizing:border-box}:host([_interactive]) .ui5-media-gallery-item-root{cursor:pointer}:host([_thumbnail-design]:not([disabled]):not([selected])) .ui5-media-gallery-item-root:hover{border-color:var(--sapTile_Interactive_BorderColor);background:var(--sapList_Hover_Background)}.ui5-media-gallery-item-root:focus{outline:var(--_ui5-v2-8-0_media_gallery_thumbnail_focus_outline);outline-offset:-1px}:host([_thumbnail-design][selected]) .ui5-media-gallery-item-root{border:var(--_ui5-v2-8-0_media_gallery_thumbnail_selected_border)}:host([_thumbnail-design][selected]) .ui5-media-gallery-item-root:focus{outline-offset:-3px}.ui5-media-gallery-item-wrapper{width:100%;height:100%;display:flex;justify-content:center}:host([layout="Wide"]) .ui5-media-gallery-item-wrapper{z-index:1}:host([layout="Wide"]:not([_thumbnail-design])) .ui5-media-gallery-item-wrapper{height:56.25%}[ui5-icon]{position:absolute;width:4.5rem;height:4.55rem;align-self:center}.ui5-media-gallery-item-mask-layer{position:absolute;inset:0;-webkit-user-select:none;-moz-user-select:none;user-select:none}:host(:not([_thumbnail-design])) .ui5-media-gallery-item-mask-layer{z-index:2;background:var(--sapBaseColor);mix-blend-mode:multiply;opacity:.2;box-shadow:var(--_ui5-v2-8-0_media_gallery_item_overlay_box_shadow);pointer-events:none}:host(:not([_thumbnail-design])[layout="Wide"]) .ui5-media-gallery-item-mask-layer{z-index:0}:host([disabled]) .ui5-media-gallery-item-mask-layer{z-index:2;background:var(--sapContent_ImagePlaceholderBackground);opacity:.5;cursor:default}::slotted([slot^=thumbnail]),:host([layout="Wide"]) ::slotted(*){width:100%;height:100%;object-fit:cover}::slotted(*){max-width:100%;max-height:100%;object-fit:contain;margin:auto}
`;

// node_modules/@ui5/webcomponents-icons/dist/v4/background.js
var name20 = "background";
var pathData19 = "M368 192q-20 0-34-14t-14-34 14-34 34-14 34 14 14 34-14 34-34 14zm80-160q14 0 23 9t9 23v384q0 14-9 23t-23 9H64q-13 0-22.5-9T32 448V64q0-14 9.5-23T64 32h384zm0 32H64v384h384V64zm-92 288l-58-85 22-43 96 128h-60zm-7 32H94l130-183z";
var ltr19 = false;
var collection20 = "SAP-icons-v4";
var packageName19 = "@ui5/webcomponents-icons";
registerIcon(name20, { pathData: pathData19, ltr: ltr19, collection: collection20, packageName: packageName19 });

// node_modules/@ui5/webcomponents-icons/dist/v5/background.js
var name21 = "background";
var pathData20 = "M480 390q0 38-26 64t-64 26H122q-38 0-64-26t-26-64V122q0-38 26-64t64-26h268q38 0 64 26t26 64v268zm-397 2l90-96q8-8 19-8 7 0 14 4l41 26 87-87q9-7 18-7 7 0 11 3l66 32V122q0-17-11-28t-28-11H122q-17 0-28 11t-11 28v270zm85-184q-17 0-28.5-11.5T128 168t11.5-28.5T168 128t28.5 11.5T208 168t-11.5 28.5T168 208zm222 221q17 0 28-11t11-28v-73l-72-36-65 65 16 10q12 7 12 22 0 10-7.5 17.5T294 403q-8 0-13-4l-85-53-77 83h271z";
var ltr20 = false;
var collection21 = "SAP-icons-v5";
var packageName20 = "@ui5/webcomponents-icons";
registerIcon(name21, { pathData: pathData20, ltr: ltr20, collection: collection21, packageName: packageName20 });

// node_modules/@ui5/webcomponents-icons/dist/background.js
var background_default = "background";

// node_modules/@ui5/webcomponents-fiori/dist/MediaGalleryItemTemplate.js
function MediaGalleryItemTemplate() {
  return jsxs("div", { class: "ui5-media-gallery-item-root", tabindex: this.effectiveTabIndex, "data-sap-focus-ref": true, onKeyDown: this._onkeydown, onKeyUp: this._onkeyup, role: this._role, children: [jsx("div", { class: "ui5-media-gallery-item-mask-layer" }), jsxs("div", { class: "ui5-media-gallery-item-wrapper", style: this.styles.wrapper, children: [this._showBackgroundIcon && jsx(Icon_default, { name: background_default }), this._useContent && jsx("slot", {}), this._useThumbnail && jsx("slot", { name: "thumbnail" })] })] });
}

// node_modules/@ui5/webcomponents-fiori/dist/MediaGalleryItem.js
var __decorate56 = function(decorators, target, key, desc) {
  var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
  if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
  else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
  return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var MediaGalleryItem = class MediaGalleryItem2 extends UI5Element_default {
  constructor() {
    super();
    this.selected = false;
    this.disabled = false;
    this.layout = "Square";
    this._interactive = !isPhone();
    this._square = false;
    this._contentImageNotFound = false;
    this._thumbnailNotFound = false;
    this._thumbnailDesign = false;
    this._monitoredContent = null;
    this._monitoredThumbnail = null;
  }
  onEnterDOM() {
    this._thumbnailDesign = !isPhone();
    this._square = true;
  }
  get _thumbnail() {
    return this.thumbnail.length ? this.thumbnail[0] : null;
  }
  get displayedContent() {
    return this.content.length ? this.content[0] : null;
  }
  get _isThubmnailAvailable() {
    return this._thumbnail && !this._thumbnailNotFound;
  }
  get _isContentAvailable() {
    return this.displayedContent && !this._contentImageNotFound;
  }
  get _useThumbnail() {
    return this._thumbnailDesign && this._isThubmnailAvailable;
  }
  get _useContent() {
    return !this._useThumbnail && this._isContentAvailable;
  }
  get effectiveTabIndex() {
    if (this.disabled) {
      return void 0;
    }
    return this.forcedTabIndex ? parseInt(this.forcedTabIndex) : void 0;
  }
  get _showBackgroundIcon() {
    return this._thumbnailNotFound || this._contentImageNotFound;
  }
  get styles() {
    return {
      wrapper: {
        height: this.contentHeight
      }
    };
  }
  get _role() {
    return this._interactive ? "button" : void 0;
  }
  onBeforeRendering() {
    this._monitorLoadingError();
  }
  _monitorLoadingError() {
    let callback, success;
    if (this._thumbnailDesign && this.thumbnail.length && this._monitoredThumbnail !== this._thumbnail) {
      this._thumbnailNotFound = false;
      callback = this._updateThumbnailLoaded.bind(this);
      success = this._attachListeners(this._thumbnail, callback);
      success && (this._monitoredThumbnail = this._thumbnail);
    }
    if (!this._useThumbnail && this.content.length && this._monitoredContent !== this.displayedContent) {
      this._contentImageNotFound = false;
      callback = this._updateContentImageLoaded.bind(this);
      success = this._attachListeners(this.displayedContent, callback);
      success && (this._monitoredContent = this.displayedContent);
    }
  }
  _attachListeners(element, callback) {
    const isImg = element.tagName === "IMG", img = isImg ? element : element.querySelector("img");
    if (img) {
      callback(img);
      img.addEventListener("error", () => {
        if (this.contains(img)) {
          callback(img);
        }
      });
      img.addEventListener("load", () => {
        if (this.contains(img)) {
          callback(img);
        }
      });
      return true;
    }
  }
  _updateContentImageLoaded(image) {
    this._contentImageNotFound = image.naturalHeight === 0 && image.naturalWidth === 0;
  }
  _updateThumbnailLoaded(image) {
    this._thumbnailNotFound = image.naturalHeight === 0 && image.naturalWidth === 0;
  }
  _onkeydown(e) {
    if (isSpace(e)) {
      e.preventDefault();
    }
    if (isEnter(e)) {
      this._fireItemClick();
    }
  }
  _onkeyup(e) {
    if (isSpace(e)) {
      this._fireItemClick();
    }
  }
  _fireItemClick() {
    this.fireDecoratorEvent("click", { item: this });
  }
};
__decorate56([
  property_default({ type: Boolean })
], MediaGalleryItem.prototype, "selected", void 0);
__decorate56([
  property_default({ type: Boolean })
], MediaGalleryItem.prototype, "disabled", void 0);
__decorate56([
  property_default()
], MediaGalleryItem.prototype, "layout", void 0);
__decorate56([
  property_default({ type: Boolean })
], MediaGalleryItem.prototype, "_interactive", void 0);
__decorate56([
  property_default({ type: Boolean })
], MediaGalleryItem.prototype, "_square", void 0);
__decorate56([
  property_default({ type: Boolean })
], MediaGalleryItem.prototype, "_contentImageNotFound", void 0);
__decorate56([
  property_default({ type: Boolean })
], MediaGalleryItem.prototype, "_thumbnailNotFound", void 0);
__decorate56([
  property_default({ type: Boolean })
], MediaGalleryItem.prototype, "_thumbnailDesign", void 0);
__decorate56([
  property_default()
], MediaGalleryItem.prototype, "forcedTabIndex", void 0);
__decorate56([
  property_default({ noAttribute: true })
], MediaGalleryItem.prototype, "contentHeight", void 0);
__decorate56([
  slot_default({ type: HTMLElement, "default": true })
], MediaGalleryItem.prototype, "content", void 0);
__decorate56([
  slot_default()
], MediaGalleryItem.prototype, "thumbnail", void 0);
MediaGalleryItem = __decorate56([
  customElement_default({
    tag: "ui5-media-gallery-item",
    renderer: JsxRenderer_default,
    styles: MediaGalleryItem_css_default,
    template: MediaGalleryItemTemplate
  }),
  event_strict_default("click", {
    bubbles: true
  })
], MediaGalleryItem);
MediaGalleryItem.define();
var MediaGalleryItem_default = MediaGalleryItem;

// node_modules/@ui5/webcomponents-fiori/dist/types/MediaGalleryItemLayout.js
var MediaGalleryItemLayout;
(function(MediaGalleryItemLayout2) {
  MediaGalleryItemLayout2["Square"] = "Square";
  MediaGalleryItemLayout2["Wide"] = "Wide";
})(MediaGalleryItemLayout || (MediaGalleryItemLayout = {}));
var MediaGalleryItemLayout_default = MediaGalleryItemLayout;

// node_modules/@ui5/webcomponents-fiori/dist/types/MediaGalleryLayout.js
var MediaGalleryLayout;
(function(MediaGalleryLayout2) {
  MediaGalleryLayout2["Auto"] = "Auto";
  MediaGalleryLayout2["Vertical"] = "Vertical";
  MediaGalleryLayout2["Horizontal"] = "Horizontal";
})(MediaGalleryLayout || (MediaGalleryLayout = {}));
var MediaGalleryLayout_default = MediaGalleryLayout;

// node_modules/@ui5/webcomponents-fiori/dist/generated/themes/MediaGallery.css.js
registerThemePropertiesLoader("@ui5/webcomponents-theming", "sap_horizon", async () => parameters_bundle_css_default);
registerThemePropertiesLoader("@ui5/webcomponents-fiori", "sap_horizon", async () => parameters_bundle_css_default3);
var MediaGallery_css_default = `:host{height:100%}:host,.ui5-media-gallery-display-wrapper,.ui5-media-gallery-display{width:100%}.ui5-media-gallery-root{width:inherit;height:inherit;background:var(--sapBaseColor);display:flex;flex-direction:column;position:relative}:host([menu-vertical-align="Top"]) .ui5-media-gallery-root{flex-direction:column-reverse}:host([effective-layout="Horizontal"]) .ui5-media-gallery-root{flex-direction:row-reverse}:host([effective-layout="Horizontal"][menu-horizontal-align="Right"]) .ui5-media-gallery-root{flex-direction:row}.ui5-media-gallery-display-wrapper{display:flex;justify-content:center;position:relative}:host([effective-layout="Horizontal"][show-all-thumbnails]) .ui5-media-gallery-display-wrapper{flex-grow:3;flex-basis:0}.ui5-media-gallery-display{position:relative;margin:1rem;display:flex;justify-content:center}.ui5-media-gallery-display [ui5-media-gallery-item]{z-index:1}[ui5-carousel]{width:calc(100% - 2rem)}[ui5-carousel]::part(item){padding:0;overflow:hidden}.ui5-media-gallery-thumbnails-wrapper{margin-block:1rem 0}:host([menu-vertical-align="Top"]) .ui5-media-gallery-thumbnails-wrapper{margin-block:0 1rem}:host([effective-layout="Horizontal"]) .ui5-media-gallery-thumbnails-wrapper{margin-inline:0 1rem}:host([effective-layout="Horizontal"][menu-horizontal-align="Right"]) .ui5-media-gallery-thumbnails-wrapper{margin-inline:1rem 0}:host([show-all-thumbnails]) .ui5-media-gallery-thumbnails-wrapper{overflow-x:auto;overflow-y:hidden}:host([effective-layout="Horizontal"][show-all-thumbnails]) .ui5-media-gallery-thumbnails-wrapper{overflow-y:auto;overflow-x:hidden;flex-grow:1;flex-basis:0}.ui5-media-gallery-thumbnails-wrapper ul{height:5rem;display:flex;flex-wrap:nowrap;padding-left:0;margin-top:0;margin-bottom:0;list-style-type:none;padding-inline-start:0}:host([effective-layout="Horizontal"]) ul{width:5rem;flex-wrap:wrap}:host([effective-layout="Horizontal"][show-all-thumbnails][media-range="M"]) ul{width:10rem}:host([effective-layout="Horizontal"][show-all-thumbnails][media-range="L"]) ul{width:15rem}:host([effective-layout="Horizontal"][show-all-thumbnails][media-range="XL"]) ul{width:20rem}.ui5-media-gallery-thumbnail,.ui5-media-gallery-overflow [ui5-button]{width:4rem;height:4rem;flex-shrink:0}.ui5-media-gallery-overflow [ui5-button]{background:var(--_ui5-v2-8-0_media_gallery_overflow_btn_background);color:var(--_ui5-v2-8-0_media_gallery_overflow_btn_color);border:var(--_ui5-v2-8-0_media_gallery_overflow_btn_border)}.ui5-media-gallery-thumbnail,.ui5-media-gallery-overflow{margin:0 0 0 1rem}:host([menu-vertical-align="Top"]) .ui5-media-gallery-thumbnail,:host([menu-vertical-align="Top"]) .ui5-media-gallery-overflow{margin:1rem 0 0 1rem}:host([effective-layout="Horizontal"]) .ui5-media-gallery-thumbnail,:host([effective-layout="Horizontal"]) .ui5-media-gallery-overflow{margin:1rem 0 0 1rem}:host([effective-layout="Horizontal"][menu-horizontal-align="Right"]) .ui5-media-gallery-thumbnail,:host([effective-layout="Horizontal"][menu-horizontal-align="Right"]) .ui5-media-gallery-overflow{margin:1rem 1rem 0 0}
`;

// node_modules/@ui5/webcomponents-fiori/dist/MediaGalleryTemplate.js
function MediaGalleryTemplate() {
  return jsxs("div", { class: "ui5-media-gallery-root", children: [jsx("div", { class: "ui5-media-gallery-display-wrapper", children: jsx("div", { class: "ui5-media-gallery-display", onClick: this._onDisplayAreaClick, children: this._isPhonePlatform ? jsx(Carousel_default, { onNavigate: this._onCarouselNavigate, hideNavigationArrows: true, children: this._selectableItems.map((item2) => jsx("slot", { name: item2._individualSlot })) }) : jsx(MediaGalleryItem_default, { _interactive: this.interactiveDisplayArea, _square: this._shouldHaveSquareDisplay, tabIndex: this._mainItemTabIndex }) }) }), this._showThumbnails && jsx("div", { class: "ui5-media-gallery-thumbnails-wrapper", children: jsxs("ul", { children: [this._visibleItems.map((item2) => jsx("li", { id: item2.id, class: "ui5-media-gallery-thumbnail", role: "option", onClick: this._onThumbnailClick, children: jsx("slot", { name: item2._individualSlot }) })), this._showOverflowBtn && jsx("li", { class: "ui5-media-gallery-overflow", children: jsxs(Button_default, { onClick: this._onOverflowBtnClick, children: ["+", this._overflowSize] }) })] }) })] });
}

// node_modules/@ui5/webcomponents-fiori/dist/MediaGallery.js
var __decorate57 = function(decorators, target, key, desc) {
  var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
  if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
  else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
  return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var MediaGallery_1;
var COLUMNS_COUNT = {
  "S": 1,
  "M": 2,
  "L": 3,
  "XL": 4
};
var MediaGallery = MediaGallery_1 = class MediaGallery2 extends UI5Element_default {
  constructor() {
    super();
    this.showAllThumbnails = false;
    this.interactiveDisplayArea = false;
    this.layout = "Auto";
    this.menuHorizontalAlign = "Left";
    this.menuVerticalAlign = "Bottom";
    this.effectiveLayout = "Vertical";
    this.mediaRange = "S";
    this._overflowSize = 0;
    this._onResize = this._updateLayout.bind(this);
    this._itemNavigation = new ItemNavigation_default(this, {
      navigationMode: NavigationMode_default.Auto,
      getItemsCallback: () => this._getFocusableItems()
    });
  }
  onEnterDOM() {
    !isPhone() && ResizeHandler_default.register(this, this._onResize);
  }
  onExitDOM() {
    !isPhone() && ResizeHandler_default.deregister(this, this._onResize);
  }
  onAfterRendering() {
    this._updateLayout();
    this._updateSelection();
  }
  _updateSelection() {
    if (this.items.length === 0) {
      this._selectedItem = void 0;
      if (this._mainItem) {
        const oldContent = this._mainItem.displayedContent;
        oldContent == null ? void 0 : oldContent.remove();
      }
      return;
    }
    let itemToSelect = this.items.find((item2) => item2.selected);
    if (!itemToSelect || !this._isSelectableItem(itemToSelect)) {
      itemToSelect = this._findSelectableItem();
    }
    if (itemToSelect && itemToSelect !== this._selectedItem) {
      this._selectItem(itemToSelect);
    }
  }
  _isSelectableItem(item2) {
    return !item2.disabled && !item2.hidden;
  }
  _findSelectableItem() {
    return this.items.find(this._isSelectableItem);
  }
  _updateMediaRange(width) {
    this.mediaRange = MediaRange_default.getCurrentRange(MediaRange_default.RANGESETS.RANGE_4STEPS, width);
  }
  _updateLayout() {
    const rootNode = this.getDomRef(), height = rootNode.offsetHeight, width = rootNode.offsetWidth;
    if (!width || !height || isPhone()) {
      return;
    }
    this._updateMediaRange(width);
    this.effectiveLayout = this._infereffectiveLayout();
    this._overflowSize = this._calculateOverflowSize(width, height);
    this._toggleDisplaySquareSize(this._shouldHaveSquareDisplay);
    this._toggleMainItem9x16size(this._shouldHaveWideDisplay);
  }
  _calculateOverflowSize(width, height) {
    const marginSize = MediaGallery_1.THUMBNAIL_MARGIN;
    let columnHeight, columnsCount;
    if (this.showAllThumbnails) {
      return 0;
    }
    if (this.effectiveLayout === MediaGalleryLayout_default.Horizontal) {
      columnHeight = height - marginSize;
      columnsCount = this.showAllThumbnails ? COLUMNS_COUNT[this.mediaRange] : 1;
    } else {
      columnHeight = width - marginSize * 2;
      columnsCount = 1;
    }
    return this._getOverflowSize(columnHeight, columnsCount);
  }
  _toggleDisplaySquareSize(enable) {
    this._display.style.width = "";
    if (enable) {
      const marginSize = MediaGallery_1.THUMBNAIL_MARGIN, width = this._display.offsetWidth;
      let availableHeight = this.getDomRef().offsetHeight - 2 * marginSize;
      if (this.effectiveLayout === MediaGalleryLayout_default.Vertical) {
        availableHeight -= MediaGallery_1.THUMBNAIL_HEIGHT + marginSize;
      }
      if (width > availableHeight) {
        this._display.style.width = `${availableHeight}px`;
      }
    }
  }
  _toggleMainItem9x16size(enable) {
    if (!this._mainItem) {
      return;
    }
    const width = this._mainItem.offsetWidth, contentHeight = enable ? `${width / 16 * 9}px` : "";
    this._mainItem.contentHeight = contentHeight;
  }
  _infereffectiveLayout() {
    if (this.layout === MediaGalleryLayout_default.Auto) {
      return this._isPhoneSize ? MediaGalleryLayout_default.Vertical : MediaGalleryLayout_default.Horizontal;
    }
    return this.layout;
  }
  _getMaxAllowedThumbnailsInColumn(columnHeight) {
    let maxAllowedItems = Math.floor(columnHeight / MediaGallery_1.THUMBNAIL_HEIGHT);
    if (!this.showAllThumbnails) {
      maxAllowedItems = Math.min(maxAllowedItems, 5);
    }
    return maxAllowedItems;
  }
  _getOverflowSize(columnHeight, columnsCount) {
    const maxAlowedThumbnailsInColumn = this._getMaxAllowedThumbnailsInColumn(columnHeight), overflowSize = Math.max(0, this.items.length - maxAlowedThumbnailsInColumn * columnsCount);
    if (overflowSize === this.items.length || overflowSize === 0) {
      return overflowSize;
    }
    return overflowSize + 1;
  }
  _getFocusableItems() {
    if (!this._showThumbnails) {
      return [];
    }
    const items3 = this._visibleItems.filter((item2) => !item2.disabled);
    if (this._overflowBtn) {
      items3.push(this._overflowBtn);
    }
    return items3;
  }
  _selectItem(item2, userInteraction = false) {
    if (item2 === this._selectedItem) {
      return;
    }
    this._selectedItem = item2;
    this._updateSelectedFlag(item2);
    this._itemNavigation.setCurrentItem(item2);
    if (userInteraction) {
      this.fireDecoratorEvent("selection-change", { item: item2 });
    }
    if (isPhone()) {
      this._selectItemOnPhone(item2);
    } else {
      this._displayContent(item2);
    }
  }
  _updateSelectedFlag(itemToSelect) {
    this.items.forEach((next) => {
      next.selected = false;
    });
    itemToSelect.selected = true;
  }
  _selectItemOnPhone(item2) {
    const selectableItemIndex = this._selectableItems.indexOf(item2), carousel = this._carousel;
    carousel && carousel.navigateTo(selectableItemIndex);
  }
  _displayContent(item2) {
    let clone;
    const mainItem = this._mainItem, oldContent = mainItem.displayedContent, newContent = item2.displayedContent;
    mainItem._thumbnailDesign = false;
    oldContent && oldContent.remove();
    if (newContent) {
      clone = newContent.cloneNode(true);
      mainItem.layout = item2.layout;
      mainItem.appendChild(clone);
    }
  }
  _onThumbnailClick(e) {
    const target = e.target;
    const item2 = target.closest("[ui5-media-gallery-item]");
    if (item2.disabled) {
      return;
    }
    if (item2 !== this._selectedItem) {
      this._selectItem(
        item2,
        true
        /* userInteraction */
      );
    }
  }
  _onOverflowBtnClick() {
    this.fireDecoratorEvent("overflow-click");
  }
  _onDisplayAreaClick() {
    if (!this.interactiveDisplayArea) {
      return;
    }
    this.fireDecoratorEvent("display-area-click");
  }
  _onCarouselNavigate(e) {
    const selectedIndex = e.detail.selectedIndex, item2 = this._selectableItems[selectedIndex];
    this.fireDecoratorEvent("selection-change", { item: item2 });
  }
  get _mainItemTabIndex() {
    return this.interactiveDisplayArea ? 0 : void 0;
  }
  get _selectableItems() {
    return this.items.filter(this._isSelectableItem);
  }
  get _carousel() {
    return this.shadowRoot.querySelector("[ui5-carousel]");
  }
  get _display() {
    return this.shadowRoot.querySelector(".ui5-media-gallery-display");
  }
  get _mainItem() {
    return this.shadowRoot.querySelector(".ui5-media-gallery-display [ui5-media-gallery-item]");
  }
  get _overflowBtn() {
    return this.shadowRoot.querySelector(".ui5-media-gallery-overflow [ui5-button]");
  }
  get _visibleItems() {
    const visibleItemsCount = this.items.length - this._overflowSize;
    return this.items.slice(0, visibleItemsCount);
  }
  get _isPhonePlatform() {
    return isPhone();
  }
  get _showThumbnails() {
    return !isPhone();
  }
  get _showOverflowBtn() {
    return this._overflowSize > 0;
  }
  get _isPhoneSize() {
    return this.mediaRange === "S";
  }
  get _mainItemHasWideLayout() {
    return this._mainItem && this._mainItem.layout === MediaGalleryItemLayout_default.Wide;
  }
  get _shouldHaveWideDisplay() {
    return !!this._mainItemHasWideLayout && this.showAllThumbnails && this.effectiveLayout === MediaGalleryLayout_default.Horizontal;
  }
  get _shouldHaveSquareDisplay() {
    return !this._shouldHaveWideDisplay;
  }
  static get THUMBNAIL_HEIGHT() {
    return 80;
  }
  static get THUMBNAIL_MARGIN() {
    return 16;
  }
};
__decorate57([
  property_default({ type: Boolean })
], MediaGallery.prototype, "showAllThumbnails", void 0);
__decorate57([
  property_default({ type: Boolean })
], MediaGallery.prototype, "interactiveDisplayArea", void 0);
__decorate57([
  property_default()
], MediaGallery.prototype, "layout", void 0);
__decorate57([
  property_default()
], MediaGallery.prototype, "menuHorizontalAlign", void 0);
__decorate57([
  property_default()
], MediaGallery.prototype, "menuVerticalAlign", void 0);
__decorate57([
  property_default()
], MediaGallery.prototype, "effectiveLayout", void 0);
__decorate57([
  property_default()
], MediaGallery.prototype, "mediaRange", void 0);
__decorate57([
  property_default({ type: Number, noAttribute: true })
], MediaGallery.prototype, "_overflowSize", void 0);
__decorate57([
  slot_default({
    type: HTMLElement,
    individualSlots: true,
    invalidateOnChildChange: true,
    "default": true
  })
], MediaGallery.prototype, "items", void 0);
MediaGallery = MediaGallery_1 = __decorate57([
  customElement_default({
    tag: "ui5-media-gallery",
    renderer: JsxRenderer_default,
    styles: [MediaGallery_css_default],
    template: MediaGalleryTemplate,
    dependencies: [
      MediaGalleryItem_default,
      Button_default,
      Carousel_default
    ]
  }),
  event_strict_default("selection-change", {
    bubbles: true
  }),
  event_strict_default("overflow-click", {
    bubbles: true
  }),
  event_strict_default("display-area-click", {
    bubbles: true
  })
], MediaGallery);
MediaGallery.define();

// node_modules/@ui5/webcomponents-react/dist/webComponents/MediaGallery/index.js
var MediaGallery3 = withWebComponent("ui5-media-gallery", ["layout", "menuHorizontalAlign", "menuVerticalAlign"], ["interactiveDisplayArea", "showAllThumbnails"], [], ["display-area-click", "overflow-click", "selection-change"]);
MediaGallery3.displayName = "MediaGallery";

// node_modules/@ui5/webcomponents-react/dist/webComponents/MediaGalleryItem/index.js
var MediaGalleryItem3 = withWebComponent("ui5-media-gallery-item", ["layout"], ["disabled", "selected"], ["thumbnail"], []);
MediaGalleryItem3.displayName = "MediaGalleryItem";

// node_modules/@ui5/webcomponents-react/dist/webComponents/Menu/index.js
var Menu = withWebComponent("ui5-menu", ["headerText", "loadingDelay", "opener"], ["loading", "open"], [], ["before-close", "before-open", "close", "item-click", "open"]);
Menu.displayName = "Menu";

// node_modules/@ui5/webcomponents-react/dist/webComponents/MenuItem/index.js
var MenuItem = withWebComponent("ui5-menu-item", ["accessibilityAttributes", "accessibleName", "additionalText", "highlight", "icon", "loadingDelay", "text", "tooltip", "type"], ["disabled", "loading", "navigated", "selected"], ["deleteButton", "endContent"], ["before-close", "before-open", "close", "detail-click", "open"]);
MenuItem.displayName = "MenuItem";

// node_modules/@ui5/webcomponents-react/dist/webComponents/MenuSeparator/index.js
var MenuSeparator = withWebComponent("ui5-menu-separator", [], [], [], []);
MenuSeparator.displayName = "MenuSeparator";

// node_modules/@ui5/webcomponents/dist/types/MessageStripDesign.js
var MessageStripDesign;
(function(MessageStripDesign2) {
  MessageStripDesign2["Information"] = "Information";
  MessageStripDesign2["Positive"] = "Positive";
  MessageStripDesign2["Negative"] = "Negative";
  MessageStripDesign2["Critical"] = "Critical";
  MessageStripDesign2["ColorSet1"] = "ColorSet1";
  MessageStripDesign2["ColorSet2"] = "ColorSet2";
})(MessageStripDesign || (MessageStripDesign = {}));
var MessageStripDesign_default = MessageStripDesign;

// node_modules/@ui5/webcomponents/dist/MessageStripTemplate.js
function MessageStripTemplate() {
  return jsxs("div", { id: this._id, class: {
    "ui5-message-strip-root": true,
    "ui5-message-strip-root-hide-icon": this.shouldHideIcon,
    "ui5-message-strip-root-hide-close-button": this.hideCloseButton,
    [this.designClasses]: true
  }, role: "note", "aria-labelledby": this._id, children: [!this.shouldHideIcon && jsx("div", { class: "ui5-message-strip-icon-wrapper", "aria-hidden": "true", children: this.iconProvided ? jsx("slot", { name: "icon" }) : jsx(Icon_default, { name: standardIconName.call(this), class: "ui5-message-strip-icon" }) }), jsx("span", { class: "ui5-hidden-text", children: this.hiddenText }), jsx("span", { class: "ui5-message-strip-text", children: jsx("slot", {}) }), !this.hideCloseButton && jsx(Button_default, { icon: decline_default, design: "Transparent", class: "ui5-message-strip-close-button", tooltip: this._closeButtonText, onClick: this._closeClick })] });
}
function standardIconName() {
  switch (this.design) {
    case MessageStripDesign_default.Critical:
      return alert_default;
    case MessageStripDesign_default.Positive:
      return sys_enter_2_default;
    case MessageStripDesign_default.Negative:
      return error_default;
    case MessageStripDesign_default.Information:
      return information_default;
    default:
      return void 0;
  }
}

// node_modules/@ui5/webcomponents/dist/generated/themes/MessageStrip.css.js
registerThemePropertiesLoader("@ui5/webcomponents-theming", "sap_horizon", async () => parameters_bundle_css_default);
registerThemePropertiesLoader("@ui5/webcomponents", "sap_horizon", async () => parameters_bundle_css_default2);
var MessageStrip_css_default = `.ui5-hidden-text{position:absolute;clip:rect(1px,1px,1px,1px);user-select:none;left:-1000px;top:-1000px;pointer-events:none;font-size:0}:host(:not([hidden])){display:inline-block;width:100%}.ui5-message-strip-root{width:100%;height:100%;display:flex;border-radius:var(--sapPopover_BorderCornerRadius);padding:var(--_ui5-v2-8-0_message_strip_padding);border-width:var(--_ui5-v2-8-0_message_strip_border_width);border-style:solid;box-sizing:border-box;position:relative}.ui5-message-strip-root-hide-icon{padding-inline:var(--_ui5-v2-8-0_message_strip_padding_inline_no_icon);padding-block:var(--_ui5-v2-8-0_message_strip_padding_block_no_icon)}.ui5-message-strip-root-hide-close-button{padding-inline-end:1rem}.ui5-message-strip-root--info{background-color:var(--sapInformationBackground);border-color:var(--sapMessage_InformationBorderColor);color:var(--sapTextColor)}.ui5-message-strip-root--info .ui5-message-strip-icon{color:var(--sapInformativeElementColor)}.ui5-message-strip-root--positive{background-color:var(--sapSuccessBackground);border-color:var(--sapMessage_SuccessBorderColor)}.ui5-message-strip-root--positive .ui5-message-strip-icon{color:var(--sapPositiveElementColor)}.ui5-message-strip-root--negative{background-color:var(--sapErrorBackground);border-color:var(--sapMessage_ErrorBorderColor)}.ui5-message-strip-root--negative .ui5-message-strip-icon{color:var(--sapNegativeElementColor)}.ui5-message-strip-root--critical{background-color:var(--sapWarningBackground);border-color:var(--sapMessage_WarningBorderColor)}.ui5-message-strip-root--critical .ui5-message-strip-icon{color:var(--sapCriticalElementColor)}.ui5-message-strip-icon-wrapper{position:absolute;top:var(--_ui5-v2-8-0_message_strip_icon_top);inset-inline-start:.75rem;box-sizing:border-box}.ui5-message-strip-text{width:100%;color:var(--sapTextColor);line-height:1.2;font-family:"72override",var(--sapFontFamily);font-size:var(--sapFontSize)}.ui5-message-strip-close-button{height:1.625rem;min-height:1.625rem;position:absolute;top:var(--_ui5-v2-8-0_message_strip_close_button_top);inset-inline-end:var(--_ui5-v2-8-0_message_strip_close_button_right)}:host([color-scheme="1"]) .ui5-message-strip-root--color-set-1,:host(:not([color-scheme])[design="ColorSet1"]) .ui5-message-strip-root--color-set-1{background-color:var(--sapIndicationColor_1_Background);border-color:var(--sapIndicationColor_1_BorderColor)}:host([color-scheme="2"]) .ui5-message-strip-root--color-set-1{background-color:var(--sapIndicationColor_2_Background);border-color:var(--sapIndicationColor_2_BorderColor)}:host([color-scheme="3"]) .ui5-message-strip-root--color-set-1{background-color:var(--sapIndicationColor_3_Background);border-color:var(--sapIndicationColor_3_BorderColor)}:host([color-scheme="4"]) .ui5-message-strip-root--color-set-1{background-color:var(--sapIndicationColor_4_Background);border-color:var(--sapIndicationColor_4_BorderColor)}:host([color-scheme="5"]) .ui5-message-strip-root--color-set-1{background-color:var(--sapIndicationColor_5_Background);border-color:var(--sapIndicationColor_5_BorderColor)}:host([color-scheme="6"]) .ui5-message-strip-root--color-set-1{background-color:var(--sapIndicationColor_6_Background);border-color:var(--sapIndicationColor_6_BorderColor)}:host([color-scheme="7"]) .ui5-message-strip-root--color-set-1{background-color:var(--sapIndicationColor_7_Background);border-color:var(--sapIndicationColor_7_BorderColor)}:host([color-scheme="8"]) .ui5-message-strip-root--color-set-1{background-color:var(--sapIndicationColor_8_Background);border-color:var(--sapIndicationColor_8_BorderColor)}:host([color-scheme="9"]) .ui5-message-strip-root--color-set-1{background-color:var(--sapIndicationColor_9_Background);border-color:var(--sapIndicationColor_9_BorderColor)}:host([color-scheme="10"]) .ui5-message-strip-root--color-set-1{background-color:var(--sapIndicationColor_10_Background);border-color:var(--sapIndicationColor_10_BorderColor)}:host([color-scheme="1"]) .ui5-message-strip-root--color-set-2,:host(:not([color-scheme])[design="ColorSet2"]) .ui5-message-strip-root--color-set-2{background-color:var(--_ui5-v2-8-0_message_strip_scheme_1_set_2_background);border-color:var(--_ui5-v2-8-0_message_strip_scheme_1_set_2_border_color)}:host([color-scheme="2"]) .ui5-message-strip-root--color-set-2{background-color:var(--_ui5-v2-8-0_message_strip_scheme_2_set_2_background);border-color:var(--_ui5-v2-8-0_message_strip_scheme_2_set_2_border_color)}:host([color-scheme="3"]) .ui5-message-strip-root--color-set-2{background-color:var(--_ui5-v2-8-0_message_strip_scheme_3_set_2_background);border-color:var(--_ui5-v2-8-0_message_strip_scheme_3_set_2_border_color)}:host([color-scheme="4"]) .ui5-message-strip-root--color-set-2{background-color:var(--_ui5-v2-8-0_message_strip_scheme_4_set_2_background);border-color:var(--_ui5-v2-8-0_message_strip_scheme_4_set_2_border_color)}:host([color-scheme="5"]) .ui5-message-strip-root--color-set-2{background-color:var(--_ui5-v2-8-0_message_strip_scheme_5_set_2_background);border-color:var(--_ui5-v2-8-0_message_strip_scheme_5_set_2_border_color)}:host([color-scheme="6"]) .ui5-message-strip-root--color-set-2{background-color:var(--_ui5-v2-8-0_message_strip_scheme_6_set_2_background);border-color:var(--_ui5-v2-8-0_message_strip_scheme_6_set_2_border_color)}:host([color-scheme="7"]) .ui5-message-strip-root--color-set-2{background-color:var(--_ui5-v2-8-0_message_strip_scheme_7_set_2_background);border-color:var(--_ui5-v2-8-0_message_strip_scheme_7_set_2_border_color)}:host([color-scheme="8"]) .ui5-message-strip-root--color-set-2{background-color:var(--_ui5-v2-8-0_message_strip_scheme_8_set_2_background);border-color:var(--_ui5-v2-8-0_message_strip_scheme_8_set_2_border_color)}:host([color-scheme="9"]) .ui5-message-strip-root--color-set-2{background-color:var(--_ui5-v2-8-0_message_strip_scheme_9_set_2_background);border-color:var(--_ui5-v2-8-0_message_strip_scheme_9_set_2_border_color)}:host([color-scheme="10"]) .ui5-message-strip-root--color-set-2{background-color:var(--_ui5-v2-8-0_message_strip_scheme_10_set_2_background);border-color:var(--_ui5-v2-8-0_message_strip_scheme_10_set_2_border_color)}:host([design="ColorSet1"]) .ui5-message-strip-root .ui5-message-strip-text{color:var(--sapContent_ContrastTextColor);text-shadow:var(--sapContent_ContrastTextShadow)}:host([design="ColorSet1"]) .ui5-message-strip-root ::slotted([slot="icon"]){color:var(--sapContent_ContrastIconColor);text-shadow:var(--sapContent_ContrastTextShadow)}:host([design="ColorSet2"]) .ui5-message-strip-root .ui5-message-strip-text{color:var(--sapTextColor)}:host([design="ColorSet1"]) .ui5-message-strip-close-button{color:var(--_ui5-v2-8-0_message_strip_close_button_color_set_1_color)}:host([design="ColorSet2"]) .ui5-message-strip-close-button,:host([design="ColorSet2"]) .ui5-message-strip-root ::slotted([slot="icon"]){color:var(--sapContent_IconColor)}:host([design="ColorSet1"]) .ui5-message-strip-close-button:hover{border-color:var(--sapContent_ContrastIconColor);background-color:var(--_ui5-v2-8-0_message_strip_close_button_color_set_1_background);color:var(--_ui5-v2-8-0_message_strip_close_button_color_set_1_hover_color);text-shadow:var(--sapContent_ContrastTextShadow)}:host([design="ColorSet2"]) .ui5-message-strip-close-button:hover{background-color:var(--_ui5-v2-8-0_message_strip_close_button_color_set_2_background);border-color:var(--sapContent_IconColor);color:var(--sapContent_IconColor)}:host([design="ColorSet1"]) .ui5-message-strip-close-button:active{background:none;border-color:var(--sapContent_ContrastIconColor)}:host([design="ColorSet2"]) .ui5-message-strip-close-button:active{background:none;border-color:var(--sapContent_IconColor)}:host([design="ColorSet1"]) .ui5-message-strip-close-button::part(button):after,:host([design="ColorSet1"]) .ui5-message-strip-close-button::part(button):before{border-color:var(--sapContent_ContrastFocusColor)}
`;

// node_modules/@ui5/webcomponents/dist/MessageStrip.js
var __decorate58 = function(decorators, target, key, desc) {
  var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
  if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
  else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
  return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var MessageStrip_1;
var DesignClassesMapping;
(function(DesignClassesMapping2) {
  DesignClassesMapping2["Information"] = "ui5-message-strip-root--info";
  DesignClassesMapping2["Positive"] = "ui5-message-strip-root--positive";
  DesignClassesMapping2["Negative"] = "ui5-message-strip-root--negative";
  DesignClassesMapping2["Critical"] = "ui5-message-strip-root--critical";
  DesignClassesMapping2["ColorSet1"] = "ui5-message-strip-root--color-set-1";
  DesignClassesMapping2["ColorSet2"] = "ui5-message-strip-root--color-set-2";
})(DesignClassesMapping || (DesignClassesMapping = {}));
var MessageStrip = MessageStrip_1 = class MessageStrip2 extends UI5Element_default {
  constructor() {
    super(...arguments);
    this.design = "Information";
    this.colorScheme = "1";
    this.hideIcon = false;
    this.hideCloseButton = false;
  }
  _closeClick() {
    this.fireDecoratorEvent("close");
  }
  static designAnnouncementMappings() {
    const getTranslation = (text) => {
      return MessageStrip_1.i18nBundle.getText(text);
    };
    return {
      Information: getTranslation(MESSAGE_STRIP_INFORMATION),
      Positive: getTranslation(MESSAGE_STRIP_SUCCESS),
      Negative: getTranslation(MESSAGE_STRIP_ERROR),
      Critical: getTranslation(MESSAGE_STRIP_WARNING),
      ColorSet1: getTranslation(MESSAGE_STRIP_CUSTOM),
      ColorSet2: getTranslation(MESSAGE_STRIP_CUSTOM)
    };
  }
  get hiddenText() {
    return `${MessageStrip_1.designAnnouncementMappings()[this.design]} ${this.hideCloseButton ? "" : this._closableText}`;
  }
  get shouldHideIcon() {
    if (this.designClasses === DesignClassesMapping.ColorSet1 || this.designClasses === DesignClassesMapping.ColorSet2) {
      return this.hideIcon || this.icon.length === 0;
    }
    return this.hideIcon;
  }
  static closeButtonMappings() {
    const getTranslation = (text) => {
      return MessageStrip_1.i18nBundle.getText(text);
    };
    return {
      Information: getTranslation(MESSAGE_STRIP_CLOSE_BUTTON_INFORMATION),
      Positive: getTranslation(MESSAGE_STRIP_CLOSE_BUTTON_POSITIVE),
      Negative: getTranslation(MESSAGE_STRIP_CLOSE_BUTTON_NEGATIVE),
      Critical: getTranslation(MESSAGE_STRIP_CLOSE_BUTTON_CRITICAL),
      ColorSet1: getTranslation(MESSAGE_STRIP_CLOSE_BUTTON_CUSTOM),
      ColorSet2: getTranslation(MESSAGE_STRIP_CLOSE_BUTTON_CUSTOM)
    };
  }
  get _closeButtonText() {
    return MessageStrip_1.closeButtonMappings()[this.design];
  }
  get _closableText() {
    return MessageStrip_1.i18nBundle.getText(MESSAGE_STRIP_CLOSABLE);
  }
  get iconProvided() {
    return this.icon.length > 0;
  }
  get designClasses() {
    return DesignClassesMapping[this.design];
  }
};
__decorate58([
  property_default()
], MessageStrip.prototype, "design", void 0);
__decorate58([
  property_default()
], MessageStrip.prototype, "colorScheme", void 0);
__decorate58([
  property_default({ type: Boolean })
], MessageStrip.prototype, "hideIcon", void 0);
__decorate58([
  property_default({ type: Boolean })
], MessageStrip.prototype, "hideCloseButton", void 0);
__decorate58([
  slot_default()
], MessageStrip.prototype, "icon", void 0);
__decorate58([
  i18n_default("@ui5/webcomponents")
], MessageStrip, "i18nBundle", void 0);
MessageStrip = MessageStrip_1 = __decorate58([
  customElement_default({
    tag: "ui5-message-strip",
    languageAware: true,
    renderer: JsxRenderer_default,
    template: MessageStripTemplate,
    styles: MessageStrip_css_default
  }),
  event_strict_default("close")
], MessageStrip);
MessageStrip.define();

// node_modules/@ui5/webcomponents-react/dist/webComponents/MessageStrip/index.js
var MessageStrip3 = withWebComponent("ui5-message-strip", ["colorScheme", "design"], ["hideCloseButton", "hideIcon"], ["icon"], ["close"]);
MessageStrip3.displayName = "MessageStrip";

// node_modules/@ui5/webcomponents/dist/generated/themes/MultiComboBoxItem.css.js
registerThemePropertiesLoader("@ui5/webcomponents-theming", "sap_horizon", async () => parameters_bundle_css_default);
registerThemePropertiesLoader("@ui5/webcomponents", "sap_horizon", async () => parameters_bundle_css_default2);
var MultiComboBoxItem_css_default = `:host([ui5-mcb-item]){height:auto;min-height:var(--_ui5-v2-8-0_list_item_base_height)}:host([ui5-mcb-item]) .ui5-li-root{padding-inline-start:0;min-height:var(--_ui5-v2-8-0_list_item_base_height)}:host([ui5-mcb-item]) .ui5-li-content{padding-bottom:.875rem;padding-top:.875rem;box-sizing:border-box}:host([ui5-mcb-item]) [ui5-checkbox]{overflow:visible}
`;

// node_modules/@ui5/webcomponents/dist/MultiComboBoxItemTemplate.js
function MultiComboBoxItemTemplate() {
  return ListItemBaseTemplate.call(this, { listItemContent: listItemContent3 }, { role: "option" });
}
function listItemContent3() {
  return jsxs(Fragment, { children: [jsx(CheckBox_default, { disabled: this._readonly, checked: this.selected, tabindex: -1, accessibleName: this._accessibleName }), jsx("div", { part: "content", id: "content", class: "ui5-li-content", children: jsxs("div", { class: "ui5-li-text-wrapper", children: [this.text && jsx("span", { part: "title", className: "ui5-li-title", children: this.text }), this.additionalText && jsx("span", { part: "additional-text", class: "ui5-li-additional-text", children: this.additionalText })] }) })] });
}

// node_modules/@ui5/webcomponents/dist/MultiComboBoxItem.js
var __decorate59 = function(decorators, target, key, desc) {
  var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
  if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
  else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
  return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var MultiComboBoxItem_1;
var MultiComboBoxItem = MultiComboBoxItem_1 = class MultiComboBoxItem2 extends ComboBoxItem_default {
  constructor() {
    super(...arguments);
    this._isVisible = false;
    this._readonly = false;
  }
  get isMultiComboBoxItem() {
    return true;
  }
  _onclick(e) {
    var _a;
    if ((_a = e.target) == null ? void 0 : _a.hasAttribute("ui5-checkbox")) {
      return this.fireDecoratorEvent("selection-requested", { item: this, selected: e.target.checked, selectionComponentPressed: true });
    }
    super._onclick(e);
  }
  get _accessibleName() {
    return MultiComboBoxItem_1.i18nBundle.getText(ARIA_LABEL_LIST_ITEM_CHECKBOX);
  }
};
__decorate59([
  property_default({ type: Boolean })
], MultiComboBoxItem.prototype, "selected", void 0);
__decorate59([
  property_default({ type: Boolean, noAttribute: true })
], MultiComboBoxItem.prototype, "_isVisible", void 0);
__decorate59([
  property_default({ type: Boolean, noAttribute: true })
], MultiComboBoxItem.prototype, "_readonly", void 0);
__decorate59([
  i18n_default("@ui5/webcomponents")
], MultiComboBoxItem, "i18nBundle", void 0);
MultiComboBoxItem = MultiComboBoxItem_1 = __decorate59([
  customElement_default({
    tag: "ui5-mcb-item",
    template: MultiComboBoxItemTemplate,
    styles: [ComboBoxItem_default.styles, MultiComboBoxItem_css_default],
    dependencies: [...ComboBoxItem_default.dependencies, CheckBox_default]
  }),
  event_strict_default("selection-requested", {
    bubbles: true
  })
], MultiComboBoxItem);
var isInstanceOfMultiComboBoxItem = (object) => {
  return "isMultiComboBoxItem" in object;
};
MultiComboBoxItem.define();
var MultiComboBoxItem_default = MultiComboBoxItem;

// node_modules/@ui5/webcomponents/dist/MultiComboBoxItemGroupTemplate.js
function MultiComboBoxItemGroupTemplate() {
  return [ListItemGroupTemplate.call(this, { items: items2 })];
}
function items2() {
  return this.items.filter((item2) => item2._isVisible).map((item2) => jsx("slot", { name: item2._individualSlot }));
}

// node_modules/@ui5/webcomponents/dist/MultiComboBoxItemGroup.js
var __decorate60 = function(decorators, target, key, desc) {
  var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
  if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
  else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
  return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var MultiComboBoxItemGroup = class MultiComboBoxItemGroup2 extends ComboBoxItemGroup_default {
  /**
   * Used to avoid tag name checks
   * @protected
   */
  get isGroupItem() {
    return true;
  }
  get selected() {
    return false;
  }
  get stableDomRef() {
    return this.getAttribute("stable-dom-ref") || `${this._id}-stable-dom-ref`;
  }
  getFocusDomRef() {
    return this.shadowRoot.querySelector("[ui5-li-group-header]");
  }
};
__decorate60([
  slot_default({
    "default": true,
    invalidateOnChildChange: true,
    individualSlots: true,
    type: HTMLElement
  })
], MultiComboBoxItemGroup.prototype, "items", void 0);
MultiComboBoxItemGroup = __decorate60([
  customElement_default({
    tag: "ui5-mcb-item-group",
    template: MultiComboBoxItemGroupTemplate
  })
], MultiComboBoxItemGroup);
MultiComboBoxItemGroup.define();
var isInstanceOfMultiComboBoxItemGroup = (object) => {
  return "isGroupItem" in object;
};
var MultiComboBoxItemGroup_default = MultiComboBoxItemGroup;

// node_modules/@ui5/webcomponents/dist/TokenizerPopoverTemplate.js
function TokenizerPopoverTemplate() {
  return jsxs(ResponsivePopover_default, { "tokenizer-popover": "true", open: this.open, opener: this.morePopoverOpener, style: { "min-width": this.popoverMinWidth ? `${this.popoverMinWidth}px` : `${this.getBoundingClientRect().width}px` }, contentOnlyOnDesktop: true, preventFocusRestore: true, hideArrow: this.hidePopoverArrow, placement: "Bottom", horizontalAlign: "Start", onClose: this.handleAfterClose, onBeforeClose: this.handleBeforeClose, onBeforeOpen: this.handleBeforeOpen, children: [this._isPhone && jsx("div", { slot: "header", class: "ui5-responsive-popover-header", children: jsx("div", { class: "row", children: jsx(Title_default, { level: "H1", wrappingType: "None", class: "ui5-responsive-popover-header-text", children: this.morePopoverTitle }) }) }), jsx(List_default, { class: "ui5-tokenizer-list", selectionMode: this._nMoreListMode, separators: "None", onKeyDown: this._onPopoverListKeydown, onItemDelete: this.itemDelete, children: this._tokens.map((token) => jsx(ListItemStandard_default, { "data-ui5-token-ref-id": token._id, wrappingType: "Normal", children: token.text }, String(token._id))) }), this._isPhone && jsxs("div", { slot: "footer", class: "ui5-responsive-popover-footer", children: [jsx(Button_default, { design: "Emphasized", "data-ui5-tokenizer-dialog-ok-button": true, onClick: this.handleDialogButtonPress, children: "OK" }), jsx(Button_default, { design: "Transparent", onClick: this.handleDialogButtonPress, children: "Cancel" })] })] });
}

// node_modules/@ui5/webcomponents/dist/TokenizerTemplate.js
function TokenizerTemplate() {
  return jsxs(Fragment, { children: [jsxs("div", { class: "ui5-tokenizer-root", children: [jsxs("div", { class: "ui5-tokenizer--content", onClick: this._click, onMouseDown: this._onmousedown, onKeyDown: this._onkeydown, onFocusOut: this._onfocusout, onFocusIn: this._onfocusin, "onui5-delete": this._delete, "onui5-select": this.onTokenSelect, children: [jsx("div", { class: "ui5-tokenizer--list", role: "listbox", "aria-label": this.tokenizerLabel, "aria-description": this.tokenizerAriaDescription, "aria-disabled": this._ariaDisabled, "aria-readonly": this._ariaReadonly, children: this.tokens.map((token) => jsx("slot", { name: token._individualSlot })) }), this.showEffectiveClearAll && jsx("span", { role: "button", class: "ui5-tokenizer--clear-all", onClick: this.handleClearAll, children: this._clearAllText })] }), this.showNMore && jsx("span", { role: "button", "aria-haspopup": "dialog", class: "ui5-tokenizer-more-text", part: "n-more-text", onClick: this._handleNMoreClick, children: this._nMoreText })] }), TokenizerPopoverTemplate.call(this)] });
}

// node_modules/@ui5/webcomponents/dist/generated/themes/Tokenizer.css.js
registerThemePropertiesLoader("@ui5/webcomponents-theming", "sap_horizon", async () => parameters_bundle_css_default);
registerThemePropertiesLoader("@ui5/webcomponents", "sap_horizon", async () => parameters_bundle_css_default2);
var Tokenizer_css_default = `.ui5-hidden-text{position:absolute;clip:rect(1px,1px,1px,1px);user-select:none;left:-1000px;top:-1000px;pointer-events:none;font-size:0}:host{display:inline-block;box-sizing:border-box;border:none;height:2.25rem}:host([multi-line]){height:auto}:host([multi-line]) .ui5-tokenizer--content{display:flex;align-content:baseline;flex-wrap:wrap;padding:.25rem;box-sizing:border-box;gap:var(--_ui5-v2-8-0_tokenizer_gap);overflow-y:auto;overflow-x:hidden}:host([multi-line])::slotted([ui5-token]){margin:0;white-space:nowrap;text-overflow:ellipsis;max-width:100%}:host([disabled]){opacity:40%;pointer-events:none}:host(:not([expanded])) .ui5-tokenizer-root{overflow:hidden}:host([_tokens-count="0"]) .ui5-tokenizer-root{padding:0}.ui5-tokenizer-root{height:100%;display:flex;align-items:center;box-sizing:border-box;touch-action:none;font-family:"72override",var(--sapFontFamily)}.ui5-tokenizer--token--wrapper{display:inline-flex;align-items:center;box-sizing:border-box;height:100%}:host([expanded]) .ui5-tokenizer--content{display:inline-flex;white-space:nowrap;overflow:hidden}.ui5-tokenizer--content{display:flex;flex-wrap:nowrap;align-items:center;overflow:hidden;padding-inline-start:var(--_ui5-v2-8-0_tokenizer_padding);height:100%;box-sizing:border-box}.ui5-tokenizer--list{display:contents}:host([_tokens-count="1"]) .ui5-tokenizer--content{padding-inline-end:4px;box-sizing:border-box;max-width:100%;flex:1}.ui5-tokenizer-more-text{display:inline-block;margin-inline-start:.25rem;cursor:pointer;white-space:nowrap;font-size:var(--sapFontSize);font-weight:400;color:var(--_ui5-v2-8-0_tokenizer_n_more_text_color)}.ui5-tokenizer-more-text:hover{text-decoration:underline}.ui5-tokenizer-more-text:active{text-decoration:none}.ui5-tokenizer--clear-all{color:var(--sapLinkColor);font-family:var(--sapFontFamily);font-size:var(--sapFontSize);cursor:pointer;outline:none}.ui5-tokenizer--clear-all:hover{color:var(--sapLink_Hover_Color);text-decoration:var(--_ui5-v2-8-0_link_hover_text_decoration)}.ui5-tokenizer--clear-all:active{color:var(--sapLink_Active_Color);text-decoration:var(--_ui5-v2-8-0_link_active_text_decoration)}
`;

// node_modules/@ui5/webcomponents/dist/generated/themes/TokenizerPopover.css.js
registerThemePropertiesLoader("@ui5/webcomponents-theming", "sap_horizon", async () => parameters_bundle_css_default);
registerThemePropertiesLoader("@ui5/webcomponents", "sap_horizon", async () => parameters_bundle_css_default2);
var TokenizerPopover_css_default = `[ui5-responsive-popover]::part(header),[ui5-responsive-popover]::part(content){padding:0}[ui5-responsive-popover] .ui5-responsive-popover-header{min-height:2rem}[ui5-responsive-popover] .ui5-responsive-popover-header .row{justify-content:left}[ui5-responsive-popover] [ui5-button]{height:100%;min-width:4rem}[ui5-responsive-popover]{margin-top:var(--_ui5-v2-8-0_tokenizer-popover_offset);margin-inline-start:calc(-1 * var(--_ui5-v2-8-0_tokenizer_padding))}.ui5-responsive-popover-footer [ui5-button]:first-child{margin-right:1rem}
`;

// node_modules/@ui5/webcomponents/dist/Tokenizer.js
var __decorate61 = function(decorators, target, key, desc) {
  var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
  if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
  else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
  return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var Tokenizer_1;
var ClipboardDataOperation;
(function(ClipboardDataOperation2) {
  ClipboardDataOperation2["cut"] = "cut";
  ClipboardDataOperation2["copy"] = "copy";
})(ClipboardDataOperation || (ClipboardDataOperation = {}));
var Tokenizer = Tokenizer_1 = class Tokenizer2 extends UI5Element_default {
  _handleResize() {
    this._nMoreCount = this.overflownTokens.length;
  }
  constructor() {
    super();
    this.readonly = false;
    this.multiLine = false;
    this.showClearAll = false;
    this.disabled = false;
    this.expanded = false;
    this.open = false;
    this.preventInitialFocus = false;
    this.preventPopoverOpen = false;
    this.hidePopoverArrow = false;
    this._nMoreCount = 0;
    this._tokensCount = 0;
    this._tokenDeleting = false;
    this._preventCollapse = false;
    this._skipTabIndex = false;
    this._previousToken = null;
    this._resizeHandler = this._handleResize.bind(this);
    this._itemNav = new ItemNavigation_default(this, {
      currentIndex: -1,
      getItemsCallback: this._getVisibleTokens.bind(this)
    });
    this._deletedDialogItems = [];
  }
  handleClearAll() {
    this.fireDecoratorEvent("token-delete", { tokens: this._tokens });
  }
  onBeforeRendering() {
    if (!this.multiLine) {
      this._scrollEnablement = new ScrollEnablement_default(this);
    }
    const tokensLength = this._tokens.length;
    this._tokensCount = tokensLength;
    this._tokens.forEach((token) => {
      token.singleToken = tokensLength === 1 || this.multiLine;
      token.readonly = this.readonly;
    });
  }
  onEnterDOM() {
    ResizeHandler_default.register(this, this._resizeHandler);
  }
  onExitDOM() {
    ResizeHandler_default.deregister(this, this._resizeHandler);
  }
  _handleNMoreClick() {
    if (this.disabled) {
      return;
    }
    this.expanded = true;
    if (!this.preventPopoverOpen) {
      this.open = true;
      this.scrollToEnd();
    }
    this._tokens.forEach((token) => {
      token.forcedTabIndex = "-1";
    });
    this._skipTabIndex = true;
    this.fireDecoratorEvent("show-more-items-press");
  }
  _onmousedown(e) {
    if (e.target.hasAttribute("ui5-token")) {
      const target = e.target;
      this.expanded = true;
      if (this.open) {
        this._preventCollapse = true;
      }
      if (!target.toBeDeleted) {
        this._itemNav.setCurrentItem(target);
        this._scrollToToken(target);
      }
    }
  }
  onTokenSelect(e) {
    const tokens = this._tokens;
    const firstToken = tokens[0];
    const targetToken = e.target;
    if (tokens.length === 1 && firstToken.isTruncatable) {
      this.open = firstToken.selected;
    }
    if (this.multiLine && targetToken.isTruncatable) {
      this.opener = targetToken;
      this.open = targetToken.selected;
    }
  }
  _getVisibleTokens() {
    if (this.disabled) {
      return [];
    }
    return this._tokens.filter((token, index) => {
      return index < this._tokens.length - this._nMoreCount;
    });
  }
  onAfterRendering() {
    const tokensArray = this._tokens;
    const firstToken = tokensArray[0];
    this._nMoreCount = this.overflownTokens.length;
    if (firstToken && !this.disabled && !this.preventInitialFocus && !this._skipTabIndex) {
      firstToken.forcedTabIndex = "0";
    }
    if (this._scrollEnablement) {
      this._scrollEnablement.scrollContainer = this.contentDom;
    }
    if (this.expanded) {
      this._expandedScrollWidth = this.contentDom.scrollWidth;
    }
    this._tokenDeleting = false;
  }
  _delete(e) {
    const target = e.target;
    if (!e.detail) {
      this._tokenClickDelete(e, target);
      this.open = false;
      return;
    }
    this.deleteToken(target, e.detail.backSpace);
  }
  _tokenClickDelete(e, token) {
    const tokens = this._getVisibleTokens();
    const target = e.target;
    const deletedTokenIndex = token ? tokens.indexOf(token) : tokens.indexOf(target);
    const nextTokenIndex = deletedTokenIndex === tokens.length - 1 ? deletedTokenIndex - 1 : deletedTokenIndex + 1;
    const nextToken = tokens[nextTokenIndex];
    this._handleCurrentItemAfterDeletion(nextToken);
    this._tokenDeleting = true;
    this.fireDecoratorEvent("token-delete", { tokens: [token] });
  }
  _handleCurrentItemAfterDeletion(nextToken) {
    if (nextToken && !isPhone()) {
      setTimeout(() => {
        nextToken.focus();
      }, 0);
    }
  }
  /**
   * Removes a token from the Tokenizer.
   * This method should only be used by ui5-multi-combobox and ui5-multi-input
   * @protected
   * @param token Token to be focused.
   * @param forwardFocusToPrevious Indicates whether the focus will be forwarded to previous or next token after deletion.
   */
  deleteToken(token, forwardFocusToPrevious) {
    const tokens = this._getVisibleTokens();
    const deletedTokenIndex = tokens.indexOf(token);
    let nextTokenIndex = deletedTokenIndex === tokens.length - 1 ? deletedTokenIndex - 1 : deletedTokenIndex + 1;
    const notSelectedTokens = tokens.filter((t) => !t.selected);
    if (forwardFocusToPrevious) {
      nextTokenIndex = deletedTokenIndex === 0 ? deletedTokenIndex + 1 : deletedTokenIndex - 1;
    } else {
      nextTokenIndex = deletedTokenIndex === tokens.length - 1 ? deletedTokenIndex - 1 : deletedTokenIndex + 1;
    }
    let nextToken = tokens[nextTokenIndex];
    if (notSelectedTokens.length > 1) {
      while (nextToken && nextToken.selected) {
        nextTokenIndex = forwardFocusToPrevious ? --nextTokenIndex : ++nextTokenIndex;
        if (nextTokenIndex < 0) {
          nextToken = notSelectedTokens[0];
        }
        if (nextTokenIndex > notSelectedTokens.length) {
          nextToken = notSelectedTokens[notSelectedTokens.length - 1];
        }
      }
    } else {
      nextToken = notSelectedTokens[0];
    }
    this._handleCurrentItemAfterDeletion(nextToken);
    this._tokenDeleting = true;
    if (this._selectedTokens.length) {
      this.fireDecoratorEvent("token-delete", { tokens: this._selectedTokens });
    } else {
      this.fireDecoratorEvent("token-delete", { tokens: [token] });
    }
  }
  async itemDelete(e) {
    const token = this.getTokenByRefId(e.detail.item.getAttribute("data-ui5-token-ref-id"));
    const tokensArray = this._tokens;
    if (tokensArray.length === 1) {
      const morePopover = this.getPopover();
      morePopover.addEventListener("ui5-close", () => {
        this.fireDecoratorEvent("token-delete", { tokens: [token] });
      }, {
        once: true
      });
      this.open = false;
    } else {
      if (isPhone()) {
        this._deletedDialogItems.push(token);
      } else {
        this.fireDecoratorEvent("token-delete", { tokens: [token] });
      }
      const currentListItem = e.detail.item;
      const nextListItem = currentListItem.nextElementSibling;
      const previousListItem = currentListItem.previousElementSibling;
      const focusItem = nextListItem || previousListItem;
      if (focusItem) {
        await renderFinished();
        focusItem.focus();
      }
    }
  }
  handleBeforeClose() {
    const tokensArray = this._tokens;
    if (isPhone()) {
      tokensArray.forEach((token) => {
        token.selected = false;
      });
    }
    if (!this._tokenDeleting && !this._preventCollapse) {
      this._preventCollapse = false;
      this.expanded = false;
    }
  }
  handleBeforeOpen() {
    const list = this._getList();
    const firstListItem = list.querySelectorAll("[ui5-li]")[0];
    list._itemNavigation.setCurrentItem(firstListItem);
    this.fireDecoratorEvent("before-more-popover-open");
  }
  handleAfterClose() {
    this.open = false;
    this._preventCollapse = false;
    this._focusedElementBeforeOpen = null;
  }
  handleDialogButtonPress(e) {
    const isOkButton = e.target.hasAttribute("data-ui5-tokenizer-dialog-ok-button");
    const confirm = !!isOkButton;
    if (confirm && this._deletedDialogItems.length) {
      this.fireDecoratorEvent("token-delete", { tokens: this._deletedDialogItems });
    }
    this.open = false;
  }
  _onkeydown(e) {
    const isCtrl2 = !!(e.metaKey || e.ctrlKey);
    if (isCtrl2 && ["c", "x"].includes(e.key.toLowerCase()) || isDeleteShift(e) || isInsertCtrl(e)) {
      e.preventDefault();
      const isCut = e.key.toLowerCase() === "x" || isDeleteShift(e);
      const selectedTokens = this._tokens.filter((token) => token.selected);
      const focusedToken = selectedTokens.find((token) => token.focused);
      if (isCut) {
        const cutResult = this._fillClipboard(ClipboardDataOperation.cut, selectedTokens);
        focusedToken && this.deleteToken(focusedToken);
        return cutResult;
      }
      return this._fillClipboard(ClipboardDataOperation.copy, selectedTokens);
    }
    if (isCtrl2 && e.key.toLowerCase() === "i" && this._tokens.length > 0) {
      e.preventDefault();
      this._preventCollapse = true;
      this._focusedElementBeforeOpen = getFocusedElement();
      this.open = true;
    }
    if (isSpaceShift(e)) {
      e.preventDefault();
    }
    if (isSpace(e) || isSpaceCtrl(e)) {
      e.preventDefault();
      return this._handleTokenSelection(e, false);
    }
    if (isHomeShift(e) || isPageUpShift(e)) {
      this._handleHomeShift(e);
    }
    if (isEndShift(e) || isPageDownShift(e)) {
      this._handleEndShift(e);
    }
    this._handleItemNavigation(e, this._tokens);
  }
  _onPopoverListKeydown(e) {
    const isCtrl2 = !!(e.metaKey || e.ctrlKey);
    if (isCtrl2 && e.key.toLowerCase() === "i" || isEscape(e)) {
      e.preventDefault();
      this.open = false;
      this._preventCollapse = true;
      this._focusedElementBeforeOpen && this._focusedElementBeforeOpen.focus();
      if (!this._focusedElementBeforeOpen) {
        this._focusLastToken();
      }
    }
    if (e.key.toLowerCase() === "f7") {
      e.preventDefault();
      const eventTarget = e.target;
      const activeElement = getActiveElement_default();
      if ((activeElement == null ? void 0 : activeElement.part.value) === "native-li") {
        eventTarget.shadowRoot.querySelector("[part=delete-button]").focus();
      } else {
        eventTarget.focus();
      }
    }
  }
  _handleItemNavigation(e, tokens) {
    const isCtrl2 = !!(e.metaKey || e.ctrlKey);
    const target = e.target;
    if (isLeftCtrl(e) || isRightCtrl(e) || isDownCtrl(e) || isUpCtrl(e)) {
      return this._handleArrowCtrl(e, target, tokens, isRightCtrl(e) || isDownCtrl(e));
    }
    if (isLeftShift(e) || isRightShift(e) || isUpShift(e) || isDownShift(e) || isLeftShiftCtrl(e) || isRightShiftCtrl(e)) {
      e.preventDefault();
      return this._handleArrowShift(target, tokens, isRightShift(e) || isRightShiftCtrl(e) || isDownShift(e));
    }
    if (isHome(e) || isEnd(e) || isHomeCtrl(e) || isEndCtrl(e)) {
      e.preventDefault();
      return this._handleHome(tokens, isEnd(e) || isEndCtrl(e));
    }
    if (isCtrl2 && e.key.toLowerCase() === "a") {
      e.preventDefault();
      return this._toggleTokenSelection(tokens);
    }
    if (isLeft(e) || isRight(e) || isUp(e) || isDown(e)) {
      e.preventDefault();
      const nextTokenIdx = this._calcNextTokenIndex(this._tokens.find((token) => token.focused), tokens, isRight(e) || isDown(e));
      this._scrollToToken(tokens[nextTokenIdx]);
    }
  }
  _handleHome(tokens, endKeyPressed) {
    if (!tokens || !tokens.length) {
      return -1;
    }
    const index = endKeyPressed ? tokens.length - 1 : 0;
    tokens[index].focus();
  }
  _handleHomeShift(e) {
    const tokens = this._tokens;
    const target = e.target;
    const currentTokenIdx = tokens.indexOf(target);
    const previousSelectedTokens = [...this._selectedTokens];
    tokens.filter((token, index) => index <= currentTokenIdx).forEach((token) => {
      token.selected = true;
    });
    const selectedTokensChanged = JSON.stringify(previousSelectedTokens) !== JSON.stringify(this._selectedTokens);
    if (selectedTokensChanged) {
      this.fireDecoratorEvent("selection-change", {
        tokens: this._selectedTokens
      });
    }
    tokens[0].focus();
  }
  _handleEndShift(e) {
    const tokens = this._tokens;
    const target = e.target;
    const currentTokenIdx = tokens.indexOf(target);
    const previousSelectedTokens = [...this._selectedTokens];
    tokens.filter((token, index) => index >= currentTokenIdx).forEach((token) => {
      token.selected = true;
    });
    const selectedTokensChanged = JSON.stringify(previousSelectedTokens) !== JSON.stringify(this._selectedTokens);
    if (selectedTokensChanged) {
      this.fireDecoratorEvent("selection-change", {
        tokens: this._selectedTokens
      });
    }
    tokens[tokens.length - 1].focus();
  }
  _calcNextTokenIndex(focusedToken, tokens, backwards) {
    if (!tokens.length) {
      return -1;
    }
    const focusedTokenIndex = tokens.indexOf(focusedToken);
    let nextIndex = backwards ? focusedTokenIndex + 1 : focusedTokenIndex - 1;
    if (nextIndex >= tokens.length) {
      nextIndex = tokens.length - 1;
    }
    if (nextIndex < 0) {
      nextIndex = 0;
    }
    return nextIndex;
  }
  _handleArrowCtrl(e, focusedToken, tokens, backwards) {
    const nextIndex = this._calcNextTokenIndex(focusedToken, tokens, backwards);
    e.preventDefault();
    if (nextIndex === -1) {
      return;
    }
    setTimeout(() => {
      tokens[nextIndex].focus();
    }, 0);
    this._scrollToToken(tokens[nextIndex]);
  }
  _handleArrowShift(focusedToken, tokens, backwards) {
    const focusedTokenIndex = tokens.indexOf(focusedToken);
    const nextIndex = backwards ? focusedTokenIndex + 1 : focusedTokenIndex - 1;
    const previousSelectedTokens = [...this._selectedTokens];
    if (nextIndex === -1 || nextIndex === tokens.length) {
      return;
    }
    focusedToken.selected = true;
    tokens[nextIndex].selected = true;
    const selectedTokensChanged = JSON.stringify(previousSelectedTokens) !== JSON.stringify(this._selectedTokens);
    if (selectedTokensChanged) {
      this.fireDecoratorEvent("selection-change", {
        tokens: this._selectedTokens
      });
    }
    tokens[nextIndex].focus();
    this._scrollToToken(tokens[nextIndex]);
  }
  _click(e) {
    if (e.metaKey || e.ctrlKey) {
      this.fireDecoratorEvent("selection-change", {
        tokens: this._selectedTokens
      });
      return;
    }
    const targetToken = e.target;
    if (!e.shiftKey) {
      this._previousToken = targetToken;
    }
    let focusedToken = targetToken;
    if (this._previousToken) {
      focusedToken = this._previousToken;
    } else {
      this._previousToken = focusedToken;
    }
    if (e.shiftKey) {
      const tokensArray = this._tokens;
      const lastClickedIndex = tokensArray.indexOf(targetToken);
      const firstSelectedTokenIndex = tokensArray.indexOf(focusedToken);
      const start = Math.min(lastClickedIndex, firstSelectedTokenIndex);
      const end = Math.max(lastClickedIndex, firstSelectedTokenIndex);
      if (lastClickedIndex !== -1) {
        tokensArray.forEach((token, i) => {
          token.selected = i >= start && i <= end;
        });
      }
      this.fireDecoratorEvent("selection-change", {
        tokens: this._selectedTokens
      });
      return;
    }
    this._handleTokenSelection(e);
  }
  _onfocusin(e) {
    const target = e.target;
    this.open = false;
    this._itemNav.setCurrentItem(target);
    if (!this.expanded) {
      this.expanded = true;
    }
  }
  _onfocusout(e) {
    const relatedTarget = e.relatedTarget;
    this._tokens.forEach((token) => {
      token.forcedTabIndex = "-1";
    });
    this._itemNav._currentIndex = -1;
    this._skipTabIndex = true;
    if (!this.contains(relatedTarget)) {
      this._tokens[0].forcedTabIndex = "0";
      this._skipTabIndex = false;
    }
    if (!this._tokenDeleting && !this._preventCollapse) {
      this._preventCollapse = false;
      this.expanded = false;
    }
  }
  _toggleTokenSelection(tokens) {
    if (!tokens || !tokens.length) {
      return;
    }
    const tokensAreSelected = tokens.every((token) => token.selected);
    tokens.forEach((token) => {
      token.selected = !tokensAreSelected;
    });
    this.fireDecoratorEvent("selection-change", {
      tokens: this._selectedTokens
    });
  }
  _handleTokenSelection(e, deselectAll = true) {
    const target = e.target;
    if (target.hasAttribute("ui5-token")) {
      const deselectTokens = deselectAll ? this._tokens : [];
      deselectTokens.forEach((token) => {
        if (token !== target) {
          token.selected = false;
        }
      });
      this.fireDecoratorEvent("selection-change", {
        tokens: this._selectedTokens
      });
    }
  }
  get hasTokens() {
    return this._tokens.length > 0;
  }
  get showEffectiveClearAll() {
    return this.showClearAll && this.hasTokens && this.multiLine && !this.readonly;
  }
  _fillClipboard(shortcutName, tokens) {
    const tokensTexts = tokens.filter((token) => token.selected).map((token) => token.text).join("\r\n");
    const cutToClipboard = (e) => {
      if (e.clipboardData) {
        e.clipboardData.setData("text/plain", tokensTexts);
      }
      e.preventDefault();
    };
    document.addEventListener(shortcutName, cutToClipboard);
    document.execCommand(shortcutName);
    document.removeEventListener(shortcutName, cutToClipboard);
  }
  /**
   * Scrolls the container of the tokens to its beginning.
   * This method is used by MultiInput and MultiComboBox.
   * @protected
   */
  scrollToStart() {
    var _a, _b;
    if ((_a = this._scrollEnablement) == null ? void 0 : _a.scrollContainer) {
      (_b = this._scrollEnablement) == null ? void 0 : _b.scrollTo(0, 0);
    }
  }
  /**
   * Scrolls the container of the tokens to its end when expanded.
   * This method is used by MultiInput and MultiComboBox.
   * @protected
   */
  scrollToEnd() {
    var _a, _b;
    const expandedTokenizerScrollWidth = this.contentDom && (this.effectiveDir !== "rtl" ? this.contentDom.scrollWidth : -this.contentDom.scrollWidth);
    if ((_a = this._scrollEnablement) == null ? void 0 : _a.scrollContainer) {
      (_b = this._scrollEnablement) == null ? void 0 : _b.scrollTo(expandedTokenizerScrollWidth, 0, 5, 10);
    }
  }
  /**
   * Scrolls token to the visible area of the container.
   * Adds 4 pixels to the scroll position to ensure padding and border visibility on both ends
   * @protected
   */
  _scrollToToken(token) {
    var _a, _b;
    if (!this.contentDom) {
      return;
    }
    const tokenRect = token.getBoundingClientRect();
    const tokenContainerRect = this.contentDom.getBoundingClientRect();
    if (tokenRect.left < tokenContainerRect.left) {
      (_a = this._scrollEnablement) == null ? void 0 : _a.scrollTo(this.contentDom.scrollLeft - (tokenContainerRect.left - tokenRect.left + 5), 0);
    } else if (tokenRect.right > tokenContainerRect.right) {
      (_b = this._scrollEnablement) == null ? void 0 : _b.scrollTo(this.contentDom.scrollLeft + (tokenRect.right - tokenContainerRect.right + 5), 0);
    }
  }
  _getList() {
    return this.getPopover().querySelector("[ui5-list]");
  }
  get _tokens() {
    return this.getSlottedNodes("tokens");
  }
  get morePopoverOpener() {
    if (this.opener) {
      return this.opener;
    }
    return this;
  }
  get _nMoreText() {
    if (!this._nMoreCount) {
      return;
    }
    if (this._getVisibleTokens().length) {
      return Tokenizer_1.i18nBundle.getText(MULTIINPUT_SHOW_MORE_TOKENS, this._nMoreCount);
    }
    return Tokenizer_1.i18nBundle.getText(TOKENIZER_SHOW_ALL_ITEMS, this._nMoreCount);
  }
  get _clearAllText() {
    return Tokenizer_1.i18nBundle.getText(TOKENIZER_CLEAR_ALL);
  }
  get showNMore() {
    return !this.expanded && !!this.overflownTokens.length;
  }
  get contentDom() {
    return this.shadowRoot.querySelector(".ui5-tokenizer--content");
  }
  get moreLink() {
    return this.shadowRoot.querySelector(".ui5-tokenizer-more-text");
  }
  get tokenizerLabel() {
    const effectiveLabelText = getEffectiveAriaLabelText(this);
    return effectiveLabelText || Tokenizer_1.i18nBundle.getText(TOKENIZER_ARIA_LABEL);
  }
  get tokenizerAriaDescription() {
    return getEffectiveAriaLabelText(this) ? Tokenizer_1.i18nBundle.getText(TOKENIZER_ARIA_LABEL) : void 0;
  }
  get _ariaDisabled() {
    return this.disabled || void 0;
  }
  get _ariaReadonly() {
    return this.readonly || void 0;
  }
  get morePopoverTitle() {
    return Tokenizer_1.i18nBundle.getText(TOKENIZER_POPOVER_REMOVE);
  }
  get overflownTokens() {
    if (!this.contentDom) {
      return [];
    }
    const tokensArray = this._tokens;
    tokensArray.forEach((token) => {
      token.overflows = false;
    });
    return tokensArray.filter((token) => {
      const parentRect = this.contentDom.getBoundingClientRect();
      const tokenRect = token.getBoundingClientRect();
      const tokenEnd = Number(tokenRect.right.toFixed(2));
      const parentEnd = Number(parentRect.right.toFixed(2));
      const tokenStart = Number(tokenRect.left.toFixed(2));
      const parentStart = Number(parentRect.left.toFixed(2));
      token.overflows = !this.expanded && (tokenStart < parentStart || tokenEnd > parentEnd);
      return token.overflows;
    });
  }
  get _isPhone() {
    return isPhone();
  }
  get _selectedTokens() {
    return this._tokens.filter((token) => token.selected);
  }
  get _nMoreListMode() {
    if (this.readonly || this.disabled) {
      return ListSelectionMode_default.None;
    }
    return ListSelectionMode_default.Delete;
  }
  get styles() {
    return {
      popover: {
        "min-width": this.popoverMinWidth ? `${this.popoverMinWidth}px` : `${this.getBoundingClientRect().width}px`
      }
    };
  }
  /**
   * @protected
   */
  _focusLastToken() {
    const tokens = this._tokens;
    if (tokens.length === 0) {
      return;
    }
    const lastToken = tokens[tokens.length - 1];
    lastToken.focus();
  }
  getPopover() {
    return this.shadowRoot.querySelector("[ui5-responsive-popover]");
  }
  getTokenByRefId(refId) {
    return this._tokens.find((token) => token._id === refId);
  }
};
__decorate61([
  property_default({ type: Boolean })
], Tokenizer.prototype, "readonly", void 0);
__decorate61([
  property_default({ type: Boolean })
], Tokenizer.prototype, "multiLine", void 0);
__decorate61([
  property_default({ type: Boolean })
], Tokenizer.prototype, "showClearAll", void 0);
__decorate61([
  property_default({ type: Boolean })
], Tokenizer.prototype, "disabled", void 0);
__decorate61([
  property_default()
], Tokenizer.prototype, "accessibleName", void 0);
__decorate61([
  property_default()
], Tokenizer.prototype, "accessibleNameRef", void 0);
__decorate61([
  property_default({ type: Boolean })
], Tokenizer.prototype, "expanded", void 0);
__decorate61([
  property_default({ type: Boolean })
], Tokenizer.prototype, "open", void 0);
__decorate61([
  property_default({
    converter: DOMReference_default
  })
], Tokenizer.prototype, "opener", void 0);
__decorate61([
  property_default({ type: Number })
], Tokenizer.prototype, "popoverMinWidth", void 0);
__decorate61([
  property_default({ type: Boolean })
], Tokenizer.prototype, "preventInitialFocus", void 0);
__decorate61([
  property_default({ type: Boolean })
], Tokenizer.prototype, "preventPopoverOpen", void 0);
__decorate61([
  property_default({ type: Boolean })
], Tokenizer.prototype, "hidePopoverArrow", void 0);
__decorate61([
  property_default({ type: Number })
], Tokenizer.prototype, "_nMoreCount", void 0);
__decorate61([
  property_default({ type: Number })
], Tokenizer.prototype, "_tokensCount", void 0);
__decorate61([
  slot_default({
    type: HTMLElement,
    "default": true,
    individualSlots: true
  })
], Tokenizer.prototype, "tokens", void 0);
__decorate61([
  i18n_default("@ui5/webcomponents")
], Tokenizer, "i18nBundle", void 0);
Tokenizer = Tokenizer_1 = __decorate61([
  customElement_default({
    tag: "ui5-tokenizer",
    languageAware: true,
    renderer: JsxRenderer_default,
    template: TokenizerTemplate,
    styles: [
      Tokenizer_css_default,
      ResponsivePopoverCommon_css_default,
      Suggestions_css_default,
      TokenizerPopover_css_default,
      getEffectiveScrollbarStyle_default()
    ]
  }),
  event_strict_default("token-delete", {
    bubbles: true
  }),
  event_strict_default("selection-change", {
    bubbles: true
  }),
  event_strict_default("show-more-items-press", {
    bubbles: true
  }),
  event_strict_default("before-more-popover-open", {
    bubbles: true
  })
], Tokenizer);
var getTokensCountText = (iTokenCount) => {
  const tokenCountMap = {
    0: TOKENIZER_ARIA_CONTAIN_TOKEN,
    1: TOKENIZER_ARIA_CONTAIN_ONE_TOKEN
  };
  if (iTokenCount in tokenCountMap) {
    return Tokenizer.i18nBundle.getText(tokenCountMap[iTokenCount]);
  }
  return Tokenizer.i18nBundle.getText(TOKENIZER_ARIA_CONTAIN_SEVERAL_TOKENS, iTokenCount);
};
Tokenizer.define();
var Tokenizer_default = Tokenizer;

// node_modules/@ui5/webcomponents/dist/TokenTemplate.js
function TokenTemplate() {
  return jsxs("div", { role: "option", tabindex: this.forcedTabIndex ? parseInt(this.forcedTabIndex) : -1, class: "ui5-token--wrapper", "aria-description": this.ariaDescription, "aria-selected": this.selected, onClick: this._handleSelect, onFocusIn: this._focusin, onFocusOut: this._focusout, onKeyDown: this._keydown, children: [jsx("span", { class: "ui5-token--text", children: this.text }), !this.readonly && jsx("div", { class: "ui5-token--icon", children: this.closeIcon.length > 0 ? jsx("slot", { name: "closeIcon", onClick: this._delete }) : jsx(Icon_default, { name: decline_default, mode: "Decorative", accessibleName: this.tokenDeletableText, showTooltip: true, onClick: this._delete }) })] });
}

// node_modules/@ui5/webcomponents/dist/generated/themes/Token.css.js
registerThemePropertiesLoader("@ui5/webcomponents-theming", "sap_horizon", async () => parameters_bundle_css_default);
registerThemePropertiesLoader("@ui5/webcomponents", "sap_horizon", async () => parameters_bundle_css_default2);
var Token_css_default = `:host{display:inline-block;background:var(--_ui5-v2-8-0_token_background);border:var(--sapButton_BorderWidth) solid var(--sapButton_TokenBorderColor);border-radius:var(--_ui5-v2-8-0_token_border_radius);color:var(--_ui5-v2-8-0_token_text_color);height:var(--_ui5-v2-8-0_token_height);box-sizing:border-box}:host(:not([single-token])){margin-inline-end:var(--_ui5-v2-8-0_token_right_margin)}:host([overflows]){display:none}:host(:not([readonly]):hover){background:var(--sapButton_Hover_Background)}:host([selected]){background:var(--sapButton_Selected_Background);border:var(--sapButton_BorderWidth) solid var(--sapButton_Selected_BorderColor);color:var(--sapButton_Selected_TextColor)}:host([selected]) .ui5-token--wrapper:before{content:"";position:absolute;border-bottom:var(--_ui5-v2-8-0_token_selected_internal_border_bottom);border-bottom-left-radius:var(--_ui5-v2-8-0_token_selected_internal_border_bottom_radius);border-bottom-right-radius:var(--_ui5-v2-8-0_token_selected_internal_border_bottom_radius);inset:0;background:transparent;pointer-events:none}:host([selected]:hover){background:var(--sapButton_Selected_Hover_Background)}:host([readonly]:not([selected])){background:var(--_ui5-v2-8-0_token_readonly_background);border-color:var(--sapField_ReadOnly_BorderColor);color:var(--_ui5-v2-8-0_token_readonly_color)}:host([readonly]) .ui5-token--wrapper{padding:var(--_ui5-v2-8-0_token_readonly_padding)}:host([selected]) .ui5-token--wrapper:focus{outline:var(--_ui5-v2-8-0_token_selected_focus_outline)}:host([focused][selected]:not(:hover)){background:var(--sapButton_Selected_Background);color:var(--sapButton_Selected_TextColor);border:var(--_ui5-v2-8-0_token_focused_selected_border)}.ui5-token--wrapper{display:flex;align-items:center;height:100%;width:100%;cursor:pointer;position:relative;padding-inline-start:var(--_ui5-v2-8-0_token_left_padding);box-sizing:border-box;font-size:var(--sapFontSize);font-family:"72override",var(--sapFontFamily);user-select:none}.ui5-token--wrapper{position:relative}:host([selected]) .ui5-token--wrapper{font-family:var(--_ui5-v2-8-0_token_selected_text_font_family)}.ui5-token--wrapper:focus{outline-offset:var(--_ui5-v2-8-0_token_outline_offset);outline:var(--_ui5-v2-8-0_token_focus_outline)}.ui5-token--wrapper:focus:after{content:var(--ui5-v2-8-0_token_focus_pseudo_element_content);position:absolute;pointer-events:none;z-index:2;border:var(--sapContent_FocusWidth) var(--sapContent_FocusStyle) var(--sapContent_FocusColor);border-radius:var(--_ui5-v2-8-0_token_focus_outline_border_radius);top:var(--_ui5-v2-8-0_token_focus_offset);bottom:var(--_ui5-v2-8-0_token_focus_offset);left:var(--_ui5-v2-8-0_token_focus_offset);right:var(--_ui5-v2-8-0_token_focus_offset)}.ui5-token--text{white-space:nowrap}.ui5-token--icon{display:flex}:host([selected]) .ui5-token--icon>[ui5-icon],:host([selected]) ::slotted([ui5-icon]){color:var(--sapButton_Selected_TextColor)}.ui5-token--icon>[ui5-icon],::slotted([ui5-icon]){color:inherit;cursor:pointer;width:var(--_ui5-v2-8-0_token_icon_size);height:var(--_ui5-v2-8-0_token_icon_size);padding:var(--_ui5-v2-8-0_token_icon_padding);color:var(--sapContent_IconColor)}:host([single-token]){max-width:100%}:host([single-token]) .ui5-token--wrapper{max-width:100%}:host([single-token]) .ui5-token--text{overflow:hidden;text-overflow:ellipsis;max-width:100%}
`;

// node_modules/@ui5/webcomponents/dist/Token.js
var __decorate62 = function(decorators, target, key, desc) {
  var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
  if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
  else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
  return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var Token_1;
var Token = Token_1 = class Token2 extends UI5Element_default {
  constructor() {
    super(...arguments);
    this.selected = false;
    this.readonly = false;
    this.overflows = false;
    this.singleToken = false;
    this.focused = false;
    this.toBeDeleted = false;
    this.forcedTabIndex = "-1";
  }
  _handleSelect() {
    if (!this.toBeDeleted) {
      this.selected = !this.selected;
      this.fireDecoratorEvent("select");
    }
  }
  _focusin() {
    this.focused = true;
  }
  _focusout() {
    this.focused = !this.focused;
  }
  _delete() {
    this.toBeDeleted = true;
    this.fireDecoratorEvent("delete");
  }
  _keydown(e) {
    const isBackSpacePressed = isBackSpace(e);
    const isDeletePressed = isDelete(e);
    if (!this.readonly && (isBackSpacePressed || isDeletePressed)) {
      e.preventDefault();
      this.fireDecoratorEvent("delete", {
        backSpace: isBackSpacePressed,
        "delete": isDeletePressed
      });
    }
    if (isSpace(e) || isSpaceCtrl(e)) {
      e.preventDefault();
      this._handleSelect();
    }
  }
  onBeforeRendering() {
    this.toBeDeleted = false;
  }
  get tokenDeletableText() {
    return Token_1.i18nBundle.getText(TOKEN_ARIA_DELETABLE);
  }
  get textDom() {
    var _a;
    return (_a = this.getDomRef()) == null ? void 0 : _a.querySelector(".ui5-token--text");
  }
  get isTruncatable() {
    if (!this.textDom) {
      return false;
    }
    return Math.ceil(this.textDom.getBoundingClientRect().width) < Math.ceil(this.textDom.scrollWidth);
  }
  get ariaDescription() {
    let description = Token_1.i18nBundle.getText(TOKEN_ARIA_LABEL);
    if (!this.readonly) {
      description += ` ${Token_1.i18nBundle.getText(TOKEN_ARIA_DELETABLE)}`;
    }
    return description;
  }
};
__decorate62([
  property_default()
], Token.prototype, "text", void 0);
__decorate62([
  property_default({ type: Boolean })
], Token.prototype, "selected", void 0);
__decorate62([
  property_default({ type: Boolean })
], Token.prototype, "readonly", void 0);
__decorate62([
  property_default({ type: Boolean })
], Token.prototype, "overflows", void 0);
__decorate62([
  property_default({ type: Boolean })
], Token.prototype, "singleToken", void 0);
__decorate62([
  property_default({ type: Boolean })
], Token.prototype, "focused", void 0);
__decorate62([
  property_default({ type: Boolean })
], Token.prototype, "toBeDeleted", void 0);
__decorate62([
  property_default({ noAttribute: true })
], Token.prototype, "forcedTabIndex", void 0);
__decorate62([
  slot_default()
], Token.prototype, "closeIcon", void 0);
__decorate62([
  i18n_default("@ui5/webcomponents")
], Token, "i18nBundle", void 0);
Token = Token_1 = __decorate62([
  customElement_default({
    tag: "ui5-token",
    languageAware: true,
    renderer: JsxRenderer_default,
    template: TokenTemplate,
    styles: Token_css_default
  }),
  event_strict_default("select", {
    bubbles: true
  }),
  event_strict_default("delete", {
    bubbles: true
  })
], Token);
Token.define();
var Token_default = Token;

// node_modules/@ui5/webcomponents-icons/dist/v4/multiselect-all.js
var name22 = "multiselect-all";
var pathData21 = "M92 472l80-97 20 19L92 512l-60-59 20-20zm80-285l20 19L92 323l-60-59 20-19 40 38zm0-187l20 19L92 137 32 78l20-21 40 40zm292 65q16 0 16 16 0 6-4.5 11T464 97H273q-6 0-11-5t-5-11q0-7 5-11.5t11-4.5h191zm0 191q16 0 16 16 0 6-4.5 11t-11.5 5H273q-6 0-11-5t-5-11q0-7 5-11.5t11-4.5h191zm0 192q16 0 16 16 0 6-4.5 11t-11.5 5H273q-6 0-11-5t-5-11q0-7 5-11.5t11-4.5h191z";
var ltr21 = true;
var collection22 = "SAP-icons-v4";
var packageName21 = "@ui5/webcomponents-icons";
registerIcon(name22, { pathData: pathData21, ltr: ltr21, collection: collection22, packageName: packageName21 });

// node_modules/@ui5/webcomponents-icons/dist/v5/multiselect-all.js
var name23 = "multiselect-all";
var pathData22 = "M198 0q11 0 18.5 7.5T224 26q0 8-6 16l-94 109q-7 9-19 9-11 0-19-8l-47-52q-7-7-7-17 0-11 7.5-18.5T58 57q10 0 19 9l27 30 75-87q8-9 19-9zm84 96q-11 0-18.5-7.5T256 70t7.5-18 18.5-7h172q11 0 18.5 7t7.5 18-7.5 18.5T454 96H282zm-84 80q11 0 18.5 7.5T224 202q0 8-6 16l-94 109q-7 9-19 9-11 0-19-8l-47-52q-7-7-7-17 0-11 7.5-18.5T58 233q10 0 19 9l27 30 75-87q8-9 19-9zm256 48q11 0 18.5 7.5T480 250t-7.5 18-18.5 7H282q-11 0-18.5-7t-7.5-18 7.5-18.5T282 224h172zM198 352q11 0 18.5 7.5T224 378q0 8-6 16l-94 109q-7 9-19 9-11 0-19-8l-47-52q-7-7-7-17 0-11 7.5-18.5T58 409q10 0 19 9l27 30 75-87q8-9 19-9zm256 64q11 0 18.5 7.5T480 442t-7.5 18-18.5 7H282q-11 0-18.5-7t-7.5-18 7.5-18.5T282 416h172z";
var ltr22 = true;
var collection23 = "SAP-icons-v5";
var packageName22 = "@ui5/webcomponents-icons";
registerIcon(name23, { pathData: pathData22, ltr: ltr22, collection: collection23, packageName: packageName22 });

// node_modules/@ui5/webcomponents-icons/dist/multiselect-all.js
var multiselect_all_default = "multiselect-all";

// node_modules/@ui5/webcomponents/dist/MultiComboBoxPopoverTemplate.js
function MultiComboBoxPopoverTemplate() {
  return jsxs(Fragment, { children: [jsxs(ResponsivePopover_default, { placement: "Bottom", horizontalAlign: "Start", class: this.classes.popover, id: this.responsivePopoverId, hideArrow: true, preventInitialFocus: true, style: this.styles.suggestionsPopover, "onui5-selection-change": this._listSelectionChange, onClose: this._afterClose, onBeforeOpen: this._beforeOpen, onBeforeClose: this._beforeClose, onOpen: this._afterOpen, onFocusOut: this._onPopoverFocusOut, accessibleName: this._popupLabel, open: this._open, opener: this, children: [this._isPhone && jsxs(Fragment, { children: [jsxs("div", { slot: "header", class: "ui5-responsive-popover-header", style: this.styles.popoverHeader, children: [jsxs("div", { class: "row", children: [jsx("span", { children: this._headerTitleText }), jsx(Button_default, { class: "ui5-responsive-popover-close-btn", icon: decline_default, design: "Transparent", onClick: this.handleCancel })] }), jsxs("div", { class: "row", children: [jsx(Input_default, { onInput: this._handleMobileInput, onKeyDown: this._onMobileInputKeydown, placeholder: this.placeholder, valueState: this._dialogInputValueState, showClearIcon: this.showClearIcon, noTypeahead: this.noTypeahead, children: this._filteredItems.map((item2) => jsx(SuggestionItem_default, { text: item2.text, additionalText: item2.additionalText })) }), jsx(ToggleButton_default, { slot: "header", class: "ui5-multi-combobox-toggle-button", icon: multiselect_all_default, design: "Transparent", pressed: this._showAllItemsButtonPressed, onClick: this.filterSelectedItems, accessibleName: this._showSelectedButtonAccessibleNameText })] })] }), "				", this.hasValueStateMessage && jsxs("div", { class: this.classes.popoverValueState, style: this.styles.popoverValueStateMessage, children: [jsx(Icon_default, { class: "ui5-input-value-state-message-icon", name: this._valueStateMessageIcon }), this.open && valueStateMessage3.call(this)] }), selectAllWrapper.call(this)] }), !this._isPhone && jsxs(Fragment, { children: [this.hasValueStateMessage && jsxs("div", { slot: "header", onKeyDown: this._onListHeaderKeydown, tabIndex: 0, class: this.classes.responsivePopoverHeaderValueState, style: this.styles.popoverValueStateMessage, children: [jsx(Icon_default, { class: "ui5-input-value-state-message-icon", name: this._valueStateMessageIcon }), this.open && valueStateMessage3.call(this)] }), selectAllWrapper.call(this)] }), this.filterSelected ? jsx(List_default, { separators: "None", selectionMode: "Multiple", class: "ui5-multi-combobox-all-items-list", accessibleRole: "ListBox", children: this.selectedItems.map((item2) => jsx("slot", { name: item2._individualSlot })) }) : jsx(List_default, { separators: "None", selectionMode: "Multiple", class: "ui5-multi-combobox-all-items-list", accessibleRole: "ListBox", onKeyDown: this._onItemKeydown, children: this._filteredItems.map((item2) => jsx("slot", { name: item2._individualSlot })) }), this._isPhone && jsx("div", { slot: "footer", class: "ui5-responsive-popover-footer", children: jsx(Button_default, { design: "Transparent", onClick: this.handleOK, children: this._dialogOkButton }) })] }), this.hasValueStateMessage && jsx(
    Popover_default,
    {
      // skipRegistryUpdate={true}
      preventInitialFocus: true,
      preventFocusRestore: true,
      hideArrow: true,
      class: "ui5-valuestatemessage-popover",
      placement: "Bottom",
      horizontalAlign: this._valueStatePopoverHorizontalAlign,
      tabIndex: -1,
      open: this.valueStateOpen,
      opener: this,
      children: jsxs("div", { slot: "header", class: this.classes.popoverValueState, style: this.styles.popoverHeader, children: [jsx(Icon_default, { class: "ui5-input-value-state-message-icon", name: this._valueStateMessageIcon }), this.valueStateOpen && valueStateMessage3.call(this)] })
    }
  )] });
}
function valueStateMessage3() {
  return this.shouldDisplayDefaultValueStateMessage ? this.valueStateDefaultText : jsx("slot", { name: "valueStateMessage" });
}
function selectAllWrapper() {
  if (this.showSelectAll) {
    return jsx("div", { class: "ui5-mcb-select-all-header", onKeyDown: this._onListHeaderKeydown, tabIndex: 0, children: jsx(CheckBox_default, { disabled: this.readonly, checked: this._allSelected, class: "ui5-mcb-select-all-checkbox", text: this.selectAllCheckboxLabel, onChange: this._handleSelectAllCheckboxClick }) });
  }
}

// node_modules/@ui5/webcomponents/dist/MultiComboBoxTemplate.js
function MultiComboBoxTemplate() {
  return jsxs(Fragment, { children: [jsxs("div", { class: "ui5-multi-combobox-root ui5-input-focusable-element", children: [jsx("span", { id: "ui5-multi-combobox-hiddenText-nMore", class: "ui5-hidden-text", children: this._tokensCountText }), this.hasValueState && jsx("span", { id: "ui5-multi-combobox-valueStateDesc", class: "ui5-hidden-text", children: this.ariaValueStateHiddenText }), jsx(Tokenizer_default, { slot: "_beginContent", preventPopoverOpen: true, hidePopoverArrow: true, readonly: this.readonly, class: "ui5-multi-combobox-tokenizer", disabled: this.disabled, onShowMoreItemsPress: this._showFilteredItems, opener: this.morePopoverOpener, popoverMinWidth: this._inputWidth, onTokenDelete: this._tokenDelete, onBeforeMorePopoverOpen: this.handleBeforeTokenizerPopoverOpen, onFocusOut: this._tokenizerFocusOut, onFocusIn: this._tokenizerFocusIn, onClick: this._click, onPaste: this._handlePaste, onKeyDown: this._onTokenizerKeydown, expanded: this._tokenizerExpanded, open: this.tokenizerOpen, children: this.items.map((item2, index) => {
    var _a;
    if (item2.isGroupItem) {
      return (_a = item2.items) == null ? void 0 : _a.map((groupItem, groupItemIndex) => {
        return groupItem.selected && jsx(Token_default, { readonly: this.readonly, class: "ui5-multi-combobox-token", "data-ui5-id": groupItem._id, part: `token-${groupItemIndex}`, text: groupItem.text });
      });
    }
    return item2.selected && jsx(Token_default, { readonly: this.readonly, class: "ui5-multi-combobox-token", "data-ui5-id": item2._id, part: `token-${index}`, text: item2.text });
  }) }), jsx("input", { id: "ui5-multi-combobox-input", value: this.value, "inner-input": true, placeholder: this._getPlaceholder, disabled: this.disabled, readonly: this.readonly, "value-state": this.valueState, onInput: this._inputLiveChange, onChange: this._inputChange, onKeyDown: this._onkeydown, onClick: this._click, onFocusIn: this.inputFocusIn, onFocusOut: this.inputFocusOut, onPaste: this._handlePaste, role: "combobox", "aria-haspopup": "dialog", "aria-expanded": this.open, "aria-autocomplete": "both", "aria-describedby": this.ariaDescribedByText, "aria-required": this.required, "aria-label": this.ariaLabelText, "aria-controls": this.responsivePopoverId, autocomplete: "off", "data-sap-focus-ref": true }), this._effectiveShowClearIcon && jsx("div", { onClick: this._clear, class: "ui5-input-clear-icon-wrapper inputIcon", tabIndex: -1, onMouseDown: this._iconMouseDown, children: jsx(Icon_default, { tabIndex: -1, class: "ui5-input-clear-icon", name: decline_default, "accessible-name": this.clearIconAccessibleName }) }), this.icon && jsx("slot", { name: "icon" }), !this.readonly && jsx(Icon_default, {
    name: "slim-arrow-down",
    class: {
      "inputIcon": true,
      "inputIcon--pressed": this._iconPressed
    },
    slot: "icon",
    tabIndex: -1,
    onClick: this.togglePopoverByDropdownIcon,
    onMouseDown: this._onIconMousedown,
    onFocusIn: this._forwardFocusToInner,
    // pressed={this.open}
    accessibleName: this._iconAccessibleNameText
  })] }), MultiComboBoxPopoverTemplate.call(this)] });
}

// node_modules/@ui5/webcomponents/dist/generated/themes/MultiComboBox.css.js
registerThemePropertiesLoader("@ui5/webcomponents-theming", "sap_horizon", async () => parameters_bundle_css_default);
registerThemePropertiesLoader("@ui5/webcomponents", "sap_horizon", async () => parameters_bundle_css_default2);
var MultiComboBox_css_default = `:host{vertical-align:middle}:host{width:var(--_ui5-v2-8-0_input_width);min-width:calc(var(--_ui5-v2-8-0_input_min_width) + (var(--_ui5-v2-8-0-input-icons-count)*var(--_ui5-v2-8-0_input_icon_width)));margin:var(--_ui5-v2-8-0_input_margin_top_bottom) 0;height:var(--_ui5-v2-8-0_input_height);color:var(--sapField_TextColor);font-size:var(--sapFontSize);font-family:"72override",var(--sapFontFamily);font-style:normal;border:var(--_ui5-v2-8-0-input-border);border-radius:var(--_ui5-v2-8-0_input_border_radius);box-sizing:border-box;text-align:start;transition:var(--_ui5-v2-8-0_input_transition);background:var(--sapField_BackgroundStyle);background-color:var(--_ui5-v2-8-0_input_background_color)}:host(:not([readonly])),:host([readonly][disabled]){box-shadow:var(--sapField_Shadow)}:host([focused]:not([opened])){border-color:var(--_ui5-v2-8-0_input_focused_border_color);background-color:var(--sapField_Focus_Background)}.ui5-input-focusable-element{position:relative}:host([focused]:not([opened])) .ui5-input-focusable-element:after{content:var(--ui5-v2-8-0_input_focus_pseudo_element_content);position:absolute;pointer-events:none;z-index:2;border:var(--sapContent_FocusWidth) var(--sapContent_FocusStyle) var(--_ui5-v2-8-0_input_focus_outline_color);border-radius:var(--_ui5-v2-8-0_input_focus_border_radius);top:var(--_ui5-v2-8-0_input_focus_offset);bottom:var(--_ui5-v2-8-0_input_focus_offset);left:var(--_ui5-v2-8-0_input_focus_offset);right:var(--_ui5-v2-8-0_input_focus_offset)}:host([focused][readonly]:not([opened])) .ui5-input-focusable-element:after{top:var(--_ui5-v2-8-0_input_readonly_focus_offset);bottom:var(--_ui5-v2-8-0_input_readonly_focus_offset);left:var(--_ui5-v2-8-0_input_readonly_focus_offset);right:var(--_ui5-v2-8-0_input_readonly_focus_offset);border-radius:var(--_ui5-v2-8-0_input_readonly_focus_border_radius)}.ui5-input-root:before{content:"";position:absolute;width:calc(100% - 2px);left:1px;bottom:-2px;border-bottom-left-radius:8px;border-bottom-right-radius:8px;height:var(--_ui5-v2-8-0_input_bottom_border_height);transition:var(--_ui5-v2-8-0_input_transition);background-color:var(--_ui5-v2-8-0_input_bottom_border_color)}.ui5-input-root{width:100%;height:100%;position:relative;background:transparent;display:inline-block;outline:none;box-sizing:border-box;color:inherit;transition:border-color .2s ease-in-out;border-radius:var(--_ui5-v2-8-0_input_border_radius);overflow:hidden}:host([disabled]){opacity:var(--_ui5-v2-8-0_input_disabled_opacity);cursor:default;pointer-events:none;background-color:var(--_ui5-v2-8-0-input_disabled_background);border-color:var(--_ui5-v2-8-0_input_disabled_border_color)}:host([disabled]) .ui5-input-root:before,:host([readonly]) .ui5-input-root:before{content:none}[inner-input]{background:transparent;color:inherit;border:none;font-style:inherit;-webkit-appearance:none;-moz-appearance:textfield;padding:var(--_ui5-v2-8-0_input_inner_padding);box-sizing:border-box;width:100%;text-overflow:ellipsis;flex:1;outline:none;font-size:inherit;font-family:inherit;line-height:inherit;letter-spacing:inherit;word-spacing:inherit;text-align:inherit}[inner-input][type=search]::-webkit-search-decoration,[inner-input][type=search]::-webkit-search-cancel-button,[inner-input][type=search]::-webkit-search-results-button,[inner-input][type=search]::-webkit-search-results-decoration{display:none}.ui5-input-value-state-icon{height:100%;display:var(--_ui5-v2-8-0-input-value-state-icon-display);align-items:center}.ui5-input-value-state-icon>svg{margin-right:8px}[inner-input]::selection{background:var(--sapSelectedColor);color:var(--sapContent_ContrastTextColor)}:host([disabled]) [inner-input]::-webkit-input-placeholder{visibility:hidden}:host([readonly]) [inner-input]::-webkit-input-placeholder{visibility:hidden}:host([disabled]) [inner-input]::-moz-placeholder{visibility:hidden}:host([readonly]) [inner-input]::-moz-placeholder{visibility:hidden}[inner-input]::-webkit-input-placeholder{font-weight:400;font-style:var(--_ui5-v2-8-0_input_placeholder_style);color:var(--_ui5-v2-8-0_input_placeholder_color);padding-right:.125rem}[inner-input]::-moz-placeholder{font-weight:400;font-style:var(--_ui5-v2-8-0_input_placeholder_style);color:var(--_ui5-v2-8-0_input_placeholder_color);padding-right:.125rem}:host([value-state="Negative"]) [inner-input]::-webkit-input-placeholder{color:var(--_ui5-v2-8-0-input_error_placeholder_color);font-weight:var(--_ui5-v2-8-0_input_value_state_error_warning_placeholder_font_weight)}:host([value-state="Negative"]) [inner-input]::-moz-placeholder{color:var(--_ui5-v2-8-0-input_error_placeholder_color);font-weight:var(--_ui5-v2-8-0_input_value_state_error_warning_placeholder_font_weight)}:host([value-state="Critical"]) [inner-input]::-webkit-input-placeholder{font-weight:var(--_ui5-v2-8-0_input_value_state_error_warning_placeholder_font_weight)}:host([value-state="Critical"]) [inner-input]::-moz-placeholder{font-weight:var(--_ui5-v2-8-0_input_value_state_error_warning_placeholder_font_weight)}:host([value-state="Positive"]) [inner-input]::-webkit-input-placeholder{color:var(--_ui5-v2-8-0_input_placeholder_color)}:host([value-state="Positive"]) [inner-input]::-moz-placeholder{color:var(--_ui5-v2-8-0_input_placeholder_color)}:host([value-state="Information"]) [inner-input]::-webkit-input-placeholder{color:var(--_ui5-v2-8-0_input_placeholder_color)}:host([value-state="Information"]) [inner-input]::-moz-placeholder{color:var(--_ui5-v2-8-0_input_placeholder_color)}.ui5-input-content{height:100%;box-sizing:border-box;display:flex;flex-direction:row;justify-content:flex-end;overflow:hidden;outline:none;background:transparent;color:inherit;border-radius:var(--_ui5-v2-8-0_input_border_radius)}:host([readonly]:not([disabled])){border-color:var(--_ui5-v2-8-0_input_readonly_border_color);background:var(--sapField_ReadOnly_BackgroundStyle);background-color:var(--_ui5-v2-8-0_input_readonly_background)}:host([value-state="None"]:not([readonly]):hover),:host(:not([value-state]):not([readonly]):hover){border:var(--_ui5-v2-8-0_input_hover_border);border-color:var(--_ui5-v2-8-0_input_focused_border_color);box-shadow:var(--sapField_Hover_Shadow);background:var(--sapField_Hover_BackgroundStyle);background-color:var(--sapField_Hover_Background)}:host(:not([value-state]):not([readonly])[focused]:not([opened]):hover),:host([value-state="None"]:not([readonly])[focused]:not([opened]):hover){box-shadow:none}:host([focused]):not([opened]) .ui5-input-root:before{content:none}:host(:not([readonly]):not([disabled])[value-state]:not([value-state="None"])){border-width:var(--_ui5-v2-8-0_input_state_border_width)}:host([value-state="Negative"]) [inner-input],:host([value-state="Critical"]) [inner-input]{font-style:var(--_ui5-v2-8-0_input_error_warning_font_style);text-indent:var(--_ui5-v2-8-0_input_error_warning_text_indent)}:host([value-state="Negative"]) [inner-input]{font-weight:var(--_ui5-v2-8-0_input_error_font_weight)}:host([value-state="Critical"]) [inner-input]{font-weight:var(--_ui5-v2-8-0_input_warning_font_weight)}:host([value-state="Negative"]:not([readonly]):not([disabled])){background:var(--sapField_InvalidBackgroundStyle);background-color:var(--sapField_InvalidBackground);border-color:var(--_ui5-v2-8-0_input_value_state_error_border_color);box-shadow:var(--sapField_InvalidShadow)}:host([value-state="Negative"][focused]:not([opened]):not([readonly])){background-color:var(--_ui5-v2-8-0_input_focused_value_state_error_background);border-color:var(--_ui5-v2-8-0_input_focused_value_state_error_border_color)}:host([value-state="Negative"][focused]:not([opened]):not([readonly])) .ui5-input-focusable-element:after{border-color:var(--_ui5-v2-8-0_input_focused_value_state_error_focus_outline_color)}:host([value-state="Negative"]:not([readonly])) .ui5-input-root:before{background-color:var(--_ui5-v2-8-0-input-value-state-error-border-botom-color)}:host([value-state="Negative"]:not([readonly]):not([focused]):hover),:host([value-state="Negative"]:not([readonly])[focused][opened]:hover){background-color:var(--_ui5-v2-8-0_input_value_state_error_hover_background);box-shadow:var(--sapField_Hover_InvalidShadow)}:host([value-state="Negative"]:not([readonly]):not([disabled])),:host([value-state="Critical"]:not([readonly]):not([disabled])),:host([value-state="Information"]:not([readonly]):not([disabled])){border-style:var(--_ui5-v2-8-0_input_error_warning_border_style)}:host([value-state="Critical"]:not([readonly]):not([disabled])){background:var(--sapField_WarningBackgroundStyle);background-color:var(--sapField_WarningBackground);border-color:var(--_ui5-v2-8-0_input_value_state_warning_border_color);box-shadow:var(--sapField_WarningShadow)}:host([value-state="Critical"][focused]:not([opened]):not([readonly])){background-color:var(--_ui5-v2-8-0_input_focused_value_state_warning_background);border-color:var(--_ui5-v2-8-0_input_focused_value_state_warning_border_color)}:host([value-state="Critical"][focused]:not([opened]):not([readonly])) .ui5-input-focusable-element:after{border-color:var(--_ui5-v2-8-0_input_focused_value_state_warning_focus_outline_color)}:host([value-state="Critical"]:not([readonly])) .ui5-input-root:before{background-color:var(--_ui5-v2-8-0_input_value_state_warning_border_botom_color)}:host([value-state="Critical"]:not([readonly]):not([focused]):hover),:host([value-state="Critical"]:not([readonly])[focused][opened]:hover){background-color:var(--sapField_Hover_Background);box-shadow:var(--sapField_Hover_WarningShadow)}:host([value-state="Positive"]:not([readonly]):not([disabled])){background:var(--sapField_SuccessBackgroundStyle);background-color:var(--sapField_SuccessBackground);border-color:var(--_ui5-v2-8-0_input_value_state_success_border_color);border-width:var(--_ui5-v2-8-0_input_value_state_success_border_width);box-shadow:var(--sapField_SuccessShadow)}:host([value-state="Positive"][focused]:not([opened]):not([readonly])){background-color:var(--_ui5-v2-8-0_input_focused_value_state_success_background);border-color:var(--_ui5-v2-8-0_input_focused_value_state_success_border_color)}:host([value-state="Positive"][focused]:not([opened]):not([readonly])) .ui5-input-focusable-element:after{border-color:var(--_ui5-v2-8-0_input_focused_value_state_success_focus_outline_color)}:host([value-state="Positive"]:not([readonly])) .ui5-input-root:before{background-color:var(--_ui5-v2-8-0_input_value_state_success_border_botom_color)}:host([value-state="Positive"]:not([readonly]):not([focused]):hover),:host([value-state="Positive"]:not([readonly])[focused][opened]:hover){background-color:var(--sapField_Hover_Background);box-shadow:var(--sapField_Hover_SuccessShadow)}:host([value-state="Information"]:not([readonly]):not([disabled])){background:var(--sapField_InformationBackgroundStyle);background-color:var(--sapField_InformationBackground);border-color:var(--_ui5-v2-8-0_input_value_state_information_border_color);border-width:var(--_ui5-v2-8-0_input_information_border_width);box-shadow:var(--sapField_InformationShadow)}:host([value-state="Information"][focused]:not([opened]):not([readonly])){background-color:var(--_ui5-v2-8-0_input_focused_value_state_information_background);border-color:var(--_ui5-v2-8-0_input_focused_value_state_information_border_color)}:host([value-state="Information"]:not([readonly])) .ui5-input-root:before{background-color:var(--_ui5-v2-8-0_input_value_success_information_border_botom_color)}:host([value-state="Information"]:not([readonly]):not([focused]):hover),:host([value-state="Information"]:not([readonly])[focused][opened]:hover){background-color:var(--sapField_Hover_Background);box-shadow:var(--sapField_Hover_InformationShadow)}.ui5-input-icon-root{min-width:var(--_ui5-v2-8-0_input_icon_min_width);height:100%;display:flex;justify-content:center;align-items:center}::slotted([ui5-icon][slot="icon"]){align-self:start;padding:var(--_ui5-v2-8-0_input_custom_icon_padding);box-sizing:content-box!important}:host([value-state="Negative"]) .inputIcon,:host([value-state="Critical"]) .inputIcon{padding:var(--_ui5-v2-8-0_input_error_warning_icon_padding)}:host([value-state="Negative"][focused]) .inputIcon,:host([value-state="Critical"][focused]) .inputIcon{padding:var(--_ui5-v2-8-0_input_error_warning_focused_icon_padding)}:host([value-state="Information"]) .inputIcon{padding:var(--_ui5-v2-8-0_input_information_icon_padding)}:host([value-state="Information"][focused]) .inputIcon{padding:var(--_ui5-v2-8-0_input_information_focused_icon_padding)}:host([value-state="Negative"]) ::slotted(.inputIcon[ui5-icon]),:host([value-state="Negative"]) ::slotted([ui5-icon][slot="icon"]),:host([value-state="Critical"]) ::slotted([ui5-icon][slot="icon"]){padding:var(--_ui5-v2-8-0_input_error_warning_custom_icon_padding)}:host([value-state="Negative"][focused]) ::slotted(.inputIcon[ui5-icon]),:host([value-state="Negative"][focused]) ::slotted([ui5-icon][slot="icon"]),:host([value-state="Critical"][focused]) ::slotted([ui5-icon][slot="icon"]){padding:var(--_ui5-v2-8-0_input_error_warning_custom_focused_icon_padding)}:host([value-state="Information"]) ::slotted([ui5-icon][slot="icon"]){padding:var(--_ui5-v2-8-0_input_information_custom_icon_padding)}:host([value-state="Information"][focused]) ::slotted([ui5-icon][slot="icon"]){padding:var(--_ui5-v2-8-0_input_information_custom_focused_icon_padding)}:host([value-state="Negative"]) .inputIcon:active,:host([value-state="Negative"]) .inputIcon.inputIcon--pressed{box-shadow:var(--_ui5-v2-8-0_input_error_icon_box_shadow);color:var(--_ui5-v2-8-0_input_icon_error_pressed_color)}:host([value-state="Negative"]) .inputIcon:not(.inputIcon--pressed):not(:active):hover{box-shadow:var(--_ui5-v2-8-0_input_error_icon_box_shadow)}:host([value-state="Critical"]) .inputIcon:active,:host([value-state="Critical"]) .inputIcon.inputIcon--pressed{box-shadow:var(--_ui5-v2-8-0_input_warning_icon_box_shadow);color:var(--_ui5-v2-8-0_input_icon_warning_pressed_color)}:host([value-state="Critical"]) .inputIcon:not(.inputIcon--pressed):not(:active):hover{box-shadow:var(--_ui5-v2-8-0_input_warning_icon_box_shadow)}:host([value-state="Information"]) .inputIcon:active,:host([value-state="Information"]) .inputIcon.inputIcon--pressed{box-shadow:var(--_ui5-v2-8-0_input_information_icon_box_shadow);color:var(--_ui5-v2-8-0_input_icon_information_pressed_color)}:host([value-state="Information"]) .inputIcon:not(.inputIcon--pressed):not(:active):hover{box-shadow:var(--_ui5-v2-8-0_input_information_icon_box_shadow)}:host([value-state="Positive"]) .inputIcon:active,:host([value-state="Positive"]) .inputIcon.inputIcon--pressed{box-shadow:var(--_ui5-v2-8-0_input_success_icon_box_shadow);color:var(--_ui5-v2-8-0_input_icon_success_pressed_color)}:host([value-state="Positive"]) .inputIcon:not(.inputIcon--pressed):not(:active):hover{box-shadow:var(--_ui5-v2-8-0_input_success_icon_box_shadow)}.ui5-input-clear-icon-wrapper{height:var(--_ui5-v2-8-0_input_icon_wrapper_height);padding:0;width:var(--_ui5-v2-8-0_input_icon_width);min-width:var(--_ui5-v2-8-0_input_icon_width);display:flex;justify-content:center;align-items:center;box-sizing:border-box}:host([value-state]:not([value-state="None"]):not([value-state="Positive"])) .ui5-input-clear-icon-wrapper{height:var(--_ui5-v2-8-0_input_icon_wrapper_state_height);vertical-align:top}:host([value-state="Positive"]) .ui5-input-clear-icon-wrapper{height:var(--_ui5-v2-8-0_input_icon_wrapper_success_state_height)}[ui5-icon].ui5-input-clear-icon{padding:0;color:inherit}[inner-input]::-webkit-outer-spin-button,[inner-input]::-webkit-inner-spin-button{-webkit-appearance:inherit;margin:inherit}.inputIcon{color:var(--_ui5-v2-8-0_input_icon_color);cursor:pointer;outline:none;padding:var(--_ui5-v2-8-0_input_icon_padding);border-inline-start:var(--_ui5-v2-8-0_input_icon_border);min-width:1rem;min-height:1rem;border-radius:var(--_ui5-v2-8-0_input_icon_border_radius)}.inputIcon.inputIcon--pressed{background:var(--_ui5-v2-8-0_input_icon_pressed_bg);box-shadow:var(--_ui5-v2-8-0_input_icon_box_shadow);border-inline-start:var(--_ui5-v2-8-0_select_hover_icon_left_border);color:var(--_ui5-v2-8-0_input_icon_pressed_color)}.inputIcon:active{background-color:var(--sapButton_Active_Background);box-shadow:var(--_ui5-v2-8-0_input_icon_box_shadow);border-inline-start:var(--_ui5-v2-8-0_select_hover_icon_left_border);color:var(--_ui5-v2-8-0_input_icon_pressed_color)}.inputIcon:not(.inputIcon--pressed):not(:active):hover{background:var(--_ui5-v2-8-0_input_icon_hover_bg);box-shadow:var(--_ui5-v2-8-0_input_icon_box_shadow)}.inputIcon:hover{border-inline-start:var(--_ui5-v2-8-0_select_hover_icon_left_border);box-shadow:var(--_ui5-v2-8-0_input_icon_box_shadow)}.ui5-hidden-text{position:absolute;clip:rect(1px,1px,1px,1px);user-select:none;left:-1000px;top:-1000px;pointer-events:none;font-size:0}:host{min-width:calc(var(--_ui5-v2-8-0_input_min_width) + (var(--_ui5-v2-8-0-input-icons-count)*var(--_ui5-v2-8-0_input_icon_width)))}:host([tokenizer-available]){min-width:calc(var(--_ui5-v2-8-0_input_min_width) + (var(--_ui5-v2-8-0-input-icons-count)*var(--_ui5-v2-8-0_input_icon_width)) + var(--_ui5-v2-8-0_input_tokenizer_min_width))}:host(:not([hidden])){display:inline-block}.ui5-multi-combobox-root{display:flex;overflow:hidden;width:100%;height:100%;border-radius:var(--_ui5-v2-8-0_input_border_radius)}.ui5-multi-combobox-tokenizer{min-width:var(--_ui5-v2-8-0_input_tokenizer_min_width);max-width:calc(100% - 3rem - var(--_ui5-v2-8-0-input-icons-count) * var(--_ui5-v2-8-0_input_icon_min_width));border:none;width:auto;height:100%}:host([readonly]) .ui5-multi-combobox-tokenizer::part(n-more-text){color:var(--sapLinkColor)}:host([disabled]) .ui5-multi-combobox-tokenizer{opacity:100%}.ui5-multi-combobox-tokenizer::part(n-more-text){padding-inline-end:var(--_ui5-v2-8-0_input_inner_space_to_n_more_text)}[inner-input][inner-input-with-icon]{padding:var(--_ui5-v2-8-0_input_inner_padding_with_icon)}:host([tokenizer-available]) [inner-input]{padding-inline-start:var(--_ui5-v2-8-0_input_inner_space_to_tokenizer)}:host(:not([tokenizer-available])) .ui5-multi-combobox-tokenizer{--_ui5-v2-8-0_input_tokenizer_min_width: 0px;width:var(--_ui5-v2-8-0_input_tokenizer_min_width)}
`;

// node_modules/@ui5/webcomponents/dist/generated/themes/MultiComboBoxPopover.css.js
registerThemePropertiesLoader("@ui5/webcomponents-theming", "sap_horizon", async () => parameters_bundle_css_default);
registerThemePropertiesLoader("@ui5/webcomponents", "sap_horizon", async () => parameters_bundle_css_default2);
var MultiComboBoxPopover_css_default = `.ui5-suggestions-popover .ui5-multi-combobox-all-items-list{--_ui5-v2-8-0_checkbox_width_height: var(--_ui5-v2-8-0_list_item_dropdown_base_height)}.ui5-mcb-select-all-header{width:100%;height:44px;border-bottom:.0625rem solid var(--sapGroup_TitleBorderColor);display:flex;align-items:center;font-family:"72override",var(--sapFontFamily);position:sticky;top:0;z-index:2;background:var(--sapPageHeader_Background)}.ui5-mcb-select-all-checkbox{width:100%;font-family:var(--sapFontBoldFamily)}.ui5-mcb-select-all-checkbox::part(root):focus:before{border:var(--sapContent_FocusWidth) var(--sapContent_FocusStyle) var(--sapContent_FocusColor);border-radius:0;inset:0 2px}.ui5-mcb-select-all-checkbox::part(label){font-family:var(--sapFontBoldFamily)}:host([readonly]) ::slotted([ui5-mcb-item]){cursor:auto}
`;

// node_modules/@ui5/webcomponents/dist/MultiComboBox.js
var __decorate63 = function(decorators, target, key, desc) {
  var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
  if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
  else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
  return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var MultiComboBox_1;
var MultiComboBox = MultiComboBox_1 = class MultiComboBox2 extends UI5Element_default {
  get formValidityMessage() {
    return MultiComboBox_1.i18nBundle.getText(FORM_MIXED_TEXTFIELD_REQUIRED);
  }
  get formValidity() {
    const selectedItems = (this.items || []).filter((item2) => item2.selected);
    return { valueMissing: this.required && !this.value && !selectedItems.length };
  }
  async formElementAnchor() {
    return this.getFocusDomRefAsync();
  }
  get formFormattedValue() {
    const selectedItems = (this.items || []).filter((item2) => item2.selected);
    if (selectedItems.length && this.name) {
      const formData = new FormData();
      formData.append(this.name, this.value);
      for (let i = 0; i < selectedItems.length; i++) {
        formData.append(this.name, selectedItems[i].text);
      }
      return formData;
    }
    return this.value;
  }
  constructor() {
    super();
    this.value = "";
    this.noTypeahead = false;
    this.noValidation = false;
    this.disabled = false;
    this.valueState = "None";
    this.readonly = false;
    this.required = false;
    this.filter = "StartsWithPerTerm";
    this.showClearIcon = false;
    this.showSelectAll = false;
    this._effectiveValueState = "None";
    this.valueStateOpen = false;
    this.tokenizerOpen = false;
    this._open = false;
    this._valueBeforeOpen = this.value;
    this.filterSelected = false;
    this.focused = false;
    this._tokenizerFocused = false;
    this._iconPressed = false;
    this._inputWidth = 0;
    this._listWidth = 0;
    this._performingSelectionTwice = false;
    this._allSelected = false;
    this._effectiveShowClearIcon = false;
    this._dialogInputValueState = "None";
    this.tokenizerAvailable = false;
    this._filteredItems = [];
    this.selectedItems = [];
    this._previouslySelectedItems = [];
    this.selectedValues = [];
    this._itemsBeforeOpen = [];
    this._inputLastValue = "";
    this._deleting = false;
    this._validationTimeout = null;
    this._handleResizeBound = this._handleResize.bind(this);
    this.valueBeforeAutoComplete = "";
    this._lastValue = this.getAttribute("value") || "";
    this.currentItemIdx = -1;
  }
  onEnterDOM() {
    ResizeHandler_default.register(this, this._handleResizeBound);
  }
  onExitDOM() {
    ResizeHandler_default.deregister(this, this._handleResizeBound);
  }
  _handleResize() {
    this._inputWidth = this.offsetWidth;
  }
  _handleMobileInput(e) {
    if (!this.open || this.readonly) {
      return;
    }
    const target = e.target;
    const value = target.value;
    if (!this.noValidation && !this._filterItems(value).length) {
      this._dialogInputValueState = ValueState_default.Negative;
    } else {
      this._dialogInputValueState = this.valueState;
    }
    this.value = value;
    this._shouldFilterItems = true;
    this.valueBeforeAutoComplete = value;
    this.fireDecoratorEvent("input");
  }
  _inputChange() {
    if (!this._clearingValue && this._lastValue !== this.value) {
      this._lastValue = this.value;
      this.fireDecoratorEvent("change");
    }
  }
  _onMobileInputKeydown(e) {
    if (!isEnter(e)) {
      return;
    }
    const { value } = e.target;
    const matchingItem = this._getItems().find((item2) => item2.text === value);
    if (!matchingItem) {
      return;
    }
    const initiallySelected = matchingItem == null ? void 0 : matchingItem.selected;
    const changePrevented = this.fireSelectionChange();
    if (!changePrevented) {
      matchingItem.selected = !initiallySelected;
      this._getResponsivePopover().preventFocusRestore = false;
      this._open = false;
      this.value = "";
    }
  }
  _toggleTokenizerPopover() {
    this.tokenizerOpen = false;
    this._open = !this.open;
  }
  togglePopoverByDropdownIcon() {
    this._shouldFilterItems = false;
    this._open = !this.open;
    this.tokenizerOpen = false;
  }
  _showFilteredItems() {
    this.filterSelected = true;
    this._showMorePressed = true;
    this._toggleTokenizerPopover();
  }
  filterSelectedItems(e) {
    this.filterSelected = e.target.pressed;
    const selectedItems = this._filteredItems.filter((item2) => item2.selected);
    this.selectedItems = this._getItems().filter((item2, idx, allItems) => MultiComboBox_1._groupItemFilter(item2, ++idx, allItems, selectedItems) || selectedItems.indexOf(item2) !== -1);
  }
  /**
   * Indicates whether the dropdown is open. True if the dropdown is open, false otherwise.
   * @default false
   * @public
   */
  get open() {
    return this._open;
  }
  get _showAllItemsButtonPressed() {
    return this.filterSelected;
  }
  get _inputDom() {
    return this.shadowRoot.querySelector("#ui5-multi-combobox-input");
  }
  _inputLiveChange(e) {
    const input = e.target;
    const value = input.value;
    const filteredItems = this._filterItems(value);
    const oldValueState = this.valueState;
    this._shouldFilterItems = true;
    if (this.filterSelected) {
      this.filterSelected = false;
    }
    if (this._validationTimeout) {
      if (this._filterItems(value).length) {
        this.valueState = this._effectiveValueState;
        this._validationTimeout = null;
      } else {
        input.value = this._inputLastValue;
        return;
      }
    }
    this._effectiveValueState = this.valueState;
    if (!filteredItems.length && value && !this.noValidation) {
      const newValue = this.valueBeforeAutoComplete || this._inputLastValue;
      input.value = newValue;
      this.value = newValue;
      this.valueState = ValueState_default.Negative;
      this._shouldAutocomplete = false;
      this._resetValueState(oldValueState);
      return;
    }
    this._inputLastValue = input.value;
    this.value = input.value;
    this._filteredItems = filteredItems;
    if (!isPhone()) {
      if (filteredItems.length === 0) {
        this._open = false;
      } else {
        this._open = true;
      }
    }
    this.fireDecoratorEvent("input");
  }
  _tokenDelete(e) {
    this._previouslySelectedItems = this._getSelectedItems();
    const token = e.detail.tokens;
    const deletingItems = this._getItems().filter((item2) => token.some((t) => t.getAttribute("data-ui5-id") === item2._id));
    deletingItems.forEach((item2) => {
      item2.selected = false;
    });
    this._deleting = true;
    this._preventTokenizerToggle = true;
    this.focus();
    const changePrevented = this.fireSelectionChange();
    if (changePrevented) {
      this._revertSelection();
    }
  }
  get _getPlaceholder() {
    if (this._getSelectedItems().length) {
      return "";
    }
    return this.placeholder || "";
  }
  _handleArrowLeft() {
    const inputDomRef = this._inputDom;
    const cursorPosition = inputDomRef.selectionStart || 0;
    const isTextSelected = (inputDomRef.selectionEnd || 0) - cursorPosition > 0;
    if (cursorPosition === 0 && !isTextSelected) {
      this._tokenizer._focusLastToken();
    }
  }
  _onPopoverFocusOut() {
    if (!isPhone()) {
      this._tokenizer.expanded = this._open;
    }
  }
  _tokenizerFocusOut(e) {
    var _a;
    this._tokenizerFocused = false;
    const tokensCount = this._tokenizer.tokens.length;
    const selectedTokens = this._selectedTokensCount;
    const lastTokenBeingDeleted = tokensCount - 1 === 0 && this._deleting;
    const allTokensAreBeingDeleted = selectedTokens === tokensCount && this._deleting;
    const relatedTarget = e.relatedTarget;
    if (!((_a = this.shadowRoot) == null ? void 0 : _a.contains(relatedTarget))) {
      this._tokenizer.tokens.forEach((token) => {
        token.selected = false;
      });
      this._tokenizer.expanded = this._preventTokenizerToggle ? this._tokenizer.expanded : false;
    }
    if (allTokensAreBeingDeleted || lastTokenBeingDeleted) {
      setTimeout(() => {
        if (!isPhone()) {
          this._inputDom.focus();
        }
        this._deleting = false;
      }, 0);
    }
  }
  _tokenizerFocusIn() {
    this._tokenizerFocused = true;
    this.focused = false;
  }
  _onkeydown(e) {
    const isArrowDownCtrl = isDownCtrl(e);
    const isCtrl2 = e.metaKey || e.ctrlKey;
    if (isShow(e) && !this.disabled) {
      this._handleShow(e);
      return;
    }
    if (isDownShift(e) || isUpShift(e)) {
      e.preventDefault();
      return;
    }
    if (isUp(e) || isDown(e) || isUpCtrl(e) || isArrowDownCtrl) {
      this._handleArrowNavigation(e, isArrowDownCtrl);
      return;
    }
    if (isArrowDownCtrl && !this.open) {
      setTimeout(() => this._inputDom.setSelectionRange(0, this._inputDom.value.length), 0);
    }
    if (isLeftCtrl(e) || isRightCtrl(e)) {
      this._handleArrowCtrl(e);
      return;
    }
    if (isInsertShift(e)) {
      this._handleInsertPaste(e);
      return;
    }
    if (isCtrl2 && e.key.toLowerCase() === "i" && this._tokenizer.tokens.length > 0) {
      e.preventDefault();
      this._toggleTokenizerPopover();
    }
    if (isSpaceShift(e)) {
      e.preventDefault();
    }
    if (e.key === "ArrowLeft" || e.key === "Show" || e.key === "PageUp" || e.key === "PageDown" || e.key === "Backspace" || e.key === "Escape" || e.key === "Home" || e.key === "End" || e.key === "Tab" || e.key === "ArrowDown" || e.key === "Enter") {
      this[`_handle${e.key}`](e);
    }
    this._shouldAutocomplete = !this.noTypeahead && !(isBackSpace(e) || isDelete(e) || isEscape(e) || isEnter(e));
  }
  _selectItems(matchingItems) {
    this._previouslySelectedItems = this._getSelectedItems();
    matchingItems.forEach((item2) => {
      item2.selected = true;
      this.value = "";
      const changePrevented = this.fireSelectionChange();
      if (changePrevented) {
        this._revertSelection();
      }
    });
  }
  _handlePaste(e) {
    if (this.readonly || !e.clipboardData) {
      return;
    }
    const pastedText = e.clipboardData.getData("text/plain");
    if (!pastedText) {
      return;
    }
    this._handleTokenCreationUponPaste(pastedText, e);
  }
  _handleTokenCreationUponPaste(pastedText, e) {
    const separatedText = pastedText.split(/\r\n|\r|\n|\t/g).filter((t) => !!t);
    const matchingItems = this._getItems().filter((item2) => !item2.isGroupItem && !item2.selected && separatedText.includes(item2.text));
    if (matchingItems.length > 1) {
      e.preventDefault();
      this._selectItems(matchingItems);
    }
  }
  async _handleInsertPaste(e) {
    if (this.readonly || isFirefox()) {
      return;
    }
    const pastedText = await navigator.clipboard.readText();
    if (!pastedText) {
      return;
    }
    this._handleTokenCreationUponPaste(pastedText, e);
  }
  _handleShow(e) {
    const items3 = this._getItems();
    const selectedItem = this._getSelectedItems()[0];
    const focusedToken = this._tokenizer.tokens.find((token) => token.focused);
    const value = this.value;
    const matchingItem = this._getItems().find((item2) => {
      var _a;
      return ((_a = item2.text) == null ? void 0 : _a.localeCompare(value, void 0, { sensitivity: "base" })) === 0;
    });
    e.preventDefault();
    if (this.readonly) {
      return;
    }
    this._isOpenedByKeyboard = true;
    this._shouldFilterItems = false;
    this._filteredItems = this._getItems();
    this._toggleTokenizerPopover();
    if (!focusedToken && matchingItem) {
      this._itemToFocus = matchingItem;
      return;
    }
    if (selectedItem && !focusedToken) {
      this._itemToFocus = selectedItem;
    } else if (focusedToken && e.target === focusedToken) {
      this._itemToFocus = items3.find((item2) => item2.text === focusedToken.text);
    } else {
      this._itemToFocus = items3.find((item2) => isInstanceOfMultiComboBoxItem(item2));
    }
  }
  _handlePageUp(e) {
    e.preventDefault();
  }
  _handlePageDown(e) {
    e.preventDefault();
  }
  _handleBackspace(e) {
    if (e.target.value === "") {
      e.preventDefault();
      this._tokenizer._focusLastToken();
    }
  }
  _handleEscape() {
    const innerInput = this._innerInput;
    const isAutoCompleted = (innerInput.selectionEnd || 0) - (innerInput.selectionStart || 0) > 0;
    if (isAutoCompleted) {
      this.value = this.valueBeforeAutoComplete;
    }
    if (!this.noValidation || !this._open && this.noValidation) {
      this.value = this._lastValue;
    }
  }
  _handleHome(e) {
    const shouldFocusToken = this._isFocusInside && e.target.selectionStart === 0 && this._tokenizer.tokens.length > 0;
    if (shouldFocusToken) {
      e.preventDefault();
      this._tokenizer.tokens[0].focus();
    }
  }
  _handleEnd(e) {
    const tokens = this._tokenizer.tokens;
    const lastTokenIdx = tokens.length - 1;
    const shouldFocusInput = e.target === tokens[lastTokenIdx] && tokens[lastTokenIdx] === this.shadowRoot.activeElement;
    if (shouldFocusInput) {
      e.preventDefault();
      this._inputDom.focus();
    }
  }
  _handleTab() {
    this._open = false;
  }
  _handleSelectAll() {
    const filteredItems = this._getItems().filter((item2) => item2._isVisible && !item2.isGroupItem);
    const allItemsSelected = filteredItems.every((item2) => item2.selected);
    this._previouslySelectedItems = filteredItems.filter((item2) => item2.selected).map((item2) => item2);
    filteredItems.forEach((item2) => {
      item2.selected = !allItemsSelected;
    });
    const changePrevented = this.fireSelectionChange();
    if (changePrevented) {
      this._revertSelection();
    }
  }
  _onListHeaderKeydown(e) {
    var _a;
    const isArrowDown = isDown(e);
    const isArrowUp = isUp(e);
    const isSelectAllFocused = e.target.classList.contains("ui5-mcb-select-all-checkbox");
    if (isTabNext(e) || isTabPrevious(e)) {
      this._onItemTab();
      return;
    }
    e.preventDefault();
    if (isArrowDown || isDownCtrl(e)) {
      if (this.showSelectAll && !isSelectAllFocused) {
        return this._getResponsivePopover().querySelector(".ui5-mcb-select-all-checkbox").focus();
      }
      this._handleArrowDown();
    }
    if (isArrowUp || isUpCtrl(e)) {
      if (e.target === this.valueStateHeader || !this.valueStateHeader) {
        this._shouldAutocomplete = true;
        return this._inputDom.focus();
      }
      if (this.showSelectAll && isSelectAllFocused) {
        (_a = this.valueStateHeader) == null ? void 0 : _a.focus();
      }
    }
  }
  _handleSelectAllCheckboxClick(e) {
    var _a;
    if (!this.filterSelected) {
      this._handleSelectAll();
      this.filterSelected = false;
    } else {
      this._previouslySelectedItems = this._getSelectedItems();
      (_a = this.selectedItems) == null ? void 0 : _a.filter((item2) => !item2.isGroupItem).forEach((item2) => {
        item2.selected = e.target.checked;
      });
      if (!e.target.checked) {
        this.filterSelected = false;
      }
      const changePrevented = this.fireSelectionChange();
      if (changePrevented) {
        this._revertSelection();
      }
    }
  }
  _onItemKeydown(e) {
    var _a, _b, _c, _d, _e, _f, _g, _h, _i, _j, _k, _l, _m, _n, _o, _p;
    const isFirstItemGroup = ((_a = this.list) == null ? void 0 : _a.getSlottedNodes("items")[1]) === e.target && ((_b = this.list) == null ? void 0 : _b.getSlottedNodes("items")[0].hasAttribute("ui5-li-group"));
    const isFirstItem = ((_c = this.list) == null ? void 0 : _c.getSlottedNodes("items")[0]) === e.target || isFirstItemGroup;
    const isArrowUp = isUp(e) || isUpCtrl(e);
    if (this.hasValueStateMessage && !this.valueStateHeader) {
      this._setValueStateHeader();
    }
    if (isTabNext(e) || isTabPrevious(e)) {
      this._onItemTab();
      return;
    }
    if (isHomeCtrl(e)) {
      (_d = this.list) == null ? void 0 : _d._itemNavigation._handleHome();
      (_f = this.list) == null ? void 0 : _f.getSlottedNodes("items")[(_e = this.list) == null ? void 0 : _e._itemNavigation._currentIndex].focus();
    }
    if (isEndCtrl(e)) {
      (_g = this.list) == null ? void 0 : _g._itemNavigation._handleEnd();
      (_i = this.list) == null ? void 0 : _i.getSlottedNodes("items")[(_h = this.list) == null ? void 0 : _h._itemNavigation._currentIndex].focus();
    }
    e.preventDefault();
    if (isDownShift(e) || isUpShift(e)) {
      this._handleItemRangeSelection(e);
      return;
    }
    if (isUpCtrl(e) && !isFirstItem) {
      (_j = this.list) == null ? void 0 : _j._itemNavigation._handleUp();
      (_l = this.list) == null ? void 0 : _l.getSlottedNodes("items")[(_k = this.list) == null ? void 0 : _k._itemNavigation._currentIndex].focus();
    }
    if (isDownCtrl(e)) {
      (_m = this.list) == null ? void 0 : _m._itemNavigation._handleDown();
      (_o = this.list) == null ? void 0 : _o.getSlottedNodes("items")[(_n = this.list) == null ? void 0 : _n._itemNavigation._currentIndex].focus();
    }
    if (isShow(e)) {
      this._toggleTokenizerPopover();
    }
    if (isCtrlA(e)) {
      this._handleSelectAll();
      return;
    }
    if (isFirstItem && isArrowUp) {
      if (this.showSelectAll) {
        if (isFirstItemGroup) {
          (_p = this.list) == null ? void 0 : _p.getSlottedNodes("items")[0].focus();
          return;
        }
        this._getResponsivePopover().querySelector(".ui5-mcb-select-all-checkbox").focus();
      } else if (this.valueStateHeader) {
        this.valueStateHeader.focus();
      } else {
        this._inputDom.focus();
        this._shouldAutocomplete = true;
      }
    }
  }
  _handleArrowCtrl(e) {
    const input = this._inputDom;
    const isArrowLeft = isLeftCtrl(e);
    if (isArrowLeft && input.selectionStart === 0 && input.selectionEnd === 0) {
      e.preventDefault();
    }
    if (isArrowLeft && (input.selectionEnd || 0) - (input.selectionStart || 0) > 0) {
      input.setSelectionRange(0, 0);
    }
  }
  _onItemTab() {
    this._getResponsivePopover().preventFocusRestore = true;
    this._inputDom.focus();
    this._open = false;
    this._tokenizer.expanded = false;
  }
  _handleArrowNavigation(e, isDownControl) {
    const isArrowDown = isDownControl || isDown(e);
    const hasSuggestions = this._getItems().length;
    e.preventDefault();
    if (this.hasValueStateMessage && !this.valueStateHeader) {
      this._setValueStateHeader();
    }
    if (isArrowDown && this.open) {
      if (this.valueStateHeader) {
        this.value = this.valueBeforeAutoComplete || this.value;
        this.valueStateHeader.focus();
        return;
      }
      if (this.showSelectAll) {
        this._getResponsivePopover().querySelector(".ui5-mcb-select-all-checkbox").focus();
        return;
      }
    }
    if (isArrowDown && hasSuggestions) {
      this._handleArrowDown();
    }
    if (!isArrowDown && !this._open && !this.readonly) {
      this._navigateToPrevItem();
    }
  }
  async _handleArrowDown() {
    var _a, _b;
    const firstListItem = (_a = this.list) == null ? void 0 : _a.getSlottedNodes("items")[0];
    const focusRef = (firstListItem == null ? void 0 : firstListItem.hasAttribute("ui5-mcb-item-group")) ? firstListItem.getFocusDomRef() : firstListItem;
    if (this.open) {
      firstListItem && focusRef && ((_b = this.list) == null ? void 0 : _b._itemNavigation.setCurrentItem(focusRef));
      this.value = this.valueBeforeAutoComplete || this.value;
      await renderFinished();
      firstListItem == null ? void 0 : firstListItem.focus();
    } else if (!this.readonly) {
      this._navigateToNextItem();
    }
  }
  _handleItemRangeSelection(e) {
    var _a;
    const items3 = this._getItems();
    const listItems = (_a = this.list) == null ? void 0 : _a.getSlottedNodes("items");
    const currentItemIdx = Number(listItems == null ? void 0 : listItems.indexOf(e.target));
    const nextItemIdx = currentItemIdx + 1;
    const prevItemIdx = currentItemIdx - 1;
    this._previouslySelectedItems = this._getSelectedItems();
    if (isDownShift(e) && items3[nextItemIdx]) {
      items3[nextItemIdx].selected = items3[currentItemIdx].selected;
      items3[nextItemIdx].focus();
    }
    if (isUpShift(e) && items3[prevItemIdx]) {
      items3[prevItemIdx].selected = items3[currentItemIdx].selected;
      items3[prevItemIdx].focus();
    }
    const changePrevented = this.fireSelectionChange();
    if (changePrevented) {
      this._revertSelection();
    }
  }
  _navigateToNextItem() {
    const items3 = this._getItems();
    const itemsCount = items3.length;
    const previousItemIdx = this.currentItemIdx;
    if (previousItemIdx > -1 && items3[previousItemIdx].text !== this.value) {
      this.currentItemIdx = -1;
    }
    if (previousItemIdx >= itemsCount - 1) {
      return;
    }
    let currentItem = this._getItems()[++this.currentItemIdx];
    while (this.currentItemIdx < itemsCount - 1 && currentItem.selected || currentItem.isGroupItem) {
      currentItem = this._getItems()[++this.currentItemIdx];
    }
    if (currentItem.selected === true || currentItem.isGroupItem) {
      this.currentItemIdx = previousItemIdx;
      return;
    }
    this.value = currentItem.text;
    this._innerInput.value = currentItem.text;
    this._innerInput.setSelectionRange(0, currentItem.text.length);
  }
  _navigateToPrevItem() {
    const items3 = this._getItems();
    let previousItemIdx = this.currentItemIdx;
    if (!this.value && previousItemIdx !== -1 || previousItemIdx !== -1 && this.value && this.value !== items3[previousItemIdx].text) {
      previousItemIdx = -1;
    }
    if (previousItemIdx === -1) {
      this.currentItemIdx = items3.length;
    }
    if (previousItemIdx === 0) {
      this.currentItemIdx = 0;
      return;
    }
    let currentItem = this._getItems()[--this.currentItemIdx];
    while (currentItem && this.currentItemIdx > 0 && (currentItem.selected || currentItem.isGroupItem)) {
      currentItem = this._getItems()[--this.currentItemIdx];
    }
    if (!currentItem) {
      return;
    }
    if (currentItem.selected || currentItem.isGroupItem) {
      this.currentItemIdx = previousItemIdx;
      return;
    }
    this.value = currentItem.text;
    this._innerInput.value = currentItem.text;
    this._innerInput.setSelectionRange(0, currentItem.text.length);
  }
  _handleEnter() {
    var _a;
    const lowerCaseValue = this.value.toLowerCase();
    const matchingItem = this._getItems().find((item2) => !item2.isGroupItem && item2.text.toLowerCase() === lowerCaseValue);
    const oldValueState = this.valueState;
    const innerInput = this._innerInput;
    if (matchingItem) {
      if (matchingItem.selected) {
        if (this._validationTimeout) {
          return;
        }
        this.valueState = ValueState_default.Negative;
        this._performingSelectionTwice = true;
        this._resetValueState(oldValueState, () => {
          this._performingSelectionTwice = false;
        });
      } else {
        this._previouslySelectedItems = this._getSelectedItems();
        matchingItem.selected = true;
        this.value = "";
        const changePrevented = this.fireSelectionChange();
        if (changePrevented) {
          this._revertSelection();
        }
      }
      innerInput.setSelectionRange(matchingItem.text.length, matchingItem.text.length);
      this._open = false;
    } else if ((_a = this._internals) == null ? void 0 : _a.form) {
      submitForm(this);
    }
  }
  _resetValueState(valueState, callback) {
    this._validationTimeout = setTimeout(() => {
      this._effectiveValueState = this.valueState;
      this._dialogInputValueState = valueState;
      this.valueState = valueState;
      this._validationTimeout = null;
      this._innerInput.focus();
      callback && callback();
    }, 2e3);
  }
  _onTokenizerKeydown(e) {
    if (isRight(e)) {
      const lastTokenIndex = this._tokenizer.tokens.length - this._tokenizer.overflownTokens.length - 1;
      if (e.target === this._tokenizer.tokens[lastTokenIndex]) {
        setTimeout(() => {
          this._inputDom.focus();
        }, 0);
      }
    }
    if (isInsertShift(e)) {
      this._handleInsertPaste(e);
    }
    if (isHome(e)) {
      this._handleHome(e);
    }
    if (isEnd(e)) {
      this._handleEnd(e);
    }
    if (isShow(e) && !this.readonly && !this.disabled) {
      this._preventTokenizerToggle = true;
      this._handleShow(e);
    }
  }
  _filterItems(str) {
    const itemsToFilter = this._getItems().filter((item2) => !item2.isGroupItem);
    const filteredItems = (Filters_exports[this.filter] || StartsWithPerTerm)(str, itemsToFilter, "text");
    this._getItems().forEach((item2) => {
      if (isInstanceOfMultiComboBoxItem(item2)) {
        item2._isVisible = filteredItems.includes(item2);
      }
    });
    return this.items.filter((item2) => {
      if (item2.isGroupItem) {
        return item2.items.some((listItem) => listItem._isVisible) ? item2 : false;
      }
      return item2._isVisible;
    });
  }
  /**
   * Returns true if the group header should be shown (if there is a filtered suggestion item for this group item)
   * @private
   */
  static _groupItemFilter(item2, idx, allItems, filteredItems) {
    if (item2.isGroupItem) {
      let groupHasFilteredItems;
      while (allItems[idx] && !allItems[idx].isGroupItem && !groupHasFilteredItems) {
        groupHasFilteredItems = filteredItems.indexOf(allItems[idx]) !== -1;
        idx++;
      }
      return groupHasFilteredItems;
    }
  }
  _afterOpen() {
    var _a;
    const action = this._open ? "open" : "close";
    if (!isPhone() && !this._isOpenedByKeyboard) {
      this._innerInput.focus();
    } else if (this._isOpenedByKeyboard) {
      (_a = this._itemToFocus) == null ? void 0 : _a.focus();
    } else {
      this._getResponsivePopover().focus();
    }
    this.fireDecoratorEvent(action);
    this._previouslySelectedItems = this._getSelectedItems();
    this._isOpenedByKeyboard = false;
  }
  /**
   * Retrieves a flat structure of all MultiComboBox items from the slotted nodes.
   *
   * @private
   */
  _getItems() {
    const items3 = [];
    const slottedItems = this.getSlottedNodes("items");
    slottedItems.forEach((item2) => {
      if (isInstanceOfMultiComboBoxItemGroup(item2)) {
        const groupItems = [item2, ...item2.items].filter(Boolean);
        items3.push(...groupItems);
      } else {
        items3.push(item2);
      }
    });
    return items3;
  }
  _getSelectedItems() {
    this.selectedValues = this._getItems().filter((item2) => item2.selected);
    return this.selectedValues;
  }
  _listSelectionChange(e) {
    let changePrevented;
    if (this.readonly) {
      e.preventDefault();
      return;
    }
    if (!isPhone()) {
      this._previouslySelectedItems = e.detail.previouslySelectedItems;
    }
    if (!isPhone()) {
      changePrevented = this.fireSelectionChange();
      if (changePrevented) {
        e.preventDefault();
        this._revertSelection();
      }
    }
    const castedEvent = { key: e.detail.key };
    if (!e.detail.selectedItems.length && this.filterSelected) {
      this.filterSelected = false;
    }
    if (!e.detail.selectionComponentPressed && !isSpace(castedEvent) && !isSpaceCtrl(castedEvent)) {
      this._open = false;
      this.value = "";
      if (isPhone()) {
        changePrevented = this.fireSelectionChange();
        if (changePrevented) {
          e.preventDefault();
          this._revertSelection();
        }
      }
      this.fireDecoratorEvent("input");
      return;
    }
    this.value = this.valueBeforeAutoComplete || "";
  }
  fireSelectionChange() {
    const changePrevented = !this.fireDecoratorEvent("selection-change", {
      items: this._getSelectedItems()
    });
    return changePrevented;
  }
  _getList() {
    this.list = this.shadowRoot.querySelector(".ui5-multi-combobox-all-items-list");
    return this.list;
  }
  _click() {
    if (isPhone() && !this.readonly && !this._showMorePressed && !this._deleting) {
      this._open = true;
    }
    this._showMorePressed = false;
  }
  handleBeforeTokenizerPopoverOpen() {
    const tokens = this._tokenizer.tokens;
    const hasTruncatedToken = tokens.length === 1 && tokens[0].isTruncatable;
    const popover = this._getResponsivePopover();
    if (hasTruncatedToken && popover) {
      popover.preventFocusRestore = true;
      popover.open = false;
    }
  }
  _beforeClose() {
    this._open = false;
  }
  _afterClose() {
    const action = this._open ? "open" : "close";
    if (isPhone()) {
      this._dialogInputValueState = this.valueState;
      this._tokenizer.expanded = false;
    }
    this.fireDecoratorEvent(action);
    this._iconPressed = false;
    this._preventTokenizerToggle = false;
    this.filterSelected = false;
  }
  _beforeOpen() {
    this._open = true;
    this._itemsBeforeOpen = this._getItems().map((item2) => {
      return {
        ref: item2,
        selected: item2.selected
      };
    });
    this._valueBeforeOpen = this.value;
    this._dialogInputValueState = this.valueState;
    this._innerInput.value = this.value;
    if (this.filterSelected) {
      const selectedItems = this._filteredItems.filter((item2) => item2.selected);
      this.selectedItems = this._getItems().filter((item2, idx, allItems) => MultiComboBox_1._groupItemFilter(item2, ++idx, allItems, selectedItems) || selectedItems.indexOf(item2) !== -1);
    }
  }
  _handleTypeAhead(item2, filterValue) {
    if (!item2) {
      return;
    }
    const value = item2.text;
    const innerInput = this._innerInput;
    filterValue = filterValue || "";
    this.value = value;
    innerInput.value = value;
    innerInput.setSelectionRange(filterValue.length, value.length);
    this._shouldAutocomplete = false;
  }
  _getFirstMatchingItem(current) {
    if (!this._getItems().length) {
      return;
    }
    const matchingItems = this._startsWithMatchingItems(current).filter((item2) => !item2.selected);
    if (matchingItems.length) {
      return matchingItems[0];
    }
  }
  _startsWithMatchingItems(str) {
    return StartsWith(str, this._getItems().filter((item2) => !item2.isGroupItem), "text");
  }
  _revertSelection() {
    this._filteredItems.forEach((item2) => {
      item2.selected = this._previouslySelectedItems.includes(item2);
    });
  }
  onBeforeRendering() {
    const input = this._innerInput;
    const autoCompletedChars = input && (input.selectionEnd || 0) - (input.selectionStart || 0);
    const value = input && input.value;
    if (this.open) {
      const list = this._getList();
      const selectedListItemsCount = this.items.filter((item2) => item2.selected).length;
      this._allSelected = selectedListItemsCount > 0 && (selectedListItemsCount === this.items.length || (list == null ? void 0 : list.getSlottedNodes("items").length) === selectedListItemsCount);
    }
    this._effectiveShowClearIcon = this.showClearIcon && !!this.value && !this.readonly && !this.disabled;
    this._inputLastValue = value;
    if (input && !input.value) {
      this.valueBeforeAutoComplete = "";
      this._filteredItems = this._getItems();
    }
    this.tokenizerAvailable = this._getSelectedItems().length > 0;
    this.style.setProperty(getScopedVarName("--_ui5-input-icons-count"), `${this.iconsCount}`);
    if (!input || !value) {
      this._getItems().forEach((item2) => {
        if (isInstanceOfMultiComboBoxItem(item2)) {
          item2._isVisible = true;
          item2._readonly = this.readonly;
        }
      });
      return;
    }
    if (this._shouldAutocomplete && !isAndroid()) {
      const item2 = this._getFirstMatchingItem(value);
      this.valueBeforeAutoComplete = value;
      item2 && this._handleTypeAhead(item2, value);
    }
    if (this._shouldFilterItems) {
      this._filteredItems = this._filterItems(this._shouldAutocomplete || !!autoCompletedChars ? this.valueBeforeAutoComplete : value);
    } else {
      this._filteredItems = this._getItems();
    }
  }
  onAfterRendering() {
    this._getList();
    this.valueStateOpen = this.shouldDisplayOnlyValueStateMessage;
    this.storeResponsivePopoverWidth();
    this._deleting = false;
    this._tokenizer._handleResize();
    this._tokenizer.preventInitialFocus = true;
    if (this.open && !isPhone()) {
      this._tokenizer.expanded = true;
    }
    if (this._tokenizer.expanded && this.hasAttribute("focused")) {
      this._tokenizer.scrollToEnd();
    }
  }
  get _isPhone() {
    return isPhone();
  }
  _onIconMousedown() {
    this._iconPressed = true;
  }
  _clear() {
    this.value = "";
    this._inputDom.value = "";
    this.fireDecoratorEvent("input");
    if (!this._isPhone) {
      this.focus();
    }
  }
  _iconMouseDown() {
    this._clearingValue = true;
  }
  storeResponsivePopoverWidth() {
    if (this._open && !this._listWidth) {
      this._listWidth = this.list.offsetWidth;
    }
  }
  handleCancel() {
    this._itemsBeforeOpen.forEach((item2) => {
      if (isInstanceOfMultiComboBoxItem(item2.ref)) {
        item2.ref.selected = item2.selected;
      }
    });
    this._toggleTokenizerPopover();
    this.value = this._valueBeforeOpen;
  }
  handleOK() {
    if (isPhone()) {
      const changePrevented = this.fireSelectionChange();
      if (changePrevented) {
        this._revertSelection();
      }
    }
    if (!this.noValidation) {
      this.value = "";
    }
    this._toggleTokenizerPopover();
  }
  _forwardFocusToInner() {
    this._innerInput.focus();
  }
  get morePopoverOpener() {
    var _a;
    const tokens = (_a = this._tokenizer) == null ? void 0 : _a.tokens;
    if ((tokens == null ? void 0 : tokens.length) === 1 && tokens[0].isTruncatable) {
      return tokens[0];
    }
    return this;
  }
  _getPopover() {
    return this.shadowRoot.querySelector("[ui5-popover]");
  }
  _getResponsivePopover() {
    return this.shadowRoot.querySelector("[ui5-responsive-popover]");
  }
  _setValueStateHeader() {
    const responsivePopover = this._getResponsivePopover();
    this.valueStateHeader = responsivePopover.querySelector("div.ui5-responsive-popover-header.ui5-valuestatemessage-root");
  }
  get _tokenizer() {
    return this.shadowRoot.querySelector("[ui5-tokenizer]");
  }
  inputFocusIn(e) {
    if (!isPhone()) {
      this.focused = true;
      this._tokenizer.expanded = true;
      this._tokenizer.scrollToEnd();
    } else {
      this._innerInput.blur();
    }
    this._clearingValue = false;
    if (!isPhone() && e.target === this._innerInput) {
      this._innerInput.setSelectionRange(0, this.value.length);
    }
    this._tokenizer.tokens.forEach((token) => {
      token.selected = false;
    });
    this.valueBeforeAutoComplete = "";
  }
  inputFocusOut(e) {
    const responsivePopover = this._getResponsivePopover();
    const popover = this._getPopover();
    const focusIsGoingInPopover = [responsivePopover, popover].some((popup) => popup == null ? void 0 : popup.contains(e.relatedTarget));
    const focusIsGoingInValueStatePopup = this == null ? void 0 : this.contains(e.relatedTarget);
    if (focusIsGoingInValueStatePopup) {
      this.focused = false;
      e.stopImmediatePropagation();
      return;
    }
    if ((!this.shadowRoot.contains(e.relatedTarget) || focusIsGoingInPopover) && !this._deleting && !this._clearingValue) {
      this.focused = false;
      if (this._lastValue !== this.value) {
        this._inputChange();
      }
      this._tokenizer.expanded = this.open;
      if (!isPhone() && !this.noValidation && !focusIsGoingInPopover) {
        this.value = "";
      }
    }
  }
  get editable() {
    return !this.readonly;
  }
  get _isFocusInside() {
    return !isPhone() && (this.focused || this._tokenizerFocused);
  }
  get selectedItemsListMode() {
    return this.readonly ? "None" : "Multiple";
  }
  get _listItemsType() {
    return this.readonly ? "Inactive" : "Active";
  }
  get hasValueState() {
    const isValueStateSet = this.valueState !== ValueState_default.None;
    if (isPhone()) {
      return isValueStateSet || this._dialogInputValueState !== ValueState_default.None;
    }
    return isValueStateSet;
  }
  get hasValueStateMessage() {
    const valueState = isPhone() ? this._dialogInputValueState : this.valueState;
    return this.hasValueState && valueState !== ValueState_default.Positive;
  }
  get ariaValueStateHiddenText() {
    if (!this.hasValueState) {
      return;
    }
    let text = "";
    if (this.valueState !== ValueState_default.None) {
      text = this.valueStateTypeMappings[this.valueState];
    }
    if (this.shouldDisplayDefaultValueStateMessage) {
      return `${text} ${this.valueStateDefaultText || ""}`;
    }
    return `${text}`.concat(" ", this.valueStateMessage.map((el) => el.textContent).join(" "));
  }
  get valueStateDefaultText() {
    const valueState = isPhone() ? this._dialogInputValueState : this.valueState;
    if (valueState === ValueState_default.None) {
      return "";
    }
    if (this._performingSelectionTwice) {
      return MultiComboBox_1.i18nBundle.getText(VALUE_STATE_ERROR_ALREADY_SELECTED);
    }
    return this.valueStateTextMappings[valueState];
  }
  get valueStateTextId() {
    return this.hasValueState ? `ui5-multi-combobox-valueStateDesc` : void 0;
  }
  get ariaLabelText() {
    return getEffectiveAriaLabelText(this);
  }
  /**
   * This method is relevant for sap_horizon theme only
   */
  get _valueStateMessageIcon() {
    const valueState = isPhone() && this.open ? this._dialogInputValueState : this.valueState;
    if (valueState === ValueState_default.None) {
      return "";
    }
    return {
      [ValueState_default.Negative]: "error",
      [ValueState_default.Critical]: "alert",
      [ValueState_default.Positive]: "sys-enter-2",
      [ValueState_default.Information]: "information"
    }[valueState];
  }
  get _tokensCountText() {
    if (!this._tokenizer) {
      return;
    }
    return getTokensCountText(this.selectedValues.length);
  }
  get _tokensCountTextId() {
    return "ui5-multi-combobox-hiddenText-nMore";
  }
  get _selectedTokensCount() {
    return this._tokenizer.tokens.filter((token) => token.selected).length;
  }
  get ariaDescribedByText() {
    return this.valueStateTextId ? `${this._tokensCountTextId} ${this.valueStateTextId}` : `${this._tokensCountTextId}`;
  }
  get shouldDisplayDefaultValueStateMessage() {
    return !this.valueStateMessage.length && this.hasValueStateMessage;
  }
  get shouldDisplayOnlyValueStateMessage() {
    return this.focused && !this.readonly && this.hasValueStateMessage && !this._iconPressed && !this.open;
  }
  get valueStateTypeMappings() {
    return {
      [ValueState_default.Positive]: MultiComboBox_1.i18nBundle.getText(VALUE_STATE_TYPE_SUCCESS),
      [ValueState_default.Information]: MultiComboBox_1.i18nBundle.getText(VALUE_STATE_TYPE_INFORMATION),
      [ValueState_default.Negative]: MultiComboBox_1.i18nBundle.getText(VALUE_STATE_TYPE_ERROR),
      [ValueState_default.Critical]: MultiComboBox_1.i18nBundle.getText(VALUE_STATE_TYPE_WARNING)
    };
  }
  get valueStateTextMappings() {
    return {
      [ValueState_default.Positive]: MultiComboBox_1.i18nBundle.getText(VALUE_STATE_SUCCESS),
      [ValueState_default.Negative]: MultiComboBox_1.i18nBundle.getText(VALUE_STATE_ERROR),
      [ValueState_default.Critical]: MultiComboBox_1.i18nBundle.getText(VALUE_STATE_WARNING),
      [ValueState_default.Information]: MultiComboBox_1.i18nBundle.getText(VALUE_STATE_INFORMATION)
    };
  }
  get _innerInput() {
    var _a;
    if (isPhone()) {
      if ((_a = this._getResponsivePopover()) == null ? void 0 : _a.open) {
        return this._getResponsivePopover().querySelector("[ui5-input]").shadowRoot.querySelector("input");
      }
    }
    return this._inputDom;
  }
  get _headerTitleText() {
    return MultiComboBox_1.i18nBundle.getText(INPUT_SUGGESTIONS_TITLE);
  }
  get _iconAccessibleNameText() {
    return MultiComboBox_1.i18nBundle.getText(SELECT_OPTIONS);
  }
  get _showSelectedButtonAccessibleNameText() {
    return MultiComboBox_1.i18nBundle.getText(SHOW_SELECTED_BUTTON);
  }
  get _dialogOkButton() {
    return MultiComboBox_1.i18nBundle.getText(MULTICOMBOBOX_DIALOG_OK_BUTTON);
  }
  get _tokenizerExpanded() {
    var _a;
    if (isPhone()) {
      return false;
    }
    if (this._preventTokenizerToggle) {
      return this._tokenizer.expanded;
    }
    const isCurrentlyExpanded = (_a = this._tokenizer) == null ? void 0 : _a.expanded;
    const shouldBeExpanded = this.focused || this._open || isCurrentlyExpanded;
    return shouldBeExpanded;
  }
  get _valueStatePopoverHorizontalAlign() {
    return this.effectiveDir !== "rtl" ? "Start" : "End";
  }
  get iconsCount() {
    var _a;
    const slottedIconsCount = ((_a = this.icon) == null ? void 0 : _a.length) || 0;
    const clearIconCount = Number(this._effectiveShowClearIcon) ?? 0;
    const arrowDownIconsCount = this.readonly ? 0 : 1;
    return slottedIconsCount + clearIconCount + arrowDownIconsCount;
  }
  get clearIconAccessibleName() {
    return MultiComboBox_1.i18nBundle.getText(INPUT_CLEAR_ICON_ACC_NAME);
  }
  get selectAllCheckboxLabel() {
    const items3 = this._getItems().filter((item2) => !item2.isGroupItem);
    const selected = items3.filter((item2) => item2.selected);
    return MultiComboBox_1.i18nBundle.getText(MCB_SELECTED_ITEMS, selected.length, items3.length);
  }
  get _popupLabel() {
    return MultiComboBox_1.i18nBundle.getText(COMBOBOX_AVAILABLE_OPTIONS);
  }
  get responsivePopoverId() {
    return `${this._id}-popover`;
  }
  get classes() {
    const popover = {
      "ui5-multi-combobox-all-items-responsive-popover": true,
      "ui5-suggestions-popover": true,
      "ui5-popover-with-value-state-header-phone": this._isPhone && this.hasValueStateMessage,
      "ui5-popover-with-value-state-header": !this._isPhone && this.hasValueStateMessage
    };
    const popoverValueState = {
      "ui5-valuestatemessage-root": true,
      "ui5-valuestatemessage-header": true,
      "ui5-valuestatemessage--success": this.valueState === ValueState_default.Positive || isPhone() && this._dialogInputValueState === ValueState_default.Positive,
      "ui5-valuestatemessage--error": this.valueState === ValueState_default.Negative || isPhone() && this._dialogInputValueState === ValueState_default.Negative,
      "ui5-valuestatemessage--warning": this.valueState === ValueState_default.Critical || isPhone() && this._dialogInputValueState === ValueState_default.Critical,
      "ui5-valuestatemessage--information": this.valueState === ValueState_default.Information || isPhone() && this._dialogInputValueState === ValueState_default.Information
    };
    return {
      popover,
      popoverValueState,
      responsivePopoverHeaderValueState: {
        "ui5-responsive-popover-header": true,
        ...popoverValueState
      }
    };
  }
  get styles() {
    const remSizeIxPx = parseInt(getComputedStyle(document.documentElement).fontSize);
    return {
      popoverValueStateMessage: {
        "width": `${this._listWidth || 0}px`,
        "display": this._listWidth === 0 ? "none" : "inline-block"
      },
      popoverHeader: {
        "max-width": isPhone() ? "100%" : `${this._inputWidth}px`
      },
      suggestionsPopover: {
        "min-width": `${this._inputWidth}px`,
        "max-width": this._inputWidth / remSizeIxPx > 40 ? `${this._inputWidth}px` : "40rem"
      }
    };
  }
};
__decorate63([
  property_default()
], MultiComboBox.prototype, "value", void 0);
__decorate63([
  property_default()
], MultiComboBox.prototype, "name", void 0);
__decorate63([
  property_default({ type: Boolean })
], MultiComboBox.prototype, "noTypeahead", void 0);
__decorate63([
  property_default()
], MultiComboBox.prototype, "placeholder", void 0);
__decorate63([
  property_default({ type: Boolean })
], MultiComboBox.prototype, "noValidation", void 0);
__decorate63([
  property_default({ type: Boolean })
], MultiComboBox.prototype, "disabled", void 0);
__decorate63([
  property_default()
], MultiComboBox.prototype, "valueState", void 0);
__decorate63([
  property_default({ type: Boolean })
], MultiComboBox.prototype, "readonly", void 0);
__decorate63([
  property_default({ type: Boolean })
], MultiComboBox.prototype, "required", void 0);
__decorate63([
  property_default()
], MultiComboBox.prototype, "filter", void 0);
__decorate63([
  property_default({ type: Boolean })
], MultiComboBox.prototype, "showClearIcon", void 0);
__decorate63([
  property_default()
], MultiComboBox.prototype, "accessibleName", void 0);
__decorate63([
  property_default()
], MultiComboBox.prototype, "accessibleNameRef", void 0);
__decorate63([
  property_default({ type: Boolean })
], MultiComboBox.prototype, "showSelectAll", void 0);
__decorate63([
  property_default()
], MultiComboBox.prototype, "_effectiveValueState", void 0);
__decorate63([
  property_default({ type: Boolean, noAttribute: true })
], MultiComboBox.prototype, "valueStateOpen", void 0);
__decorate63([
  property_default({ type: Boolean, noAttribute: true })
], MultiComboBox.prototype, "tokenizerOpen", void 0);
__decorate63([
  property_default({ type: Boolean, noAttribute: true })
], MultiComboBox.prototype, "_open", void 0);
__decorate63([
  property_default()
], MultiComboBox.prototype, "_valueBeforeOpen", void 0);
__decorate63([
  property_default({ type: Array })
], MultiComboBox.prototype, "_filteredItems", void 0);
__decorate63([
  property_default({ type: Array })
], MultiComboBox.prototype, "_previouslySelectedItems", void 0);
__decorate63([
  property_default({ type: Boolean })
], MultiComboBox.prototype, "filterSelected", void 0);
__decorate63([
  property_default({ type: Boolean })
], MultiComboBox.prototype, "focused", void 0);
__decorate63([
  property_default({ type: Boolean, noAttribute: true })
], MultiComboBox.prototype, "_tokenizerFocused", void 0);
__decorate63([
  property_default({ type: Boolean, noAttribute: true })
], MultiComboBox.prototype, "_iconPressed", void 0);
__decorate63([
  property_default({ type: Number, noAttribute: true })
], MultiComboBox.prototype, "_inputWidth", void 0);
__decorate63([
  property_default({ type: Number, noAttribute: true })
], MultiComboBox.prototype, "_listWidth", void 0);
__decorate63([
  property_default({ type: Boolean, noAttribute: true })
], MultiComboBox.prototype, "_performingSelectionTwice", void 0);
__decorate63([
  property_default({ type: Boolean, noAttribute: true })
], MultiComboBox.prototype, "_allSelected", void 0);
__decorate63([
  property_default({ type: Boolean, noAttribute: true })
], MultiComboBox.prototype, "_effectiveShowClearIcon", void 0);
__decorate63([
  property_default()
], MultiComboBox.prototype, "_dialogInputValueState", void 0);
__decorate63([
  property_default({ type: Boolean })
], MultiComboBox.prototype, "tokenizerAvailable", void 0);
__decorate63([
  slot_default({
    type: HTMLElement,
    "default": true,
    invalidateOnChildChange: true,
    individualSlots: true
  })
], MultiComboBox.prototype, "items", void 0);
__decorate63([
  slot_default()
], MultiComboBox.prototype, "icon", void 0);
__decorate63([
  slot_default()
], MultiComboBox.prototype, "valueStateMessage", void 0);
__decorate63([
  i18n_default("@ui5/webcomponents")
], MultiComboBox, "i18nBundle", void 0);
MultiComboBox = MultiComboBox_1 = __decorate63([
  customElement_default({
    tag: "ui5-multi-combobox",
    languageAware: true,
    formAssociated: true,
    renderer: JsxRenderer_default,
    template: MultiComboBoxTemplate,
    styles: [
      MultiComboBox_css_default,
      ResponsivePopoverCommon_css_default,
      ValueStateMessage_css_default,
      Suggestions_css_default,
      MultiComboBoxPopover_css_default
    ],
    dependencies: [
      MultiComboBoxItem_default,
      MultiComboBoxItemGroup_default,
      Tokenizer_default,
      Token_default,
      Icon_default,
      Input_default,
      ResponsivePopover_default,
      Popover_default,
      List_default,
      ListItemStandard_default,
      ListItemGroup_default,
      ToggleButton_default,
      Button_default,
      CheckBox_default,
      SuggestionItem_default
    ]
  }),
  event_strict_default("change", {
    bubbles: true
  }),
  event_strict_default("input", {
    bubbles: true
  }),
  event_strict_default("open"),
  event_strict_default("close"),
  event_strict_default("selection-change", {
    bubbles: true,
    cancelable: true
  })
], MultiComboBox);
MultiComboBox.define();

// node_modules/@ui5/webcomponents-react/dist/webComponents/MultiComboBox/index.js
var MultiComboBox3 = withWebComponent("ui5-multi-combobox", ["accessibleName", "accessibleNameRef", "filter", "name", "placeholder", "value", "valueState"], ["disabled", "noTypeahead", "noValidation", "readonly", "required", "showClearIcon", "showSelectAll"], ["icon", "valueStateMessage"], ["change", "close", "input", "open", "selection-change"]);
MultiComboBox3.displayName = "MultiComboBox";

// node_modules/@ui5/webcomponents-react/dist/webComponents/MultiComboBoxItem/index.js
var MultiComboBoxItem3 = withWebComponent("ui5-mcb-item", ["additionalText", "text"], ["selected"], [], []);
MultiComboBoxItem3.displayName = "MultiComboBoxItem";

// node_modules/@ui5/webcomponents-react/dist/webComponents/MultiComboBoxItemGroup/index.js
var MultiComboBoxItemGroup3 = withWebComponent("ui5-mcb-item-group", ["headerAccessibleName", "headerText"], [], ["header"], ["move-over", "move"]);
MultiComboBoxItemGroup3.displayName = "MultiComboBoxItemGroup";

// node_modules/@ui5/webcomponents-icons/dist/v4/value-help.js
var name24 = "value-help";
var pathData23 = "M470 41q10 9 10 23v192q0 12-10 22t-22 10H256q-14 0-23-10-9-9-9-22V64q0-14 9-23t23-9h192q13 0 22 9zm-22 23H256v192h192V64zm-96 256h32v128q0 14-9 23t-23 9H64q-12 0-23-9-9-9-9-23V160q0-14 9-23t23-9h128v32H64v288h288V320z";
var ltr23 = false;
var collection24 = "SAP-icons-v4";
var packageName23 = "@ui5/webcomponents-icons";
registerIcon(name24, { pathData: pathData23, ltr: ltr23, collection: collection24, packageName: packageName23 });

// node_modules/@ui5/webcomponents-icons/dist/v5/value-help.js
var name25 = "value-help";
var pathData24 = "M422 32q24 0 41 17t17 41v204q0 24-17 41t-41 17h-12q-11 0-18.5-7.5T384 326t7.5-18 18.5-7h12q7 0 7-7V90q0-7-7-7H218q-7 0-7 7v12q0 11-7 18.5t-18 7.5-18.5-7.5T160 102V90q0-24 17-41t41-17h204zM294 160q24 0 41 17t17 41v204q0 24-17 41t-41 17H90q-24 0-41-17t-17-41V218q0-24 17-41t41-17h204zm7 58q0-7-7-7H90q-7 0-7 7v204q0 7 7 7h204q7 0 7-7V218z";
var ltr24 = false;
var collection25 = "SAP-icons-v5";
var packageName24 = "@ui5/webcomponents-icons";
registerIcon(name25, { pathData: pathData24, ltr: ltr24, collection: collection25, packageName: packageName24 });

// node_modules/@ui5/webcomponents-icons/dist/value-help.js
var value_help_default = "value-help";

// node_modules/@ui5/webcomponents/dist/MultiInputTemplate.js
function MultiInputTemplate() {
  return [
    InputTemplate.call(this, { preContent, postContent })
  ];
}
function preContent() {
  return jsxs(Fragment, { children: [jsx("span", { id: "hiddenText-nMore", class: "ui5-hidden-text", children: this._tokensCountText }), jsx(Tokenizer_default, { class: "ui5-multi-input-tokenizer", opener: this.morePopoverOpener, popoverMinWidth: this._inputWidth, hidePopoverArrow: true, expanded: this.tokenizerExpanded, onKeyDown: this._onTokenizerKeydown, onTokenDelete: this.tokenDelete, onFocusOut: this._tokenizerFocusOut, children: this.tokens.map((token) => jsx("slot", { name: token._individualSlot })) })] });
}
function postContent() {
  return jsx(Fragment, { children: this.showValueHelpIcon && jsx(Icon_default, { class: "inputIcon", name: value_help_default, accessibleName: this.valueHelpLabel, onMouseUp: this.valueHelpMouseUp, onMouseDown: this.valueHelpMouseDown, onClick: this.valueHelpPress }) });
}

// node_modules/@ui5/webcomponents/dist/generated/themes/MultiInput.css.js
registerThemePropertiesLoader("@ui5/webcomponents-theming", "sap_horizon", async () => parameters_bundle_css_default);
registerThemePropertiesLoader("@ui5/webcomponents", "sap_horizon", async () => parameters_bundle_css_default2);
var MultiInput_css_default = `.inputIcon{color:var(--_ui5-v2-8-0_input_icon_color);cursor:pointer;outline:none;padding:var(--_ui5-v2-8-0_input_icon_padding);border-inline-start:var(--_ui5-v2-8-0_input_icon_border);min-width:1rem;min-height:1rem;border-radius:var(--_ui5-v2-8-0_input_icon_border_radius)}.inputIcon.inputIcon--pressed{background:var(--_ui5-v2-8-0_input_icon_pressed_bg);box-shadow:var(--_ui5-v2-8-0_input_icon_box_shadow);border-inline-start:var(--_ui5-v2-8-0_select_hover_icon_left_border);color:var(--_ui5-v2-8-0_input_icon_pressed_color)}.inputIcon:active{background-color:var(--sapButton_Active_Background);box-shadow:var(--_ui5-v2-8-0_input_icon_box_shadow);border-inline-start:var(--_ui5-v2-8-0_select_hover_icon_left_border);color:var(--_ui5-v2-8-0_input_icon_pressed_color)}.inputIcon:not(.inputIcon--pressed):not(:active):hover{background:var(--_ui5-v2-8-0_input_icon_hover_bg);box-shadow:var(--_ui5-v2-8-0_input_icon_box_shadow)}.inputIcon:hover{border-inline-start:var(--_ui5-v2-8-0_select_hover_icon_left_border);box-shadow:var(--_ui5-v2-8-0_input_icon_box_shadow)}:host{min-width:calc(var(--_ui5-v2-8-0_input_min_width) + (var(--_ui5-v2-8-0-input-icons-count)*var(--_ui5-v2-8-0_input_icon_width)))}:host([tokenizer-available]){min-width:calc(var(--_ui5-v2-8-0_input_min_width) + (var(--_ui5-v2-8-0-input-icons-count)*var(--_ui5-v2-8-0_input_icon_width)) + var(--_ui5-v2-8-0_input_tokenizer_min_width))}.ui5-multi-input-tokenizer{min-width:var(--_ui5-v2-8-0_input_tokenizer_min_width);max-width:calc(100% - 3rem - var(--_ui5-v2-8-0-input-icons-count) * var(--_ui5-v2-8-0_input_icon_min_width));border:none;width:auto;height:100%}:host([readonly]) .ui5-multi-input-tokenizer::part(n-more-text){color:var(--sapLinkColor)}.ui5-multi-input-tokenizer::part(n-more-text){padding-inline-end:var(--_ui5-v2-8-0_input_inner_space_to_n_more_text)}[inner-input][inner-input-with-icon]{padding:var(--_ui5-v2-8-0_input_inner_padding_with_icon)}:host([tokenizer-available]) [inner-input]{padding-inline-start:var(--_ui5-v2-8-0_input_inner_space_to_tokenizer)}:host(:not([tokenizer-available])) .ui5-multi-input-tokenizer{--_ui5-v2-8-0_input_tokenizer_min_width: 0px;width:var(--_ui5-v2-8-0_input_tokenizer_min_width)}
`;

// node_modules/@ui5/webcomponents/dist/MultiInput.js
var __decorate64 = function(decorators, target, key, desc) {
  var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
  if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
  else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
  return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var MultiInput_1;
var MultiInput = MultiInput_1 = class MultiInput2 extends Input_default {
  get formValidity() {
    const tokens = this.tokens || [];
    return { valueMissing: this.required && !this.value && !tokens.length };
  }
  get formFormattedValue() {
    const tokens = this.tokens || [];
    if (tokens.length && this.name) {
      const formData = new FormData();
      formData.append(this.name, this.value);
      for (let i = 0; i < tokens.length; i++) {
        formData.append(this.name, tokens[i].text || "");
      }
      return formData;
    }
    return this.value;
  }
  constructor() {
    super();
    this.showValueHelpIcon = false;
    this.tokenizerAvailable = false;
    this._skipOpenSuggestions = false;
    this._valueHelpIconPressed = false;
  }
  valueHelpPress() {
    this.closeValueStatePopover();
    this.fireDecoratorEvent("value-help-trigger");
  }
  tokenDelete(e) {
    const deletedTokens = e.detail.tokens;
    const selectedTokens = this.tokens.filter((token) => token.selected);
    const shouldFocusInput = this.tokens.length - 1 === 0 || this.tokens.length === selectedTokens.length;
    if (this._readonly) {
      return;
    }
    if (deletedTokens) {
      this.fireDecoratorEvent("token-delete", { tokens: deletedTokens });
      if (shouldFocusInput) {
        this.focus();
      }
    }
  }
  valueHelpMouseDown(e) {
    const target = e.target;
    this.closeValueStatePopover();
    this.tokenizer.open = false;
    this._valueHelpIconPressed = true;
    target.focus();
  }
  _tokenizerFocusOut(e) {
    if (!this.contains(e.relatedTarget) && !this.shadowRoot.contains(e.relatedTarget)) {
      this.tokenizer._tokens.forEach((token) => {
        token.selected = false;
      });
      this.tokenizer.scrollToStart();
    }
  }
  valueHelpMouseUp() {
    setTimeout(() => {
      this._valueHelpIconPressed = false;
    }, 0);
  }
  innerFocusIn() {
    this.tokenizer.expanded = true;
    this.focused = true;
    this.tokenizer.scrollToEnd();
    this.tokens.forEach((token) => {
      token.selected = false;
    });
  }
  _onkeydown(e) {
    super._onkeydown(e);
    const target = e.target;
    const isHomeInBeginning = isHome(e) && target.selectionStart === 0;
    if (isHomeInBeginning) {
      this._skipOpenSuggestions = true;
      return this._focusFirstToken(e);
    }
    if (isLeft(e)) {
      this._skipOpenSuggestions = true;
      return this._handleLeft(e);
    }
    if (isBackSpace(e)) {
      this._skipOpenSuggestions = true;
      return this._handleBackspace(e);
    }
    this._skipOpenSuggestions = false;
    if (isShow(e)) {
      this.valueHelpPress();
    }
  }
  _onTokenizerKeydown(e) {
    const rightCtrl = isRightCtrl(e);
    if (isRight(e) || isDown(e) || isEnd(e) || rightCtrl) {
      e.preventDefault();
      const lastTokenIndex = this.tokens.length - 1;
      if (e.target === this.tokens[lastTokenIndex] && this.tokens[lastTokenIndex] === document.activeElement) {
        setTimeout(() => {
          this.focus();
        }, 0);
      }
    }
  }
  _handleLeft(e) {
    const cursorPosition = this.getDomRef().querySelector(`input`).selectionStart;
    const tokens = this.tokens;
    const lastToken = tokens.length && tokens[tokens.length - 1];
    if ((cursorPosition === null && !this.value || cursorPosition === 0) && lastToken) {
      e.preventDefault();
      lastToken.focus();
      this.tokenizer._itemNav.setCurrentItem(lastToken);
    }
  }
  _handleBackspace(e) {
    const cursorPosition = this.getDomRef().querySelector(`input`).selectionStart;
    const selectionEnd = this.getDomRef().querySelector(`input`).selectionEnd;
    const isValueSelected = cursorPosition === 0 && selectionEnd === this.value.length;
    const tokens = this.tokens;
    const lastToken = tokens.length && tokens[tokens.length - 1];
    if ((!this.value || this.value && cursorPosition === 0 && !isValueSelected) && lastToken) {
      e.preventDefault();
      lastToken.focus();
      this.tokenizer._itemNav.setCurrentItem(lastToken);
    }
  }
  _focusFirstToken(e) {
    const tokens = this.tokens;
    const firstToken = tokens.length && tokens[0];
    if (firstToken) {
      e.preventDefault();
      firstToken.focus();
      this.tokenizer._itemNav.setCurrentItem(firstToken);
    }
  }
  _onfocusout(e) {
    super._onfocusout(e);
    const relatedTarget = e.relatedTarget;
    const insideDOM = this.contains(relatedTarget);
    const insideShadowDom = this.shadowRoot.contains(relatedTarget);
    if (!insideDOM && !insideShadowDom) {
      this.tokenizer.expanded = false;
    }
    if (this.contains(relatedTarget) && relatedTarget.hasAttribute("ui5-token")) {
      this.focused = false;
    }
  }
  /**
   * @override
   */
  _onfocusin(e) {
    const inputDomRef = this.getInputDOMRef();
    if (e.target === inputDomRef) {
      super._onfocusin(e);
    }
  }
  onBeforeRendering() {
    super.onBeforeRendering();
    this.style.setProperty(getScopedVarName("--_ui5-input-icons-count"), `${this.iconsCount}`);
    this.tokenizerAvailable = this.tokens && this.tokens.length > 0;
    if (this.tokenizer) {
      this.tokenizer.readonly = this.readonly;
    }
  }
  onAfterRendering() {
    super.onAfterRendering();
    this.tokenizer.preventInitialFocus = true;
    if (this.tokenizer.expanded) {
      this.tokenizer.scrollToEnd();
    } else {
      this.tokenizer.scrollToStart();
    }
  }
  get iconsCount() {
    return super.iconsCount + (this.showValueHelpIcon ? 1 : 0);
  }
  get tokenizer() {
    return this.shadowRoot.querySelector("[ui5-tokenizer]");
  }
  get tokenizerExpanded() {
    return this.tokenizer && this.tokenizer.expanded;
  }
  get _tokensCountText() {
    return getTokensCountText(this.tokens.length);
  }
  get _tokensCountTextId() {
    return `hiddenText-nMore`;
  }
  /**
   * Returns the placeholder value when there are no tokens.
   * @protected
   */
  get _placeholder() {
    if (this.tokens.length) {
      return "";
    }
    return this.placeholder;
  }
  get accInfo() {
    const ariaDescribedBy = `${this._tokensCountTextId} ${this.suggestionsTextId} ${this.valueStateTextId}`.trim();
    return {
      ...super.accInfo,
      "ariaRoledescription": this.ariaRoleDescription,
      "ariaDescribedBy": ariaDescribedBy
    };
  }
  get valueHelpLabel() {
    return MultiInput_1.i18nBundle.getText(MULTIINPUT_VALUE_HELP_LABEL);
  }
  get ariaRoleDescription() {
    return MultiInput_1.i18nBundle.getText(MULTIINPUT_ROLEDESCRIPTION_TEXT);
  }
  get morePopoverOpener() {
    if (this.tokens.length === 1 && this.tokens[0].isTruncatable) {
      return this.tokens[0];
    }
    return this;
  }
  get shouldDisplayOnlyValueStateMessage() {
    return this.hasValueStateMessage && !this.readonly && !this.open && this.focused && !this.tokenizer.open;
  }
};
__decorate64([
  property_default({ type: Boolean })
], MultiInput.prototype, "showValueHelpIcon", void 0);
__decorate64([
  property_default({ type: Boolean })
], MultiInput.prototype, "tokenizerAvailable", void 0);
__decorate64([
  property_default()
], MultiInput.prototype, "name", void 0);
__decorate64([
  slot_default({ type: HTMLElement, individualSlots: true })
], MultiInput.prototype, "tokens", void 0);
MultiInput = MultiInput_1 = __decorate64([
  customElement_default({
    tag: "ui5-multi-input",
    renderer: JsxRenderer_default,
    formAssociated: true,
    template: MultiInputTemplate,
    styles: [Input_default.styles, MultiInput_css_default]
  }),
  event_strict_default("value-help-trigger", {
    bubbles: true
  }),
  event_strict_default("token-delete", {
    bubbles: true
  })
], MultiInput);
MultiInput.define();

// node_modules/@ui5/webcomponents-react/dist/webComponents/MultiInput/index.js
var MultiInput3 = withWebComponent("ui5-multi-input", ["accessibleName", "accessibleNameRef", "maxlength", "name", "placeholder", "type", "value", "valueState"], ["disabled", "noTypeahead", "open", "readonly", "required", "showClearIcon", "showSuggestions", "showValueHelpIcon"], ["icon", "tokens", "valueStateMessage"], ["change", "close", "input", "open", "select", "selection-change", "token-delete", "value-help-trigger"]);
MultiInput3.displayName = "MultiInput";

// node_modules/@ui5/webcomponents/dist/generated/themes/BrowserScrollbar.css.js
registerThemePropertiesLoader("@ui5/webcomponents-theming", "sap_horizon", async () => parameters_bundle_css_default);
registerThemePropertiesLoader("@ui5/webcomponents", "sap_horizon", async () => parameters_bundle_css_default2);
var BrowserScrollbar_css_default = `::-webkit-scrollbar:horizontal{height:var(--sapScrollBar_Dimension)}::-webkit-scrollbar:vertical{width:var(--sapScrollBar_Dimension)}::-webkit-scrollbar{background-color:var(--sapScrollBar_TrackColor);border-left:none}::-webkit-scrollbar-thumb{border-radius:var(--sapElement_BorderCornerRadius);background-color:var(--sapScrollBar_FaceColor)}::-webkit-scrollbar-thumb:hover{background-color:var(--sapScrollBar_Hover_FaceColor)}::-webkit-scrollbar-corner{background-color:var(--sapScrollBar_TrackColor)}
`;

// node_modules/@ui5/webcomponents-fiori/dist/types/NavigationLayoutMode.js
var NavigationLayoutMode;
(function(NavigationLayoutMode2) {
  NavigationLayoutMode2["Auto"] = "Auto";
  NavigationLayoutMode2["Collapsed"] = "Collapsed";
  NavigationLayoutMode2["Expanded"] = "Expanded";
})(NavigationLayoutMode || (NavigationLayoutMode = {}));
var NavigationLayoutMode_default = NavigationLayoutMode;

// node_modules/@ui5/webcomponents-fiori/dist/NavigationLayoutTemplate.js
function NavigationLayoutTemplate() {
  return jsxs("div", { class: "ui5-nl-root", children: [jsx("header", { class: "ui5-nl-header", children: jsx("slot", { name: "header" }) }), jsxs("section", { class: "ui5-nl-section", children: [jsx("aside", { class: "ui5-nl-aside", children: jsx("slot", { name: "sideContent" }) }), jsx("div", { class: "ui5-nl-content", children: jsx("slot", {}) })] })] });
}

// node_modules/@ui5/webcomponents-fiori/dist/generated/themes/NavigationLayout.css.js
registerThemePropertiesLoader("@ui5/webcomponents-theming", "sap_horizon", async () => parameters_bundle_css_default);
registerThemePropertiesLoader("@ui5/webcomponents-fiori", "sap_horizon", async () => parameters_bundle_css_default3);
var NavigationLayout_css_default = `:host(:not([hidden])){position:absolute;inset:0;display:block;background:var(--sapBackgroundColor);box-sizing:border-box;overflow:hidden}.ui5-nl-root{width:100%;height:100%;display:flex;flex-direction:column;box-sizing:border-box}.ui5-nl-header{box-shadow:var(--sapShell_Shadow);z-index:2}.ui5-nl-section{display:flex;flex:1;min-height:0;position:relative}.ui5-nl-aside{transition:transform .3s;z-index:1}:host([is-phone]) .ui5-nl-aside{position:absolute;top:0;left:0;bottom:0;width:100%}:host([is-phone]) ::slotted([ui5-side-navigation][slot="sideContent"]){width:100%;box-shadow:none}.ui5-nl-content{flex:1;min-width:0;overflow:auto}:host([side-collapsed][is-phone]) .ui5-nl-aside{transform:translate(-100%)}:host([side-collapsed][is-phone]) :dir(rtl) .ui5-nl-aside{transform:translate(100%)}::slotted([ui5-shellbar][slot="header"]){padding-inline:.5rem}
`;

// node_modules/@ui5/webcomponents-fiori/dist/NavigationLayout.js
var __decorate65 = function(decorators, target, key, desc) {
  var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
  if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
  else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
  return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var NavigationLayout = class NavigationLayout2 extends UI5Element_default {
  constructor() {
    super(...arguments);
    this._defaultSideCollapsed = isPhone() || isTablet() && !isCombi();
    this.mode = "Auto";
    this.sideCollapsed = this._defaultSideCollapsed;
    this.isPhone = isPhone();
    this.isTablet = isTablet() && !isCombi();
  }
  /**
   * Gets whether the side navigation is collapsed.
   * @public
   */
  isSideCollapsed() {
    this.calcSideCollapsed();
    return this.sideCollapsed;
  }
  onBeforeRendering() {
    this.calcSideCollapsed();
    if (isPhone()) {
      return;
    }
    const sideNavigation = this.sideContent[0];
    if (sideNavigation) {
      sideNavigation.collapsed = this.isSideCollapsed();
    }
  }
  calcSideCollapsed() {
    if (this.mode === NavigationLayoutMode_default.Auto) {
      this.sideCollapsed = this._defaultSideCollapsed;
    } else {
      this.sideCollapsed = this.mode === NavigationLayoutMode_default.Collapsed;
    }
  }
};
__decorate65([
  property_default()
], NavigationLayout.prototype, "mode", void 0);
__decorate65([
  property_default({ type: Boolean })
], NavigationLayout.prototype, "sideCollapsed", void 0);
__decorate65([
  property_default({ type: Boolean })
], NavigationLayout.prototype, "isPhone", void 0);
__decorate65([
  property_default({ type: Boolean })
], NavigationLayout.prototype, "isTablet", void 0);
__decorate65([
  slot_default()
], NavigationLayout.prototype, "header", void 0);
__decorate65([
  slot_default()
], NavigationLayout.prototype, "sideContent", void 0);
__decorate65([
  slot_default({ type: HTMLElement, "default": true })
], NavigationLayout.prototype, "content", void 0);
NavigationLayout = __decorate65([
  customElement_default({
    tag: "ui5-navigation-layout",
    languageAware: true,
    renderer: JsxRenderer_default,
    styles: [
      BrowserScrollbar_css_default,
      NavigationLayout_css_default
    ],
    template: NavigationLayoutTemplate
  })
], NavigationLayout);
NavigationLayout.define();

// node_modules/@ui5/webcomponents-react/dist/webComponents/NavigationLayout/index.js
var NavigationLayout3 = withWebComponent("ui5-navigation-layout", ["mode"], [], ["header", "sideContent"], []);
NavigationLayout3.displayName = "NavigationLayout";

// node_modules/@ui5/webcomponents-fiori/dist/NotificationListItemBase.js
var __decorate66 = function(decorators, target, key, desc) {
  var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
  if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
  else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
  return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var NotificationListItemBase = class _NotificationListItemBase extends ListItemBase_default {
  constructor() {
    super(...arguments);
    this.read = false;
    this.loading = false;
    this.loadingDelay = 1e3;
  }
  get hasTitleText() {
    var _a;
    return !!((_a = this.titleText) == null ? void 0 : _a.length);
  }
  get loadingText() {
    return _NotificationListItemBase.i18nFioriBundle.getText(NOTIFICATION_LIST_ITEM_LOADING);
  }
  /**
   * Event handlers
   */
  async _onkeydown(e) {
    super._onkeydown(e);
    if (isSpace(e) && this.getFocusDomRef().matches(":has(:focus-within)")) {
      e.preventDefault();
      return;
    }
    if (isF2(e)) {
      e.stopImmediatePropagation();
      const activeElement = getActiveElement_default();
      const focusDomRef = this.getHeaderDomRef();
      if (activeElement === focusDomRef) {
        const firstFocusable = await getFirstFocusableElement(focusDomRef);
        firstFocusable == null ? void 0 : firstFocusable.focus();
      } else {
        focusDomRef.focus();
      }
    }
  }
  getHeaderDomRef() {
    return this.getFocusDomRef();
  }
  shouldForwardTabAfter() {
    const aContent = getTabbableElements(this.getHeaderDomRef());
    return aContent.length === 0 || aContent[aContent.length - 1] === getActiveElement_default();
  }
};
__decorate66([
  property_default()
], NotificationListItemBase.prototype, "titleText", void 0);
__decorate66([
  property_default({ type: Boolean })
], NotificationListItemBase.prototype, "read", void 0);
__decorate66([
  property_default({ type: Boolean })
], NotificationListItemBase.prototype, "loading", void 0);
__decorate66([
  property_default({ type: Number })
], NotificationListItemBase.prototype, "loadingDelay", void 0);
__decorate66([
  i18n_default("@ui5/webcomponents-fiori")
], NotificationListItemBase, "i18nFioriBundle", void 0);
var NotificationListItemBase_default = NotificationListItemBase;

// node_modules/@ui5/webcomponents-icons/dist/v4/navigation-down-arrow.js
var name26 = "navigation-down-arrow";
var pathData25 = "M425.5 137q9-9 22.5-9t22.5 9q10 10 10 23t-10 23l-193 197q-4 2-5 3-2 1-2.5 1.5t-2.5 1.5q-6 2-11 2-2 0-3-.5t-2-.5q-4 0-6-1t-3.5-2-3.5-2q-1-1-1.5-1t-1.5-1-2-1l-192-196q-10-10-10-23t10-23q9-9 22.5-9t22.5 9l154 155q16 10 32 0z";
var ltr25 = false;
var collection26 = "SAP-icons-v4";
var packageName25 = "@ui5/webcomponents-icons";
registerIcon(name26, { pathData: pathData25, ltr: ltr25, collection: collection26, packageName: packageName25 });

// node_modules/@ui5/webcomponents-icons/dist/v5/navigation-down-arrow.js
var name27 = "navigation-down-arrow";
var pathData26 = "M96 186q0-11 7.5-18.5T122 160q10 0 18 8l116 121 116-121q8-8 18-8 11 0 18.5 7.5T416 186q0 10-7 17L275 344q-8 8-19 8-12 0-18-8L103 203q-7-7-7-17z";
var ltr26 = false;
var collection27 = "SAP-icons-v5";
var packageName26 = "@ui5/webcomponents-icons";
registerIcon(name27, { pathData: pathData26, ltr: ltr26, collection: collection27, packageName: packageName26 });

// node_modules/@ui5/webcomponents-icons/dist/navigation-down-arrow.js
var navigation_down_arrow_default = "navigation-down-arrow";

// node_modules/@ui5/webcomponents-fiori/dist/NotificationListGroupList.js
var __decorate67 = function(decorators, target, key, desc) {
  var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
  if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
  else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
  return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var NotificationListGroupList = class NotificationListGroupList2 extends List_default {
  getEnabledItems() {
    return [];
  }
  _handleTabNext() {
  }
  onForwardBefore() {
  }
  onForwardAfter() {
  }
  onItemTabIndexChange() {
  }
  onItemFocused() {
  }
  _onfocusin(e) {
    e.stopImmediatePropagation();
  }
  _onkeydown() {
  }
  focusItem(item2) {
    item2.focus();
  }
  _onLoadMoreKeydown(e) {
    if (isSpace(e)) {
      e.stopImmediatePropagation();
    }
    super._onLoadMoreKeydown(e);
  }
};
NotificationListGroupList = __decorate67([
  customElement_default("ui5-notification-group-list")
], NotificationListGroupList);
NotificationListGroupList.define();
var NotificationListGroupList_default = NotificationListGroupList;

// node_modules/@ui5/webcomponents-fiori/dist/NotificationListGroupItemTemplate.js
function NotificationListItemTemplate() {
  return jsxs("li", { class: "ui5-nli-group-root ui5-nli-focusable", onFocusIn: this._onfocusin, onKeyDown: this._onkeydown, tabindex: this.forcedTabIndex ? parseInt(this.forcedTabIndex) : void 0, "aria-labelledby": this.ariaLabelledBy, "aria-description": this.accInvisibleText, "aria-level": 1, children: [this.loading && jsx("span", { id: `${this._id}-loading`, class: "ui5-hidden-text", children: this.loadingText }), jsxs("div", { class: "ui5-nli-group-content-wrapper", children: [jsxs("div", { class: {
    "ui5-nli-group-header": true,
    "ui5-nli-group-header-expanded": this._expanded
  }, onClick: this._onHeaderToggleClick, onKeyDown: this._onkeydown, role: "button", "aria-expanded": this._expanded, "aria-controls": `${this._id}-notificationsList`, title: this.toggleIconAccessibleName, children: [jsx(Icon_default, { name: this.groupCollapsedIcon, class: "ui5-nli-group-toggle-icon", mode: "Decorative" }), jsx("div", { id: `${this._id}-title-text`, class: "ui5-nli-group-title-text", part: "title-text", role: "heading", "aria-level": 2, children: this.titleText }), jsx("div", { class: "ui5-nli-group-divider" })] }), jsx(NotificationListGroupList_default, { id: `${this._id}-notificationsList`, class: "ui5-nli-group-items", accessibleNameRef: `${this._id}-title-text`, growing: this.growing, loading: this.loading, loadingDelay: this.loadingDelay, onLoadMore: this._onLoadMore, children: jsx("slot", {}) })] })] });
}

// node_modules/@ui5/webcomponents-fiori/dist/generated/themes/NotificationListGroupItem.css.js
registerThemePropertiesLoader("@ui5/webcomponents-theming", "sap_horizon", async () => parameters_bundle_css_default);
registerThemePropertiesLoader("@ui5/webcomponents-fiori", "sap_horizon", async () => parameters_bundle_css_default3);
var NotificationListGroupItem_css_default = `.ui5-hidden-text{position:absolute;clip:rect(1px,1px,1px,1px);user-select:none;left:-1000px;top:-1000px;pointer-events:none;font-size:0}:host(:not([hidden])){display:block;max-width:100%;min-height:var(--_ui5-v2-8-0_list_item_base_height);background:var(--ui5-v2-8-0-listitem-background-color);cursor:pointer}.ui5-nli-focusable:focus{outline:none}:host([desktop]) .ui5-nli-focusable:focus:not(.ui5-nli-group-root):after,.ui5-nli-focusable:focus-visible:not(.ui5-nli-group-root):after{content:"";border:var(--sapContent_FocusWidth) var(--sapContent_FocusStyle) var(--sapContent_FocusColor);position:absolute;inset:0;pointer-events:none}.ui5-state-icon{min-width:1rem;min-height:1rem;padding-inline-end:var(--_ui5-v2-8-0-notification_item-state-icon-padding)}:host([collapsed]) .ui5-nli-group-items{display:none}:host([read]) .ui5-nli-group-title-text{font-weight:400}.ui5-nli-group-root{width:100%}.ui5-nli-group-content-wrapper{position:relative;box-sizing:border-box;width:100%;display:flex;flex-direction:column}[ui5-busy-indicator]{width:100%}.ui5-nli-group-header{height:2.75rem;position:sticky;top:0;z-index:90;background:var(--sapList_GroupHeaderBackground);display:flex;align-items:center;padding-inline:var(--_ui5-v2-8-0-notification_group_header-padding);width:100%;border-bottom:var(--_ui5-v2-8-0-notification_group_header-border-bottom-width) solid var(--sapList_GroupHeaderBorderColor);box-sizing:border-box;cursor:pointer;margin-bottom:var(--_ui5-v2-8-0-notification_group_header-margin)}.ui5-nli-group-header-expanded{margin-bottom:var(--_ui5-v2-8-0-notification_group_header-margin-expanded)}:host([desktop]) .ui5-nli-focusable.ui5-nli-group-root:focus .ui5-nli-group-header:before,.ui5-nli-focusable.ui5-nli-group-root:focus-visible .ui5-nli-group-header:before{content:"";border:var(--sapContent_FocusWidth) var(--sapContent_FocusStyle) var(--sapContent_FocusColor);position:absolute;top:var(--_ui5-v2-8-0-notification_group_header-margin);bottom:var(--_ui5-v2-8-0-notification_group_header-margin);left:0;right:0;pointer-events:none}.ui5-nli-group-toggle-icon{min-width:1rem;min-height:1rem;margin-inline:.5rem;color:var(--sapContent_IconColor)}.ui5-nli-group-title-text{color:var(--sapGroup_TitleTextColor);font-family:"72override",var(--sapFontFamily);font-size:var(--sapFontHeader5Size);font-weight:700;white-space:nowrap;overflow:hidden;text-overflow:ellipsis;line-height:2rem;margin-inline-start:.75rem}.ui5-nli-group-divider{flex:1}:host([ui5-li-notification-group]){-webkit-tap-highlight-color:transparent}[ui5-notification-group-list]::part(growing-button){border:none}[ui5-notification-group-list]::part(growing-button-inner){margin:var(--_ui5-v2-8-0-notification_item-margin);border:var(--_ui5-v2-8-0-notification_item-border-top-left-right);border-radius:var(--_ui5-v2-8-0-notification_item-border-radius)}[ui5-notification-group-list]::part(growing-button-inner){border-radius:var(--_ui5-v2-8-0-notification_item-border-radius);height:3.125rem}[ui5-notification-group-list]::part(growing-button-inner):focus,[ui5-notification-group-list]::part(growing-button-inner):focus-visible{outline:var(--sapContent_FocusWidth) var(--sapContent_FocusStyle) var(--sapContent_FocusColor);outline-offset:var(--_ui5-v2-8-0-notification_item-outline-offset)}[ui5-notification-group-list]::part(growing-button-inner):focus:active,[ui5-notification-group-list]::part(growing-button-inner):focus-visible:active{background-color:var(--_ui5-v2-8-0-notification_item-growing-btn-background-color-active);border-radius:var(--_ui5-v2-8-0-notification_item-border-radius);border:var(--_ui5-v2-8-0-notification_item-border-active)}[ui5-notification-group-list]::part(growing-button-busy-indicator){padding:.875rem 0 1rem}
`;

// node_modules/@ui5/webcomponents-fiori/dist/NotificationListGroupItem.js
var __decorate68 = function(decorators, target, key, desc) {
  var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
  if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
  else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
  return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var NotificationListGroupItem_1;
var NotificationListGroupItem = NotificationListGroupItem_1 = class NotificationListGroupItem2 extends NotificationListItemBase_default {
  constructor() {
    super(...arguments);
    this.collapsed = false;
    this.growing = "None";
  }
  onBeforeRendering() {
    super.onBeforeRendering();
    this.items.forEach((item2) => {
      item2._ariaLevel = 2;
    });
    if (this.loading) {
      this.clearChildBusyIndicator();
    }
    this.actionable = false;
  }
  /**
   * Clears child items loading state to show a single loading over the entire group,
   * instead of multiple BusyIndicator instances
   */
  clearChildBusyIndicator() {
    this.items.forEach((item2) => {
      item2.loading = false;
    });
  }
  get toggleIconAccessibleName() {
    return NotificationListGroupItem_1.i18nFioriBundle.getText(NOTIFICATION_LIST_GROUP_ITEM_TOGGLE_ICON_COLLAPSE_TITLE);
  }
  get accInvisibleText() {
    return `${this.groupText} ${this.expandText}`;
  }
  get expandText() {
    if (this.collapsed) {
      return NotificationListGroupItem_1.i18nFioriBundle.getText(NOTIFICATION_LIST_GROUP_COLLAPSED);
    }
    return NotificationListGroupItem_1.i18nFioriBundle.getText(NOTIFICATION_LIST_GROUP_EXPANDED);
  }
  get groupText() {
    return NotificationListGroupItem_1.i18nFioriBundle.getText(NOTIFICATION_LIST_GROUP_ITEM_TXT);
  }
  get ariaLabelledBy() {
    const id = this._id;
    if (this.loading) {
      return `${id}-loading`;
    }
    const ids = [];
    if (this.hasTitleText) {
      ids.push(`${id}-title-text`);
    }
    return ids.join(" ");
  }
  get _expanded() {
    return !this.collapsed;
  }
  get _pressable() {
    return false;
  }
  get groupCollapsedIcon() {
    return this.collapsed ? navigation_right_arrow_default : navigation_down_arrow_default;
  }
  toggleCollapsed() {
    this.collapsed = !this.collapsed;
    this.fireDecoratorEvent("toggle", { item: this });
  }
  /**
   * Event handlers
   *
   */
  _onHeaderToggleClick() {
    this.toggleCollapsed();
  }
  _onLoadMore() {
    this.fireDecoratorEvent("load-more");
  }
  getGrowingButton() {
    var _a;
    const innerList = (_a = this.getDomRef()) == null ? void 0 : _a.querySelector("[ui5-notification-group-list]");
    return innerList.getGrowingButton();
  }
  async _onkeydown(e) {
    var _a;
    const isFocused = this.matches(":focus");
    if (!isFocused) {
      return;
    }
    if ((_a = this.getGrowingButton()) == null ? void 0 : _a.matches(":focus")) {
      return;
    }
    await super._onkeydown(e);
    const space = isSpace(e);
    const plus = isPlus(e);
    const minus = isMinus(e);
    const left = isLeft(e);
    const right = isRight(e);
    if (space) {
      this.toggleCollapsed();
    }
    if (plus || right) {
      if (this.collapsed) {
        this.toggleCollapsed();
        e.stopImmediatePropagation();
      }
    }
    if (minus || left) {
      if (!this.collapsed) {
        this.toggleCollapsed();
        e.stopImmediatePropagation();
      }
    }
  }
  getHeaderDomRef() {
    var _a;
    return (_a = this.getDomRef()) == null ? void 0 : _a.querySelector(".ui5-nli-group-header");
  }
};
__decorate68([
  property_default({ type: Boolean })
], NotificationListGroupItem.prototype, "collapsed", void 0);
__decorate68([
  property_default()
], NotificationListGroupItem.prototype, "growing", void 0);
__decorate68([
  slot_default({ type: HTMLElement, "default": true })
], NotificationListGroupItem.prototype, "items", void 0);
NotificationListGroupItem = NotificationListGroupItem_1 = __decorate68([
  customElement_default({
    tag: "ui5-li-notification-group",
    languageAware: true,
    renderer: JsxRenderer_default,
    styles: [
      NotificationListGroupItem_css_default
    ],
    template: NotificationListItemTemplate
  }),
  event_strict_default("toggle", {
    bubbles: true
  }),
  event_strict_default("load-more", {
    bubbles: true
  })
], NotificationListGroupItem);
NotificationListGroupItem.define();
var NotificationListGroupItem_default = NotificationListGroupItem;

// node_modules/@ui5/webcomponents-fiori/dist/NotificationListInternal.js
var __decorate69 = function(decorators, target, key, desc) {
  var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
  if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
  else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
  return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var NotificationListInternal = class NotificationListInternal2 extends List_default {
  constructor() {
    super();
    this._allNavigationItems = [];
    this._itemNavigation._navigationMode = NavigationMode_default.Auto;
  }
  getEnabledItems() {
    const items3 = new Array();
    const allNavigationItems = new Array();
    this.getItems().forEach((item2) => {
      items3.push(item2);
      allNavigationItems.push(item2);
      if (item2 instanceof NotificationListGroupItem_default && !item2.collapsed && !item2.loading) {
        item2.items.forEach((subItem) => {
          items3.push(subItem);
          allNavigationItems.push(subItem);
        });
        const growingButton2 = item2.getGrowingButton();
        if (growingButton2) {
          allNavigationItems.push(growingButton2);
        }
      }
    });
    const growingButton = this.getGrowingButton();
    if (growingButton) {
      allNavigationItems.push(growingButton);
    }
    this._allNavigationItems = allNavigationItems;
    return items3;
  }
  _onkeydown(e) {
    if (isEnd(e)) {
      this._handleEndKey(e);
      e.preventDefault();
      return;
    }
    if (isHome(e)) {
      this._handleHomeKey(e);
      e.preventDefault();
      return;
    }
    this._focusSameItemOnNextRow(e);
  }
  _handleHomeKey(e) {
    e.stopImmediatePropagation();
    const target = e.target;
    const activeElement = getActiveElement_default();
    if (!this._isGrowingButton(activeElement) && (target == null ? void 0 : target.hasAttribute("ui5-li-notification-group")) || (target == null ? void 0 : target.hasAttribute("ui5-menu-item"))) {
      return;
    }
    const currentFocusedItem = this.getEnabledItems()[this._itemNavigation._currentIndex];
    if (!currentFocusedItem) {
      return;
    }
    const currentFocusedIndex = this._allNavigationItems.indexOf(currentFocusedItem);
    let nextFocusedIndex = 0;
    for (let i = currentFocusedIndex - 1; i >= 0; i--) {
      const item2 = this._allNavigationItems[i];
      if (item2.hasAttribute("ui5-li-notification-group")) {
        nextFocusedIndex = i + 1;
        break;
      }
    }
    this._allNavigationItems[nextFocusedIndex].focus();
  }
  _handleEndKey(e) {
    e.stopImmediatePropagation();
    const target = e.target;
    if (target == null ? void 0 : target.hasAttribute("ui5-menu-item")) {
      return;
    }
    const currentFocusedItem = this.getEnabledItems()[this._itemNavigation._currentIndex];
    if (!currentFocusedItem) {
      return;
    }
    const currentFocusedIndex = this._allNavigationItems.indexOf(currentFocusedItem);
    let nextFocusedIndex = this._allNavigationItems.length - 1;
    for (let i = currentFocusedIndex + 1; i < this._allNavigationItems.length; i++) {
      const item2 = this._allNavigationItems[i];
      if (item2.hasAttribute("ui5-li-notification-group")) {
        nextFocusedIndex = i - 1;
        break;
      }
      if (this._isGrowingButton(item2)) {
        nextFocusedIndex = i === currentFocusedIndex + 1 ? i : i - 1;
        break;
      }
    }
    this._allNavigationItems[nextFocusedIndex].focus();
  }
  _focusSameItemOnNextRow(e) {
    if (!isUp(e) && !isDown(e) && !isLeft(e) && !isRight(e)) {
      return;
    }
    const target = e.target;
    const shadowTarget = target.shadowRoot.activeElement;
    const activeElement = getActiveElement_default();
    const isGrowingBtn = this._isGrowingButton(activeElement);
    if (!target || target.hasAttribute("ui5-menu-item")) {
      return;
    }
    const isFocusWithin = target.matches(":focus-within");
    if (!isFocusWithin) {
      return;
    }
    e.preventDefault();
    e.stopImmediatePropagation();
    const currentItem = isGrowingBtn ? activeElement : this.getEnabledItems()[this._itemNavigation._currentIndex];
    const index = this._allNavigationItems.indexOf(currentItem) + (isUp(e) || isLeft(e) ? -1 : 1);
    const nextItem = this._allNavigationItems[index];
    if (!nextItem) {
      return;
    }
    if (this._isGrowingButton(nextItem) || shadowTarget.classList.contains("ui5-nli-focusable")) {
      nextItem.focus();
      return;
    }
    const nextListItem = nextItem;
    if (nextListItem.loading || (isLeft(e) || isRight(e))) {
      nextItem.focus();
      return;
    }
    const sameItemOnNextRow = nextListItem.getHeaderDomRef().querySelector(`.${shadowTarget.className}`);
    if (sameItemOnNextRow && sameItemOnNextRow.offsetParent) {
      sameItemOnNextRow.focus();
    } else {
      nextItem.focus();
    }
  }
  _isGrowingButton(item2) {
    return item2 == null ? void 0 : item2.classList.contains("ui5-growing-button-inner");
  }
};
NotificationListInternal = __decorate69([
  customElement_default("ui5-notification-list-internal")
], NotificationListInternal);
NotificationListInternal.define();
var NotificationListInternal_default = NotificationListInternal;

// node_modules/@ui5/webcomponents-fiori/dist/NotificationListTemplate.js
function NotificationListTemplate() {
  return jsx(NotificationListInternal_default, { accessibleName: this._accessibleName, noDataText: this.noDataText, onItemClick: this._onItemClick, onItemClose: this._onItemClose, onItemToggle: this._onItemToggle, onLoadMore: this._onLoadMore, children: jsx("slot", {}) });
}

// node_modules/@ui5/webcomponents-fiori/dist/generated/themes/NotificationList.css.js
registerThemePropertiesLoader("@ui5/webcomponents-theming", "sap_horizon", async () => parameters_bundle_css_default);
registerThemePropertiesLoader("@ui5/webcomponents-fiori", "sap_horizon", async () => parameters_bundle_css_default3);
var NotificationList_css_default = `:host(:not([hidden])){display:block}[ui5-notification-list-internal]{height:100%}
`;

// node_modules/@ui5/webcomponents-fiori/dist/NotificationList.js
var __decorate70 = function(decorators, target, key, desc) {
  var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
  if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
  else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
  return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var NotificationList_1;
var NotificationList = NotificationList_1 = class NotificationList2 extends UI5Element_default {
  get _accessibleName() {
    return NotificationList_1.i18nFioriBundle.getText(NOTIFICATION_LIST_ACCESSIBLE_NAME);
  }
  getEnabledItems() {
    var _a;
    return ((_a = this.innerList) == null ? void 0 : _a.getEnabledItems()) || [];
  }
  get innerList() {
    var _a;
    return (_a = this.shadowRoot) == null ? void 0 : _a.querySelector("[ui5-notification-list-internal]");
  }
  _onItemClick(e) {
    const item2 = e.detail.item;
    if (!this.fireDecoratorEvent("item-click", { item: item2 })) {
      e.preventDefault();
    }
  }
  _onItemClose(e) {
    const item2 = e.detail.item;
    if (!this.fireDecoratorEvent("item-close", { item: item2 })) {
      e.preventDefault();
    }
  }
  _onItemToggle(e) {
    const item2 = e.detail.item;
    if (!this.fireDecoratorEvent("item-toggle", { item: item2 })) {
      e.preventDefault();
    }
  }
  _onLoadMore() {
    this.fireDecoratorEvent("load-more");
  }
};
__decorate70([
  slot_default({ type: HTMLElement, "default": true })
], NotificationList.prototype, "items", void 0);
__decorate70([
  property_default()
], NotificationList.prototype, "noDataText", void 0);
__decorate70([
  i18n_default("@ui5/webcomponents-fiori")
], NotificationList, "i18nFioriBundle", void 0);
NotificationList = NotificationList_1 = __decorate70([
  customElement_default({
    tag: "ui5-notification-list",
    renderer: JsxRenderer_default,
    languageAware: true,
    styles: [NotificationList_css_default],
    template: NotificationListTemplate
  }),
  event_strict_default("item-click", {
    bubbles: true,
    cancelable: true
  }),
  event_strict_default("item-close", {
    bubbles: true,
    cancelable: true
  }),
  event_strict_default("item-toggle", {
    bubbles: true,
    cancelable: true
  })
], NotificationList);
NotificationList.define();

// node_modules/@ui5/webcomponents-react/dist/webComponents/NotificationList/index.js
var NotificationList3 = withWebComponent("ui5-notification-list", ["noDataText"], [], [], ["item-click", "item-close", "item-toggle"]);
NotificationList3.displayName = "NotificationList";

// node_modules/@ui5/webcomponents-react/dist/webComponents/NotificationListGroupItem/index.js
var NotificationListGroupItem3 = withWebComponent("ui5-li-notification-group", ["growing", "loadingDelay", "titleText"], ["collapsed", "loading", "read"], [], ["load-more", "toggle"]);
NotificationListGroupItem3.displayName = "NotificationListGroupItem";

// node_modules/@ui5/webcomponents/dist/types/WrappingType.js
var WrappingType;
(function(WrappingType2) {
  WrappingType2["None"] = "None";
  WrappingType2["Normal"] = "Normal";
})(WrappingType || (WrappingType = {}));
var WrappingType_default = WrappingType;

// node_modules/@ui5/webcomponents-fiori/dist/types/NotificationListItemImportance.js
var NotificationListItemImportance;
(function(NotificationListItemImportance2) {
  NotificationListItemImportance2["Standard"] = "Standard";
  NotificationListItemImportance2["Important"] = "Important";
})(NotificationListItemImportance || (NotificationListItemImportance = {}));
var NotificationListItemImportance_default = NotificationListItemImportance;

// node_modules/@ui5/webcomponents-icons/dist/v4/high-priority.js
var name28 = "high-priority";
var pathData27 = "M256 0q53 0 99.5 20T437 75t55 81.5 20 99.5-20 99.5-55 81.5-81.5 55-99.5 20-99.5-20T75 437t-55-81.5T0 256t20-99.5T75 75t81.5-55T256 0zm0 96q-15 0-25.5 11t-9.5 26l11 164q0 10 7 16.5t17 6.5 17-6.5 7-16.5l11-164q1-15-9.5-26T256 96zm0 329q15 0 25.5-11t10.5-26-11-25.5-26-10.5-25 10.5-10 25.5 10 26 26 11z";
var ltr27 = false;
var collection28 = "SAP-icons-v4";
var packageName27 = "@ui5/webcomponents-icons";
registerIcon(name28, { pathData: pathData27, ltr: ltr27, collection: collection28, packageName: packageName27 });

// node_modules/@ui5/webcomponents-icons/dist/v5/high-priority.js
var name29 = "high-priority";
var pathData28 = "M256 0q53 0 99.5 20T437 75t55 81.5 20 99.5-20 99.5-55 81.5-81.5 55-99.5 20-99.5-20T75 437t-55-81.5T0 256t20-99.5T75 75t81.5-55T256 0zm-32 288q0 14 9 23t23 9 23-9 9-23V128q0-14-9-23t-23-9-23 9-9 23v160zm32 128q14 0 23-9t9-23-9-23-23-9-23 9-9 23 9 23 23 9z";
var ltr28 = false;
var collection29 = "SAP-icons-v5";
var packageName28 = "@ui5/webcomponents-icons";
registerIcon(name29, { pathData: pathData28, ltr: ltr28, collection: collection29, packageName: packageName28 });

// node_modules/@ui5/webcomponents-icons/dist/high-priority.js
var high_priority_default = "high-priority";

// node_modules/@ui5/webcomponents-icons/dist/v4/overflow.js
var name30 = "overflow";
var pathData29 = "M448 192q26 0 45 19t19 45-19 45-45 19-45-19-19-45 19-45 45-19zm0 96q14 0 23-9t9-23-9-23-23-9-23 9-9 23 9 23 23 9zm-192-96q26 0 45 19t19 45-19 45-45 19-45-19-19-45 19-45 45-19zm0 96q14 0 23-9t9-23-9-23-23-9-23 9-9 23 9 23 23 9zM64 192q26 0 45 19t19 45-19 45-45 19-45-19-19-45 19-45 45-19zm0 96q14 0 23-9t9-23-9-23-23-9-23 9-9 23 9 23 23 9z";
var ltr29 = false;
var accData15 = ICON_OVERFLOW;
var collection30 = "SAP-icons-v4";
var packageName29 = "@ui5/webcomponents-icons";
registerIcon(name30, { pathData: pathData29, ltr: ltr29, accData: accData15, collection: collection30, packageName: packageName29 });

// node_modules/@ui5/webcomponents-icons/dist/v5/overflow.js
var name31 = "overflow";
var pathData30 = "M64 192q26 0 45 19t19 45-19 45-45 19-45-19-19-45 19-45 45-19zm192 0q26 0 45 19t19 45-19 45-45 19-45-19-19-45 19-45 45-19zm192 0q26 0 45 19t19 45-19 45-45 19-45-19-19-45 19-45 45-19z";
var ltr30 = false;
var accData16 = ICON_OVERFLOW;
var collection31 = "SAP-icons-v5";
var packageName30 = "@ui5/webcomponents-icons";
registerIcon(name31, { pathData: pathData30, ltr: ltr30, accData: accData16, collection: collection31, packageName: packageName30 });

// node_modules/@ui5/webcomponents-icons/dist/overflow.js
var overflow_default = "overflow";

// node_modules/@ui5/webcomponents-fiori/dist/NotificationListItemTemplate.js
function NotificationListItemTemplate2() {
  return jsxs("li", { class: this.itemClasses, onFocusIn: this._onfocusin, onKeyDown: this._onkeydown, onKeyUp: this._onkeyup, onClick: this._onclick, tabindex: this.forcedTabIndex ? parseInt(this.forcedTabIndex) : void 0, "aria-labelledby": this.ariaLabelledBy, "aria-level": this._ariaLevel, children: [this.loading && jsx("span", { id: `${this._id}-loading`, class: "ui5-hidden-text", children: this.loadingText }), jsx(BusyIndicator_default, { id: `${this._id}-busyIndicator`, delay: this.loadingDelay, active: this.loading, inert: this.loading, class: "ui5-nli-loading", children: jsxs("div", { class: "ui5-nli-content-wrapper", children: [jsxs("div", { class: {
    "ui5-nli-content": true,
    "ui5-nli-content-with-importance": this.hasImportance
  }, children: [this.hasImportance && jsxs(Tag_default, { id: `${this._id}-importance`, class: "ui5-nli-importance", design: "Set2", colorScheme: "2", wrappingType: "None", children: [jsx(Icon_default, { name: high_priority_default, slot: "icon" }), this.importanceText] }), jsxs("div", { class: "ui5-nli-title-text-wrapper", children: [this.hasState && jsx(Icon_default, { class: "ui5-state-icon", name: this.statusIconName, showTooltip: true, accessibleName: this.stateText, design: this.statusIconDesign }), jsxs("div", { id: `${this._id}-title-text`, class: "ui5-nli-title-text", part: "title-text", children: [jsx("span", { class: "ui5-hidden-text", children: this.stateText }), this.titleText] })] }), jsx("span", { id: `${this._id}-read`, class: "ui5-hidden-text", children: this.readText }), this.hasDesc && jsx("div", { id: `${this._id}-description`, class: "ui5-nli-description", children: jsx("slot", {}) }), jsxs("div", { class: "ui5-nli-footer", children: [jsx("div", { id: `${this._id}-footnotes`, class: "ui5-nli-footnotes", children: this.footerItems.map((item2) => {
    return jsxs(Fragment, { children: [jsx("slot", { name: item2.slotName }), item2.showDivider && jsx("div", { class: "ui5-nli-footer-divider", "aria-hidden": "true", children: "·" })] });
  }) }), jsx(Link_default, {
    class: "ui5-nli-footer-showMore",
    hidden: this.hideShowMore,
    onClick: this._onShowMoreClick,
    wrappingType: "None",
    href: "#",
    accessibleName: this.moreLinkAccessibleName,
    accessibleRole: "Button",
    accessibilityAttributes: this.moreLinkAccessibilityAttributes,
    children: this.showMoreText
  })] })] }), jsxs("div", { class: "ui5-nli-actions", children: [this.showMenu && jsx(Button_default, { icon: overflow_default, design: "Transparent", onClick: this._onBtnMenuClick, class: "ui5-nli-menu-btn", tooltip: this.menuBtnAccessibleName, accessibilityAttributes: this.menuButtonAccessibilityAttributes }), this.showClose && jsx(Button_default, { icon: decline_default, class: "ui5-nli-close-btn", design: "Transparent", onClick: this._onBtnCloseClick, tooltip: this.closeBtnAccessibleName, accessibleName: this.closeBtnAccessibleName })] }), jsx("div", { class: "ui5-nli-avatar", "aria-hidden": "true", children: jsx("slot", { name: "avatar" }) }), jsx("slot", { name: "menu" })] }) })] });
}

// node_modules/@ui5/webcomponents-fiori/dist/generated/themes/NotificationListItem.css.js
registerThemePropertiesLoader("@ui5/webcomponents-theming", "sap_horizon", async () => parameters_bundle_css_default);
registerThemePropertiesLoader("@ui5/webcomponents-fiori", "sap_horizon", async () => parameters_bundle_css_default3);
var NotificationListItem_css_default = `.ui5-hidden-text{position:absolute;clip:rect(1px,1px,1px,1px);user-select:none;left:-1000px;top:-1000px;pointer-events:none;font-size:0}:host(:not([hidden])){display:block;max-width:100%;min-height:var(--_ui5-v2-8-0_list_item_base_height);background:var(--ui5-v2-8-0-listitem-background-color);cursor:pointer}.ui5-nli-focusable:focus{outline:none}:host([desktop]) .ui5-nli-focusable:focus:not(.ui5-nli-group-root):after,.ui5-nli-focusable:focus-visible:not(.ui5-nli-group-root):after{content:"";border:var(--sapContent_FocusWidth) var(--sapContent_FocusStyle) var(--sapContent_FocusColor);position:absolute;inset:0;pointer-events:none}.ui5-state-icon{min-width:1rem;min-height:1rem;padding-inline-end:var(--_ui5-v2-8-0-notification_item-state-icon-padding)}:host(:not([wrapping-type="Normal"])) .ui5-nli-title-text{display:-webkit-box;-webkit-line-clamp:2;-webkit-box-orient:vertical;overflow:hidden}:host(:not([wrapping-type="Normal"])) .ui5-nli-description{display:-webkit-box;-webkit-line-clamp:2;-webkit-box-orient:vertical;overflow:hidden}:host([_show-more-pressed]) .ui5-nli-title-text{-webkit-line-clamp:unset}:host([_show-more-pressed]) .ui5-nli-description{-webkit-line-clamp:unset}:host([read]) .ui5-nli-title-text{font-weight:400}:host(:first-of-type){border-top-left-radius:var(--_ui5-v2-8-0-notification_item-border-radius);border-top-right-radius:var(--_ui5-v2-8-0-notification_item-border-radius)}:host(:last-of-type){border-bottom-left-radius:var(--_ui5-v2-8-0-notification_item-border-radius);border-bottom-right-radius:var(--_ui5-v2-8-0-notification_item-border-radius)}:host(:first-of-type) .ui5-nli-focusable:after{border-top-left-radius:var(--_ui5-v2-8-0-notification_item-border-radius);border-top-right-radius:var(--_ui5-v2-8-0-notification_item-border-radius)}:host(:last-of-type) .ui5-nli-focusable:after{border-bottom-left-radius:var(--_ui5-v2-8-0-notification_item-border-radius);border-bottom-right-radius:var(--_ui5-v2-8-0-notification_item-border-radius)}:host([has-border]){border-bottom:var(--_ui5-v2-8-0-notification_item-border-bottom)}:host([ui5-li-notification]){margin:var(--_ui5-v2-8-0-notification_item-margin);border-left:var(--_ui5-v2-8-0-notification_item-border-top-left-right);border-right:var(--_ui5-v2-8-0-notification_item-border-top-left-right);border-top:var(--_ui5-v2-8-0-notification_item-border-top-left-right);border-radius:var(--_ui5-v2-8-0-notification_item-border-radius);list-style:none}.ui5-nli-root{position:relative;width:100%;box-sizing:border-box;cursor:pointer;border-radius:var(--_ui5-v2-8-0-notification_item-border-radius);border:1px solid transparent}.ui5-nli-root:hover{background-color:var(--_ui5-v2-8-0-notification_item-background-color-hover);border-radius:var(--_ui5-v2-8-0-notification_item-border-radius)}:host([desktop]) .ui5-nli-root:focus:active,.ui5-nli-root:focus-visible:active{background-color:var(--_ui5-v2-8-0-notification_item-background-color-active);border-radius:var(--_ui5-v2-8-0-notification_item-border-radius);border:var(--_ui5-v2-8-0-notification_item-border-active)}.ui5-nli-content-wrapper{width:100%;display:flex;flex-direction:row-reverse;padding-inline:var(--_ui5-v2-8-0-notification_item-root-padding-inline);padding-block:1rem;position:relative;box-sizing:border-box}.ui5-nli-content{display:flex;flex-direction:column;flex:1;min-width:0;width:100%;padding-inline:var(--_ui5-v2-8-0-notification_item-content-padding);font-family:"72override",var(--sapFontFamily);box-sizing:border-box}.ui5-nli-content.ui5-nli-content-with-importance{margin-bottom:2rem}.ui5-nli-actions{position:absolute;top:.5rem;right:.5rem}:dir(rtl) .ui5-nli-actions{left:.5rem;right:auto}.ui5-nli-title-text-wrapper{display:flex;flex-direction:row}.ui5-nli-title-text{display:flex;margin-bottom:var(--_ui5-v2-8-0-notification_item-title-margin-bottom);box-sizing:border-box;color:var(--sapGroup_TitleTextColor);font-weight:700;font-size:var(--sapFontHeader6Size)}.ui5-nli-two-buttons .ui5-nli-title-text{padding-inline-end:var(--_ui5-v2-8-0-notification_item-title-padding-end-two-buttons)}.ui5-nli-one-button .ui5-nli-title-text{padding-inline-end:var(--_ui5-v2-8-0-notification_item-title-padding-end-one-button)}.ui5-nli-description{display:flex;margin-top:var(--_ui5-v2-8-0-notification_item-description-margin-top);color:var(--sapTextColor);font-size:var(--sapFontSize);box-sizing:border-box}.ui5-nli-footer{display:flex;color:var(--sapContent_LabelColor);font-size:var(--sapFontSize);margin-top:var(--_ui5-v2-8-0-notification_item-footer-margin-top);box-sizing:border-box;flex-wrap:wrap;align-items:center}.ui5-nli-footer-divider{position:relative;align-items:center;margin-inline:.5rem}.ui5-nli-footnotes{display:flex}.ui5-nli-footer-showMore{margin-inline-start:1rem}.ui5-nli-importance{width:fit-content;position:absolute;bottom:1rem}::slotted([slot^="footnotes"]){color:var(--sapContent_LabelColor);font-size:var(--sapFontSize);text-overflow:ellipsis;white-space:nowrap;overflow:hidden}.ui5-nli-menu-btn{margin-inline-end:.125rem}:host([desktop]) .ui5-nli-focusable:not(.ui5-nli-group-root):focus:after,.ui5-nli-focusable:not(.ui5-nli-group-root):focus-visible:after{border-radius:var(--_ui5-v2-8-0-notification_item-border-radius);top:var(--_ui5-v2-8-0-notification_item-focus-offset);right:var(--_ui5-v2-8-0-notification_item-focus-offset);bottom:var(--_ui5-v2-8-0-notification_item-focus-offset);left:var(--_ui5-v2-8-0-notification_item-focus-offset)}[ui5-busy-indicator]{width:100%;border-radius:var(--_ui5-v2-8-0-notification_item-border-radius)}
`;

// node_modules/@ui5/webcomponents/dist/types/IconDesign.js
var IconDesign;
(function(IconDesign2) {
  IconDesign2["Contrast"] = "Contrast";
  IconDesign2["Critical"] = "Critical";
  IconDesign2["Default"] = "Default";
  IconDesign2["Information"] = "Information";
  IconDesign2["Negative"] = "Negative";
  IconDesign2["Neutral"] = "Neutral";
  IconDesign2["NonInteractive"] = "NonInteractive";
  IconDesign2["Positive"] = "Positive";
})(IconDesign || (IconDesign = {}));
var IconDesign_default = IconDesign;

// node_modules/@ui5/webcomponents-fiori/dist/NotificationListItem.js
var __decorate71 = function(decorators, target, key, desc) {
  var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
  if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
  else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
  return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var NotificationListItem_1;
var ICON_PER_STATUS_NAME = {
  [ValueState_default.Negative]: error_default,
  [ValueState_default.Critical]: alert_default,
  [ValueState_default.Positive]: sys_enter_2_default,
  [ValueState_default.Information]: information_default,
  [ValueState_default.None]: ""
};
var ICON_PER_STATUS_DESIGN = {
  [ValueState_default.Negative]: IconDesign_default.Negative,
  [ValueState_default.Critical]: IconDesign_default.Critical,
  [ValueState_default.Positive]: IconDesign_default.Positive,
  [ValueState_default.Information]: IconDesign_default.Information,
  [ValueState_default.None]: void 0
};
var NotificationListItem = NotificationListItem_1 = class NotificationListItem2 extends NotificationListItemBase_default {
  constructor() {
    super();
    this.wrappingType = "None";
    this.state = "None";
    this.showClose = false;
    this.importance = "Standard";
    this._showMorePressed = false;
    this._showMore = false;
    this._titleTextOverflowHeight = 0;
    this._descOverflowHeight = 0;
    this._onResizeBound = this.onResize.bind(this);
  }
  onEnterDOM() {
    super.onEnterDOM();
    ResizeHandler_default.register(this, this._onResizeBound);
  }
  onExitDOM() {
    ResizeHandler_default.deregister(this, this._onResizeBound);
  }
  get hasState() {
    return this.state !== ValueState_default.None;
  }
  get hasDesc() {
    return willShowContent_default(this.description);
  }
  get hasImportance() {
    return this.importance !== NotificationListItemImportance_default.Standard;
  }
  get hasFootNotes() {
    return !!this.footnotes.length;
  }
  get showMoreText() {
    if (this._showMorePressed) {
      return NotificationListItem_1.i18nFioriBundle.getText(NOTIFICATION_LIST_ITEM_SHOW_LESS);
    }
    return NotificationListItem_1.i18nFioriBundle.getText(NOTIFICATION_LIST_ITEM_SHOW_MORE);
  }
  get menuBtnAccessibleName() {
    return NotificationListItem_1.i18nFioriBundle.getText(NOTIFICATION_LIST_ITEM_MENU_BTN_TITLE);
  }
  get moreLinkAccessibleName() {
    return this._showMorePressed ? NotificationListItem_1.i18nFioriBundle.getText(NOTIFICATION_LIST_ITEM_MORE_LINK_LABEL_TRUNCATE) : NotificationListItem_1.i18nFioriBundle.getText(NOTIFICATION_LIST_ITEM_MORE_LINK_LABEL_FULL);
  }
  get closeBtnAccessibleName() {
    return NotificationListItem_1.i18nFioriBundle.getText(NOTIFICATION_LIST_ITEM_CLOSE_BTN_TITLE);
  }
  get hideShowMore() {
    if (this.wrappingType === WrappingType_default.None && this._showMore) {
      return void 0;
    }
    return true;
  }
  get titleTextHeight() {
    return this.titleTextDOM.offsetHeight;
  }
  get descriptionHeight() {
    return this.descriptionDOM.offsetHeight;
  }
  get titleTextOverflows() {
    const titleText = this.titleTextDOM;
    if (!titleText) {
      return false;
    }
    return titleText.offsetHeight < titleText.scrollHeight;
  }
  get descriptionOverflows() {
    const description = this.descriptionDOM;
    if (!description) {
      return false;
    }
    return description.offsetHeight < description.scrollHeight;
  }
  get footerItems() {
    return this.footnotes.map((el, idx, arr) => {
      return {
        slotName: el._individualSlot,
        showDivider: idx !== arr.length - 1
      };
    });
  }
  get ariaLabelledBy() {
    const id = this._id;
    if (this.loading) {
      return `${id}-loading`;
    }
    const ids = [];
    if (this.hasImportance) {
      ids.push(`${id}-importance`);
    }
    if (this.hasTitleText) {
      ids.push(`${id}-title-text`);
    }
    ids.push(`${id}-read`);
    if (this.hasDesc) {
      ids.push(`${id}-description`);
    }
    if (this.hasFootNotes) {
      ids.push(`${id}-footnotes`);
    }
    return ids.join(" ");
  }
  get itemClasses() {
    const classes = ["ui5-nli-root", "ui5-nli-focusable"];
    if (this.getMenu() && this.showClose) {
      classes.push("ui5-nli-two-buttons");
    } else if (this.getMenu() || this.showClose) {
      classes.push("ui5-nli-one-button");
    }
    return classes.join(" ");
  }
  get statusIconName() {
    return ICON_PER_STATUS_NAME[this.state];
  }
  get statusIconDesign() {
    return ICON_PER_STATUS_DESIGN[this.state];
  }
  get importanceText() {
    let text;
    if (this.hasImportance) {
      text = NotificationListItem_1.i18nFioriBundle.getText(NOTIFICATION_LIST_ITEM_IMPORTANT_TXT);
    } else {
      text = "";
    }
    return text;
  }
  get stateText() {
    if (this.state === ValueState_default.Positive) {
      return NotificationListItem_1.i18nFioriBundle.getText(NOTIFICATION_LIST_ITEM_POSITIVE_STATUS_TXT);
    }
    if (this.state === ValueState_default.Critical) {
      return NotificationListItem_1.i18nFioriBundle.getText(NOTIFICATION_LIST_ITEM_CRITICAL_STATUS_TXT);
    }
    if (this.state === ValueState_default.Negative) {
      return NotificationListItem_1.i18nFioriBundle.getText(NOTIFICATION_LIST_ITEM_NEGATIVE_STATUS_TXT);
    }
    if (this.state === ValueState_default.Information) {
      return NotificationListItem_1.i18nFioriBundle.getText(NOTIFICATION_LIST_ITEM_INFORMATION_STATUS_TXT);
    }
    return "";
  }
  get readText() {
    return this.read ? NotificationListItem_1.i18nFioriBundle.getText(NOTIFICATION_LIST_ITEM_READ) : NotificationListItem_1.i18nFioriBundle.getText(NOTIFICATION_LIST_ITEM_UNREAD);
  }
  get menuButtonAccessibilityAttributes() {
    return {
      hasPopup: "menu"
    };
  }
  get moreLinkAccessibilityAttributes() {
    return {
      expanded: this._showMorePressed
    };
  }
  get showMenu() {
    return !!this.getMenu();
  }
  /**
   * Event handlers
   */
  _onclick() {
    this.fireItemPress();
  }
  _onShowMoreClick(e) {
    e.preventDefault();
    this._toggleShowMorePressed();
  }
  async _onkeydown(e) {
    await super._onkeydown(e);
    if (isF10Shift(e)) {
      e.preventDefault();
    }
  }
  _onkeyup(e) {
    super._onkeyup(e);
    const space = isSpace(e);
    if (space && this.getFocusDomRef().matches(":has(:focus-within)")) {
      e.preventDefault();
      this._toggleShowMorePressed();
      return;
    }
    if (isDelete(e)) {
      this.fireDecoratorEvent("close", { item: this });
    }
    if (isF10Shift(e)) {
      this._onBtnMenuClick();
    }
    if (isEnterShift(e)) {
      this._toggleShowMorePressed();
    }
  }
  _onBtnCloseClick() {
    this.fireDecoratorEvent("close", { item: this });
  }
  _onBtnMenuClick() {
    if (this.getMenu()) {
      this.openMenu();
    }
  }
  _toggleShowMorePressed() {
    this._showMorePressed = !this._showMorePressed;
  }
  openMenu() {
    const menu = this.getMenu();
    menu.opener = this.menuButtonDOM;
    menu.open = true;
  }
  getMenu() {
    const menu = this.querySelector("[ui5-menu]");
    return menu;
  }
  /**
   * Private
   */
  fireItemPress() {
    if (this.getFocusDomRef().matches(":has(:focus-within)")) {
      return;
    }
    this.fireDecoratorEvent("_press", { item: this });
  }
  onResize() {
    if (this.wrappingType === WrappingType_default.Normal) {
      this._showMore = false;
      return;
    }
    const titleTextWouldOverflow = this.titleTextHeight > this._titleTextOverflowHeight;
    const descWouldOverflow = this.hasDesc && this.descriptionHeight > this._descOverflowHeight;
    const overflows = titleTextWouldOverflow || descWouldOverflow;
    if (this._showMorePressed && overflows) {
      this._showMore = true;
      return;
    }
    if (this.titleTextOverflows || this.descriptionOverflows) {
      this._titleTextOverflowHeight = this.titleTextHeight;
      this._descOverflowHeight = this.hasDesc ? this.descriptionHeight : 0;
      this._showMore = true;
      return;
    }
    this._showMore = false;
  }
};
__decorate71([
  property_default()
], NotificationListItem.prototype, "wrappingType", void 0);
__decorate71([
  property_default()
], NotificationListItem.prototype, "state", void 0);
__decorate71([
  property_default({ type: Boolean })
], NotificationListItem.prototype, "showClose", void 0);
__decorate71([
  property_default()
], NotificationListItem.prototype, "importance", void 0);
__decorate71([
  property_default({ type: Boolean })
], NotificationListItem.prototype, "_showMorePressed", void 0);
__decorate71([
  property_default({ type: Boolean })
], NotificationListItem.prototype, "_showMore", void 0);
__decorate71([
  slot_default()
], NotificationListItem.prototype, "avatar", void 0);
__decorate71([
  slot_default()
], NotificationListItem.prototype, "menu", void 0);
__decorate71([
  slot_default({ type: HTMLElement, individualSlots: true })
], NotificationListItem.prototype, "footnotes", void 0);
__decorate71([
  slot_default({ type: Node, "default": true })
], NotificationListItem.prototype, "description", void 0);
__decorate71([
  query_default(".ui5-nli-title-text")
], NotificationListItem.prototype, "titleTextDOM", void 0);
__decorate71([
  query_default(".ui5-nli-menu-btn")
], NotificationListItem.prototype, "menuButtonDOM", void 0);
__decorate71([
  query_default(".ui5-nli-description")
], NotificationListItem.prototype, "descriptionDOM", void 0);
NotificationListItem = NotificationListItem_1 = __decorate71([
  customElement_default({
    tag: "ui5-li-notification",
    languageAware: true,
    styles: [
      NotificationListItem_css_default
    ],
    renderer: JsxRenderer_default,
    template: NotificationListItemTemplate2
  }),
  event_strict_default("_press", {
    bubbles: true
  }),
  event_strict_default("close", {
    bubbles: true
  })
], NotificationListItem);
NotificationListItem.define();

// node_modules/@ui5/webcomponents-react/dist/webComponents/NotificationListItem/index.js
var NotificationListItem3 = withWebComponent("ui5-li-notification", ["importance", "loadingDelay", "state", "titleText", "wrappingType"], ["loading", "read", "showClose"], ["avatar", "footnotes", "menu"], ["close"]);
NotificationListItem3.displayName = "NotificationListItem";

// node_modules/@ui5/webcomponents/dist/OptionTemplate.js
function OptionTemplate() {
  return ListItemBaseTemplate.call(this, { listItemContent: listItemContent4 }, { role: "option", title: this.tooltip });
}
function listItemContent4() {
  return jsxs("div", { part: "content", id: `${this._id}-content`, class: "ui5-li-content", children: [this.displayIconBegin && jsx(Icon_default, { part: "icon", name: this.icon, class: "ui5-li-icon", mode: "Decorative" }), jsxs("div", { class: "ui5-li-text-wrapper", children: [jsx("span", { part: "title", class: "ui5-li-title", children: jsx("slot", {}) }), this.additionalText && jsx("span", { part: "additional-text", class: "ui5-li-additional-text", children: this.additionalText })] })] });
}

// node_modules/@ui5/webcomponents/dist/generated/themes/OptionBase.css.js
registerThemePropertiesLoader("@ui5/webcomponents-theming", "sap_horizon", async () => parameters_bundle_css_default);
registerThemePropertiesLoader("@ui5/webcomponents", "sap_horizon", async () => parameters_bundle_css_default2);
var OptionBase_css_default = `:host{height:var(--_ui5-v2-8-0_list_item_dropdown_base_height)}
`;

// node_modules/@ui5/webcomponents/dist/generated/themes/ListItemIcon.css.js
registerThemePropertiesLoader("@ui5/webcomponents-theming", "sap_horizon", async () => parameters_bundle_css_default);
registerThemePropertiesLoader("@ui5/webcomponents", "sap_horizon", async () => parameters_bundle_css_default2);
var ListItemIcon_css_default = `.ui5-li-icon{color:var(--sapList_TextColor);min-width:var(--_ui5-v2-8-0_list_item_icon_size);min-height:var(--_ui5-v2-8-0_list_item_icon_size);padding-inline-end:var(--_ui5-v2-8-0_list_item_icon_padding-inline-end)}
`;

// node_modules/@ui5/webcomponents/dist/Option.js
var __decorate72 = function(decorators, target, key, desc) {
  var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
  if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
  else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
  return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var Option = class Option2 extends ListItemBase_default {
  get displayIconBegin() {
    return !!this.icon;
  }
  get effectiveDisplayText() {
    return this.textContent || "";
  }
};
__decorate72([
  slot_default({ type: Node, "default": true, invalidateOnChildChange: true })
], Option.prototype, "text", void 0);
__decorate72([
  property_default()
], Option.prototype, "value", void 0);
__decorate72([
  property_default()
], Option.prototype, "icon", void 0);
__decorate72([
  property_default()
], Option.prototype, "additionalText", void 0);
__decorate72([
  property_default()
], Option.prototype, "tooltip", void 0);
__decorate72([
  property_default({ type: Boolean })
], Option.prototype, "selected", void 0);
Option = __decorate72([
  customElement_default({
    tag: "ui5-option",
    template: OptionTemplate,
    styles: [
      ListItemBase_default.styles,
      ListItemAdditionalText_css_default,
      ListItemIcon_css_default,
      OptionBase_css_default
    ]
  })
], Option);
Option.define();
var Option_default = Option;

// node_modules/@ui5/webcomponents-react/dist/webComponents/Option/index.js
var Option3 = withWebComponent("ui5-option", ["additionalText", "icon", "tooltip", "value"], ["selected"], [], []);
Option3.displayName = "Option";

// node_modules/@ui5/webcomponents/dist/OptionCustomTemplate.js
function OptionCustomTemplate() {
  return ListItemBaseTemplate.call(this, { listItemContent: listItemContent5 }, { role: "option", title: this.tooltip });
}
function listItemContent5() {
  return jsx("slot", {});
}

// node_modules/@ui5/webcomponents/dist/OptionCustom.js
var __decorate73 = function(decorators, target, key, desc) {
  var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
  if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
  else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
  return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var OptionCustom = class OptionCustom2 extends ListItemBase_default {
  get effectiveDisplayText() {
    return this.displayText || this.textContent || "";
  }
};
__decorate73([
  property_default()
], OptionCustom.prototype, "displayText", void 0);
__decorate73([
  property_default()
], OptionCustom.prototype, "value", void 0);
__decorate73([
  slot_default({ type: Node, "default": true, invalidateOnChildChange: true })
], OptionCustom.prototype, "content", void 0);
__decorate73([
  property_default()
], OptionCustom.prototype, "tooltip", void 0);
__decorate73([
  property_default({ type: Boolean })
], OptionCustom.prototype, "selected", void 0);
OptionCustom = __decorate73([
  customElement_default({
    tag: "ui5-option-custom",
    template: OptionCustomTemplate,
    styles: [
      ListItemBase_default.styles,
      OptionBase_css_default
    ]
  })
], OptionCustom);
OptionCustom.define();

// node_modules/@ui5/webcomponents-react/dist/webComponents/OptionCustom/index.js
var OptionCustom3 = withWebComponent("ui5-option-custom", ["displayText", "tooltip", "value"], ["selected"], [], []);
OptionCustom3.displayName = "OptionCustom";

// node_modules/@ui5/webcomponents-fiori/dist/PageTemplate.js
function PageTemplate() {
  return jsxs("div", { class: "ui5-page-root", children: [jsx("header", { id: "ui5-page-header", class: "ui5-page-header-root", children: jsx("slot", { name: "header" }) }), jsx("section", { part: "content", class: "ui5-page-content-root", style: {
    "padding-bottom": this.footer.length && this._contentPaddingBottom,
    "scroll-padding-bottom": this.footer.length && this._contentPaddingBottom,
    "bottom": this.footer.length && this._contentBottom,
    "top": this._contentTop
  }, children: jsx("slot", {}) }), jsx("footer", { class: "ui5-page-footer-root", children: jsx("slot", { name: "footer" }) })] });
}

// node_modules/@ui5/webcomponents-fiori/dist/generated/themes/Page.css.js
registerThemePropertiesLoader("@ui5/webcomponents-theming", "sap_horizon", async () => parameters_bundle_css_default);
registerThemePropertiesLoader("@ui5/webcomponents-fiori", "sap_horizon", async () => parameters_bundle_css_default3);
var Page_css_default = `:host(:not([hidden])){width:100%;height:100%;display:block;container-type:size}.ui5-page-root{height:inherit;overflow:hidden;position:relative;z-index:0;box-sizing:border-box;background-color:inherit}.ui5-page-header-root{z-index:1}.ui5-page-content-root{overflow:hidden auto;position:absolute;will-change:scroll-position;width:100%;top:2.75rem;bottom:0;box-sizing:border-box;font-size:var(--sapFontSize);color:var(--sapTextColor)}.ui5-page-footer-root{box-sizing:border-box;position:absolute;bottom:0;left:0;z-index:2;width:100%}:host(:not([fixed-footer])) .ui5-page-footer-root{opacity:1;bottom:.5rem}::slotted([ui5-bar][slot="footer"][design="FloatingFooter"]){margin:auto;padding:0}@container (max-width: 599px){:host([floating-footer]) .ui5-page-footer-root,.ui5-page-content-root{padding:0 1rem}::slotted([ui5-bar][slot="header"]),::slotted([ui5-bar][design="Footer"]){box-sizing:border-box;padding:0 .25rem}::slotted([ui5-bar][design="FloatingFooter"]){width:calc(100% - .5rem)}}@container (min-width: 600px) and (max-width: 1023px){:host([floating-footer]) .ui5-page-footer-root,.ui5-page-content-root{padding:0 2rem}::slotted([ui5-bar][slot="header"]),::slotted([ui5-bar][slot="footer"]){box-sizing:border-box;padding:0 1.25rem}::slotted([ui5-bar][design="FloatingFooter"]){width:calc(100% - 2.5rem)}}@container (min-width: 1024px) and (max-width: 1439px){:host([floating-footer]) .ui5-page-footer-root,.ui5-page-content-root{padding:0 2rem}::slotted([ui5-bar][slot="header"]),::slotted([ui5-bar][slot="footer"]){box-sizing:border-box;padding:0 1.25rem}::slotted([ui5-bar][design="FloatingFooter"]){width:calc(100% - 2.5rem)}}@container (min-width: 1440px){:host([floating-footer]) .ui5-page-footer-root,.ui5-page-content-root{padding:0 3rem}::slotted([ui5-bar][slot="header"]),::slotted([ui5-bar][slot="footer"]){box-sizing:border-box;padding:0 2.25rem}::slotted([ui5-bar][design="FloatingFooter"]){width:calc(100% - 4.5rem)}}:host([no-scrolling]) .ui5-page-content-root{overflow:hidden}:host([hide-footer][fixed-footer]) .ui5-page-footer-root{display:none}:host(:not([fixed-footer]):not([hide-footer])) .ui5-page-footer-root{animation:bounceShow var(--_ui5-v2-8-0-page-animation-duration) forwards ease-in-out}:host(:not([fixed-footer])[hide-footer]) .ui5-page-footer-root{animation:bounceHide var(--_ui5-v2-8-0-page-animation-duration) forwards ease-in-out}:host([background-design="Solid"]){background-color:var(--sapBackgroundColor)}:host([background-design="Transparent"]){background-color:var(--_ui5-v2-8-0_page_transparent_bg)}:host([background-design="List"]){background-color:var(--_ui5-v2-8-0_page_list_bg)}@keyframes bounceShow{0%{transform:translateY(100%);opacity:0}to{opacity:1}}@keyframes bounceHide{0%{transform:translateY(-5%);opacity:1}to{transform:translateY(100%);opacity:0}}
`;

// node_modules/@ui5/webcomponents-fiori/dist/Page.js
var __decorate74 = function(decorators, target, key, desc) {
  var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
  if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
  else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
  return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var Page = class Page2 extends UI5Element_default {
  constructor() {
    super();
    this.backgroundDesign = "Solid";
    this.noScrolling = false;
    this.fixedFooter = false;
    this.hideFooter = false;
  }
  onEnterDOM() {
    this.style.setProperty(getScopedVarName("--_ui5-page-animation-duration"), getAnimationMode2() === AnimationMode_default.None ? "0s" : "0.35s");
  }
  get _contentBottom() {
    return this.fixedFooter && !this.hideFooter ? "2.75rem" : "0";
  }
  get _contentPaddingBottom() {
    return !this.fixedFooter && !this.hideFooter ? "3.5rem" : "0";
  }
  get _contentTop() {
    return this.header.length ? "2.75rem" : "0rem";
  }
  get styles() {
    return {
      content: {
        "padding-bottom": this.footer.length && this._contentPaddingBottom,
        "scroll-padding-bottom": this.footer.length && this._contentPaddingBottom,
        "bottom": this.footer.length && this._contentBottom,
        "top": this._contentTop
      }
    };
  }
};
__decorate74([
  property_default()
], Page.prototype, "backgroundDesign", void 0);
__decorate74([
  property_default({ type: Boolean })
], Page.prototype, "noScrolling", void 0);
__decorate74([
  property_default({ type: Boolean })
], Page.prototype, "fixedFooter", void 0);
__decorate74([
  property_default({ type: Boolean })
], Page.prototype, "hideFooter", void 0);
__decorate74([
  slot_default()
], Page.prototype, "header", void 0);
__decorate74([
  slot_default({ type: Node, "default": true })
], Page.prototype, "content", void 0);
__decorate74([
  slot_default()
], Page.prototype, "footer", void 0);
Page = __decorate74([
  customElement_default({
    tag: "ui5-page",
    languageAware: true,
    renderer: JsxRenderer_default,
    styles: [
      Page_css_default,
      getEffectiveScrollbarStyle_default()
    ],
    template: PageTemplate
  })
], Page);
Page.define();

// node_modules/@ui5/webcomponents-react/dist/webComponents/Page/index.js
var Page3 = withWebComponent("ui5-page", ["backgroundDesign"], ["fixedFooter", "hideFooter", "noScrolling"], ["footer", "header"], []);
Page3.displayName = "Page";

// node_modules/@ui5/webcomponents-base/dist/animations/slideDown.js
var slideDown = (element) => {
  let computedStyles, paddingTop, paddingBottom, marginTop, marginBottom, height;
  let storedOverflow, storedPaddingTop, storedPaddingBottom, storedMarginTop, storedMarginBottom, storedHeight;
  const animation = animate_default({
    beforeStart: () => {
      element.style.display = "block";
      computedStyles = getComputedStyle(element);
      paddingTop = parseFloat(computedStyles.paddingTop);
      paddingBottom = parseFloat(computedStyles.paddingBottom);
      marginTop = parseFloat(computedStyles.marginTop);
      marginBottom = parseFloat(computedStyles.marginBottom);
      height = parseFloat(computedStyles.height);
      storedOverflow = element.style.overflow;
      storedPaddingTop = element.style.paddingTop;
      storedPaddingBottom = element.style.paddingBottom;
      storedMarginTop = element.style.marginTop;
      storedMarginBottom = element.style.marginBottom;
      storedHeight = element.style.height;
      element.style.overflow = "hidden";
      element.style.paddingTop = "0";
      element.style.paddingBottom = "0";
      element.style.marginTop = "0";
      element.style.marginBottom = "0";
      element.style.height = "0";
    },
    duration,
    element,
    advance: (progress) => {
      element.style.display = "block";
      element.style.paddingTop = `${paddingTop * progress}px`;
      element.style.paddingBottom = `${paddingBottom * progress}px`;
      element.style.marginTop = `${marginTop * progress}px`;
      element.style.marginBottom = `${marginBottom * progress}px`;
      element.style.height = `${height * progress}px`;
    }
  });
  animation.promise().then(() => {
    element.style.overflow = storedOverflow;
    element.style.paddingTop = storedPaddingTop;
    element.style.paddingBottom = storedPaddingBottom;
    element.style.marginTop = storedMarginTop;
    element.style.marginBottom = storedMarginBottom;
    element.style.height = storedHeight;
  });
  return animation;
};
var slideDown_default = slideDown;

// node_modules/@ui5/webcomponents-base/dist/animations/slideUp.js
var slideUp = (element) => {
  let computedStyles, paddingTop, paddingBottom, marginTop, marginBottom, height;
  let storedOverflow, storedPaddingTop, storedPaddingBottom, storedMarginTop, storedMarginBottom, storedHeight;
  const animation = animate_default({
    beforeStart: () => {
      const el = element;
      computedStyles = getComputedStyle(el);
      paddingTop = parseFloat(computedStyles.paddingTop);
      paddingBottom = parseFloat(computedStyles.paddingBottom);
      marginTop = parseFloat(computedStyles.marginTop);
      marginBottom = parseFloat(computedStyles.marginBottom);
      height = parseFloat(computedStyles.height);
      storedOverflow = el.style.overflow;
      storedPaddingTop = el.style.paddingTop;
      storedPaddingBottom = el.style.paddingBottom;
      storedMarginTop = el.style.marginTop;
      storedMarginBottom = el.style.marginBottom;
      storedHeight = el.style.height;
      el.style.overflow = "hidden";
    },
    duration,
    element,
    advance: (progress) => {
      element.style.paddingTop = `${paddingTop - paddingTop * progress}px`;
      element.style.paddingBottom = `${paddingBottom - paddingBottom * progress}px`;
      element.style.marginTop = `${marginTop - marginTop * progress}px`;
      element.style.marginBottom = `${marginBottom - marginBottom * progress}px`;
      element.style.height = `${height - height * progress}px`;
    }
  });
  animation.promise().then((reason) => {
    if (!(reason instanceof Error)) {
      element.style.overflow = storedOverflow;
      element.style.paddingTop = storedPaddingTop;
      element.style.paddingBottom = storedPaddingBottom;
      element.style.marginTop = storedMarginTop;
      element.style.marginBottom = storedMarginBottom;
      element.style.height = storedHeight;
      element.style.display = "none";
    }
  });
  return animation;
};
var slideUp_default = slideUp;

// node_modules/@ui5/webcomponents/dist/PanelTemplate.js
function PanelTemplate() {
  return jsx(Fragment, { children: jsxs("div", { class: "ui5-panel-root", role: this.accRole, "aria-label": this.effectiveAccessibleName, "aria-labelledby": this.fixedPanelAriaLabelledbyReference, children: [this.hasHeaderOrHeaderText && // header: either header or h1 with header text
  jsx("div", { class: {
    "ui5-panel-heading-wrapper": true,
    "ui5-panel-heading-wrapper-sticky": this.stickyHeader
  }, role: this.headingWrapperRole, "aria-level": this.headingWrapperAriaLevel, children: jsxs("div", { onClick: this._headerClick, onKeyDown: this._headerKeyDown, onKeyUp: this._headerKeyUp, class: "ui5-panel-header", tabindex: this.headerTabIndex, role: this.accInfo.role, "aria-expanded": this.accInfo.ariaExpanded, "aria-controls": this.accInfo.ariaControls, "aria-labelledby": this.accInfo.ariaLabelledby, part: "header", children: [!this.fixed && jsx("div", { class: "ui5-panel-header-button-root", children: this._hasHeader ? jsx(Button_default, { design: "Transparent", class: "ui5-panel-header-button ui5-panel-header-button-with-icon", onClick: this._toggleButtonClick, accessibilityAttributes: this.accInfo.button.accessibilityAttributes, tooltip: this.accInfo.button.title, accessibleName: this.accInfo.button.ariaLabelButton, children: jsx("div", { class: "ui5-panel-header-icon-wrapper", children: jsx(Icon_default, { class: {
    "ui5-panel-header-icon": true,
    "ui5-panel-header-button-animated": !this.shouldNotAnimate
  }, name: slim_arrow_right_default }) }) }) : (
    // else
    jsx(Icon_default, { class: {
      "ui5-panel-header-button": true,
      "ui5-panel-header-icon": true,
      "ui5-panel-header-button-animated": !this.shouldNotAnimate
    }, name: slim_arrow_right_default, showTooltip: true, accessibleName: this.toggleButtonTitle })
  ) }), this._hasHeader ? jsx("slot", { name: "header" }) : (
    // else
    jsx("div", { id: `${this._id}-header-title`, class: "ui5-panel-header-title", children: this.headerText })
  )] }) }), jsx("div", { class: "ui5-panel-content", id: `${this._id}-content`, tabindex: -1, style: {
    display: this._contentExpanded ? "block" : "none"
  }, part: "content", children: jsx("slot", {}) })] }) });
}

// node_modules/@ui5/webcomponents/dist/generated/themes/Panel.css.js
registerThemePropertiesLoader("@ui5/webcomponents-theming", "sap_horizon", async () => parameters_bundle_css_default);
registerThemePropertiesLoader("@ui5/webcomponents", "sap_horizon", async () => parameters_bundle_css_default2);
var Panel_css_default = `.ui5-hidden-text{position:absolute;clip:rect(1px,1px,1px,1px);user-select:none;left:-1000px;top:-1000px;pointer-events:none;font-size:0}:host(:not([hidden])){display:block}:host{font-family:"72override",var(--sapFontFamily);background-color:var(--sapGroup_TitleBackground);border-radius:var(--_ui5-v2-8-0_panel_border_radius)}:host(:not([collapsed])){border-bottom:var(--_ui5-v2-8-0_panel_border_bottom)}:host([fixed]) .ui5-panel-header{padding-left:1rem}.ui5-panel-header{min-height:var(--_ui5-v2-8-0_panel_header_height);width:100%;position:relative;display:flex;justify-content:flex-start;align-items:center;outline:none;box-sizing:border-box;padding-right:var(--_ui5-v2-8-0_panel_header_padding_right);font-family:"72override",var(--sapFontHeaderFamily);font-size:var(--sapGroup_Title_FontSize);font-weight:400;color:var(--sapGroup_TitleTextColor)}.ui5-panel-header-icon{color:var(--_ui5-v2-8-0_panel_icon_color)}.ui5-panel-header-button-animated{transition:transform .4s ease-out}:host(:not([_has-header]):not([fixed])) .ui5-panel-header{cursor:pointer}:host(:not([_has-header]):not([fixed])) .ui5-panel-header:focus:after{content:"";position:absolute;pointer-events:none;z-index:2;border:var(--_ui5-v2-8-0_panel_focus_border);border-radius:var(--_ui5-v2-8-0_panel_border_radius);top:var(--_ui5-v2-8-0_panel_focus_offset);bottom:var(--_ui5-v2-8-0_panel_focus_bottom_offset);left:var(--_ui5-v2-8-0_panel_focus_offset);right:var(--_ui5-v2-8-0_panel_focus_offset)}:host(:not([collapsed]):not([_has-header]):not([fixed])) .ui5-panel-header:focus:after{border-radius:var(--_ui5-v2-8-0_panel_border_radius_expanded)}:host(:not([collapsed])) .ui5-panel-header-button:not(.ui5-panel-header-button-with-icon),:host(:not([collapsed])) .ui5-panel-header-icon-wrapper [ui5-icon]{transform:var(--_ui5-v2-8-0_panel_toggle_btn_rotation)}:host([fixed]) .ui5-panel-header-title{width:100%}.ui5-panel-heading-wrapper.ui5-panel-heading-wrapper-sticky{position:sticky;top:0;background-color:var(--_ui5-v2-8-0_panel_header_background_color);z-index:100;border-radius:var(--_ui5-v2-8-0_panel_border_radius)}.ui5-panel-header-title{width:calc(100% - var(--_ui5-v2-8-0_panel_button_root_width));overflow:hidden;text-overflow:ellipsis;white-space:nowrap}.ui5-panel-content{padding:var(--_ui5-v2-8-0_panel_content_padding);background-color:var(--sapGroup_ContentBackground);outline:none;border-bottom-left-radius:var(--_ui5-v2-8-0_panel_border_radius);border-bottom-right-radius:var(--_ui5-v2-8-0_panel_border_radius);overflow:auto}.ui5-panel-header-button-root{display:flex;justify-content:center;align-items:center;flex-shrink:0;width:var(--_ui5-v2-8-0_panel_button_root_width);height:var(--_ui5-v2-8-0_panel_button_root_height);padding:var(--_ui5-v2-8-0_panel_header_button_wrapper_padding);box-sizing:border-box}:host([fixed]:not([collapsed]):not([_has-header])) .ui5-panel-header,:host([collapsed]) .ui5-panel-header{border-bottom:.0625rem solid var(--sapGroup_TitleBorderColor)}:host([collapsed]) .ui5-panel-header{border-bottom-left-radius:var(--_ui5-v2-8-0_panel_border_radius);border-bottom-right-radius:var(--_ui5-v2-8-0_panel_border_radius)}:host(:not([fixed]):not([collapsed])) .ui5-panel-header{border-bottom:var(--_ui5-v2-8-0_panel_default_header_border)}[ui5-button].ui5-panel-header-button{display:flex;justify-content:center;align-items:center;min-width:initial;height:100%;width:100%}.ui5-panel-header-icon-wrapper{display:flex;justify-content:center;align-items:center}.ui5-panel-header-icon-wrapper,.ui5-panel-header-icon-wrapper .ui5-panel-header-icon{color:inherit}.ui5-panel-header-icon-wrapper,[ui5-button].ui5-panel-header-button-with-icon [ui5-icon]{pointer-events:none}.ui5-panel-root{height:100%;display:flex;flex-direction:column}
`;

// node_modules/@ui5/webcomponents/dist/Panel.js
var __decorate75 = function(decorators, target, key, desc) {
  var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
  if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
  else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
  return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var Panel_1;
var Panel = Panel_1 = class Panel2 extends UI5Element_default {
  constructor() {
    super(...arguments);
    this.fixed = false;
    this.collapsed = false;
    this.noAnimation = false;
    this.accessibleRole = "Form";
    this.headerLevel = "H2";
    this.stickyHeader = false;
    this.useAccessibleNameForToggleButton = false;
    this._hasHeader = false;
    this._contentExpanded = false;
    this._animationRunning = false;
  }
  onBeforeRendering() {
    if (!this._animationRunning) {
      this._contentExpanded = !this.collapsed;
    }
    this._hasHeader = !!this.header.length;
  }
  shouldToggle(element) {
    const customContent = this.header.length;
    if (customContent) {
      return element.classList.contains("ui5-panel-header-button");
    }
    return true;
  }
  get shouldNotAnimate() {
    return this.noAnimation || getAnimationMode2() === AnimationMode_default.None;
  }
  _headerClick(e) {
    if (!this.shouldToggle(e.target)) {
      return;
    }
    this._toggleOpen();
  }
  _toggleButtonClick(e) {
    if (e.x === 0 && e.y === 0) {
      e.stopImmediatePropagation();
    }
  }
  _headerKeyDown(e) {
    if (!this.shouldToggle(e.target)) {
      return;
    }
    if (isEnter(e)) {
      e.preventDefault();
    }
    if (isSpace(e)) {
      e.preventDefault();
    }
  }
  _headerKeyUp(e) {
    if (!this.shouldToggle(e.target)) {
      return;
    }
    if (isEnter(e)) {
      this._toggleOpen();
    }
    if (isSpace(e)) {
      this._toggleOpen();
    }
  }
  _toggleOpen() {
    if (this.fixed) {
      return;
    }
    this.collapsed = !this.collapsed;
    if (this.shouldNotAnimate) {
      this.fireDecoratorEvent("toggle");
      return;
    }
    this._animationRunning = true;
    const elements = this.getDomRef().querySelectorAll(".ui5-panel-content");
    const animations = [];
    [].forEach.call(elements, (oElement) => {
      if (this.collapsed) {
        animations.push(slideUp_default(oElement).promise());
      } else {
        animations.push(slideDown_default(oElement).promise());
      }
    });
    Promise.all(animations).then(() => {
      this._animationRunning = false;
      this._contentExpanded = !this.collapsed;
      this.fireDecoratorEvent("toggle");
    });
  }
  _headerOnTarget(target) {
    return target.classList.contains("sapMPanelWrappingDiv");
  }
  get toggleButtonTitle() {
    return Panel_1.i18nBundle.getText(PANEL_ICON);
  }
  get expanded() {
    return !this.collapsed;
  }
  get accRole() {
    return this.accessibleRole.toLowerCase();
  }
  get effectiveAccessibleName() {
    return typeof this.accessibleName === "string" && this.accessibleName.length ? this.accessibleName : void 0;
  }
  get accInfo() {
    return {
      "button": {
        "accessibilityAttributes": {
          "expanded": this.expanded
        },
        "title": this.toggleButtonTitle,
        "ariaLabelButton": !this.nonFocusableButton && this.useAccessibleNameForToggleButton ? this.effectiveAccessibleName : void 0
      },
      "ariaExpanded": this.nonFixedInternalHeader ? this.expanded : void 0,
      "ariaControls": this.nonFixedInternalHeader ? `${this._id}-content` : void 0,
      "ariaLabelledby": this.nonFocusableButton ? this.ariaLabelledbyReference : void 0,
      "role": this.nonFixedInternalHeader ? "button" : void 0
    };
  }
  get ariaLabelledbyReference() {
    return this.nonFocusableButton && this.headerText && !this.fixed ? `${this._id}-header-title` : void 0;
  }
  get fixedPanelAriaLabelledbyReference() {
    return this.fixed && !this.effectiveAccessibleName ? `${this._id}-header-title` : void 0;
  }
  get headerAriaLevel() {
    return Number.parseInt(this.headerLevel.slice(1));
  }
  get headerTabIndex() {
    return this.header.length || this.fixed ? -1 : 0;
  }
  get headingWrapperAriaLevel() {
    return !this._hasHeader ? this.headerAriaLevel : void 0;
  }
  get headingWrapperRole() {
    return !this._hasHeader ? "heading" : void 0;
  }
  get nonFixedInternalHeader() {
    return !this._hasHeader && !this.fixed;
  }
  get hasHeaderOrHeaderText() {
    return this._hasHeader || this.headerText;
  }
  get nonFocusableButton() {
    return !this.header.length;
  }
};
__decorate75([
  property_default()
], Panel.prototype, "headerText", void 0);
__decorate75([
  property_default({ type: Boolean })
], Panel.prototype, "fixed", void 0);
__decorate75([
  property_default({ type: Boolean })
], Panel.prototype, "collapsed", void 0);
__decorate75([
  property_default({ type: Boolean })
], Panel.prototype, "noAnimation", void 0);
__decorate75([
  property_default()
], Panel.prototype, "accessibleRole", void 0);
__decorate75([
  property_default()
], Panel.prototype, "headerLevel", void 0);
__decorate75([
  property_default()
], Panel.prototype, "accessibleName", void 0);
__decorate75([
  property_default({ type: Boolean })
], Panel.prototype, "stickyHeader", void 0);
__decorate75([
  property_default({ type: Boolean })
], Panel.prototype, "useAccessibleNameForToggleButton", void 0);
__decorate75([
  property_default({ type: Boolean })
], Panel.prototype, "_hasHeader", void 0);
__decorate75([
  property_default({ type: Boolean, noAttribute: true })
], Panel.prototype, "_contentExpanded", void 0);
__decorate75([
  property_default({ type: Boolean, noAttribute: true })
], Panel.prototype, "_animationRunning", void 0);
__decorate75([
  slot_default()
], Panel.prototype, "header", void 0);
__decorate75([
  i18n_default("@ui5/webcomponents")
], Panel, "i18nBundle", void 0);
Panel = Panel_1 = __decorate75([
  customElement_default({
    tag: "ui5-panel",
    fastNavigation: true,
    languageAware: true,
    renderer: JsxRenderer_default,
    template: PanelTemplate,
    styles: Panel_css_default
  }),
  event_strict_default("toggle", {
    bubbles: true
  })
], Panel);
Panel.define();
var Panel_default = Panel;

// node_modules/@ui5/webcomponents-react/dist/webComponents/Panel/index.js
var Panel3 = withWebComponent("ui5-panel", ["accessibleName", "accessibleRole", "headerLevel", "headerText"], ["collapsed", "fixed", "noAnimation", "stickyHeader"], ["header"], ["toggle"]);
Panel3.displayName = "Panel";

// node_modules/@ui5/webcomponents-react/dist/webComponents/Popover/index.js
var Popover = withWebComponent("ui5-popover", ["accessibleName", "accessibleNameRef", "accessibleRole", "headerText", "horizontalAlign", "initialFocus", "opener", "placement", "verticalAlign"], ["allowTargetOverlap", "hideArrow", "modal", "open", "preventFocusRestore", "preventInitialFocus"], ["footer", "header"], ["before-close", "before-open", "close", "open"]);
Popover.displayName = "Popover";

// node_modules/@ui5/webcomponents-fiori/dist/ProductSwitchTemplate.js
function ProductSwitchTemplate() {
  return jsx("div", { role: "list", class: "ui5-product-switch-root", "aria-label": this._ariaLabelText, onFocusIn: this._onfocusin, onKeyDown: this._onkeydown, onClick: this.handleProductSwitchItemClick, children: jsx("slot", {}) });
}

// node_modules/@ui5/webcomponents-fiori/dist/generated/themes/ProductSwitch.css.js
registerThemePropertiesLoader("@ui5/webcomponents-theming", "sap_horizon", async () => parameters_bundle_css_default);
registerThemePropertiesLoader("@ui5/webcomponents-fiori", "sap_horizon", async () => parameters_bundle_css_default3);
var ProductSwitch_css_default = `:host{font-family:"72override",var(--sapFontFamily);font-size:var(--sapFontSize)}.ui5-product-switch-root{display:flex;flex-wrap:wrap;justify-content:inherit;align-items:inherit;width:752px;padding:1.25rem .75rem}:host([desktop-columns="3"]) .ui5-product-switch-root{width:564px}@media only screen and (max-width: 900px){.ui5-product-switch-root{width:564px}}@media only screen and (max-width: 600px){.ui5-product-switch-root,:host([desktop-columns="3"]) .ui5-product-switch-root{flex-direction:column;padding:0;width:100%}}
`;

// node_modules/@ui5/webcomponents-fiori/dist/ProductSwitch.js
var __decorate76 = function(decorators, target, key, desc) {
  var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
  if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
  else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
  return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var ProductSwitch_1;
var ProductSwitch = ProductSwitch_1 = class ProductSwitch2 extends UI5Element_default {
  constructor() {
    super();
    this._currentIndex = 0;
    this._rowSize = 4;
    this._itemNavigation = new ItemNavigation_default(this, {
      rowSize: this._rowSize,
      getItemsCallback: () => this.items
    });
    this._handleResizeBound = this._handleResize.bind(this);
  }
  static get ROW_MIN_WIDTH() {
    return {
      ONE_COLUMN: 600,
      THREE_COLUMN: 900
    };
  }
  get _ariaLabelText() {
    return ProductSwitch_1.i18nBundle.getText(PRODUCT_SWITCH_CONTAINER_LABEL);
  }
  onEnterDOM() {
    ResizeHandler_default.register(document.body, this._handleResizeBound);
  }
  onExitDOM() {
    ResizeHandler_default.deregister(document.body, this._handleResizeBound);
  }
  onBeforeRendering() {
    this.desktopColumns = this.items.length > 6 ? 4 : 3;
  }
  _handleResize() {
    const documentWidth = document.body.clientWidth;
    if (documentWidth <= this.constructor.ROW_MIN_WIDTH.ONE_COLUMN) {
      this._setRowSize(1);
    } else if (documentWidth <= this.constructor.ROW_MIN_WIDTH.THREE_COLUMN || this.items.length <= 6) {
      this._setRowSize(3);
    } else {
      this._setRowSize(4);
    }
  }
  handleProductSwitchItemClick(e) {
    this.items.forEach((item2) => {
      item2.selected = false;
    });
    e.target.selected = true;
  }
  _onfocusin(e) {
    const target = e.target;
    this._itemNavigation.setCurrentItem(target);
    this._currentIndex = this.items.indexOf(target);
  }
  _setRowSize(size) {
    this._rowSize = size;
    this._itemNavigation.setRowSize(size);
  }
  _onkeydown(e) {
    if (isDown(e)) {
      this._handleDown(e);
    } else if (isUp(e)) {
      this._handleUp(e);
    }
  }
  _handleDown(e) {
    const itemsLength = this.items.length;
    if (this._currentIndex + this._rowSize > itemsLength) {
      e.stopPropagation();
    }
  }
  _handleUp(e) {
    if (this._currentIndex - this._rowSize < 0) {
      e.stopPropagation();
    }
  }
};
__decorate76([
  property_default({ type: Number })
], ProductSwitch.prototype, "desktopColumns", void 0);
__decorate76([
  slot_default({ type: HTMLElement, "default": true })
], ProductSwitch.prototype, "items", void 0);
__decorate76([
  i18n_default("@ui5/webcomponents-fiori")
], ProductSwitch, "i18nBundle", void 0);
ProductSwitch = ProductSwitch_1 = __decorate76([
  customElement_default({
    tag: "ui5-product-switch",
    renderer: JsxRenderer_default,
    styles: ProductSwitch_css_default,
    template: ProductSwitchTemplate
  })
], ProductSwitch);
ProductSwitch.define();

// node_modules/@ui5/webcomponents-react/dist/webComponents/ProductSwitch/index.js
var ProductSwitch3 = withWebComponent("ui5-product-switch", [], [], [], []);
ProductSwitch3.displayName = "ProductSwitch";

// node_modules/@ui5/webcomponents-fiori/dist/ProductSwitchItemTemplate.js
function ProductSwitchItemTemplate() {
  return jsx(Fragment, { children: this.targetSrc ? jsx("a", { "data-sap-focus-ref": true, class: "ui5-product-switch-item-root", onFocusOut: this._onfocusout, onFocusIn: this._onfocusin, onMouseDown: this._onmousedown, onKeyDown: this._onkeydown, onKeyUp: this._onkeyup, tabindex: this.forcedTabIndex ? parseInt(this.forcedTabIndex) : void 0, href: this.targetSrc, target: this._effectiveTarget, children: item.call(this) }) : jsx("div", { role: "listitem", class: "ui5-product-switch-item-root", "data-sap-focus-ref": true, onFocusOut: this._onfocusout, onFocusIn: this._onfocusin, onMouseDown: this._onmousedown, onKeyDown: this._onkeydown, onKeyUp: this._onkeyup, tabindex: this.forcedTabIndex ? parseInt(this.forcedTabIndex) : void 0, children: item.call(this) }) });
}
function item() {
  return jsxs(Fragment, { children: [this.icon && jsx(Icon_default, { class: "ui5-product-switch-item-icon", name: this.icon }), jsxs("span", { class: "ui5-product-switch-item-text-content", children: [this.titleText && jsx("span", { class: "ui5-product-switch-item-title", children: this.titleText }), this.subtitleText && jsx("span", { class: "ui5-product-switch-item-subtitle", children: this.subtitleText })] })] });
}

// node_modules/@ui5/webcomponents-fiori/dist/generated/themes/ProductSwitchItem.css.js
registerThemePropertiesLoader("@ui5/webcomponents-theming", "sap_horizon", async () => parameters_bundle_css_default);
registerThemePropertiesLoader("@ui5/webcomponents-fiori", "sap_horizon", async () => parameters_bundle_css_default3);
var ProductSwitchItem_css_default = `:host{width:var(--_ui5-v2-8-0_product_switch_item_width);height:var(--_ui5-v2-8-0_product_switch_item_height);margin:.25rem;border-radius:.25rem;box-sizing:border-box;background:var(--sapList_Background)}:host([selected]) .ui5-product-switch-item-root{background:var(--sapList_SelectionBackgroundColor);border:.125rem solid var(--sapList_SelectionBorderColor)}:host(:hover) .ui5-product-switch-item-root{background:var(--sapList_Hover_Background)}:host([selected]:hover) .ui5-product-switch-item-root{background:var(--sapList_Hover_SelectionBackground)}:host([active]) .ui5-product-switch-item-root,:host([selected][active]) .ui5-product-switch-item-root{background:var(--sapList_Active_Background)}:host([active]) .ui5-product-switch-item-root .ui5-product-switch-item-icon,:host([active]) .ui5-product-switch-item-root .ui5-product-switch-item-text-content .ui5-product-switch-item-title,:host([active]) .ui5-product-switch-item-root .ui5-product-switch-item-text-content .ui5-product-switch-item-subtitle{color:var(--sapList_Active_TextColor)}:host([desktop]) .ui5-product-switch-item-root:focus,.ui5-product-switch-item-root:focus-visible{outline:var(--sapContent_FocusWidth) var(--sapContent_FocusStyle) var(--sapContent_FocusColor);outline-offset:var(--_ui5-v2-8-0_product_switch_item_outline_offset)}:host([desktop][active]) .ui5-product-switch-item-root:focus,:host([active]) .ui5-product-switch-item-root:focus-visible{outline-color:var(--_ui5-v2-8-0_product_switch_item_active_outline_color)}.ui5-product-switch-item-root{user-select:none;width:100%;height:100%;flex-direction:column;display:flex;align-items:center;text-decoration:none;outline:none;box-sizing:border-box;padding:4rem .5rem .5rem;cursor:pointer;border:var(--_ui5-v2-8-0_product_switch_item_border)}:host([icon]) .ui5-product-switch-item-root{padding-top:.5rem}:host([selected]) .ui5-product-switch-item-root{padding:.375rem}.ui5-product-switch-item-root .ui5-product-switch-item-icon{width:3rem;height:3rem;padding:.75rem;margin-bottom:.5rem;box-sizing:border-box;color:var(--sapContent_IconColor);pointer-events:none}.ui5-product-switch-item-root .ui5-product-switch-item-text-content{display:flex;align-items:center;flex-direction:column;max-width:10.25rem}.ui5-product-switch-item-root .ui5-product-switch-item-text-content .ui5-product-switch-item-subtitle,.ui5-product-switch-item-root .ui5-product-switch-item-text-content .ui5-product-switch-item-title{line-height:1.25rem;white-space:nowrap;overflow:hidden;text-overflow:ellipsis;max-width:100%;pointer-events:none;text-align:center}.ui5-product-switch-item-root .ui5-product-switch-item-text-content .ui5-product-switch-item-title{font-size:var( --sapFontHeader6Size);color:var(--sapGroup_TitleTextColor)}.ui5-product-switch-item-root .ui5-product-switch-item-text-content .ui5-product-switch-item-title:only-child{white-space:normal;-webkit-line-clamp:2;display:-webkit-box;-webkit-box-orient:vertical}.ui5-product-switch-item-root .ui5-product-switch-item-text-content .ui5-product-switch-item-subtitle{font-size:var( --sapFontSmallSize);color:var(--sapContent_LabelColor)}@media only screen and (max-width: 600px){:host{margin:0;width:100%;max-width:600px;height:5rem;border-radius:0}.ui5-product-switch-item-root{padding:0 1rem;flex-direction:row}:host([icon]) .ui5-product-switch-item-root{padding-top:0}.ui5-product-switch-item-root .ui5-product-switch-item-icon{padding:.875rem;color:var(--sapContent_NonInteractiveIconColor);margin:0 .75rem 0 0}.ui5-product-switch-item-root .ui5-product-switch-item-text-content{align-items:flex-start;max-width:100%}:host([icon]) .ui5-product-switch-item-root .ui5-product-switch-item-text-content{max-width:calc(100% - 3.75rem)}.ui5-product-switch-item-root .ui5-product-switch-item-text-content .ui5-product-switch-item-subtitle,.ui5-product-switch-item-root .ui5-product-switch-item-text-content .ui5-product-switch-item-title{line-height:normal}.ui5-product-switch-item-root .ui5-product-switch-item-text-content .ui5-product-switch-item-subtitle{font-size:var(--sapFontSize);padding-top:.75rem}}
`;

// node_modules/@ui5/webcomponents-fiori/dist/ProductSwitchItem.js
var __decorate77 = function(decorators, target, key, desc) {
  var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
  if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
  else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
  return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var ProductSwitchItem = class ProductSwitchItem2 extends UI5Element_default {
  constructor() {
    super();
    this.active = false;
    this.selected = false;
    this._deactivate = () => {
      if (this.active) {
        this.active = false;
      }
    };
  }
  onEnterDOM() {
    document.addEventListener("mouseup", this._deactivate);
    if (isDesktop()) {
      this.setAttribute("desktop", "");
    }
  }
  onExitDOM() {
    document.removeEventListener("mouseup", this._deactivate);
  }
  _onmousedown() {
    this.active = true;
  }
  get _effectiveTarget() {
    return this.target || "_self";
  }
  _onkeydown(e) {
    if (isSpace(e) || isEnter(e)) {
      this.active = true;
    }
    if (isSpace(e)) {
      e.preventDefault();
    }
    if (isEnter(e)) {
      this._fireItemClick();
    }
  }
  _onkeyup(e) {
    if (isSpace(e) || isEnter(e)) {
      this.active = false;
    }
    if (isSpace(e)) {
      if (isSpaceShift(e)) {
        e.stopPropagation();
      }
      this._fireItemClick();
    }
  }
  _onfocusout() {
    this.active = false;
  }
  _onfocusin() {
    this.fireDecoratorEvent("_focused");
  }
  _fireItemClick() {
    this.fireDecoratorEvent("click", { item: this });
  }
};
__decorate77([
  property_default()
], ProductSwitchItem.prototype, "titleText", void 0);
__decorate77([
  property_default()
], ProductSwitchItem.prototype, "subtitleText", void 0);
__decorate77([
  property_default()
], ProductSwitchItem.prototype, "icon", void 0);
__decorate77([
  property_default()
], ProductSwitchItem.prototype, "target", void 0);
__decorate77([
  property_default()
], ProductSwitchItem.prototype, "targetSrc", void 0);
__decorate77([
  property_default({ type: Boolean })
], ProductSwitchItem.prototype, "active", void 0);
__decorate77([
  property_default({ type: Boolean })
], ProductSwitchItem.prototype, "selected", void 0);
__decorate77([
  property_default({ noAttribute: true })
], ProductSwitchItem.prototype, "forcedTabIndex", void 0);
ProductSwitchItem = __decorate77([
  customElement_default({
    tag: "ui5-product-switch-item",
    renderer: JsxRenderer_default,
    styles: ProductSwitchItem_css_default,
    template: ProductSwitchItemTemplate
  }),
  event_strict_default("click", {
    bubbles: true
  }),
  event_strict_default("_focused", {
    bubbles: true
  })
], ProductSwitchItem);
ProductSwitchItem.define();

// node_modules/@ui5/webcomponents-react/dist/webComponents/ProductSwitchItem/index.js
var ProductSwitchItem3 = withWebComponent("ui5-product-switch-item", ["icon", "subtitleText", "target", "targetSrc", "titleText"], [], [], ["click"]);
ProductSwitchItem3.displayName = "ProductSwitchItem";

// node_modules/@ui5/webcomponents-icons/dist/v4/status-negative.js
var name32 = "status-negative";
var pathData31 = "M512 256q0 53-20.5 100t-55 81.5-81 54.5-99.5 20-100-20.5-81.5-55T20 355 0 256q0-54 20-100.5t55-81T156.5 20 256 0t99.5 20T437 75t55 81.5 20 99.5zM399 364q6-6 0-12l-86-86q-6-6 0-12l81-81q6-6 0-12l-37-37q-2-2-6-2t-6 2l-83 82q-1 3-6 3-3 0-6-3l-84-83q-1-2-6-2-4 0-6 2l-37 37q-6 6 0 12l83 82q6 6 0 12l-83 82q-2 2-2.5 6t2.5 6l36 37q4 2 6 2 4 0 6-2l85-84q2-2 6-2t6 2l88 88q4 2 6 2t6-2z";
var ltr31 = false;
var collection32 = "SAP-icons-v4";
var packageName31 = "@ui5/webcomponents-icons";
registerIcon(name32, { pathData: pathData31, ltr: ltr31, collection: collection32, packageName: packageName31 });

// node_modules/@ui5/webcomponents-icons/dist/v5/status-negative.js
var name33 = "status-negative";
var pathData32 = "M256 0q53 0 99.5 20T437 75t55 81.5 20 99.5-20 99.5-55 81.5-81.5 55-99.5 20-99.5-20T75 437t-55-81.5T0 256t20-99.5T75 75t81.5-55T256 0zm45 256l74-73q9-11 9-23 0-13-9.5-22.5T352 128q-12 0-23 9l-73 74-73-74q-10-9-23-9t-22.5 9.5T128 160q0 12 9 23l74 73-74 73q-9 10-9 23t9.5 22.5T160 384t23-9l73-74 73 74q11 9 23 9 13 0 22.5-9.5T384 352t-9-23z";
var ltr32 = false;
var collection33 = "SAP-icons-v5";
var packageName32 = "@ui5/webcomponents-icons";
registerIcon(name33, { pathData: pathData32, ltr: ltr32, collection: collection33, packageName: packageName32 });

// node_modules/@ui5/webcomponents-icons/dist/status-negative.js
var status_negative_default = "status-negative";

// node_modules/@ui5/webcomponents-icons/dist/v4/status-positive.js
var name34 = "status-positive";
var pathData33 = "M512 256q0 54-20 100.5t-54.5 81T356 492t-100 20q-54 0-100.5-20t-81-55T20 355.5 0 256t20.5-100 55-81.5T157 20t99-20q53 0 100 20t81.5 54.5T492 156t20 100zm-118-87q4-8-1-13l-36-36q-3-4-8-4t-8 5L237 294q-3 1-4 0l-70-52q-4-3-7-3t-4.5 2-2.5 3l-29 41q-6 8 2 14l113 95q2 2 7 2t8-4z";
var ltr33 = false;
var collection34 = "SAP-icons-v4";
var packageName33 = "@ui5/webcomponents-icons";
registerIcon(name34, { pathData: pathData33, ltr: ltr33, collection: collection34, packageName: packageName33 });

// node_modules/@ui5/webcomponents-icons/dist/v5/status-positive.js
var name35 = "status-positive";
var pathData34 = "M256 0q53 0 100 20t81.5 54.5T492 156t20 100-20 100-54.5 81.5T356 492t-100 20-100-20-81.5-54.5T20 356 0 256t20-100 54.5-81.5T156 20 256 0zm150 183q10-9 10-23 0-13-9.5-22.5T384 128t-22 9L186 308l-68-63q-9-9-22-9t-22.5 9.5T64 268q0 15 10 24l91 83q9 9 21 9 13 0 23-9z";
var ltr34 = false;
var collection35 = "SAP-icons-v5";
var packageName34 = "@ui5/webcomponents-icons";
registerIcon(name35, { pathData: pathData34, ltr: ltr34, collection: collection35, packageName: packageName34 });

// node_modules/@ui5/webcomponents-icons/dist/status-positive.js
var status_positive_default = "status-positive";

// node_modules/@ui5/webcomponents-icons/dist/v4/status-critical.js
var name36 = "status-critical";
var pathData35 = "M501 374q5 10 7.5 19.5T512 412v5q0 31-23 47t-50 16H74q-13 0-26-4t-23.5-12-17-20T0 417q0-13 4-22.5t9-20.5L198 38q21-38 61-38 38 0 59 38zM257 127q-13 0-23.5 8T223 161q1 7 2 12 3 25 4.5 48t3.5 61q0 11 7.5 16t16.5 5q22 0 23-21l2-36 9-85q0-18-10.5-26t-23.5-8zm0 299q20 0 31.5-12t11.5-32q0-19-11.5-31T257 339t-31.5 12-11.5 31q0 20 11.5 32t31.5 12z";
var ltr35 = false;
var collection36 = "SAP-icons-v4";
var packageName35 = "@ui5/webcomponents-icons";
registerIcon(name36, { pathData: pathData35, ltr: ltr35, collection: collection36, packageName: packageName35 });

// node_modules/@ui5/webcomponents-icons/dist/v5/status-critical.js
var name37 = "status-critical";
var pathData36 = "M505 399q7 13 7 27 0 21-15.5 37.5T456 480H56q-25 0-40.5-16.5T0 426q0-14 7-27L208 59q17-27 48-27 14 0 27 6.5T304 59zM288 176q0-14-9-23t-23-9-23 9-9 23v96q0 14 9 23t23 9 23-9 9-23v-96zm-32 240q14 0 23-9t9-23-9-23-23-9-23 9-9 23 9 23 23 9z";
var ltr36 = false;
var collection37 = "SAP-icons-v5";
var packageName36 = "@ui5/webcomponents-icons";
registerIcon(name37, { pathData: pathData36, ltr: ltr36, collection: collection37, packageName: packageName36 });

// node_modules/@ui5/webcomponents-icons/dist/status-critical.js
var status_critical_default = "status-critical";

// node_modules/@ui5/webcomponents/dist/ProgressIndicatorTemplate.js
var valueStateIconMappings = {
  "Negative": status_negative_default,
  "Critical": status_critical_default,
  "Positive": status_positive_default,
  "Information": information_default
};
function ProgressIndicatorTemplate() {
  return jsxs("div", { class: {
    "ui5-progress-indicator-root": true,
    "ui5-progress-indicator-max-value": this.validatedValue === 100,
    "ui5-progress-indicator-min-value": this.validatedValue === 0
  }, role: "progressbar", "aria-valuemin": 0, "aria-valuenow": this.validatedValue, "aria-valuemax": 100, "aria-valuetext": this.valueStateText, "aria-label": this.accessibleName, children: [jsx("div", { class: "ui5-progress-indicator-bar", part: "bar", style: { "width": `${this.validatedValue}%`, "transition-duration": this.shouldAnimate ? `${this._transitionDuration}ms` : "none" }, children: !this.showValueInRemainingBar && valueLabel.call(this) }), jsx("div", { class: "ui5-progress-indicator-remaining-bar", part: "remaining-bar", children: this.showValueInRemainingBar && valueLabel.call(this) })] });
}
function valueLabel() {
  return jsxs(Fragment, { children: [this.showIcon && jsx(Icon_default, { name: valueStateIcon.call(this), class: "ui5-progress-indicator-icon" }), !this.hideValue && jsxs("span", { class: "ui5-progress-indicator-value", children: [" ", this.displayValue ? this.displayValue : `${this.validatedValue}%`] })] });
}
function valueStateIcon() {
  return valueStateIconMappings[this.valueState];
}

// node_modules/@ui5/webcomponents/dist/generated/themes/ProgressIndicator.css.js
registerThemePropertiesLoader("@ui5/webcomponents-theming", "sap_horizon", async () => parameters_bundle_css_default);
registerThemePropertiesLoader("@ui5/webcomponents", "sap_horizon", async () => parameters_bundle_css_default2);
var ProgressIndicator_css_default = `:host(:not([hidden])){display:inline-block;min-height:var(_ui5_progress_indicator_host_min_height);min-width:4rem;width:100%;height:var(--_ui5-v2-8-0_progress_indicator_host_height);overflow:hidden;box-sizing:var(--_ui5-v2-8-0_progress_indicator_host_box_sizing);padding:var(--_ui5-v2-8-0_progress_indicator_padding);padding-inline-end:var(--_ui5-v2-8-0_progress_indicator_padding_end)}:host(:not([hidden])[hide-value]){padding-top:var(--_ui5-v2-8-0_progress_indicator_padding_novalue);padding-bottom:var(--_ui5-v2-8-0_progress_indicator_padding_novalue)}.ui5-progress-indicator-root{display:flex;align-items:center;background:var(--_ui5-v2-8-0_progress_indicator_background_none);border-radius:var(--_ui5-v2-8-0_progress_indicator_root_border_radius);overflow:var(--_ui5-v2-8-0_progress_indicator_root_overflow);min-height:var(--_ui5-v2-8-0_progress_indicator_root_min_height);height:var(--_ui5-v2-8-0_progress_indicator_root_height);width:100%;font-size:var(--sapProgress_FontSize);font-family:"72override",var(--sapFontFamily);position:var(--_ui5-v2-8-0_progress_indicator_root_position);box-sizing:border-box}.ui5-progress-indicator-bar{background:var(--_ui5-v2-8-0_progress_indicator_value_state_none);justify-content:flex-end;height:var(--_ui5-v2-8-0_progress_indicator_bar_height);display:flex;align-items:center;flex-direction:row;color:var(--_ui5-v2-8-0_progress_indicator_bar_color);transition-property:width;transition-timing-function:linear;box-sizing:border-box;border:var(--_ui5-v2-8-0_progress_indicator_bar_border_max);border-radius:var(--_ui5-v2-8-0_progress_indicator_bar_border_radius)}.ui5-progress-indicator-min-value .ui5-progress-indicator-bar,.ui5-progress-indicator-max-value .ui5-progress-indicator-remaining-bar{border:none}.ui5-progress-indicator-max-value .ui5-progress-indicator-bar{border-radius:.5rem}.ui5-progress-indicator-min-value .ui5-progress-indicator-remaining-bar{border-inline-start:var(--_ui5-v2-8-0_progress_indicator_border);border-radius:.5rem}.ui5-progress-indicator-remaining-bar{justify-content:flex-start;width:var(--_ui5-v2-8-0_progress_indicator_remaining_bar_width);height:100%;display:flex;align-items:center;flex-direction:row;flex-grow:1;flex-basis:0;border:var(--_ui5-v2-8-0_progress_indicator_border);border-inline-start:none;border-radius:var(--_ui5-v2-8-0_progress_indicator_remaining_bar_border_radius);box-sizing:border-box;color:var(--_ui5-v2-8-0_progress_indicator_color);overflow:var(--_ui5-v2-8-0_progress_indicator_remaining_bar_overflow);position:var(--_ui5-v2-8-0_progress_indicator_remaining_bar_position)}.ui5-progress-indicator-value{margin:var(--_ui5-v2-8-0_progress_indicator_value_margin);white-space:nowrap;overflow:hidden;text-overflow:ellipsis;max-width:100%;position:var(--_ui5-v2-8-0_progress_indicator_value_position);top:var(--_ui5-v2-8-0_progress_indicator_value_top_position);inset-inline-start:var(--_ui5-v2-8-0_progress_indicator_value_left_position)}.ui5-progress-indicator-icon{margin-inline-start:.375rem;width:var(--_ui5-v2-8-0_progress_indicator_icon_size);height:var(--_ui5-v2-8-0_progress_indicator_icon_size);display:var(--_ui5-v2-8-0_progress_indicator_icon_visibility);position:var(--_ui5-v2-8-0_progress_indicator_icon_position);inset-inline-end:var(--_ui5-v2-8-0_progress_indicator_icon_right_position)}:host([value-state="Negative"]) .ui5-progress-indicator-icon{color:var(--_ui5-v2-8-0_progress_indicator_value_state_error_icon_color)}:host([value-state="Critical"]) .ui5-progress-indicator-icon{color:var(--_ui5-v2-8-0_progress_indicator_value_state_warning_icon_color)}:host([value-state="Positive"]) .ui5-progress-indicator-icon{color:var(--_ui5-v2-8-0_progress_indicator_value_state_success_icon_color)}:host([value-state="Information"]) .ui5-progress-indicator-icon{color:var(--_ui5-v2-8-0_progress_indicator_value_state_information_icon_color)}:host([value-state="Negative"]) .ui5-progress-indicator-bar{background:var(--_ui5-v2-8-0_progress_indicator_value_state_error)}:host([value-state="Critical"]) .ui5-progress-indicator-bar{background:var(--_ui5-v2-8-0_progress_indicator_value_state_warning)}:host([value-state="Positive"]) .ui5-progress-indicator-bar{background:var(--_ui5-v2-8-0_progress_indicator_value_state_success)}:host([value-state="Information"]) .ui5-progress-indicator-bar{background:var(--_ui5-v2-8-0_progress_indicator_value_state_information)}:host([value-state="Negative"]) .ui5-progress-indicator-root{background:var(--_ui5-v2-8-0_progress_indicator_background_error)}:host([value-state="Critical"]) .ui5-progress-indicator-root{background:var(--_ui5-v2-8-0_progress_indicator_background_warning)}:host([value-state="Positive"]) .ui5-progress-indicator-root{background:var(--_ui5-v2-8-0_progress_indicator_background_success)}:host([value-state="Information"]) .ui5-progress-indicator-root{background:var(--_ui5-v2-8-0_progress_indicator_background_information)}:host([value-state="Negative"]) .ui5-progress-indicator-remaining-bar{border-color:var(--_ui5-v2-8-0_progress_indicator_border_color_error)}:host([value-state="Critical"]) .ui5-progress-indicator-remaining-bar{border-color:var(--_ui5-v2-8-0_progress_indicator_border_color_warning)}:host([value-state="Positive"]) .ui5-progress-indicator-remaining-bar{border-color:var(--_ui5-v2-8-0_progress_indicator_border_color_success)}:host([value-state="Information"]) .ui5-progress-indicator-remaining-bar{border-color:var(--_ui5-v2-8-0_progress_indicator_border_color_information)}.ui5-progress-indicator-remaining-bar:before,.ui5-progress-indicator-remaining-bar:after{content:"";display:block;width:.25rem;height:.25rem;position:absolute;border-radius:50%;display:var(--_ui5-v2-8-0_progress_indicator_side_points_visibility);background:var(--_ui5-v2-8-0_progress_indicator_value_state_none)}.ui5-progress-indicator-remaining-bar:before{left:.0625rem}.ui5-progress-indicator-remaining-bar:after{right:.0625rem}:host([value-state="Negative"]) .ui5-progress-indicator-remaining-bar:before,:host([value-state="Negative"]) .ui5-progress-indicator-remaining-bar:after{background:var(--sapProgress_Value_NegativeBackground)}:host([value-state="Critical"]) .ui5-progress-indicator-remaining-bar:before,:host([value-state="Critical"]) .ui5-progress-indicator-remaining-bar:after{background:var(--sapProgress_Value_CriticalBackground)}:host([value-state="Positive"]) .ui5-progress-indicator-remaining-bar:before,:host([value-state="Positive"]) .ui5-progress-indicator-remaining-bar:after{background:var(--sapProgress_Value_PositiveBackground)}:host([value-state="Information"]) .ui5-progress-indicator-remaining-bar:before,:host([value-state="Information"]) .ui5-progress-indicator-remaining-bar:after{background:var(--sapProgress_Value_InformationBackground)}
`;

// node_modules/@ui5/webcomponents/dist/ProgressIndicator.js
var __decorate78 = function(decorators, target, key, desc) {
  var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
  if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
  else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
  return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var ProgressIndicator_1;
var ProgressIndicator = ProgressIndicator_1 = class ProgressIndicator2 extends UI5Element_default {
  constructor() {
    super();
    this.hideValue = false;
    this.value = 0;
    this.valueState = "None";
    this._previousValue = 0;
    this._transitionDuration = 0;
  }
  onBeforeRendering() {
    this._transitionDuration = Math.abs(this._previousValue - this.validatedValue) * 20;
    this._previousValue = this.validatedValue;
  }
  valueStateTextMappings() {
    return {
      "Negative": ProgressIndicator_1.i18nBundle.getText(VALUE_STATE_ERROR),
      "Critical": ProgressIndicator_1.i18nBundle.getText(VALUE_STATE_WARNING),
      "Positive": ProgressIndicator_1.i18nBundle.getText(VALUE_STATE_SUCCESS),
      "Information": ProgressIndicator_1.i18nBundle.getText(VALUE_STATE_INFORMATION)
    };
  }
  get validatedValue() {
    if (this.value < 0) {
      return 0;
    }
    if (this.value > 100) {
      return 100;
    }
    return this.value;
  }
  get showValueInRemainingBar() {
    return this.value <= 50;
  }
  get shouldAnimate() {
    return getAnimationMode2() !== AnimationMode_default.None;
  }
  get valueStateText() {
    const percentValue = `${this.validatedValue}%`;
    const valueText = this.valueStateTextMappings()[this.valueState];
    return valueText ? `${percentValue} ${valueText}` : percentValue;
  }
  get showIcon() {
    return this.valueState !== ValueState_default.None;
  }
};
__decorate78([
  property_default()
], ProgressIndicator.prototype, "accessibleName", void 0);
__decorate78([
  property_default({ type: Boolean })
], ProgressIndicator.prototype, "hideValue", void 0);
__decorate78([
  property_default({ type: Number })
], ProgressIndicator.prototype, "value", void 0);
__decorate78([
  property_default()
], ProgressIndicator.prototype, "displayValue", void 0);
__decorate78([
  property_default()
], ProgressIndicator.prototype, "valueState", void 0);
__decorate78([
  i18n_default("@ui5/webcomponents")
], ProgressIndicator, "i18nBundle", void 0);
ProgressIndicator = ProgressIndicator_1 = __decorate78([
  customElement_default({
    tag: "ui5-progress-indicator",
    renderer: JsxRenderer_default,
    styles: ProgressIndicator_css_default,
    template: ProgressIndicatorTemplate
  })
], ProgressIndicator);
ProgressIndicator.define();
var ProgressIndicator_default = ProgressIndicator;

// node_modules/@ui5/webcomponents-react/dist/webComponents/ProgressIndicator/index.js
var ProgressIndicator3 = withWebComponent("ui5-progress-indicator", ["accessibleName", "displayValue", "value", "valueState"], ["hideValue"], [], []);
ProgressIndicator3.displayName = "ProgressIndicator";

// node_modules/@ui5/webcomponents-react/dist/webComponents/RadioButton/index.js
var RadioButton = withWebComponent("ui5-radio-button", ["accessibleName", "accessibleNameRef", "name", "text", "value", "valueState", "wrappingType"], ["checked", "disabled", "readonly", "required"], [], ["change"]);
RadioButton.displayName = "RadioButton";

// node_modules/@ui5/webcomponents/dist/RangeSliderTemplate.js
function RangeSliderTemplate() {
  return SliderBaseTemplate.call(this, {
    handlesAriaText,
    progressBar,
    handles
  });
}
function handlesAriaText() {
  return jsxs(Fragment, { children: [jsx("span", { id: "ui5-slider-startHandleDesc", class: "ui5-hidden-text", children: this._ariaHandlesText.startHandleText }), jsx("span", { id: "ui5-slider-endHandleDesc", class: "ui5-hidden-text", children: this._ariaHandlesText.endHandleText })] });
}
function progressBar() {
  return jsx("div", { class: "ui5-slider-progress-container", part: "progress-container", children: jsx("div", { class: "ui5-slider-progress", part: "progress-bar", style: this.styles.progress, onFocusIn: this._onfocusin, onFocusOut: this._onfocusout, role: "slider", tabIndex: this._tabIndex, "aria-orientation": "horizontal", "aria-valuemin": this.min, "aria-valuemax": this.max, "aria-valuenow": this._ariaValueNow, "aria-valuetext": `From ${this.startValue} to ${this.endValue}`, "aria-labelledby": "ui5-slider-sliderDesc", "aria-disabled": this._ariaDisabled }) });
}
function handles() {
  return jsxs(Fragment, { children: [jsxs("div", { class: "ui5-slider-handle-container", style: this.styles.startHandle, part: "handle-container", children: [jsx("div", { class: "ui5-slider-handle ui5-slider-handle--start", part: "handle", onFocusIn: this._onfocusin, onFocusOut: this._onfocusout, role: "slider", tabindex: this._tabIndex, "aria-orientation": "horizontal", "aria-valuemin": this.min, "aria-valuemax": this.max, "aria-valuenow": this.startValue, "aria-labelledby": this._ariaLabelledByStartHandleText, "aria-disabled": this._ariaDisabled, "aria-describedby": this._ariaDescribedByHandleText, "aria-keyshortcuts": "F2", children: jsx(Icon_default, { name: direction_arrows_default, mode: "Decorative", "slider-icon": true }) }), this.showTooltip && jsx("div", { class: "ui5-slider-tooltip ui5-slider-tooltip--start", style: this.styles.tooltip, children: this.editableTooltip ? jsx(Input_default, { type: "Number", value: this.startValue.toString(), accessibleNameRef: "ui5-slider-InputLabel", onFocusOut: this._onInputFocusOut, onKeyDown: this._onInputKeydown, onChange: this._onInputChange, onInput: this._onInputInput, "data-sap-ui-start-value": true, tabIndex: -1 }) : jsx("span", { class: "ui5-slider-tooltip-value", children: this.tooltipStartValue }) })] }), jsxs("div", { class: "ui5-slider-handle-container", style: this.styles.endHandle, part: "handle-container", children: [jsx("div", { class: "ui5-slider-handle ui5-slider-handle--end", part: "handle", onFocusIn: this._onfocusin, onFocusOut: this._onfocusout, role: "slider", tabIndex: this._tabIndex, "aria-orientation": "horizontal", "aria-valuemin": this.min, "aria-valuemax": this.max, "aria-valuenow": this.endValue, "aria-labelledby": this._ariaLabelledByEndHandleText, "aria-describedby": this._ariaDescribedByHandleText, "aria-disabled": this._ariaDisabled, "aria-keyshortcuts": "F2", children: jsx(Icon_default, { name: direction_arrows_default, mode: "Decorative", "slider-icon": true }) }), this.showTooltip && jsx("div", { class: "ui5-slider-tooltip ui5-slider-tooltip--end", style: this.styles.tooltip, children: this.editableTooltip ? jsx(Input_default, { type: "Number", value: this.endValue.toString(), accessibleNameRef: "ui5-slider-InputLabel", onFocusOut: this._onInputFocusOut, onKeyDown: this._onInputKeydown, onChange: this._onInputChange, onInput: this._onInputInput, "data-sap-ui-end-value": true, tabIndex: -1 }) : jsx("span", { class: "ui5-slider-tooltip-value", children: this.tooltipEndValue }) })] })] });
}

// node_modules/@ui5/webcomponents/dist/generated/themes/RangeSlider.css.js
registerThemePropertiesLoader("@ui5/webcomponents-theming", "sap_horizon", async () => parameters_bundle_css_default);
registerThemePropertiesLoader("@ui5/webcomponents", "sap_horizon", async () => parameters_bundle_css_default2);
var RangeSlider_css_default = `:host([ui5-range-slider]) .ui5-slider-progress-container:before{background-color:var(--_ui5-v2-8-0_slider_progress_container_dot_background)}.ui5-slider-root:hover:active .ui5-slider-handle:not(:focus){background:var(--sapSlider_RangeHandleBackground)}:host([range-pressed]) .ui5-slider-root:active .ui5-slider-handle:not(:focus){background:var(--_ui5-v2-8-0_range_slider_handle_active_background);border:var(--_ui5-v2-8-0_slider_handle_focus_border);box-shadow:none}:host([range-pressed]) .ui5-slider-handle [slider-icon]{display:var(--_ui5-v2-8-0_range_slider_active_handle_icon_display)}.ui5-slider-root:not(.ui5-slider-root-phone):focus .ui5-slider-inner .ui5-slider-handle,.ui5-slider-root:not(.ui5-slider-root-phone) .ui5-slider-inner .ui5-slider-handle:focus{background:var(--_ui5-v2-8-0_range_slider_handle_background_focus)}.ui5-slider-root:not(.ui5-slider-root-phone) .ui5-slider-inner .ui5-slider-handle:focus [slider-icon]{display:none}.ui5-slider-root:not(.ui5-slider-root-phone) .ui5-slider-progress:focus:before{display:var(--_ui5-v2-8-0_range_slider_legacy_progress_focus_display);content:"";position:absolute;width:var(--_ui5-v2-8-0_range_slider_focus_outline_width);border:var(--_ui5-v2-8-0_slider_progress_outline);border-radius:var(--_ui5-v2-8-0_range_slider_focus_outline_radius);top:var(--_ui5-v2-8-0_slider_progress_outline_offset);height:var(--_ui5-v2-8-0_slider_outer_height);box-sizing:border-box;left:var(--_ui5-v2-8-0_slider_progress_outline_offset_left)}.ui5-slider-progress{position:relative}.ui5-slider-progress:focus:after{border:.125rem solid var(--sapContent_FocusColor);border-radius:.5rem;content:"";display:var(--_ui5-v2-8-0_range_slider_progress_focus_display);position:absolute;top:var(--_ui5-v2-8-0_range_slider_progress_focus_top);left:var(--_ui5-v2-8-0_range_slider_progress_focus_left);padding:var(--_ui5-v2-8-0_range_slider_progress_focus_padding);width:var(--_ui5-v2-8-0_range_slider_progress_focus_width);height:var(--_ui5-v2-8-0_range_slider_progress_focus_height);box-sizing:border-box}.ui5-slider-handle{background:var(--_ui5-v2-8-0_range_slider_handle_background)}.ui5-slider-progress-container:hover~.ui5-slider-handle:not(:focus),.ui5-slider-handle:hover{background:var(--_ui5-v2-8-0_range_slider_root_hover_handle_bg)}.ui5-slider-root:hover .ui5-slider-handle:not(:focus) [slider-icon]{display:var(--_ui5-v2-8-0_range_slider_root_hover_handle_icon_display)}:host([range-pressed]) .ui5-slider-root:active .ui5-slider-handle:not(:focus) [slider-icon]{display:var(--_ui5-v2-8-0_range_slider_root_active_handle_icon_display)}
`;

// node_modules/@ui5/webcomponents/dist/RangeSlider.js
var __decorate79 = function(decorators, target, key, desc) {
  var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
  if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
  else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
  return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var RangeSlider_1;
var RangeSlider = RangeSlider_1 = class RangeSlider2 extends SliderBase_default {
  get formFormattedValue() {
    const formData = new FormData();
    if (!this.name) {
      return formData;
    }
    formData.append(this.name, this.startValue.toString());
    formData.append(this.name, this.endValue.toString());
    return formData;
  }
  constructor() {
    super();
    this.startValue = 0;
    this.endValue = 100;
    this.rangePressed = false;
    this._isStartValueValid = false;
    this._isEndValueValid = false;
    this._isPressInCurrentRange = false;
    this._handeIsPressed = false;
    this._reversedValues = false;
    this._areInputValuesSwapped = false;
    this._stateStorage.startValue = void 0;
    this._stateStorage.endValue = void 0;
    this._lastValidStartValue = this.min.toString();
    this._lastValidEndValue = this.max.toString();
  }
  get tooltipStartValue() {
    const ctor = this.constructor;
    const stepPrecision = ctor._getDecimalPrecisionOfNumber(this._effectiveStep);
    return this.startValue.toFixed(stepPrecision);
  }
  get tooltipEndValue() {
    const ctor = this.constructor;
    const stepPrecision = ctor._getDecimalPrecisionOfNumber(this._effectiveStep);
    return this.endValue.toFixed(stepPrecision);
  }
  get _ariaDisabled() {
    return this.disabled || void 0;
  }
  get _ariaLabelledByText() {
    return RangeSlider_1.i18nBundle.getText(RANGE_SLIDER_ARIA_DESCRIPTION);
  }
  get _ariaHandlesText() {
    const isRTL = this.effectiveDir === "rtl";
    const isReversed = this._areValuesReversed();
    const ariaHandlesText = {};
    if (isRTL && !isReversed || !isRTL && isReversed) {
      ariaHandlesText.startHandleText = RangeSlider_1.i18nBundle.getText(RANGE_SLIDER_END_HANDLE_DESCRIPTION);
      ariaHandlesText.endHandleText = RangeSlider_1.i18nBundle.getText(RANGE_SLIDER_START_HANDLE_DESCRIPTION);
    } else {
      ariaHandlesText.startHandleText = RangeSlider_1.i18nBundle.getText(RANGE_SLIDER_START_HANDLE_DESCRIPTION);
      ariaHandlesText.endHandleText = RangeSlider_1.i18nBundle.getText(RANGE_SLIDER_END_HANDLE_DESCRIPTION);
    }
    return ariaHandlesText;
  }
  get _ariaValueNow() {
    return Math.abs(this.endValue - this.startValue);
  }
  /**
   * Check if the previously saved state is outdated. That would mean
   * either it is the initial rendering or that a property has been changed
   * programmatically - because the previous state is always updated in
   * the interaction handlers.
   *
   * Normalize current properties, update the previously stored state.
   * Update the visual UI representation of the Slider.
   *
   */
  onBeforeRendering() {
    if (this.startValue > this.endValue) {
      const affectedValue = this._valueAffected === "startValue" ? "endValue" : "startValue";
      this._swapValues();
      this._setAffectedValue(affectedValue);
      this.update(affectedValue, this.startValue, this.endValue);
    }
    if (this.editableTooltip) {
      this._saveInputValues();
    }
    if (!this.isCurrentStateOutdated()) {
      return;
    }
    this.notResized = true;
    this.syncUIAndState();
    this._updateHandlesAndRange(0);
    this.update(this._valueAffected, this.startValue, this.endValue);
  }
  syncUIAndState() {
    if (this.isPropertyUpdated("step")) {
      this._validateStep(this.step);
      this.storePropertyState("step");
    }
    if (this.isPropertyUpdated("min", "max", "startValue", "endValue")) {
      this.storePropertyState("min", "max");
      const normalizedStartValue = SliderBase_default.clipValue(this.startValue, this._effectiveMin, this._effectiveMax);
      this.startValue = normalizedStartValue;
      this.updateStateStorageAndFireInputEvent("startValue");
      this.storePropertyState("startValue");
      const normalizedEndValue = SliderBase_default.clipValue(this.endValue, this._effectiveMin, this._effectiveMax);
      this.endValue = normalizedEndValue;
      this.updateStateStorageAndFireInputEvent("endValue");
      this.storePropertyState("endValue");
    }
    if (this.labelInterval && this.showTickmarks) {
      this._createLabels();
    }
    if (this.isPropertyUpdated("labelInterval")) {
      this.storePropertyState("labelInterval");
    }
  }
  _onfocusin() {
    if (!this._endValueInitial) {
      this._startValueInitial = this.startValue;
      this._endValueInitial = this.endValue;
    }
    if (this.showTooltip) {
      this._tooltipVisibility = SliderBase_default.TOOLTIP_VISIBILITY.VISIBLE;
    }
  }
  /**
   * Handles focus out event of the focusable components inner elements.
   * Prevent focusout when the focus is getting initially set within the slider before the
   * slider customElement itself is finished focusing.
   *
   * Prevents the focus from leaving the Range Slider when the focus is managed between
   * its inner elements in result of user interactions.
   *
   * Resets the stored Range Slider's initial values saved when it was first focused
   * @private
   */
  _onfocusout(e) {
    var _a;
    if (this._isFocusing()) {
      this._preventFocusOut();
      return;
    }
    this._setAffectedValue(void 0);
    this._startValueInitial = void 0;
    this._endValueInitial = void 0;
    if (this.showTooltip && !((_a = e.relatedTarget) == null ? void 0 : _a.hasAttribute("ui5-input"))) {
      this._tooltipVisibility = SliderBase_default.TOOLTIP_VISIBILITY.HIDDEN;
    }
  }
  _onInputFocusOut(e) {
    const tooltipInput = e.target;
    const oppositeTooltipInput = tooltipInput.hasAttribute("data-sap-ui-start-value") ? this.shadowRoot.querySelector("[ui5-input][data-sap-ui-end-value]") : this.shadowRoot.querySelector("[ui5-input][data-sap-ui-start-value]");
    const relatedTarget = e.relatedTarget;
    if (this.startValue > this.endValue) {
      this._areInputValuesSwapped = true;
      oppositeTooltipInput.focus();
      return;
    }
    if (tooltipInput.hasAttribute("data-sap-ui-start-value")) {
      this._setAffectedValue("startValue");
    } else {
      this._setAffectedValue("endValue");
    }
    if (!this._areInputValuesSwapped || !this.shadowRoot.contains(relatedTarget)) {
      this._tooltipVisibility = SliderBase_default.TOOLTIP_VISIBILITY.HIDDEN;
    }
    this._updateValueFromInput(e);
    this._updateInputValue();
    this.update(this._valueAffected, parseFloat(this._lastValidStartValue), parseFloat(this._lastValidEndValue));
    const isTooltipInputValueValid = parseFloat(tooltipInput.value) >= this.min && parseFloat(tooltipInput.value) <= this.max;
    if (!isTooltipInputValueValid) {
      tooltipInput.value = tooltipInput.hasAttribute("data-sap-ui-start-value") ? this._lastValidStartValue : this._lastValidEndValue;
      tooltipInput.valueState = "None";
    }
  }
  /**
  * Handles keyup logic. If one of the handles came across the other
  * swap the start and end values. Reset the affected value by the finished
  * user interaction.
  * @private
  */
  _onkeyup(e) {
    super._onKeyupBase();
    if (!isEnter(e)) {
      this._setAffectedValue(void 0);
    }
    if (this.startValue !== this._startValueAtBeginningOfAction || this.endValue !== this._endValueAtBeginningOfAction) {
      this.fireDecoratorEvent("change");
    }
    this._startValueAtBeginningOfAction = void 0;
    this._endValueAtBeginningOfAction = void 0;
  }
  _handleActionKeyPress(e) {
    this._startValueAtBeginningOfAction = this.startValue;
    this._endValueAtBeginningOfAction = this.endValue;
    if (isEscape(e)) {
      this.update(void 0, this._startValueInitial, this._endValueInitial);
      return;
    }
    this._setAffectedValueByFocusedElement();
    const min = this._effectiveMin;
    const max = this._effectiveMax;
    const affectedValue = this._valueAffected;
    if ((isEnd(e) || isHome(e)) && !affectedValue) {
      this._homeEndForSelectedRange(e, isHome(e) ? "startValue" : "endValue", min, max);
      return;
    }
    const newValueOffset = this._handleActionKeyPressBase(e, affectedValue);
    if (!newValueOffset) {
      return;
    }
    const ctor = this.constructor;
    if (affectedValue && !this._isPressInCurrentRange) {
      const propValue = this[affectedValue];
      const newValue = ctor.clipValue(newValueOffset + propValue, min, max);
      this.update(affectedValue, newValue, void 0);
    } else if (newValueOffset < 0 && this.startValue > min || newValueOffset > 0 && this.endValue < max) {
      const newStartValue = ctor.clipValue(newValueOffset + this.startValue, min, max);
      const newEndValue = ctor.clipValue(newValueOffset + this.endValue, min, max);
      this.update(affectedValue, newStartValue, newEndValue);
    }
  }
  /**
   * Determines affected value (start/end) depending on the currently
   * active inner element within the Range Slider - used in the keyboard handling.
   * @private
   */
  _setAffectedValueByFocusedElement() {
    if (this.shadowRoot.activeElement === this._startHandle) {
      this._setAffectedValue("startValue");
    }
    if (this.shadowRoot.activeElement === this._endHandle) {
      this._setAffectedValue("endValue");
    }
    if (this.shadowRoot.activeElement === this._progressBar) {
      this._setAffectedValue(void 0);
    }
    this._setIsPressInCurrentRange(!this._valueAffected);
  }
  /**
   * Calculates the start and end values when the 'Home" or 'End' keys
   * are pressed on the selected range bar.
   * @private
   */
  _homeEndForSelectedRange(e, affectedValue, min, max) {
    const newValueOffset = this._handleActionKeyPressBase(e, affectedValue);
    const ctor = this.constructor;
    const newStartValue = ctor.clipValue(newValueOffset + this.startValue, min, max);
    const newEndValue = ctor.clipValue(newValueOffset + this.endValue, min, max);
    this.update(void 0, newStartValue, newEndValue);
  }
  /**
   * Update values, stored inner state and the visual UI representation of the component.
   * If no specific type of value property is passed - the range is selected - update both handles,
   * otherwise update the handle corresponding to the affected by the user interacton value prop.
   * @private
   */
  update(affectedValue, startValue, endValue) {
    if (!affectedValue) {
      this.startValue = startValue;
      this.updateStateStorageAndFireInputEvent("startValue");
      this.endValue = endValue;
      this.updateStateStorageAndFireInputEvent("endValue");
      this._updateHandlesAndRange(0);
    } else {
      const newValue = endValue && affectedValue === "endValue" ? endValue : startValue;
      this._updateHandlesAndRange(newValue || 0);
      if (affectedValue === "startValue") {
        this.startValue = newValue;
        this.updateStateStorageAndFireInputEvent("startValue");
      }
      if (affectedValue === "endValue") {
        this.endValue = newValue;
        this.updateStateStorageAndFireInputEvent("endValue");
      }
    }
  }
  /**
   * Called when the user starts interacting with the slider
   * @private
   */
  _onmousedown(e) {
    if ((e == null ? void 0 : e.button) && (e == null ? void 0 : e.button) !== 0) {
      return;
    }
    if (this.disabled || this._effectiveStep === 0 || e.target.hasAttribute("ui5-input")) {
      return;
    }
    const newValue = this.handleDownBase(e);
    this._saveInteractionStartData(e, newValue);
    this.rangePressed = this._isPressInCurrentRange;
    if (this._isPressInCurrentRange || this._handeIsPressed) {
      this._handeIsPressed = false;
      return;
    }
    this.update(this._valueAffected, newValue, void 0);
  }
  /**
   * Determines and saves needed values from the start of the interaction:
   *
   * Is the value calculated is within the currently selected range;
   * Initial pageX position of the start handle affected by the interaction;
   * Initial pageX value of the pressed postion;
   * Affected value property by the action;
   * @private
   */
  _saveInteractionStartData(e, newValue) {
    const progressBarDom = this.shadowRoot.querySelector(".ui5-slider-progress").getBoundingClientRect();
    this._startValueAtBeginningOfAction = this.startValue;
    this._endValueAtBeginningOfAction = this.endValue;
    const ctor = this.constructor;
    this._initialPageXPosition = ctor.getPageXValueFromEvent(e);
    this._pressTargetAndAffectedValue(this._initialPageXPosition, newValue);
    this._initialStartHandlePageX = this.directionStart === "left" ? progressBarDom.left : progressBarDom.right;
  }
  /**
   * Called when the user moves the slider
   * @private
   */
  _handleMove(e) {
    e.preventDefault();
    if (this.disabled || this._effectiveStep === 0 || e.target.hasAttribute("ui5-input")) {
      return;
    }
    if (!this._isPressInCurrentRange) {
      this._updateValueOnHandleDrag(e);
      return;
    }
    this._updateValueOnRangeDrag(e);
  }
  /**
   * Updates UI and state when dragging a single Range Slider handle
   * @private
   */
  _updateValueOnHandleDrag(event) {
    const ctor = this.constructor;
    const newValue = ctor.getValueFromInteraction(event, this._effectiveStep, this._effectiveMin, this._effectiveMax, this.getBoundingClientRect(), this.directionStart);
    this.update(this._valueAffected, newValue, void 0);
  }
  /**
   * Updates UI and state when dragging of the whole selected range
   * @private
   */
  _updateValueOnRangeDrag(event) {
    const ctor = this.constructor;
    const currentPageXPos = ctor.getPageXValueFromEvent(event);
    const newValues = this._calculateRangeOffset(currentPageXPos, this._initialStartHandlePageX);
    this._setAffectedValue(void 0);
    this.update(void 0, newValues[0], newValues[1]);
  }
  _handleUp(e) {
    if (e.target.hasAttribute("ui5-input")) {
      return;
    }
    this._setAffectedValueByFocusedElement();
    this._setAffectedValue(void 0);
    if (this.startValue !== this._startValueAtBeginningOfAction || this.endValue !== this._endValueAtBeginningOfAction) {
      this.fireDecoratorEvent("change");
    }
    this._setIsPressInCurrentRange(false);
    this.handleUpBase();
    this.rangePressed = false;
    this._startValueAtBeginningOfAction = void 0;
    this._endValueAtBeginningOfAction = void 0;
  }
  _updateValueFromInput(e) {
    if (this._areInputValuesSwapped) {
      return;
    }
    const input = e.target;
    const inputValue = parseFloat(input.value);
    const isValueValid = inputValue >= this._effectiveMin && inputValue <= this._effectiveMax;
    if (!isValueValid) {
      return;
    }
    if (input.hasAttribute("data-sap-ui-start-value")) {
      this.startValue = inputValue;
      return;
    }
    this.endValue = inputValue;
    if (this.startValue > this.endValue) {
      this._areInputValuesSwapped = true;
    }
  }
  /**
   * Determines where the press occured and which values of the Range Slider
   * handles should be updated on further interaction.
   *
   * If the press is not in the selected range or over one of the Range Slider handles
   * determines which one from the value/endValue properties has to be updated
   * after the user action (based on closest handle).
   *
   * Set flags if the press is over a handle or in the selected range,
   * in such cases no values are changed on interaction start, but could be
   * updated later when dragging.
   * @private
   */
  _pressTargetAndAffectedValue(clientX, value) {
    const startHandle = this.shadowRoot.querySelector(".ui5-slider-handle--start");
    const endHandle = this.shadowRoot.querySelector(".ui5-slider-handle--end");
    const handleStartDomRect = startHandle.getBoundingClientRect();
    const handleEndDomRect = endHandle.getBoundingClientRect();
    const inHandleStartDom = clientX >= handleStartDomRect.left && clientX <= handleStartDomRect.right;
    const inHandleEndDom = clientX >= handleEndDomRect.left && clientX <= handleEndDomRect.right;
    if (inHandleEndDom || inHandleStartDom) {
      this._handeIsPressed = true;
    }
    if (inHandleEndDom || value > this.endValue) {
      this._setAffectedValue("endValue");
    }
    if (inHandleStartDom || value < this.startValue) {
      this._setAffectedValue("startValue");
    }
    const isNewValueInCurrentRange = this._startValueAtBeginningOfAction !== void 0 && this._endValueAtBeginningOfAction !== void 0 && value >= this._startValueAtBeginningOfAction && value <= this._endValueAtBeginningOfAction;
    this._setIsPressInCurrentRange(!(this._valueAffected || this._handeIsPressed) ? isNewValueInCurrentRange : false);
  }
  /**
   * Sets the value property (start/end) that will get updated
   * by a user action depending on that user action's characteristics
   * - mouse press position - cursor coordinates relative to the start/end handles
   * - selected inner element via a keyboard navigation
   * @param affectedValue The value that will get modified by the interaction
   * @private
   */
  _setAffectedValue(affectedValue) {
    this._valueAffected = affectedValue;
    if (this._areValuesReversed()) {
      this._setValuesAreReversed();
    }
  }
  /**
   * Flag if press action is made on the currently selected range of values
   * @param isPressInCurrentRange Did the current press action occur in the current range (between the two handles)
   * @private
   */
  _setIsPressInCurrentRange(isPressInCurrentRange) {
    this._isPressInCurrentRange = isPressInCurrentRange;
  }
  /**
   * Manage the focus between the focusable inner elements within the component.
   *
   * On initial focusin or if the whole range is affected by the user interaction
   * set the focus on the progress selection, otherwise on one of the Range Slider
   * handles based on the determined affected value by the user action.
   *
   * If one of the handles came across the other one in result of a user action
   * switch the focus between them to keep it visually consistent.
   *
   * Note:
   * In some cases this function is going to get called twice on one user action.
   *
   * 1. When the focus is initially set to an inner element it is done in the very beginning,
   * of an interaction - on 'mousedown' and 'keydown' events. The focus of the host custom element
   * is still not being received, causining an immediate focusout that we prevent by
   * calling this function once again.
   *
   * 2. When the focused is manually switched from one inner element to another.
   * The focusout handler is one and the same for all focusable parts within the
   * Range Slider and when is called it checks if it should keep the focus within
   * the component and which part of it should get focused if that is the case.
   * @protected
   */
  focusInnerElement() {
    if (this.editableTooltip && this._tooltipVisibility === SliderBase_default.TOOLTIP_VISIBILITY.HIDDEN) {
      return;
    }
    const isReversed = this._areValuesReversed();
    const affectedValue = this._valueAffected;
    if (this._isPressInCurrentRange || !affectedValue) {
      this._progressBar.focus();
    }
    if (affectedValue === "startValue" && !isReversed || affectedValue === "endValue" && isReversed) {
      this._startHandle.focus();
    }
    if (affectedValue === "endValue" && !isReversed || affectedValue === "startValue" && isReversed) {
      this._endHandle.focus();
    }
  }
  /**
   * Calculates startValue/endValue properties when the whole range is moved.
   *
   * Uses the change of the position of the start handle and adds the initially
   * selected range to it, to determine the whole range offset.
   * @param currentPageXPos The current horizontal position of the cursor/touch
   * @param initialStartHandlePageXPos The initial horizontal position of the start handle
   * @private
   */
  _calculateRangeOffset(currentPageXPos, initialStartHandlePageXPos) {
    if (this._initialPageXPosition === currentPageXPos) {
      return [this.startValue, this.endValue];
    }
    const min = this._effectiveMin;
    const max = this._effectiveMax;
    const selectedRange = this.endValue - this.startValue;
    let startValue = this._calculateStartValueByOffset(currentPageXPos, initialStartHandlePageXPos);
    const ctor = this.constructor;
    startValue = ctor.clipValue(startValue, min, max - selectedRange);
    return [startValue, startValue + selectedRange];
  }
  /**
   * Computes the new value based on the difference of the current cursor location from the
   * start of the interaction.
   * @param currentPageXPos The current horizontal position of the cursor/touch
   * @param initialStartHandlePageXPos The initial horizontal position of the start handle
   * @private
   */
  _calculateStartValueByOffset(currentPageXPos, initialStartHandlePageXPos) {
    const min = this._effectiveMin;
    const max = this._effectiveMax;
    const step = this._effectiveStep;
    const dom = this.getBoundingClientRect();
    let startValue;
    let startValuePageX;
    let positionOffset;
    const ctor = this.constructor;
    if (currentPageXPos > this._initialPageXPosition) {
      positionOffset = currentPageXPos - this._initialPageXPosition;
      startValuePageX = initialStartHandlePageXPos + positionOffset;
      startValue = ctor.computedValueFromPageX(startValuePageX, min, max, dom, this.directionStart);
      startValue = ctor.getSteppedValue(startValue, step, min);
    } else {
      positionOffset = this._initialPageXPosition - currentPageXPos;
      startValuePageX = initialStartHandlePageXPos - positionOffset;
      startValue = ctor.computedValueFromPageX(startValuePageX, min, max, dom, this.directionStart);
      startValue = ctor.getSteppedValue(startValue, step, min);
    }
    return startValue;
  }
  /**
   * Updates the visual representation of the component by calculating
   * the styles of the handles and the range selection based on the new state.
   * @private
   */
  _updateHandlesAndRange(newValue) {
    const max = this._effectiveMax;
    const min = this._effectiveMin;
    const prevStartValue = this.getStoredPropertyState("startValue") || 0;
    const prevEndValue = this.getStoredPropertyState("endValue") || 0;
    const affectedValue = this._valueAffected;
    if (affectedValue === "startValue") {
      this._selectedRange = (prevEndValue - newValue) / (max - min);
      this._firstHandlePositionFromStart = (newValue - min) / (max - min) * 100;
    } else if (affectedValue === "endValue") {
      this._selectedRange = (newValue - prevStartValue) / (max - min);
      this._secondHandlePositionFromStart = (newValue - min) / (max - min) * 100;
    } else {
      this._selectedRange = (this.endValue - this.startValue) / (max - min);
      this._firstHandlePositionFromStart = (this.startValue - min) / (max - min) * 100;
      this._secondHandlePositionFromStart = (this.endValue - min) / (max - min) * 100;
    }
  }
  _onInputKeydown(e) {
    const targetedInput = e.target;
    const startValueInput = this.shadowRoot.querySelector("[ui5-input][data-sap-ui-start-value]");
    const endValueInput = this.shadowRoot.querySelector("[ui5-input][data-sap-ui-end-value]");
    const startValue = parseFloat(startValueInput.value);
    const endValue = parseFloat(endValueInput.value);
    const affectedValue = targetedInput.hasAttribute("data-sap-ui-start-value") ? "startValue" : "endValue";
    super._onInputKeydown(e);
    if (isEnter(e) && startValue > endValue) {
      const swappedInput = affectedValue === "startValue" ? endValueInput : startValueInput;
      const isValueValid = parseFloat(targetedInput.value) >= this.min && parseFloat(startValueInput.value) <= this.max;
      if (!isValueValid) {
        targetedInput.valueState = "Negative";
        return;
      }
      this._isEndValueValid = parseFloat(endValueInput.value) >= this.min && parseFloat(endValueInput.value) <= this.max;
      this._areInputValuesSwapped = true;
      this._setAffectedValue(affectedValue === "startValue" ? "endValue" : "startValue");
      startValueInput.value = this._getFormattedValue(this.endValue.toString());
      endValueInput.value = this._getFormattedValue(this.startValue.toString());
      swappedInput.focus();
      return;
    }
    this._setAffectedValue(affectedValue);
  }
  _updateInputValue() {
    const startValueInput = this.shadowRoot.querySelector("[ui5-input][data-sap-ui-start-value]");
    const endValueInput = this.shadowRoot.querySelector("[ui5-input][data-sap-ui-end-value]");
    if (!startValueInput && !endValueInput) {
      return;
    }
    this._isStartValueValid = parseFloat(startValueInput.value) >= this.min && parseFloat(startValueInput.value) <= this.max;
    this._isEndValueValid = parseFloat(endValueInput.value) >= this.min && parseFloat(endValueInput.value) <= this.max;
    if (!this._isStartValueValid) {
      startValueInput.valueState = "Negative";
      return;
    }
    if (!this._isEndValueValid) {
      endValueInput.valueState = "Negative";
      return;
    }
    this._lastValidStartValue = startValueInput.value;
    this._lastValidEndValue = endValueInput.value;
    startValueInput.valueState = "None";
    endValueInput.valueState = "None";
  }
  _saveInputValues() {
    const startValueInput = this.shadowRoot.querySelector("[ui5-input][data-sap-ui-start-value]");
    const endValueInput = this.shadowRoot.querySelector("[ui5-input][data-sap-ui-end-value]");
    if (this.editableTooltip && startValueInput && endValueInput) {
      const inputStartValue = parseFloat(startValueInput.value);
      const inputEndValue = parseFloat(endValueInput.value);
      const isStartValueValid = inputStartValue >= this.min && inputStartValue <= this.max;
      const isEndValueValid = inputEndValue >= this.min && inputEndValue <= this.max;
      if (this._isUserInteraction) {
        startValueInput.value = isStartValueValid ? this._getFormattedValue(this.startValue.toString()) : this._getFormattedValue(this._lastValidStartValue);
        endValueInput.value = isEndValueValid ? this._getFormattedValue(this.endValue.toString()) : this._getFormattedValue(this._lastValidEndValue);
        this.startValue = parseFloat(this._getFormattedValue(this.startValue.toString()));
        this.endValue = parseFloat(this._getFormattedValue(this.endValue.toString()));
        this.syncUIAndState();
        this._updateHandlesAndRange(0);
        this.update(this._valueAffected, this.startValue, this.endValue);
        return;
      }
      this._lastValidStartValue = isStartValueValid ? this._getFormattedValue(inputStartValue.toString()) : this._getFormattedValue(this._lastValidStartValue);
      this._lastValidEndValue = isEndValueValid ? this._getFormattedValue(inputEndValue.toString()) : this._getFormattedValue(this._lastValidEndValue);
      if (startValueInput.valueState !== "Negative" && endValueInput.valueState !== "Negative") {
        startValueInput.value = isStartValueValid ? this._getFormattedValue(inputStartValue.toString()) : this._getFormattedValue(this._lastValidStartValue);
        endValueInput.value = isEndValueValid ? this._getFormattedValue(inputEndValue.toString()) : this._getFormattedValue(this._lastValidEndValue);
      }
    }
  }
  _getFormattedValue(value) {
    const valueNumber = parseFloat(value);
    const ctor = this.constructor;
    const stepPrecision = ctor._getDecimalPrecisionOfNumber(this._effectiveStep);
    return valueNumber.toFixed(stepPrecision).toString();
  }
  /**
   * Swaps the start and end values of the handles if one came accros the other:
   * - If the start value is greater than the endValue swap them and their handles
   * - If the endValue become less than the start value swap them and their handles
   *
   * Switches the focus to the opposite of the currently focused handle.
   *
   * Note: Only the property values are reversed, the DOM elements of the handles
   * corresponding to them are never switched.
   * @private
   */
  _swapValues() {
    const affectedValue = this._valueAffected;
    if (!affectedValue) {
      return;
    }
    if (affectedValue === "startValue" && this.startValue > this.endValue) {
      const prevEndValue = this.endValue;
      this.endValue = this.startValue;
      this.startValue = prevEndValue;
    }
    if (affectedValue === "endValue" && this.endValue < this.startValue) {
      const prevStartValue = this.startValue;
      this.startValue = this.endValue;
      this.endValue = prevStartValue;
    }
    this._setValuesAreReversed();
    this._updateHandlesAndRange(this[affectedValue]);
    if (!this._areInputValuesSwapped) {
      this.focusInnerElement();
    }
    this.syncUIAndState();
    this._areInputValuesSwapped = false;
  }
  /**
   * Flag that we have swapped the values of the 'start' and 'end' properties,
   * to correctly switch the focus within the component from one handle to another
   * when the swapping is finished. As we only swap property values and not
   * the handle elements themselves, we must also swap their focus.
   * @private
   */
  _setValuesAreReversed() {
    this._reversedValues = !this._reversedValues;
  }
  _areValuesReversed() {
    return this._reversedValues;
  }
  get tickmarksObject() {
    const count = this._tickmarksCount;
    const arr = [];
    if (this._hiddenTickmarks) {
      return [false, false];
    }
    for (let i = 0; i <= count; i++) {
      const isBiggerThanStartValue = this._effectiveMin + i * this.step >= this.startValue;
      const isBiggerThanEndValue = this._effectiveMin + i * this.step <= this.endValue;
      arr.push(isBiggerThanStartValue && isBiggerThanEndValue);
    }
    return arr;
  }
  get _startHandle() {
    return this.shadowRoot.querySelector(".ui5-slider-handle--start");
  }
  get _endHandle() {
    return this.shadowRoot.querySelector(".ui5-slider-handle--end");
  }
  get _progressBar() {
    return this.shadowRoot.querySelector(".ui5-slider-progress");
  }
  get _ariaLabelledByStartHandleText() {
    return this.accessibleName ? ["ui5-slider-accName", "ui5-slider-startHandleDesc"].join(" ").trim() : "ui5-slider-startHandleDesc";
  }
  get _ariaLabelledByEndHandleText() {
    return this.accessibleName ? ["ui5-slider-accName", "ui5-slider-endHandleDesc"].join(" ").trim() : "ui5-slider-endHandleDesc";
  }
  get _ariaLabelledByInputText() {
    return RangeSlider_1.i18nBundle.getText(SLIDER_TOOLTIP_INPUT_LABEL);
  }
  get _ariaDescribedByInputText() {
    return RangeSlider_1.i18nBundle.getText(SLIDER_TOOLTIP_INPUT_DESCRIPTION);
  }
  get styles() {
    return {
      progress: {
        "width": `${this._selectedRange * 100}%`,
        "transform-origin": `${this.directionStart} top`,
        [this.directionStart]: `${this._firstHandlePositionFromStart}%`
      },
      startHandle: {
        [this.directionStart]: `${this._firstHandlePositionFromStart}%`
      },
      endHandle: {
        [this.directionStart]: `${this._secondHandlePositionFromStart}%`
      },
      label: {
        "width": `${this._labelWidth}%`
      },
      labelContainer: {
        "width": `100%`,
        [this.directionStart]: `-${this._labelWidth / 2}%`
      },
      tooltip: {
        "visibility": `${this._tooltipVisibility}`
      }
    };
  }
};
__decorate79([
  property_default({ type: Number })
], RangeSlider.prototype, "startValue", void 0);
__decorate79([
  property_default({ type: Number })
], RangeSlider.prototype, "endValue", void 0);
__decorate79([
  property_default({ type: Boolean })
], RangeSlider.prototype, "rangePressed", void 0);
__decorate79([
  property_default({ type: Boolean })
], RangeSlider.prototype, "_isStartValueValid", void 0);
__decorate79([
  property_default({ type: Boolean })
], RangeSlider.prototype, "_isEndValueValid", void 0);
__decorate79([
  i18n_default("@ui5/webcomponents")
], RangeSlider, "i18nBundle", void 0);
RangeSlider = RangeSlider_1 = __decorate79([
  customElement_default({
    tag: "ui5-range-slider",
    languageAware: true,
    formAssociated: true,
    template: RangeSliderTemplate,
    styles: [SliderBase_default.styles, RangeSlider_css_default]
  })
], RangeSlider);
RangeSlider.define();

// node_modules/@ui5/webcomponents-react/dist/webComponents/RangeSlider/index.js
var RangeSlider3 = withWebComponent("ui5-range-slider", ["accessibleName", "endValue", "labelInterval", "max", "min", "name", "startValue", "step"], ["disabled", "editableTooltip", "showTickmarks", "showTooltip"], [], ["change", "input"]);
RangeSlider3.displayName = "RangeSlider";

// node_modules/@ui5/webcomponents-icons/dist/v4/favorite.js
var name38 = "favorite";
var pathData37 = "M378.36 297.834q-5.996 3.998-2.998 8.995l71.96 193.892q1.999 4.997-2.499 8.995t-9.494.999l-174.903-123.93q-4.997-3-8.995 0L76.53 510.714q-4.997 2.998-9.495-1t-2.499-8.994l71.96-193.892q2-5.997-2.998-8.995L3.569 205.885q-4.997-2.998-2.998-8.495t6.996-5.497h165.908q4.997 0 7.995-4.997L248.433 4.997Q250.432 0 255.929 0t7.495 4.997l66.963 181.899q1.999 4.997 7.996 4.997H503.29q5.996 0 7.995 5.497t-2.998 8.495z";
var ltr37 = false;
var collection38 = "SAP-icons-v4";
var packageName37 = "@ui5/webcomponents-icons";
registerIcon(name38, { pathData: pathData37, ltr: ltr37, collection: collection38, packageName: packageName37 });

// node_modules/@ui5/webcomponents-icons/dist/v5/favorite.js
var name39 = "favorite";
var pathData38 = "M0 198q0-9 6.5-16t15.5-9l148-21 63-137q7-15 23-15t23 15l64 137 147 21q10 2 16 9t6 16q0 11-7 18L399 328l26 154q1 2 1 5 0 10-7.5 17.5T400 512q-6 0-12-3l-132-74-132 74q-4 3-12 3-11 0-18.5-7.5T86 487q0-2 .5-2.5t.5-2.5l26-154L7 216q-7-7-7-18z";
var ltr38 = false;
var collection39 = "SAP-icons-v5";
var packageName38 = "@ui5/webcomponents-icons";
registerIcon(name39, { pathData: pathData38, ltr: ltr38, collection: collection39, packageName: packageName38 });

// node_modules/@ui5/webcomponents-icons/dist/favorite.js
var favorite_default = "favorite";

// node_modules/@ui5/webcomponents-icons/dist/v4/unfavorite.js
var name40 = "unfavorite";
var pathData39 = "M8.569 191.946h164.954q5.998 0 7.998-4.998l66.981-181.95Q250.502 0 256.5 0q4.998 0 6.998 4.999l66.981 181.949q2 4.998 7.998 4.998h165.954q4.998 0 6.998 5.499t-3 8.498l-129.963 91.974q-4 2.999-3 8.997l71.98 193.946q2 4.999-1 7.998t-6.997 3q-3 0-4-1L260.5 386.891q-1-1-4-1-3.998 0-4.998 1L76.551 510.857q-1 1-4 1-3.999 0-6.998-2.999t-1-7.998l71.98-193.946q2-5.998-2.999-8.997L3.57 205.943q-4.998-3-2.999-8.498t7.998-5.499zm143.96 79.978q10.997 7.998 14.996 20.494t-1 25.493l-44.987 121.966L233.506 360.9q9.997-6.998 22.994-6.998 11.996 0 21.994 5.999l111.968 79.977-44.987-121.966q-4.999-12.996-1-25.493t14.996-20.494l68.98-47.986h-89.974q-26.992 0-37.99-25.993L256.5 76.979l-44.988 120.966q-10.997 25.993-37.989 25.993H84.548z";
var ltr39 = false;
var collection40 = "SAP-icons-v4";
var packageName39 = "@ui5/webcomponents-icons";
registerIcon(name40, { pathData: pathData39, ltr: ltr39, collection: collection40, packageName: packageName39 });

// node_modules/@ui5/webcomponents-icons/dist/v5/unfavorite.js
var name41 = "unfavorite";
var pathData40 = "M400 510q-7 0-12-3l-132-74-131 74q-6 3-13 3-11 0-18.5-7T86 485q0-2 .5-2.5t.5-1.5l26-155L7 214q-7-7-7-17t6.5-17 15.5-9l148-21 63-137q7-15 23-15t23 15l64 137 147 21q10 2 16 9t6 17q0 11-7 17L399 326l26 155q1 1 1 4 0 11-7.5 18t-18.5 7zM256 379q7 0 13 3l97 54-20-114q0-7 1-12t6-10l81-85-112-16q-13-1-20-15l-46-99-46 99q-5 13-19 15L78 215l81 85q5 5 6 10t1 12l-20 114 98-54q5-3 12-3z";
var ltr40 = false;
var collection41 = "SAP-icons-v5";
var packageName40 = "@ui5/webcomponents-icons";
registerIcon(name41, { pathData: pathData40, ltr: ltr40, collection: collection41, packageName: packageName40 });

// node_modules/@ui5/webcomponents-icons/dist/unfavorite.js
var unfavorite_default = "unfavorite";

// node_modules/@ui5/webcomponents/dist/RatingIndicatorTemplate.js
function RatingIndicatorTemplate() {
  return jsx("div", { class: "ui5-rating-indicator-root", role: "slider", "aria-roledescription": this._ariaRoleDescription, "aria-valuemin": 0, "aria-valuenow": this.value, "aria-valuemax": this.max, "aria-valuetext": `${this.value} of ${this.max}`, "aria-orientation": "horizontal", "aria-disabled": this._ariaDisabled, "aria-readonly": this.ariaReadonly, "aria-description": this._ariaDescription, tabindex: this.effectiveTabIndex, onFocusIn: this._onfocusin, onFocusOut: this._onfocusout, onClick: this._onclick, onKeyDown: this._onkeydown, title: this.ratingTooltip, "aria-label": this._ariaLabel, children: jsx("ul", { class: "ui5-rating-indicator-list", "aria-hidden": "true", children: this._stars.map((star) => starLi.call(this, star)) }) });
}
function starLi(star) {
  if (star.selected) {
    return jsx("li", { "data-ui5-value": star.index, class: "ui5-rating-indicator-item ui5-rating-indicator-item-sel", children: jsx(Icon_default, { "data-ui5-value": star.index, name: favorite_default }) });
  }
  if (star.halfStar) {
    return jsxs("li", { class: "ui5-rating-indicator-item ui5-rating-indicator-item-half", children: [jsx(Icon_default, { "data-ui5-value": star.index, name: halfStarIconName.call(this) }), jsx("div", { class: "ui5-rating-indicator-half-icon-wrapper", children: jsx(Icon_default, { "data-ui5-value": star.index, name: favorite_default, class: "ui5-rating-indicator-half-icon" }) })] });
  }
  if (this.readonly) {
    return jsx("li", { class: "ui5-rating-indicator-item ui5-rating-indicator-item-unsel", children: jsx(Icon_default, { "data-ui5-value": star.index, name: favorite_default }) });
  }
  if (this.disabled) {
    return jsx("li", { class: "ui5-rating-indicator-item ui5-rating-indicator-item-unsel", children: jsx(Icon_default, { "data-ui5-value": star.index, name: favorite_default }) });
  }
  return jsx("li", { "data-ui5-value": star.index, class: "ui5-rating-indicator-item ui5-rating-indicator-item-unsel", children: jsx(Icon_default, { "data-ui5-value": star.index, name: unfavorite_default }) });
}
function halfStarIconName() {
  return this.disabled || this.readonly ? favorite_default : unfavorite_default;
}

// node_modules/@ui5/webcomponents/dist/generated/themes/RatingIndicator.css.js
registerThemePropertiesLoader("@ui5/webcomponents-theming", "sap_horizon", async () => parameters_bundle_css_default);
registerThemePropertiesLoader("@ui5/webcomponents", "sap_horizon", async () => parameters_bundle_css_default2);
var RatingIndicator_css_default = `:host(:not([hidden])){display:inline-block;font-size:24px;margin:var(--_ui5-v2-8-0_rating_indicator_component_spacing);cursor:pointer}:host([disabled]){opacity:.4;cursor:initial;outline:none}:host([readonly]){cursor:initial}:host([disabled]) .ui5-rating-indicator-item-unsel,:host([readonly]) .ui5-rating-indicator-item-unsel{padding-inline:var(--_ui5-v2-8-0_rating_indicator_readonly_item_spacing);width:var(--_ui5-v2-8-0_rating_indicator_readonly_item_width);height:var(--_ui5-v2-8-0_rating_indicator_readonly_item_height)}:host(:not([readonly]):not([disabled])) .ui5-rating-indicator-root:hover{opacity:.9}:host([_focused]){outline:var(--sapContent_FocusWidth) var(--sapContent_FocusStyle) var(--sapContent_FocusColor);outline-offset:var(--_ui5-v2-8-0_rating_indicator_outline_offset);border-radius:var(--_ui5-v2-8-0_rating_indicator_border_radius)}:host([size="S"]) .ui5-rating-indicator-item{font-size:var(--_ui5-v2-8-0_rating_indicator_item_size_s)}:host([size="L"]) .ui5-rating-indicator-item{font-size:var(--_ui5-v2-8-0_rating_indicator_item_size_l)}[ui5-icon]{display:flex;text-shadow:var(--sapContent_TextShadow)}.ui5-rating-indicator-root{outline:none;position:relative;padding:var(--_ui5-v2-8-0_rating_indicator_component_padding)}.ui5-rating-indicator-list{list-style-type:none;display:flex;align-items:center;margin:0;padding:0}.ui5-rating-indicator-item{position:relative;width:var(--_ui5-v2-8-0_rating_indicator_item_width);height:var(--_ui5-v2-8-0_rating_indicator_item_height)}:host([size="L"]) .ui5-rating-indicator-item:not(:last-child){margin-inline-end:.25rem}.ui5-rating-indicator-item:not(:last-child){margin-inline-end:.1875rem}.ui5-rating-indicator-item [ui5-icon]{width:100%;height:100%;color:inherit;user-select:none}.ui5-rating-indicator-item.ui5-rating-indicator-item-sel{color:var(--sapContent_RatedColor)}.ui5-rating-indicator-item.ui5-rating-indicator-item-unsel,.ui5-rating-indicator-item.ui5-rating-indicator-item-half{color:var(--sapContent_UnratedColor)}.ui5-rating-indicator-item [ui5-icon].ui5-rating-indicator-half-icon{position:absolute;inset-inline-start:50%;color:var(--sapContent_RatedColor)}.ui5-rating-indicator-half-icon-wrapper{width:100%;height:100%;position:absolute;inset-inline-start:-50%;top:0;z-index:32;overflow:hidden}
`;

// node_modules/@ui5/webcomponents/dist/RatingIndicator.js
var __decorate80 = function(decorators, target, key, desc) {
  var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
  if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
  else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
  return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var RatingIndicator_1;
var RatingIndicator = RatingIndicator_1 = class RatingIndicator2 extends UI5Element_default {
  constructor() {
    super();
    this.value = 0;
    this.max = 5;
    this.size = "M";
    this.disabled = false;
    this.readonly = false;
    this.required = false;
    this._stars = [];
    this._focused = false;
  }
  onBeforeRendering() {
    this.calcState();
  }
  calcState() {
    this._stars = [];
    for (let i = 1; i < this.max + 1; i++) {
      const remainder = Math.round((this.value - Math.floor(this.value)) * 10);
      let halfStar = false, tempValue = this.value;
      if (Math.floor(this.value) + 1 === i && remainder > 2 && remainder < 8) {
        halfStar = true;
      } else if (remainder <= 2) {
        tempValue = Math.floor(this.value);
      } else if (remainder >= 8) {
        tempValue = Math.ceil(this.value);
      }
      this._stars.push({
        selected: i <= tempValue,
        index: i,
        halfStar
      });
    }
  }
  _onclick(e) {
    const target = e.target;
    if (!(target instanceof HTMLElement) || this.disabled || this.readonly) {
      return;
    }
    const targetValue = target.getAttribute("data-ui5-value");
    if (targetValue !== null) {
      this.value = parseInt(targetValue);
      if (this.value === 1 && this._liveValue === 1) {
        this.value = 0;
      }
      if (this._liveValue !== this.value) {
        this.fireDecoratorEvent("change");
        this._liveValue = this.value;
      }
    }
  }
  _onkeydown(e) {
    if (this.disabled || this.readonly) {
      if (isSpace(e)) {
        e.preventDefault();
      }
      return;
    }
    const isDecrease = isDown(e) || isLeft(e);
    const isIncrease = isRight(e) || isUp(e);
    const isIncreaseWithReset = isSpace(e) || isEnter(e);
    const isMin = isHome(e);
    const isMax = isEnd(e);
    const isNumber2 = e.keyCode >= 48 && e.keyCode <= 57 || e.keyCode >= 96 && e.keyCode <= 105;
    if (isDecrease || isIncrease || isIncreaseWithReset || isMin || isMax || isNumber2) {
      e.preventDefault();
      if (isDecrease && this.value > 0) {
        this.value = Math.round(this.value - 1);
      } else if (isIncrease && this.value < this.max) {
        this.value = Math.round(this.value + 1);
      } else if (isIncreaseWithReset) {
        const proposedValue = Math.round(this.value + 1);
        this.value = proposedValue > this.max ? 0 : proposedValue;
      } else if (isMin) {
        this.value = 0;
      } else if (isMax) {
        this.value = this.max;
      } else if (isNumber2) {
        const pressedNumber = parseInt(e.key);
        this.value = pressedNumber > this.max ? this.max : pressedNumber;
      }
      this.fireDecoratorEvent("change");
    }
  }
  _onfocusin() {
    if (this.disabled) {
      return;
    }
    this._focused = true;
    this._liveValue = this.value;
  }
  _onfocusout() {
    this._focused = false;
  }
  get effectiveTabIndex() {
    const tabindex = this.getAttribute("tabindex");
    if (this.disabled) {
      return -1;
    }
    return tabindex ? parseInt(tabindex) : 0;
  }
  get ratingTooltip() {
    if (this.tooltip) {
      return this.tooltip;
    }
    return getEnableDefaultTooltips() ? this.defaultTooltip : void 0;
  }
  get defaultTooltip() {
    return RatingIndicator_1.i18nBundle.getText(RATING_INDICATOR_TOOLTIP_TEXT);
  }
  get _ariaRoleDescription() {
    return RatingIndicator_1.i18nBundle.getText(RATING_INDICATOR_TEXT);
  }
  get _ariaDisabled() {
    return this.disabled || void 0;
  }
  get _ariaLabel() {
    return getEffectiveAriaLabelText(this);
  }
  get _ariaDescription() {
    return this.required ? RatingIndicator_1.i18nBundle.getText(RATING_INDICATOR_ARIA_DESCRIPTION) : void 0;
  }
  get ariaReadonly() {
    return this.readonly ? "true" : void 0;
  }
};
__decorate80([
  property_default({ type: Number })
], RatingIndicator.prototype, "value", void 0);
__decorate80([
  property_default({ type: Number })
], RatingIndicator.prototype, "max", void 0);
__decorate80([
  property_default()
], RatingIndicator.prototype, "size", void 0);
__decorate80([
  property_default({ type: Boolean })
], RatingIndicator.prototype, "disabled", void 0);
__decorate80([
  property_default({ type: Boolean })
], RatingIndicator.prototype, "readonly", void 0);
__decorate80([
  property_default()
], RatingIndicator.prototype, "accessibleName", void 0);
__decorate80([
  property_default()
], RatingIndicator.prototype, "accessibleNameRef", void 0);
__decorate80([
  property_default({ type: Boolean })
], RatingIndicator.prototype, "required", void 0);
__decorate80([
  property_default()
], RatingIndicator.prototype, "tooltip", void 0);
__decorate80([
  property_default({ type: Array })
], RatingIndicator.prototype, "_stars", void 0);
__decorate80([
  property_default({ type: Boolean })
], RatingIndicator.prototype, "_focused", void 0);
__decorate80([
  i18n_default("@ui5/webcomponents")
], RatingIndicator, "i18nBundle", void 0);
RatingIndicator = RatingIndicator_1 = __decorate80([
  customElement_default({
    tag: "ui5-rating-indicator",
    languageAware: true,
    renderer: JsxRenderer_default,
    styles: RatingIndicator_css_default,
    template: RatingIndicatorTemplate
  }),
  event_strict_default("change", {
    bubbles: true
  })
], RatingIndicator);
RatingIndicator.define();

// node_modules/@ui5/webcomponents-react/dist/webComponents/RatingIndicator/index.js
var RatingIndicator3 = withWebComponent("ui5-rating-indicator", ["accessibleName", "accessibleNameRef", "max", "size", "tooltip", "value"], ["disabled", "readonly", "required"], [], ["change"]);
RatingIndicator3.displayName = "RatingIndicator";

// node_modules/@ui5/webcomponents-react/dist/webComponents/ResponsivePopover/index.js
var ResponsivePopover = withWebComponent("ui5-responsive-popover", ["accessibleName", "accessibleNameRef", "accessibleRole", "headerText", "horizontalAlign", "initialFocus", "opener", "placement", "verticalAlign"], ["allowTargetOverlap", "hideArrow", "modal", "open", "preventFocusRestore", "preventInitialFocus"], ["footer", "header"], ["before-close", "before-open", "close", "open"]);
ResponsivePopover.displayName = "ResponsivePopover";

// node_modules/@ui5/webcomponents-react/dist/webComponents/SegmentedButton/index.js
var SegmentedButton3 = withWebComponent("ui5-segmented-button", ["accessibleName", "selectionMode"], [], [], ["selection-change"]);
SegmentedButton3.displayName = "SegmentedButton";

// node_modules/@ui5/webcomponents-react/dist/webComponents/SegmentedButtonItem/index.js
var SegmentedButtonItem3 = withWebComponent("ui5-segmented-button-item", ["accessibleName", "accessibleNameRef", "icon", "tooltip"], ["disabled", "selected"], [], []);
SegmentedButtonItem3.displayName = "SegmentedButtonItem";

// node_modules/@ui5/webcomponents/dist/SelectPopoverTemplate.js
function SelectPopoverTemplate() {
  return jsxs(Fragment, { children: [this.options.length > 0 && jsxs(ResponsivePopover_default, { class: {
    "ui5-select-popover": true,
    ...this.classes.popover
  }, part: "popover", style: this.styles.responsivePopover, placement: "Bottom", horizontalAlign: "Start", hideArrow: true, preventInitialFocus: true, onOpen: this._afterOpen, onBeforeOpen: this._beforeOpen, onClose: this._afterClose, onKeyDown: this._onkeydown, children: [this._isPhone && jsxs("div", { slot: "header", class: "ui5-responsive-popover-header", children: [jsxs("div", { class: "row", children: [jsx("span", { children: this._headerTitleText }), jsx(Button_default, { class: "ui5-responsive-popover-close-btn", icon: decline_default, design: "Transparent", onClick: this._toggleRespPopover })] }), this.hasValueStateText && jsx("div", { class: {
    "row": true,
    "ui5-select-value-state-dialog-header": true,
    ...this.classes.popoverValueState
  }, children: this._isPickerOpen && valueStateMessage4.call(this) })] }), !this._isPhone && this.hasValueStateText && jsxs("div", { class: this.classes.popoverValueState, style: this.styles.responsivePopoverHeader, children: [jsx(Icon_default, { class: "ui5-input-value-state-message-icon", name: this._valueStateMessageInputIcon }), this._isPickerOpen && valueStateMessage4.call(this)] }), jsx(List_default, { separators: "None", onMouseDown: this._itemMousedown, onItemClick: this._handleItemPress, children: jsx("slot", {}) })] }), this.shouldOpenValueStateMessagePopover && jsx(Popover_default, { part: "popover", class: "ui5-valuestatemessage-popover", preventInitialFocus: true, preventFocusRestore: true, hideArrow: true, placement: "Bottom", horizontalAlign: "Start", children: jsxs("div", { class: this.classes.popoverValueState, style: this.styles.popoverHeader, children: [jsx(Icon_default, { class: "ui5-input-value-state-message-icon", name: this._valueStateMessageInputIcon }), valueStateMessage4.call(this)] }) })] });
}
function valueStateMessage4() {
  return jsx(Fragment, { children: this.shouldDisplayDefaultValueStateMessage ? this.valueStateText : jsx("slot", { onClick: this._applyFocus, name: "valueStateMessage" }) });
}

// node_modules/@ui5/webcomponents/dist/SelectTemplate.js
function SelectTemplate() {
  return jsxs(Fragment, { children: [jsxs("div", { class: {
    "ui5-select-root": true,
    "ui5-input-focusable-element": true
  }, id: `${this._id}-select`, onClick: this._onclick, title: this.tooltip, children: [this.selectedOptionIcon && jsx(Icon_default, { mode: "Decorative", class: "ui5-select-option-icon", name: this.selectedOptionIcon }), jsx("div", { class: "ui5-select-label-root", "data-sap-focus-ref": true, tabindex: this._effectiveTabIndex, role: "combobox", "aria-haspopup": "listbox", "aria-label": this.ariaLabelText, "aria-describedby": this.valueStateTextId, "aria-disabled": this.isDisabled, "aria-required": this.required, "aria-readonly": this.readonly, "aria-expanded": this._isPickerOpen, "aria-roledescription": this._ariaRoleDescription, onKeyDown: this._onkeydown, onKeyPress: this._handleKeyboardNavigation, onKeyUp: this._onkeyup, onFocusIn: this._onfocusin, onFocusOut: this._onfocusout, children: this.hasCustomLabel ? jsx("slot", { name: "label" }) : this.text }), !this.readonly && jsx(Icon_default, { part: "icon", name: slim_arrow_down_default, class: {
    "inputIcon": true,
    "inputIcon--pressed": this._iconPressed
  } }), this.hasValueState && jsx("span", { id: `${this._id}-valueStateDesc`, class: "ui5-hidden-text", children: this.valueStateText })] }), SelectPopoverTemplate.call(this)] });
}

// node_modules/@ui5/webcomponents/dist/generated/themes/Select.css.js
registerThemePropertiesLoader("@ui5/webcomponents-theming", "sap_horizon", async () => parameters_bundle_css_default);
registerThemePropertiesLoader("@ui5/webcomponents", "sap_horizon", async () => parameters_bundle_css_default2);
var Select_css_default = `:host{vertical-align:middle}.ui5-hidden-text{position:absolute;clip:rect(1px,1px,1px,1px);user-select:none;left:-1000px;top:-1000px;pointer-events:none;font-size:0}.inputIcon{color:var(--_ui5-v2-8-0_input_icon_color);cursor:pointer;outline:none;padding:var(--_ui5-v2-8-0_input_icon_padding);border-inline-start:var(--_ui5-v2-8-0_input_icon_border);min-width:1rem;min-height:1rem;border-radius:var(--_ui5-v2-8-0_input_icon_border_radius)}.inputIcon.inputIcon--pressed{background:var(--_ui5-v2-8-0_input_icon_pressed_bg);box-shadow:var(--_ui5-v2-8-0_input_icon_box_shadow);border-inline-start:var(--_ui5-v2-8-0_select_hover_icon_left_border);color:var(--_ui5-v2-8-0_input_icon_pressed_color)}.inputIcon:active{background-color:var(--sapButton_Active_Background);box-shadow:var(--_ui5-v2-8-0_input_icon_box_shadow);border-inline-start:var(--_ui5-v2-8-0_select_hover_icon_left_border);color:var(--_ui5-v2-8-0_input_icon_pressed_color)}.inputIcon:not(.inputIcon--pressed):not(:active):hover{background:var(--_ui5-v2-8-0_input_icon_hover_bg);box-shadow:var(--_ui5-v2-8-0_input_icon_box_shadow)}.inputIcon:hover{border-inline-start:var(--_ui5-v2-8-0_select_hover_icon_left_border);box-shadow:var(--_ui5-v2-8-0_input_icon_box_shadow)}:host(:not([hidden])){display:inline-block}:host{width:var(--_ui5-v2-8-0_input_width);min-width:calc(var(--_ui5-v2-8-0_input_min_width) + (var(--_ui5-v2-8-0-input-icons-count)*var(--_ui5-v2-8-0_input_icon_width)));margin:var(--_ui5-v2-8-0_input_margin_top_bottom) 0;height:var(--_ui5-v2-8-0_input_height);color:var(--sapField_TextColor);font-size:var(--sapFontSize);font-family:"72override",var(--sapFontFamily);font-style:normal;border:var(--_ui5-v2-8-0-input-border);border-radius:var(--_ui5-v2-8-0_input_border_radius);box-sizing:border-box;text-align:start;transition:var(--_ui5-v2-8-0_input_transition);background:var(--sapField_BackgroundStyle);background-color:var(--_ui5-v2-8-0_input_background_color)}:host(:not([readonly])),:host([readonly][disabled]){box-shadow:var(--sapField_Shadow)}:host([focused]:not([opened])){border-color:var(--_ui5-v2-8-0_input_focused_border_color);background-color:var(--sapField_Focus_Background)}.ui5-input-focusable-element{position:relative}:host([focused]:not([opened])) .ui5-input-focusable-element:after{content:var(--ui5-v2-8-0_input_focus_pseudo_element_content);position:absolute;pointer-events:none;z-index:2;border:var(--sapContent_FocusWidth) var(--sapContent_FocusStyle) var(--_ui5-v2-8-0_input_focus_outline_color);border-radius:var(--_ui5-v2-8-0_input_focus_border_radius);top:var(--_ui5-v2-8-0_input_focus_offset);bottom:var(--_ui5-v2-8-0_input_focus_offset);left:var(--_ui5-v2-8-0_input_focus_offset);right:var(--_ui5-v2-8-0_input_focus_offset)}:host([focused][readonly]:not([opened])) .ui5-input-focusable-element:after{top:var(--_ui5-v2-8-0_input_readonly_focus_offset);bottom:var(--_ui5-v2-8-0_input_readonly_focus_offset);left:var(--_ui5-v2-8-0_input_readonly_focus_offset);right:var(--_ui5-v2-8-0_input_readonly_focus_offset);border-radius:var(--_ui5-v2-8-0_input_readonly_focus_border_radius)}.ui5-input-root:before{content:"";position:absolute;width:calc(100% - 2px);left:1px;bottom:-2px;border-bottom-left-radius:8px;border-bottom-right-radius:8px;height:var(--_ui5-v2-8-0_input_bottom_border_height);transition:var(--_ui5-v2-8-0_input_transition);background-color:var(--_ui5-v2-8-0_input_bottom_border_color)}.ui5-input-root{width:100%;height:100%;position:relative;background:transparent;display:inline-block;outline:none;box-sizing:border-box;color:inherit;transition:border-color .2s ease-in-out;border-radius:var(--_ui5-v2-8-0_input_border_radius);overflow:hidden}:host([disabled]){opacity:var(--_ui5-v2-8-0_input_disabled_opacity);cursor:default;pointer-events:none;background-color:var(--_ui5-v2-8-0-input_disabled_background);border-color:var(--_ui5-v2-8-0_input_disabled_border_color)}:host([disabled]) .ui5-input-root:before,:host([readonly]) .ui5-input-root:before{content:none}[inner-input]{background:transparent;color:inherit;border:none;font-style:inherit;-webkit-appearance:none;-moz-appearance:textfield;padding:var(--_ui5-v2-8-0_input_inner_padding);box-sizing:border-box;width:100%;text-overflow:ellipsis;flex:1;outline:none;font-size:inherit;font-family:inherit;line-height:inherit;letter-spacing:inherit;word-spacing:inherit;text-align:inherit}[inner-input][inner-input-with-icon]{padding:var(--_ui5-v2-8-0_input_inner_padding_with_icon)}[inner-input][type=search]::-webkit-search-decoration,[inner-input][type=search]::-webkit-search-cancel-button,[inner-input][type=search]::-webkit-search-results-button,[inner-input][type=search]::-webkit-search-results-decoration{display:none}.ui5-input-value-state-icon{height:100%;display:var(--_ui5-v2-8-0-input-value-state-icon-display);align-items:center}.ui5-input-value-state-icon>svg{margin-right:8px}[inner-input]::selection{background:var(--sapSelectedColor);color:var(--sapContent_ContrastTextColor)}:host([disabled]) [inner-input]::-webkit-input-placeholder{visibility:hidden}:host([readonly]) [inner-input]::-webkit-input-placeholder{visibility:hidden}:host([disabled]) [inner-input]::-moz-placeholder{visibility:hidden}:host([readonly]) [inner-input]::-moz-placeholder{visibility:hidden}[inner-input]::-webkit-input-placeholder{font-weight:400;font-style:var(--_ui5-v2-8-0_input_placeholder_style);color:var(--_ui5-v2-8-0_input_placeholder_color);padding-right:.125rem}[inner-input]::-moz-placeholder{font-weight:400;font-style:var(--_ui5-v2-8-0_input_placeholder_style);color:var(--_ui5-v2-8-0_input_placeholder_color);padding-right:.125rem}:host([value-state="Negative"]) [inner-input]::-webkit-input-placeholder{color:var(--_ui5-v2-8-0-input_error_placeholder_color);font-weight:var(--_ui5-v2-8-0_input_value_state_error_warning_placeholder_font_weight)}:host([value-state="Negative"]) [inner-input]::-moz-placeholder{color:var(--_ui5-v2-8-0-input_error_placeholder_color);font-weight:var(--_ui5-v2-8-0_input_value_state_error_warning_placeholder_font_weight)}:host([value-state="Critical"]) [inner-input]::-webkit-input-placeholder{font-weight:var(--_ui5-v2-8-0_input_value_state_error_warning_placeholder_font_weight)}:host([value-state="Critical"]) [inner-input]::-moz-placeholder{font-weight:var(--_ui5-v2-8-0_input_value_state_error_warning_placeholder_font_weight)}:host([value-state="Positive"]) [inner-input]::-webkit-input-placeholder{color:var(--_ui5-v2-8-0_input_placeholder_color)}:host([value-state="Positive"]) [inner-input]::-moz-placeholder{color:var(--_ui5-v2-8-0_input_placeholder_color)}:host([value-state="Information"]) [inner-input]::-webkit-input-placeholder{color:var(--_ui5-v2-8-0_input_placeholder_color)}:host([value-state="Information"]) [inner-input]::-moz-placeholder{color:var(--_ui5-v2-8-0_input_placeholder_color)}.ui5-input-content{height:100%;box-sizing:border-box;display:flex;flex-direction:row;justify-content:flex-end;overflow:hidden;outline:none;background:transparent;color:inherit;border-radius:var(--_ui5-v2-8-0_input_border_radius)}:host([readonly]:not([disabled])){border-color:var(--_ui5-v2-8-0_input_readonly_border_color);background:var(--sapField_ReadOnly_BackgroundStyle);background-color:var(--_ui5-v2-8-0_input_readonly_background)}:host([value-state="None"]:not([readonly]):hover),:host(:not([value-state]):not([readonly]):hover){border:var(--_ui5-v2-8-0_input_hover_border);border-color:var(--_ui5-v2-8-0_input_focused_border_color);box-shadow:var(--sapField_Hover_Shadow);background:var(--sapField_Hover_BackgroundStyle);background-color:var(--sapField_Hover_Background)}:host(:not([value-state]):not([readonly])[focused]:not([opened]):hover),:host([value-state="None"]:not([readonly])[focused]:not([opened]):hover){box-shadow:none}:host([focused]):not([opened]) .ui5-input-root:before{content:none}:host(:not([readonly]):not([disabled])[value-state]:not([value-state="None"])){border-width:var(--_ui5-v2-8-0_input_state_border_width)}:host([value-state="Negative"]) [inner-input],:host([value-state="Critical"]) [inner-input]{font-style:var(--_ui5-v2-8-0_input_error_warning_font_style);text-indent:var(--_ui5-v2-8-0_input_error_warning_text_indent)}:host([value-state="Negative"]) [inner-input]{font-weight:var(--_ui5-v2-8-0_input_error_font_weight)}:host([value-state="Critical"]) [inner-input]{font-weight:var(--_ui5-v2-8-0_input_warning_font_weight)}:host([value-state="Negative"]:not([readonly]):not([disabled])){background:var(--sapField_InvalidBackgroundStyle);background-color:var(--sapField_InvalidBackground);border-color:var(--_ui5-v2-8-0_input_value_state_error_border_color);box-shadow:var(--sapField_InvalidShadow)}:host([value-state="Negative"][focused]:not([opened]):not([readonly])){background-color:var(--_ui5-v2-8-0_input_focused_value_state_error_background);border-color:var(--_ui5-v2-8-0_input_focused_value_state_error_border_color)}:host([value-state="Negative"][focused]:not([opened]):not([readonly])) .ui5-input-focusable-element:after{border-color:var(--_ui5-v2-8-0_input_focused_value_state_error_focus_outline_color)}:host([value-state="Negative"]:not([readonly])) .ui5-input-root:before{background-color:var(--_ui5-v2-8-0-input-value-state-error-border-botom-color)}:host([value-state="Negative"]:not([readonly]):not([focused]):hover),:host([value-state="Negative"]:not([readonly])[focused][opened]:hover){background-color:var(--_ui5-v2-8-0_input_value_state_error_hover_background);box-shadow:var(--sapField_Hover_InvalidShadow)}:host([value-state="Negative"]:not([readonly]):not([disabled])),:host([value-state="Critical"]:not([readonly]):not([disabled])),:host([value-state="Information"]:not([readonly]):not([disabled])){border-style:var(--_ui5-v2-8-0_input_error_warning_border_style)}:host([value-state="Critical"]:not([readonly]):not([disabled])){background:var(--sapField_WarningBackgroundStyle);background-color:var(--sapField_WarningBackground);border-color:var(--_ui5-v2-8-0_input_value_state_warning_border_color);box-shadow:var(--sapField_WarningShadow)}:host([value-state="Critical"][focused]:not([opened]):not([readonly])){background-color:var(--_ui5-v2-8-0_input_focused_value_state_warning_background);border-color:var(--_ui5-v2-8-0_input_focused_value_state_warning_border_color)}:host([value-state="Critical"][focused]:not([opened]):not([readonly])) .ui5-input-focusable-element:after{border-color:var(--_ui5-v2-8-0_input_focused_value_state_warning_focus_outline_color)}:host([value-state="Critical"]:not([readonly])) .ui5-input-root:before{background-color:var(--_ui5-v2-8-0_input_value_state_warning_border_botom_color)}:host([value-state="Critical"]:not([readonly]):not([focused]):hover),:host([value-state="Critical"]:not([readonly])[focused][opened]:hover){background-color:var(--sapField_Hover_Background);box-shadow:var(--sapField_Hover_WarningShadow)}:host([value-state="Positive"]:not([readonly]):not([disabled])){background:var(--sapField_SuccessBackgroundStyle);background-color:var(--sapField_SuccessBackground);border-color:var(--_ui5-v2-8-0_input_value_state_success_border_color);border-width:var(--_ui5-v2-8-0_input_value_state_success_border_width);box-shadow:var(--sapField_SuccessShadow)}:host([value-state="Positive"][focused]:not([opened]):not([readonly])){background-color:var(--_ui5-v2-8-0_input_focused_value_state_success_background);border-color:var(--_ui5-v2-8-0_input_focused_value_state_success_border_color)}:host([value-state="Positive"][focused]:not([opened]):not([readonly])) .ui5-input-focusable-element:after{border-color:var(--_ui5-v2-8-0_input_focused_value_state_success_focus_outline_color)}:host([value-state="Positive"]:not([readonly])) .ui5-input-root:before{background-color:var(--_ui5-v2-8-0_input_value_state_success_border_botom_color)}:host([value-state="Positive"]:not([readonly]):not([focused]):hover),:host([value-state="Positive"]:not([readonly])[focused][opened]:hover){background-color:var(--sapField_Hover_Background);box-shadow:var(--sapField_Hover_SuccessShadow)}:host([value-state="Information"]:not([readonly]):not([disabled])){background:var(--sapField_InformationBackgroundStyle);background-color:var(--sapField_InformationBackground);border-color:var(--_ui5-v2-8-0_input_value_state_information_border_color);border-width:var(--_ui5-v2-8-0_input_information_border_width);box-shadow:var(--sapField_InformationShadow)}:host([value-state="Information"][focused]:not([opened]):not([readonly])){background-color:var(--_ui5-v2-8-0_input_focused_value_state_information_background);border-color:var(--_ui5-v2-8-0_input_focused_value_state_information_border_color)}:host([value-state="Information"]:not([readonly])) .ui5-input-root:before{background-color:var(--_ui5-v2-8-0_input_value_success_information_border_botom_color)}:host([value-state="Information"]:not([readonly]):not([focused]):hover),:host([value-state="Information"]:not([readonly])[focused][opened]:hover){background-color:var(--sapField_Hover_Background);box-shadow:var(--sapField_Hover_InformationShadow)}.ui5-input-icon-root{min-width:var(--_ui5-v2-8-0_input_icon_min_width);height:100%;display:flex;justify-content:center;align-items:center}::slotted([ui5-icon][slot="icon"]){align-self:start;padding:var(--_ui5-v2-8-0_input_custom_icon_padding);box-sizing:content-box!important}:host([value-state="Negative"]) .inputIcon,:host([value-state="Critical"]) .inputIcon{padding:var(--_ui5-v2-8-0_input_error_warning_icon_padding)}:host([value-state="Negative"][focused]) .inputIcon,:host([value-state="Critical"][focused]) .inputIcon{padding:var(--_ui5-v2-8-0_input_error_warning_focused_icon_padding)}:host([value-state="Information"]) .inputIcon{padding:var(--_ui5-v2-8-0_input_information_icon_padding)}:host([value-state="Information"][focused]) .inputIcon{padding:var(--_ui5-v2-8-0_input_information_focused_icon_padding)}:host([value-state="Negative"]) ::slotted(.inputIcon[ui5-icon]),:host([value-state="Negative"]) ::slotted([ui5-icon][slot="icon"]),:host([value-state="Critical"]) ::slotted([ui5-icon][slot="icon"]){padding:var(--_ui5-v2-8-0_input_error_warning_custom_icon_padding)}:host([value-state="Negative"][focused]) ::slotted(.inputIcon[ui5-icon]),:host([value-state="Negative"][focused]) ::slotted([ui5-icon][slot="icon"]),:host([value-state="Critical"][focused]) ::slotted([ui5-icon][slot="icon"]){padding:var(--_ui5-v2-8-0_input_error_warning_custom_focused_icon_padding)}:host([value-state="Information"]) ::slotted([ui5-icon][slot="icon"]){padding:var(--_ui5-v2-8-0_input_information_custom_icon_padding)}:host([value-state="Information"][focused]) ::slotted([ui5-icon][slot="icon"]){padding:var(--_ui5-v2-8-0_input_information_custom_focused_icon_padding)}:host([value-state="Negative"]) .inputIcon:active,:host([value-state="Negative"]) .inputIcon.inputIcon--pressed{box-shadow:var(--_ui5-v2-8-0_input_error_icon_box_shadow);color:var(--_ui5-v2-8-0_input_icon_error_pressed_color)}:host([value-state="Negative"]) .inputIcon:not(.inputIcon--pressed):not(:active):hover{box-shadow:var(--_ui5-v2-8-0_input_error_icon_box_shadow)}:host([value-state="Critical"]) .inputIcon:active,:host([value-state="Critical"]) .inputIcon.inputIcon--pressed{box-shadow:var(--_ui5-v2-8-0_input_warning_icon_box_shadow);color:var(--_ui5-v2-8-0_input_icon_warning_pressed_color)}:host([value-state="Critical"]) .inputIcon:not(.inputIcon--pressed):not(:active):hover{box-shadow:var(--_ui5-v2-8-0_input_warning_icon_box_shadow)}:host([value-state="Information"]) .inputIcon:active,:host([value-state="Information"]) .inputIcon.inputIcon--pressed{box-shadow:var(--_ui5-v2-8-0_input_information_icon_box_shadow);color:var(--_ui5-v2-8-0_input_icon_information_pressed_color)}:host([value-state="Information"]) .inputIcon:not(.inputIcon--pressed):not(:active):hover{box-shadow:var(--_ui5-v2-8-0_input_information_icon_box_shadow)}:host([value-state="Positive"]) .inputIcon:active,:host([value-state="Positive"]) .inputIcon.inputIcon--pressed{box-shadow:var(--_ui5-v2-8-0_input_success_icon_box_shadow);color:var(--_ui5-v2-8-0_input_icon_success_pressed_color)}:host([value-state="Positive"]) .inputIcon:not(.inputIcon--pressed):not(:active):hover{box-shadow:var(--_ui5-v2-8-0_input_success_icon_box_shadow)}.ui5-input-clear-icon-wrapper{height:var(--_ui5-v2-8-0_input_icon_wrapper_height);padding:0;width:var(--_ui5-v2-8-0_input_icon_width);min-width:var(--_ui5-v2-8-0_input_icon_width);display:flex;justify-content:center;align-items:center;box-sizing:border-box}:host([value-state]:not([value-state="None"]):not([value-state="Positive"])) .ui5-input-clear-icon-wrapper{height:var(--_ui5-v2-8-0_input_icon_wrapper_state_height);vertical-align:top}:host([value-state="Positive"]) .ui5-input-clear-icon-wrapper{height:var(--_ui5-v2-8-0_input_icon_wrapper_success_state_height)}[ui5-icon].ui5-input-clear-icon{padding:0;color:inherit}[inner-input]::-webkit-outer-spin-button,[inner-input]::-webkit-inner-spin-button{-webkit-appearance:inherit;margin:inherit}.ui5-select-root{min-width:calc(var(--_ui5-v2-8-0_input_min_width) + (var(--_ui5-v2-8-0-input-icons-count)*var(--_ui5-v2-8-0_input_icon_width)));width:100%;height:100%;display:flex;outline:none;cursor:pointer;overflow:hidden;border-radius:var(--_ui5-v2-8-0_input_border_radius)}.ui5-select-label-root{flex-shrink:1;flex-grow:1;align-self:center;min-width:1rem;padding-inline-start:.5rem;cursor:pointer;outline:none;white-space:nowrap;overflow:hidden;text-overflow:ellipsis;color:var(--_ui5-v2-8-0_select_label_color);font-family:"72override",var(--sapFontFamily);font-size:var(--sapFontSize);font-weight:400}.ui5-select-option-icon{padding-inline-start:.5rem;color:var(--sapField_TextColor);align-self:center}:host(:not([disabled])){cursor:pointer}
`;

// node_modules/@ui5/webcomponents/dist/generated/themes/SelectPopover.css.js
registerThemePropertiesLoader("@ui5/webcomponents-theming", "sap_horizon", async () => parameters_bundle_css_default);
registerThemePropertiesLoader("@ui5/webcomponents", "sap_horizon", async () => parameters_bundle_css_default2);
var SelectPopover_css_default = `.ui5-select-popover::part(content),.ui5-select-popover::part(header){padding:0}
`;

// node_modules/@ui5/webcomponents/dist/Select.js
var __decorate81 = function(decorators, target, key, desc) {
  var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
  if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
  else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
  return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var Select_1;
var Select = Select_1 = class Select2 extends UI5Element_default {
  constructor() {
    super(...arguments);
    this.disabled = false;
    this.valueState = "None";
    this.required = false;
    this.readonly = false;
    this._iconPressed = false;
    this.opened = false;
    this._listWidth = 0;
    this.focused = false;
    this._selectedIndexBeforeOpen = -1;
    this._escapePressed = false;
    this._lastSelectedOption = null;
    this._typedChars = "";
  }
  get formValidityMessage() {
    return Select_1.i18nBundle.getText(FORM_SELECTABLE_REQUIRED);
  }
  get formValidity() {
    const selectedOption = this.selectedOption;
    return { valueMissing: this.required && (selectedOption && selectedOption.getAttribute("value") === "") };
  }
  async formElementAnchor() {
    return this.getFocusDomRefAsync();
  }
  get formFormattedValue() {
    const selectedOption = this.selectedOption;
    if (selectedOption) {
      if ("value" in selectedOption && selectedOption.value) {
        return selectedOption.value;
      }
      return selectedOption.hasAttribute("value") ? selectedOption.getAttribute("value") : selectedOption.textContent;
    }
    return "";
  }
  onBeforeRendering() {
    this._ensureSingleSelection();
    this.style.setProperty(getScopedVarName("--_ui5-input-icons-count"), `${this.iconsCount}`);
  }
  onAfterRendering() {
    this.toggleValueStatePopover(this.shouldOpenValueStateMessagePopover);
    if (this._isPickerOpen) {
      if (!this._listWidth) {
        this._listWidth = this.responsivePopover.offsetWidth;
      }
    }
  }
  _ensureSingleSelection() {
    let selectedIndex = this.options.findLastIndex((option) => option.selected);
    selectedIndex = selectedIndex === -1 ? 0 : selectedIndex;
    for (let i = 0; i < this.options.length; i++) {
      this.options[i].selected = selectedIndex === i;
      if (selectedIndex === i) {
        break;
      }
    }
  }
  _applyFocus() {
    this.focus();
  }
  _onfocusin() {
    this.focused = true;
  }
  _onfocusout() {
    this.focused = false;
  }
  get _isPickerOpen() {
    return !!this.responsivePopover && this.responsivePopover.open;
  }
  _respPopover() {
    return this.shadowRoot.querySelector("[ui5-responsive-popover]");
  }
  /**
   * Defines the value of the component:
   *
   * - when get - returns the value of the component, e.g. the `value` property of the selected option or its text content.
   *
   * - when set - selects the option with matching `value` property or text content.
   *
   * **Note:** If the given value does not match any existing option,
   * the first option will get selected.
   * @public
   * @default ""
   * @since 1.20.0
   * @formProperty
   * @formEvents change liveChange
   */
  set value(newValue) {
    const options = Array.from(this.children);
    options.forEach((option) => {
      option.selected = !!((option.getAttribute("value") || option.textContent) === newValue);
    });
  }
  get value() {
    var _a, _b;
    return ((_a = this.selectedOption) == null ? void 0 : _a.value) || ((_b = this.selectedOption) == null ? void 0 : _b.textContent) || "";
  }
  get _selectedIndex() {
    return this.options.findIndex((option) => option.selected);
  }
  /**
   * Currently selected `ui5-option` element.
   * @public
   * @default undefined
   */
  get selectedOption() {
    return this.options.find((option) => option.selected);
  }
  get text() {
    var _a;
    return (_a = this.selectedOption) == null ? void 0 : _a.effectiveDisplayText;
  }
  _toggleRespPopover() {
    if (this.disabled || this.readonly) {
      return;
    }
    this._iconPressed = true;
    this.responsivePopover = this._respPopover();
    if (this._isPickerOpen) {
      this.responsivePopover.open = false;
    } else {
      this.responsivePopover.opener = this;
      this.responsivePopover.open = true;
    }
  }
  _onkeydown(e) {
    const isTab = isTabNext(e) || isTabPrevious(e);
    if (isTab && this._isPickerOpen) {
      this.responsivePopover.open = false;
    } else if (isShow(e)) {
      e.preventDefault();
      this._toggleRespPopover();
    } else if (isSpace(e)) {
      e.preventDefault();
    } else if (isEscape(e) && this._isPickerOpen) {
      this._escapePressed = true;
    } else if (isHome(e)) {
      this._handleHomeKey(e);
    } else if (isEnd(e)) {
      this._handleEndKey(e);
    } else if (isEnter(e)) {
      this._handleSelectionChange();
    } else if (isUp(e) || isDown(e)) {
      this._handleArrowNavigation(e);
    }
  }
  _handleKeyboardNavigation(e) {
    if (isEnter(e) || this.readonly) {
      return;
    }
    const typedCharacter = e.key.toLowerCase();
    this._typedChars += typedCharacter;
    const text = /^(.)\1+$/i.test(this._typedChars) ? typedCharacter : this._typedChars;
    clearTimeout(this._typingTimeoutID);
    this._typingTimeoutID = setTimeout(() => {
      this._typedChars = "";
      this._typingTimeoutID = -1;
    }, 1e3);
    this._selectTypedItem(text);
  }
  _selectTypedItem(text) {
    const currentIndex = this._selectedIndex;
    const itemToSelect = this._searchNextItemByText(text);
    if (itemToSelect) {
      const nextIndex = this.options.indexOf(itemToSelect);
      this._changeSelectedItem(this._selectedIndex, nextIndex);
      if (currentIndex !== this._selectedIndex) {
        this.itemSelectionAnnounce();
        this._scrollSelectedItem();
      }
    }
  }
  _searchNextItemByText(text) {
    let orderedOptions = this.options.slice(0);
    const optionsAfterSelected = orderedOptions.splice(this._selectedIndex + 1, orderedOptions.length - this._selectedIndex);
    const optionsBeforeSelected = orderedOptions.splice(0, orderedOptions.length - 1);
    orderedOptions = optionsAfterSelected.concat(optionsBeforeSelected);
    return orderedOptions.find((option) => option.effectiveDisplayText.toLowerCase().startsWith(text));
  }
  _handleHomeKey(e) {
    e.preventDefault();
    if (this.readonly) {
      return;
    }
    this._changeSelectedItem(this._selectedIndex, 0);
  }
  _handleEndKey(e) {
    e.preventDefault();
    if (this.readonly) {
      return;
    }
    const lastIndex = this.options.length - 1;
    this._changeSelectedItem(this._selectedIndex, lastIndex);
  }
  _onkeyup(e) {
    if (isSpace(e)) {
      if (this._isPickerOpen) {
        this._handleSelectionChange();
      } else {
        this._toggleRespPopover();
      }
    }
  }
  _getItemIndex(item2) {
    return this.options.indexOf(item2);
  }
  _select(index) {
    const selectedIndex = this._selectedIndex;
    if (index < 0 || index >= this.options.length || this.options.length === 0) {
      return;
    }
    if (this.options[selectedIndex]) {
      this.options[selectedIndex].selected = false;
    }
    if (selectedIndex !== index) {
      this.fireDecoratorEvent("live-change", { selectedOption: this.options[index] });
    }
    this.options[index].selected = true;
  }
  /**
   * The user clicked on an item from the list
   * @private
   */
  _handleItemPress(e) {
    const listItem = e.detail.item;
    const selectedItemIndex = this._getItemIndex(listItem);
    this._handleSelectionChange(selectedItemIndex);
  }
  _itemMousedown(e) {
    e.preventDefault();
  }
  _onclick() {
    this.getFocusDomRef().focus();
    this._toggleRespPopover();
  }
  /**
   * The user selected an item with Enter or Space
   * @private
   */
  _handleSelectionChange(index = this._selectedIndex) {
    this._typedChars = "";
    this._select(index);
    this._toggleRespPopover();
  }
  _scrollSelectedItem() {
    var _a;
    if (this._isPickerOpen) {
      const itemRef = (_a = this._currentlySelectedOption) == null ? void 0 : _a.getDomRef();
      if (itemRef) {
        itemRef.scrollIntoView({
          behavior: "auto",
          block: "nearest",
          inline: "nearest"
        });
      }
    }
  }
  _handleArrowNavigation(e) {
    e.preventDefault();
    if (this.readonly) {
      return;
    }
    let nextIndex = -1;
    const currentIndex = this._selectedIndex;
    const isDownKey = isDown(e);
    if (isDownKey) {
      nextIndex = this._getNextOptionIndex();
    } else {
      nextIndex = this._getPreviousOptionIndex();
    }
    this._changeSelectedItem(this._selectedIndex, nextIndex);
    if (currentIndex !== this._selectedIndex) {
      this.itemSelectionAnnounce();
      this._scrollSelectedItem();
    }
  }
  _changeSelectedItem(oldIndex, newIndex) {
    const options = this.options;
    const previousOption = options[oldIndex];
    const nextOption = options[newIndex];
    if (previousOption === nextOption) {
      return;
    }
    previousOption.selected = false;
    previousOption.focused = false;
    nextOption.selected = true;
    nextOption.focused = true;
    this.fireDecoratorEvent("live-change", { selectedOption: nextOption });
    if (!this._isPickerOpen) {
      this._fireChangeEvent(nextOption);
    }
  }
  _getNextOptionIndex() {
    return this._selectedIndex === this.options.length - 1 ? this._selectedIndex : this._selectedIndex + 1;
  }
  _getPreviousOptionIndex() {
    return this._selectedIndex === 0 ? this._selectedIndex : this._selectedIndex - 1;
  }
  _beforeOpen() {
    this._selectedIndexBeforeOpen = this._selectedIndex;
    this._lastSelectedOption = this.options[this._selectedIndex];
  }
  _afterOpen() {
    this.opened = true;
    this.fireDecoratorEvent("open");
    this.itemSelectionAnnounce();
    this._scrollSelectedItem();
    this._applyFocusToSelectedItem();
  }
  _applyFocusToSelectedItem() {
    this.options.forEach((option) => {
      option.focused = option.selected;
    });
  }
  _afterClose() {
    this.opened = false;
    this._iconPressed = false;
    this._listWidth = 0;
    if (this._escapePressed) {
      this._select(this._selectedIndexBeforeOpen);
      this._escapePressed = false;
    } else if (this._lastSelectedOption !== this.options[this._selectedIndex]) {
      this._fireChangeEvent(this.options[this._selectedIndex]);
      this._lastSelectedOption = this.options[this._selectedIndex];
    }
    this.fireDecoratorEvent("close");
  }
  get hasCustomLabel() {
    return !!this.label.length;
  }
  _fireChangeEvent(selectedOption) {
    const changePrevented = !this.fireDecoratorEvent("change", { selectedOption });
    this.fireDecoratorEvent("selected-item-changed");
    this.fireDecoratorEvent("input");
    if (changePrevented) {
      this._select(this._selectedIndexBeforeOpen);
    }
  }
  get valueStateTextMappings() {
    return {
      [ValueState_default.Positive]: Select_1.i18nBundle.getText(VALUE_STATE_SUCCESS),
      [ValueState_default.Information]: Select_1.i18nBundle.getText(VALUE_STATE_INFORMATION),
      [ValueState_default.Negative]: Select_1.i18nBundle.getText(VALUE_STATE_ERROR),
      [ValueState_default.Critical]: Select_1.i18nBundle.getText(VALUE_STATE_WARNING)
    };
  }
  get valueStateTypeMappings() {
    return {
      [ValueState_default.Positive]: Select_1.i18nBundle.getText(VALUE_STATE_TYPE_SUCCESS),
      [ValueState_default.Information]: Select_1.i18nBundle.getText(VALUE_STATE_TYPE_INFORMATION),
      [ValueState_default.Negative]: Select_1.i18nBundle.getText(VALUE_STATE_TYPE_ERROR),
      [ValueState_default.Critical]: Select_1.i18nBundle.getText(VALUE_STATE_TYPE_WARNING)
    };
  }
  get valueStateText() {
    let valueStateText;
    if (this.shouldDisplayDefaultValueStateMessage) {
      valueStateText = this.valueStateDefaultText;
    } else {
      valueStateText = this.valueStateMessage.map((el) => el.textContent).join(" ");
    }
    return `${this.valueStateTypeText} ${valueStateText}`;
  }
  get valueStateDefaultText() {
    return this.valueState !== ValueState_default.None ? this.valueStateTextMappings[this.valueState] : "";
  }
  get valueStateTypeText() {
    return this.valueState !== ValueState_default.None ? this.valueStateTypeMappings[this.valueState] : "";
  }
  get hasValueState() {
    return this.valueState !== ValueState_default.None;
  }
  get valueStateTextId() {
    return this.hasValueState ? `${this._id}-valueStateDesc` : void 0;
  }
  get isDisabled() {
    return this.disabled || void 0;
  }
  get _headerTitleText() {
    return Select_1.i18nBundle.getText(INPUT_SUGGESTIONS_TITLE);
  }
  get _currentlySelectedOption() {
    return this.options[this._selectedIndex];
  }
  get _effectiveTabIndex() {
    return this.disabled || this.responsivePopover && this.responsivePopover.open ? -1 : 0;
  }
  /**
  * This method is relevant for sap_horizon theme only
  */
  get _valueStateMessageInputIcon() {
    const iconPerValueState = {
      Negative: "error",
      Critical: "alert",
      Positive: "sys-enter-2",
      Information: "information"
    };
    return this.valueState !== ValueState_default.None ? iconPerValueState[this.valueState] : "";
  }
  get iconsCount() {
    return this.selectedOptionIcon ? 2 : 1;
  }
  get classes() {
    return {
      popoverValueState: {
        "ui5-valuestatemessage-root": true,
        "ui5-valuestatemessage--success": this.valueState === ValueState_default.Positive,
        "ui5-valuestatemessage--error": this.valueState === ValueState_default.Negative,
        "ui5-valuestatemessage--warning": this.valueState === ValueState_default.Critical,
        "ui5-valuestatemessage--information": this.valueState === ValueState_default.Information
      },
      popover: {
        "ui5-select-popover-valuestate": this.hasValueState
      }
    };
  }
  get styles() {
    return {
      popoverHeader: {
        "max-width": `${this.offsetWidth}px`
      },
      responsivePopoverHeader: {
        "display": this.options.length && this._listWidth === 0 ? "none" : "inline-block",
        "width": `${this.options.length ? this._listWidth : this.offsetWidth}px`
      },
      responsivePopover: {
        "min-width": `${this.offsetWidth}px`
      }
    };
  }
  get ariaLabelText() {
    return getEffectiveAriaLabelText(this);
  }
  get shouldDisplayDefaultValueStateMessage() {
    return !this.valueStateMessage.length && this.hasValueStateText;
  }
  get hasValueStateText() {
    return this.hasValueState && this.valueState !== ValueState_default.Positive;
  }
  get shouldOpenValueStateMessagePopover() {
    return this.focused && this.hasValueStateText && !this._iconPressed && !this._isPickerOpen && !this._isPhone;
  }
  get _ariaRoleDescription() {
    return Select_1.i18nBundle.getText(SELECT_ROLE_DESCRIPTION);
  }
  get _isPhone() {
    return isPhone();
  }
  itemSelectionAnnounce() {
    let text;
    const optionsCount = this.options.length;
    const itemPositionText = Select_1.i18nBundle.getText(LIST_ITEM_POSITION, this._selectedIndex + 1, optionsCount);
    if (this.focused && this._currentlySelectedOption) {
      text = `${this._currentlySelectedOption.textContent} ${this._isPickerOpen ? itemPositionText : ""}`;
      InvisibleMessage_default(text, InvisibleMessageMode_default.Polite);
    }
  }
  openValueStatePopover() {
    this.valueStatePopover = this._getPopover();
    if (this.valueStatePopover) {
      this.valueStatePopover.opener = this;
      this.valueStatePopover.open = true;
    }
  }
  closeValueStatePopover() {
    this.valueStatePopover && (this.valueStatePopover.open = false);
  }
  toggleValueStatePopover(open2) {
    if (open2) {
      this.openValueStatePopover();
    } else {
      this.closeValueStatePopover();
    }
  }
  get selectedOptionIcon() {
    return this.selectedOption && this.selectedOption.icon;
  }
  _getPopover() {
    return this.shadowRoot.querySelector("[ui5-popover]");
  }
};
__decorate81([
  property_default({ type: Boolean })
], Select.prototype, "disabled", void 0);
__decorate81([
  property_default()
], Select.prototype, "name", void 0);
__decorate81([
  property_default()
], Select.prototype, "valueState", void 0);
__decorate81([
  property_default({ type: Boolean })
], Select.prototype, "required", void 0);
__decorate81([
  property_default({ type: Boolean })
], Select.prototype, "readonly", void 0);
__decorate81([
  property_default()
], Select.prototype, "accessibleName", void 0);
__decorate81([
  property_default()
], Select.prototype, "accessibleNameRef", void 0);
__decorate81([
  property_default()
], Select.prototype, "tooltip", void 0);
__decorate81([
  property_default({ type: Boolean, noAttribute: true })
], Select.prototype, "_iconPressed", void 0);
__decorate81([
  property_default({ type: Boolean })
], Select.prototype, "opened", void 0);
__decorate81([
  property_default({ type: Number, noAttribute: true })
], Select.prototype, "_listWidth", void 0);
__decorate81([
  property_default({ type: Boolean })
], Select.prototype, "focused", void 0);
__decorate81([
  slot_default({ "default": true, type: HTMLElement, invalidateOnChildChange: true })
], Select.prototype, "options", void 0);
__decorate81([
  slot_default()
], Select.prototype, "valueStateMessage", void 0);
__decorate81([
  slot_default()
], Select.prototype, "label", void 0);
__decorate81([
  property_default({ noAttribute: true })
], Select.prototype, "value", null);
__decorate81([
  i18n_default("@ui5/webcomponents")
], Select, "i18nBundle", void 0);
Select = Select_1 = __decorate81([
  customElement_default({
    tag: "ui5-select",
    languageAware: true,
    formAssociated: true,
    renderer: JsxRenderer_default,
    template: SelectTemplate,
    styles: [
      Select_css_default,
      ResponsivePopoverCommon_css_default,
      ValueStateMessage_css_default,
      SelectPopover_css_default
    ],
    dependencies: [
      Label_default,
      ResponsivePopover_default,
      Popover_default,
      List_default,
      Icon_default,
      Button_default
    ]
  }),
  event_strict_default("change", {
    bubbles: true,
    cancelable: true
  }),
  event_strict_default("live-change", {
    bubbles: true
  }),
  event_strict_default("open"),
  event_strict_default("close"),
  event_strict_default("selected-item-changed", {
    bubbles: true
  }),
  event_strict_default("input", {
    bubbles: true
  })
], Select);
Select.define();
var Select_default = Select;

// node_modules/@ui5/webcomponents-react/dist/webComponents/Select/index.js
var Select3 = withWebComponent("ui5-select", ["accessibleName", "accessibleNameRef", "name", "value", "valueState"], ["disabled", "readonly", "required"], ["label", "valueStateMessage"], ["change", "close", "live-change", "open"]);
Select3.displayName = "Select";

// node_modules/@ui5/webcomponents-icons/dist/v4/search.js
var name42 = "search";
var pathData41 = "M470 426q10 9 10 22.5T470 471q-9 9-22 9t-23-9L308 353q-45 31-100 31-36 0-68-13.5T84 333t-38-56-14-69q0-36 14-68t38-56 56-38 68-14 68 14 56 38 38 56 14 68q0 28-8.5 53T353 308zm-262-74q30 0 56-11t45.5-30.5 31-46T352 208t-11.5-56-31-45.5-45.5-31T208 64t-56.5 11.5-46 31T75 152t-11 56 11 56.5 30.5 46 46 30.5 56.5 11z";
var ltr41 = true;
var accData22 = ICON_SEARCH;
var collection42 = "SAP-icons-v4";
var packageName41 = "@ui5/webcomponents-icons";
registerIcon(name42, { pathData: pathData41, ltr: ltr41, accData: accData22, collection: collection42, packageName: packageName41 });

// node_modules/@ui5/webcomponents-icons/dist/v5/search.js
var name43 = "search";
var pathData42 = "M473 436q7 7 7 18t-7.5 18.5T454 480q-10 0-18-8l-95-95q-51 39-117 39-40 0-75-15t-61-41-41-61-15-75 15-75 41-61 61-41 75-15 75 15 61 41 41 61 15 75q0 64-39 117zM83 224q0 30 11 55.5t30 44.5 44.5 30 55.5 11 55.5-11 44.5-30 30-44.5 11-55.5-11-55.5-30-44.5-44.5-30T224 83t-55.5 11-44.5 30-30 44.5T83 224z";
var ltr42 = true;
var accData23 = ICON_SEARCH;
var collection43 = "SAP-icons-v5";
var packageName42 = "@ui5/webcomponents-icons";
registerIcon(name43, { pathData: pathData42, ltr: ltr42, accData: accData23, collection: collection43, packageName: packageName42 });

// node_modules/@ui5/webcomponents-icons/dist/search.js
var search_default = "search";

// node_modules/@ui5/webcomponents-icons/dist/v4/da.js
var name44 = "da";
var pathData43 = "M36 163l220 305 221-306-89-130H137zm220 349q-8 0-13-7L3 172q-3-5-3-10t3-9L117 6q5-6 12-6h267q9 0 13 7l100 146q3 4 3 9t-3 10L269 505q-5 7-13 7zm120-326q-26 9-39.5 22.5T315 248q-3 8-11 8t-11-8q-8-26-21.5-39.5T232 186q-8-2-8-10t8-11q26-9 39.5-22.5T293 103q3-7 11-7t11 7q8 26 21.5 39.5T376 165q8 3 8 11 0 3-1.5 6t-6.5 4z";
var ltr43 = true;
var collection44 = "SAP-icons-v4";
var packageName43 = "@ui5/webcomponents-icons";
registerIcon(name44, { pathData: pathData43, ltr: ltr43, collection: collection44, packageName: packageName43 });

// node_modules/@ui5/webcomponents-icons/dist/v5/da.js
var name45 = "da";
var pathData44 = "M256.499 511.002q-12.975 0-20.959-10.979L5.988 180.647q-11.976-14.97 0-29.941L114.776 9.98Q122.76 0 134.736 0h255.502q14.97 0 20.959 10.979l95.813 140.725q9.98 14.97 0 28.943L277.458 500.023q-7.984 10.979-20.959 10.979zM57.887 166.674l198.612 275.462 198.612-276.46-77.848-114.775H147.712zm318.378 19.961q-25.95 7.985-39.423 21.459t-22.456 39.423q-1.996 7.984-9.98 7.984t-10.98-7.984q-8.982-25.95-22.455-39.423t-39.423-21.459q-7.985-2.994-7.985-10.978t7.985-10.979q25.95-7.984 39.423-21.957t22.456-39.922q2.994-7.984 10.978-7.984t9.981 7.984q8.982 25.95 22.456 39.922t39.423 21.957q7.985 2.995 7.985 10.979t-7.985 10.978z";
var ltr44 = true;
var collection45 = "SAP-icons-v5";
var packageName44 = "@ui5/webcomponents-icons";
registerIcon(name45, { pathData: pathData44, ltr: ltr44, collection: collection45, packageName: packageName44 });

// node_modules/@ui5/webcomponents-icons/dist/da.js
var da_default = "da";

// node_modules/@ui5/webcomponents-icons/dist/v4/bell.js
var name46 = "bell";
var pathData45 = "M32 416q0-7 15-21t31-40.5 25.5-67.5-1.5-101q-5-29 3-54.5t25-45 42-33T225 35q0-15 7-25t24-10q14 0 22.5 9t8.5 26q26 5 50 18t41 33 24.5 45.5T404 186q-12 60-1.5 101t27.5 67.5 33.5 40.5 16.5 21q0 14-9 23t-23 9H320q0 26-19 45t-45 19-45-19-19-45H64q-14 0-23-9t-9-23zm39 0h369q-10-11-25.5-30.5t-28-48.5-18-68 4.5-89q5-25-2.5-44T354 106q-19-23-42-32.5T256 64q-32 0-57.5 9.5T154 106q-10 11-18 30t-3 44q9 50 4 89t-16 68-25.5 48.5T71 416z";
var ltr45 = false;
var collection46 = "SAP-icons-v4";
var packageName45 = "@ui5/webcomponents-icons";
registerIcon(name46, { pathData: pathData45, ltr: ltr45, collection: collection46, packageName: packageName45 });

// node_modules/@ui5/webcomponents-icons/dist/v5/bell.js
var name47 = "bell";
var pathData46 = "M475 374q5 7 5 16 0 11-7 18.5t-18 7.5H334q-5 27-27 45.5T256 480t-51-18.5-27-45.5H58q-11 0-18.5-7.5T32 390q0-10 6-16 1-1 8-9.5T61 341t14.5-35.5T82 260v-20q0-100 45-154t129-54 129.5 54T431 240v20q0 25 6.5 45.5T452 341t15 23.5 8 9.5zm-69-9q-11-20-19-46.5t-8-58.5v-20q0-32-5.5-60t-20-50-38-34.5T256 83t-59.5 12.5-38 34.5-20 50-5.5 60v20q0 32-8 58.5T106 365h300z";
var ltr46 = false;
var collection47 = "SAP-icons-v5";
var packageName46 = "@ui5/webcomponents-icons";
registerIcon(name47, { pathData: pathData46, ltr: ltr46, collection: collection47, packageName: packageName46 });

// node_modules/@ui5/webcomponents-icons/dist/bell.js
var bell_default = "bell";

// node_modules/@ui5/webcomponents-icons/dist/v4/grid.js
var name48 = "grid";
var pathData47 = "M394 362h55q14 0 22.5 9t8.5 23v54q0 14-8.5 23t-22.5 9h-55q-14 0-22.5-9t-8.5-23v-54q0-14 8.5-23t22.5-9zM228 197h55q14 0 22.5 9t8.5 23v54q0 13-9 22.5t-22 9.5h-55q-13 0-22-9.5t-9-22.5v-54q0-14 8.5-23t22.5-9zm135-79V64q0-14 8.5-23t22.5-9h55q14 0 22.5 9t8.5 23v54q0 13-9 22.5t-22 9.5h-55q-13 0-22-9.5t-9-22.5zm31 79h55q14 0 22.5 9t8.5 23v54q0 13-9 22.5t-22 9.5h-55q-13 0-22-9.5t-9-22.5v-54q0-14 8.5-23t22.5-9zM63 32h55q14 0 22.5 9t8.5 23v54q0 13-9 22.5t-22 9.5H63q-13 0-22-9.5T32 118V64q0-14 8.5-23T63 32zM32 229q0-14 8.5-23t22.5-9h55q14 0 22.5 9t8.5 23v54q0 13-9 22.5t-22 9.5H63q-13 0-22-9.5T32 283v-54zm31 133h55q14 0 22.5 9t8.5 23v54q0 13-9 22.5t-22 9.5H63q-13 0-22-9.5T32 448v-54q0-14 8.5-23t22.5-9zM228 32h55q14 0 22.5 9t8.5 23v54q0 13-9 22.5t-22 9.5h-55q-13 0-22-9.5t-9-22.5V64q0-14 8.5-23t22.5-9zm-31 362q0-14 8.5-23t22.5-9h55q14 0 22.5 9t8.5 23v54q0 13-9 22.5t-22 9.5h-55q-13 0-22-9.5t-9-22.5v-54z";
var ltr47 = false;
var collection48 = "SAP-icons-v4";
var packageName47 = "@ui5/webcomponents-icons";
registerIcon(name48, { pathData: pathData47, ltr: ltr47, collection: collection48, packageName: packageName47 });

// node_modules/@ui5/webcomponents-icons/dist/v5/grid.js
var name49 = "grid";
var pathData48 = "M80 128q-20 0-34-14T32 80t14-34 34-14 34 14 14 34-14 34-34 14zm176 0q-20 0-34-14t-14-34 14-34 34-14 34 14 14 34-14 34-34 14zm176 0q-20 0-34-14t-14-34 14-34 34-14 34 14 14 34-14 34-34 14zM80 208q20 0 34 14t14 34-14 34-34 14-34-14-14-34 14-34 34-14zm176 0q20 0 34 14t14 34-14 34-34 14-34-14-14-34 14-34 34-14zm176 0q20 0 34 14t14 34-14 34-34 14-34-14-14-34 14-34 34-14zM80 384q20 0 34 14t14 34-14 34-34 14-34-14-14-34 14-34 34-14zm176 0q20 0 34 14t14 34-14 34-34 14-34-14-14-34 14-34 34-14zm176 0q20 0 34 14t14 34-14 34-34 14-34-14-14-34 14-34 34-14z";
var ltr48 = false;
var collection49 = "SAP-icons-v5";
var packageName48 = "@ui5/webcomponents-icons";
registerIcon(name49, { pathData: pathData48, ltr: ltr48, collection: collection49, packageName: packageName48 });

// node_modules/@ui5/webcomponents-icons/dist/grid.js
var grid_default = "grid";

// node_modules/@ui5/webcomponents-base/dist/util/throttle.js
function throttle2(func, delay) {
  let lastArgs = null;
  let throttleTimeout = null;
  return function throttled(...args) {
    if (throttleTimeout) {
      lastArgs = args;
      return;
    }
    func(...args);
    throttleTimeout = setTimeout(() => {
      if (lastArgs) {
        func(...lastArgs);
        lastArgs = null;
      }
      throttleTimeout = null;
    }, delay);
  };
}
var throttle_default = throttle2;

// node_modules/@ui5/webcomponents-fiori/dist/ShellBarPopoverTemplate.js
function PopoversTemplate() {
  return jsxs(Fragment, { children: [jsx(Popover_default, { class: "ui5-shellbar-menu-popover", hideArrow: true, placement: "Bottom", preventInitialFocus: true, onBeforeOpen: this._menuPopoverBeforeOpen, onClose: this._menuPopoverAfterClose, children: jsx(List_default, { separators: "None", selectionMode: "Single", onItemClick: this._menuItemPress, children: jsx("slot", { name: "menuItems" }) }) }), jsx(Popover_default, { class: "ui5-shellbar-overflow-popover", placement: "Bottom", preventInitialFocus: true, horizontalAlign: this.popoverHorizontalAlign, hideArrow: true, onBeforeOpen: this._overflowPopoverBeforeOpen, onClose: this._overflowPopoverAfterClose, children: jsx(List_default, { separators: "None", onItemClick: this._handleActionListClick, children: this._hiddenIcons.map((icon, index) => jsx(ListItemStandard_default, { "data-count": icon.count, "data-ui5-external-action-item-id": icon.refItemid, icon: icon.icon ? icon.icon : "", type: "Active", "onui5-_press": icon.press, tooltip: icon.tooltip, children: icon.text }, index)) }) })] });
}

// node_modules/@ui5/webcomponents-fiori/dist/ShellBarTemplate.js
function ShellBarTemplate() {
  return jsxs(Fragment, { children: [jsxs("header", { class: this.classes.wrapper, "aria-label": this._shellbarText, onKeyDown: this._onKeyDown, part: "root", children: [jsxs("div", { class: "ui5-shellbar-overflow-container ui5-shellbar-overflow-container-left", children: [this.startButton.length > 0 && jsx("slot", { name: "startButton" }), this.hasMenuItems && jsxs(Fragment, { children: [!this.showLogoInMenuButton && this.hasLogo && singleLogo.call(this), this.showTitleInMenuButton && jsx("h1", { class: "ui5-hidden-text", children: this.primaryTitle }), this.showMenuButton && jsxs(Fragment, { children: [jsxs("button", { class: {
    "ui5-shellbar-menu-button": true,
    ...this.classes.button
  }, onClick: this._headerPress, "aria-haspopup": "menu", "aria-expanded": this._menuPopoverExpanded, "data-ui5-stable": "menu", tabIndex: 0, children: [this.showLogoInMenuButton && jsx("span", { class: "ui5-shellbar-logo", "aria-label": this._logoText, title: this._logoText, children: jsx("slot", { name: "logo" }) }), this.showTitleInMenuButton && jsx("div", { class: "ui5-shellbar-menu-button-title", children: this.primaryTitle }), jsx(Icon_default, { class: "ui5-shellbar-menu-button-arrow", name: slim_arrow_down_default })] }), this.secondaryTitle && !this.isSBreakPoint && jsx("div", { style: { display: "block" }, class: "ui5-shellbar-secondary-title", "data-ui5-stable": "secondary-title", children: this.secondaryTitle })] })] }), !this.hasMenuItems && jsxs(Fragment, { children: [this.isSBreakPoint && this.hasLogo && singleLogo.call(this), !this.isSBreakPoint && jsxs(Fragment, { children: [combinedLogo.call(this), this.secondaryTitle && this.primaryTitle && jsx("h2", { class: "ui5-shellbar-secondary-title", "data-ui5-stable": "secondary-title", children: this.secondaryTitle })] })] })] }), this.hasMidContent && jsx("div", { class: "ui5-shellbar-overflow-container ui5-shellbar-mid-content", children: jsx("slot", { name: "midContent" }) }), jsx("div", { class: "ui5-shellbar-overflow-container ui5-shellbar-overflow-container-right", children: jsxs("div", { class: "ui5-shellbar-overflow-container-right-inner", children: [this.hasContentItems && jsxs(Fragment, { children: [this.showStartSeparatorInWrapper && jsx("div", { class: {
    "ui5-shellbar-separator": true,
    "ui5-shellbar-separator-start": true
  } }), this.startContent.map((item2, index) => {
    const itemInfo = this._contentInfo.find((info) => info.id === item2._individualSlot);
    return jsxs("div", { id: item2._individualSlot, class: itemInfo == null ? void 0 : itemInfo.classes, children: [!this.showStartSeparatorInWrapper && index === 0 && jsx("div", { class: {
      "ui5-shellbar-separator": true,
      "ui5-shellbar-separator-start": true
    } }), jsx("slot", { name: item2._individualSlot })] }, item2._individualSlot);
  }), jsx("div", { class: "ui5-shellbar-spacer" }), this.endContent.map((item2, index) => {
    const itemInfo = this._contentInfo.find((info) => info.id === item2._individualSlot);
    return jsxs("div", { id: item2._individualSlot, class: itemInfo == null ? void 0 : itemInfo.classes, children: [jsx("slot", { name: item2._individualSlot }), !this.showEndSeparatorInWrapper && index === this.endContent.length - 1 && jsx("div", { class: {
      "ui5-shellbar-separator": true,
      "ui5-shellbar-separator-end": true
    } })] }, item2._individualSlot);
  }), this.showEndSeparatorInWrapper && jsx("div", { class: {
    "ui5-shellbar-separator": true,
    "ui5-shellbar-separator-end": true
  } })] }), !this.hasContentItems && jsx("div", { class: "ui5-shellbar-spacer" }), jsxs("div", { class: "ui5-shellbar-overflow-container-right-child", role: this._rightChildRole, children: [this.hasSearchField && jsxs(Fragment, { children: [this.showFullWidthSearch && jsxs("div", { class: "ui5-shellbar-search-full-width-wrapper", style: this.styles.searchField, children: [jsx("div", { class: "ui5-shellbar-search-full-field", children: jsx("slot", { name: "searchField" }) }), jsx(Button_default, { onClick: this._handleCancelButtonPress, class: "ui5-shellbar-button ui5-shellbar-cancel-button", "data-ui5-stable": "cancel-search", children: this._cancelBtnText })] }), jsx("div", { class: "ui5-shellbar-search-field", style: this.styles.searchField, children: jsx("slot", { name: "searchField" }) }), jsx(Button_default, { id: `${this._id}-item-1`, class: {
    "ui5-shellbar-button": true,
    "ui5-shellbar-search-button": true,
    "ui5-shellbar-search-item-for-arrow-nav": true,
    ...this.classes.search
  }, icon: "sap-icon://search", "data-ui5-text": "Search", "data-ui5-notifications-count": this.notificationsCount, "data-ui5-stable": "toggle-search", onClick: this._handleSearchIconPress, tooltip: this._searchBtnOpen, "aria-label": this._searchBtnOpen, "aria-expanded": this.showSearchField, accessibilityAttributes: this.accInfo.search.accessibilityAttributes })] }), this.hasAssistant && jsx("div", { id: `${this._id}-assistant`, class: this.classes.assistant, children: jsx("slot", { name: "assistant" }) }), this.showNotifications && jsx(Button_default, { id: `${this._id}-item-2`, class: {
    "ui5-shellbar-button": true,
    "ui5-shellbar-bell-button": true,
    "ui5-shellbar-items-for-arrow-nav": true,
    ...this.classes.notification
  }, icon: "sap-icon://bell", "data-ui5-text": "Notifications", "data-ui5-notifications-count": this.notificationsCount, onClick: this._handleNotificationsPress, tooltip: this._notificationsText, accessibilityAttributes: this.accInfo.notifications.accessibilityAttributes, "data-ui5-stable": "notifications" }), this.customItemsInfo.map((item2) => jsx(Button_default, { id: item2.id, class: `${item2.classes} ui5-shellbar-items-for-arrow-nav`, icon: item2.icon, tooltip: item2.tooltip, "data-count": item2.count, "data-ui5-notifications-count": this.notificationsCount, "data-ui5-external-action-item-id": item2.refItemid, "data-ui5-stable": item2.stableDomRef, onClick: item2.press }, item2.id))] })] }) }), jsx(Button_default, { id: `${this._id}-item-5`, class: {
    "ui5-shellbar-button": true,
    "ui5-shellbar-overflow-button": true,
    "ui5-shellbar-items-for-arrow-nav": true,
    ...this.classes.overflow
  }, icon: "sap-icon://overflow", "data-count": this._overflowNotifications, onClick: this._handleOverflowPress, tooltip: this._overflowText, accessibilityAttributes: this.accInfo.overflow.accessibilityAttributes, "data-ui5-stable": "overflow" }), this.hasProfile && profileButton.call(this), this.showProductSwitch && jsx(Button_default, { id: `${this._id}-item-4`, class: "ui5-shellbar-no-overflow-button ui5-shellbar-button ui5-shellbar-button-product-switch ui5-shellbar-items-for-arrow-nav", icon: "sap-icon://grid", "data-ui5-text": "Product Switch", onClick: this._handleProductSwitchPress, tooltip: this._productsText, "aria-label": this._productSwitchBtnText, "aria-haspopup": "dialog", "aria-expanded": this.accInfo.products.accessibilityAttributes.expanded, accessibilityAttributes: this.accInfo.products.accessibilityAttributes, "data-ui5-stable": "product-switch" })] }), PopoversTemplate.call(this)] });
}
function profileButton() {
  return jsx(Button_default, { "data-profile-btn": true, id: `${this._id}-item-3`, onClick: this._handleProfilePress, tooltip: this._profileText, class: "ui5-shellbar-button ui5-shellbar-image-button ui5-shellbar-no-overflow-button ui5-shellbar-items-for-arrow-nav", "aria-label": this.imageBtnText, "aria-haspopup": "dialog", accessibilityAttributes: this.accInfo.profile.accessibilityAttributes, "data-ui5-stable": "profile", children: jsx("slot", { name: "profile" }) });
}
function singleLogo() {
  return jsx("span", { role: this.accLogoRole, class: "ui5-shellbar-logo", "aria-label": this._logoText, title: this._logoText, onClick: this._logoPress, onKeyDown: this._logoKeydown, onKeyUp: this._logoKeyup, tabIndex: 0, "data-ui5-stable": "logo", children: jsx("slot", { name: "logo" }) });
}
function combinedLogo() {
  return jsxs("div", { role: this.accLogoRole, class: "ui5-shellbar-logo-area", onClick: this._logoPress, tabIndex: 0, onKeyDown: this._logoKeydown, onKeyUp: this._logoKeyup, "aria-label": this._logoAreaText, children: [this.hasLogo && jsx("span", { class: "ui5-shellbar-logo", title: this._logoText, onClick: this._logoPress, onKeyDown: this._logoKeydown, onKeyUp: this._logoKeyup, "data-ui5-stable": "logo", children: jsx("slot", { name: "logo" }) }), jsx("div", { class: "ui5-shellbar-headings", children: this.primaryTitle && jsx("h1", { class: "ui5-shellbar-title", children: jsx("bdi", { children: this.primaryTitle }) }) })] });
}

// node_modules/@ui5/webcomponents-fiori/dist/generated/themes/ShellBar.css.js
registerThemePropertiesLoader("@ui5/webcomponents-theming", "sap_horizon", async () => parameters_bundle_css_default);
registerThemePropertiesLoader("@ui5/webcomponents-fiori", "sap_horizon", async () => parameters_bundle_css_default3);
var ShellBar_css_default = `.ui5-hidden-text{position:absolute;clip:rect(1px,1px,1px,1px);user-select:none;left:-1000px;top:-1000px;pointer-events:none;font-size:0}:host(:not([hidden])){display:inline-block;width:100%;max-width:100%;background:var(--sapShellColor);box-sizing:border-box}:host{--_ui5-v2-8-0_input_placeholder_color: var(--sapShell_InteractiveTextColor);--_ui5-v2-8-0_input_border_radius: var(--_ui5-v2-8-0_shellbar_input_border_radius);--_ui5-v2-8-0_input_focus_border_radius: var(--_ui5-v2-8-0_shellbar_input_focus_border_radius);--_ui5-v2-8-0_input_background_color: var(--_ui5-v2-8-0_shellbar_input_background_color);--_ui5-v2-8-0_input_focus_outline_color: var(--_ui5-v2-8-0_shellbar_input_focus_outline_color);--_ui5-v2-8-0_input_margin_top_bottom: 0;box-shadow:inset 0 -.0625rem 0 0 var(--sapPageHeader_BorderColor)}.ui5-shellbar-root{position:relative;display:flex;justify-content:space-between;align-items:center;height:var(--_ui5-v2-8-0_shellbar_root_height);font-family:"72override",var(--sapFontFamily);font-size:var(--sapFontSize);font-weight:400;box-sizing:border-box}.ui5-shellbar-menu-button,.ui5-shellbar-button,.ui5-shellbar-image-button,::slotted([ui5-toggle-button]:not([slot^="content"])),::slotted([ui5-button]:not([slot^="content"])){height:2.25rem;padding:0;margin-inline-start:var(--_ui5-v2-8-0-shellbar-overflow-button-margin);border:.0625rem solid var(--sapButton_Lite_BorderColor);background:var(--sapButton_Lite_Background);outline-color:var(--_ui5-v2-8-0_shellbar_logo_outline_color);color:var(--sapShell_TextColor);box-sizing:border-box;cursor:pointer;border-radius:var(--_ui5-v2-8-0_shellbar_button_border_radius);position:relative;font-weight:700;white-space:initial;overflow:initial;text-overflow:initial;line-height:inherit;letter-spacing:inherit;word-spacing:inherit}::slotted([ui5-toggle-button][slot="assistant"]){margin-inline-start:0}.ui5-shellbar-assistant-button{margin-inline-start:var(--_ui5-v2-8-0-shellbar-overflow-button-margin)}::slotted([ui5-button][slot="startButton"]){margin-inline-start:0}::slotted([ui5-toggle-button]:hover),::slotted([ui5-button]:hover),.ui5-shellbar-menu-button.ui5-shellbar-menu-button--interactive:hover,.ui5-shellbar-button:hover,.ui5-shellbar-image-button:hover,::slotted([ui5-button][slot="midContent"]:hover){background:var(--sapShell_Hover_Background);border-color:var(--sapButton_Lite_Hover_BorderColor);color:var(--sapShell_TextColor)}::slotted([ui5-toggle-button][slot="assistant"][pressed]),::slotted([ui5-toggle-button][slot="assistant"][pressed]:hover:not([active])){color:var(--sapShell_Assistant_ForegroundColor)}::slotted([ui5-toggle-button][active]),::slotted([ui5-button][active]),.ui5-shellbar-menu-button.ui5-shellbar-menu-button--interactive:active,.ui5-shellbar-button[active],.ui5-shellbar-image-button:active{background:var(--sapShell_Active_Background);border-color:var(--sapButton_Lite_Active_BorderColor);color:var(--_ui5-v2-8-0_shellbar_button_active_color)}:host([desktop]) .ui5-shellbar-menu-button.ui5-shellbar-menu-button--interactive:focus,.ui5-shellbar-menu-button.ui5-shellbar-menu-button--interactive:focus-visible{outline:var(--_ui5-v2-8-0_shellbar_logo_outline);outline-offset:var(--_ui5-v2-8-0_shellbar_outline_offset)}slot[name=profile]{min-width:0}::slotted([ui5-avatar][slot="profile"]){display:block;width:2rem;height:2rem;min-width:0;min-height:2rem;pointer-events:none}.ui5-shellbar-menu-button.ui5-shellbar-menu-button--interactive::-moz-focus-inner{border:none}.ui5-shellbar-menu-button-arrow,.ui5-shellbar-menu-button-title,.ui5-shellbar-title{display:inline-block;font-family:var(--sapFontSemiboldFamily);margin:0;font-size:var(--_ui5-v2-8-0_shellbar_menu_button_title_font_size);white-space:nowrap;overflow:hidden;text-overflow:ellipsis;color:var(--sapShell_SubBrand_TextColor)}:host(:not([primary-title])) .ui5-shellbar-menu-button{min-width:2.25rem;justify-content:center}.ui5-shellbar-secondary-title{display:inline-block;font-size:var(--sapFontSmallSize);color:var(--sapShell_TextColor);font-weight:400;text-overflow:ellipsis;white-space:nowrap;overflow:hidden;margin:0;text-align:start}.ui5-shellbar-headings{display:flex;flex-direction:column;justify-content:center;height:100%;overflow:hidden;margin-left:.25rem}.ui5-shellbar-menu-button--interactive .ui5-shellbar-menu-button-arrow{margin-inline-start:.375rem}.ui5-shellbar-overflow-container{display:flex;justify-content:center;align-items:center;height:100%;overflow:hidden}.ui5-shellbar-overflow-container-middle{align-self:flex-start;height:var(--_ui5-v2-8-0_shellbar_overflow_container_middle_height);width:0;flex-shrink:0}.ui5-shellbar-mid-content{height:var(--_ui5-v2-8-0_shellbar_overflow_container_middle_height)}:host([breakpoint-size="S"]) .ui5-shellbar-menu-button{margin-inline-start:0}:host([breakpoint-size="S"]){padding:0 1rem}:host([breakpoint-size="S"]) .ui5-shellbar-search-full-width-wrapper{padding:0 1rem}:host([breakpoint-size="M"]){padding:0 2rem}:host([breakpoint-size="M"]) .ui5-shellbar-search-full-width-wrapper{padding:0 2rem}:host([breakpoint-size="L"]){padding:0 2rem}:host([breakpoint-size="XL"]){padding:0 3rem}:host([breakpoint-size="XXL"]){padding:0 3rem}.ui5-shellbar-logo{overflow:hidden;cursor:pointer;max-height:2rem;max-width:3.75rem}.ui5-shellbar-logo-area{overflow:hidden;display:flex;align-items:center;padding:.25rem .5rem .25rem .25rem;box-sizing:border-box;cursor:pointer;background:var(--sapButton_Lite_Background);border:1px solid var(--sapButton_Lite_BorderColor);color:var(--sapShell_TextColor);margin-inline-start:.125rem}.ui5-shellbar-logo:focus,.ui5-shellbar-logo-area:focus{outline:var(--_ui5-v2-8-0_shellbar_logo_outline);border-radius:var(--_ui5-v2-8-0_shellbar_logo_border_radius)}.ui5-shellbar-overflow-container>.ui5-shellbar-logo:hover,.ui5-shellbar-logo-area:hover{box-shadow:var(--_ui5-v2-8-0_shellbar_button_box_shadow);border-radius:var(--_ui5-v2-8-0_shellbar_logo_border_radius)}.ui5-shellbar-logo-area:active:focus{background:var(--sapShell_Active_Background);border:1px solid var(--sapButton_Lite_Active_BorderColor);color:var(--sapShell_Active_TextColor)}.ui5-shellbar-menu-button.ui5-shellbar-menu-button--interactive:hover{box-shadow:var(--_ui5-v2-8-0_shellbar_button_box_shadow)}.ui5-shellbar-menu-button.ui5-shellbar-menu-button--interactive:active{box-shadow:var(--_ui5-v2-8-0_shellbar_button_box_shadow_active)}.ui5-shellbar-menu-button.ui5-shellbar-menu-button--interactive:active .ui5-shellbar-menu-button-arrow,.ui5-shellbar-menu-button.ui5-shellbar-menu-button--interactive:active .ui5-shellbar-menu-button-title{color:var(--sapShell_Active_TextColor)}.ui5-shellbar-menu-button .ui5-shellbar-logo:hover{box-shadow:none}.ui5-shellbar-button{width:2.5rem;box-sizing:border-box}.ui5-shellbar-button,::slotted([ui5-button][slot="startButton"]){--_ui5-v2-8-0_button_focused_border: var(--_ui5-v2-8-0_shellbar_button_focused_border)}.ui5-shellbar-search-button{--_ui5-v2-8-0_button_focused_border_radius: var(--_ui5-v2-8-0_shellbar_search_button_border_radius);--_ui5-v2-8-0_shellbar_button_border_radius: var(--_ui5-v2-8-0_shellbar_search_button_border_radius);height:var(--_ui5-v2-8-0_shellbar_search_button_size);width:var(--_ui5-v2-8-0_shellbar_search_button_size);min-width:var(--_ui5-v2-8-0_shellbar_search_button_size)}.ui5-shellbar-image-button{display:flex;justify-content:center;align-items:center;min-width:auto;height:2.5rem;--_ui5-v2-8-0_button_focused_border_radius: var(--_ui5-v2-8-0_shellbar_image_button_border_radius);border-radius:var(--_ui5-v2-8-0_shellbar_image_button_border_radius)}.ui5-shellbar-overflow-container-left{padding:0;justify-content:flex-start;max-width:75%;flex-shrink:0}.ui5-shellbar-overflow-container-left>:nth-child(n){margin-inline-end:.5rem}.ui5-shellbar-menu-button{white-space:nowrap;overflow:hidden;display:flex;align-items:center;padding:.25rem .5rem;cursor:text;-webkit-user-select:text;-moz-user-select:text;user-select:text}.ui5-shellbar-menu-button.ui5-shellbar-menu-button--interactive{-webkit-user-select:none;-moz-user-select:none;user-select:none;cursor:pointer;background:var(--sapButton_Lite_Background);border:var(--_ui5-v2-8-0_shellbar_button_border);color:var(--sapShell_TextColor)}:host(:not([with-logo])) .ui5-shellbar-menu-button{margin-inline-start:0}.ui5-shellbar-overflow-container-right{flex-grow:1;justify-content:flex-end}.ui5-shellbar-overflow-container-right .ui5-shellbar-overflow-container-right-child{display:flex;justify-content:flex-end;height:inherit;align-items:center}.ui5-shellbar-overflow-container-right-inner{display:flex;justify-content:flex-end;align-items:center;flex-grow:1;min-width:max-content}.ui5-shellbar-spacer{flex-grow:1;height:1px;flex-basis:1rem;flex-shrink:1}.ui5-shellbar-separator{flex-grow:0;flex-shrink:0;height:1rem;width:1px;background-color:var(--sapToolbar_SeparatorColor)}.ui5-shellbar-separator-end{margin-inline-start:.5rem}.ui5-shellbar-overflow-container-right-child .ui5-shellbar-button[data-count]:has(+.ui5-shellbar-overflow-button):before{inset-inline-end:var(--_ui5-v2-8-0-shellbar-notification-btn-count-offset)}:host([breakpoint-size="S"]) .ui5-shellbar-overflow-container-right{padding-inline-start:0}::slotted([hidden]){visibility:hidden;order:-1;position:absolute}.ui5-shellbar-content-item{display:flex;align-items:center;flex-shrink:0;padding-inline-start:var(--_ui5-v2-8-0-shellbar-content-margin-start)}:host(:not([notifications-count])) .ui5-shellbar-bell-button{position:relative}:host([notifications-count]:not([notifications-count=""])) .ui5-shellbar-bell-button:before,.ui5-shellbar-button[data-count]:before{position:absolute;width:auto;height:1rem;min-width:1rem;background:var(--sapContent_BadgeBackground);border:var(--_ui5-v2-8-0_shellbar_button_badge_border);color:var(--sapContent_BadgeTextColor);top:-.25rem;right:-.25rem;padding:0 .3125rem;border-radius:.5rem;display:flex;justify-content:center;align-items:center;font-size:var(--sapFontSmallSize);font-family:"72override",var(--sapFontFamily);z-index:2;box-sizing:border-box}:host([notifications-count]:not([notifications-count=""])) .ui5-shellbar-bell-button:before{content:attr(data-ui5-notifications-count);inset-inline-end:var(--_ui5-v2-8-0-shellbar-notification-btn-count-offset)}.ui5-shellbar-button[data-count]:before{content:attr(data-count)}.ui5-shellbar-button[data-count=" "]:before{height:.75rem;min-width:.75rem}.ui5-shellbar-menu-button{margin-inline-start:.5rem}.ui5-shellbar-search-field{padding-inline-start:var(--_ui5-v2-8-0-shellbar-content-margin-start);min-width:var(--_ui5-v2-8-0_shellbar_search_field_width);align-items:center;flex-grow:1;margin-inline-start:.5rem}.ui5-shellbar-overflow-container-right-child>:first-child,.ui5-shellbar-search-field:first-child+.ui5-shellbar-button:not(.ui5-shellbar-search-button){margin-inline-start:0}.ui5-shellbar-search-full-width-wrapper .ui5-shellbar-search-full-field{height:2.25rem;width:100%}.ui5-shellbar-search-full-width-wrapper{position:absolute;top:0;left:0;background:var(--sapShellColor);height:100%;width:100%;z-index:100;display:flex;align-items:center;box-sizing:border-box}.ui5-shellbar-search-full-width-wrapper .ui5-shellbar-button{width:auto}::slotted([ui5-input]){background:var(--_ui5-v2-8-0_shellbar_search_field_background);border:var(--_ui5-v2-8-0_shellbar_search_field_border);box-shadow:var(--_ui5-v2-8-0_shellbar_search_field_box_shadow);color:var(--_ui5-v2-8-0_shellbar_search_field_color);height:2.25rem;width:100%;min-width:var(--_ui5-v2-8-0_shellbar_search_field_width)}:host([breakpoint-size="M"]) ::slotted([ui5-input]),:host([breakpoint-size="S"]) ::slotted([ui5-input]){min-width:1rem}:host([breakpoint-size="M"][show-search-field]) .ui5-shellbar-overflow-container-right-child{flex-grow:1}::slotted([ui5-input]:hover){background:var(--_ui5-v2-8-0_shellbar_search_field_background_hover);box-shadow:var(--_ui5-v2-8-0_shellbar_search_field_box_shadow_hover)}::slotted([ui5-input][focused]){outline:var(--_ui5-v2-8-0_shellbar_search_field_outline_focused)}::slotted([slot="logo"]){max-height:2rem;max-width:3.75rem;pointer-events:none}.ui5-shellbar-co-pilot-placeholder{width:2.75rem;height:2.75rem}.ui5-shellbar-coPilot-pressed,.ui5-shellbar-coPilot-pressed:hover{color:var(--sapShell_Assistant_ForegroundColor)}::slotted([ui5-button][slot="startButton"]){margin-inline:0 .5rem;justify-content:center;align-items:center}::slotted([ui5-button][data-profile-btn]){width:auto}::slotted(.ui5-shellbar-hidden-button),.ui5-shellbar-hidden-button,.ui5-shellbar-invisible-button{visibility:hidden;order:-1;opacity:0;min-width:0;width:0;margin:0;padding:0;padding-inline-start:0;border:0;margin-inline-start:0}
`;

// node_modules/@ui5/webcomponents-fiori/dist/generated/themes/ShellBarPopover.css.js
registerThemePropertiesLoader("@ui5/webcomponents-theming", "sap_horizon", async () => parameters_bundle_css_default);
registerThemePropertiesLoader("@ui5/webcomponents-fiori", "sap_horizon", async () => parameters_bundle_css_default3);
var ShellBarPopover_css_default = `.ui5-shellbar-menu-popover::part(content),.ui5-shellbar-overflow-popover::part(content){padding:0}.ui5-shellbar-overflow-popover [ui5-li]::part(icon){color:var(--sapList_TextColor)}.ui5-shellbar-overflow-popover [ui5-li]::part(title){font-size:var(--sapFontSize)}.ui5-shellbar-overflow-popover [ui5-li]:after{position:relative;width:fit-content;height:1rem;min-width:1rem;background:var(--sapContent_BadgeBackground);border:var(--_ui5-v2-8-0_shellbar_button_badge_border);color:var(--sapContent_BadgeTextColor);bottom:calc(100% + .0625rem);left:1.25rem;padding:0 .3125rem;border-radius:.5rem;display:flex;justify-content:center;align-items:center;font-size:var(--sapFontSmallSize);font-family:"72override",var(--sapFontFamily);z-index:2;box-sizing:border-box;pointer-events:none}.ui5-shellbar-overflow-popover [ui5-li][data-count]:after{content:attr(data-count)}
`;

// node_modules/@ui5/webcomponents-fiori/dist/ShellBar.js
var __decorate82 = function(decorators, target, key, desc) {
  var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
  if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
  else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
  return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var ShellBar_1;
var RESIZE_THROTTLE_RATE = 200;
var PREDEFINED_PLACE_ACTIONS = ["feedback", "sys-help"];
var ShellBar = ShellBar_1 = class ShellBar2 extends UI5Element_default {
  static get FIORI_3_BREAKPOINTS() {
    return [
      599,
      1023,
      1439,
      1919,
      1e4
    ];
  }
  static get FIORI_3_BREAKPOINTS_MAP() {
    return {
      "599": "S",
      "1023": "M",
      "1439": "L",
      "1919": "XL",
      "10000": "XXL"
    };
  }
  constructor() {
    super();
    this.showNotifications = false;
    this.showProductSwitch = false;
    this.showSearchField = false;
    this.accessibilityAttributes = {};
    this.breakpointSize = "S";
    this.withLogo = false;
    this._itemsInfo = [];
    this._contentInfo = [];
    this._menuPopoverExpanded = false;
    this._overflowPopoverExpanded = false;
    this.showFullWidthSearch = false;
    this._cachedHiddenContent = [];
    this._lastOffsetWidth = 0;
    this._observableContent = [];
    this._autoRestoreSearchField = false;
    this._hiddenIcons = [];
    this._isInitialRendering = true;
    this._overflowNotifications = null;
    this._defaultItemPressPrevented = false;
    this.contentItemsObserver = new MutationObserver(() => {
      this._handleActionsOverflow();
    });
    this._headerPress = () => {
      if (this.hasMenuItems) {
        const menuPopover = this._getMenuPopover();
        menuPopover.opener = this.shadowRoot.querySelector(".ui5-shellbar-menu-button");
        menuPopover.open = true;
      }
    };
    this._handleResize = throttle_default(() => {
      this.menuPopover = this._getMenuPopover();
      this.overflowPopover = this._getOverflowPopover();
      this.overflowPopover.open = false;
      if (this._lastOffsetWidth !== this.offsetWidth) {
        this._overflowActions();
        if (this.autoSearchField) {
          this._updateSearchFieldState();
        }
      }
    }, RESIZE_THROTTLE_RATE);
  }
  _updateSearchFieldState() {
    const spacerWidth = this.shadowRoot.querySelector(".ui5-shellbar-spacer") ? this.shadowRoot.querySelector(".ui5-shellbar-spacer").getBoundingClientRect().width : 0;
    const searchFieldWidth = this.domCalculatedValues("--_ui5_shellbar_search_field_width");
    if (this.showFullWidthSearch) {
      this.showSearchField = false;
      return;
    }
    if (spacerWidth <= searchFieldWidth && this.contentItemsHidden.length !== 0 && this.showSearchField) {
      this.showSearchField = false;
      this._autoRestoreSearchField = true;
    } else if (spacerWidth > searchFieldWidth && this._autoRestoreSearchField) {
      this.showSearchField = true;
      this._autoRestoreSearchField = false;
    }
  }
  _onKeyDown(e) {
    const items3 = this._getVisibleAndInteractiveItems();
    const activeElement = getActiveElement_default();
    const currentIndex = items3.findIndex((el) => el === activeElement);
    if (isLeft(e) || isRight(e)) {
      e.preventDefault();
      if (isLeft(e)) {
        this._focusPreviousItem(items3, currentIndex);
      } else if (isRight(e)) {
        this._focusNextItem(items3, currentIndex);
      }
    }
  }
  _focusNextItem(items3, currentIndex) {
    if (currentIndex < items3.length - 1) {
      items3[currentIndex + 1].focus();
    }
  }
  _focusPreviousItem(items3, currentIndex) {
    if (currentIndex > 0) {
      items3[currentIndex - 1].focus();
    }
  }
  _isVisible(element) {
    const style = getComputedStyle(element);
    return style.display !== "none" && style.visibility !== "hidden" && element.offsetWidth > 0 && element.offsetHeight > 0;
  }
  _getNavigableContent() {
    const elements = [
      ...this.startButton,
      ...this.logo,
      ...this.shadowRoot.querySelectorAll(".ui5-shellbar-logo"),
      ...this.shadowRoot.querySelectorAll(".ui5-shellbar-logo-area"),
      ...this.shadowRoot.querySelectorAll(".ui5-shellbar-menu-button"),
      ...this.contentItems,
      ...this._getRightChildItems()
    ];
    return elements.map((element) => {
      const component = element;
      if (component.isUI5Element) {
        return component.getFocusDomRef();
      }
      return element;
    }).filter((el) => !!el);
  }
  _getRightChildItems() {
    return [
      ...this.searchField,
      ...this.shadowRoot.querySelectorAll(".ui5-shellbar-search-item-for-arrow-nav"),
      ...this.assistant,
      ...this.shadowRoot.querySelectorAll(".ui5-shellbar-items-for-arrow-nav")
    ];
  }
  _getVisibleAndInteractiveItems() {
    const items3 = this._getNavigableContent();
    const visibleAndInteractiveItems = items3.filter((item2) => {
      return this._isVisible(item2) && item2.tabIndex === 0;
    });
    return visibleAndInteractiveItems;
  }
  _menuItemPress(e) {
    const shouldContinue = this.fireDecoratorEvent("menu-item-click", {
      item: e.detail.item
    });
    if (shouldContinue) {
      this.menuPopover.open = false;
    }
  }
  _logoPress() {
    this.fireDecoratorEvent("logo-click", {
      targetRef: this.shadowRoot.querySelector(".ui5-shellbar-logo")
    });
  }
  _menuPopoverBeforeOpen() {
    this._menuPopoverExpanded = true;
    if (this.menuPopover.content && this.menuPopover.content.length) {
      this.menuPopover.content[0].focusFirstItem();
    }
  }
  _menuPopoverAfterClose() {
    this._menuPopoverExpanded = false;
  }
  _overflowPopoverBeforeOpen() {
    this._overflowPopoverExpanded = true;
    if (this.overflowPopover.content && this.overflowPopover.content.length) {
      this.overflowPopover.content[0].focusFirstItem();
    }
  }
  _overflowPopoverAfterClose() {
    this._overflowPopoverExpanded = false;
  }
  _logoKeyup(e) {
    if (isSpace(e)) {
      this._logoPress();
    }
  }
  _logoKeydown(e) {
    if (isSpace(e)) {
      e.preventDefault();
      return;
    }
    if (isEnter(e)) {
      this._logoPress();
    }
  }
  _calculateCSSREMValue(styleSet, propertyName) {
    return Number(styleSet.getPropertyValue(propertyName).replace("rem", "")) * parseInt(getComputedStyle(document.body).getPropertyValue("font-size"));
  }
  _parsePxValue(styleSet, propertyName) {
    return Number(styleSet.getPropertyValue(propertyName).replace("px", ""));
  }
  domCalculatedValues(cssVar) {
    const shellbarComputerStyle = getComputedStyle(this.getDomRef());
    return this._calculateCSSREMValue(shellbarComputerStyle, getScopedVarName(cssVar));
  }
  onBeforeRendering() {
    this.withLogo = this.hasLogo;
    this._hiddenIcons = this._itemsInfo.filter((info) => {
      const isHidden = info.classes.indexOf("ui5-shellbar-hidden-button") !== -1;
      const isSet = info.classes.indexOf("ui5-shellbar-invisible-button") === -1;
      const isOverflowIcon = info.classes.indexOf("ui5-shellbar-overflow-button") !== -1;
      const isImageIcon = info.classes.indexOf("ui5-shellbar-image-button") !== -1;
      const shouldStayOnScreen = isOverflowIcon || isImageIcon && this.hasProfile;
      return isHidden && isSet && !shouldStayOnScreen;
    });
    this._observeContentItems();
  }
  onAfterRendering() {
    this._lastOffsetWidth = this.offsetWidth;
    this._overflowActions();
    this.onInitialRendering();
  }
  async onInitialRendering() {
    if (this._isInitialRendering) {
      await renderFinished();
      if (this.autoSearchField) {
        this._updateSearchFieldState();
      }
    }
    this._isInitialRendering = false;
  }
  /**
   * Closes the overflow area.
   * Useful to manually close the overflow after having suppressed automatic closing with preventDefault() of ShellbarItem's press event
   * @public
   */
  closeOverflow() {
    if (this.overflowPopover) {
      this.overflowPopover.open = false;
    }
  }
  _handleBarBreakpoints() {
    const width = this.getBoundingClientRect().width;
    const breakpoints2 = ShellBar_1.FIORI_3_BREAKPOINTS;
    const size = breakpoints2.find((bp1) => width <= bp1) || ShellBar_1.FIORI_3_BREAKPOINTS[ShellBar_1.FIORI_3_BREAKPOINTS.length - 1];
    const mappedSize = ShellBar_1.FIORI_3_BREAKPOINTS_MAP[size];
    if (this.breakpointSize !== mappedSize) {
      this.breakpointSize = mappedSize;
    }
  }
  _hideItems(items3) {
    items3.forEach((item2) => {
      if (item2.classes.indexOf("ui5-shellbar-no-overflow-button") === -1) {
        item2.classes = `${item2.classes} ui5-shellbar-hidden-button`;
      }
    });
    return items3;
  }
  _resetItemsVisibility(items3) {
    items3.forEach((item2) => {
      item2.classList.remove("ui5-shellbar-hidden-button");
    });
  }
  _handleActionsOverflow() {
    const inner = this.overflowInner;
    const wrapper = this.overflowWrapper;
    const hidableDomElements = this.hidableDomElements;
    const hiddenItems = [];
    let lastHiddenIndex = 0;
    this._resetItemsVisibility(hidableDomElements);
    for (let i = 0; i < hidableDomElements.length; i++) {
      if ((inner == null ? void 0 : inner.offsetWidth) === (wrapper == null ? void 0 : wrapper.offsetWidth)) {
        lastHiddenIndex = i;
        break;
      }
      const item2 = hidableDomElements[i];
      hiddenItems.push(item2.id);
      item2.classList.add("ui5-shellbar-hidden-button");
    }
    if (hiddenItems.length === 1 && !this.showSearchField) {
      const nextItemToHide = hidableDomElements[++lastHiddenIndex];
      if (nextItemToHide) {
        hiddenItems.push(nextItemToHide.id);
      }
    }
    const itemsInfo = this._getItemsInfo().filter((item2) => item2.show && item2.classes.indexOf("ui5-shellbar-no-overflow-button") === -1);
    const contentInfo = this._getContentInfo().sort((a, b) => a.hideOrder - b.hideOrder);
    const itemsToHide = [...itemsInfo, ...contentInfo].filter((item2) => hiddenItems.includes(item2.id));
    this._hideItems(itemsToHide);
    return { itemsInfo, contentInfo };
  }
  _overflowActions() {
    this._handleBarBreakpoints();
    const { itemsInfo, contentInfo } = this._handleActionsOverflow();
    this._updateItemsInfo(itemsInfo);
    this._updateContentInfo(contentInfo);
    this._updateOverflowNotifications();
    this.showFullWidthSearch = this.overflowed;
  }
  _toggleActionPopover() {
    const overflowButton = this.shadowRoot.querySelector(".ui5-shellbar-overflow-button");
    const overflowPopover = this._getOverflowPopover();
    overflowPopover.opener = overflowButton;
    overflowPopover.open = true;
  }
  onEnterDOM() {
    ResizeHandler_default.register(this, this._handleResize);
    if (isDesktop()) {
      this.setAttribute("desktop", "");
    }
  }
  onExitDOM() {
    this.contentItemsObserver.disconnect();
    this._observableContent = [];
    ResizeHandler_default.deregister(this, this._handleResize);
  }
  _handleSearchIconPress() {
    const searchButtonRef = this.shadowRoot.querySelector(".ui5-shellbar-search-button");
    const defaultPrevented = !this.fireDecoratorEvent("search-button-click", {
      targetRef: searchButtonRef,
      searchFieldVisible: this.showSearchField
    });
    if (defaultPrevented) {
      return;
    }
    this.showSearchField = !this.showSearchField;
    if (!this.showSearchField) {
      return;
    }
    const input = this.searchField[0];
    if (input) {
      input.focused = true;
    }
    setTimeout(() => {
      if (input) {
        input.focus();
      }
    }, 100);
  }
  async _handleActionListClick() {
    if (!this._defaultItemPressPrevented) {
      this.closeOverflow();
      await renderFinished();
    }
    this._defaultItemPressPrevented = false;
  }
  _handleCustomActionPress(e) {
    const target = e.target;
    const refItemId = target.getAttribute("data-ui5-external-action-item-id");
    if (refItemId) {
      const shellbarItem = this.items.find((item2) => {
        return item2._id === refItemId;
      });
      const prevented = shellbarItem.fireClickEvent(e);
      this._defaultItemPressPrevented = prevented;
    }
  }
  _handleOverflowPress() {
    this._toggleActionPopover();
  }
  _handleNotificationsPress(e) {
    const notificationIconRef = this.shadowRoot.querySelector(".ui5-shellbar-bell-button"), target = e.target;
    this._defaultItemPressPrevented = !this.fireDecoratorEvent("notifications-click", {
      targetRef: notificationIconRef.classList.contains("ui5-shellbar-hidden-button") ? target : notificationIconRef
    });
  }
  _handleProfilePress() {
    this.fireDecoratorEvent("profile-click", {
      targetRef: this.shadowRoot.querySelector(".ui5-shellbar-image-button")
    });
  }
  _handleCancelButtonPress() {
    this.showSearchField = false;
  }
  _handleProductSwitchPress(e) {
    const buttonRef = this.shadowRoot.querySelector(".ui5-shellbar-button-product-switch"), target = e.target;
    this._defaultItemPressPrevented = !this.fireDecoratorEvent("product-switch-click", {
      targetRef: buttonRef.classList.contains("ui5-shellbar-hidden-button") ? target : buttonRef
    });
  }
  /**
   * Returns the `logo` DOM ref.
   * @public
   * @default null
   * @since 1.0.0-rc.16
   */
  get logoDomRef() {
    return this.shadowRoot.querySelector(`*[data-ui5-stable="logo"]`);
  }
  /**
   * Returns the `notifications` icon DOM ref.
   * @public
   * @default null
   * @since 1.0.0-rc.16
   */
  get notificationsDomRef() {
    return this.shadowRoot.querySelector(`*[data-ui5-stable="notifications"]`);
  }
  /**
   * Returns the `overflow` icon DOM ref.
   * @public
   * @default null
   * @since 1.0.0-rc.16
   */
  get overflowDomRef() {
    return this.shadowRoot.querySelector(`*[data-ui5-stable="overflow"]`);
  }
  /**
   * Returns the `profile` icon DOM ref.
   * @public
   * @default null
   * @since 1.0.0-rc.16
   */
  get profileDomRef() {
    return this.shadowRoot.querySelector(`*[data-ui5-stable="profile"]`);
  }
  /**
   * Returns the `product-switch` icon DOM ref.
   * @public
   * @default null
   * @since 1.0.0-rc.16
   */
  get productSwitchDomRef() {
    return this.shadowRoot.querySelector(`*[data-ui5-stable="product-switch"]`);
  }
  _getContentInfo() {
    return [
      ...this.contentItemsSorted.map((item2) => {
        return {
          hideOrder: parseInt(item2.getAttribute("data-hide-order") || "0"),
          id: item2.slot,
          classes: "ui5-shellbar-content-item",
          show: false
        };
      })
    ];
  }
  /**
   * Returns all items that will be placed in the right of the bar as icons / dom elements.
   */
  _getItemsInfo() {
    const items3 = [
      {
        icon: search_default,
        text: this._searchText,
        classes: `${this.searchField.length ? "" : "ui5-shellbar-invisible-button"} ui5-shellbar-search-button ui5-shellbar-button`,
        id: `${this._id}-item-${1}`,
        press: this._handleSearchIconPress.bind(this),
        show: !!this.searchField.length,
        tooltip: this._searchText
      },
      {
        icon: da_default,
        text: "Assistant",
        classes: `${this.assistant.length ? "" : "ui5-shellbar-invisible-button"} ui5-shellbar-assistant-button`,
        id: `${this._id}-assistant`,
        show: !!this.assistant.length,
        press: () => {
        },
        tooltip: this.assistant.length ? this.assistant[0].getAttribute("text") || this.assistant[0].getAttribute("title") || void 0 : void 0
      },
      {
        icon: bell_default,
        title: this._notificationsText,
        text: ShellBar_1.i18nBundle.getText(SHELLBAR_NOTIFICATIONS_NO_COUNT),
        count: this.notificationsCount,
        classes: `${this.showNotifications ? "" : "ui5-shellbar-invisible-button"} ui5-shellbar-bell-button ui5-shellbar-button`,
        id: `${this._id}-item-${2}`,
        show: this.showNotifications,
        press: this._handleNotificationsPress.bind(this),
        tooltip: this._notificationsText
      },
      // sort feedback and help to always be last
      ...this.items.sort((a, b) => {
        const aIndex = PREDEFINED_PLACE_ACTIONS.indexOf(a.icon || "");
        const bIndex = PREDEFINED_PLACE_ACTIONS.indexOf(b.icon || "");
        return aIndex - bIndex;
      }).map((item2) => {
        item2._getRealDomRef = () => this.getDomRef().querySelector(`*[data-ui5-stable=${item2.stableDomRef}]`);
        const show = !!item2.icon || false;
        return {
          icon: item2.icon,
          id: item2._id,
          count: item2.count || void 0,
          refItemid: item2._id,
          text: item2.text,
          classes: "ui5-shellbar-custom-item ui5-shellbar-button",
          show,
          press: this._handleCustomActionPress.bind(this),
          custom: true,
          title: item2.title,
          stableDomRef: item2.stableDomRef,
          tooltip: item2.title || item2.text
        };
      }),
      {
        icon: overflow_default,
        text: "Overflow",
        classes: "ui5-shellbar-hidden-button ui5-shellbar-no-overflow-button ui5-shellbar-overflow-button ui5-shellbar-button",
        id: `${this.id}-item-${5}`,
        press: this._handleOverflowPress.bind(this),
        show: true,
        tooltip: this._overflowText
      },
      {
        text: "Person",
        classes: `${this.hasProfile ? "" : "ui5-shellbar-invisible-button"} ui5-shellbar-no-overflow-button ui5-shellbar-image-button ui5-shellbar-button`,
        profile: true,
        id: `${this._id}-item-${3}`,
        show: this.hasProfile,
        press: this._handleProfilePress.bind(this),
        tooltip: this._profileText
      },
      {
        icon: grid_default,
        text: this._productsText,
        classes: `${this.showProductSwitch ? "" : "ui5-shellbar-invisible-button"} ui5-shellbar-no-overflow-button ui5-shellbar-button ui5-shellbar-image-button ui5-shellbar-button-product-switch`,
        id: `${this._id}-item-${4}`,
        show: this.showProductSwitch,
        press: this._handleProductSwitchPress.bind(this),
        tooltip: this._productsText
      }
    ];
    return items3;
  }
  _updateItemsInfo(newItemsInfo) {
    const isDifferent = JSON.stringify(this._itemsInfo) !== JSON.stringify(newItemsInfo);
    if (isDifferent) {
      this._itemsInfo = newItemsInfo;
    }
  }
  _updateContentInfo(newContentInfo) {
    const isDifferent = JSON.stringify(this._contentInfo) !== JSON.stringify(newContentInfo);
    if (isDifferent) {
      this._contentInfo = newContentInfo;
      this._fireContentItemVisibilityChangeEvent();
    }
  }
  _fireContentItemVisibilityChangeEvent() {
    const hiddenByClass = this._contentInfo.filter((item2) => item2.classes.indexOf("ui5-shellbar-hidden-button") !== -1).map((item2) => item2.id);
    this.fireDecoratorEvent("content-item-visibility-change", {
      items: this.contentItems.filter((item2) => hiddenByClass.includes(item2.slot))
    });
  }
  _updateOverflowNotifications() {
    const notificationsArr = [];
    let overflowNotifications = null;
    this._itemsInfo.forEach((item2) => {
      if (item2.count && this.isIconHidden(item2.icon)) {
        notificationsArr.push(item2.count);
      }
    });
    if (notificationsArr.length === 1) {
      overflowNotifications = notificationsArr[0];
    } else if (notificationsArr.length > 1) {
      overflowNotifications = " ";
    }
    this._overflowNotifications = overflowNotifications;
  }
  _observeContentItems() {
    if (this.hasMatchingContent) {
      return;
    }
    this.contentItems.forEach((item2) => {
      if (!this._observableContent.includes(item2)) {
        this.contentItemsObserver.observe(item2, {
          characterData: false,
          childList: false,
          subtree: false,
          attributes: true,
          attributeFilter: ["data-hide-order"]
        });
      }
    });
    this._observableContent = this.contentItems;
  }
  _getOverflowPopover() {
    return this.shadowRoot.querySelector(".ui5-shellbar-overflow-popover");
  }
  _getMenuPopover() {
    return this.shadowRoot.querySelector(".ui5-shellbar-menu-popover");
  }
  isIconHidden(name105) {
    const itemInfo = this._itemsInfo.find((item2) => item2.icon === name105);
    if (!itemInfo) {
      return false;
    }
    return itemInfo.classes.indexOf("ui5-shellbar-hidden-button") !== -1;
  }
  get hasMatchingContent() {
    if (this._observableContent.length !== this.contentItems.length) {
      return false;
    }
    const observableContentSet = new WeakSet(this._observableContent);
    return this.contentItems.every((item2) => observableContentSet.has(item2));
  }
  get contentItemsSorted() {
    return this.contentItems.toReversed().sort((a, b) => {
      return parseInt(a.getAttribute("data-hide-order") || "0") - parseInt(b.getAttribute("data-hide-order") || "0");
    });
  }
  get contentItemsWrappersSorted() {
    return this.contentItemsSorted.map((item2) => this.shadowRoot.querySelector(`#${item2.slot}`)).filter((item2) => item2 !== null);
  }
  get autoSearchField() {
    var _a;
    const onFocus = document.activeElement === this.searchField[0];
    const isEmpty = ((_a = this.searchField[0]) == null ? void 0 : _a.value.length) === 0;
    return (this.showSearchField || this._autoRestoreSearchField) && !onFocus && isEmpty;
  }
  get showStartSeparatorInWrapper() {
    const starContent = this.startContent;
    const hiddenStartContentItems = this._contentInfo.filter((item2) => {
      const isHidden = item2.classes.indexOf("ui5-shellbar-hidden-button") !== -1;
      const isInContent = starContent.find((contentItem) => contentItem.slot === item2.id);
      return isHidden && isInContent;
    }).map((item2) => item2.id);
    return starContent.length - hiddenStartContentItems.length > 0;
  }
  get showEndSeparatorInWrapper() {
    const endContent = this.endContent;
    const hiddenEndContentItems = this._contentInfo.filter((item2) => {
      const isHidden = item2.classes.indexOf("ui5-shellbar-hidden-button") !== -1;
      const isInContent = endContent.find((contentItem) => contentItem.slot === item2.id);
      return isHidden && isInContent;
    }).map((item2) => item2.id);
    return endContent.length - hiddenEndContentItems.length > 0;
  }
  get classes() {
    return {
      wrapper: {
        "ui5-shellbar-root": true,
        "ui5-shellbar-with-searchfield": this.hasSearchField
      },
      button: {
        "ui5-shellbar-menu-button--interactive": this.hasMenuItems
      },
      notification: {
        "ui5-shellbar-hidden-button": this.isIconHidden("bell")
      },
      search: {
        "ui5-shellbar-hidden-button": this.isIconHidden("search")
      },
      overflow: {
        "ui5-shellbar-hidden-button": this._hiddenIcons.length === 0
      },
      assistant: {
        "ui5-shellbar-hidden-button": this.isIconHidden("assistant"),
        "ui5-shellbar-assistant-button": true
      }
    };
  }
  get styles() {
    return {
      searchField: {
        "display": this.showSearchField ? "flex" : "none"
      }
    };
  }
  get customItemsInfo() {
    return this._itemsInfo.filter((itemInfo) => !!itemInfo.custom);
  }
  get hasLogo() {
    return !!this.logo.length;
  }
  get showLogoInMenuButton() {
    return this.hasLogo && this.breakpointSize === "S";
  }
  get showTitleInMenuButton() {
    return this.primaryTitle && !this.showLogoInMenuButton;
  }
  get showMenuButton() {
    return this.primaryTitle || this.showLogoInMenuButton;
  }
  get popoverHorizontalAlign() {
    return this.effectiveDir === "rtl" ? "Start" : "End";
  }
  get hasAssistant() {
    return !!this.assistant.length;
  }
  get hasSearchField() {
    return !!this.searchField.length;
  }
  get hasMidContent() {
    return !!this.midContent.length;
  }
  get hasProfile() {
    return !!this.profile.length;
  }
  get hasMenuItems() {
    return this.menuItems.length > 0;
  }
  get imageBtnText() {
    return getEffectiveAriaLabelText(this);
  }
  get _shellbarText() {
    return ShellBar_1.i18nBundle.getText(SHELLBAR_LABEL);
  }
  get _logoText() {
    var _a;
    return ((_a = this.accessibilityAttributes.logo) == null ? void 0 : _a.name) || ShellBar_1.i18nBundle.getText(SHELLBAR_LOGO);
  }
  get _notificationsText() {
    return ShellBar_1.i18nBundle.getText(SHELLBAR_NOTIFICATIONS, this.notificationsCount || 0);
  }
  get _cancelBtnText() {
    return ShellBar_1.i18nBundle.getText(SHELLBAR_CANCEL);
  }
  get _logoAreaText() {
    const primaryTitle = this.primaryTitle ?? "";
    const secondaryTitle = this.secondaryTitle ?? "";
    return ShellBar_1.i18nBundle.getText(SHELLBAR_LOGO_AREA, primaryTitle, secondaryTitle);
  }
  get _contentItemsText() {
    return ShellBar_1.i18nBundle.getText(SHELLBAR_ADDITIONAL_CONTEXT);
  }
  get _searchFieldDescription() {
    return ShellBar_1.i18nBundle.getText(SHELLBAR_SEARCHFIELD_DESCRIPTION);
  }
  get _contentItemsRole() {
    if (this.contentItems.length === 1) {
      return;
    }
    return "group";
  }
  get contentItems() {
    return [...this.startContent, ...this.endContent];
  }
  get startContent() {
    const spacerIndex = this.content.findIndex((child) => child.hasAttribute("ui5-shellbar-spacer"));
    return this.content.slice(0, spacerIndex);
  }
  get endContent() {
    const spacerIndex = this.content.findIndex((child) => child.hasAttribute("ui5-shellbar-spacer"));
    return this.content.slice(spacerIndex + 1);
  }
  get _rightChildRole() {
    const items3 = this._getRightChildItems();
    const visibleItems = items3.filter((item2) => {
      return this._isVisible(item2);
    });
    if (visibleItems.length === 1) {
      return;
    }
    return "toolbar";
  }
  get _searchFieldText() {
    return ShellBar_1.i18nBundle.getText(SHELLBAR_SEARCH_FIELD);
  }
  get _searchBtnOpen() {
    return ShellBar_1.i18nBundle.getText(SHELLBAR_SEARCH_BTN_OPEN);
  }
  get _productSwitchBtnText() {
    return ShellBar_1.i18nBundle.getText(SHELLBAR_PRODUCT_SWITCH_BTN);
  }
  get isSearchFieldVisible() {
    var _a;
    return ((_a = this.searchField[0]) == null ? void 0 : _a.offsetWidth) || 0;
  }
  get _profileText() {
    var _a;
    return ((_a = this.accessibilityAttributes.profile) == null ? void 0 : _a.name) || ShellBar_1.i18nBundle.getText(SHELLBAR_PROFILE);
  }
  get _productsText() {
    return ShellBar_1.i18nBundle.getText(SHELLBAR_PRODUCTS);
  }
  get _searchText() {
    return ShellBar_1.i18nBundle.getText(SHELLBAR_SEARCH);
  }
  get _overflowText() {
    return ShellBar_1.i18nBundle.getText(SHELLBAR_OVERFLOW);
  }
  get hasContentItems() {
    return this.contentItems.length > 0;
  }
  get hidableDomElements() {
    const items3 = Array.from(this.shadowRoot.querySelectorAll(".ui5-shellbar-button:not(.ui5-shellbar-search-button):not(.ui5-shellbar-overflow-button):not(.ui5-shellbar-cancel-button):not(.ui5-shellbar-no-overflow-button)"));
    const assistant = this.shadowRoot.querySelector(".ui5-shellbar-assistant-button");
    const searchButton = this.shadowRoot.querySelector(".ui5-shellbar-search-button");
    const contentItems = this.contentItemsWrappersSorted;
    const firstContentItem = contentItems.pop();
    const prioritizeContent = this.showSearchField && this.hasSearchField;
    let itemsToHide = [];
    if (prioritizeContent) {
      const overflowItems = [...items3, assistant];
      const visibleItems = overflowItems.filter((item2) => item2 && !item2.classList.contains("ui5-shellbar-hidden-button"));
      const hiddenItems = overflowItems.filter((item2) => item2 && item2.classList.contains("ui5-shellbar-hidden-button"));
      itemsToHide = [
        ...hiddenItems,
        ...contentItems,
        firstContentItem,
        ...visibleItems
      ];
    } else {
      itemsToHide = [
        ...items3.toReversed(),
        assistant,
        ...contentItems,
        searchButton,
        firstContentItem
      ];
    }
    return itemsToHide.filter(Boolean);
  }
  get contentItemsHidden() {
    return this.contentItemsWrappersSorted.filter((item2) => item2.classList.contains("ui5-shellbar-hidden-button"));
  }
  get overflowWrapper() {
    return this.shadowRoot.querySelector(".ui5-shellbar-overflow-container-right");
  }
  get overflowInner() {
    return this.shadowRoot.querySelector(".ui5-shellbar-overflow-container-right-inner");
  }
  get overflowed() {
    const wrapper = this.overflowWrapper;
    const inner = this.overflowInner;
    if (!wrapper || !inner) {
      return false;
    }
    return inner.offsetWidth > wrapper.offsetWidth;
  }
  get accInfo() {
    var _a, _b, _c, _d, _e, _f, _g, _h, _i;
    const overflowExpanded = (_a = this.accessibilityAttributes.overflow) == null ? void 0 : _a.expanded;
    return {
      notifications: {
        "title": this._notificationsText,
        "accessibilityAttributes": {
          expanded: (_b = this.accessibilityAttributes.notifications) == null ? void 0 : _b.expanded,
          hasPopup: (_c = this.accessibilityAttributes.notifications) == null ? void 0 : _c.hasPopup
        }
      },
      profile: {
        "title": this._profileText,
        "accessibilityAttributes": {
          hasPopup: (_d = this.accessibilityAttributes.profile) == null ? void 0 : _d.hasPopup,
          expanded: (_e = this.accessibilityAttributes.profile) == null ? void 0 : _e.expanded
        }
      },
      products: {
        "title": this._productsText,
        "accessibilityAttributes": {
          hasPopup: (_f = this.accessibilityAttributes.product) == null ? void 0 : _f.hasPopup,
          expanded: (_g = this.accessibilityAttributes.product) == null ? void 0 : _g.expanded
        }
      },
      search: {
        "title": this._searchText,
        "accessibilityAttributes": {
          hasPopup: (_h = this.accessibilityAttributes.search) == null ? void 0 : _h.hasPopup
        }
      },
      overflow: {
        "title": this._overflowText,
        "accessibilityAttributes": {
          hasPopup: ((_i = this.accessibilityAttributes.overflow) == null ? void 0 : _i.hasPopup) || "menu",
          expanded: overflowExpanded === void 0 ? this._overflowPopoverExpanded : overflowExpanded
        }
      }
    };
  }
  get accLogoRole() {
    var _a;
    return ((_a = this.accessibilityAttributes.logo) == null ? void 0 : _a.role) || "link";
  }
  get isSBreakPoint() {
    return this.breakpointSize === "S";
  }
};
__decorate82([
  property_default()
], ShellBar.prototype, "primaryTitle", void 0);
__decorate82([
  property_default()
], ShellBar.prototype, "secondaryTitle", void 0);
__decorate82([
  property_default()
], ShellBar.prototype, "notificationsCount", void 0);
__decorate82([
  property_default({ type: Boolean })
], ShellBar.prototype, "showNotifications", void 0);
__decorate82([
  property_default({ type: Boolean })
], ShellBar.prototype, "showProductSwitch", void 0);
__decorate82([
  property_default({ type: Boolean })
], ShellBar.prototype, "showSearchField", void 0);
__decorate82([
  property_default({ type: Object })
], ShellBar.prototype, "accessibilityAttributes", void 0);
__decorate82([
  property_default()
], ShellBar.prototype, "breakpointSize", void 0);
__decorate82([
  property_default({ type: Boolean })
], ShellBar.prototype, "withLogo", void 0);
__decorate82([
  property_default({ type: Object })
], ShellBar.prototype, "_itemsInfo", void 0);
__decorate82([
  property_default({ type: Object })
], ShellBar.prototype, "_contentInfo", void 0);
__decorate82([
  property_default({ type: Boolean, noAttribute: true })
], ShellBar.prototype, "_menuPopoverExpanded", void 0);
__decorate82([
  property_default({ type: Boolean, noAttribute: true })
], ShellBar.prototype, "_overflowPopoverExpanded", void 0);
__decorate82([
  property_default({ type: Boolean, noAttribute: true })
], ShellBar.prototype, "showFullWidthSearch", void 0);
__decorate82([
  slot_default()
], ShellBar.prototype, "assistant", void 0);
__decorate82([
  slot_default({ type: HTMLElement, "default": true, invalidateOnChildChange: true })
], ShellBar.prototype, "items", void 0);
__decorate82([
  slot_default()
], ShellBar.prototype, "profile", void 0);
__decorate82([
  slot_default()
], ShellBar.prototype, "logo", void 0);
__decorate82([
  slot_default()
], ShellBar.prototype, "menuItems", void 0);
__decorate82([
  slot_default()
], ShellBar.prototype, "searchField", void 0);
__decorate82([
  slot_default()
], ShellBar.prototype, "startButton", void 0);
__decorate82([
  slot_default()
], ShellBar.prototype, "midContent", void 0);
__decorate82([
  slot_default({ type: HTMLElement, individualSlots: true })
], ShellBar.prototype, "content", void 0);
__decorate82([
  i18n_default("@ui5/webcomponents-fiori")
], ShellBar, "i18nBundle", void 0);
ShellBar = ShellBar_1 = __decorate82([
  customElement_default({
    tag: "ui5-shellbar",
    fastNavigation: true,
    languageAware: true,
    renderer: JsxRenderer_default,
    template: ShellBarTemplate,
    styles: [ShellBar_css_default, ShellBarPopover_css_default],
    dependencies: [
      Button_default,
      Icon_default,
      List_default,
      Popover_default,
      ListItemStandard_default,
      Menu_default
    ]
  }),
  event_strict_default("notifications-click", {
    cancelable: true,
    bubbles: true
  }),
  event_strict_default("profile-click", {
    bubbles: true
  }),
  event_strict_default("product-switch-click", {
    cancelable: true,
    bubbles: true
  }),
  event_strict_default("logo-click", {
    bubbles: true
  }),
  event_strict_default("menu-item-click", {
    bubbles: true,
    cancelable: true
  }),
  event_strict_default("search-button-click", {
    cancelable: true,
    bubbles: true
  }),
  event_strict_default("content-item-visibility-change", {
    bubbles: true
  })
], ShellBar);
ShellBar.define();

// node_modules/@ui5/webcomponents-react/dist/webComponents/ShellBar/index.js
var ShellBar3 = withWebComponent("ui5-shellbar", ["accessibilityAttributes", "notificationsCount", "primaryTitle", "secondaryTitle"], ["showNotifications", "showProductSwitch", "showSearchField"], ["assistant", "content", "logo", "menuItems", "profile", "searchField", "startButton"], ["content-item-visibility-change", "logo-click", "menu-item-click", "notifications-click", "product-switch-click", "profile-click", "search-button-click"]);
ShellBar3.displayName = "ShellBar";

// node_modules/@ui5/webcomponents-fiori/dist/ShellBarItem.js
var __decorate83 = function(decorators, target, key, desc) {
  var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
  if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
  else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
  return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var ShellBarItem = class ShellBarItem2 extends UI5Element_default {
  get stableDomRef() {
    return this.getAttribute("stable-dom-ref") || `${this._id}-stable-dom-ref`;
  }
  fireClickEvent(e) {
    return this.fireDecoratorEvent("click", {
      targetRef: e.target
    });
  }
};
__decorate83([
  property_default()
], ShellBarItem.prototype, "icon", void 0);
__decorate83([
  property_default()
], ShellBarItem.prototype, "text", void 0);
__decorate83([
  property_default()
], ShellBarItem.prototype, "count", void 0);
ShellBarItem = __decorate83([
  customElement_default("ui5-shellbar-item"),
  event_strict_default("click", {
    bubbles: true,
    cancelable: true
  })
], ShellBarItem);
ShellBarItem.define();

// node_modules/@ui5/webcomponents-react/dist/webComponents/ShellBarItem/index.js
var ShellBarItem3 = withWebComponent("ui5-shellbar-item", ["count", "icon", "text"], [], [], ["click"]);
ShellBarItem3.displayName = "ShellBarItem";

// node_modules/@ui5/webcomponents-fiori/dist/ShellBarSpacer.js
var __decorate84 = function(decorators, target, key, desc) {
  var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
  if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
  else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
  return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var ShellBarSpacer = class ShellBarSpacer2 extends UI5Element_default {
  constructor() {
    super(...arguments);
    this.visible = false;
  }
};
__decorate84([
  property_default({ type: Boolean })
], ShellBarSpacer.prototype, "visible", void 0);
ShellBarSpacer = __decorate84([
  customElement_default({
    tag: "ui5-shellbar-spacer"
  })
], ShellBarSpacer);
ShellBarSpacer.define();

// node_modules/@ui5/webcomponents-react/dist/webComponents/ShellBarSpacer/index.js
var ShellBarSpacer3 = withWebComponent("ui5-shellbar-spacer", [], [], [], []);
ShellBarSpacer3.displayName = "ShellBarSpacer";

// node_modules/@ui5/webcomponents-fiori/dist/SideNavigationItemBase.js
var __decorate85 = function(decorators, target, key, desc) {
  var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
  if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
  else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
  return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var SideNavigationItemBase = class extends UI5Element_default {
  constructor() {
    super(...arguments);
    this.disabled = false;
    this.forcedTabIndex = "-1";
    this.sideNavCollapsed = false;
    this.inPopover = false;
  }
  onEnterDOM() {
    if (isDesktop()) {
      this.setAttribute("desktop", "");
    }
  }
  get _tooltip() {
    return this.tooltip || void 0;
  }
  get classesArray() {
    const classes = [];
    if (this.disabled) {
      classes.push("ui5-sn-item-disabled");
    }
    return classes;
  }
  get _classes() {
    return this.classesArray.join(" ");
  }
  get effectiveTabIndex() {
    if (this.disabled) {
      return void 0;
    }
    return this.forcedTabIndex;
  }
  get sideNavigation() {
    return this._sideNavigation;
  }
  set sideNavigation(sideNavigation) {
    this._sideNavigation = sideNavigation;
  }
  get isFixedItem() {
    let element = this;
    let parentElement = element.parentElement;
    while (parentElement) {
      if (parentElement.hasAttribute("ui5-side-navigation")) {
        break;
      }
      element = parentElement;
      parentElement = element.parentElement;
    }
    return (element == null ? void 0 : element.slot) === "fixedItems";
  }
  get isSideNavigationItemBase() {
    return true;
  }
  /**
   * @private
   */
  applyInitialFocusInPopover() {
  }
};
__decorate85([
  property_default()
], SideNavigationItemBase.prototype, "text", void 0);
__decorate85([
  property_default({ type: Boolean })
], SideNavigationItemBase.prototype, "disabled", void 0);
__decorate85([
  property_default()
], SideNavigationItemBase.prototype, "tooltip", void 0);
__decorate85([
  property_default({ noAttribute: true })
], SideNavigationItemBase.prototype, "forcedTabIndex", void 0);
__decorate85([
  property_default({ type: Boolean })
], SideNavigationItemBase.prototype, "sideNavCollapsed", void 0);
__decorate85([
  property_default({ type: Boolean })
], SideNavigationItemBase.prototype, "inPopover", void 0);
var isInstanceOfSideNavigationItemBase = (object) => {
  return "isSideNavigationItemBase" in object;
};
var SideNavigationItemBase_default = SideNavigationItemBase;

// node_modules/@ui5/webcomponents-fiori/dist/SideNavigationSelectableItemBase.js
var __decorate86 = function(decorators, target, key, desc) {
  var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
  if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
  else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
  return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var SideNavigationSelectableItemBase = class SideNavigationSelectableItemBase2 extends SideNavigationItemBase_default {
  constructor() {
    super(...arguments);
    this.selected = false;
    this.design = "Default";
    this.unselectable = false;
    this.accessibilityAttributes = {};
    this.isOverflow = false;
  }
  get ariaRole() {
    if (this.sideNavCollapsed) {
      return this.isOverflow || this.unselectable ? "menuitem" : "menuitemradio";
    }
    return "treeitem";
  }
  get isSelectable() {
    return !this.unselectable && !this.disabled;
  }
  get _href() {
    return !this.disabled && this.href ? this.href : void 0;
  }
  get _target() {
    return !this.disabled && this.target ? this.target : void 0;
  }
  get isExternalLink() {
    return this.href && this.target === "_blank";
  }
  get _selected() {
    return this.selected;
  }
  get classesArray() {
    const classes = [];
    if (this.disabled) {
      classes.push("ui5-sn-item-disabled");
    }
    if (this._selected) {
      classes.push("ui5-sn-item-selected");
    }
    return classes;
  }
  get _classes() {
    return this.classesArray.join(" ");
  }
  get _ariaCurrent() {
    if (!this.selected) {
      return void 0;
    }
    return "page";
  }
  _onkeydown(e) {
    if (isSpace(e)) {
      e.preventDefault();
    }
    if (isEnter(e)) {
      this._activate(e);
    }
  }
  _onkeyup(e) {
    if (isSpace(e)) {
      this._activate(e);
      if (this.href && !e.defaultPrevented) {
        const customEvent = new MouseEvent("click");
        customEvent.stopImmediatePropagation();
        if (this.getDomRef().querySelector("a")) {
          this.getDomRef().querySelector("a").dispatchEvent(customEvent);
        } else {
          this.getDomRef().dispatchEvent(customEvent);
        }
      }
    }
  }
  _onclick(e) {
    this._activate(e);
  }
  _onfocusin(e) {
    var _a;
    e.stopPropagation();
    (_a = this.sideNavigation) == null ? void 0 : _a.focusItem(this);
  }
  _activate(e) {
    var _a;
    e.stopPropagation();
    if (this.isOverflow) {
      this.fireDecoratorEvent("click");
    } else {
      (_a = this.sideNavigation) == null ? void 0 : _a._handleItemClick(e, this);
    }
  }
  get isSideNavigationSelectableItemBase() {
    return true;
  }
};
__decorate86([
  property_default()
], SideNavigationSelectableItemBase.prototype, "icon", void 0);
__decorate86([
  property_default({ type: Boolean })
], SideNavigationSelectableItemBase.prototype, "selected", void 0);
__decorate86([
  property_default()
], SideNavigationSelectableItemBase.prototype, "href", void 0);
__decorate86([
  property_default()
], SideNavigationSelectableItemBase.prototype, "target", void 0);
__decorate86([
  property_default()
], SideNavigationSelectableItemBase.prototype, "design", void 0);
__decorate86([
  property_default({ type: Boolean })
], SideNavigationSelectableItemBase.prototype, "unselectable", void 0);
__decorate86([
  property_default({ type: Object })
], SideNavigationSelectableItemBase.prototype, "accessibilityAttributes", void 0);
__decorate86([
  property_default({ type: Boolean })
], SideNavigationSelectableItemBase.prototype, "isOverflow", void 0);
SideNavigationSelectableItemBase = __decorate86([
  event_strict_default("click", {
    bubbles: true
  }),
  customElement_default()
], SideNavigationSelectableItemBase);
var isInstanceOfSideNavigationSelectableItemBase = (object) => {
  return "isSideNavigationSelectableItemBase" in object;
};
var SideNavigationSelectableItemBase_default = SideNavigationSelectableItemBase;

// node_modules/@ui5/webcomponents-icons/dist/v4/arrow-right.js
var name50 = "arrow-right";
var pathData49 = "M503 234q9 9 9 22.5t-9 22.5L344 439q-10 10-23 10t-23-10q-9-9-9-22.5t9-22.5l106-106H32q-13 0-22.5-9T0 256q0-13 9.5-22.5T32 224h372L299 119q-10-10-10-23t10-22q9-10 22-10t22 10z";
var ltr49 = false;
var collection50 = "SAP-icons-v4";
var packageName49 = "@ui5/webcomponents-icons";
registerIcon(name50, { pathData: pathData49, ltr: ltr49, collection: collection50, packageName: packageName49 });

// node_modules/@ui5/webcomponents-icons/dist/v5/arrow-right.js
var name51 = "arrow-right";
var pathData50 = "M331 409q-7 7-17 7-11 0-18.5-7.5T288 390q0-10 8-18l95-90H58q-11 0-18.5-7.5T32 256t7.5-18.5T58 230h333l-95-90q-8-8-8-18 0-11 7.5-18.5T314 96q10 0 17 7l141 134q8 8 8 19 0 12-8 18z";
var ltr50 = false;
var collection51 = "SAP-icons-v5";
var packageName50 = "@ui5/webcomponents-icons";
registerIcon(name51, { pathData: pathData50, ltr: ltr50, collection: collection51, packageName: packageName50 });

// node_modules/@ui5/webcomponents-icons/dist/arrow-right.js
var arrow_right_default = "arrow-right";

// node_modules/@ui5/webcomponents-fiori/dist/SideNavigationItemTemplate.js
function SideNavigationItemTemplate() {
  if (this.sideNavCollapsed) {
    return MenuItemTemplate2.call(this);
  }
  return TreeItemTemplate.call(this);
}
function MenuItemTemplate2() {
  return jsx(Fragment, { children: this._href ? jsxs("a", { id: this._id, class: `ui5-sn-item ui5-sn-item-level1 ${this._classes}`, role: this.ariaRole, "data-sap-focus-ref": true, onKeyDown: this._onkeydown, onKeyUp: this._onkeyup, onClick: this._onclick, onFocusIn: this._onfocusin, onFocusOut: this._onfocusout, onMouseEnter: this._onmouseenter, onMouseLeave: this._onmouseleave, tabIndex: this.effectiveTabIndex !== void 0 ? parseInt(this.effectiveTabIndex) : void 0, "aria-haspopup": this._ariaHasPopup, "aria-checked": this._ariaChecked, title: this._tooltip, href: this._href, target: this._target, children: [jsx(Icon_default, { class: "ui5-sn-item-icon", name: this.icon }), jsx("div", { class: "ui5-sn-item-text", children: this.text }), !!this.items.length && jsx(Icon_default, { class: "ui5-sn-item-toggle-icon", name: navigation_right_arrow_default }), this.isExternalLink && jsx(Icon_default, { class: "ui5-sn-item-external-link-icon", name: arrow_right_default })] }) : jsxs("div", { id: this._id, class: `ui5-sn-item ui5-sn-item-level1 ${this._classes}`, role: this.ariaRole, "data-sap-focus-ref": true, onKeyDown: this._onkeydown, onKeyUp: this._onkeyup, onClick: this._onclick, onFocusIn: this._onfocusin, onFocusOut: this._onfocusout, onMouseEnter: this._onmouseenter, onMouseLeave: this._onmouseleave, tabIndex: this.effectiveTabIndex !== void 0 ? parseInt(this.effectiveTabIndex) : void 0, "aria-haspopup": this._ariaHasPopup, "aria-checked": this._ariaChecked, title: this._tooltip, children: [jsx(Icon_default, { class: "ui5-sn-item-icon", name: this.icon }), jsx("div", { class: "ui5-sn-item-text", children: this.text }), !!this.items.length && jsx(Icon_default, { class: "ui5-sn-item-toggle-icon", name: navigation_right_arrow_default }), this.isExternalLink && jsx(Icon_default, { class: "ui5-sn-item-external-link-icon", name: arrow_right_default })] }) });
}
function TreeItemTemplate() {
  var _a;
  return jsxs("li", { id: this._id, class: "ui5-sn-list-li", role: "none", children: [this._href ? jsxs("a", { class: `ui5-sn-item ui5-sn-item-level1 ${this._classes}`, role: this.ariaRole, "data-sap-focus-ref": true, onKeyDown: this._onkeydown, onKeyUp: this._onkeyup, onClick: this._onclick, onFocusIn: this._onfocusin, tabIndex: this.effectiveTabIndex !== void 0 ? parseInt(this.effectiveTabIndex) : void 0, "aria-expanded": this._expanded, "aria-current": this._ariaCurrent, "aria-selected": this.selected, title: this._tooltip, "aria-owns": this._groupId, href: this._href, target: this._target, children: [this.icon && jsx(Icon_default, { class: "ui5-sn-item-icon", name: this.icon }), jsx("div", { class: "ui5-sn-item-text", children: this.text }), this.isExternalLink && jsx(Icon_default, { class: "ui5-sn-item-external-link-icon", name: arrow_right_default }), !!this.items.length && jsx(Icon_default, { class: "ui5-sn-item-toggle-icon", name: this.expanded ? navigation_down_arrow_default : navigation_right_arrow_default, onClick: this._onToggleClick })] }) : jsxs("div", { class: `ui5-sn-item ui5-sn-item-level1 ${this._classes}`, role: this.ariaRole, "data-sap-focus-ref": true, onKeyDown: this._onkeydown, onKeyUp: this._onkeyup, onClick: this._onclick, onFocusIn: this._onfocusin, tabIndex: this.effectiveTabIndex !== void 0 ? parseInt(this.effectiveTabIndex) : void 0, "aria-expanded": this._expanded, "aria-current": this._ariaCurrent, "aria-selected": this.selected, "aria-haspopup": (_a = this.accessibilityAttributes) == null ? void 0 : _a.hasPopup, title: this._tooltip, "aria-owns": this._groupId, children: [this.icon && jsx(Icon_default, { class: "ui5-sn-item-icon", name: this.icon }), jsx("div", { class: "ui5-sn-item-text", children: this.text }), this.isExternalLink && jsx(Icon_default, { class: "ui5-sn-item-external-link-icon", name: arrow_right_default }), !!this.items.length && jsx(Icon_default, { class: "ui5-sn-item-toggle-icon", name: this.expanded ? navigation_down_arrow_default : navigation_right_arrow_default, onClick: this._onToggleClick })] }), !!this.items.length && jsx("ul", { id: this._groupId, class: "ui5-sn-item-ul", role: "group", children: jsx("slot", {}) })] });
}

// node_modules/@ui5/webcomponents-fiori/dist/generated/themes/SideNavigationItem.css.js
registerThemePropertiesLoader("@ui5/webcomponents-theming", "sap_horizon", async () => parameters_bundle_css_default);
registerThemePropertiesLoader("@ui5/webcomponents-fiori", "sap_horizon", async () => parameters_bundle_css_default3);
var SideNavigationItem_css_default = `.ui5-sn-item-ul{margin:0;padding:0;list-style:none}.ui5-sn-item{display:flex;align-items:center;width:auto;box-sizing:border-box;text-decoration:none;position:relative;height:var(--_ui5-v2-8-0_side_navigation_item_height);min-height:var(--_ui5-v2-8-0_side_navigation_item_height);cursor:pointer;color:inherit;background-color:var(--sapList_Background);border-radius:var(--_ui5-v2-8-0_side_navigation_item_border_radius);transition:var(--_ui5-v2-8-0_side_navigation_item_transition);margin-block-end:var(--_ui5-v2-8-0_side_navigation_item_bottom_margin)}:host(.ui5-sn-item-hidden[side-nav-collapsed]),:host([side-nav-collapsed]) .ui5-sn-item-hidden{display:none}:host([design="Action"]){color:var(--sapButton_TextColor)}:host([design="Action"]) .ui5-sn-item:not(.ui5-sn-item-disabled):active [ui5-icon],:host([design="Action"]) .ui5-sn-item:not(.ui5-sn-item-disabled):active .ui5-sn-item-text{color:var(--_ui5-v2-8-0_side_navigation_active_text_color)}:host([design="Action"]) .ui5-sn-item{border:var(--sapButton_BorderWidth) solid var(--sapButton_BorderColor);box-sizing:content-box}:host([design="Action"]:not([side-nav-collapsed])) .ui5-sn-item{max-width:-moz-available;max-width:-webkit-fill-available;max-width:fill-available}:host([design="Action"]) .ui5-sn-item:not(.ui5-sn-item-disabled):hover{border:var(--_ui5-v2-8-0_side_navigation_action_item_border_hover);background:var(--sapButton_Hover_Background)}:host([design="Action"]) .ui5-sn-item:not(.ui5-sn-item-disabled):active{border:var(--_ui5-v2-8-0_side_navigation_action_item_border_active);background:var(--sapButton_Active_Background)}.ui5-sn-item:focus{outline:none}:host([desktop]) .ui5-sn-item:focus:after,.ui5-sn-item:focus-visible:after{border:var(--sapContent_FocusWidth) var(--sapContent_FocusStyle) var(--sapContent_FocusColor);position:absolute;content:"";inset:var(--_ui5-v2-8-0_side_navigation_item_focus_border_offset);z-index:2;pointer-events:none;border-radius:var(--_ui5-v2-8-0_side_navigation_item_focus_border_radius)}.ui5-sn-item:not(.ui5-sn-item-disabled).ui5-sn-item-selected:focus:before{border:var(--_ui5-v2-8-0_side_navigation_selected_and_focused_border_style_color)}.ui5-sn-item.ui5-sn-item-group:before,.ui5-sn-item.ui5-sn-item-level1:before{border:var(--_ui5-v2-8-0_side_navigation_group_border_style_color);border-width:var(--_ui5-v2-8-0_side_navigation_group_border_width)}.ui5-sn-item-group[aria-expanded=true]:before,.ui5-sn-item-level1[aria-expanded=true]:before{border-width:var(--_ui5-v2-8-0_side_navigation_group_expanded_border_width)}.ui5-sn-item:before{content:"";position:absolute;inset:0;pointer-events:none}.ui5-sn-item.ui5-sn-item-disabled{opacity:var(--sapContent_DisabledOpacity);cursor:default}:host([ui5-side-navigation-item][in-popover][unselectable]) .ui5-sn-item{cursor:unset}:host(:not([ui5-side-navigation-item][in-popover][unselectable])) .ui5-sn-item:not(.ui5-sn-item-disabled):hover{background:var(--sapList_Hover_Background)}.ui5-sn-item:not(.ui5-sn-item-disabled).ui5-sn-item-selected{background:var(--_ui5-v2-8-0_side_navigation_collapsed_selected_item_background)}.ui5-sn-item:not(.ui5-sn-item-disabled):active .ui5-sn-item-text,.ui5-sn-item:not(.ui5-sn-item-disabled).ui5-sn-item-active .ui5-sn-item-text{color:var(--sapList_Active_TextColor)}.ui5-sn-item:not(.ui5-sn-item-disabled):active [ui5-icon],.ui5-sn-item:not(.ui5-sn-item-disabled).ui5-sn-item-active [ui5-icon]{color:var(--sapList_Active_TextColor)}.ui5-sn-item:not(.ui5-sn-item-disabled).ui5-sn-item-selected:hover{background:var(--_ui5-v2-8-0_side_navigation_collapsed_selected_item_background_hover)}.ui5-sn-item:not(.ui5-sn-item-disabled).ui5-sn-item-selected:active,.ui5-sn-item:not(.ui5-sn-item-disabled).ui5-sn-item-selected.ui5-sn-item-active,:host(:not([ui5-side-navigation-item][in-popover][unselectable])) .ui5-sn-item:not(.ui5-sn-item-disabled):active,.ui5-sn-item:not(.ui5-sn-item-disabled).ui5-sn-item-active,:host([side-nav-collapsed]) .ui5-sn-item:not(.ui5-sn-item-disabled).ui5-sn-item-selected:active,:host([side-nav-collapsed]) .ui5-sn-item:not(.ui5-sn-item-disabled).ui5-sn-item-selected.ui5-sn-item-active{background:var(--sapList_Active_Background)}.ui5-sn-item:before{border:var(--_ui5-v2-8-0_side_navigation_item_border_style_color);border-width:var(--_ui5-v2-8-0_side_navigation_item_border_width)}:host([side-nav-collapsed]) .ui5-sn-item:before{border-width:var(--_ui5-v2-8-0_side_navigation_item_border_width)}.ui5-sn-item:not(.ui5-sn-item-disabled).ui5-sn-item-selected:before{border:var(--_ui5-v2-8-0_side_navigation_selected_border_style_color);border-width:var(--_ui5-v2-8-0_side_navigation_selected_border_width)}:host(:not([design="Action"])) .ui5-sn-item:not(.ui5-sn-item-disabled):not(.ui5-sn-item-selected):hover:before{border:var(--_ui5-v2-8-0_side_navigation_hover_border_style_color);border-width:var(--_ui5-v2-8-0_side_navigation_hover_border_width)}:host([side-nav-collapsed]) .ui5-sn-item:not(.ui5-sn-item-disabled).ui5-sn-item-selected:before{border-radius:var(--_ui5-v2-8-0_side_navigation_item_border_radius)}:host([in-popover]:last-of-type) .ui5-sn-item:not(:hover):not(:active):before{border:var(--_ui5-v2-8-0_side_navigation_last_item_border_style)}.ui5-sn-item-icon{color:var(--_ui5-v2-8-0_side_navigation_icon_color);padding-inline-start:1rem;padding-inline-end:var(--_ui5-v2-8-0_side_navigation_icon_padding_inline_end)}:host([design="Action"]) .ui5-sn-item-icon{color:var(--sapButton_TextColor)}.ui5-sn-item-toggle-icon,.ui5-sn-item-external-link-icon{color:var(--_ui5-v2-8-0_side_navigation_expand_icon_color);min-width:2rem;height:.875rem}:host([design="Action"]) .ui5-sn-item-toggle-icon,:host([design="Action"]) .ui5-sn-item-external-link-icon{color:var(--sapButton_TextColor)}.ui5-sn-item-external-link-icon{min-width:3rem}:host([side-nav-collapsed]) .ui5-sn-item:not(.ui5-sn-item-active):not(.ui5-sn-item-no-hover-effect):hover .ui5-sn-item-toggle-icon,:host([side-nav-collapsed]) .ui5-sn-item:not(.ui5-sn-item-active):not(.ui5-sn-item-no-hover-effect):focus .ui5-sn-item-toggle-icon,:host(:not([side-nav-collapsed])) .ui5-sn-item-toggle-icon{min-width:var(--_ui5-v2-8-0_side_navigation_expand_icon_width);padding-inline:.25rem .375rem;padding-block:.25rem;border-inline-start:.0625rem solid var(--sapTextColor);margin-inline-start:1rem}:host([unselectable]:not([side-nav-collapsed])) .ui5-sn-item-toggle-icon,:host(:not([side-nav-collapsed])) .ui5-sn-item-group .ui5-sn-item-toggle-icon,:host([unselectable][side-nav-collapsed]) .ui5-sn-item:not(.ui5-sn-item-active):not(.ui5-sn-item-no-hover-effect):hover .ui5-sn-item-toggle-icon,:host([unselectable][side-nav-collapsed]) .ui5-sn-item:not(.ui5-sn-item-active):not(.ui5-sn-item-no-hover-effect):focus .ui5-sn-item-toggle-icon{border-inline-start:none}:host([in-popover]) .ui5-sn-item-toggle-icon{display:none}:host([side-nav-collapsed]) .ui5-sn-item{justify-content:center}:host([slot="fixedItems"]:not(side-nav-collapsed)) .ui5-sn-item.ui5-sn-item-level1{margin-top:var(--_ui5-v2-8-0_side_navigation_first_fixed_item_margin_top)}:host([side-nav-collapsed]) .ui5-sn-item-icon{padding-inline-end:1rem}:host([design="Action"][side-nav-collapsed]) .ui5-sn-item-icon{padding-inline-end:calc(1rem - 1px);padding-inline-start:calc(1rem - 1px)}:host([side-nav-collapsed]) .ui5-sn-item-text{display:none}:host([side-nav-collapsed]) .ui5-sn-item-toggle-icon{display:var(--_ui5-v2-8-0_side_navigation_item_expand_icon_visibility);font-size:.75rem;position:absolute;inset-inline-end:var(--_ui5-v2-8-0_side_navigation_item_expand_icon_right)}:host([side-nav-collapsed]) .ui5-sn-item-external-link-icon{display:none}:host([side-nav-collapsed]) .ui5-sn-item:not(.ui5-sn-item-active):not(.ui5-sn-item-no-hover-effect):hover,:host([side-nav-collapsed]) .ui5-sn-item:not(.ui5-sn-item-active):not(.ui5-sn-item-no-hover-effect):focus{width:var(--_ui5-v2-8-0_side_navigation_item_collapsed_hover_focus_width);box-shadow:var(--_ui5-v2-8-0_side_navigation_box_shadow);z-index:1;padding-inline-end:var(--_ui5-v2-8-0_side_navigation_item_collapsed_padding_right)}:host([side-nav-collapsed]) a.ui5-sn-item:not(.ui5-sn-item-active):not(.ui5-sn-item-no-hover-effect):hover:not(.ui5-sn-item-with-expander),:host([side-nav-collapsed]) a.ui5-sn-item:not(.ui5-sn-item-active):not(.ui5-sn-item-no-hover-effect):focus:not(.ui5-sn-item-with-expander){padding-inline-end:0}:host([unselectable][side-nav-collapsed]) .ui5-sn-item.ui5-sn-item.ui5-sn-item-with-expander:not(.ui5-sn-item-active):not(.ui5-sn-item-no-hover-effect):hover,:host([unselectable][side-nav-collapsed]) .ui5-sn-item.ui5-sn-item.ui5-sn-item-with-expander:not(.ui5-sn-item-active):not(.ui5-sn-item-no-hover-effect):focus{padding-inline-end:var(--_ui5-v2-8-0_side_navigation_item_collapsed_unselectable_padding)}:host([unselectable][side-nav-collapsed]) div.ui5-sn-item:not(.ui5-sn-item-active):not(.ui5-sn-item-no-hover-effect):not(.ui5-sn-item-with-expander):hover,:host([unselectable][side-nav-collapsed]) div.ui5-sn-item:not(.ui5-sn-item-active):not(.ui5-sn-item-no-hover-effect):not(.ui5-sn-item-with-expander):focus{padding-inline-end:var(--_ui5-v2-8-0_side_navigation_action_item_collapsed_padding)}:host([side-nav-collapsed]) .ui5-sn-item.ui5-sn-item-selected:hover,:host([side-nav-collapsed]) .ui5-sn-item.ui5-sn-item-selected:focus{background:var(--sapList_SelectionBackgroundColor)}:host([side-nav-collapsed]) div.ui5-sn-item:not(.ui5-sn-item-active):not(.ui5-sn-item-no-hover-effect):hover:not(.ui5-sn-item-with-expander),:host([side-nav-collapsed]) div.ui5-sn-item:not(.ui5-sn-item-active):not(.ui5-sn-item-no-hover-effect):focus:not(.ui5-sn-item-with-expander),:host([side-nav-collapsed]) a.ui5-sn-item:not(.ui5-sn-item-active):not(.ui5-sn-item-no-hover-effect):hover:not(.ui5-sn-item-with-expander):not([target=_blank]),:host([side-nav-collapsed]) a.ui5-sn-item:not(.ui5-sn-item-active):not(.ui5-sn-item-no-hover-effect):focus:not(.ui5-sn-item-with-expander):not([target=_blank]){padding-inline-end:var(--_ui5-v2-8-0_side_navigation_item_collapsed_hover_focus_padding_right)}:host([side-nav-collapsed]) .ui5-sn-item:not(.ui5-sn-item-active):not(.ui5-sn-item-no-hover-effect):hover .ui5-sn-item-text,:host([side-nav-collapsed]) .ui5-sn-item:not(.ui5-sn-item-active):not(.ui5-sn-item-no-hover-effect):focus .ui5-sn-item-text,:host([side-nav-collapsed]) .ui5-sn-item:not(.ui5-sn-item-active):not(.ui5-sn-item-no-hover-effect):hover .ui5-sn-item-toggle-icon,:host([side-nav-collapsed]) .ui5-sn-item:not(.ui5-sn-item-active):not(.ui5-sn-item-no-hover-effect):hover .ui5-sn-item-external-link-icon,:host([side-nav-collapsed]) .ui5-sn-item:not(.ui5-sn-item-active):not(.ui5-sn-item-no-hover-effect):focus .ui5-sn-item-toggle-icon,:host([side-nav-collapsed]) .ui5-sn-item:not(.ui5-sn-item-active):not(.ui5-sn-item-no-hover-effect):focus .ui5-sn-item-external-link-icon{display:var(--_ui5-v2-8-0_side_navigation_item_collapsed_hover_focus_display)}:host([side-nav-collapsed]) .ui5-sn-item:not(.ui5-sn-item-active):not(.ui5-sn-item-no-hover-effect):hover .ui5-sn-item-toggle-icon,:host([side-nav-collapsed]) .ui5-sn-item:not(.ui5-sn-item-active):not(.ui5-sn-item-no-hover-effect):focus .ui5-sn-item-toggle-icon{left:var(--_ui5-v2-8-0_side_navigation_item_expand_icon_hover_left);right:var(--_ui5-v2-8-0_side_navigation_item_expand_icon_hover_right)}.ui5-sn-item[aria-expanded=false]~.ui5-sn-item-ul{display:none}.ui5-sn-item-text{flex:1;min-width:0;overflow:hidden;text-overflow:ellipsis;white-space:nowrap}.ui5-sn-item-with-expander .ui5-sn-item-icon:after{display:var(--_ui5-v2-8-0_side_navigation_triangle_display);content:"";width:0;height:0;border-left:.375rem solid transparent;border-bottom:.375rem solid var(--_ui5-v2-8-0_side_navigation_triangle_color);position:absolute;right:.1875rem;bottom:.125rem}.ui5-sn-item-separator{min-height:.625rem}:host{color:var(--sapList_TextColor);font-family:"72override",var(--sapFontFamily);font-size:var(--sapFontSize);font-weight:var(--_ui5-v2-8-0_side_navigation_group_text_weight)}.ui5-sn-item-level1:not(:has(>.ui5-sn-item-icon)),.ui5-sn-item-level1.ui5-sn-item-selected:not(:has(>.ui5-sn-item-icon)){padding-inline-start:var(--_ui5-v2-8-0_side_navigation_item_padding_left)}:host([in-popover]) .ui5-sn-item-level1{margin-bottom:var(--_ui5-v2-8-0_side_navigation_group_bottom_margin_in_popup)}:host([in-popover]) .ui5-sn-item-level1 .ui5-sn-item-text{margin:0 1rem 0 0;font-size:var(--_ui5-v2-8-0_side_navigation_popup_title_text_size);line-height:var(--_ui5-v2-8-0_side_navigation_popup_title_line_height)}.ui5-sn-item.ui5-sn-item-level1.ui5-sn-item-overflow{margin-top:auto}
`;

// node_modules/@ui5/webcomponents-fiori/dist/SideNavigationItem.js
var __decorate87 = function(decorators, target, key, desc) {
  var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
  if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
  else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
  return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var SideNavigationItem = class SideNavigationItem2 extends SideNavigationSelectableItemBase_default {
  constructor() {
    super(...arguments);
    this.expanded = false;
    this._fixed = false;
  }
  get overflowItems() {
    return [this];
  }
  get selectableItems() {
    if (this.inPopover && this.unselectable && this.items.length) {
      return [...this.items];
    }
    return [this, ...this.items];
  }
  get focusableItems() {
    if (this.sideNavCollapsed) {
      return [this];
    }
    if (this.inPopover && this.unselectable && this.items.length) {
      return [...this.items];
    }
    if (this.expanded) {
      return [this, ...this.items];
    }
    return [this];
  }
  get allItems() {
    return [this, ...this.items];
  }
  get effectiveTabIndex() {
    if (this.inPopover && this.unselectable) {
      return void 0;
    }
    return super.effectiveTabIndex;
  }
  get _ariaHasPopup() {
    var _a;
    if (this.inPopover && ((_a = this.accessibilityAttributes) == null ? void 0 : _a.hasPopup)) {
      return this.accessibilityAttributes.hasPopup;
    }
    if (!this.disabled && this.sideNavCollapsed && this.items.length) {
      return "tree";
    }
    return void 0;
  }
  get _ariaChecked() {
    if (this.isOverflow || this.unselectable) {
      return void 0;
    }
    return this.selected;
  }
  get _groupId() {
    if (!this.items.length) {
      return void 0;
    }
    return `${this._id}-group`;
  }
  get _expanded() {
    if (!this.items.length) {
      return void 0;
    }
    return this.expanded;
  }
  get classesArray() {
    var _a;
    const classes = super.classesArray;
    if (!this.disabled && ((_a = this.sideNavigation) == null ? void 0 : _a.collapsed) && this.items.length) {
      classes.push("ui5-sn-item-with-expander");
    }
    if (this._fixed) {
      classes.push("ui5-sn-item-fixed");
    }
    return classes;
  }
  get _selected() {
    if (this.sideNavCollapsed) {
      return this.selected || this.items.some((item2) => item2.selected);
    }
    return this.selected;
  }
  applyInitialFocusInPopover() {
    var _a;
    if (this.unselectable && this.items.length) {
      (_a = this.items[0]) == null ? void 0 : _a.focus();
    } else {
      this.focus();
    }
  }
  _onToggleClick(e) {
    e.stopPropagation();
    this._toggle();
  }
  _onkeydown(e) {
    if (isLeft(e)) {
      this.expanded = false;
      return;
    }
    if (isRight(e)) {
      this.expanded = true;
      return;
    }
    if (this.unselectable && isSpace(e)) {
      this._toggle();
      return;
    }
    if (this.unselectable && isEnter(e)) {
      this._toggle();
    }
    super._onkeydown(e);
  }
  _onkeyup(e) {
    super._onkeyup(e);
  }
  _onfocusin(e) {
    var _a;
    if (this.inPopover && this.unselectable && this.items.length) {
      (_a = this.sideNavigation) == null ? void 0 : _a.focusItem(this.items[0]);
    } else {
      super._onfocusin(e);
    }
  }
  _onclick(e) {
    if (!this.inPopover && this.unselectable) {
      this._toggle();
    }
    super._onclick(e);
  }
  _onfocusout() {
    if (!this.sideNavCollapsed) {
      return;
    }
    this.getDomRef().classList.remove("ui5-sn-item-no-hover-effect");
  }
  _onmouseenter() {
    if (!this.sideNavCollapsed) {
      return;
    }
    this.getDomRef().classList.remove("ui5-sn-item-no-hover-effect");
  }
  _onmouseleave() {
    if (!this.sideNavCollapsed || !this._selected) {
      return;
    }
    this.getDomRef().classList.add("ui5-sn-item-no-hover-effect");
  }
  get isSideNavigationItem() {
    return true;
  }
  _toggle() {
    if (this.items.length) {
      this.expanded = !this.expanded;
    }
  }
};
__decorate87([
  property_default({ type: Boolean })
], SideNavigationItem.prototype, "expanded", void 0);
__decorate87([
  property_default({ type: Boolean })
], SideNavigationItem.prototype, "_fixed", void 0);
__decorate87([
  slot_default({ type: HTMLElement, invalidateOnChildChange: true, "default": true })
], SideNavigationItem.prototype, "items", void 0);
SideNavigationItem = __decorate87([
  customElement_default({
    tag: "ui5-side-navigation-item",
    renderer: JsxRenderer_default,
    template: SideNavigationItemTemplate,
    styles: SideNavigationItem_css_default
  })
], SideNavigationItem);
SideNavigationItem.define();
var isInstanceOfSideNavigationItem = (object) => {
  return "isSideNavigationItem" in object;
};
var SideNavigationItem_default = SideNavigationItem;

// node_modules/@ui5/webcomponents-fiori/dist/NavigationMenuTemplate.js
function NavigationMenuTemplate() {
  return jsxs(ResponsivePopover_default, { id: `${this._id}-navigation-menu-rp`, class: "ui5-menu-rp ui5-navigation-menu", verticalAlign: "Center", opener: this.opener, open: this.open, preventInitialFocus: true, preventFocusRestore: true, accessibleNameRef: `${this._id}-navigationMenuPopoverText`, onBeforeOpen: this._beforePopoverOpen, onOpen: this._afterPopoverOpen, onBeforeClose: this._beforePopoverClose, onClose: this._afterPopoverClose, hideArrow: true, children: [jsx("span", { id: `${this._id}-navigationMenuPopoverText`, class: "ui5-hidden-text", children: this.accSideNavigationPopoverHiddenText }), this.isPhone && jsxs("div", { slot: "header", class: "ui5-menu-dialog-header", children: [jsx("div", { class: "ui5-menu-dialog-title", children: jsx("div", { children: this.headerText }) }), jsx(Button_default, { icon: decline_default, design: "Transparent", "aria-label": this.labelClose, onClick: this._close })] }), jsx("div", { id: `${this._id}-menu-main`, class: "ui5-navigation-menu-main", children: this.items.length > 0 ? jsx(List_default, { id: `${this._id}-menu-list`, accessibleRole: "Tree", selectionMode: "None", loading: this.loading, loadingDelay: this.loadingDelay, separators: "None", onItemClick: this._itemClick, onKeyDown: this._itemKeyDown, "onui5-close-menu": this._close, children: jsx("slot", {}) }) : this.loading && jsx(BusyIndicator_default, { id: `${this._id}-menu-busy-indicator`, active: true, delay: this.loadingDelay, class: "ui5-menu-busy-indicator" }) })] });
}

// node_modules/@ui5/webcomponents-fiori/dist/generated/themes/NavigationMenu.css.js
registerThemePropertiesLoader("@ui5/webcomponents-theming", "sap_horizon", async () => parameters_bundle_css_default);
registerThemePropertiesLoader("@ui5/webcomponents-fiori", "sap_horizon", async () => parameters_bundle_css_default3);
var NavigationMenu_css_default = `.ui5-hidden-text{position:absolute;clip:rect(1px,1px,1px,1px);user-select:none;left:-1000px;top:-1000px;pointer-events:none;font-size:0}.ui5-navigation-menu .ui5-navigation-menu-main{padding:var(--_ui5-v2-8-0_side_navigation_parent_popup_padding)}.ui5-menu-rp.ui5-navigation-menu{box-shadow:var(--_ui5-v2-8-0_side_navigation_popup_box_shadow);min-width:10rem;background:var(--sapGroup_ContentBackground);border:none;border-radius:.75rem}.ui5-navigation-menu.ui5-menu-rp-sub-menu ::slotted([ui5-navigation-menu-item]){font-weight:400}
`;

// node_modules/@ui5/webcomponents-fiori/dist/NavigationMenu.js
var __decorate88 = function(decorators, target, key, desc) {
  var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
  if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
  else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
  return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var NavigationMenu_1;
var NavigationMenu = NavigationMenu_1 = class NavigationMenu2 extends Menu_default {
  _itemMouseOver(e) {
    if (isDesktop()) {
      const item2 = e.target;
      this._startOpenTimeout(item2);
    }
  }
  get accSideNavigationPopoverHiddenText() {
    return NavigationMenu_1.i18nBundle.getText(NAVIGATION_MENU_POPOVER_HIDDEN_TEXT);
  }
};
__decorate88([
  slot_default({ "default": true, type: HTMLElement, invalidateOnChildChange: true })
], NavigationMenu.prototype, "items", void 0);
NavigationMenu = NavigationMenu_1 = __decorate88([
  customElement_default({
    tag: "ui5-navigation-menu",
    renderer: JsxRenderer_default,
    styles: [Menu_css_default, NavigationMenu_css_default],
    template: NavigationMenuTemplate
  })
], NavigationMenu);
NavigationMenu.define();
var NavigationMenu_default = NavigationMenu;

// node_modules/@ui5/webcomponents-fiori/dist/NavigationMenuItemTemplate.js
var predefinedHooks2 = {
  listItemContent: listItemContent6,
  iconBegin: iconBegin2,
  iconEnd: iconEnd2,
  listItemPostContent: () => {
  }
};
function NavigationMenuItemTemplate(hooks) {
  const currentHooks = { ...predefinedHooks2, ...hooks };
  return jsxs(Fragment, { children: [this._href ? jsx("a", { role: "treeitem", class: "ui5-navmenu-item-link", href: this.href, target: this.target, children: MenuItemTemplate.call(this, currentHooks) }) : MenuItemTemplate.call(this, currentHooks), listItemPostContent.call(this)] });
}
function listItemContent6() {
  return jsx(Fragment, { children: this.text });
}
function iconBegin2() {
  if (this.hasIcon) {
    return jsx(Icon_default, { part: "icon", class: "ui5-li-icon", name: this.icon });
  }
  if (this._siblingsWithIcon) {
    return jsx("div", { class: "ui5-menu-item-dummy-icon" });
  }
}
function iconEnd2() {
  if (this.hasSubmenu) {
    return jsx(Icon_default, { part: "icon", name: slim_arrow_right_default, class: "ui5-menu-item-icon-end" });
  }
  if (this.href) {
    return jsx(Icon_default, { class: "ui5-sn-item-external-link-icon", name: arrow_right_default });
  }
}
function listItemPostContent() {
  return this.hasSubmenu && jsxs(ResponsivePopover_default, { id: `${this._id}-navigation-menu-rp`, class: "ui5-menu-rp ui5-navigation-menu ui5-menu-rp-sub-menu", verticalAlign: "Center", preventInitialFocus: true, preventFocusRestore: true, accessibleNameRef: `${this._id}-navigationMenuPopoverText`, onBeforeOpen: this._beforePopoverOpen, onOpen: this._afterPopoverOpen, onBeforeClose: this._beforePopoverClose, onClose: this._afterPopoverClose, children: [jsx("span", { id: `${this._id}-navigationMenuPopoverText`, class: "ui5-hidden-text", children: this.accSideNavigationPopoverHiddenText }), this.isPhone && jsxs("div", { slot: "header", class: "ui5-menu-dialog-header", children: [this.isSubMenuOpen && jsx(Button_default, { icon: nav_back_default, class: "ui5-menu-back-button", design: "Transparent", "aria-label": this.labelBack, onClick: this._close }), jsx("div", { class: "ui5-menu-dialog-title", children: jsx("div", { children: this.menuHeaderTextPhone }) }), jsx(Button_default, { icon: decline_default, design: "Transparent", "aria-label": this.labelClose, onClick: this._closeAll })] }), jsx("div", { id: `${this._id}-menu-main`, class: "ui5-navigation-menu-main", children: this.items.length ? jsx(List_default, { accessibleRole: "Tree", id: `${this.id}-menu-list`, selectionMode: "None", loading: this.loading, loadingDelay: this.loadingDelay, separators: "None", "onui5-close-menu": this._close, children: jsx("slot", {}) }) : this.loading && jsx(BusyIndicator_default, { id: `${this._id}-menu-busy-indicator`, delay: this.loadingDelay, class: "ui5-menu-busy-indicator", active: true }) })] });
}

// node_modules/@ui5/webcomponents-fiori/dist/generated/themes/NavigationMenuItem.css.js
registerThemePropertiesLoader("@ui5/webcomponents-theming", "sap_horizon", async () => parameters_bundle_css_default);
registerThemePropertiesLoader("@ui5/webcomponents-fiori", "sap_horizon", async () => parameters_bundle_css_default3);
var NavigationMenuItem_css_default = `:host::part(native-li){padding-left:.5rem;width:auto}:host::part(native-li):after{border-radius:.375rem;inset:0}:host{display:flex;align-items:center;width:100%;box-sizing:border-box;position:relative;height:var(--_ui5-v2-8-0_side_navigation_item_height);min-height:var(--_ui5-v2-8-0_side_navigation_item_height);border-radius:.375rem;transition:var(--_ui5-v2-8-0_side_navigation_item_transition);color:var(--sapList_TextColor);font-weight:700;font-size:var(--sapFontSize)}:host([design="Action"]){color:var(--sapButton_TextColor)}:host([ui5-navigation-menu-item][selected]){border-bottom:none}:host::part(content){color:inherit}:host .ui5-navmenu-item-link{text-decoration:none;color:inherit}.ui5-navigation-menu-item-root .ui5-menu-item-icon-end{position:relative;inset-inline-end:auto;width:.75rem;height:.75rem;color:inherit}.ui5-navigation-menu-item-root .ui5-sn-item-external-link-icon{height:.875rem}:host([design="Action"]) .ui5-sn-item-external-link-icon{color:var(--sapButton_TextColor)}:host::part(icon){color:inherit;min-width:1rem;min-height:1rem}:host([focused]):not([active]){background:none}
`;

// node_modules/@ui5/webcomponents-fiori/dist/NavigationMenuItem.js
var __decorate89 = function(decorators, target, key, desc) {
  var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
  if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
  else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
  return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var NavigationMenuItem = class NavigationMenuItem2 extends MenuItem_default {
  constructor() {
    super(...arguments);
    this.design = "Default";
  }
  get isExternalLink() {
    return this.href && this.target === "_blank";
  }
  get _href() {
    return !this.disabled && this.href ? this.href : void 0;
  }
  get _accInfo() {
    const accInfo = super._accInfo;
    accInfo.role = this.href ? "none" : "treeitem";
    if (!accInfo.ariaHaspopup) {
      accInfo.ariaHaspopup = this.accessibilityAttributes.hasPopup;
    }
    return accInfo;
  }
  get classes() {
    const result = super.classes;
    result.main["ui5-navigation-menu-item-root"] = true;
    return result;
  }
  get accSideNavigationPopoverHiddenText() {
    return NavigationMenu_default.i18nBundle.getText(NAVIGATION_MENU_POPOVER_HIDDEN_TEXT);
  }
};
__decorate89([
  property_default()
], NavigationMenuItem.prototype, "href", void 0);
__decorate89([
  property_default()
], NavigationMenuItem.prototype, "target", void 0);
__decorate89([
  property_default()
], NavigationMenuItem.prototype, "design", void 0);
NavigationMenuItem = __decorate89([
  customElement_default({
    renderer: JsxRenderer_default,
    tag: "ui5-navigation-menu-item",
    template: NavigationMenuItemTemplate,
    styles: [MenuItem_default.styles, NavigationMenuItem_css_default]
  })
], NavigationMenuItem);
NavigationMenuItem.define();
var NavigationMenuItem_default = NavigationMenuItem;

// node_modules/@ui5/webcomponents-fiori/dist/SideNavigationSubItemTemplate.js
function SideNavigationSubItemTemplate() {
  var _a;
  return jsx("li", { id: this._id, class: "ui5-sn-list-li", role: "none", children: this._href ? jsxs("a", { class: `ui5-sn-item ui5-sn-item-level2 ${this._classes}`, role: "treeitem", "data-sap-focus-ref": true, onKeyDown: this._onkeydown, onKeyUp: this._onkeyup, onClick: this._onclick, onFocusIn: this._onfocusin, tabIndex: this.effectiveTabIndex ? parseInt(this.effectiveTabIndex) : void 0, "aria-current": this._ariaCurrent, "aria-selected": this.selected, title: this._tooltip, href: this._href, target: this._target, children: [this.icon && jsx(Icon_default, { class: "ui5-sn-item-icon", name: this.icon }), jsx("div", { class: "ui5-sn-item-text", children: this.text }), this.isExternalLink && jsx(Icon_default, { class: "ui5-sn-item-external-link-icon", name: arrow_right_default })] }) : jsxs("div", { class: `ui5-sn-item ui5-sn-item-level2 ${this._classes}`, role: "treeitem", "data-sap-focus-ref": true, onKeyDown: this._onkeydown, onKeyUp: this._onkeyup, onClick: this._onclick, onFocusIn: this._onfocusin, tabIndex: this.effectiveTabIndex ? parseInt(this.effectiveTabIndex) : void 0, "aria-current": this._ariaCurrent, "aria-haspopup": (_a = this.accessibilityAttributes) == null ? void 0 : _a.hasPopup, "aria-selected": this.selected, title: this._tooltip, children: [this.icon && jsx(Icon_default, { class: "ui5-sn-item-icon", name: this.icon }), jsx("div", { class: "ui5-sn-item-text", children: this.text }), this.isExternalLink && jsx(Icon_default, { class: "ui5-sn-item-external-link-icon", name: arrow_right_default })] }) });
}

// node_modules/@ui5/webcomponents-fiori/dist/generated/themes/SideNavigationSubItem.css.js
registerThemePropertiesLoader("@ui5/webcomponents-theming", "sap_horizon", async () => parameters_bundle_css_default);
registerThemePropertiesLoader("@ui5/webcomponents-fiori", "sap_horizon", async () => parameters_bundle_css_default3);
var SideNavigationSubItem_css_default = `.ui5-sn-item-ul{margin:0;padding:0;list-style:none}.ui5-sn-item{display:flex;align-items:center;width:auto;box-sizing:border-box;text-decoration:none;position:relative;height:var(--_ui5-v2-8-0_side_navigation_item_height);min-height:var(--_ui5-v2-8-0_side_navigation_item_height);cursor:pointer;color:inherit;background-color:var(--sapList_Background);border-radius:var(--_ui5-v2-8-0_side_navigation_item_border_radius);transition:var(--_ui5-v2-8-0_side_navigation_item_transition);margin-block-end:var(--_ui5-v2-8-0_side_navigation_item_bottom_margin)}:host(.ui5-sn-item-hidden[side-nav-collapsed]),:host([side-nav-collapsed]) .ui5-sn-item-hidden{display:none}:host([design="Action"]){color:var(--sapButton_TextColor)}:host([design="Action"]) .ui5-sn-item:not(.ui5-sn-item-disabled):active [ui5-icon],:host([design="Action"]) .ui5-sn-item:not(.ui5-sn-item-disabled):active .ui5-sn-item-text{color:var(--_ui5-v2-8-0_side_navigation_active_text_color)}:host([design="Action"]) .ui5-sn-item{border:var(--sapButton_BorderWidth) solid var(--sapButton_BorderColor);box-sizing:content-box}:host([design="Action"]:not([side-nav-collapsed])) .ui5-sn-item{max-width:-moz-available;max-width:-webkit-fill-available;max-width:fill-available}:host([design="Action"]) .ui5-sn-item:not(.ui5-sn-item-disabled):hover{border:var(--_ui5-v2-8-0_side_navigation_action_item_border_hover);background:var(--sapButton_Hover_Background)}:host([design="Action"]) .ui5-sn-item:not(.ui5-sn-item-disabled):active{border:var(--_ui5-v2-8-0_side_navigation_action_item_border_active);background:var(--sapButton_Active_Background)}.ui5-sn-item:focus{outline:none}:host([desktop]) .ui5-sn-item:focus:after,.ui5-sn-item:focus-visible:after{border:var(--sapContent_FocusWidth) var(--sapContent_FocusStyle) var(--sapContent_FocusColor);position:absolute;content:"";inset:var(--_ui5-v2-8-0_side_navigation_item_focus_border_offset);z-index:2;pointer-events:none;border-radius:var(--_ui5-v2-8-0_side_navigation_item_focus_border_radius)}.ui5-sn-item:not(.ui5-sn-item-disabled).ui5-sn-item-selected:focus:before{border:var(--_ui5-v2-8-0_side_navigation_selected_and_focused_border_style_color)}.ui5-sn-item.ui5-sn-item-group:before,.ui5-sn-item.ui5-sn-item-level1:before{border:var(--_ui5-v2-8-0_side_navigation_group_border_style_color);border-width:var(--_ui5-v2-8-0_side_navigation_group_border_width)}.ui5-sn-item-group[aria-expanded=true]:before,.ui5-sn-item-level1[aria-expanded=true]:before{border-width:var(--_ui5-v2-8-0_side_navigation_group_expanded_border_width)}.ui5-sn-item:before{content:"";position:absolute;inset:0;pointer-events:none}.ui5-sn-item.ui5-sn-item-disabled{opacity:var(--sapContent_DisabledOpacity);cursor:default}:host([ui5-side-navigation-item][in-popover][unselectable]) .ui5-sn-item{cursor:unset}:host(:not([ui5-side-navigation-item][in-popover][unselectable])) .ui5-sn-item:not(.ui5-sn-item-disabled):hover{background:var(--sapList_Hover_Background)}.ui5-sn-item:not(.ui5-sn-item-disabled).ui5-sn-item-selected{background:var(--_ui5-v2-8-0_side_navigation_collapsed_selected_item_background)}.ui5-sn-item:not(.ui5-sn-item-disabled):active .ui5-sn-item-text,.ui5-sn-item:not(.ui5-sn-item-disabled).ui5-sn-item-active .ui5-sn-item-text{color:var(--sapList_Active_TextColor)}.ui5-sn-item:not(.ui5-sn-item-disabled):active [ui5-icon],.ui5-sn-item:not(.ui5-sn-item-disabled).ui5-sn-item-active [ui5-icon]{color:var(--sapList_Active_TextColor)}.ui5-sn-item:not(.ui5-sn-item-disabled).ui5-sn-item-selected:hover{background:var(--_ui5-v2-8-0_side_navigation_collapsed_selected_item_background_hover)}.ui5-sn-item:not(.ui5-sn-item-disabled).ui5-sn-item-selected:active,.ui5-sn-item:not(.ui5-sn-item-disabled).ui5-sn-item-selected.ui5-sn-item-active,:host(:not([ui5-side-navigation-item][in-popover][unselectable])) .ui5-sn-item:not(.ui5-sn-item-disabled):active,.ui5-sn-item:not(.ui5-sn-item-disabled).ui5-sn-item-active,:host([side-nav-collapsed]) .ui5-sn-item:not(.ui5-sn-item-disabled).ui5-sn-item-selected:active,:host([side-nav-collapsed]) .ui5-sn-item:not(.ui5-sn-item-disabled).ui5-sn-item-selected.ui5-sn-item-active{background:var(--sapList_Active_Background)}.ui5-sn-item:before{border:var(--_ui5-v2-8-0_side_navigation_item_border_style_color);border-width:var(--_ui5-v2-8-0_side_navigation_item_border_width)}:host([side-nav-collapsed]) .ui5-sn-item:before{border-width:var(--_ui5-v2-8-0_side_navigation_item_border_width)}.ui5-sn-item:not(.ui5-sn-item-disabled).ui5-sn-item-selected:before{border:var(--_ui5-v2-8-0_side_navigation_selected_border_style_color);border-width:var(--_ui5-v2-8-0_side_navigation_selected_border_width)}:host(:not([design="Action"])) .ui5-sn-item:not(.ui5-sn-item-disabled):not(.ui5-sn-item-selected):hover:before{border:var(--_ui5-v2-8-0_side_navigation_hover_border_style_color);border-width:var(--_ui5-v2-8-0_side_navigation_hover_border_width)}:host([side-nav-collapsed]) .ui5-sn-item:not(.ui5-sn-item-disabled).ui5-sn-item-selected:before{border-radius:var(--_ui5-v2-8-0_side_navigation_item_border_radius)}:host([in-popover]:last-of-type) .ui5-sn-item:not(:hover):not(:active):before{border:var(--_ui5-v2-8-0_side_navigation_last_item_border_style)}.ui5-sn-item-icon{color:var(--_ui5-v2-8-0_side_navigation_icon_color);padding-inline-start:1rem;padding-inline-end:var(--_ui5-v2-8-0_side_navigation_icon_padding_inline_end)}:host([design="Action"]) .ui5-sn-item-icon{color:var(--sapButton_TextColor)}.ui5-sn-item-toggle-icon,.ui5-sn-item-external-link-icon{color:var(--_ui5-v2-8-0_side_navigation_expand_icon_color);min-width:2rem;height:.875rem}:host([design="Action"]) .ui5-sn-item-toggle-icon,:host([design="Action"]) .ui5-sn-item-external-link-icon{color:var(--sapButton_TextColor)}.ui5-sn-item-external-link-icon{min-width:3rem}:host([side-nav-collapsed]) .ui5-sn-item:not(.ui5-sn-item-active):not(.ui5-sn-item-no-hover-effect):hover .ui5-sn-item-toggle-icon,:host([side-nav-collapsed]) .ui5-sn-item:not(.ui5-sn-item-active):not(.ui5-sn-item-no-hover-effect):focus .ui5-sn-item-toggle-icon,:host(:not([side-nav-collapsed])) .ui5-sn-item-toggle-icon{min-width:var(--_ui5-v2-8-0_side_navigation_expand_icon_width);padding-inline:.25rem .375rem;padding-block:.25rem;border-inline-start:.0625rem solid var(--sapTextColor);margin-inline-start:1rem}:host([unselectable]:not([side-nav-collapsed])) .ui5-sn-item-toggle-icon,:host(:not([side-nav-collapsed])) .ui5-sn-item-group .ui5-sn-item-toggle-icon,:host([unselectable][side-nav-collapsed]) .ui5-sn-item:not(.ui5-sn-item-active):not(.ui5-sn-item-no-hover-effect):hover .ui5-sn-item-toggle-icon,:host([unselectable][side-nav-collapsed]) .ui5-sn-item:not(.ui5-sn-item-active):not(.ui5-sn-item-no-hover-effect):focus .ui5-sn-item-toggle-icon{border-inline-start:none}:host([in-popover]) .ui5-sn-item-toggle-icon{display:none}:host([side-nav-collapsed]) .ui5-sn-item{justify-content:center}:host([slot="fixedItems"]:not(side-nav-collapsed)) .ui5-sn-item.ui5-sn-item-level1{margin-top:var(--_ui5-v2-8-0_side_navigation_first_fixed_item_margin_top)}:host([side-nav-collapsed]) .ui5-sn-item-icon{padding-inline-end:1rem}:host([design="Action"][side-nav-collapsed]) .ui5-sn-item-icon{padding-inline-end:calc(1rem - 1px);padding-inline-start:calc(1rem - 1px)}:host([side-nav-collapsed]) .ui5-sn-item-text{display:none}:host([side-nav-collapsed]) .ui5-sn-item-toggle-icon{display:var(--_ui5-v2-8-0_side_navigation_item_expand_icon_visibility);font-size:.75rem;position:absolute;inset-inline-end:var(--_ui5-v2-8-0_side_navigation_item_expand_icon_right)}:host([side-nav-collapsed]) .ui5-sn-item-external-link-icon{display:none}:host([side-nav-collapsed]) .ui5-sn-item:not(.ui5-sn-item-active):not(.ui5-sn-item-no-hover-effect):hover,:host([side-nav-collapsed]) .ui5-sn-item:not(.ui5-sn-item-active):not(.ui5-sn-item-no-hover-effect):focus{width:var(--_ui5-v2-8-0_side_navigation_item_collapsed_hover_focus_width);box-shadow:var(--_ui5-v2-8-0_side_navigation_box_shadow);z-index:1;padding-inline-end:var(--_ui5-v2-8-0_side_navigation_item_collapsed_padding_right)}:host([side-nav-collapsed]) a.ui5-sn-item:not(.ui5-sn-item-active):not(.ui5-sn-item-no-hover-effect):hover:not(.ui5-sn-item-with-expander),:host([side-nav-collapsed]) a.ui5-sn-item:not(.ui5-sn-item-active):not(.ui5-sn-item-no-hover-effect):focus:not(.ui5-sn-item-with-expander){padding-inline-end:0}:host([unselectable][side-nav-collapsed]) .ui5-sn-item.ui5-sn-item.ui5-sn-item-with-expander:not(.ui5-sn-item-active):not(.ui5-sn-item-no-hover-effect):hover,:host([unselectable][side-nav-collapsed]) .ui5-sn-item.ui5-sn-item.ui5-sn-item-with-expander:not(.ui5-sn-item-active):not(.ui5-sn-item-no-hover-effect):focus{padding-inline-end:var(--_ui5-v2-8-0_side_navigation_item_collapsed_unselectable_padding)}:host([unselectable][side-nav-collapsed]) div.ui5-sn-item:not(.ui5-sn-item-active):not(.ui5-sn-item-no-hover-effect):not(.ui5-sn-item-with-expander):hover,:host([unselectable][side-nav-collapsed]) div.ui5-sn-item:not(.ui5-sn-item-active):not(.ui5-sn-item-no-hover-effect):not(.ui5-sn-item-with-expander):focus{padding-inline-end:var(--_ui5-v2-8-0_side_navigation_action_item_collapsed_padding)}:host([side-nav-collapsed]) .ui5-sn-item.ui5-sn-item-selected:hover,:host([side-nav-collapsed]) .ui5-sn-item.ui5-sn-item-selected:focus{background:var(--sapList_SelectionBackgroundColor)}:host([side-nav-collapsed]) div.ui5-sn-item:not(.ui5-sn-item-active):not(.ui5-sn-item-no-hover-effect):hover:not(.ui5-sn-item-with-expander),:host([side-nav-collapsed]) div.ui5-sn-item:not(.ui5-sn-item-active):not(.ui5-sn-item-no-hover-effect):focus:not(.ui5-sn-item-with-expander),:host([side-nav-collapsed]) a.ui5-sn-item:not(.ui5-sn-item-active):not(.ui5-sn-item-no-hover-effect):hover:not(.ui5-sn-item-with-expander):not([target=_blank]),:host([side-nav-collapsed]) a.ui5-sn-item:not(.ui5-sn-item-active):not(.ui5-sn-item-no-hover-effect):focus:not(.ui5-sn-item-with-expander):not([target=_blank]){padding-inline-end:var(--_ui5-v2-8-0_side_navigation_item_collapsed_hover_focus_padding_right)}:host([side-nav-collapsed]) .ui5-sn-item:not(.ui5-sn-item-active):not(.ui5-sn-item-no-hover-effect):hover .ui5-sn-item-text,:host([side-nav-collapsed]) .ui5-sn-item:not(.ui5-sn-item-active):not(.ui5-sn-item-no-hover-effect):focus .ui5-sn-item-text,:host([side-nav-collapsed]) .ui5-sn-item:not(.ui5-sn-item-active):not(.ui5-sn-item-no-hover-effect):hover .ui5-sn-item-toggle-icon,:host([side-nav-collapsed]) .ui5-sn-item:not(.ui5-sn-item-active):not(.ui5-sn-item-no-hover-effect):hover .ui5-sn-item-external-link-icon,:host([side-nav-collapsed]) .ui5-sn-item:not(.ui5-sn-item-active):not(.ui5-sn-item-no-hover-effect):focus .ui5-sn-item-toggle-icon,:host([side-nav-collapsed]) .ui5-sn-item:not(.ui5-sn-item-active):not(.ui5-sn-item-no-hover-effect):focus .ui5-sn-item-external-link-icon{display:var(--_ui5-v2-8-0_side_navigation_item_collapsed_hover_focus_display)}:host([side-nav-collapsed]) .ui5-sn-item:not(.ui5-sn-item-active):not(.ui5-sn-item-no-hover-effect):hover .ui5-sn-item-toggle-icon,:host([side-nav-collapsed]) .ui5-sn-item:not(.ui5-sn-item-active):not(.ui5-sn-item-no-hover-effect):focus .ui5-sn-item-toggle-icon{left:var(--_ui5-v2-8-0_side_navigation_item_expand_icon_hover_left);right:var(--_ui5-v2-8-0_side_navigation_item_expand_icon_hover_right)}.ui5-sn-item[aria-expanded=false]~.ui5-sn-item-ul{display:none}.ui5-sn-item-text{flex:1;min-width:0;overflow:hidden;text-overflow:ellipsis;white-space:nowrap}.ui5-sn-item-with-expander .ui5-sn-item-icon:after{display:var(--_ui5-v2-8-0_side_navigation_triangle_display);content:"";width:0;height:0;border-left:.375rem solid transparent;border-bottom:.375rem solid var(--_ui5-v2-8-0_side_navigation_triangle_color);position:absolute;right:.1875rem;bottom:.125rem}.ui5-sn-item-separator{min-height:.625rem}:host{color:var(--sapList_TextColor);font-family:"72override",var(--sapFontFamily);font-size:var(--sapFontSize);font-weight:400}.ui5-sn-item-level2:not(.ui5-sn-item-has-icon){padding-inline-start:var(--_ui5-v2-8-0_side_navigation_group_icon_width)}:host(:last-child) .ui5-sn-item.ui5-sn-item-level2:not(.ui5-sn-item-selected):before{border:var(--_ui5-v2-8-0_side_navigation_group_border_style_color);border-width:var(--_ui5-v2-8-0_side_navigation_group_border_width)}.ui5-sn-item.ui5-sn-item-level2:before{border:var(--_ui5-v2-8-0_side_navigation_item_border_style_color);border-width:var(--_ui5-v2-8-0_side_navigation_item_border_width)}
`;

// node_modules/@ui5/webcomponents-fiori/dist/SideNavigationSubItem.js
var __decorate90 = function(decorators, target, key, desc) {
  var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
  if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
  else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
  return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var SideNavigationSubItem = class SideNavigationSubItem2 extends SideNavigationSelectableItemBase_default {
  _onkeydown(e) {
    super._onkeydown(e);
  }
  _onkeyup(e) {
    super._onkeyup(e);
  }
  _onfocusin(e) {
    super._onfocusin(e);
  }
  _onclick(e) {
    super._onclick(e);
  }
  get classesArray() {
    const classes = super.classesArray;
    if (this.icon) {
      classes.push("ui5-sn-item-has-icon");
    }
    return classes;
  }
};
SideNavigationSubItem = __decorate90([
  customElement_default({
    tag: "ui5-side-navigation-sub-item",
    renderer: JsxRenderer_default,
    template: SideNavigationSubItemTemplate,
    styles: SideNavigationSubItem_css_default
  })
], SideNavigationSubItem);
SideNavigationSubItem.define();
var SideNavigationSubItem_default = SideNavigationSubItem;

// node_modules/@ui5/webcomponents-fiori/dist/SideNavigationPopoverTemplate.js
function SideNavigationTemplate() {
  return jsxs(Fragment, { children: [jsx(NavigationMenu_default, { id: `${this._id}-side-navigation-overflow-menu`, onBeforeOpen: this._onBeforeMenuOpen, onBeforeClose: this._onBeforeMenuClose, "onui5-item-click": this.handleOverflowItemClick, class: "ui5-side-navigation-popover ui5-side-navigation-overflow-menu", children: this._menuPopoverItems.map((item2) => jsx(NavigationMenuItem_default, { accessibilityAttributes: item2.accessibilityAttributes, text: item2.text, icon: item2.icon, design: item2.design, disabled: item2.disabled, href: item2.href, target: item2.target, title: item2.title, ref: this.captureRef.bind(item2), children: item2.items.map((subItem) => jsx(NavigationMenuItem_default, { accessibilityAttributes: subItem.accessibilityAttributes, text: subItem.text, icon: subItem.icon, design: subItem.design, disabled: subItem.disabled, ref: this.captureRef.bind(subItem), href: subItem.href, target: subItem.target, title: subItem.title })) })) }), jsx(ResponsivePopover_default, { verticalAlign: "Top", class: "ui5-side-navigation-popover", accessibleNameRef: `${this._id}-sideNavigationPopoverText`, onOpen: this._onAfterPopoverOpen, onBeforeOpen: this._onBeforePopoverOpen, onBeforeClose: this._onBeforePopoverClose, children: this._popoverContents && jsxs(Fragment, { children: [jsx("span", { id: `${this._id}-sideNavigationPopoverText`, class: "ui5-hidden-text", children: this.accSideNavigationPopoverHiddenText }), jsx(SideNavigation_default, { inPopover: true, class: "ui5-side-navigation-in-popover", children: jsx(SideNavigationItem_default, { accessibilityAttributes: this._popoverContents.item.accessibilityAttributes, text: this._popoverContents.item.text, tooltip: this._popoverContents.item._tooltip, href: this._popoverContents.item._href, target: this._popoverContents.item._target, design: this._popoverContents.item.design, disabled: this._popoverContents.item.disabled, expanded: true, _fixed: true, selected: this._popoverContents.item.selected, unselectable: this._popoverContents.item.unselectable, "onui5-click": this.handlePopupItemClick, ref: this.captureRef.bind(this._popoverContents.item), children: this._popoverContents.subItems.map((item2) => jsx(SideNavigationSubItem_default, { accessibilityAttributes: item2.accessibilityAttributes, text: item2.text, tooltip: item2._tooltip, href: item2._href, target: item2._target, design: item2.design, disabled: item2.disabled, selected: item2.selected, unselectable: item2.unselectable, "onui5-click": this.handlePopupItemClick, ref: this.captureRef.bind(item2) })) }) })] }) })] });
}

// node_modules/@ui5/webcomponents-fiori/dist/SideNavigationTemplate.js
function SideNavigationTemplate2() {
  return jsxs(Fragment, { children: [jsxs("nav", { class: {
    "ui5-sn-root": true,
    "ui5-sn-collapsed": this.collapsed
  }, role: this._rootRole, children: [header2.call(this), this.collapsed ? jsxs("div", { role: "menubar", class: "ui5-sn-list ui5-sn-flexible", "aria-orientation": "vertical", "aria-roledescription": this.ariaRoleDescNavigationList, children: [jsx("slot", {}), jsx(SideNavigationItem_default, { isOverflow: true, id: `${this._id}-sn-overflow-item`, text: this.overflowAccessibleName, onClick: this._handleOverflowClick, class: "ui5-sn-item-overflow", sideNavCollapsed: true, icon: overflow_default })] }) : jsx("ul", { role: "tree", class: "ui5-sn-list ui5-sn-flexible", "aria-roledescription": this.ariaRoleDescNavigationList, children: jsx("slot", {}) }), this.hasFixedItems && jsxs(Fragment, { children: [jsx("div", { role: "separator", class: "ui5-sn-spacer" }), this.collapsed ? jsx("div", { role: "menubar", class: "ui5-sn-list ui5-sn-fixed", "aria-orientation": "vertical", "aria-roledescription": this.ariaRoleDescNavigationList, children: jsx("slot", { name: "fixedItems" }) }) : jsx("ul", { role: "tree", class: "ui5-sn-list ui5-sn-fixed", "aria-roledescription": this.ariaRoleDescNavigationList, children: jsx("slot", { name: "fixedItems" }) })] })] }), SideNavigationTemplate.call(this)] });
}
function header2() {
  return this.showHeader ? jsx("slot", { name: "header" }) : void 0;
}

// node_modules/@ui5/webcomponents-fiori/dist/generated/themes/SideNavigation.css.js
registerThemePropertiesLoader("@ui5/webcomponents-theming", "sap_horizon", async () => parameters_bundle_css_default);
registerThemePropertiesLoader("@ui5/webcomponents-fiori", "sap_horizon", async () => parameters_bundle_css_default3);
var SideNavigation_css_default = `.ui5-sn-item-ul{margin:0;padding:0;list-style:none}.ui5-sn-item{display:flex;align-items:center;width:auto;box-sizing:border-box;text-decoration:none;position:relative;height:var(--_ui5-v2-8-0_side_navigation_item_height);min-height:var(--_ui5-v2-8-0_side_navigation_item_height);cursor:pointer;color:inherit;background-color:var(--sapList_Background);border-radius:var(--_ui5-v2-8-0_side_navigation_item_border_radius);transition:var(--_ui5-v2-8-0_side_navigation_item_transition);margin-block-end:var(--_ui5-v2-8-0_side_navigation_item_bottom_margin)}:host(.ui5-sn-item-hidden[side-nav-collapsed]),:host([side-nav-collapsed]) .ui5-sn-item-hidden{display:none}:host([design="Action"]){color:var(--sapButton_TextColor)}:host([design="Action"]) .ui5-sn-item:not(.ui5-sn-item-disabled):active [ui5-icon],:host([design="Action"]) .ui5-sn-item:not(.ui5-sn-item-disabled):active .ui5-sn-item-text{color:var(--_ui5-v2-8-0_side_navigation_active_text_color)}:host([design="Action"]) .ui5-sn-item{border:var(--sapButton_BorderWidth) solid var(--sapButton_BorderColor);box-sizing:content-box}:host([design="Action"]:not([side-nav-collapsed])) .ui5-sn-item{max-width:-moz-available;max-width:-webkit-fill-available;max-width:fill-available}:host([design="Action"]) .ui5-sn-item:not(.ui5-sn-item-disabled):hover{border:var(--_ui5-v2-8-0_side_navigation_action_item_border_hover);background:var(--sapButton_Hover_Background)}:host([design="Action"]) .ui5-sn-item:not(.ui5-sn-item-disabled):active{border:var(--_ui5-v2-8-0_side_navigation_action_item_border_active);background:var(--sapButton_Active_Background)}.ui5-sn-item:focus{outline:none}:host([desktop]) .ui5-sn-item:focus:after,.ui5-sn-item:focus-visible:after{border:var(--sapContent_FocusWidth) var(--sapContent_FocusStyle) var(--sapContent_FocusColor);position:absolute;content:"";inset:var(--_ui5-v2-8-0_side_navigation_item_focus_border_offset);z-index:2;pointer-events:none;border-radius:var(--_ui5-v2-8-0_side_navigation_item_focus_border_radius)}.ui5-sn-item:not(.ui5-sn-item-disabled).ui5-sn-item-selected:focus:before{border:var(--_ui5-v2-8-0_side_navigation_selected_and_focused_border_style_color)}.ui5-sn-item.ui5-sn-item-group:before,.ui5-sn-item.ui5-sn-item-level1:before{border:var(--_ui5-v2-8-0_side_navigation_group_border_style_color);border-width:var(--_ui5-v2-8-0_side_navigation_group_border_width)}.ui5-sn-item-group[aria-expanded=true]:before,.ui5-sn-item-level1[aria-expanded=true]:before{border-width:var(--_ui5-v2-8-0_side_navigation_group_expanded_border_width)}.ui5-sn-item:before{content:"";position:absolute;inset:0;pointer-events:none}.ui5-sn-item.ui5-sn-item-disabled{opacity:var(--sapContent_DisabledOpacity);cursor:default}:host([ui5-side-navigation-item][in-popover][unselectable]) .ui5-sn-item{cursor:unset}:host(:not([ui5-side-navigation-item][in-popover][unselectable])) .ui5-sn-item:not(.ui5-sn-item-disabled):hover{background:var(--sapList_Hover_Background)}.ui5-sn-item:not(.ui5-sn-item-disabled).ui5-sn-item-selected{background:var(--_ui5-v2-8-0_side_navigation_collapsed_selected_item_background)}.ui5-sn-item:not(.ui5-sn-item-disabled):active .ui5-sn-item-text,.ui5-sn-item:not(.ui5-sn-item-disabled).ui5-sn-item-active .ui5-sn-item-text{color:var(--sapList_Active_TextColor)}.ui5-sn-item:not(.ui5-sn-item-disabled):active [ui5-icon],.ui5-sn-item:not(.ui5-sn-item-disabled).ui5-sn-item-active [ui5-icon]{color:var(--sapList_Active_TextColor)}.ui5-sn-item:not(.ui5-sn-item-disabled).ui5-sn-item-selected:hover{background:var(--_ui5-v2-8-0_side_navigation_collapsed_selected_item_background_hover)}.ui5-sn-item:not(.ui5-sn-item-disabled).ui5-sn-item-selected:active,.ui5-sn-item:not(.ui5-sn-item-disabled).ui5-sn-item-selected.ui5-sn-item-active,:host(:not([ui5-side-navigation-item][in-popover][unselectable])) .ui5-sn-item:not(.ui5-sn-item-disabled):active,.ui5-sn-item:not(.ui5-sn-item-disabled).ui5-sn-item-active,:host([side-nav-collapsed]) .ui5-sn-item:not(.ui5-sn-item-disabled).ui5-sn-item-selected:active,:host([side-nav-collapsed]) .ui5-sn-item:not(.ui5-sn-item-disabled).ui5-sn-item-selected.ui5-sn-item-active{background:var(--sapList_Active_Background)}.ui5-sn-item:before{border:var(--_ui5-v2-8-0_side_navigation_item_border_style_color);border-width:var(--_ui5-v2-8-0_side_navigation_item_border_width)}:host([side-nav-collapsed]) .ui5-sn-item:before{border-width:var(--_ui5-v2-8-0_side_navigation_item_border_width)}.ui5-sn-item:not(.ui5-sn-item-disabled).ui5-sn-item-selected:before{border:var(--_ui5-v2-8-0_side_navigation_selected_border_style_color);border-width:var(--_ui5-v2-8-0_side_navigation_selected_border_width)}:host(:not([design="Action"])) .ui5-sn-item:not(.ui5-sn-item-disabled):not(.ui5-sn-item-selected):hover:before{border:var(--_ui5-v2-8-0_side_navigation_hover_border_style_color);border-width:var(--_ui5-v2-8-0_side_navigation_hover_border_width)}:host([side-nav-collapsed]) .ui5-sn-item:not(.ui5-sn-item-disabled).ui5-sn-item-selected:before{border-radius:var(--_ui5-v2-8-0_side_navigation_item_border_radius)}:host([in-popover]:last-of-type) .ui5-sn-item:not(:hover):not(:active):before{border:var(--_ui5-v2-8-0_side_navigation_last_item_border_style)}.ui5-sn-item-icon{color:var(--_ui5-v2-8-0_side_navigation_icon_color);padding-inline-start:1rem;padding-inline-end:var(--_ui5-v2-8-0_side_navigation_icon_padding_inline_end)}:host([design="Action"]) .ui5-sn-item-icon{color:var(--sapButton_TextColor)}.ui5-sn-item-toggle-icon,.ui5-sn-item-external-link-icon{color:var(--_ui5-v2-8-0_side_navigation_expand_icon_color);min-width:2rem;height:.875rem}:host([design="Action"]) .ui5-sn-item-toggle-icon,:host([design="Action"]) .ui5-sn-item-external-link-icon{color:var(--sapButton_TextColor)}.ui5-sn-item-external-link-icon{min-width:3rem}:host([side-nav-collapsed]) .ui5-sn-item:not(.ui5-sn-item-active):not(.ui5-sn-item-no-hover-effect):hover .ui5-sn-item-toggle-icon,:host([side-nav-collapsed]) .ui5-sn-item:not(.ui5-sn-item-active):not(.ui5-sn-item-no-hover-effect):focus .ui5-sn-item-toggle-icon,:host(:not([side-nav-collapsed])) .ui5-sn-item-toggle-icon{min-width:var(--_ui5-v2-8-0_side_navigation_expand_icon_width);padding-inline:.25rem .375rem;padding-block:.25rem;border-inline-start:.0625rem solid var(--sapTextColor);margin-inline-start:1rem}:host([unselectable]:not([side-nav-collapsed])) .ui5-sn-item-toggle-icon,:host(:not([side-nav-collapsed])) .ui5-sn-item-group .ui5-sn-item-toggle-icon,:host([unselectable][side-nav-collapsed]) .ui5-sn-item:not(.ui5-sn-item-active):not(.ui5-sn-item-no-hover-effect):hover .ui5-sn-item-toggle-icon,:host([unselectable][side-nav-collapsed]) .ui5-sn-item:not(.ui5-sn-item-active):not(.ui5-sn-item-no-hover-effect):focus .ui5-sn-item-toggle-icon{border-inline-start:none}:host([in-popover]) .ui5-sn-item-toggle-icon{display:none}:host([side-nav-collapsed]) .ui5-sn-item{justify-content:center}:host([slot="fixedItems"]:not(side-nav-collapsed)) .ui5-sn-item.ui5-sn-item-level1{margin-top:var(--_ui5-v2-8-0_side_navigation_first_fixed_item_margin_top)}:host([side-nav-collapsed]) .ui5-sn-item-icon{padding-inline-end:1rem}:host([design="Action"][side-nav-collapsed]) .ui5-sn-item-icon{padding-inline-end:calc(1rem - 1px);padding-inline-start:calc(1rem - 1px)}:host([side-nav-collapsed]) .ui5-sn-item-text{display:none}:host([side-nav-collapsed]) .ui5-sn-item-toggle-icon{display:var(--_ui5-v2-8-0_side_navigation_item_expand_icon_visibility);font-size:.75rem;position:absolute;inset-inline-end:var(--_ui5-v2-8-0_side_navigation_item_expand_icon_right)}:host([side-nav-collapsed]) .ui5-sn-item-external-link-icon{display:none}:host([side-nav-collapsed]) .ui5-sn-item:not(.ui5-sn-item-active):not(.ui5-sn-item-no-hover-effect):hover,:host([side-nav-collapsed]) .ui5-sn-item:not(.ui5-sn-item-active):not(.ui5-sn-item-no-hover-effect):focus{width:var(--_ui5-v2-8-0_side_navigation_item_collapsed_hover_focus_width);box-shadow:var(--_ui5-v2-8-0_side_navigation_box_shadow);z-index:1;padding-inline-end:var(--_ui5-v2-8-0_side_navigation_item_collapsed_padding_right)}:host([side-nav-collapsed]) a.ui5-sn-item:not(.ui5-sn-item-active):not(.ui5-sn-item-no-hover-effect):hover:not(.ui5-sn-item-with-expander),:host([side-nav-collapsed]) a.ui5-sn-item:not(.ui5-sn-item-active):not(.ui5-sn-item-no-hover-effect):focus:not(.ui5-sn-item-with-expander){padding-inline-end:0}:host([unselectable][side-nav-collapsed]) .ui5-sn-item.ui5-sn-item.ui5-sn-item-with-expander:not(.ui5-sn-item-active):not(.ui5-sn-item-no-hover-effect):hover,:host([unselectable][side-nav-collapsed]) .ui5-sn-item.ui5-sn-item.ui5-sn-item-with-expander:not(.ui5-sn-item-active):not(.ui5-sn-item-no-hover-effect):focus{padding-inline-end:var(--_ui5-v2-8-0_side_navigation_item_collapsed_unselectable_padding)}:host([unselectable][side-nav-collapsed]) div.ui5-sn-item:not(.ui5-sn-item-active):not(.ui5-sn-item-no-hover-effect):not(.ui5-sn-item-with-expander):hover,:host([unselectable][side-nav-collapsed]) div.ui5-sn-item:not(.ui5-sn-item-active):not(.ui5-sn-item-no-hover-effect):not(.ui5-sn-item-with-expander):focus{padding-inline-end:var(--_ui5-v2-8-0_side_navigation_action_item_collapsed_padding)}:host([side-nav-collapsed]) .ui5-sn-item.ui5-sn-item-selected:hover,:host([side-nav-collapsed]) .ui5-sn-item.ui5-sn-item-selected:focus{background:var(--sapList_SelectionBackgroundColor)}:host([side-nav-collapsed]) div.ui5-sn-item:not(.ui5-sn-item-active):not(.ui5-sn-item-no-hover-effect):hover:not(.ui5-sn-item-with-expander),:host([side-nav-collapsed]) div.ui5-sn-item:not(.ui5-sn-item-active):not(.ui5-sn-item-no-hover-effect):focus:not(.ui5-sn-item-with-expander),:host([side-nav-collapsed]) a.ui5-sn-item:not(.ui5-sn-item-active):not(.ui5-sn-item-no-hover-effect):hover:not(.ui5-sn-item-with-expander):not([target=_blank]),:host([side-nav-collapsed]) a.ui5-sn-item:not(.ui5-sn-item-active):not(.ui5-sn-item-no-hover-effect):focus:not(.ui5-sn-item-with-expander):not([target=_blank]){padding-inline-end:var(--_ui5-v2-8-0_side_navigation_item_collapsed_hover_focus_padding_right)}:host([side-nav-collapsed]) .ui5-sn-item:not(.ui5-sn-item-active):not(.ui5-sn-item-no-hover-effect):hover .ui5-sn-item-text,:host([side-nav-collapsed]) .ui5-sn-item:not(.ui5-sn-item-active):not(.ui5-sn-item-no-hover-effect):focus .ui5-sn-item-text,:host([side-nav-collapsed]) .ui5-sn-item:not(.ui5-sn-item-active):not(.ui5-sn-item-no-hover-effect):hover .ui5-sn-item-toggle-icon,:host([side-nav-collapsed]) .ui5-sn-item:not(.ui5-sn-item-active):not(.ui5-sn-item-no-hover-effect):hover .ui5-sn-item-external-link-icon,:host([side-nav-collapsed]) .ui5-sn-item:not(.ui5-sn-item-active):not(.ui5-sn-item-no-hover-effect):focus .ui5-sn-item-toggle-icon,:host([side-nav-collapsed]) .ui5-sn-item:not(.ui5-sn-item-active):not(.ui5-sn-item-no-hover-effect):focus .ui5-sn-item-external-link-icon{display:var(--_ui5-v2-8-0_side_navigation_item_collapsed_hover_focus_display)}:host([side-nav-collapsed]) .ui5-sn-item:not(.ui5-sn-item-active):not(.ui5-sn-item-no-hover-effect):hover .ui5-sn-item-toggle-icon,:host([side-nav-collapsed]) .ui5-sn-item:not(.ui5-sn-item-active):not(.ui5-sn-item-no-hover-effect):focus .ui5-sn-item-toggle-icon{left:var(--_ui5-v2-8-0_side_navigation_item_expand_icon_hover_left);right:var(--_ui5-v2-8-0_side_navigation_item_expand_icon_hover_right)}.ui5-sn-item[aria-expanded=false]~.ui5-sn-item-ul{display:none}.ui5-sn-item-text{flex:1;min-width:0;overflow:hidden;text-overflow:ellipsis;white-space:nowrap}.ui5-sn-item-with-expander .ui5-sn-item-icon:after{display:var(--_ui5-v2-8-0_side_navigation_triangle_display);content:"";width:0;height:0;border-left:.375rem solid transparent;border-bottom:.375rem solid var(--_ui5-v2-8-0_side_navigation_triangle_color);position:absolute;right:.1875rem;bottom:.125rem}.ui5-sn-item-separator{min-height:.625rem}:host{font-size:var(--sapFontSmallSize);font-family:var(--sapFontSemiboldFamily);color:var(--sapContent_LabelColor)}.ui5-sn-item.ui5-sn-item-group{min-height:2rem;padding-inline-start:var(--_ui5-v2-8-0_side_navigation_group_padding);gap:.4375rem;font-family:var(--sapFontFamily);font-size:var(--sapFontSize)}.ui5-sn-item.ui5-sn-item-group:hover .ui5-sn-item-toggle-icon,.ui5-sn-item.ui5-sn-item-group:focus .ui5-sn-item-toggle-icon{display:block}:host(:first-child) .ui5-sn-item-separator:first-child,:host(:last-child) .ui5-sn-item-separator:last-child,.ui5-sn-item-group-below-group.ui5-sn-item-separator,.ui5-sn-item-group-below-group .ui5-sn-item-separator:first-child{display:none}.ui5-sn-spacer{margin:var(--_ui5-v2-8-0_side_navigation_navigation_separator_margin);height:var(--_ui5-v2-8-0_side_navigation_navigation_separator_height);min-height:var(--_ui5-v2-8-0_side_navigation_navigation_separator_height);background-color:var(--_ui5-v2-8-0_side_navigation_navigation_separator_background_color);border-radius:var(--_ui5-v2-8-0_side_navigation_navigation_separator_radius)}.ui5-sn-collapsed .ui5-sn-spacer{margin:var(--_ui5-v2-8-0_side_navigation_navigation_separator_margin_collapsed)}:host(:not([hidden])){display:inline-block;height:100%;min-width:var(--_ui5-v2-8-0_side_navigation_width);width:var(--_ui5-v2-8-0_side_navigation_width);max-width:100%;transition:width .3s,min-width .3s;box-shadow:var(--_ui5-v2-8-0_side_navigation_box_shadow);font-family:"72override",var(--sapFontFamily);font-size:var(--sapFontSize);background:var(--sapList_Background)}:host([collapsed]){min-width:var(--_ui5-v2-8-0_side_navigation_collapsed_width);width:var(--_ui5-v2-8-0_side_navigation_collapsed_width)}.ui5-sn-root{height:100%;display:flex;flex-direction:column;box-sizing:border-box;border-radius:inherit;border-inline-end:var(--_ui5-v2-8-0_side_navigation_border_right)}.ui5-sn-flexible{display:flex;flex-direction:column;flex:1;min-height:0;position:relative;box-sizing:border-box}.ui5-sn-fixed{position:relative}.ui5-sn-list{margin:0;list-style:none;box-sizing:border-box;overflow:hidden auto}.ui5-sn-list.ui5-sn-flexible{padding:var(--_ui5-v2-8-0_side_navigation_padding-flexible)}.ui5-sn-list.ui5-sn-fixed{padding:var(--_ui5-v2-8-0_side_navigation_padding-fixed)}.ui5-sn-collapsed .ui5-sn-list{overflow:visible;display:flex;flex-direction:column}:host([in-popover]) .ui5-sn-list{padding:var(--_ui5-v2-8-0_side_navigation_parent_popup_padding)}.ui5-sn-item-overflow{margin-top:auto}
`;

// node_modules/@ui5/webcomponents-fiori/dist/generated/themes/SideNavigationPopover.css.js
registerThemePropertiesLoader("@ui5/webcomponents-theming", "sap_horizon", async () => parameters_bundle_css_default);
registerThemePropertiesLoader("@ui5/webcomponents-fiori", "sap_horizon", async () => parameters_bundle_css_default3);
var SideNavigationPopover_css_default = `.ui5-side-navigation-popover{--_ui5-v2-8-0_popover_box_shadow: var(--_ui5-v2-8-0_side_navigation_popup_box_shadow)}.ui5-side-navigation-popover::part(content){padding:0}.ui5-hidden-text{position:absolute;clip:rect(1px,1px,1px,1px);user-select:none;left:-1000px;top:-1000px;pointer-events:none;font-size:0}
`;

// node_modules/@ui5/webcomponents-fiori/dist/SideNavigation.js
var __decorate91 = function(decorators, target, key, desc) {
  var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
  if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
  else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
  return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var SideNavigation_1;
var PAGE_UP_DOWN_SIZE = 10;
var SideNavigation = SideNavigation_1 = class SideNavigation2 extends UI5Element_default {
  constructor() {
    super();
    this.collapsed = false;
    this.inPopover = false;
    this._menuPopoverItems = [];
    this._isOverflow = false;
    this.isTouchDevice = false;
    this._flexibleItemNavigation = new ItemNavigation_default(this, {
      skipItemsSize: PAGE_UP_DOWN_SIZE,
      // PAGE_UP and PAGE_DOWN will skip trough 10 items
      navigationMode: NavigationMode_default.Vertical,
      getItemsCallback: () => this.getEnabledFlexibleItems()
    });
    this._fixedItemNavigation = new ItemNavigation_default(this, {
      skipItemsSize: PAGE_UP_DOWN_SIZE,
      // PAGE_UP and PAGE_DOWN will skip trough 10 items
      navigationMode: NavigationMode_default.Vertical,
      getItemsCallback: () => this.getEnabledFixedItems()
    });
    this._handleResizeBound = this.handleResize.bind(this);
    this._isOverflow = false;
  }
  onBeforeRendering() {
    super.onBeforeRendering();
    this._getAllItems(this.items).concat(this._getAllItems(this.fixedItems)).forEach((item2) => {
      item2.sideNavCollapsed = this.collapsed;
      item2.inPopover = this.inPopover;
      item2.sideNavigation = this;
    });
  }
  _onAfterPopoverOpen() {
    var _a;
    const tree = this.getPickerTree();
    const selectedItem = tree._findSelectedItem(tree.items);
    if (selectedItem) {
      selectedItem.focus();
    } else {
      (_a = tree.items[0]) == null ? void 0 : _a.applyInitialFocusInPopover();
    }
  }
  _onBeforePopoverOpen() {
    var _a;
    const popover = this.getPicker();
    (_a = popover == null ? void 0 : popover.opener) == null ? void 0 : _a.classList.add("ui5-sn-item-active");
  }
  _onBeforePopoverClose() {
    var _a;
    const popover = this.getPicker();
    (_a = popover == null ? void 0 : popover.opener) == null ? void 0 : _a.classList.remove("ui5-sn-item-active");
  }
  _onBeforeMenuOpen() {
    var _a;
    const popover = this.getOverflowPopover();
    (_a = popover == null ? void 0 : popover.opener) == null ? void 0 : _a.classList.add("ui5-sn-item-active");
  }
  _onBeforeMenuClose() {
    var _a;
    const popover = this.getOverflowPopover();
    (_a = popover == null ? void 0 : popover.opener) == null ? void 0 : _a.classList.remove("ui5-sn-item-active");
  }
  get accSideNavigationPopoverHiddenText() {
    return SideNavigation_1.i18nBundle.getText(SIDE_NAVIGATION_POPOVER_HIDDEN_TEXT);
  }
  get ariaRoleDescNavigationList() {
    let key = SIDE_NAVIGATION_LIST_ARIA_ROLE_DESC;
    if (this.collapsed) {
      key = SIDE_NAVIGATION_COLLAPSED_LIST_ARIA_ROLE_DESC;
    }
    return SideNavigation_1.i18nBundle.getText(key);
  }
  get overflowAccessibleName() {
    return SideNavigation_1.i18nBundle.getText(SIDE_NAVIGATION_OVERFLOW_ACCESSIBLE_NAME);
  }
  handlePopupItemClick(e) {
    var _a;
    const associatedItem = e.target.associatedItem;
    if (isInstanceOfSideNavigationItem(associatedItem) && associatedItem.unselectable) {
      return;
    }
    e.stopPropagation();
    associatedItem.fireEvent("click");
    if (associatedItem.selected) {
      this.closePicker();
      return;
    }
    this._selectItem(associatedItem);
    this.closePicker();
    (_a = this._popoverContents.item) == null ? void 0 : _a.getDomRef().classList.add("ui5-sn-item-no-hover-effect");
  }
  handleOverflowItemClick(e) {
    var _a;
    const associatedItem = (_a = e.detail) == null ? void 0 : _a.item.associatedItem;
    associatedItem.fireEvent("click");
    if (associatedItem.selected) {
      this.closeMenu();
      return;
    }
    this._selectItem(associatedItem);
    this.closeMenu();
    if (associatedItem.nodeName.toLowerCase() === "ui5-side-navigation-sub-item") {
      const parent = associatedItem.parentElement;
      this.focusItem(parent);
      parent == null ? void 0 : parent.focus();
    } else {
      this.focusItem(associatedItem);
      associatedItem == null ? void 0 : associatedItem.focus();
    }
  }
  getOverflowPopover() {
    return this.shadowRoot.querySelector(".ui5-side-navigation-overflow-menu");
  }
  getPicker() {
    return this.shadowRoot.querySelector("[ui5-responsive-popover]");
  }
  openPicker(opener2) {
    opener2.classList.add("ui5-sn-item-active");
    const responsivePopover = this.getPicker();
    responsivePopover.opener = opener2;
    responsivePopover.open = true;
  }
  openOverflowMenu(opener2) {
    opener2.classList.add("ui5-sn-item-active");
    const menu = this.getOverflowPopover();
    menu.opener = opener2;
    menu.open = true;
  }
  closePicker() {
    const responsivePopover = this.getPicker();
    responsivePopover.open = false;
  }
  closeMenu() {
    const menu = this.getOverflowPopover();
    menu.open = false;
  }
  getPickerTree() {
    const picker = this.getPicker();
    return picker.querySelector("[ui5-side-navigation]");
  }
  get hasHeader() {
    return !!this.header.length;
  }
  get showHeader() {
    return this.hasHeader && !this.collapsed;
  }
  get hasFixedItems() {
    return !!this.fixedItems.length;
  }
  get _rootRole() {
    return this.inPopover ? "none" : void 0;
  }
  getEnabledFixedItems() {
    return this.getEnabledItems(this.fixedItems);
  }
  getEnabledFlexibleItems() {
    const items3 = this.getEnabledItems(this.items);
    if (this._overflowItem) {
      items3.push(this._overflowItem);
    }
    return items3;
  }
  getEnabledItems(items3) {
    const result = new Array();
    this._getFocusableItems(items3).forEach((item2) => {
      if (this.collapsed && item2.classList.contains("ui5-sn-item-hidden")) {
        return;
      }
      if (!item2.disabled) {
        result.push(item2);
      }
    });
    return result;
  }
  focusItem(item2) {
    if (item2.isFixedItem) {
      this._fixedItemNavigation.setCurrentItem(item2);
    } else {
      this._flexibleItemNavigation.setCurrentItem(item2);
    }
  }
  onAfterRendering() {
    var _a;
    if (!((_a = this.getDomRef()) == null ? void 0 : _a.matches(":focus-within"))) {
      let selectedItem = this._findSelectedItem(this.items);
      if (selectedItem) {
        this._flexibleItemNavigation.setCurrentItem(selectedItem);
      }
      selectedItem = this._findSelectedItem(this.fixedItems);
      if (selectedItem) {
        this._fixedItemNavigation.setCurrentItem(selectedItem);
      }
    }
    if (this.collapsed) {
      this.handleResize();
    }
  }
  onEnterDOM() {
    ResizeHandler_default.register(this, this._handleResizeBound);
    this.isTouchDevice = isPhone() || isTablet() && !isCombi();
  }
  onExitDOM() {
    ResizeHandler_default.deregister(this, this._handleResizeBound);
  }
  handleResize() {
    this._updateOverflowItems();
  }
  _updateOverflowItems() {
    const domRef = this.getDomRef();
    if (!this.collapsed || !domRef) {
      return null;
    }
    const overflowItem = this._overflowItem;
    const flexibleContentDomRef = domRef.querySelector(".ui5-sn-flexible");
    if (!overflowItem) {
      return null;
    }
    overflowItem.classList.add("ui5-sn-item-hidden");
    const overflowItems = this.overflowItems;
    let itemsHeight = overflowItems.reduce((sum, itemRef) => {
      itemRef.classList.remove("ui5-sn-item-hidden");
      return sum + itemRef.offsetHeight;
    }, 0);
    const { paddingTop, paddingBottom } = window.getComputedStyle(flexibleContentDomRef);
    const listHeight = (flexibleContentDomRef == null ? void 0 : flexibleContentDomRef.offsetHeight) - parseInt(paddingTop) - parseInt(paddingBottom);
    if (itemsHeight <= listHeight) {
      return;
    }
    overflowItem.classList.remove("ui5-sn-item-hidden");
    itemsHeight = overflowItem.offsetHeight;
    const selectedItem = overflowItems.filter(isInstanceOfSideNavigationSelectableItemBase).find((item2) => item2._selected);
    if (selectedItem) {
      const selectedItemDomRef = selectedItem.getDomRef();
      const { marginTop, marginBottom } = window.getComputedStyle(selectedItemDomRef);
      itemsHeight += selectedItemDomRef.offsetHeight + parseFloat(marginTop) + parseFloat(marginBottom);
    }
    overflowItems.forEach((item2) => {
      if (item2 === selectedItem) {
        return;
      }
      let itemDomRef;
      if (isInstanceOfSideNavigationItemBase(item2) && item2.getDomRef()) {
        itemDomRef = item2.getDomRef();
      } else {
        itemDomRef = item2;
      }
      if (itemDomRef) {
        const { marginTop, marginBottom } = window.getComputedStyle(itemDomRef);
        itemsHeight += itemDomRef.offsetHeight + parseFloat(marginTop) + parseFloat(marginBottom);
        if (itemsHeight > listHeight) {
          item2.classList.add("ui5-sn-item-hidden");
        }
      }
    });
    this._flexibleItemNavigation._init();
  }
  _findFocusedItem(items3) {
    return this._getFocusableItems(items3).find((item2) => item2.forcedTabIndex === "0");
  }
  _getSelectableItems(items3) {
    return items3.reduce((result, item2) => {
      return result.concat(item2.selectableItems);
    }, new Array());
  }
  _getFocusableItems(items3) {
    return items3.reduce((result, item2) => {
      return result.concat(item2.focusableItems);
    }, new Array());
  }
  _getAllItems(items3) {
    return items3.reduce((result, item2) => {
      return result.concat(item2.allItems);
    }, new Array());
  }
  _findSelectedItem(items3) {
    return this._getSelectableItems(items3).find((item2) => item2._selected);
  }
  get overflowItems() {
    return this.items.reduce((result, item2) => {
      return result.concat(item2.overflowItems);
    }, new Array());
  }
  _handleItemClick(e, item2) {
    if (item2.selected && !this.collapsed) {
      item2.fireDecoratorEvent("click");
      return;
    }
    if (this.collapsed && isInstanceOfSideNavigationItem(item2) && item2.items.length) {
      e.preventDefault();
      this._isOverflow = false;
      this._popoverContents = {
        item: item2,
        subItems: item2.items
      };
      this.openPicker(item2.getFocusDomRef());
    } else {
      item2.fireDecoratorEvent("click");
      if (!item2.selected) {
        this._selectItem(item2);
      }
    }
  }
  _handleOverflowClick() {
    this._isOverflow = true;
    this._menuPopoverItems = this._getOverflowItems();
    this.openOverflowMenu(this._overflowItem.getFocusDomRef());
  }
  _getOverflowItems() {
    const overflowClass = "ui5-sn-item-hidden";
    const result = [];
    this.overflowItems.forEach((item2) => {
      if (isInstanceOfSideNavigationItem(item2) && item2.classList.contains(overflowClass)) {
        result.push(item2);
      }
    });
    return result;
  }
  _selectItem(item2) {
    if (!item2.isSelectable) {
      return;
    }
    if (!this.fireDecoratorEvent("selection-change", { item: item2 })) {
      return;
    }
    let items3 = this._getSelectableItems(this.items);
    items3 = items3.concat(this._getSelectableItems(this.fixedItems));
    items3.forEach((current) => {
      current.selected = false;
    });
    item2.selected = true;
  }
  get _overflowItem() {
    const overflowItem = this.shadowRoot.querySelector(".ui5-sn-item-overflow");
    if (overflowItem) {
      overflowItem.sideNavigation = this;
    }
    return overflowItem;
  }
  get isOverflow() {
    return this._isOverflow;
  }
  _onkeydownOverflow(e) {
    if (isSpace(e)) {
      e.preventDefault();
    }
    if (isEnter(e)) {
      this._handleOverflowClick();
    }
  }
  _onkeyupOverflow(e) {
    if (isSpace(e)) {
      this._handleOverflowClick();
    }
  }
  captureRef(ref) {
    if (ref) {
      ref.associatedItem = this;
    }
  }
};
__decorate91([
  property_default({ type: Boolean })
], SideNavigation.prototype, "collapsed", void 0);
__decorate91([
  slot_default({ type: HTMLElement, invalidateOnChildChange: true, "default": true })
], SideNavigation.prototype, "items", void 0);
__decorate91([
  slot_default({ type: HTMLElement, invalidateOnChildChange: true })
], SideNavigation.prototype, "fixedItems", void 0);
__decorate91([
  slot_default()
], SideNavigation.prototype, "header", void 0);
__decorate91([
  property_default({ type: Object })
], SideNavigation.prototype, "_popoverContents", void 0);
__decorate91([
  property_default({ type: Boolean })
], SideNavigation.prototype, "inPopover", void 0);
__decorate91([
  property_default({ type: Object })
], SideNavigation.prototype, "_menuPopoverItems", void 0);
__decorate91([
  property_default({ type: Boolean })
], SideNavigation.prototype, "isTouchDevice", void 0);
__decorate91([
  i18n_default("@ui5/webcomponents-fiori")
], SideNavigation, "i18nBundle", void 0);
SideNavigation = SideNavigation_1 = __decorate91([
  customElement_default({
    tag: "ui5-side-navigation",
    fastNavigation: true,
    renderer: JsxRenderer_default,
    template: SideNavigationTemplate2,
    styles: [SideNavigation_css_default, SideNavigationPopover_css_default, getEffectiveScrollbarStyle_default()]
  }),
  event_strict_default("selection-change", {
    bubbles: true,
    cancelable: true
  })
], SideNavigation);
SideNavigation.define();
var SideNavigation_default = SideNavigation;

// node_modules/@ui5/webcomponents-react/dist/webComponents/SideNavigation/index.js
var SideNavigation3 = withWebComponent("ui5-side-navigation", [], ["collapsed"], ["fixedItems", "header"], ["selection-change"]);
SideNavigation3.displayName = "SideNavigation";

// node_modules/@ui5/webcomponents-fiori/dist/SideNavigationGroupTemplate.js
function SideNavigationGroupTemplate() {
  if (this.sideNavCollapsed) {
    return jsxs(Fragment, { children: [jsx("div", { class: `ui5-sn-item-separator ${this.belowGroupClassName}` }), jsx("slot", {}), jsx("div", { class: "ui5-sn-item-separator" })] });
  }
  return TreeItemTemplate2.call(this);
}
function TreeItemTemplate2() {
  return jsxs("li", { id: this._id, class: `ui5-sn-list-li ${this.belowGroupClassName}`, role: "none", children: [jsx("div", { class: "ui5-sn-item-separator" }), jsxs("div", { class: `ui5-sn-item ui5-sn-item-group ${this._classes}`, role: "treeitem", "data-sap-focus-ref": true, onKeyDown: this._onkeydown, onClick: this._onclick, onFocusIn: this._onfocusin, tabIndex: this.effectiveTabIndex ? parseInt(this.effectiveTabIndex) : void 0, "aria-expanded": this._expanded, "aria-description": this.accDescription, title: this._tooltip, "aria-owns": this._groupId, children: [jsx("div", { class: "ui5-sn-item-text", children: this.text }), !!this.items.length && jsx(Icon_default, { class: "ui5-sn-item-toggle-icon", name: this.expanded ? navigation_down_arrow_default : navigation_right_arrow_default })] }), !!this.items.length && jsx("ul", { id: this._groupId, class: "ui5-sn-item-ul", role: "group", children: jsx("slot", {}) }), jsx("div", { class: "ui5-sn-item-separator" })] });
}

// node_modules/@ui5/webcomponents-fiori/dist/generated/themes/SideNavigationGroup.css.js
registerThemePropertiesLoader("@ui5/webcomponents-theming", "sap_horizon", async () => parameters_bundle_css_default);
registerThemePropertiesLoader("@ui5/webcomponents-fiori", "sap_horizon", async () => parameters_bundle_css_default3);
var SideNavigationGroup_css_default = `.ui5-sn-item-ul{margin:0;padding:0;list-style:none}.ui5-sn-item{display:flex;align-items:center;width:auto;box-sizing:border-box;text-decoration:none;position:relative;height:var(--_ui5-v2-8-0_side_navigation_item_height);min-height:var(--_ui5-v2-8-0_side_navigation_item_height);cursor:pointer;color:inherit;background-color:var(--sapList_Background);border-radius:var(--_ui5-v2-8-0_side_navigation_item_border_radius);transition:var(--_ui5-v2-8-0_side_navigation_item_transition);margin-block-end:var(--_ui5-v2-8-0_side_navigation_item_bottom_margin)}:host(.ui5-sn-item-hidden[side-nav-collapsed]),:host([side-nav-collapsed]) .ui5-sn-item-hidden{display:none}:host([design="Action"]){color:var(--sapButton_TextColor)}:host([design="Action"]) .ui5-sn-item:not(.ui5-sn-item-disabled):active [ui5-icon],:host([design="Action"]) .ui5-sn-item:not(.ui5-sn-item-disabled):active .ui5-sn-item-text{color:var(--_ui5-v2-8-0_side_navigation_active_text_color)}:host([design="Action"]) .ui5-sn-item{border:var(--sapButton_BorderWidth) solid var(--sapButton_BorderColor);box-sizing:content-box}:host([design="Action"]:not([side-nav-collapsed])) .ui5-sn-item{max-width:-moz-available;max-width:-webkit-fill-available;max-width:fill-available}:host([design="Action"]) .ui5-sn-item:not(.ui5-sn-item-disabled):hover{border:var(--_ui5-v2-8-0_side_navigation_action_item_border_hover);background:var(--sapButton_Hover_Background)}:host([design="Action"]) .ui5-sn-item:not(.ui5-sn-item-disabled):active{border:var(--_ui5-v2-8-0_side_navigation_action_item_border_active);background:var(--sapButton_Active_Background)}.ui5-sn-item:focus{outline:none}:host([desktop]) .ui5-sn-item:focus:after,.ui5-sn-item:focus-visible:after{border:var(--sapContent_FocusWidth) var(--sapContent_FocusStyle) var(--sapContent_FocusColor);position:absolute;content:"";inset:var(--_ui5-v2-8-0_side_navigation_item_focus_border_offset);z-index:2;pointer-events:none;border-radius:var(--_ui5-v2-8-0_side_navigation_item_focus_border_radius)}.ui5-sn-item:not(.ui5-sn-item-disabled).ui5-sn-item-selected:focus:before{border:var(--_ui5-v2-8-0_side_navigation_selected_and_focused_border_style_color)}.ui5-sn-item.ui5-sn-item-group:before,.ui5-sn-item.ui5-sn-item-level1:before{border:var(--_ui5-v2-8-0_side_navigation_group_border_style_color);border-width:var(--_ui5-v2-8-0_side_navigation_group_border_width)}.ui5-sn-item-group[aria-expanded=true]:before,.ui5-sn-item-level1[aria-expanded=true]:before{border-width:var(--_ui5-v2-8-0_side_navigation_group_expanded_border_width)}.ui5-sn-item:before{content:"";position:absolute;inset:0;pointer-events:none}.ui5-sn-item.ui5-sn-item-disabled{opacity:var(--sapContent_DisabledOpacity);cursor:default}:host([ui5-side-navigation-item][in-popover][unselectable]) .ui5-sn-item{cursor:unset}:host(:not([ui5-side-navigation-item][in-popover][unselectable])) .ui5-sn-item:not(.ui5-sn-item-disabled):hover{background:var(--sapList_Hover_Background)}.ui5-sn-item:not(.ui5-sn-item-disabled).ui5-sn-item-selected{background:var(--_ui5-v2-8-0_side_navigation_collapsed_selected_item_background)}.ui5-sn-item:not(.ui5-sn-item-disabled):active .ui5-sn-item-text,.ui5-sn-item:not(.ui5-sn-item-disabled).ui5-sn-item-active .ui5-sn-item-text{color:var(--sapList_Active_TextColor)}.ui5-sn-item:not(.ui5-sn-item-disabled):active [ui5-icon],.ui5-sn-item:not(.ui5-sn-item-disabled).ui5-sn-item-active [ui5-icon]{color:var(--sapList_Active_TextColor)}.ui5-sn-item:not(.ui5-sn-item-disabled).ui5-sn-item-selected:hover{background:var(--_ui5-v2-8-0_side_navigation_collapsed_selected_item_background_hover)}.ui5-sn-item:not(.ui5-sn-item-disabled).ui5-sn-item-selected:active,.ui5-sn-item:not(.ui5-sn-item-disabled).ui5-sn-item-selected.ui5-sn-item-active,:host(:not([ui5-side-navigation-item][in-popover][unselectable])) .ui5-sn-item:not(.ui5-sn-item-disabled):active,.ui5-sn-item:not(.ui5-sn-item-disabled).ui5-sn-item-active,:host([side-nav-collapsed]) .ui5-sn-item:not(.ui5-sn-item-disabled).ui5-sn-item-selected:active,:host([side-nav-collapsed]) .ui5-sn-item:not(.ui5-sn-item-disabled).ui5-sn-item-selected.ui5-sn-item-active{background:var(--sapList_Active_Background)}.ui5-sn-item:before{border:var(--_ui5-v2-8-0_side_navigation_item_border_style_color);border-width:var(--_ui5-v2-8-0_side_navigation_item_border_width)}:host([side-nav-collapsed]) .ui5-sn-item:before{border-width:var(--_ui5-v2-8-0_side_navigation_item_border_width)}.ui5-sn-item:not(.ui5-sn-item-disabled).ui5-sn-item-selected:before{border:var(--_ui5-v2-8-0_side_navigation_selected_border_style_color);border-width:var(--_ui5-v2-8-0_side_navigation_selected_border_width)}:host(:not([design="Action"])) .ui5-sn-item:not(.ui5-sn-item-disabled):not(.ui5-sn-item-selected):hover:before{border:var(--_ui5-v2-8-0_side_navigation_hover_border_style_color);border-width:var(--_ui5-v2-8-0_side_navigation_hover_border_width)}:host([side-nav-collapsed]) .ui5-sn-item:not(.ui5-sn-item-disabled).ui5-sn-item-selected:before{border-radius:var(--_ui5-v2-8-0_side_navigation_item_border_radius)}:host([in-popover]:last-of-type) .ui5-sn-item:not(:hover):not(:active):before{border:var(--_ui5-v2-8-0_side_navigation_last_item_border_style)}.ui5-sn-item-icon{color:var(--_ui5-v2-8-0_side_navigation_icon_color);padding-inline-start:1rem;padding-inline-end:var(--_ui5-v2-8-0_side_navigation_icon_padding_inline_end)}:host([design="Action"]) .ui5-sn-item-icon{color:var(--sapButton_TextColor)}.ui5-sn-item-toggle-icon,.ui5-sn-item-external-link-icon{color:var(--_ui5-v2-8-0_side_navigation_expand_icon_color);min-width:2rem;height:.875rem}:host([design="Action"]) .ui5-sn-item-toggle-icon,:host([design="Action"]) .ui5-sn-item-external-link-icon{color:var(--sapButton_TextColor)}.ui5-sn-item-external-link-icon{min-width:3rem}:host([side-nav-collapsed]) .ui5-sn-item:not(.ui5-sn-item-active):not(.ui5-sn-item-no-hover-effect):hover .ui5-sn-item-toggle-icon,:host([side-nav-collapsed]) .ui5-sn-item:not(.ui5-sn-item-active):not(.ui5-sn-item-no-hover-effect):focus .ui5-sn-item-toggle-icon,:host(:not([side-nav-collapsed])) .ui5-sn-item-toggle-icon{min-width:var(--_ui5-v2-8-0_side_navigation_expand_icon_width);padding-inline:.25rem .375rem;padding-block:.25rem;border-inline-start:.0625rem solid var(--sapTextColor);margin-inline-start:1rem}:host([unselectable]:not([side-nav-collapsed])) .ui5-sn-item-toggle-icon,:host(:not([side-nav-collapsed])) .ui5-sn-item-group .ui5-sn-item-toggle-icon,:host([unselectable][side-nav-collapsed]) .ui5-sn-item:not(.ui5-sn-item-active):not(.ui5-sn-item-no-hover-effect):hover .ui5-sn-item-toggle-icon,:host([unselectable][side-nav-collapsed]) .ui5-sn-item:not(.ui5-sn-item-active):not(.ui5-sn-item-no-hover-effect):focus .ui5-sn-item-toggle-icon{border-inline-start:none}:host([in-popover]) .ui5-sn-item-toggle-icon{display:none}:host([side-nav-collapsed]) .ui5-sn-item{justify-content:center}:host([slot="fixedItems"]:not(side-nav-collapsed)) .ui5-sn-item.ui5-sn-item-level1{margin-top:var(--_ui5-v2-8-0_side_navigation_first_fixed_item_margin_top)}:host([side-nav-collapsed]) .ui5-sn-item-icon{padding-inline-end:1rem}:host([design="Action"][side-nav-collapsed]) .ui5-sn-item-icon{padding-inline-end:calc(1rem - 1px);padding-inline-start:calc(1rem - 1px)}:host([side-nav-collapsed]) .ui5-sn-item-text{display:none}:host([side-nav-collapsed]) .ui5-sn-item-toggle-icon{display:var(--_ui5-v2-8-0_side_navigation_item_expand_icon_visibility);font-size:.75rem;position:absolute;inset-inline-end:var(--_ui5-v2-8-0_side_navigation_item_expand_icon_right)}:host([side-nav-collapsed]) .ui5-sn-item-external-link-icon{display:none}:host([side-nav-collapsed]) .ui5-sn-item:not(.ui5-sn-item-active):not(.ui5-sn-item-no-hover-effect):hover,:host([side-nav-collapsed]) .ui5-sn-item:not(.ui5-sn-item-active):not(.ui5-sn-item-no-hover-effect):focus{width:var(--_ui5-v2-8-0_side_navigation_item_collapsed_hover_focus_width);box-shadow:var(--_ui5-v2-8-0_side_navigation_box_shadow);z-index:1;padding-inline-end:var(--_ui5-v2-8-0_side_navigation_item_collapsed_padding_right)}:host([side-nav-collapsed]) a.ui5-sn-item:not(.ui5-sn-item-active):not(.ui5-sn-item-no-hover-effect):hover:not(.ui5-sn-item-with-expander),:host([side-nav-collapsed]) a.ui5-sn-item:not(.ui5-sn-item-active):not(.ui5-sn-item-no-hover-effect):focus:not(.ui5-sn-item-with-expander){padding-inline-end:0}:host([unselectable][side-nav-collapsed]) .ui5-sn-item.ui5-sn-item.ui5-sn-item-with-expander:not(.ui5-sn-item-active):not(.ui5-sn-item-no-hover-effect):hover,:host([unselectable][side-nav-collapsed]) .ui5-sn-item.ui5-sn-item.ui5-sn-item-with-expander:not(.ui5-sn-item-active):not(.ui5-sn-item-no-hover-effect):focus{padding-inline-end:var(--_ui5-v2-8-0_side_navigation_item_collapsed_unselectable_padding)}:host([unselectable][side-nav-collapsed]) div.ui5-sn-item:not(.ui5-sn-item-active):not(.ui5-sn-item-no-hover-effect):not(.ui5-sn-item-with-expander):hover,:host([unselectable][side-nav-collapsed]) div.ui5-sn-item:not(.ui5-sn-item-active):not(.ui5-sn-item-no-hover-effect):not(.ui5-sn-item-with-expander):focus{padding-inline-end:var(--_ui5-v2-8-0_side_navigation_action_item_collapsed_padding)}:host([side-nav-collapsed]) .ui5-sn-item.ui5-sn-item-selected:hover,:host([side-nav-collapsed]) .ui5-sn-item.ui5-sn-item-selected:focus{background:var(--sapList_SelectionBackgroundColor)}:host([side-nav-collapsed]) div.ui5-sn-item:not(.ui5-sn-item-active):not(.ui5-sn-item-no-hover-effect):hover:not(.ui5-sn-item-with-expander),:host([side-nav-collapsed]) div.ui5-sn-item:not(.ui5-sn-item-active):not(.ui5-sn-item-no-hover-effect):focus:not(.ui5-sn-item-with-expander),:host([side-nav-collapsed]) a.ui5-sn-item:not(.ui5-sn-item-active):not(.ui5-sn-item-no-hover-effect):hover:not(.ui5-sn-item-with-expander):not([target=_blank]),:host([side-nav-collapsed]) a.ui5-sn-item:not(.ui5-sn-item-active):not(.ui5-sn-item-no-hover-effect):focus:not(.ui5-sn-item-with-expander):not([target=_blank]){padding-inline-end:var(--_ui5-v2-8-0_side_navigation_item_collapsed_hover_focus_padding_right)}:host([side-nav-collapsed]) .ui5-sn-item:not(.ui5-sn-item-active):not(.ui5-sn-item-no-hover-effect):hover .ui5-sn-item-text,:host([side-nav-collapsed]) .ui5-sn-item:not(.ui5-sn-item-active):not(.ui5-sn-item-no-hover-effect):focus .ui5-sn-item-text,:host([side-nav-collapsed]) .ui5-sn-item:not(.ui5-sn-item-active):not(.ui5-sn-item-no-hover-effect):hover .ui5-sn-item-toggle-icon,:host([side-nav-collapsed]) .ui5-sn-item:not(.ui5-sn-item-active):not(.ui5-sn-item-no-hover-effect):hover .ui5-sn-item-external-link-icon,:host([side-nav-collapsed]) .ui5-sn-item:not(.ui5-sn-item-active):not(.ui5-sn-item-no-hover-effect):focus .ui5-sn-item-toggle-icon,:host([side-nav-collapsed]) .ui5-sn-item:not(.ui5-sn-item-active):not(.ui5-sn-item-no-hover-effect):focus .ui5-sn-item-external-link-icon{display:var(--_ui5-v2-8-0_side_navigation_item_collapsed_hover_focus_display)}:host([side-nav-collapsed]) .ui5-sn-item:not(.ui5-sn-item-active):not(.ui5-sn-item-no-hover-effect):hover .ui5-sn-item-toggle-icon,:host([side-nav-collapsed]) .ui5-sn-item:not(.ui5-sn-item-active):not(.ui5-sn-item-no-hover-effect):focus .ui5-sn-item-toggle-icon{left:var(--_ui5-v2-8-0_side_navigation_item_expand_icon_hover_left);right:var(--_ui5-v2-8-0_side_navigation_item_expand_icon_hover_right)}.ui5-sn-item[aria-expanded=false]~.ui5-sn-item-ul{display:none}.ui5-sn-item-text{flex:1;min-width:0;overflow:hidden;text-overflow:ellipsis;white-space:nowrap}.ui5-sn-item-with-expander .ui5-sn-item-icon:after{display:var(--_ui5-v2-8-0_side_navigation_triangle_display);content:"";width:0;height:0;border-left:.375rem solid transparent;border-bottom:.375rem solid var(--_ui5-v2-8-0_side_navigation_triangle_color);position:absolute;right:.1875rem;bottom:.125rem}.ui5-sn-item-separator{min-height:.625rem}:host{font-size:var(--sapFontSmallSize);font-family:var(--sapFontSemiboldFamily);color:var(--sapContent_LabelColor)}.ui5-sn-item.ui5-sn-item-group{min-height:2rem;padding-inline-start:var(--_ui5-v2-8-0_side_navigation_group_padding);gap:.4375rem;font-family:var(--sapFontFamily);font-size:var(--sapFontSize)}.ui5-sn-item.ui5-sn-item-group:hover .ui5-sn-item-toggle-icon,.ui5-sn-item.ui5-sn-item-group:focus .ui5-sn-item-toggle-icon{display:block}:host(:first-child) .ui5-sn-item-separator:first-child,:host(:last-child) .ui5-sn-item-separator:last-child,.ui5-sn-item-group-below-group.ui5-sn-item-separator,.ui5-sn-item-group-below-group .ui5-sn-item-separator:first-child{display:none}.ui5-sn-spacer{margin:var(--_ui5-v2-8-0_side_navigation_navigation_separator_margin);height:var(--_ui5-v2-8-0_side_navigation_navigation_separator_height);min-height:var(--_ui5-v2-8-0_side_navigation_navigation_separator_height);background-color:var(--_ui5-v2-8-0_side_navigation_navigation_separator_background_color);border-radius:var(--_ui5-v2-8-0_side_navigation_navigation_separator_radius)}.ui5-sn-collapsed .ui5-sn-spacer{margin:var(--_ui5-v2-8-0_side_navigation_navigation_separator_margin_collapsed)}
`;

// node_modules/@ui5/webcomponents-fiori/dist/SideNavigationGroup.js
var __decorate92 = function(decorators, target, key, desc) {
  var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
  if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
  else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
  return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var SideNavigationGroup_1;
var SideNavigationGroup = SideNavigationGroup_1 = class SideNavigationGroup2 extends SideNavigationItemBase_default {
  constructor() {
    super(...arguments);
    this.expanded = false;
  }
  get overflowItems() {
    const separator1 = this.shadowRoot.querySelector(".ui5-sn-item-separator:first-child");
    const separator2 = this.shadowRoot.querySelector(".ui5-sn-item-separator:last-child");
    const overflowItems = this.items.reduce((result, item2) => {
      return result.concat(item2.overflowItems);
    }, new Array());
    return [separator1, ...overflowItems, separator2];
  }
  get selectableItems() {
    return this.items.reduce((result, item2) => {
      return result.concat(item2.selectableItems);
    }, new Array());
  }
  get focusableItems() {
    if (this.sideNavCollapsed) {
      return this.items;
    }
    if (this.expanded) {
      return this.items.reduce((result, item2) => {
        return result.concat(item2.focusableItems);
      }, new Array(this));
    }
    return [this];
  }
  get allItems() {
    return this.items.reduce((result, item2) => {
      return result.concat(item2.allItems);
    }, new Array(this));
  }
  get _groupId() {
    if (!this.items.length) {
      return void 0;
    }
    return `${this._id}-group`;
  }
  get _expanded() {
    if (!this.items.length) {
      return void 0;
    }
    return this.expanded;
  }
  get belowGroupClassName() {
    if (isInstanceOfSideNavigationGroup(this.previousElementSibling)) {
      return "ui5-sn-item-group-below-group";
    }
    return "";
  }
  get accDescription() {
    return SideNavigationGroup_1.i18nBundle.getText(SIDE_NAVIGATION_GROUP_HEADER_DESC);
  }
  _onkeydown(e) {
    if (isLeft(e)) {
      this.expanded = false;
      return;
    }
    if (isRight(e)) {
      this.expanded = true;
    }
  }
  _onclick() {
    this._toggle();
  }
  _onfocusin(e) {
    var _a;
    e.stopPropagation();
    (_a = this.sideNavigation) == null ? void 0 : _a.focusItem(this);
  }
  _toggle() {
    this.expanded = !this.expanded;
  }
  get isSideNavigationGroup() {
    return true;
  }
};
__decorate92([
  property_default({ type: Boolean })
], SideNavigationGroup.prototype, "expanded", void 0);
__decorate92([
  slot_default({ type: HTMLElement, invalidateOnChildChange: true, "default": true })
], SideNavigationGroup.prototype, "items", void 0);
__decorate92([
  i18n_default("@ui5/webcomponents-fiori")
], SideNavigationGroup, "i18nBundle", void 0);
SideNavigationGroup = SideNavigationGroup_1 = __decorate92([
  customElement_default({
    tag: "ui5-side-navigation-group",
    renderer: JsxRenderer_default,
    template: SideNavigationGroupTemplate,
    styles: SideNavigationGroup_css_default
  })
], SideNavigationGroup);
SideNavigationGroup.define();
var isInstanceOfSideNavigationGroup = (object) => {
  return "isSideNavigationGroup" in object;
};

// node_modules/@ui5/webcomponents-react/dist/webComponents/SideNavigationGroup/index.js
var SideNavigationGroup3 = withWebComponent("ui5-side-navigation-group", ["text", "tooltip"], ["disabled", "expanded"], [], []);
SideNavigationGroup3.displayName = "SideNavigationGroup";

// node_modules/@ui5/webcomponents-react/dist/webComponents/SideNavigationItem/index.js
var SideNavigationItem3 = withWebComponent("ui5-side-navigation-item", ["accessibilityAttributes", "design", "href", "icon", "target", "text", "tooltip"], ["disabled", "expanded", "selected", "unselectable"], [], ["click"]);
SideNavigationItem3.displayName = "SideNavigationItem";

// node_modules/@ui5/webcomponents-react/dist/webComponents/SideNavigationSubItem/index.js
var SideNavigationSubItem3 = withWebComponent("ui5-side-navigation-sub-item", ["accessibilityAttributes", "design", "href", "icon", "target", "text", "tooltip"], ["disabled", "selected", "unselectable"], [], ["click"]);
SideNavigationSubItem3.displayName = "SideNavigationSubItem";

// node_modules/@ui5/webcomponents-react/dist/webComponents/Slider/index.js
var Slider = withWebComponent("ui5-slider", ["accessibleName", "labelInterval", "max", "min", "name", "step", "value"], ["disabled", "editableTooltip", "showTickmarks", "showTooltip"], [], ["change", "input"]);
Slider.displayName = "Slider";

// node_modules/@ui5/webcomponents-fiori/dist/SortItem.js
var __decorate93 = function(decorators, target, key, desc) {
  var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
  if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
  else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
  return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var SortItem = class SortItem2 extends UI5Element_default {
  constructor() {
    super(...arguments);
    this.selected = false;
  }
};
__decorate93([
  property_default()
], SortItem.prototype, "text", void 0);
__decorate93([
  property_default({ type: Boolean })
], SortItem.prototype, "selected", void 0);
SortItem = __decorate93([
  customElement_default("ui5-sort-item")
], SortItem);
SortItem.define();

// node_modules/@ui5/webcomponents-react/dist/webComponents/SortItem/index.js
var SortItem3 = withWebComponent("ui5-sort-item", ["text"], ["selected"], [], []);
SortItem3.displayName = "SortItem";

// node_modules/@ui5/webcomponents-react/dist/webComponents/SpecialCalendarDate/index.js
var SpecialCalendarDate3 = withWebComponent("ui5-special-date", ["type", "value"], [], [], []);
SpecialCalendarDate3.displayName = "SpecialCalendarDate";

// node_modules/@ui5/webcomponents/dist/SplitButtonTemplate.js
function SplitButtonTemplate() {
  return jsxs("div", { role: this._hideArrowButton ? "button" : "group", class: "ui5-split-button-root", tabindex: this._tabIndex, "aria-labelledby": `${this._id}-invisibleTextDefault ${this._id}}-invisibleText`, onFocusOut: this._onFocusOut, onFocusIn: this._onFocusIn, onKeyDown: this._onKeyDown, onKeyUp: this._onKeyUp, children: [jsx(Button_default, { class: "ui5-split-text-button", design: this.design, icon: this.icon, endIcon: this._endIcon, tabindex: -1, disabled: this.disabled, active: this._textButtonActive, exportparts: "icon,endIcon,button", onClick: this._handleMouseClick, onTouchStart: this.handleTouchStart, onMouseDown: this.handleTouchStart, onMouseUp: this._textButtonRelease, onFocusIn: this._onInnerButtonFocusIn, onFocusOut: this._onFocusOut, children: this.isTextButton && jsx("slot", {}) }), !this._hideArrowButton && jsx(Button_default, { class: "ui5-split-arrow-button", design: this.design, icon: slim_arrow_down_default, tabindex: -1, tooltip: this.accInfo.arrowButton.title, accessibilityAttributes: this.accInfo.arrowButton.accessibilityAttributes, disabled: this.disabled, active: this.effectiveActiveArrowButton, part: "arrowButton", onClick: this._handleArrowButtonAction, onMouseDown: this._arrowButtonPress, onMouseUp: this._arrowButtonRelease, onFocusIn: this._onInnerButtonFocusIn, onActiveStateChange: this._onArrowButtonActiveStateChange }), jsxs("span", { id: `${this._id}-invisibleText`, class: "ui5-hidden-text", children: [this.accInfo.root.description, " ", this.accInfo.root.keyboardHint, " ", this.accessibleName] }), jsx("span", { id: `${this._id}-invisibleTextDefault`, class: "ui5-hidden-text", children: this.textButtonAccText })] });
}

// node_modules/@ui5/webcomponents/dist/generated/themes/SplitButton.css.js
registerThemePropertiesLoader("@ui5/webcomponents-theming", "sap_horizon", async () => parameters_bundle_css_default);
registerThemePropertiesLoader("@ui5/webcomponents", "sap_horizon", async () => parameters_bundle_css_default2);
var SplitButton_css_default = `:host{vertical-align:middle}.ui5-hidden-text{position:absolute;clip:rect(1px,1px,1px,1px);user-select:none;left:-1000px;top:-1000px;pointer-events:none;font-size:0}:host(:not([hidden])){display:inline-flex;height:var(--_ui5-v2-8-0_button_base_height);border-radius:var(--_ui5-v2-8-0_button_border_radius);background-color:var(--sapButton_Background);box-shadow:var(--_ui5-v2-8-0_split_button_host_default_box_shadow)}:host([active-arrow-button][design="Negative"]) .ui5-split-arrow-button,:host([design="Negative"]) .ui5-split-arrow-button[active]{background-color:var(--sapButton_Reject_Selected_Background);border:.0625rem solid var(--sapButton_Reject_Active_BorderColor);color:var(--sapButton_Reject_Active_TextColor)}:host([active-arrow-button][design="Positive"]) .ui5-split-arrow-button,:host([design="Positive"]) .ui5-split-arrow-button[active]{background-color:var(--sapButton_Accept_Selected_Background);border:.0625rem solid var(--sapButton_Accept_Active_BorderColor);color:var(--sapButton_Accept_Active_TextColor)}:host([active-arrow-button][design="Attention"]) .ui5-split-arrow-button,:host([design="Attention"]) .ui5-split-arrow-button[active]{background-color:var(--sapButton_Attention_Selected_Background);border:.0625rem solid var(--sapButton_Attention_Active_BorderColor);color:var(--sapButton_Attention_Active_TextColor)}:host([active-arrow-button][design="Emphasized"]) .ui5-split-arrow-button,:host([design="Emphasized"]) .ui5-split-arrow-button[active]{background-color:var(--sapButton_Emphasized_Active_Background);border:.0625rem solid var(--sapButton_Emphasized_Active_BorderColor)}:host([active-arrow-button][design="Transparent"]) .ui5-split-arrow-button,:host([active-arrow-button]) .ui5-split-arrow-button,:host([design="Transparent"]) .ui5-split-arrow-button[active],:host([design="Default"]) .ui5-split-arrow-button[active],.ui5-split-arrow-button[active],.ui5-split-arrow-button[active]:hover{background-color:var(--sapButton_Active_Background);border:.0625rem solid var(--sapButton_Lite_Active_BorderColor);color:var(--sapButton_Active_TextColor)}:host([disabled]:not([hidden])){pointer-events:none;opacity:var(--sapContent_DisabledOpacity)}:host([design="Positive"]:not([hidden])){background-color:var(--sapButton_Accept_Background);box-shadow:var(--_ui5-v2-8-0_split_button_host_positive_box_shadow)}:host([design="Negative"]:not([hidden])){background-color:var(--sapButton_Reject_Background);box-shadow:var(--_ui5-v2-8-0_split_button_host_negative_box_shadow)}:host([design="Attention"]:not([hidden])){background-color:var(--sapButton_Attention_Background);box-shadow:var(--_ui5-v2-8-0_split_button_host_attention_box_shadow)}:host([design="Emphasized"]:not([hidden])){background-color:var(--sapButton_Emphasized_Background);box-shadow:var(--_ui5-v2-8-0_split_button_host_emphasized_box_shadow)}:host([design="Transparent"]:not([hidden])){background-color:var(--sapButton_Lite_Background);box-shadow:var(--_ui5-v2-8-0_split_button_host_transparent_box_shadow)}:host([design="Transparent"][disabled]:not([hidden])){background-color:var(--_ui5-v2-8-0_split_button_transparent_disabled_background)}:host([design="Transparent"]:not([hidden]):not([disabled]):hover){background-color:var(--_ui5-v2-8-0_split_button_host_transparent_hover_background);box-shadow:var(--_ui5-v2-8-0_split_button_host_transparent_hover_box_shadow)}:host([design="Transparent"]:not([hidden]):not([disabled]):hover) .ui5-split-arrow-button:not(:hover),:host([design="Transparent"]:not([hidden]):not([disabled]):hover) .ui5-split-text-button:not(:hover){color:var(--_ui5-v2-8-0_split_button_transparent_hover_color)}:host([desktop]) .ui5-split-button-root:focus-within,.ui5-split-button-root:focus-visible{outline:0}:host([desktop]) .ui5-split-button-root:focus-within:after,.ui5-split-button-root:focus-visible:after{content:"";position:absolute;box-sizing:border-box;inset:.125rem;border:var(--_ui5-v2-8-0_split_button_focused_border);pointer-events:none;border-radius:var(--_ui5-v2-8-0_split_button_focused_border_radius)}:host([design="Emphasized"][desktop]) .ui5-split-button-root:focus-within:after,:host([design="Emphasized"]) .ui5-split-button-root:focus-visible:after{border-color:var(--sapContent_ContrastFocusColor)}:host([design="Emphasized"][desktop]) .ui5-split-button-root:focus-within .ui5-split-text-button[active]::part(button):after,:host([design="Emphasized"]) .ui5-split-button-root:focus-visible .ui5-split-text-button[active]::part(button):after{content:"";position:absolute;box-sizing:border-box;inset:.0625rem;border:var(--_ui5-v2-8-0_split_button_focused_border);border-radius:var(--_ui5-v2-8-0_split_button_focused_border_radius)}:host([design="Emphasized"][desktop]) .ui5-split-button-root:has(.ui5-split-text-button[active]):after,:host([design="Emphasized"]) .ui5-split-button-root:has(.ui5-split-text-button[active]):after{border-color:transparent}.ui5-split-button-root{display:inline-flex;position:relative;width:inherit;height:100%}.ui5-split-button-root:focus,.ui5-split-text-button:focus,.ui5-split-arrow-button:focus{outline:0}.ui5-split-text-button{border-start-end-radius:var(--sapButton_Segment_BorderCornerRadius);border-end-end-radius:var(--sapButton_Segment_BorderCornerRadius);border-width:.0625rem;border-inline-end-width:var(--_ui5-v2-8-0_split_button_text_button_right_border_width);border-color:var(--_ui5-v2-8-0_split_text_button_border_color);background-color:var(--_ui5-v2-8-0_split_text_button_background_color);vertical-align:top;flex-grow:1}.ui5-split-text-button:hover{border-start-end-radius:var(--sapButton_Segment_BorderCornerRadius);border-end-end-radius:var(--sapButton_Segment_BorderCornerRadius);background-color:var(--sapButton_Hover_Background);box-shadow:none;border:var(--_ui5-v2-8-0_split_text_button_hover_border);border-inline-end:var(--_ui5-v2-8-0_split_text_button_hover_border_right)}.ui5-split-text-button[design=Emphasized]{border:var(--_ui5-v2-8-0_split_text_button_emphasized_border);border-width:var(--_ui5-v2-8-0_split_text_button_emphasized_border_width)}.ui5-split-text-button[design=Emphasized]:hover{background-color:var(--sapButton_Emphasized_Hover_Background)}.ui5-split-text-button[design=Positive]:hover{background-color:var(--sapButton_Accept_Hover_Background);border:var(--_ui5-v2-8-0_split_text_button_positive_hover_border);border-inline-end:var(--_ui5-v2-8-0_split_text_button_positive_hover_border_right)}.ui5-split-text-button[design=Negative]:hover{background-color:var(--sapButton_Reject_Hover_Background);border:var(--_ui5-v2-8-0_split_text_button_negative_hover_border);border-inline-end:var(--_ui5-v2-8-0_split_text_button_negative_hover_border_right)}.ui5-split-text-button[design=Attention]:hover{background-color:var(--sapButton_Attention_Hover_Background);border:var(--_ui5-v2-8-0_split_text_button_attention_hover_border);border-inline-end:var(--_ui5-v2-8-0_split_text_button_attention_hover_border_right)}.ui5-split-text-button[design=Transparent]:hover{background-color:var(--_ui5-v2-8-0_split_button_transparent_hover_background);border:var(--_ui5-v2-8-0_split_text_button_transparent_hover_border);border-inline-end:var(--_ui5-v2-8-0_split_text_button_transparent_hover_border_right)}.ui5-split-text-button[active][design=Emphasized]{background-color:var(--sapButton_Selected_Background);color:var(--sapButton_Emphasized_Active_TextColor);border-color:var(--sapButton_Emphasized_Active_BorderColor)}.ui5-split-text-button[active][design=Negative]{background-color:var(--sapButton_Reject_Selected_Background);color:var(--sapButton_Reject_Active_TextColor);border-color:var(--sapButton_Reject_Active_BorderColor)}.ui5-split-text-button[active][design=Positive]{background-color:var(--sapButton_Accept_Selected_Background);color:var(--sapButton_Accept_Active_TextColor);border-color:var(--sapButton_Accept_Active_BorderColor)}.ui5-split-text-button[active][design=Attention]{background-color:var(--sapButton_Attention_Selected_Background);color:var(--sapButton_Attention_Active_TextColor);border-color:var(--sapButton_Attention_Active_BorderColor)}.ui5-split-text-button[active][design=Default],.ui5-split-text-button[active][design=Transparent]{background-color:var(--sapButton_Active_Background);color:var(--sapButton_Active_TextColor);border-color:var(--sapButton_Active_BorderColor)}.ui5-split-text-button[active]{outline:0}.ui5-split-arrow-button{border-start-start-radius:var(--sapButton_Segment_BorderCornerRadius);border-end-start-radius:var(--sapButton_Segment_BorderCornerRadius);border-color:var(--_ui5-v2-8-0_split_text_button_border_color);background-color:var(--_ui5-v2-8-0_split_text_button_background_color);position:relative;border-width:.0625rem;overflow:visible}.ui5-split-arrow-button:hover{border-start-start-radius:var(--sapButton_Segment_BorderCornerRadius);border-end-start-radius:var(--sapButton_Segment_BorderCornerRadius);background-color:var(--sapButton_Hover_Background);box-shadow:none;border:var(--_ui5-v2-8-0_split_arrow_button_hover_border)}.ui5-split-arrow-button[design=Emphasized]:hover{background-color:var(--sapButton_Emphasized_Hover_Background);border:var(--_ui5-v2-8-0_split_arrow_button_emphasized_hover_border);box-shadow:var(--_ui5-v2-8-0_split_arrow_button_emphasized_hover_box_shadow, none)}:dir(rtl).ui5-split-arrow-button[design=Emphasized]:hover{box-shadow:var(--_ui5-v2-8-0_split_arrow_button_emphasized_hover_box_shadow_rtl, none)}.ui5-split-arrow-button[design=Positive]:hover{background-color:var(--sapButton_Accept_Hover_Background);border:var(--_ui5-v2-8-0_split_arrow_button_positive_hover_border)}.ui5-split-arrow-button[design=Negative]:hover{background-color:var(--sapButton_Reject_Hover_Background);border:var(--_ui5-v2-8-0_split_arrow_button_negative_hover_border)}.ui5-split-arrow-button[design=Attention]:hover{background-color:var(--sapButton_Attention_Hover_Background);border:var(--_ui5-v2-8-0_split_arrow_button_attention_hover_border)}.ui5-split-arrow-button[design=Transparent]:hover{background-color:var(--_ui5-v2-8-0_split_button_transparent_hover_background);border:var(--_ui5-v2-8-0_split_arrow_button_transparent_hover_border)}.ui5-split-arrow-button:before{content:"";position:absolute;box-sizing:border-box;pointer-events:none;width:.0625rem;background-color:var(--sapButton_TextColor);inset-inline-start:var(--_ui5-v2-8-0_split_button_middle_separator_left);inset-block-start:var(--_ui5-v2-8-0_split_button_middle_separator_top);height:var(--_ui5-v2-8-0_split_button_middle_separator_height)}.ui5-split-arrow-button[design=Emphasized]:before{content:"";position:absolute;box-sizing:border-box;pointer-events:none;inset-inline-start:var(--_ui5-v2-8-0_split_button_middle_separator_left);inset-block-start:var(--_ui5-v2-8-0_split_button_middle_separator_top);inset-inline-end:0;height:var(--_ui5-v2-8-0_split_button_middle_separator_height);width:.0625rem}.ui5-split-text-button:hover+.ui5-split-arrow-button:before,.ui5-split-arrow-button:hover:before{display:var(--_ui5-v2-8-0_split_button_middle_separator_hover_display)}.ui5-split-arrow-button[design=Emphasized]:hover:before{display:var(--_ui5-v2-8-0_split_button_middle_separator_hover_display_emphasized)}.ui5-split-arrow-button[design=Transparent]:before{background-color:var(--sapButton_Lite_TextColor)}.ui5-split-arrow-button[design=Emphasized]:before{background-color:var(--sapButton_Emphasized_TextColor)}.ui5-split-arrow-button[design=Positive]:before{background-color:var(--sapButton_Accept_TextColor)}.ui5-split-arrow-button[design=Negative]:before{background-color:var(--sapButton_Reject_TextColor)}.ui5-split-arrow-button[design=Attention]:before{background-color:var(--_ui5-v2-8-0_split_button_attention_separator_color_default)}.ui5-split-arrow-button[desktop]::part(button):focus-within:after,.ui5-split-arrow-button::part(button):focus-visible:after{border-start-start-radius:var(--_ui5-v2-8-0_split_button_inner_focused_border_radius_inner);border-end-start-radius:var(--_ui5-v2-8-0_split_button_inner_focused_border_radius_inner)}.ui5-split-arrow-button[desktop]::part(button):focus-within:after,.ui5-split-text-button::part(button):focus-visible:after{border-start-end-radius:var(--_ui5-v2-8-0_split_button_inner_focused_border_radius_inner);border-end-end-radius:var(--_ui5-v2-8-0_split_button_inner_focused_border_radius_inner)}.ui5-split-text-button[active][design=Emphasized]{color:var(--sapButton_Emphasized_Active_TextColor);background-color:var(--sapButton_Emphasized_Active_Background)}:host([design="Emphasized"][active-arrow-button]) .ui5-split-arrow-button,.ui5-split-arrow-button[active][design=Emphasized]{background-color:var(--sapButton_Selected_Background);color:var(--sapButton_Emphasized_Active_TextColor);border:var(--_ui5-v2-8-0_split_arrow_button_emphasized_hover_border)}:host([design="Transparent"][active-arrow-button]:not([hidden]):not([disabled]):hover) .ui5-split-arrow-button{color:var(--sapButton_Active_TextColor)}:host([active-arrow-button]) .ui5-split-arrow-button{border:.0625rem solid var(--sapButton_Lite_Active_BorderColor)}:host([active-arrow-button]) .ui5-split-arrow-button:before,.ui5-split-arrow-button[active]:before,.ui5-split-text-button[active]+.ui5-split-arrow-button:before{background-color:var(--sapButton_TextColor)}:host([design="Emphasized"][active-arrow-button]) .ui5-split-arrow-button:before,:host([design="Emphasized"]) .ui5-split-arrow-button[active]:before,:host([design="Emphasized"]) .ui5-split-text-button[active]+.ui5-split-arrow-button:before{background-color:var(--_ui5-v2-8-0_split_button_emphasized_separator_color)}:host([design="Positive"][active-arrow-button]) .ui5-split-arrow-button:before,:host([design="Positive"]) .ui5-split-arrow-button[active]:before,:host([design="Positive"]) .ui5-split-text-button[active]+.ui5-split-arrow-button:before{background-color:var(--_ui5-v2-8-0_split_button_positive_separator_color)}:host([design="Negative"][active-arrow-button]) .ui5-split-arrow-button:before,:host([design="Negative"]) .ui5-split-arrow-button[active]:before,:host([design="Negative"]) .ui5-split-text-button[active]+.ui5-split-arrow-button:before{background-color:var(--_ui5-v2-8-0_split_button_negative_separator_color)}:host([design="Attention"][active-arrow-button]) .ui5-split-arrow-button:before,:host([design="Attention"]) .ui5-split-arrow-button[active]:before,:host([design="Attention"]) .ui5-split-text-button[active]+.ui5-split-arrow-button:before{background-color:var(--_ui5-v2-8-0_split_button_attention_separator_color)}
`;

// node_modules/@ui5/webcomponents/dist/SplitButton.js
var __decorate94 = function(decorators, target, key, desc) {
  var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
  if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
  else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
  return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var SplitButton_1;
var SplitButton = SplitButton_1 = class SplitButton2 extends UI5Element_default {
  constructor() {
    super(...arguments);
    this.activeArrowButton = false;
    this.design = "Default";
    this.disabled = false;
    this._tabIndex = 0;
    this._spacePressed = false;
    this._shiftOrEscapePressed = false;
    this._textButtonActive = false;
    this._activeArrowButton = false;
    this._hideArrowButton = false;
    this._isDefaultActionPressed = false;
    this._isKeyDownOperation = false;
  }
  onBeforeRendering() {
    if (this.disabled) {
      this._tabIndex = -1;
    }
  }
  _handleMouseClick(e) {
    this._fireClick(e);
  }
  _onFocusOut() {
    if (this.disabled || this.getFocusDomRef().matches(":has(:focus-within)")) {
      return;
    }
    this._shiftOrEscapePressed = false;
    this._setTabIndexValue();
  }
  _onFocusIn() {
    if (this.disabled || this.getFocusDomRef().matches(":has(:focus-within)")) {
      return;
    }
    this._shiftOrEscapePressed = false;
  }
  handleTouchStart(e) {
    e.stopPropagation();
    this._textButtonActive = true;
    this._tabIndex = -1;
  }
  _onInnerButtonFocusIn(e) {
    e.stopPropagation();
    this._setTabIndexValue(true);
    const target = e.target;
    target.focus();
  }
  _onKeyDown(e) {
    this._isKeyDownOperation = true;
    if (this._isArrowKeyAction(e)) {
      this._handleArrowButtonAction(e);
      this._activeArrowButton = true;
    } else if (this._isDefaultAction(e)) {
      this._handleDefaultAction(e);
      this._isDefaultActionPressed = true;
    }
    if (this._spacePressed && this._isShiftOrEscape(e)) {
      this._handleShiftOrEscapePressed();
    }
    if (this._isDefaultActionPressed && (isTabNext(e) || isTabPrevious(e))) {
      this._activeArrowButton = false;
      this._textButtonActive = false;
    }
    this._tabIndex = -1;
  }
  _onKeyUp(e) {
    this._isKeyDownOperation = false;
    if (this._isArrowKeyAction(e)) {
      e.preventDefault();
      this._activeArrowButton = false;
      this._textButtonActive = false;
    } else if (this._isDefaultAction(e)) {
      this._isDefaultActionPressed = false;
      this._textButtonActive = false;
      if (isSpace(e)) {
        e.preventDefault();
        e.stopPropagation();
        this._fireClick();
        this._spacePressed = false;
        this._textButtonActive = false;
      }
    }
    if (this._isShiftOrEscape(e)) {
      this._handleShiftOrEscapePressed();
    }
    this._tabIndex = -1;
  }
  _fireClick(e) {
    e == null ? void 0 : e.stopPropagation();
    if (!this._shiftOrEscapePressed) {
      this.fireDecoratorEvent("click");
    }
    this._shiftOrEscapePressed = false;
  }
  _fireArrowClick(e) {
    e == null ? void 0 : e.stopPropagation();
    this.fireDecoratorEvent("arrow-click");
  }
  _textButtonRelease() {
    this._textButtonActive = false;
    this._tabIndex = -1;
  }
  _arrowButtonPress(e) {
    e.stopPropagation();
    this._tabIndex = -1;
  }
  _arrowButtonRelease(e) {
    e.preventDefault();
    this._tabIndex = -1;
  }
  _setTabIndexValue(innerButtonPressed) {
    this._tabIndex = this.disabled ? -1 : 0;
    if (this._tabIndex === -1 && innerButtonPressed) {
      this._tabIndex = 0;
    }
  }
  _onArrowButtonActiveStateChange(e) {
    if (this.activeArrowButton) {
      e.preventDefault();
    }
  }
  /**
   * Checks if the pressed key is an arrow key.
   * @param e - keyboard event
   * @private
   */
  _isArrowKeyAction(e) {
    return isDown(e) || isUp(e) || isDownAlt(e) || isUpAlt(e) || isF4(e);
  }
  /**
   * Checks if the pressed key is a default action key (Space or Enter).
   * @param e - keyboard event
   * @private
   */
  _isDefaultAction(e) {
    return isSpace(e) || isEnter(e);
  }
  /**
   * Checks if the pressed key is an escape key or shift key.
   * @param e - keyboard event
   * @private
   */
  _isShiftOrEscape(e) {
    return isEscape(e) || isShift(e);
  }
  /**
   * Handles the click event and the focus on the arrow button.
   * @param e - keyboard event
   * @private
   */
  _handleArrowButtonAction(e) {
    e.preventDefault();
    this._fireArrowClick(e);
    if (isSpace(e)) {
      this._spacePressed = true;
    }
  }
  /**
   * Handles the default action and the active state of the respective button.
   * @param e - keyboard event
   * @private
   */
  _handleDefaultAction(e) {
    e.preventDefault();
    const wasSpacePressed = isSpace(e);
    const target = e.target;
    if (this.arrowButton && target === this.arrowButton) {
      this._activeArrowButton = true;
      this._fireArrowClick();
      if (wasSpacePressed) {
        this._spacePressed = true;
        this._textButtonActive = false;
      }
    } else {
      this._textButtonActive = true;
      if (wasSpacePressed) {
        this._spacePressed = true;
        return;
      }
      this._fireClick();
    }
  }
  _handleShiftOrEscapePressed() {
    this._shiftOrEscapePressed = true;
    this._textButtonActive = false;
    this._isKeyDownOperation = false;
  }
  get effectiveActiveArrowButton() {
    return this.activeArrowButton || this._activeArrowButton;
  }
  get textButtonAccText() {
    return this.textContent;
  }
  get isTextButton() {
    return !!this.textContent;
  }
  get textButton() {
    var _a;
    return (_a = this.getDomRef()) == null ? void 0 : _a.querySelector(".ui5-split-text-button");
  }
  get arrowButton() {
    var _a;
    return (_a = this.getDomRef()) == null ? void 0 : _a.querySelector(".ui5-split-arrow-button");
  }
  get accInfo() {
    return {
      root: {
        "description": SplitButton_1.i18nBundle.getText(SPLIT_BUTTON_DESCRIPTION),
        "keyboardHint": SplitButton_1.i18nBundle.getText(SPLIT_BUTTON_KEYBOARD_HINT)
      },
      arrowButton: {
        "title": this.arrowButtonTooltip,
        "accessibilityAttributes": {
          "hasPopup": "menu",
          "expanded": this.effectiveActiveArrowButton
        }
      }
    };
  }
  get arrowButtonTooltip() {
    return SplitButton_1.i18nBundle.getText(SPLIT_BUTTON_ARROW_BUTTON_TOOLTIP);
  }
  get ariaLabelText() {
    return [SplitButton_1.i18nBundle.getText(SPLIT_BUTTON_DESCRIPTION), SplitButton_1.i18nBundle.getText(SPLIT_BUTTON_KEYBOARD_HINT)].join(" ");
  }
};
__decorate94([
  property_default()
], SplitButton.prototype, "icon", void 0);
__decorate94([
  property_default({ type: Boolean })
], SplitButton.prototype, "activeArrowButton", void 0);
__decorate94([
  property_default()
], SplitButton.prototype, "design", void 0);
__decorate94([
  property_default({ type: Boolean })
], SplitButton.prototype, "disabled", void 0);
__decorate94([
  property_default()
], SplitButton.prototype, "accessibleName", void 0);
__decorate94([
  property_default({ type: Number, noAttribute: true })
], SplitButton.prototype, "_tabIndex", void 0);
__decorate94([
  property_default({ type: Boolean, noAttribute: true })
], SplitButton.prototype, "_spacePressed", void 0);
__decorate94([
  property_default({ type: Boolean, noAttribute: true })
], SplitButton.prototype, "_shiftOrEscapePressed", void 0);
__decorate94([
  property_default({ type: Boolean, noAttribute: true })
], SplitButton.prototype, "_textButtonActive", void 0);
__decorate94([
  property_default({ type: Boolean, noAttribute: true })
], SplitButton.prototype, "_activeArrowButton", void 0);
__decorate94([
  property_default({ type: String })
], SplitButton.prototype, "_endIcon", void 0);
__decorate94([
  property_default({ type: Boolean })
], SplitButton.prototype, "_hideArrowButton", void 0);
__decorate94([
  slot_default({ type: Node, "default": true })
], SplitButton.prototype, "text", void 0);
__decorate94([
  i18n_default("@ui5/webcomponents")
], SplitButton, "i18nBundle", void 0);
SplitButton = SplitButton_1 = __decorate94([
  customElement_default({
    tag: "ui5-split-button",
    renderer: JsxRenderer_default,
    styles: SplitButton_css_default,
    template: SplitButtonTemplate
  }),
  event_strict_default("click", {
    bubbles: true
  }),
  event_strict_default("arrow-click", {
    bubbles: true
  })
], SplitButton);
SplitButton.define();

// node_modules/@ui5/webcomponents-react/dist/webComponents/SplitButton/index.js
var SplitButton3 = withWebComponent("ui5-split-button", ["accessibleName", "design", "icon"], ["activeArrowButton", "disabled"], [], ["arrow-click", "click"]);
SplitButton3.displayName = "SplitButton";

// node_modules/@ui5/webcomponents-icons/dist/v4/less.js
var name52 = "less";
var pathData51 = "M464 224q16 0 16 16v32q0 16-16 16H48q-6 0-11-4.5T32 272v-32q0-7 5-11.5t11-4.5h416z";
var ltr51 = false;
var collection52 = "SAP-icons-v4";
var packageName51 = "@ui5/webcomponents-icons";
registerIcon(name52, { pathData: pathData51, ltr: ltr51, collection: collection52, packageName: packageName51 });

// node_modules/@ui5/webcomponents-icons/dist/v5/less.js
var name53 = "less";
var pathData52 = "M454 275H58q-11 0-18.5-7T32 250t7.5-18.5T58 224h396q11 0 18.5 7.5T480 250t-7.5 18-18.5 7z";
var ltr52 = false;
var collection53 = "SAP-icons-v5";
var packageName52 = "@ui5/webcomponents-icons";
registerIcon(name53, { pathData: pathData52, ltr: ltr52, collection: collection53, packageName: packageName52 });

// node_modules/@ui5/webcomponents-icons/dist/less.js
var less_default = "less";

// node_modules/@ui5/webcomponents/dist/StepInputTemplate.js
function StepInputTemplate() {
  return jsxs("div", { id: `${this._id}`, class: "ui5-step-input-root", onKeyDown: this._onkeydown, onFocusIn: this._onfocusin, onFocusOut: this._onfocusout, children: [!this.readonly && jsx("div", { class: "ui5-step-icon ui5-step-dec", title: this.decIconTitle, children: jsx(Icon_default, { id: `${this._id}-dec`, name: less_default, tabindex: -1, accessibleName: this.decIconTitle, onClick: this._decValue, onFocusOut: this._onButtonFocusOut, onMouseDown: this._decSpin, onMouseUp: this._resetSpin, onMouseOut: this._resetSpinOut, class: {
    "inputIcon": true,
    "ui5-step-input-icon--clickable": this._decIconClickable
  }, showTooltip: true }) }), jsx(Input_default, { id: `${this._id}-inner`, "data-sap-focus-ref": true, class: "ui5-step-input-input", placeholder: this.placeholder, type: this.type, value: this._displayValue, disabled: this.disabled, required: this.required, readonly: this.readonly, valueState: this.valueState, _inputAccInfo: this.accInfo, _nativeInputAttributes: this.inputAttributes, onChange: this._onInputChange, onFocusOut: this._onInputFocusOut, onFocusIn: this._onInputFocusIn, onInput: this._onInput, children: this.valueStateMessage.length > 0 && jsx("slot", { name: "valueStateMessage", slot: "valueStateMessage" }) }), !this.readonly && jsx("div", { class: "ui5-step-icon ui5-step-inc", title: this.incIconTitle, children: jsx(Icon_default, { id: `${this._id}-inc`, class: {
    "inputIcon": true,
    "ui5-step-input-icon--clickable": this._incIconClickable
  }, name: add_default, tabindex: -1, accessibleName: this.incIconTitle, onClick: this._incValue, onFocusOut: this._onButtonFocusOut, onMouseDown: this._incSpin, onMouseUp: this._resetSpin, onMouseOut: this._resetSpinOut, showTooltip: true }) })] });
}

// node_modules/@ui5/webcomponents/dist/generated/themes/StepInput.css.js
registerThemePropertiesLoader("@ui5/webcomponents-theming", "sap_horizon", async () => parameters_bundle_css_default);
registerThemePropertiesLoader("@ui5/webcomponents", "sap_horizon", async () => parameters_bundle_css_default2);
var StepInput_css_default = `:host{vertical-align:middle}.ui5-hidden-text{position:absolute;clip:rect(1px,1px,1px,1px);user-select:none;left:-1000px;top:-1000px;pointer-events:none;font-size:0}.inputIcon{color:var(--_ui5-v2-8-0_input_icon_color);cursor:pointer;outline:none;padding:var(--_ui5-v2-8-0_input_icon_padding);border-inline-start:var(--_ui5-v2-8-0_input_icon_border);min-width:1rem;min-height:1rem;border-radius:var(--_ui5-v2-8-0_input_icon_border_radius)}.inputIcon.inputIcon--pressed{background:var(--_ui5-v2-8-0_input_icon_pressed_bg);box-shadow:var(--_ui5-v2-8-0_input_icon_box_shadow);border-inline-start:var(--_ui5-v2-8-0_select_hover_icon_left_border);color:var(--_ui5-v2-8-0_input_icon_pressed_color)}.inputIcon:active{background-color:var(--sapButton_Active_Background);box-shadow:var(--_ui5-v2-8-0_input_icon_box_shadow);border-inline-start:var(--_ui5-v2-8-0_select_hover_icon_left_border);color:var(--_ui5-v2-8-0_input_icon_pressed_color)}.inputIcon:not(.inputIcon--pressed):not(:active):hover{background:var(--_ui5-v2-8-0_input_icon_hover_bg);box-shadow:var(--_ui5-v2-8-0_input_icon_box_shadow)}.inputIcon:hover{border-inline-start:var(--_ui5-v2-8-0_select_hover_icon_left_border);box-shadow:var(--_ui5-v2-8-0_input_icon_box_shadow)}:host([readonly]:not([disabled])){border-color:var(--_ui5-v2-8-0_input_readonly_border_color);background:var(--sapField_ReadOnly_BackgroundStyle);background-color:var(--_ui5-v2-8-0_input_readonly_background)}:host([disabled]){opacity:var(--_ui5-v2-8-0_input_disabled_opacity);cursor:default;pointer-events:none;background-color:var(--_ui5-v2-8-0-input_disabled_background);border-color:var(--_ui5-v2-8-0_input_disabled_border_color)}:host([value-state="Negative"]) .inputIcon:not(.inputIcon--pressed):not(:active):hover{box-shadow:var(--_ui5-v2-8-0_input_error_icon_box_shadow)}:host([value-state="Critical"]) .inputIcon:not(.inputIcon--pressed):not(:active):hover{box-shadow:var(--_ui5-v2-8-0_input_warning_icon_box_shadow)}:host([value-state="Information"]) .inputIcon:not(.inputIcon--pressed):not(:active):hover{box-shadow:var(--_ui5-v2-8-0_input_information_icon_box_shadow)}:host([value-state="Positive"]) .inputIcon:not(.inputIcon--pressed):not(:active):hover{box-shadow:var(--_ui5-v2-8-0_input_success_icon_box_shadow)}:host([value-state="Negative"]:not([readonly]):not([disabled])){background:var(--sapField_InvalidBackgroundStyle);background-color:var(--sapField_InvalidBackground);border-color:var(--_ui5-v2-8-0_input_value_state_error_border_color);box-shadow:var(--sapField_InvalidShadow)}:host([value-state="Critical"]:not([readonly]):not([disabled])){background:var(--sapField_WarningBackgroundStyle);background-color:var(--sapField_WarningBackground);border-color:var(--_ui5-v2-8-0_input_value_state_warning_border_color);box-shadow:var(--sapField_WarningShadow)}:host([value-state="Positive"]:not([readonly]):not([disabled])){background:var(--sapField_SuccessBackgroundStyle);background-color:var(--sapField_SuccessBackground);border-color:var(--_ui5-v2-8-0_input_value_state_success_border_color);border-width:var(--_ui5-v2-8-0_input_value_state_success_border_width);box-shadow:var(--sapField_SuccessShadow)}:host([value-state="Information"]:not([readonly]):not([disabled])){background:var(--sapField_InformationBackgroundStyle);background-color:var(--sapField_InformationBackground);border-color:var(--_ui5-v2-8-0_input_value_state_information_border_color);border-width:var(--_ui5-v2-8-0_input_information_border_width);box-shadow:var(--sapField_InformationShadow)}:host([value-state="Negative"]) .inputIcon:active,:host([value-state="Negative"]) .inputIcon.inputIcon--pressed{box-shadow:var(--_ui5-v2-8-0_input_error_icon_box_shadow);color:var(--_ui5-v2-8-0_input_icon_error_pressed_color)}:host([value-state="Critical"]) .inputIcon:active,:host([value-state="Critical"]) .inputIcon.inputIcon--pressed{box-shadow:var(--_ui5-v2-8-0_input_warning_icon_box_shadow);color:var(--_ui5-v2-8-0_input_icon_warning_pressed_color)}:host([value-state="Information"]) .inputIcon:active,:host([value-state="Information"]) .inputIcon.inputIcon--pressed{box-shadow:var(--_ui5-v2-8-0_input_information_icon_box_shadow);color:var(--_ui5-v2-8-0_input_icon_information_pressed_color)}:host([value-state="Positive"]) .inputIcon:active,:host([value-state="Positive"]) .inputIcon.inputIcon--pressed{box-shadow:var(--_ui5-v2-8-0_input_success_icon_box_shadow);color:var(--_ui5-v2-8-0_input_icon_success_pressed_color)}:host([value-state="Negative"]) .inputIcon,:host([value-state="Critical"]) .inputIcon{padding:var(--_ui5-v2-8-0_input_error_warning_icon_padding)}:host([value-state="Information"]) .inputIcon{padding:var(--_ui5-v2-8-0_input_information_icon_padding)}:host(:not([hidden])){display:inline-block;width:100%;line-height:normal;letter-spacing:normal;word-spacing:normal}:host{--ui5-v2-8-0_input_focus_pseudo_element_content: none;color:var(--sapField_TextColor);background-color:var(--sapField_Background);border:var(--_ui5-v2-8-0_step_input_border_style);border-radius:var(--sapField_BorderCornerRadius);box-sizing:border-box;height:var(--_ui5-v2-8-0_input_height);position:relative;margin:var(--_ui5-v2-8-0_input_margin_top_bottom) 0;min-width:var(--_ui5-v2-8-0_step_input_min_width);text-align:right;user-select:none;-moz-user-select:none;-webkit-user-select:none;-ms-user-select:none}:host .ui5-step-input-input{text-align:inherit;height:inherit}:host(:not([value-state]):not([readonly]):not([disabled])){box-shadow:none}:host(:not([value-state]):not([readonly]):not([disabled]):hover),:host([value-state="None"]:not([readonly]):not([disabled]):hover){background-color:var(--_ui5-v2-8-0_step_input_border_color_hover);border:var(--_ui5-v2-8-0_step_input_border_hover)}:host(:not([value-state]):not([readonly]):not([disabled]):not([focused]):hover),:host([value-state="None"]:not([readonly]):not([disabled]):not([focused]):hover){background-color:var(--sapField_Hover_Background);border:var(--_ui5-v2-8-0_step_input_border_style_hover);box-shadow:var(--sapField_Hover_Shadow)}:host([value-state="Positive"]:not([readonly]):not([disabled]):not([focused]):hover){box-shadow:var(--sapField_Hover_SuccessShadow)}:host([value-state="Information"]:not([readonly]):not([disabled]):not([focused]):hover){box-shadow:var(--sapField_Hover_InformationShadow)}:host([value-state="Critical"]:not([readonly]):not([disabled]):not([focused]):hover){box-shadow:var(--sapField_Hover_WarningShadow)}:host([value-state="Negative"]:not([readonly]):not([disabled]):not([focused]):hover){box-shadow:var(--sapField_Hover_InvalidShadow)}:host([value-state="Positive"]:not([readonly]):not([disabled]):hover),:host([value-state="Negative"]:not([readonly]):not([disabled]):hover),:host([value-state="Information"]:not([readonly]):not([disabled]):hover),:host([value-state="Critical"]:not([readonly]):not([disabled]):hover){background-color:var(--_ui5-v2-8-0-step_input_button_state_hover_background_color)}:host(:not([value-state]):not([readonly]):not([disabled])[focused]),:host([value-state="None"]:not([readonly]):not([disabled])[focused]),:host([value-state="Positive"]:not([readonly]):not([disabled])[focused]),:host([value-state="Negative"]:not([readonly]):not([disabled])[focused]),:host([value-state="Information"]:not([readonly]):not([disabled])[focused]),:host([value-state="Critical"]:not([readonly]):not([disabled])[focused]){background-color:var(--sapField_Focus_Background)}:host([value-state="Positive"]:not([readonly]):not([disabled])):after,:host([value-state="Negative"]:not([readonly]):not([disabled])):after,:host([value-state="None"]:not([readonly]):not([disabled])):after,:host([value-state="Information"]:not([readonly]):not([disabled])):after,:host([value-state="Critical"]:not([readonly]):not([disabled])):after{position:absolute;content:"";inset:-1px;outline:none;pointer-events:none;border-radius:var(--sapField_BorderCornerRadius);border-style:var(--_ui5-v2-8-0_input_error_warning_border_style);z-index:1;border-width:0px}:host([value-state="Information"]:not([readonly]):not([disabled])):after{border-color:var(--sapField_InformationColor);border-width:var(--_ui5-v2-8-0_input_information_border_width)}:host([value-state="Critical"]:not([readonly]):not([disabled])):after{border-color:var(--sapField_WarningColor);border-width:2px}:host([value-state="Positive"]:not([readonly]):not([disabled])):after{border-color:var(--sapField_SuccessColor);border-width:1px}:host([value-state="Negative"]:not([readonly]):not([disabled])):after{border-color:var(--sapField_InvalidColor);border-width:var(--_ui5-v2-8-0_input_information_border_width)}:host([value-state]):after{border-width:var(--_ui5-v2-8-0_input_state_border_width)}:host([value-state="Negative"]:not([readonly]):not([disabled])) .ui5-step-input-input{background-color:var(--_ui5-v2-8-0_input_input_background_color)}:host([value-state="Negative"]:not([readonly]):not([disabled])) .ui5-step-input-input:hover{background-color:var(--_ui5-v2-8-0_step_input_input_error_background_color)}:host([value-state]:not([value-state="None"]) .ui5-step-input-input[focused]){outline:none}:host .ui5-step-input-input{width:100%;color:inherit;background-color:inherit;border:var(--_ui5-v2-8-0_step_input_input_border);box-sizing:border-box;vertical-align:top;margin-top:var(--_ui5-v2-8-0_step_input_input_margin_top);min-width:var(--_ui5-v2-8-0_step_input_min_width);padding-inline-start:var(--_ui5-v2-8-0_step_input_padding);padding-inline-end:var(--_ui5-v2-8-0_step_input_padding);position:relative;outline:none;line-height:inherit;letter-spacing:inherit;word-spacing:inherit}:host .ui5-step-input-input[readonly]{padding:0}:host .ui5-step-input-input:hover,:host .ui5-step-input-input[focused]{box-shadow:none}:host .ui5-step-input-root{white-space:nowrap;line-height:inherit;letter-spacing:inherit;word-spacing:inherit;height:inherit}:host .ui5-step-input-input[text-align=left]{text-align:left}:host .ui5-step-input-input[text-align=center]{text-align:center}:host .ui5-step-input-input[text-align=right]{text-align:right}:host .ui5-step-icon{position:absolute;display:var(--_ui5-v2-8-0_step_input_button_display);height:2rem;height:100%;background-color:var(--_ui5-v2-8-0_step_input_button_background_color);z-index:0}:host .ui5-step-icon[focused]{border:none;outline:none}:host .ui5-step-icon.ui5-step-dec{left:var(--_ui5-v2-8-0_step_input_button_left);z-index:1}:host .ui5-step-icon.ui5-step-inc{right:var(--_ui5-v2-8-0_step_input_button_right)}:host .ui5-step-icon *:not(.ui5-step-input-icon--clickable),:host .ui5-step-icon *:not(.ui5-step-input-icon--clickable):active,:host .ui5-step-icon *:not(.ui5-step-input-icon--clickable):hover{opacity:.5;background-color:transparent;color:var(--sapContent_IconColor)}:host .ui5-step-icon :not(.ui5-step-input-icon--clickable) *:hover,:host .ui5-step-icon :not(.ui5-step-input-icon--clickable) *:active{background-color:var(--sapField_Background);color:var(--sapContent_IconColor)}:host .ui5-step-input-input[focused]:after{position:absolute;content:"";border:var(--_ui5-v2-8-0_step_input_input_border_focused_after);top:var(--_ui5-v2-8-0_step_input_input_border_top_bottom_focused_after);right:0;bottom:var(--_ui5-v2-8-0_step_input_input_border_top_bottom_focused_after);border-radius:var(--_ui5-v2-8-0_step_input_input_border_radius_focused_after);left:0;outline:none;pointer-events:none;z-index:1}:host .ui5-step-input-input[focused]{outline:none}:host([value-state="Information"]:not([readonly]):not([disabled])) .ui5-step-input-input[focused]:after{border-color:var(--_ui5-v2-8-0_step_input_input_information_border_color_focused_after)}:host([value-state="Critical"]:not([readonly]):not([disabled])) .ui5-step-input-input[focused]:after{border-color:var(--_ui5-v2-8-0_step_input_input_warning_border_color_focused_after)}:host([value-state="Positive"]:not([readonly]):not([disabled])) .ui5-step-input-input[focused]:after{border-color:var(--_ui5-v2-8-0_step_input_input_success_border_color_focused_after)}:host([value-state="Negative"]:not([readonly]):not([disabled])) .ui5-step-input-input[focused]:after{border-color:var(--_ui5-v2-8-0_step_input_input_error_border_color_focused_after)}:host .ui5-step-input-input::-webkit-outer-spin-button,:host .ui5-step-input-input::-webkit-inner-spin-button{-webkit-appearance:none;margin:0}:host([disabled]) .ui5-step-icon{background-color:var(--_ui5-v2-8-0_step_input_disabled_button_background)}:host([disabled]) .ui5-step-icon [ui5-icon]{color:var(--sapField_ReadOnly_BorderColor)}
`;

// node_modules/@ui5/webcomponents/dist/StepInput.js
var __decorate95 = function(decorators, target, key, desc) {
  var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
  if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
  else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
  return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var StepInput_1;
var INITIAL_WAIT_TIMEOUT = 500;
var ACCELERATION = 0.8;
var MIN_WAIT_TIMEOUT = 50;
var INITIAL_SPEED = 120;
var StepInput = StepInput_1 = class StepInput2 extends UI5Element_default {
  constructor() {
    super(...arguments);
    this.value = 0;
    this.step = 1;
    this.valueState = "None";
    this.required = false;
    this.disabled = false;
    this.readonly = false;
    this.valuePrecision = 0;
    this._decIconDisabled = false;
    this._incIconDisabled = false;
    this.focused = false;
    this._inputFocused = false;
    this._previousValue = this.value;
    this._waitTimeout = INITIAL_WAIT_TIMEOUT;
    this._speed = INITIAL_SPEED;
    this._spinStarted = false;
  }
  async formElementAnchor() {
    var _a;
    return (_a = await this.getFocusDomRefAsync()) == null ? void 0 : _a.getFocusDomRefAsync();
  }
  get formFormattedValue() {
    return this.value.toString();
  }
  get type() {
    return InputType_default.Number;
  }
  // icons-related
  get decIconTitle() {
    return StepInput_1.i18nBundle.getText(STEPINPUT_DEC_ICON_TITLE);
  }
  get incIconTitle() {
    return StepInput_1.i18nBundle.getText(STEPINPUT_INC_ICON_TITLE);
  }
  get _decIconClickable() {
    return !this._decIconDisabled && !this.readonly && !this.disabled;
  }
  get _incIconClickable() {
    return !this._incIconDisabled && !this.readonly && !this.disabled;
  }
  get _isFocused() {
    return this.focused;
  }
  get _displayValue() {
    if (this.value === 0 || Number.isInteger(this.value)) {
      return this.value.toFixed(this.valuePrecision);
    }
    if (this.input && this.value === Number(this.input.value)) {
      return this.input.value;
    }
    return this.value.toString();
  }
  get accInfo() {
    return {
      "ariaRequired": this.required,
      "ariaLabel": getEffectiveAriaLabelText(this)
    };
  }
  get inputAttributes() {
    return {
      min: this.min === void 0 ? void 0 : this.min,
      max: this.max === void 0 ? void 0 : this.max,
      step: this.step
    };
  }
  onBeforeRendering() {
    this._setButtonState();
    if (this._previousValue === void 0) {
      this._previousValue = this.value;
    }
  }
  get input() {
    return this.shadowRoot.querySelector("[ui5-input]");
  }
  get innerInput() {
    return this.input.shadowRoot.querySelector("input");
  }
  get inputOuter() {
    return this.shadowRoot.querySelector(".ui5-step-input-input");
  }
  _onButtonFocusOut() {
    setTimeout(() => {
      if (!this._inputFocused) {
        this.inputOuter.removeAttribute("focused");
      }
    }, 0);
  }
  _onInput(e) {
    const prevented = !this.fireDecoratorEvent("input", { inputType: e.detail.inputType });
    if (prevented) {
      e.preventDefault();
    }
  }
  _onInputFocusIn() {
    this._inputFocused = true;
    if (this.value !== this._previousValue) {
      this._previousValue = this.value;
    }
  }
  _onInputFocusOut() {
    this._inputFocused = false;
    this._onInputChange();
  }
  _setButtonState() {
    this._decIconDisabled = this.min !== void 0 && this.value <= this.min;
    this._incIconDisabled = this.max !== void 0 && this.value >= this.max;
  }
  _validate() {
    if (this._initialValueState === void 0) {
      this._initialValueState = this.valueState;
    }
    this._updateValueState();
  }
  _updateValueState() {
    const isWithinRange = (this.min === void 0 || Number(this.input.value) >= this.min) && (this.max === void 0 || Number(this.input.value) <= this.max);
    const isValueWithCorrectPrecision = this._isValueWithCorrectPrecision;
    const previousValueState = this.valueState;
    const isValid = isWithinRange && isValueWithCorrectPrecision;
    this.valueState = isValid ? ValueState_default.None : ValueState_default.Negative;
    const eventPrevented = !this.fireDecoratorEvent("value-state-change", {
      valueState: this.valueState,
      valid: isValid
    });
    if (eventPrevented) {
      this.valueState = previousValueState;
    }
  }
  _preciseValue(value) {
    const pow = 10 ** this.valuePrecision;
    return Math.round(value * pow) / pow;
  }
  _fireChangeEvent() {
    if (this._previousValue !== this.value) {
      this._previousValue = this.value;
      this.fireDecoratorEvent("change");
    }
  }
  /**
   * Value modifier - modifies the value of the component, validates the new value and enables/disables increment and
   * decrement buttons according to the value and min/max values (if set). Fires `change` event when requested
   * @private
   * @param modifier modifies the value of the component with the given modifier (positive or negative)
   * @param fireChangeEvent if `true`, fires `change` event when the value is changed
   */
  _modifyValue(modifier, fireChangeEvent = false) {
    let value;
    value = this.value + modifier;
    if (this.min !== void 0 && value < this.min) {
      value = this.min;
    }
    if (this.max !== void 0 && value > this.max) {
      value = this.max;
    }
    value = this._preciseValue(value);
    if (value !== this.value) {
      this.value = value;
      this.input.value = value.toFixed(this.valuePrecision);
      this._validate();
      this._setButtonState();
      this.focused = true;
      this.inputOuter.setAttribute("focused", "");
      if (fireChangeEvent) {
        this._fireChangeEvent();
      } else {
        this.input.focus();
      }
    }
  }
  _incValue() {
    if (this._incIconClickable && !this.disabled && !this.readonly) {
      this._modifyValue(this.step, true);
      this._previousValue = this.value;
    }
  }
  _decValue() {
    if (this._decIconClickable && !this.disabled && !this.readonly) {
      this._modifyValue(-this.step, true);
      this._previousValue = this.value;
    }
  }
  get _isValueWithCorrectPrecision() {
    const delimiter = this.input.value.includes(".") ? "." : ",";
    const numberParts = this.input.value.split(delimiter);
    const decimalPartLength = numberParts.length > 1 ? numberParts[1].length : 0;
    return decimalPartLength === this.valuePrecision;
  }
  _onInputChange() {
    this._setDefaultInputValueIfNeeded();
    const inputValue = Number(this.input.value);
    if (this._isValueChanged(inputValue)) {
      this._updateValueAndValidate(inputValue);
    }
  }
  _setDefaultInputValueIfNeeded() {
    if (this.input.value === "") {
      const defaultValue = (this.min || 0).toFixed(this.valuePrecision);
      this.input.value = defaultValue;
      this.innerInput.value = defaultValue;
    }
  }
  _isValueChanged(inputValue) {
    const isValueWithCorrectPrecision = this._isValueWithCorrectPrecision;
    const isPrecisionCorrectButValueStateError = isValueWithCorrectPrecision && this.valueState === ValueState_default.Negative;
    return this.value !== this._previousValue || this.value !== inputValue || inputValue === 0 || !isValueWithCorrectPrecision || isPrecisionCorrectButValueStateError;
  }
  _updateValueAndValidate(inputValue) {
    this.value = inputValue;
    this._validate();
    this._setButtonState();
    this._fireChangeEvent();
  }
  _onfocusin() {
    this.focused = true;
  }
  _onfocusout() {
    this.focused = false;
  }
  _onkeydown(e) {
    let preventDefault = true;
    if (this.disabled || this.readonly) {
      return;
    }
    if (isEnter(e)) {
      this._onInputChange();
      return;
    }
    if (isUp(e)) {
      this._modifyValue(this.step);
    } else if (isDown(e)) {
      this._modifyValue(-this.step);
    } else if (isEscape(e)) {
      this.value = this._previousValue;
      this.input.value = this.value.toFixed(this.valuePrecision);
    } else if (this.max !== void 0 && (isPageUpShift(e) || isUpShiftCtrl(e))) {
      this._modifyValue(this.max - this.value);
    } else if (this.min !== void 0 && (isPageDownShift(e) || isDownShiftCtrl(e))) {
      this._modifyValue(this.min - this.value);
    } else if (!isUpCtrl(e) && !isDownCtrl(e) && !isUpShift(e) && !isDownShift(e)) {
      preventDefault = false;
    }
    if (preventDefault) {
      e.preventDefault();
    }
  }
  _decSpin() {
    if (!this._decIconDisabled) {
      this._spinValue(false, true);
    }
  }
  _incSpin() {
    if (!this._incIconDisabled) {
      this._spinValue(true, true);
    }
  }
  /**
   * Calculates the time which should be waited until _spinValue function is called.
   */
  _calcWaitTimeout() {
    this._speed *= ACCELERATION;
    this._waitTimeout = this._waitTimeout - this._speed < MIN_WAIT_TIMEOUT ? MIN_WAIT_TIMEOUT : this._waitTimeout - this._speed;
    return this._waitTimeout;
  }
  /**
   * Called when the increment or decrement button is pressed and held to set new value.
   * @private
   * @param increment - is this the increment button or not so the values should be spin accordingly up or down
   * @param resetVariables - whether to reset the spin-related variables or not
   */
  _spinValue(increment, resetVariables = false) {
    if (resetVariables) {
      this._waitTimeout = INITIAL_WAIT_TIMEOUT;
      this._speed = INITIAL_SPEED;
      this._btnDown = true;
    }
    this._spinTimeoutId = setTimeout(() => {
      if (this._btnDown) {
        this._spinStarted = true;
        this._modifyValue(increment ? this.step : -this.step);
        this._setButtonState();
        if (!this._incIconDisabled && increment || !this._decIconDisabled && !increment) {
          this._spinValue(increment);
        } else {
          this._resetSpin();
          this._fireChangeEvent();
        }
      }
    }, this._calcWaitTimeout());
  }
  /**
  * Resets spin process
  */
  _resetSpin() {
    clearTimeout(this._spinTimeoutId);
    this._btnDown = false;
    this._spinStarted = false;
  }
  /**
  * Resets spin process when mouse outs + or - buttons
  */
  _resetSpinOut() {
    if (this._btnDown) {
      this._resetSpin();
      this._fireChangeEvent();
    }
  }
};
__decorate95([
  property_default({ type: Number })
], StepInput.prototype, "value", void 0);
__decorate95([
  property_default({ type: Number })
], StepInput.prototype, "min", void 0);
__decorate95([
  property_default({ type: Number })
], StepInput.prototype, "max", void 0);
__decorate95([
  property_default({ type: Number })
], StepInput.prototype, "step", void 0);
__decorate95([
  property_default()
], StepInput.prototype, "valueState", void 0);
__decorate95([
  property_default({ type: Boolean })
], StepInput.prototype, "required", void 0);
__decorate95([
  property_default({ type: Boolean })
], StepInput.prototype, "disabled", void 0);
__decorate95([
  property_default({ type: Boolean })
], StepInput.prototype, "readonly", void 0);
__decorate95([
  property_default()
], StepInput.prototype, "placeholder", void 0);
__decorate95([
  property_default()
], StepInput.prototype, "name", void 0);
__decorate95([
  property_default({ type: Number })
], StepInput.prototype, "valuePrecision", void 0);
__decorate95([
  property_default()
], StepInput.prototype, "accessibleName", void 0);
__decorate95([
  property_default()
], StepInput.prototype, "accessibleNameRef", void 0);
__decorate95([
  property_default({ noAttribute: true })
], StepInput.prototype, "_decIconDisabled", void 0);
__decorate95([
  property_default({ noAttribute: true })
], StepInput.prototype, "_incIconDisabled", void 0);
__decorate95([
  property_default({ type: Boolean })
], StepInput.prototype, "focused", void 0);
__decorate95([
  property_default({ noAttribute: true })
], StepInput.prototype, "_inputFocused", void 0);
__decorate95([
  property_default({ noAttribute: true })
], StepInput.prototype, "_previousValue", void 0);
__decorate95([
  property_default({ noAttribute: true })
], StepInput.prototype, "_waitTimeout", void 0);
__decorate95([
  property_default({ noAttribute: true })
], StepInput.prototype, "_speed", void 0);
__decorate95([
  property_default({ noAttribute: true })
], StepInput.prototype, "_btnDown", void 0);
__decorate95([
  property_default({ noAttribute: true })
], StepInput.prototype, "_spinTimeoutId", void 0);
__decorate95([
  property_default({ noAttribute: true })
], StepInput.prototype, "_spinStarted", void 0);
__decorate95([
  slot_default()
], StepInput.prototype, "valueStateMessage", void 0);
__decorate95([
  i18n_default("@ui5/webcomponents")
], StepInput, "i18nBundle", void 0);
StepInput = StepInput_1 = __decorate95([
  customElement_default({
    tag: "ui5-step-input",
    formAssociated: true,
    renderer: JsxRenderer_default,
    styles: StepInput_css_default,
    template: StepInputTemplate
  }),
  event_strict_default("change", {
    bubbles: true
  }),
  event_strict_default("input", {
    cancelable: true,
    bubbles: true
  }),
  event_strict_default("value-state-change", {
    bubbles: true,
    cancelable: true
  })
], StepInput);
StepInput.define();

// node_modules/@ui5/webcomponents-react/dist/webComponents/StepInput/index.js
var StepInput3 = withWebComponent("ui5-step-input", ["accessibleName", "accessibleNameRef", "max", "min", "name", "placeholder", "step", "value", "valuePrecision", "valueState"], ["disabled", "readonly", "required"], ["valueStateMessage"], ["change", "input", "value-state-change"]);
StepInput3.displayName = "StepInput";

// node_modules/@ui5/webcomponents-react/dist/webComponents/SuggestionItem/index.js
var SuggestionItem = withWebComponent("ui5-suggestion-item", ["additionalText", "text"], [], [], []);
SuggestionItem.displayName = "SuggestionItem";

// node_modules/@ui5/webcomponents/dist/SuggestionItemCustomTemplate.js
function SuggestionItemCustomTemplate() {
  return ListItemBaseTemplate.call(this, { listItemContent: listItemContent7 }, { role: "option" });
}
function listItemContent7() {
  return jsx("slot", {});
}

// node_modules/@ui5/webcomponents/dist/generated/themes/SuggestionItemCustom.css.js
registerThemePropertiesLoader("@ui5/webcomponents-theming", "sap_horizon", async () => parameters_bundle_css_default);
registerThemePropertiesLoader("@ui5/webcomponents", "sap_horizon", async () => parameters_bundle_css_default2);
var SuggestionItemCustom_css_default = `:host{height:var(--_ui5-v2-8-0_list_item_dropdown_base_height)}
`;

// node_modules/@ui5/webcomponents/dist/SuggestionItemCustom.js
var __decorate96 = function(decorators, target, key, desc) {
  var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
  if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
  else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
  return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var SuggestionItemCustom = class SuggestionItemCustom2 extends ListItemBase_default {
  get _effectiveTabIndex() {
    return -1;
  }
};
__decorate96([
  property_default()
], SuggestionItemCustom.prototype, "text", void 0);
__decorate96([
  slot_default({ type: Node, "default": true, invalidateOnChildChange: true })
], SuggestionItemCustom.prototype, "content", void 0);
SuggestionItemCustom = __decorate96([
  customElement_default({
    tag: "ui5-suggestion-item-custom",
    template: SuggestionItemCustomTemplate,
    styles: [
      ListItemBase_default.styles,
      SuggestionItemCustom_css_default
    ]
  })
], SuggestionItemCustom);
SuggestionItemCustom.define();

// node_modules/@ui5/webcomponents-react/dist/webComponents/SuggestionItemCustom/index.js
var SuggestionItemCustom3 = withWebComponent("ui5-suggestion-item-custom", ["text"], [], [], []);
SuggestionItemCustom3.displayName = "SuggestionItemCustom";

// node_modules/@ui5/webcomponents-react/dist/webComponents/SuggestionItemGroup/index.js
var SuggestionItemGroup = withWebComponent("ui5-suggestion-item-group", ["headerAccessibleName", "headerText"], [], ["header"], ["move-over", "move"]);
SuggestionItemGroup.displayName = "SuggestionItemGroup";

// node_modules/@ui5/webcomponents/dist/types/SwitchDesign.js
var SwitchDesign;
(function(SwitchDesign2) {
  SwitchDesign2["Textual"] = "Textual";
  SwitchDesign2["Graphical"] = "Graphical";
})(SwitchDesign || (SwitchDesign = {}));
var SwitchDesign_default = SwitchDesign;

// node_modules/@ui5/webcomponents/dist/SwitchTemplate.js
function SwitchTemplate() {
  return jsxs("div", { class: {
    "ui5-switch-root": true,
    "ui5-switch--desktop": isDesktop(),
    "ui5-switch--disabled": this.disabled,
    "ui5-switch--checked": this.checked,
    "ui5-switch--semantic": this.graphical,
    "ui5-switch--no-label": !(this.graphical || this.textOn || this.textOff),
    "ui5-switch--safari": isSafari()
  }, role: "switch", "aria-label": this.ariaLabelText, "aria-checked": this.checked, "aria-disabled": this.effectiveAriaDisabled, "aria-required": this.required, onClick: this._onclick, onKeyUp: this._onkeyup, onKeyDown: this._onkeydown, tabindex: this.effectiveTabIndex, title: this.tooltip, children: [jsx("div", { class: "ui5-switch-inner", children: jsx("div", { class: "ui5-switch-track", part: "slider", children: jsxs("div", { class: "ui5-switch-slider", children: [this.graphical ? jsxs(Fragment, { children: [jsx("span", { class: "ui5-switch-text ui5-switch-text--on", children: jsx(Icon_default, { name: accept_default, class: "ui5-switch-icon-on" }) }), jsx("span", { class: "ui5-switch-text ui5-switch-text--off", children: jsx(Icon_default, { name: decline_default, class: "ui5-switch-icon-off" }) })] }) : jsx(Fragment, { children: this.hasNoLabel ? jsxs(Fragment, { children: [jsx("span", { class: "ui5-switch-text ui5-switch-text--on ui5-switch-no-label-icon", part: "text-on", children: jsx(Icon_default, { name: this.sapNextIcon, class: "ui5-switch-no-label-icon-on" }) }), jsx("span", { class: "ui5-switch-text ui5-switch-text--off ui5-switch-no-label-icon", part: "text-off", children: jsx(Icon_default, { name: this.sapNextIcon, class: "ui5-switch-no-label-icon-off" }) })] }) : jsxs(Fragment, { children: [jsx("span", { class: "ui5-switch-text ui5-switch-text--on", part: "text-on", children: this._textOn }), jsx("span", { class: "ui5-switch-text ui5-switch-text--off", part: "text-off", children: this._textOff })] }) }), jsx("span", { class: "ui5-switch-handle", part: "handle" })] }) }) }), jsx("input", { type: "checkbox", checked: this.checked, class: "ui5-switch-input", "data-sap-no-tab-ref": true })] });
}

// node_modules/@ui5/webcomponents/dist/generated/themes/Switch.css.js
registerThemePropertiesLoader("@ui5/webcomponents-theming", "sap_horizon", async () => parameters_bundle_css_default);
registerThemePropertiesLoader("@ui5/webcomponents", "sap_horizon", async () => parameters_bundle_css_default2);
var Switch_css_default = `.ui5-hidden-text{position:absolute;clip:rect(1px,1px,1px,1px);user-select:none;left:-1000px;top:-1000px;pointer-events:none;font-size:0}:host{-webkit-tap-highlight-color:rgba(0,0,0,0)}:host(:not([hidden])){display:inline-block;pointer-events:none}.ui5-switch-root{position:relative;display:flex;align-items:center;width:var(--_ui5-v2-8-0_switch_width);height:var(--_ui5-v2-8-0_switch_height);min-width:var(--_ui5-v2-8-0_switch_min_width);cursor:pointer;outline:none;border-radius:var(--_ui5-v2-8-0-switch-root-border-radius);pointer-events:all}.ui5-switch-root:not(.ui5-switch--no-label):not(.ui5-switch--semantic){width:var(--_ui5-v2-8-0_switch_with_label_width);height:var(--_ui5-v2-8-0_switch_height)}.ui5-switch-root.ui5-switch--no-label{min-width:var(--_ui5-v2-8-0_switch_width)}.ui5-switch-inner{display:flex;align-items:center;justify-content:center;height:100%;width:100%;min-width:inherit;overflow:hidden;pointer-events:none;will-change:transform}:host([checked]) .ui5-switch-inner{border-radius:6.25rem;box-shadow:var(--_ui5-v2-8-0-switch-root-box-shadow)}.ui5-switch-track{display:flex;align-items:center;height:var(--_ui5-v2-8-0_switch_track_height);width:var(--_ui5-v2-8-0_switch_track_width);border:var(--_ui5-v2-8-0-switch-track-border);border-radius:var(--_ui5-v2-8-0_switch_track_border_radius);box-sizing:border-box;transition:var(--_ui5-v2-8-0_switch_track_transition)}.ui5-switch-root:not(.ui5-switch--no-label):not(.ui5-switch--semantic) .ui5-switch-track{height:var(--_ui5-v2-8-0_switch_track_with_label_height);width:var(--_ui5-v2-8-0_switch_track_with_label_width)}.ui5-switch-slider{position:relative;height:var(--_ui5-v2-8-0_switch_height);width:100%;transition:transform .1s ease-in;transform-origin:top left}.ui5-switch-slider>*:not(.ui5-switch-handle){display:var(--_ui5-v2-8-0-switch-slider-texts-display)}.ui5-switch-handle{position:absolute;display:flex;justify-content:center;align-items:center;width:var(--_ui5-v2-8-0_switch_handle_width);height:var(--_ui5-v2-8-0_switch_handle_height);border:var(--_ui5-v2-8-0_switch_handle_border);border-radius:var(--_ui5-v2-8-0_switch_handle_border_radius);box-sizing:border-box}.ui5-switch-root:not(.ui5-switch--no-label):not(.ui5-switch--semantic) .ui5-switch-handle{height:var(--_ui5-v2-8-0_switch_handle_with_label_height);width:var(--_ui5-v2-8-0_switch_handle_with_label_width)}.ui5-switch-text{display:flex;justify-content:center;position:absolute;z-index:var(--_ui5-v2-8-0_switch_text_z_index);min-width:var(--_ui5-v2-8-0_switch_text_min_width);font-size:var(--_ui5-v2-8-0_switch_text_font_size);font-family:var(--_ui5-v2-8-0-switch-text_font_family);text-transform:uppercase;text-align:center;white-space:nowrap;user-select:none;-webkit-user-select:none}.ui5-switch-handle,.ui5-switch-text{inset-inline-start:var(--_ui5-v2-8-0_switch_handle_left);top:50%;transform:translateY(-50%)}.ui5-switch-root:focus-visible:after,.ui5-switch--desktop.ui5-switch-root:focus-within:after{content:"";position:absolute;inset-inline-start:var(--_ui5-v2-8-0_switch_root_outline_left);inset-inline-end:var(--_ui5-v2-8-0_switch_root_outline_right);top:var(--_ui5-v2-8-0_switch_root_outline_top);bottom:var(--_ui5-v2-8-0_switch_root_outline_bottom);border:var(--_ui5-v2-8-0_switch_focus_outline);border-radius:var(--_ui5-v2-8-0_switch_root_after_boreder_radius);pointer-events:none;transition:var(--_ui5-v2-8-0_switch_track_transition);outline:var(--_ui5-v2-8-0_switch_root_after_outline)}.ui5-switch-root .ui5-switch-input{position:absolute;inset-inline-start:0;width:0;height:0;margin:0;visibility:hidden;appearance:none;-webkit-appearance:none}.ui5-switch-root.ui5-switch--disabled{opacity:var(--_ui5-v2-8-0_switch_disabled_opacity);cursor:default}.ui5-switch-root.ui5-switch--checked .ui5-switch-text--off{visibility:var(--_ui5-v2-8-0_switch_text_hidden)}.ui5-switch-root:not(.ui5-switch--checked) .ui5-switch-text--on{visibility:var(--_ui5-v2-8-0_switch_text_hidden)}.ui5-switch-root.ui5-switch--checked.ui5-switch--semantic .ui5-switch-text--on,.ui5-switch-root.ui5-switch--checked.ui5-switch--desktop.ui5-switch--no-label .ui5-switch-text--on{inset-inline-start:var(--_ui5-v2-8-0_switch_text_active_left)}.ui5-switch-root:not(.ui5-switch--checked).ui5-switch--semantic .ui5-switch-text--off,.ui5-switch-root:not(.ui5-switch--checked).ui5-switch--desktop.ui5-switch--no-label .ui5-switch-text--off{inset-inline-start:var(--_ui5-v2-8-0_switch_text_inactive_left);inset-inline-end:var(--_ui5-v2-8-0_switch_text_inactive_right)}.ui5-switch-root.ui5-switch--checked .ui5-switch-handle{background:var(--_ui5-v2-8-0_switch_handle_active_background_color);border-color:var(--_ui5-v2-8-0_switch_handle_active_border_color)}.ui5-switch-root:not(.ui5-switch--checked) .ui5-switch-handle{background:var(--_ui5-v2-8-0_switch_handle_inactive_background_color);border-color:var(--_ui5-v2-8-0_switch_handle_inactive_border_color)}.ui5-switch--desktop.ui5-switch-root.ui5-switch--checked:not(.ui5-switch--disabled):hover .ui5-switch-handle{background:var(--_ui5-v2-8-0_switch_handle_hover_active_background_color);border-color:var(--_ui5-v2-8-0_switch_handle_hover_active_border_color)}.ui5-switch--desktop.ui5-switch-root:not(.ui5-switch--disabled):not(.ui5-switch--checked):hover .ui5-switch-handle{background:var(--_ui5-v2-8-0_switch_handle_hover_inactive_background_color);border-color:var(--_ui5-v2-8-0_switch_handle_hover_inactive_border_color)}.ui5-switch-root.ui5-switch--semantic.ui5-switch--checked .ui5-switch-handle{background:var(--_ui5-v2-8-0_switch_handle_semantic_accept_background_color);border-color:var(--_ui5-v2-8-0_switch_handle_semantic_accept_border_color)}.ui5-switch-root.ui5-switch--semantic:not(.ui5-switch--checked) .ui5-switch-handle{background:var(--_ui5-v2-8-0_switch_handle_semantic_reject_background_color);border-color:var(--_ui5-v2-8-0_switch_handle_semantic_reject_border_color)}.ui5-switch--desktop.ui5-switch-root.ui5-switch--semantic.ui5-switch--checked:not(.ui5-switch--disabled):hover .ui5-switch-handle{background:var(--_ui5-v2-8-0_switch_handle_semantic_hover_accept_background_color);border-color:var(--_ui5-v2-8-0_switch_handle_semantic_hover_accept_border_color)}.ui5-switch--desktop.ui5-switch--semantic.ui5-switch-root:not(.ui5-switch--checked):not(.ui5-switch--disabled):hover .ui5-switch-handle{background:var(--_ui5-v2-8-0_switch_handle_semantic_hover_reject_background_color);border-color:var(--_ui5-v2-8-0_switch_handle_semantic_hover_reject_border_color)}.ui5-switch-root.ui5-switch--checked .ui5-switch-track{background:var(--_ui5-v2-8-0_switch_track_active_background_color);border-color:var(--_ui5-v2-8-0_switch_track_active_border_color)}.ui5-switch-root:not(.ui5-switch--checked) .ui5-switch-track{background:var(--_ui5-v2-8-0_switch_track_inactive_background_color);border-color:var(--_ui5-v2-8-0_switch_track_inactive_border_color)}.ui5-switch--desktop.ui5-switch-root.ui5-switch--checked:not(.ui5-switch--disabled):hover .ui5-switch-track{background:var(--_ui5-v2-8-0_switch_track_hover_active_background_color);border-color:var(--_ui5-v2-8-0_switch_track_hover_active_border_color)}.ui5-switch--desktop.ui5-switch-root:not(.ui5-switch--checked):not(.ui5-switch--disabled):hover .ui5-switch-track{background:var(--_ui5-v2-8-0_switch_track_hover_inactive_background_color);border-color:var(--_ui5-v2-8-0_switch_track_hover_inactive_border_color)}.ui5-switch-root.ui5-switch--semantic.ui5-switch--checked .ui5-switch-track{background:var(--_ui5-v2-8-0_switch_track_semantic_accept_background_color);border-color:var(--_ui5-v2-8-0_switch_track_semantic_accept_border_color)}.ui5-switch-root.ui5-switch--semantic:not(.ui5-switch--checked) .ui5-switch-track{background:var(--_ui5-v2-8-0_switch_track_semantic_reject_background_color);border-color:var(--_ui5-v2-8-0_switch_track_semantic_reject_border_color)}.ui5-switch--desktop.ui5-switch-root.ui5-switch--semantic.ui5-switch--checked:not(.ui5-switch--disabled):hover .ui5-switch-track{background:var(--_ui5-v2-8-0_switch_track_semantic_hover_accept_background_color);border-color:var(--_ui5-v2-8-0_switch_track_semantic_hover_accept_border_color)}.ui5-switch--desktop.ui5-switch--semantic.ui5-switch-root:not(.ui5-switch--checked):not(.ui5-switch--disabled):hover .ui5-switch-track{background:var(--_ui5-v2-8-0_switch_track_semantic_hover_reject_background_color);border-color:var(--_ui5-v2-8-0_switch_track_semantic_hover_reject_border_color)}.ui5-switch-root.ui5-switch--checked:not(.ui5-switch--no-label):not(.ui5-switch--semantic) .ui5-switch-slider{transform:var(--_ui5-v2-8-0_switch_transform_with_label)}.ui5-switch-root.ui5-switch--checked .ui5-switch-slider{transform:var(--_ui5-v2-8-0_switch_transform)}.ui5-switch-text .ui5-switch-text--on .ui5-switch-no-label-icon,.ui5-switch-root.ui5-switch--semantic .ui5-switch-text,.ui5-switch-root.ui5-switch--no-label .ui5-switch-text{display:flex;justify-content:center}.ui5-switch--no-label .ui5-switch-no-label-icon-on,.ui5-switch--no-label .ui5-switch-no-label-icon-off{width:var(--_ui5-v2-8-0_switch_icon_width);height:var(--_ui5-v2-8-0_switch_icon_height);display:var(--_ui5-v2-8-0_switch_track_icon_display)}.ui5-switch-root.ui5-switch--semantic .ui5-switch-icon-on,.ui5-switch-root.ui5-switch--semantic .ui5-switch-icon-off{width:var(--_ui5-v2-8-0_switch_icon_width);height:var(--_ui5-v2-8-0_switch_icon_height)}.ui5-switch-root .ui5-switch-text{font-family:var(--_ui5-v2-8-0_switch_text_font_family);font-size:var(--_ui5-v2-8-0_switch_text_font_size);width:var(--_ui5-v2-8-0_switch_text_width)}.ui5-switch-root:not(.ui5-switch--no-label):not(.ui5-switch--semantic) .ui5-switch-text{font-family:var(--_ui5-v2-8-0_switch_text_with_label_font_family);font-size:var(--_ui5-v2-8-0_switch_text_with_label_font_size);width:var(--_ui5-v2-8-0_switch_text_with_label_width)}:host([active]) .ui5-switch--desktop.ui5-switch-root:not(.ui5-switch--disabled) .ui5-switch-track{background:var( --_ui5-v2-8-0-switch_track-off-active-background)}:host([active]) .ui5-switch--desktop.ui5-switch-root.ui5-switch--checked:not(.ui5-switch--disabled):hover .ui5-switch-track{background:var(--_ui5-v2-8-0-switch_track-on-active-background)}.ui5-switch--desktop.ui5-switch-root:not(.ui5-switch--disabled):hover .ui5-switch-handle{box-shadow:var(--_ui5-v2-8-0_switch_handle_off_hover_box_shadow)}.ui5-switch--desktop.ui5-switch-root.ui5-switch--checked:not(.ui5-switch--disabled):hover .ui5-switch-handle{box-shadow:var(--_ui5-v2-8-0_switch_handle_on_hover_box_shadow)}.ui5-switch--desktop.ui5-switch-root.ui5-switch--semantic:not(.ui5-switch--disabled):hover .ui5-switch-handle{box-shadow:var(--_ui5-v2-8-0_switch_handle_semantic_off_hover_box_shadow)}.ui5-switch--desktop.ui5-switch-root.ui5-switch--semantic.ui5-switch--checked:not(.ui5-switch--disabled):hover .ui5-switch-handle{box-shadow:var(--_ui5-v2-8-0_switch_handle_semantic_on_hover_box_shadow)}.ui5-switch-root.ui5-switch--semantic .ui5-switch-icon-on,.ui5-switch-root.ui5-switch--semantic .ui5-switch-text--on{color:var(--_ui5-v2-8-0_switch_text_semantic_accept_color)}.ui5-switch-root.ui5-switch--semantic .ui5-switch-icon-off,.ui5-switch-root.ui5-switch--semantic .ui5-switch-text--off{color:var(--_ui5-v2-8-0_switch_text_semantic_reject_color)}.ui5-switch-root .ui5-switch-text--on{color:var(--_ui5-v2-8-0_switch_text_active_color);overflow:var(--_ui5-v2-8-0_switch_text_overflow);text-overflow:ellipsis;inset-inline-start:var(--_ui5-v2-8-0_switch_text_active_left_alternate)}.ui5-switch-root .ui5-switch-text--off{color:var(--_ui5-v2-8-0_switch_text_inactive_color);overflow:var(--_ui5-v2-8-0_switch_text_overflow);text-overflow:ellipsis;inset-inline-start:var(--_ui5-v2-8-0_switch_text_inactive_left_alternate);inset-inline-end:var(--_ui5-v2-8-0_switch_text_inactive_right_alternate)}.ui5-switch-root.ui5-switch--safari .ui5-switch-text--on.ui5-switch-no-label-icon,.ui5-switch-root.ui5-switch--safari .ui5-switch-text--off.ui5-switch-no-label-icon{inset-inline-start:.1875rem}.ui5-switch-root .ui5-switch-no-label-icon-on,.ui5-switch-root .ui5-switch-icon-on{color:var(--_ui5-v2-8-0_switch_text_active_color)}.ui5-switch-root .ui5-switch-no-label-icon-off,.ui5-switch-root .ui5-switch-icon-off{color:var(--_ui5-v2-8-0_switch_text_inactive_color)}:dir(rtl).ui5-switch-root.ui5-switch--checked:not(.ui5-switch--no-label):not(.ui5-switch--semantic) .ui5-switch-slider{transform:var(--_ui5-v2-8-0_switch_rtl_transform_with_label)}:dir(rtl).ui5-switch-root.ui5-switch--checked .ui5-switch-slider{transform:var(--_ui5-v2-8-0_switch_rtl_transform)}
`;

// node_modules/@ui5/webcomponents/dist/Switch.js
var __decorate97 = function(decorators, target, key, desc) {
  var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
  if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
  else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
  return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var Switch_1;
var Switch = Switch_1 = class Switch2 extends UI5Element_default {
  constructor() {
    super(...arguments);
    this.design = "Textual";
    this.checked = false;
    this.disabled = false;
    this.required = false;
  }
  get formValidityMessage() {
    return Switch_1.i18nBundle.getText(FORM_CHECKABLE_REQUIRED);
  }
  get formValidity() {
    return { valueMissing: this.required && !this.checked };
  }
  async formElementAnchor() {
    return this.getFocusDomRefAsync();
  }
  get formFormattedValue() {
    return this.checked ? "on" : null;
  }
  get sapNextIcon() {
    return this.checked ? "accept" : "less";
  }
  _onclick() {
    this.toggle();
  }
  _onkeydown(e) {
    if (isSpace(e)) {
      e.preventDefault();
    }
    if (isEnter(e)) {
      this._onclick();
    }
  }
  _onkeyup(e) {
    if (isSpace(e)) {
      this._onclick();
    }
  }
  toggle() {
    if (!this.disabled) {
      this.checked = !this.checked;
      const changePrevented = !this.fireDecoratorEvent("change");
      const valueChangePrevented = !this.fireDecoratorEvent("value-changed");
      if (changePrevented || valueChangePrevented) {
        this.checked = !this.checked;
      }
    }
  }
  get graphical() {
    return this.design === SwitchDesign_default.Graphical;
  }
  get hasNoLabel() {
    return !(this.graphical || this.textOn || this.textOff);
  }
  get _textOn() {
    return this.graphical ? "" : this.textOn;
  }
  get _textOff() {
    return this.graphical ? "" : this.textOff;
  }
  get effectiveTabIndex() {
    return this.disabled ? void 0 : 0;
  }
  get effectiveAriaDisabled() {
    return this.disabled ? "true" : void 0;
  }
  get accessibilityOnText() {
    return this._textOn;
  }
  get accessibilityOffText() {
    return this._textOff;
  }
  get hiddenText() {
    return this.checked ? this.accessibilityOnText : this.accessibilityOffText;
  }
  get ariaLabelText() {
    return [getEffectiveAriaLabelText(this), this.hiddenText].join(" ").trim();
  }
};
__decorate97([
  property_default()
], Switch.prototype, "design", void 0);
__decorate97([
  property_default({ type: Boolean })
], Switch.prototype, "checked", void 0);
__decorate97([
  property_default({ type: Boolean })
], Switch.prototype, "disabled", void 0);
__decorate97([
  property_default()
], Switch.prototype, "textOn", void 0);
__decorate97([
  property_default()
], Switch.prototype, "textOff", void 0);
__decorate97([
  property_default()
], Switch.prototype, "accessibleName", void 0);
__decorate97([
  property_default()
], Switch.prototype, "accessibleNameRef", void 0);
__decorate97([
  property_default()
], Switch.prototype, "tooltip", void 0);
__decorate97([
  property_default({ type: Boolean })
], Switch.prototype, "required", void 0);
__decorate97([
  property_default()
], Switch.prototype, "name", void 0);
__decorate97([
  i18n_default("@ui5/webcomponents")
], Switch, "i18nBundle", void 0);
Switch = Switch_1 = __decorate97([
  customElement_default({
    tag: "ui5-switch",
    formAssociated: true,
    languageAware: true,
    styles: Switch_css_default,
    renderer: JsxRenderer_default,
    template: SwitchTemplate,
    shadowRootOptions: { delegatesFocus: true }
  }),
  event_strict_default("change", {
    bubbles: true,
    cancelable: true
  }),
  event_strict_default("value-changed", {
    bubbles: true,
    cancelable: true
  })
], Switch);
Switch.define();

// node_modules/@ui5/webcomponents-react/dist/webComponents/Switch/index.js
var Switch3 = withWebComponent("ui5-switch", ["accessibleName", "accessibleNameRef", "design", "name", "textOff", "textOn", "tooltip"], ["checked", "disabled", "required"], [], ["change"]);
Switch3.displayName = "Switch";

// node_modules/@ui5/webcomponents/dist/types/SemanticColor.js
var SemanticColor;
(function(SemanticColor2) {
  SemanticColor2["Default"] = "Default";
  SemanticColor2["Positive"] = "Positive";
  SemanticColor2["Negative"] = "Negative";
  SemanticColor2["Critical"] = "Critical";
  SemanticColor2["Neutral"] = "Neutral";
})(SemanticColor || (SemanticColor = {}));
var SemanticColor_default = SemanticColor;

// node_modules/@ui5/webcomponents-base/dist/util/dragAndDrop/longDragOverHandler.js
var lastTarget = null;
var lastTargetDragOverStart = Date.now();
var LONG_DRAG_OVER_THRESHOLD = 300;
var longDragOverHandler = (targetsSelector) => {
  return (target, propertyKey, descriptor) => {
    const origHandler = descriptor.value;
    descriptor.value = function handleDragOver(e) {
      let isLongDragOver = false;
      if (e.target instanceof HTMLElement) {
        const currentTarget = e.target.closest(targetsSelector);
        if (currentTarget === lastTarget && Date.now() - lastTargetDragOverStart >= LONG_DRAG_OVER_THRESHOLD) {
          isLongDragOver = true;
        } else if (currentTarget !== lastTarget) {
          lastTarget = currentTarget;
          lastTargetDragOverStart = Date.now();
        }
      }
      origHandler.apply(this, [e, isLongDragOver]);
    };
    return descriptor;
  };
};
var longDragOverHandler_default = longDragOverHandler;

// node_modules/@ui5/webcomponents/dist/types/TabContainerTabsPlacement.js
var TabContainerTabsPlacement;
(function(TabContainerTabsPlacement2) {
  TabContainerTabsPlacement2["Top"] = "Top";
  TabContainerTabsPlacement2["Bottom"] = "Bottom";
})(TabContainerTabsPlacement || (TabContainerTabsPlacement = {}));
var TabContainerTabsPlacement_default = TabContainerTabsPlacement;

// node_modules/@ui5/webcomponents/dist/types/TabLayout.js
var TabLayout;
(function(TabLayout2) {
  TabLayout2["Inline"] = "Inline";
  TabLayout2["Standard"] = "Standard";
})(TabLayout || (TabLayout = {}));
var TabLayout_default = TabLayout;

// node_modules/@ui5/webcomponents/dist/types/OverflowMode.js
var OverflowMode;
(function(OverflowMode2) {
  OverflowMode2["End"] = "End";
  OverflowMode2["StartAndEnd"] = "StartAndEnd";
})(OverflowMode || (OverflowMode = {}));
var OverflowMode_default = OverflowMode;

// node_modules/@ui5/webcomponents/dist/TabContainerPopoverTemplate.js
function TabContainerPopoverTemplate() {
  return jsxs(ResponsivePopover_default, { id: `${this._id}-overflowMenu`, horizontalAlign: "End", placement: "Bottom", contentOnlyOnDesktop: true, hideArrow: true, _hideHeader: true, class: "ui5-tab-container-responsive-popover", onDragStart: this._onDragStart, children: [jsx(List_default, { selectionMode: "Single", separators: "None", onItemClick: this._onOverflowListItemClick, onMoveOver: this._onPopoverListMoveOver, onMove: this._onPopoverListMove, onKeyDown: this._onPopoverListKeyDown, children: this._popoverItemsFlat.map((item2) => item2.overflowPresentation) }), jsx("div", { slot: "footer", class: "ui5-responsive-popover-footer", children: jsx(Button_default, { design: "Transparent", onClick: this._closePopover, children: this.popoverCancelButtonText }) })] });
}

// node_modules/@ui5/webcomponents/dist/TabContainerTemplate.js
function contentArea() {
  var _a, _b;
  return jsx("div", { class: {
    "ui5-tc__content": true,
    "ui5-tc__content--collapsed": this._contentCollapsed
  }, part: "content", children: jsx("div", { class: "ui5-tc__contentItem", id: "ui5-tc-content", hidden: (_a = this._selectedTab) == null ? void 0 : _a.effectiveHidden, role: "tabpanel", "aria-labelledby": (_b = this._selectedTab) == null ? void 0 : _b._id, children: this.items.map((item2) => jsx("slot", { name: item2._effectiveSlotName })) }) });
}
var defaultPartials = {
  contentArea
};
function TabContainerTemplate(injectedPartials) {
  const partials = {
    ...defaultPartials,
    ...injectedPartials
  };
  return jsxs(Fragment, { children: [jsxs("div", { class: {
    "ui5-tc-root": true,
    "ui5-tc--textOnly": this.textOnly,
    "ui5-tc--withAdditionalText": this.withAdditionalText,
    "ui5-tc--standardTabLayout": this.standardTabLayout,
    "ui5-tc--noTabSelected": !this._selectedTab
  }, children: [this.tabsAtTheBottom && partials.contentArea.call(this), jsxs("div", { class: "ui5-tc__header", id: `${this._id}-header`, onFocusIn: this._onHeaderFocusin, onDragStart: this._onDragStart, onDragEnter: this._onHeaderDragEnter, onDragOver: this._onHeaderDragOver, onDrop: this._onHeaderDrop, onDragLeave: this._onHeaderDragLeave, part: "tabstrip", children: [jsx("div", { class: "ui5-tc__overflow ui5-tc__overflow--start", onClick: this._onOverflowClick, onKeyDown: this._onOverflowKeyDown, hidden: true, children: this.startOverflowButton.length ? jsx("slot", { name: "startOverflowButton" }) : (
    // else
    jsx(Button_default, { endIcon: this.overflowMenuIcon, "data-ui5-stable": "overflow-start", tabindex: -1, tooltip: this.overflowMenuTitle, accessibilityAttributes: this.overflowBtnAccessibilityAttributes, children: this._startOverflowText })
  ) }), jsx("div", { id: `${this._id}-tabStrip`, class: "ui5-tc__tabStrip", role: "tablist", "aria-describedby": this.tablistAriaDescribedById, onClick: this._onTabStripClick, onKeyDown: this._onTabStripKeyDown, onKeyUp: this._onTabStripKeyUp, children: this.items.map((item2) => item2.stripPresentation) }), jsx("div", { class: "ui5-tc__overflow ui5-tc__overflow--end", onClick: this._onOverflowClick, onKeyDown: this._onOverflowKeyDown, hidden: true, children: this.overflowButton.length ? jsx("slot", { name: "overflowButton" }) : jsx(Button_default, { endIcon: this.overflowMenuIcon, "data-ui5-stable": "overflow-end", tabindex: -1, tooltip: this.overflowMenuTitle, accessibilityAttributes: this.overflowBtnAccessibilityAttributes, children: this._endOverflowText }) }), jsx(DropIndicator_default, { orientation: "Vertical", ownerReference: this })] }), !this.tabsAtTheBottom && partials.contentArea.call(this), this.hasItems && jsx("span", { id: `${this._id}-invisibleText`, class: "ui5-hidden-text", children: this.accInvisibleText })] }), TabContainerPopoverTemplate.call(this)] });
}

// node_modules/@ui5/webcomponents/dist/generated/themes/TabContainer.css.js
registerThemePropertiesLoader("@ui5/webcomponents-theming", "sap_horizon", async () => parameters_bundle_css_default);
registerThemePropertiesLoader("@ui5/webcomponents", "sap_horizon", async () => parameters_bundle_css_default2);
var TabContainer_css_default = `.ui5-hidden-text{position:absolute;clip:rect(1px,1px,1px,1px);user-select:none;left:-1000px;top:-1000px;pointer-events:none;font-size:0}:host(:not([hidden])){display:block;width:100%}.ui5-tc-root{display:flex;flex-direction:column;width:100%;height:100%;font-family:"72override",var(--sapFontHeaderFamily);font-size:1rem}.ui5-tc__header{position:relative;display:flex;align-items:center;background-color:var(--_ui5-v2-8-0_tc_header_background);--ui5-v2-8-0_tc_header_active_background_color: var(--_ui5-v2-8-0_tc_header_background);height:var(--_ui5-v2-8-0_tc_header_height);box-shadow:var(--_ui5-v2-8-0_tc_header_box_shadow);box-sizing:border-box}:host([tabs-placement="Bottom"]) .ui5-tc__header{border-top:var(--_ui5-v2-8-0_tc_header_border_bottom)}:host([header-background-design="Transparent"]) .ui5-tc__header{background-color:transparent;--ui5-v2-8-0_tc_header_active_background_color: transparent;box-shadow:none;border-bottom:.0625rem solid var(--sapObjectHeader_BorderColor)}:host([header-background-design="Translucent"]) .ui5-tc__header{background-color:var(--_ui5-v2-8-0_tc_header_background_translucent);--ui5-v2-8-0_tc_header_active_background_color: var(--_ui5-v2-8-0_tc_header_background_translucent)}.ui5-tc-root.ui5-tc--textOnly .ui5-tc__header{height:var(--_ui5-v2-8-0_tc_header_height_text_only)}.ui5-tc-root.ui5-tc--textOnly.ui5-tc--withAdditionalText.ui5-tc--standardTabLayout .ui5-tc__header{height:var(--_ui5-v2-8-0_tc_header_height_text_with_additional_text)}.ui5-tc__tabStrip{flex:1;display:flex;overflow:hidden;box-sizing:border-box;position:relative;white-space:nowrap}.ui5-tc__separator:focus{outline:none}.ui5-tc__overflow{flex:0 0 0}.ui5-tc__overflow.ui5-tc__overflow--end{padding-inline-start:.188rem;margin-inline-end:1rem}.ui5-tc__overflow.ui5-tc__overflow--start{margin-inline-start:1rem}.ui5-tc__overflow[hidden]{display:none}.ui5-tc__overflow>[ui5-button]{border-radius:.75rem;height:1.5rem;--_ui5-v2-8-0_button_focused_border_radius: .75rem}.ui5-tc__overflow>[ui5-button]:not([active]){color:var(--_ui5-v2-8-0_tc_overflow_text_color)}.ui5-tc__overflow>[ui5-button]:not([active]):hover{color:var(--_ui5-v2-8-0_tc_overflow_text_color)}.ui5-tc__overflow>[ui5-button][focused]{outline-offset:.125rem;--_ui5-v2-8-0_button_focused_border: none;outline:var(--sapContent_FocusWidth) var(--sapContent_FocusStyle) var(--sapContent_FocusColor)}.ui5-tc-root.ui5-tc--textOnly .ui5-tc__content{height:calc(100% - var(--_ui5-v2-8-0_tc_header_height_text_only))}.ui5-tc__content{position:relative;display:flex;height:calc(100% - var(--_ui5-v2-8-0_tc_header_height));background-color:var(--_ui5-v2-8-0_tc_content_background);border-bottom:var(--_ui5-v2-8-0_tc_content_border_bottom);box-sizing:border-box}:host([tabs-placement="Bottom"]) .ui5-tc__content{border-top:var(--_ui5-v2-8-0_tc_content_border_bottom)}:host([content-background-design="Transparent"]) .ui5-tc__content{background-color:transparent}:host([content-background-design="Translucent"]) .ui5-tc__content{background-color:var(--_ui5-v2-8-0_tc_content_background_translucent)}:host([header-background-design="Transparent"]) .ui5-tc__content{border-bottom:none}.ui5-tc__content--collapsed{display:none}.ui5-tc--transparent .ui5-tc__content{background-color:transparent}.ui5-tc__contentItem{max-height:100%;display:flex;flex-grow:1;overflow:auto}.ui5-tc__contentItem[hidden]{display:none}.ui5-tc__header{padding:0}.ui5-tc__content{padding:1rem}:host([media-range="M"]) .ui5-tc__header,:host([media-range="L"]) .ui5-tc__header{padding:0 1rem}:host([media-range="M"]) .ui5-tc__content,:host([media-range="L"]) .ui5-tc__content{padding:1rem 2rem}:host([media-range="XL"]) .ui5-tc__header{padding:0 2rem}:host([media-range="XL"]) .ui5-tc__content{padding:1rem 3rem}.ui5-tc-root.ui5-tc--noTabSelected .ui5-tc__content{padding:0}
`;

// node_modules/@ui5/webcomponents/dist/TabContainer.js
var __decorate98 = function(decorators, target, key, desc) {
  var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
  if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
  else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
  return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var TabContainer_1;
var tabStyles = [];
var PAGE_UP_DOWN_SIZE2 = 5;
var TabContainer = TabContainer_1 = class TabContainer2 extends UI5Element_default {
  static registerTabStyles(styles2) {
    tabStyles.push(styles2);
  }
  constructor() {
    super();
    this.collapsed = false;
    this.tabLayout = "Standard";
    this.overflowMode = "End";
    this.headerBackgroundDesign = "Solid";
    this.contentBackgroundDesign = "Solid";
    this.tabsPlacement = "Top";
    this.noAutoSelection = false;
    this._animationRunning = false;
    this._contentCollapsed = false;
    this._startOverflowText = "0";
    this._endOverflowText = "More";
    this._popoverItemsFlat = [];
    this._itemsFlat = [];
    this._hasScheduledPopoverOpen = false;
    this._handleResizeBound = this._handleResize.bind(this);
    this._itemNavigation = new ItemNavigation_default(this, {
      getItemsCallback: () => this._getFocusableRefs(),
      skipItemsSize: PAGE_UP_DOWN_SIZE2
    });
  }
  onBeforeRendering() {
    this._itemsFlat = this._flatten(this.items);
    if (!this._itemsFlat.length) {
      return;
    }
    const selectedTab = this._itemsFlat.find((tab) => !tab.isSeparator && tab.selected);
    if (selectedTab) {
      this._selectedTab = selectedTab;
    } else if (!this.noAutoSelection) {
      this._selectedTab = this._itemsFlat[0];
    } else {
      this._selectedTab = void 0;
    }
    walk(this.items, (item2) => {
      if (!item2.isSeparator) {
        item2._selectedTabReference = this._selectedTab;
      }
    });
    this._sendStripPresentationInfos(this.items);
    if (!this._animationRunning) {
      this._contentCollapsed = this.collapsed;
    }
  }
  onAfterRendering() {
    var _a;
    if (!this.items.length) {
      return;
    }
    this._setItemsForStrip();
    if (!this.shadowRoot.contains(document.activeElement)) {
      const focusStart = this._getRootTab(this._selectedTab);
      if (focusStart) {
        this._itemNavigation.setCurrentItem(focusStart);
      }
    }
    if ((_a = this.responsivePopover) == null ? void 0 : _a.open) {
      const popoverItems = this._getPopoverItemsFor(this._getPopoverOwner(this.responsivePopover.opener));
      if (popoverItems.length) {
        this._setPopoverItems(popoverItems);
      } else {
        this._closePopover();
      }
    }
  }
  onEnterDOM() {
    ResizeHandler_default.register(this._getHeader(), this._handleResizeBound);
    DragRegistry_default.subscribe(this);
    this._setDraggedElement = DragRegistry_default.addSelfManagedArea(this);
    if (isDesktop()) {
      this.setAttribute("desktop", "");
    }
  }
  onExitDOM() {
    ResizeHandler_default.deregister(this._getHeader(), this._handleResizeBound);
    DragRegistry_default.unsubscribe(this);
    DragRegistry_default.removeSelfManagedArea(this);
    this._setDraggedElement = void 0;
  }
  _handleResize() {
    if (this.responsivePopover && this.responsivePopover.open) {
      this._closePopover();
    }
    this._width = this.offsetWidth;
    this._updateMediaRange(this._width);
  }
  _updateMediaRange(width) {
    this.mediaRange = MediaRange_default.getCurrentRange(MediaRange_default.RANGESETS.RANGE_4STEPS, width);
  }
  _sendStripPresentationInfos(items3) {
    const setsize = this._getTabs().length;
    let posinset = 1;
    items3.forEach((item2) => {
      let info = {
        getElementInStrip: () => this.getDomRef().querySelector(`[id="${item2._id}"]`)
      };
      if (!item2.isSeparator) {
        info = {
          ...info,
          isInline: this.tabLayout === TabLayout_default.Inline,
          mixedMode: this.mixedMode,
          posinset,
          setsize,
          isTopLevelTab: items3.some((i) => i === item2)
        };
        posinset++;
      }
      item2.receiveStripInfo(info);
    });
  }
  _onHeaderFocusin(e) {
    const tab = getTabInStrip(e.target);
    if (tab) {
      this._itemNavigation.setCurrentItem(tab.realTabReference);
    }
  }
  _onDragStart(e) {
    if (!e.dataTransfer || !(e.target instanceof HTMLElement)) {
      return;
    }
    e.dataTransfer.dropEffect = "move";
    e.dataTransfer.effectAllowed = "move";
    this._setDraggedElement(e.target.realTabReference);
  }
  _onHeaderDragEnter(e) {
    e.preventDefault();
  }
  _onHeaderDragOver(e, isLongDragOver) {
    if (!(e.target instanceof HTMLElement) || !e.target.closest("[data-ui5-stable=overflow-start],[data-ui5-stable=overflow-end],[role=tab],[role=separator]")) {
      this.dropIndicatorDOM.targetReference = null;
      return;
    }
    const draggedElement = DragRegistry_default.getDraggedElement();
    const closestPosition = findClosestPosition([...this._getTabStrip().querySelectorAll(`[role="tab"]:not([hidden])`)], e.clientX, Orientation_default.Horizontal);
    const overflowButton = e.target.closest("[data-ui5-stable=overflow-start],[data-ui5-stable=overflow-end]");
    let popoverTarget = null;
    if (overflowButton) {
      popoverTarget = overflowButton;
      e.preventDefault();
    } else if (closestPosition) {
      const dropTarget = closestPosition.element.realTabReference;
      if (dropTarget === draggedElement) {
        closestPosition.placements = closestPosition.placements.filter((placement2) => placement2 !== MovePlacement_default.On);
      }
      const { targetReference, placement } = handleDragOver_default(e, this, closestPosition, dropTarget);
      this.dropIndicatorDOM.targetReference = targetReference;
      this.dropIndicatorDOM.placement = placement;
      if (placement === MovePlacement_default.On && closestPosition.element.realTabReference.items.length) {
        popoverTarget = closestPosition.element;
      } else if (!placement) {
        this.dropIndicatorDOM.targetReference = null;
      }
    }
    if (popoverTarget && isLongDragOver) {
      this._showPopoverAt(popoverTarget, false, true);
    } else {
      this._closePopover();
    }
  }
  _onHeaderDrop(e) {
    if (e.target === this._getStartOverflowBtnDOM() || e.target === this._getEndOverflowBtnDOM()) {
      return;
    }
    handleDrop_default(e, this, this.dropIndicatorDOM.targetReference.realTabReference, this.dropIndicatorDOM.placement);
    this.dropIndicatorDOM.targetReference = null;
  }
  _moveHeaderItem(tab, e) {
    if (!tab.movable) {
      return;
    }
    const headerItems = this.items.map((item2) => item2.getDomRefInStrip()).filter((item2) => !(item2 == null ? void 0 : item2.hasAttribute("hidden")));
    let positions = findClosestPositionsByKey(headerItems, tab.getDomRefInStrip(), e);
    positions = positions.map(({ element, placement }) => {
      while (element && element.realTabReference.hasAttribute("ui5-tab-separator") && placement === MovePlacement_default.Before) {
        element = headerItems.at(headerItems.indexOf(element) - 1);
        placement = MovePlacement_default.After;
      }
      while (element && element.realTabReference.hasAttribute("ui5-tab-separator") && placement === MovePlacement_default.After) {
        element = headerItems.at(headerItems.indexOf(element) + 1);
        placement = MovePlacement_default.Before;
      }
      return {
        element,
        placement
      };
    });
    const acceptedPosition = positions.find(({ element, placement }) => {
      return !this.fireDecoratorEvent("move-over", {
        source: {
          element: tab
        },
        destination: {
          element: element.realTabReference,
          placement
        }
      });
    });
    if (acceptedPosition) {
      this.fireDecoratorEvent("move", {
        source: {
          element: tab
        },
        destination: {
          element: acceptedPosition.element.realTabReference,
          placement: acceptedPosition.placement
        }
      });
      tab.focus();
    }
  }
  _onHeaderDragLeave(e) {
    if (e.relatedTarget instanceof Node && this.shadowRoot.contains(e.relatedTarget)) {
      return;
    }
    this.dropIndicatorDOM.targetReference = null;
  }
  _onPopoverListMoveOver(e) {
    var _a;
    const { destination, source } = e.detail;
    const draggedElement = DragRegistry_default.getDraggedElement();
    let destinationElement = destination.element.realTabReference;
    if (e.detail.originalEvent instanceof KeyboardEvent) {
      const realTabReference = source.element.realTabReference;
      const siblings = this._findSiblings(realTabReference);
      let items3 = siblings;
      if (this.items.includes(realTabReference)) {
        items3 = siblings.filter((sibling) => {
          return e.target.items.some((el) => el.realTabReference === sibling);
        });
      }
      const nextPosition = findClosestPositionsByKey(items3, realTabReference, e.detail.originalEvent);
      destinationElement = (_a = nextPosition[0]) == null ? void 0 : _a.element;
    }
    if (!destinationElement) {
      return;
    }
    if (destination.placement === MovePlacement_default.On && (destinationElement.hasAttribute("ui5-tab-separator") || draggedElement === destinationElement)) {
      return;
    }
    if (draggedElement !== destinationElement && draggedElement.contains(destinationElement)) {
      return;
    }
    const placementAccepted = !this.fireDecoratorEvent("move-over", {
      source: {
        element: draggedElement
      },
      destination: {
        element: destinationElement,
        placement: destination.placement
      }
    });
    if (placementAccepted) {
      e.preventDefault();
    } else {
      this.dropIndicatorDOM.targetReference = null;
    }
  }
  _onPopoverListMove(e) {
    var _a;
    const { destination, source } = e.detail;
    const draggedElement = DragRegistry_default.getDraggedElement();
    let destinationElement = destination.element.realTabReference;
    if (e.detail.originalEvent instanceof KeyboardEvent) {
      const realTabReference = source.element.realTabReference;
      const siblings = this._findSiblings(realTabReference);
      let items3 = siblings;
      if (this.items.includes(realTabReference)) {
        items3 = siblings.filter((sibling) => {
          return e.target.items.some((el) => el.realTabReference === sibling);
        });
      }
      const nextPosition = findClosestPositionsByKey(items3, realTabReference, e.detail.originalEvent);
      destinationElement = (_a = nextPosition[0]) == null ? void 0 : _a.element;
    }
    if (!destinationElement) {
      return;
    }
    e.preventDefault();
    this.fireDecoratorEvent("move", {
      source: {
        element: draggedElement
      },
      destination: {
        element: destinationElement,
        placement: destination.placement
      }
    });
    this.dropIndicatorDOM.targetReference = null;
    draggedElement.focus();
  }
  _onPopoverListKeyDown(e) {
    if (isCtrl(e)) {
      this._setDraggedElement(e.target.realTabReference);
    }
  }
  async _onTabStripClick(e) {
    const tab = getTabInStrip(e.target);
    if (!tab || tab.realTabReference.disabled) {
      return;
    }
    e.stopPropagation();
    e.preventDefault();
    if (e.target.hasAttribute("ui5-button")) {
      this._onTabExpandButtonClick(e);
      return;
    }
    if (!tab.realTabReference.hasOwnContent && tab.realTabReference.tabs.length) {
      await this._togglePopover(tab);
      return;
    }
    this._onHeaderItemSelect(tab);
  }
  async _onTabExpandButtonClick(e) {
    e.stopPropagation();
    e.preventDefault();
    let tabInstance;
    if (isTabInStrip(e.target)) {
      tabInstance = e.target;
    } else {
      tabInstance = getTabInStrip(e.target);
    }
    if (tabInstance) {
      tabInstance.focus();
    }
    let opener2 = e.target;
    if (e.type === "keydown" && !e.target.realTabReference.isSingleClickArea) {
      opener2 = e.target.querySelector(".ui5-tab-expand-button [ui5-button]");
    }
    if (!tabInstance) {
      this._onHeaderItemSelect(opener2.parentElement);
      return;
    }
    await this._togglePopover(opener2, true);
  }
  _setPopoverInitialFocus() {
    const selectedTabInOverflow = this._getSelectedTabInOverflow();
    const tab = selectedTabInOverflow || this._getFirstFocusableItemInOverflow();
    this.responsivePopover.initialFocus = `${tab.realTabReference._id}-li`;
  }
  _getSelectedTabInOverflow() {
    return this.responsivePopover.content[0].items.find((item2) => {
      return item2.realTabReference && item2.realTabReference.selected;
    });
  }
  _getFirstFocusableItemInOverflow() {
    return this.responsivePopover.content[0].items.find((item2) => item2.classList.contains("ui5-tab-overflow-item"));
  }
  _findTabInOverflow(realTab) {
    if (!this.responsivePopover.open) {
      return void 0;
    }
    return this.responsivePopover.content[0].items.find((item2) => item2.realTabReference === realTab);
  }
  _onTabStripKeyDown(e) {
    const tab = getTabInStrip(e.target);
    if (!tab) {
      return;
    }
    if (isCtrl(e)) {
      this._moveHeaderItem(tab.realTabReference, e);
      e.preventDefault();
      return;
    }
    if (tab.realTabReference.disabled) {
      return;
    }
    if (isEnter(e)) {
      if (tab.realTabReference.isSingleClickArea) {
        this._onTabStripClick(e);
      } else {
        this._onHeaderItemSelect(tab);
      }
    }
    if (isSpace(e)) {
      e.preventDefault();
    }
    if (isDown(e) || isUp(e)) {
      if (tab.realTabReference.requiresExpandButton) {
        this._onTabExpandButtonClick(e);
      }
      if (tab.realTabReference.isSingleClickArea) {
        this._onTabStripClick(e);
      }
    }
  }
  _onTabStripKeyUp(e) {
    const tab = getTabInStrip(e.target);
    if (!tab || tab.realTabReference.disabled) {
      return;
    }
    if (isSpace(e)) {
      e.preventDefault();
      if (tab.realTabReference.isSingleClickArea) {
        this._onTabStripClick(e);
      } else {
        this._onHeaderItemSelect(tab);
      }
    }
  }
  _onHeaderItemSelect(tab) {
    if (!tab.hasAttribute("disabled")) {
      this._onItemSelect(tab.id);
    }
  }
  async _onOverflowListItemClick(e) {
    e.preventDefault();
    this._onItemSelect(e.detail.item.id.slice(0, -3));
    this._closePopover();
    await renderFinished();
    const selectedTopLevel = this._getRootTab(this._selectedTab);
    selectedTopLevel == null ? void 0 : selectedTopLevel.getDomRefInStrip().focus();
  }
  /**
   * Returns all slotted tabs and their subTabs in a flattened array.
   * The order of tabs is depth-first.
   *
   * @public
   * @default []
   */
  get allItems() {
    return this._flatten(this.items);
  }
  _flatten(items3) {
    const result = [];
    walk(items3, (item2) => {
      if (item2.hasAttribute("ui5-tab") || item2.hasAttribute("ui5-tab-separator")) {
        result.push(item2);
      }
    });
    return result;
  }
  _onItemSelect(selectedTabId) {
    const selectedTabIndex = this._itemsFlat.findIndex((item2) => item2.__id === selectedTabId);
    const selectedTab = this._itemsFlat[selectedTabIndex];
    const selectionSuccessful = this.selectTab(selectedTab, selectedTabIndex);
    if (!selectionSuccessful) {
      return;
    }
    this._itemsFlat.forEach((item2) => {
      if (!item2.isSeparator) {
        item2.selected = item2 === selectedTab;
      }
    });
  }
  /**
   * Fires the `tab-select` event and changes the internal reference for the currently selected tab.
   * If the event is prevented, the current tab is not changed.
   * @private
   * @param selectedTab selected tab instance
   * @param selectedTabIndex selected tab index for an array containing all tabs and sub tabs. **Note:** Use the method `allTabs` to get this array.
   * @returns true if the tab selection is successful, false if it was prevented
   */
  selectTab(selectedTab, selectedTabIndex) {
    if (!this.fireDecoratorEvent("tab-select", { tab: selectedTab, tabIndex: selectedTabIndex })) {
      return false;
    }
    this._selectedTab = selectedTab;
    return true;
  }
  slideContentDown(element) {
    return slideDown_default(element).promise();
  }
  slideContentUp(element) {
    return slideUp_default(element).promise();
  }
  async _onOverflowClick(e) {
    if (e.target.classList.contains("ui5-tc__overflow")) {
      return;
    }
    const overflow = e.currentTarget;
    const isEndOverflow = overflow.classList.contains("ui5-tc__overflow--end");
    let opener2;
    if (isEndOverflow) {
      opener2 = this.overflowButton[0] || this._getEndOverflowBtnDOM();
    } else {
      opener2 = this.startOverflowButton[0] || this._getStartOverflowBtnDOM();
    }
    await this._togglePopover(opener2, true);
  }
  _sendOverflowPresentationInfos(items3) {
    const semanticIcons = items3.filter((item2) => !item2.isSeparator).some((tab) => tab.design !== SemanticColor_default.Default && tab.design !== SemanticColor_default.Neutral);
    walk(items3, (item2, level) => {
      item2.receiveOverflowInfo({
        getElementInOverflow: () => {
          return this._findTabInOverflow(item2);
        },
        style: {
          [getScopedVarName("--_ui5-tab-indentation-level")]: level,
          [getScopedVarName("--_ui5-tab-level-has-icon")]: semanticIcons ? "1" : "0"
        }
      });
    });
  }
  async _onOverflowKeyDown(e) {
    const overflow = e.currentTarget;
    const isEndOverflow = overflow.classList.contains("ui5-tc__overflow--end");
    const isStartOverflow = overflow.classList.contains("ui5-tc__overflow--start");
    if (isDown(e) || isStartOverflow && isLeft(e) || isEndOverflow && isRight(e)) {
      e.stopPropagation();
      e.preventDefault();
      await this._onOverflowClick(e);
    }
  }
  _setItemsForStrip() {
    const tabStrip = this._getTabStrip();
    let allItemsWidth = 0;
    const itemsDomRefs = this.items.map((item2) => item2.getDomRefInStrip());
    this._getStartOverflow().setAttribute("hidden", "");
    this._getEndOverflow().setAttribute("hidden", "");
    for (let i = 0; i < itemsDomRefs.length; i++) {
      itemsDomRefs[i].removeAttribute("hidden");
      itemsDomRefs[i].removeAttribute("start-overflow");
      itemsDomRefs[i].removeAttribute("end-overflow");
    }
    itemsDomRefs.forEach((item2) => {
      allItemsWidth += this._getItemWidth(item2);
    });
    const hasOverflow = tabStrip.offsetWidth < allItemsWidth;
    if (!hasOverflow) {
      return;
    }
    if (this.isModeStartAndEnd) {
      this._updateStartAndEndOverflow(itemsDomRefs);
      this._updateOverflowCounters();
    } else {
      this._updateEndOverflow(itemsDomRefs);
    }
  }
  _getRootTab(tab) {
    while (tab == null ? void 0 : tab.hasAttribute("ui5-tab")) {
      if (tab.parentElement.hasAttribute("ui5-tabcontainer")) {
        break;
      }
      tab = tab.parentElement;
    }
    return tab;
  }
  _updateEndOverflow(itemsDomRefs) {
    this._getEndOverflow().removeAttribute("hidden");
    const selectedTab = this._getRootTab(this._selectedTab);
    const selectedTabDomRef = selectedTab == null ? void 0 : selectedTab.getDomRefInStrip();
    const containerWidth = this._getTabStrip().offsetWidth;
    const selectedItemIndexAndWidth = this._getSelectedItemIndexAndWidth(itemsDomRefs, selectedTabDomRef);
    const lastVisibleTabIndex = this._findLastVisibleItem(itemsDomRefs, containerWidth, selectedItemIndexAndWidth.width);
    for (let i = lastVisibleTabIndex + 1; i < itemsDomRefs.length; i++) {
      itemsDomRefs[i].setAttribute("hidden", "");
      itemsDomRefs[i].setAttribute("end-overflow", "");
    }
    this._endOverflowText = this.overflowButtonText;
  }
  _updateStartAndEndOverflow(itemsDomRefs) {
    let containerWidth = this._getTabStrip().offsetWidth;
    const selectedTab = this._getRootTab(this._selectedTab);
    const selectedTabDomRef = selectedTab == null ? void 0 : selectedTab.getDomRefInStrip();
    const selectedItemIndexAndWidth = this._getSelectedItemIndexAndWidth(itemsDomRefs, selectedTabDomRef);
    const hasStartOverflow = this._hasStartOverflow(containerWidth, itemsDomRefs, selectedItemIndexAndWidth);
    const hasEndOverflow = this._hasEndOverflow(containerWidth, itemsDomRefs, selectedItemIndexAndWidth);
    let firstVisible;
    let lastVisible;
    if (!hasStartOverflow) {
      this._getEndOverflow().removeAttribute("hidden");
      containerWidth = this._getTabStrip().offsetWidth;
      lastVisible = this._findLastVisibleItem(itemsDomRefs, containerWidth, selectedItemIndexAndWidth.width);
      for (let i = lastVisible + 1; i < itemsDomRefs.length; i++) {
        itemsDomRefs[i].setAttribute("hidden", "");
        itemsDomRefs[i].setAttribute("end-overflow", "");
      }
      return;
    }
    if (!hasEndOverflow) {
      this._getStartOverflow().removeAttribute("hidden");
      containerWidth = this._getTabStrip().offsetWidth;
      firstVisible = this._findFirstVisibleItem(itemsDomRefs, containerWidth, selectedItemIndexAndWidth.width);
      for (let i = firstVisible - 1; i >= 0; i--) {
        itemsDomRefs[i].setAttribute("hidden", "");
        itemsDomRefs[i].setAttribute("start-overflow", "");
      }
      return;
    }
    this._getStartOverflow().removeAttribute("hidden");
    this._getEndOverflow().removeAttribute("hidden");
    containerWidth = this._getTabStrip().offsetWidth;
    firstVisible = this._findFirstVisibleItem(itemsDomRefs, containerWidth, selectedItemIndexAndWidth.width, selectedItemIndexAndWidth.index - 1);
    lastVisible = this._findLastVisibleItem(itemsDomRefs, containerWidth, selectedItemIndexAndWidth.width, firstVisible);
    for (let i = firstVisible - 1; i >= 0; i--) {
      itemsDomRefs[i].setAttribute("hidden", "");
      itemsDomRefs[i].setAttribute("start-overflow", "");
    }
    for (let i = lastVisible + 1; i < itemsDomRefs.length; i++) {
      itemsDomRefs[i].setAttribute("hidden", "");
      itemsDomRefs[i].setAttribute("end-overflow", "");
    }
  }
  _hasStartOverflow(containerWidth, itemsDomRefs, selectedItemIndexAndWidth) {
    if (selectedItemIndexAndWidth.index === 0) {
      return false;
    }
    let leftItemsWidth = 0;
    for (let i = selectedItemIndexAndWidth.index - 1; i >= 0; i--) {
      leftItemsWidth += this._getItemWidth(itemsDomRefs[i]);
    }
    let hasStartOverflow = containerWidth < leftItemsWidth + selectedItemIndexAndWidth.width;
    if (!hasStartOverflow) {
      this._getEndOverflow().removeAttribute("hidden");
      containerWidth = this._getTabStrip().offsetWidth;
      hasStartOverflow = containerWidth < leftItemsWidth + selectedItemIndexAndWidth.width;
      this._getEndOverflow().setAttribute("hidden", "");
    }
    return hasStartOverflow;
  }
  _hasEndOverflow(containerWidth, itemsDomRefs, selectedItemIndexAndWidth) {
    if (selectedItemIndexAndWidth.index >= itemsDomRefs.length) {
      return false;
    }
    let rightItemsWidth = 0;
    for (let i = selectedItemIndexAndWidth.index; i < itemsDomRefs.length; i++) {
      rightItemsWidth += this._getItemWidth(itemsDomRefs[i]);
    }
    let hasEndOverflow = containerWidth < rightItemsWidth + selectedItemIndexAndWidth.width;
    if (!hasEndOverflow) {
      this._getStartOverflow().removeAttribute("hidden");
      containerWidth = this._getTabStrip().offsetWidth;
      hasEndOverflow = containerWidth < rightItemsWidth + selectedItemIndexAndWidth.width;
      this._getStartOverflow().setAttribute("hidden", "");
    }
    return hasEndOverflow;
  }
  _getItemWidth(itemDomRef) {
    const styles2 = window.getComputedStyle(itemDomRef);
    const margins = Number.parseInt(styles2.marginLeft) + Number.parseInt(styles2.marginRight);
    return itemDomRef.offsetWidth + margins;
  }
  _getSelectedItemIndexAndWidth(itemsDomRefs, selectedTabDomRef) {
    if (!selectedTabDomRef) {
      return {
        index: 0,
        width: 0
      };
    }
    let index = itemsDomRefs.indexOf(selectedTabDomRef);
    let width = selectedTabDomRef.offsetWidth;
    let selectedSeparator;
    if (itemsDomRefs[index - 1] && itemsDomRefs[index - 1].realTabReference.isSeparator) {
      selectedSeparator = itemsDomRefs[index - 1];
      width += this._getItemWidth(selectedSeparator);
    }
    itemsDomRefs.splice(index, 1);
    if (selectedSeparator) {
      itemsDomRefs.splice(index - 1, 1);
      index--;
    }
    return {
      index,
      width
    };
  }
  _findFirstVisibleItem(itemsDomRefs, containerWidth, selectedItemWidth, startIndex) {
    if (startIndex === void 0) {
      startIndex = itemsDomRefs.length - 1;
    }
    let lastVisible = startIndex + 1;
    for (let index = startIndex; index >= 0; index--) {
      const itemWidth = this._getItemWidth(itemsDomRefs[index]);
      if (containerWidth < selectedItemWidth + itemWidth) {
        break;
      }
      selectedItemWidth += itemWidth;
      lastVisible = index;
    }
    return lastVisible;
  }
  _findLastVisibleItem(itemsDomRefs, containerWidth, selectedItemWidth, startIndex = 0) {
    let lastVisibleIndex = startIndex - 1;
    let index = startIndex;
    for (; index < itemsDomRefs.length; index++) {
      const itemWidth = this._getItemWidth(itemsDomRefs[index]);
      if (containerWidth < selectedItemWidth + itemWidth) {
        break;
      }
      selectedItemWidth += itemWidth;
      lastVisibleIndex = index;
    }
    const prevItem = itemsDomRefs[index - 1];
    if (prevItem && prevItem.realTabReference.isSeparator) {
      lastVisibleIndex -= 1;
    }
    return lastVisibleIndex;
  }
  get isModeStartAndEnd() {
    return this.overflowMode === OverflowMode_default.StartAndEnd;
  }
  _updateOverflowCounters() {
    let startOverflowItemsCount = 0;
    let endOverflowItemsCount = 0;
    this._getTabs().map((tab) => tab.getDomRefInStrip()).forEach((tab) => {
      if (tab.hasAttribute("start-overflow")) {
        startOverflowItemsCount++;
      }
      if (tab.hasAttribute("end-overflow")) {
        endOverflowItemsCount++;
      }
    });
    this._startOverflowText = `+${startOverflowItemsCount}`;
    this._endOverflowText = `+${endOverflowItemsCount}`;
  }
  _getFocusableRefs() {
    if (!this.getDomRef()) {
      return [];
    }
    const focusableRefs = [];
    if (!this._getStartOverflow().hasAttribute("hidden")) {
      focusableRefs.push(this.startOverflowButton[0] || this._getStartOverflowBtnDOM());
    }
    this._getTabs().forEach((tab) => {
      const ref = tab.getDomRefInStrip();
      const focusable = ref && !ref.hasAttribute("hidden");
      if (focusable) {
        focusableRefs.push(tab);
      }
    });
    if (!this._getEndOverflow().hasAttribute("hidden")) {
      focusableRefs.push(this.overflowButton[0] || this._getEndOverflowBtnDOM());
    }
    return focusableRefs;
  }
  _getHeader() {
    return this.shadowRoot.querySelector(`#${this._id}-header`);
  }
  _getTabs() {
    return this.items.filter((item2) => !item2.isSeparator);
  }
  _getPopoverOwner(opener2) {
    if (opener2 === this._getStartOverflowBtnDOM() || opener2.slot === "startOverflowButton") {
      return "start-overflow";
    }
    if (opener2 === this._getEndOverflowBtnDOM() || opener2.slot === "overflowButton") {
      return "end-overflow";
    }
    return getTabInStrip(opener2);
  }
  _getPopoverItemsFor(targetOwner) {
    if (targetOwner === "start-overflow") {
      return this.items.filter((item2) => {
        const stripRef = item2.getDomRefInStrip();
        return stripRef && stripRef.hasAttribute("start-overflow");
      });
    }
    if (targetOwner === "end-overflow") {
      return this.items.filter((item2) => {
        const stripRef = item2.getDomRefInStrip();
        return stripRef && stripRef.hasAttribute("end-overflow");
      });
    }
    return targetOwner.realTabReference.items;
  }
  _setPopoverItems(items3) {
    this._sendOverflowPresentationInfos(items3);
    const newItemsFlat = this._flatten(items3);
    if (!arraysAreEqual_default(this._popoverItemsFlat, newItemsFlat)) {
      this._popoverItemsFlat = newItemsFlat;
    }
  }
  async _togglePopover(opener2, setInitialFocus = false) {
    this.responsivePopover = await this._respPopover();
    if (this.responsivePopover.open) {
      this._closePopover();
    } else {
      await this._showPopoverAt(opener2, setInitialFocus);
    }
  }
  async _showPopoverAt(opener2, setInitialFocus = false, preventInitialFocus = false) {
    this._hasScheduledPopoverOpen = true;
    this._setPopoverItems(this._getPopoverItemsFor(this._getPopoverOwner(opener2)));
    this.responsivePopover = await this._respPopover();
    if (setInitialFocus) {
      this._setPopoverInitialFocus();
    }
    if (this._hasScheduledPopoverOpen) {
      this.responsivePopover.preventInitialFocus = preventInitialFocus;
      this.responsivePopover.opener = opener2;
      this.responsivePopover.open = true;
    }
  }
  get hasItems() {
    const tabs = this._getTabs();
    for (let i = 0; i < tabs.length; i++) {
      if (tabs[i].items.length > 0) {
        return true;
      }
    }
    return false;
  }
  _getTabStrip() {
    return this.shadowRoot.querySelector(`#${this._id}-tabStrip`);
  }
  _getStartOverflow() {
    return this.shadowRoot.querySelector(".ui5-tc__overflow--start");
  }
  _getEndOverflow() {
    return this.shadowRoot.querySelector(".ui5-tc__overflow--end");
  }
  _getStartOverflowBtnDOM() {
    return this._getStartOverflow().querySelector("[ui5-button]");
  }
  _getEndOverflowBtnDOM() {
    return this._getEndOverflow().querySelector("[ui5-button]");
  }
  async _respPopover() {
    await renderFinished();
    return this.shadowRoot.querySelector(`#${this._id}-overflowMenu`);
  }
  _closePopover() {
    this._hasScheduledPopoverOpen = false;
    if (this.responsivePopover) {
      this.responsivePopover.open = false;
    }
  }
  get dropIndicatorDOM() {
    return this.shadowRoot.querySelector("[ui5-drop-indicator]");
  }
  _findSiblings(tab) {
    let parent;
    walk(this.items, (item2) => {
      if (item2.items && item2.items.includes(tab)) {
        parent = item2;
      }
    });
    return (parent ?? this).items;
  }
  get classes() {
    return {
      root: {
        "ui5-tc-root": true,
        "ui5-tc--textOnly": this.textOnly,
        "ui5-tc--noTabSelected": !this._selectedTab,
        "ui5-tc--withAdditionalText": this.withAdditionalText,
        "ui5-tc--standardTabLayout": this.standardTabLayout
      },
      header: {
        "ui5-tc__header": true
      },
      tabStrip: {
        "ui5-tc__tabStrip": true
      },
      separator: {
        "ui5-tc__separator": true
      },
      content: {
        "ui5-tc__content": true,
        "ui5-tc__content--collapsed": this._contentCollapsed
      }
    };
  }
  get mixedMode() {
    const tabs = this._getTabs();
    return tabs.some((item2) => item2.icon) && tabs.some((item2) => item2.text);
  }
  get textOnly() {
    return this._getTabs().every((item2) => !item2.icon);
  }
  get withAdditionalText() {
    return this._getTabs().some((item2) => !!item2.additionalText);
  }
  get standardTabLayout() {
    return this.tabLayout === TabLayout_default.Standard;
  }
  get previousIconACCName() {
    return TabContainer_1.i18nBundle.getText(TABCONTAINER_PREVIOUS_ICON_ACC_NAME);
  }
  get nextIconACCName() {
    return TabContainer_1.i18nBundle.getText(TABCONTAINER_NEXT_ICON_ACC_NAME);
  }
  get overflowMenuTitle() {
    return TabContainer_1.i18nBundle.getText(TABCONTAINER_OVERFLOW_MENU_TITLE);
  }
  get tabsAtTheBottom() {
    return this.tabsPlacement === TabContainerTabsPlacement_default.Bottom;
  }
  get overflowMenuIcon() {
    return this.tabsAtTheBottom ? "slim-arrow-up" : "slim-arrow-down";
  }
  get overflowButtonText() {
    return TabContainer_1.i18nBundle.getText(TABCONTAINER_END_OVERFLOW);
  }
  get popoverCancelButtonText() {
    return TabContainer_1.i18nBundle.getText(TABCONTAINER_POPOVER_CANCEL_BUTTON);
  }
  get accInvisibleText() {
    return TabContainer_1.i18nBundle.getText(TABCONTAINER_SUBTABS_DESCRIPTION);
  }
  get overflowBtnAccessibilityAttributes() {
    return {
      hasPopup: "menu"
    };
  }
  get tablistAriaDescribedById() {
    return this.hasItems ? `${this._id}-invisibleText` : void 0;
  }
};
__decorate98([
  property_default({ type: Boolean })
], TabContainer.prototype, "collapsed", void 0);
__decorate98([
  property_default()
], TabContainer.prototype, "tabLayout", void 0);
__decorate98([
  property_default()
], TabContainer.prototype, "overflowMode", void 0);
__decorate98([
  property_default()
], TabContainer.prototype, "headerBackgroundDesign", void 0);
__decorate98([
  property_default()
], TabContainer.prototype, "contentBackgroundDesign", void 0);
__decorate98([
  property_default()
], TabContainer.prototype, "tabsPlacement", void 0);
__decorate98([
  property_default({ type: Boolean })
], TabContainer.prototype, "noAutoSelection", void 0);
__decorate98([
  property_default()
], TabContainer.prototype, "mediaRange", void 0);
__decorate98([
  property_default({ type: Object })
], TabContainer.prototype, "_selectedTab", void 0);
__decorate98([
  property_default({ type: Boolean, noAttribute: true })
], TabContainer.prototype, "_animationRunning", void 0);
__decorate98([
  property_default({ type: Boolean, noAttribute: true })
], TabContainer.prototype, "_contentCollapsed", void 0);
__decorate98([
  property_default({ noAttribute: true })
], TabContainer.prototype, "_startOverflowText", void 0);
__decorate98([
  property_default({ noAttribute: true })
], TabContainer.prototype, "_endOverflowText", void 0);
__decorate98([
  property_default({ type: Array })
], TabContainer.prototype, "_popoverItemsFlat", void 0);
__decorate98([
  property_default({ type: Number, noAttribute: true })
], TabContainer.prototype, "_width", void 0);
__decorate98([
  slot_default({
    "default": true,
    type: HTMLElement,
    individualSlots: true,
    invalidateOnChildChange: {
      properties: true,
      slots: true
    }
  })
], TabContainer.prototype, "items", void 0);
__decorate98([
  slot_default()
], TabContainer.prototype, "overflowButton", void 0);
__decorate98([
  slot_default()
], TabContainer.prototype, "startOverflowButton", void 0);
__decorate98([
  longDragOverHandler_default("[data-ui5-stable=overflow-start],[data-ui5-stable=overflow-end],[role=tab]")
], TabContainer.prototype, "_onHeaderDragOver", null);
__decorate98([
  i18n_default("@ui5/webcomponents")
], TabContainer, "i18nBundle", void 0);
TabContainer = TabContainer_1 = __decorate98([
  customElement_default({
    tag: "ui5-tabcontainer",
    languageAware: true,
    fastNavigation: true,
    styles: [
      tabStyles,
      TabContainer_css_default,
      ResponsivePopoverCommon_css_default
    ],
    renderer: JsxRenderer_default,
    template: TabContainerTemplate
  }),
  event_strict_default("tab-select", {
    bubbles: true,
    cancelable: true
  }),
  event_strict_default("move-over", {
    bubbles: true,
    cancelable: true
  }),
  event_strict_default("move", {
    bubbles: true
  })
], TabContainer);
var isTabInStrip = (el) => el.localName === "div" && el.getAttribute("role") === "tab";
var getTabInStrip = (el) => {
  while (el) {
    if (isTabInStrip(el)) {
      return el;
    }
    el = el.parentElement;
  }
  return false;
};
var _walk = (items3, callback, level) => {
  [...items3].forEach((item2) => {
    callback(item2, level);
    if (item2.hasAttribute("ui5-tab") && item2.items) {
      _walk(item2.items, callback, level + 1);
    }
  });
};
var walk = (items3, callback) => {
  _walk(items3, callback, 0);
};
TabContainer.define();
var TabContainer_default = TabContainer;

// node_modules/@ui5/webcomponents/dist/TabTemplate.js
function TabTemplate() {
  return jsxs("div", { id: this._id, class: "ui5-tab-root", "data-ui5-stable": this.stableDomRef, children: [jsx("slot", { name: this._defaultSlotName }), this.tabs.map((tab) => jsx("slot", { name: tab._effectiveSlotName }))] });
}

// node_modules/@ui5/webcomponents/dist/TabInStripTemplate.js
function additionalText() {
  return jsx("span", { class: this.stripClasses.additionalTextClasses, id: `${this._id}-additionalText`, children: this.additionalText });
}
function TabInStripTemplate() {
  return jsxs("div", { id: this._id, class: this.stripClasses.itemClasses, tabindex: -1, role: "tab", "aria-roledescription": this._roleDescription, "aria-haspopup": this._ariaHasPopup, "aria-posinset": this._forcedPosinset, "aria-setsize": this._forcedSetsize, "aria-controls": "ui5-tc-content", "aria-selected": this.effectiveSelected, "aria-disabled": this.effectiveDisabled, "aria-labelledby": this.ariaLabelledBy, draggable: this.movable, onDragStart: this._ondragstart, onDragEnd: this._ondragend, ref: this.captureRef.bind(this), children: [this.icon && jsx("div", { class: "ui5-tab-strip-item-icon-outer", children: jsx(Icon_default, { id: `${this._id}-icon`, name: this.icon, class: "ui5-tab-strip-item-icon" }) }), this._designDescription && jsx("div", { id: `${this._id}-designDescription`, class: "ui5-tab-strip-design-description", children: this._designDescription }), jsxs("div", { class: "ui5-tab-strip-itemContent", children: [!this._isInline && additionalText.call(this), this.text && jsxs("span", { class: "ui5-tab-strip-itemText", id: `${this._id}-text`, children: [this.semanticIconName && jsx(Icon_default, { class: this.semanticIconClasses, name: this.semanticIconName }), this.displayText, this.isSingleClickArea && jsx("span", { class: "ui5-tab-single-click-icon", children: jsx(Icon_default, { name: slim_arrow_down_default }) })] })] }), this.requiresExpandButton && jsxs(Fragment, { children: [jsx("div", { class: "ui5-tab-expand-button-separator" }), jsx("div", { class: "ui5-tab-expand-button", children: jsx(Button_default, { ref: this.captureButtonRef.bind(this), icon: slim_arrow_down_default, design: "Transparent", tabindex: -1, disabled: this.disabled, tooltip: this.expandButtonTitle, accessibilityAttributes: this.expandBtnAccessibilityAttributes }) })] })] });
}

// node_modules/@ui5/webcomponents/dist/TabInOverflowTemplate.js
function TabInOverflowTemplate() {
  return jsx(ListItemCustom_default, { id: `${this._id}-li`, class: this.overflowClasses, style: this._forcedStyleInOverflow, type: this.overflowState, disabled: this.effectiveDisabled, selected: this.selected, movable: this.movable, ref: this.captureRef.bind(this), children: jsx("div", { class: "ui5-tab-overflow-itemContent-wrapper", children: jsxs("div", { class: "ui5-tab-overflow-itemContent", children: [this.semanticIconName && jsx(Icon_default, { class: this.semanticIconClasses, name: this.semanticIconName }), this.icon && jsx(Icon_default, { name: this.icon }), this.text, this.additionalText && jsxs(Fragment, { children: [" (", this.additionalText, ")"] }), this._designDescription && jsx("div", { id: `${this._id}-designDescription`, class: "ui5-hidden-text", children: this._designDescription })] }) }) });
}

// node_modules/@ui5/webcomponents/dist/generated/themes/Tab.css.js
registerThemePropertiesLoader("@ui5/webcomponents-theming", "sap_horizon", async () => parameters_bundle_css_default);
registerThemePropertiesLoader("@ui5/webcomponents", "sap_horizon", async () => parameters_bundle_css_default2);
var Tab_css_default = `:host{display:inline-block;width:100%}.ui5-tab-root{width:100%;height:100%}
`;

// node_modules/@ui5/webcomponents/dist/generated/themes/TabInStrip.css.js
registerThemePropertiesLoader("@ui5/webcomponents-theming", "sap_horizon", async () => parameters_bundle_css_default);
registerThemePropertiesLoader("@ui5/webcomponents", "sap_horizon", async () => parameters_bundle_css_default2);
var TabInStrip_css_default = `.ui5-tab-semantic-icon{display:var(--_ui5-v2-8-0_tc_headerItemSemanticIcon_display);height:var(--_ui5-v2-8-0_tc_headerItemSemanticIcon_size);width:var(--_ui5-v2-8-0_tc_headerItemSemanticIcon_size);margin-inline-end:.5rem}.ui5-tab-semantic-icon--positive{color:var(--sapPositiveElementColor)}.ui5-tab-semantic-icon--negative{color:var(--sapNegativeElementColor)}.ui5-tab-semantic-icon--critical{color:var(--sapCriticalElementColor)}.ui5-tab-strip-item{height:var(--_ui5-v2-8-0_tc_header_height);color:var(--_ui5-v2-8-0_tc_headerItem_color);cursor:pointer;padding:0 var(--_ui5-v2-8-0_tc_headeritem_padding);font-size:var(--sapFontSmallSize);font-weight:var(--_ui5-v2-8-0_tc_headeritem_text_font_weight);position:relative;display:flex;align-items:center;justify-content:center;flex-shrink:0;min-width:2rem;max-width:100%;box-sizing:border-box;outline:none}.ui5-tab-strip-item[data-moving]{background-color:var(--ui5-v2-8-0_tc_header_active_background_color)}.ui5-tab-strip-itemText{position:relative;white-space:nowrap;overflow:hidden;text-overflow:ellipsis}.ui5-tc__separator[hidden],.ui5-tab-strip-item[hidden],.ui5-tab-strip-item--textOnly[hidden],.ui5-tab-strip-item.ui5-tab-strip-item--textOnly.ui5-tab-strip-item--inline[hidden],.ui5-tab-strip-design-description{display:none}.ui5-tab-strip-itemContent{display:flex;height:100%;min-width:0;justify-content:center;flex-direction:column;border:var(--_ui5-v2-8-0_tc_headerItemContent_default_focus_border);border-radius:var(--_ui5-v2-8-0_tc_headerItemContent_focus_border_radius);transition:var(--_ui5-v2-8-0_tc_headerItem_transition)}.ui5-tab-expand-button{display:flex;flex-direction:column;justify-content:center;position:relative;z-index:1;background-color:var(--_ui5-v2-8-0_tc_header_background);padding-inline-end:.188rem}.ui5-tab-expand-button>[ui5-button]{height:1.5rem;min-width:1.5rem;margin-inline-start:var(--_ui5-v2-8-0_tc_headerItem_expand_button_margin_inline_start);--_ui5-v2-8-0_button_border_radius: var(--_ui5-v2-8-0_tc_headerItem_expand_button_border_radius);--_ui5-v2-8-0_button_focused_border_radius: var(--_ui5-v2-8-0_tc_headerItem_expand_button_border_radius)}.ui5-tab-expand-button>[ui5-button]:not([active]){color:var(--_ui5-v2-8-0_tc_headerItem_color)}.ui5-tab-strip-item--selected .ui5-tab-expand-button>[ui5-button]:not([active]){color:var(--_ui5-v2-8-0_tc_headerItem_text_selected_color)}.ui5-tab-expand-button>[ui5-button]:hover:not([active]){color:var(--_ui5-v2-8-0_tc_headerItem_text_selected_hover_color)}.ui5-tab-expand-button-separator{display:var(--_ui5-v2-8-0_tc_headerItem_expand_button_separator_display);position:relative;width:.0625rem;right:-.0625rem;height:.625rem;background:var(--sapTextColor);margin-inline-start:.0625rem;z-index:2;margin-left:.625rem}.ui5-tab-expand-button:hover{z-index:2}.ui5-tab-strip-item--selected .ui5-tab-expand-button-separator{background:var(--_ui5-v2-8-0_tc_headerItem_text_selected_color)}.ui5-tab-single-click-icon{margin-inline-start:var(--_ui5-v2-8-0_tc_headerItem_single_click_expand_button_margin_inline_start)}.ui5-tab-strip-item--selected.ui5-tab-strip-item--textOnly{color:var(--_ui5-v2-8-0_tc_headerItem_text_selected_color)}.ui5-tab-strip-item--selected.ui5-tab-strip-item--singleClickArea .ui5-tab-strip-itemText .ui5-tab-single-click-icon>[ui5-icon]{color:var(--_ui5-v2-8-0_tc_headerItem_text_selected_color)}.ui5-tab-strip-item--singleClickArea .ui5-tab-strip-itemText{display:flex;align-items:center}.ui5-tab-strip-item--singleClickArea .ui5-tab-strip-itemText .ui5-tab-single-click-icon{display:flex}.ui5-tab-strip-item--singleClickArea .ui5-tab-strip-itemText .ui5-tab-single-click-icon>[ui5-icon]{color:var(--_ui5-v2-8-0_tc_headerItem_color)}.ui5-tab-strip-item--textOnly:not(.ui5-tab-strip-item--twoClickArea):not(.ui5-tab-strip-item--selected):not(.ui5-tab-strip-item--negative):hover,.ui5-tab-strip-item--twoClickArea:not(.ui5-tab-strip-item--selected):not(.ui5-tab-strip-item--negative) .ui5-tab-strip-itemContent:hover,.ui5-tab-strip-item--singleClickArea:not(.ui5-tab-strip-item--selected):not(.ui5-tab-strip-item--disabled):hover .ui5-tab-single-click-icon>[ui5-icon]{color:var(--_ui5-v2-8-0_tc_headerItem_text_hover_color)}.ui5-tab-strip-item--selected.ui5-tab-strip-item--textOnly .ui5-tab-strip-itemContent:after,.ui5-tab-strip-item--selected.ui5-tab-strip-item--mixedMode .ui5-tab-strip-itemContent:after,.ui5-tab-strip-item--selected .ui5-tab-strip-item-icon-outer:after{content:"";position:absolute;bottom:0;left:0;right:0;border-bottom:var(--_ui5-v2-8-0_tc_headerItemContent_border_bottom);border-radius:var(--_ui5-v2-8-0_tc_headerItemContent_border_radius);background-color:var(--_ui5-v2-8-0_tc_headerItemContent_border_bg);height:var(--_ui5-v2-8-0_tc_headerItemContent_border_height)}.ui5-tab-strip-item--selected.ui5-tab-strip-item--textOnly .ui5-tab-strip-itemContent:after,.ui5-tab-strip-item--selected.ui5-tab-strip-item--mixedMode .ui5-tab-strip-itemContent:after{left:var(--_ui5-v2-8-0_tc_headeritem_padding);right:var(--_ui5-v2-8-0_tc_headeritem_padding)}.ui5-tab-strip-item--selected .ui5-tab-strip-item-icon-outer:after{bottom:-.9375rem}.ui5-tab-strip-item--disabled{cursor:default;opacity:var(--sapContent_DisabledOpacity)}:host([desktop]) .ui5-tab-strip-item--textOnly:focus:not([data-moving]) .ui5-tab-strip-itemText:before,.ui5-tab-strip-item--textOnly:focus-visible:not([data-moving]) .ui5-tab-strip-itemText:before,:host([desktop]) .ui5-tab-strip-item--inline.ui5-tab-strip-item--textOnly:focus:not([data-moving]) .ui5-tab-strip-itemText:before,.ui5-tab-strip-item--inline.ui5-tab-strip-item--textOnly:focus-visible:not([data-moving]) .ui5-tab-strip-itemText:before{border-radius:var(--_ui5-v2-8-0_tc_headerItem_focus_border_radius);content:"";pointer-events:none;position:absolute;border:var(--_ui5-v2-8-0_tc_headerItem_focus_border);left:var(--_ui5-v2-8-0_tc_headerItem_text_focus_border_offset_left);right:var(--_ui5-v2-8-0_tc_headerItem_text_focus_border_offset_right);top:var(--_ui5-v2-8-0_tc_headerItem_text_focus_border_offset_top);bottom:var(--_ui5-v2-8-0_tc_headerItem_text_focus_border_offset_bottom)}:host([desktop]) .ui5-tab-strip-item--mixedMode:focus:not([data-moving]) .ui5-tab-strip-itemContent:before,.ui5-tab-strip-item--mixedMode:focus-visible:not([data-moving]) .ui5-tab-strip-itemContent:before{border-radius:var(--_ui5-v2-8-0_tc_headerItem_focus_border_radius);content:"";pointer-events:none;position:absolute;border:var(--_ui5-v2-8-0_tc_headerItem_focus_border);left:var(--_ui5-v2-8-0_tc_headerItem_mixed_mode_focus_border_offset_left);right:var(--_ui5-v2-8-0_tc_headerItem_mixed_mode_focus_border_offset_right);top:var(--_ui5-v2-8-0_tc_headerItem_mixed_mode_focus_border_offset_top);bottom:var(--_ui5-v2-8-0_tc_headerItem_mixed_mode_focus_border_offset_bottom)}:host([desktop]) .ui5-tab-strip-item--withIcon:focus:not([data-moving]) .ui5-tab-strip-item-icon-outer:before,.ui5-tab-strip-item--withIcon:focus-visible:not([data-moving]) .ui5-tab-strip-item-icon-outer:before{content:"";pointer-events:none;position:absolute;border:var(--_ui5-v2-8-0_tc_headerItem_focus_border);left:var(--_ui5-v2-8-0_tc_headerItem_focus_border_offset);right:var(--_ui5-v2-8-0_tc_headerItem_focus_border_offset);top:var(--_ui5-v2-8-0_tc_headerItem_focus_border_offset);bottom:var(--_ui5-v2-8-0_tc_headerItem_focus_border_offset);border-radius:var(--_ui5-v2-8-0_tc_headerItemIcon_focus_border_radius)}.ui5-tab-strip-item-icon-outer{display:flex;justify-content:center;align-items:center;position:relative;border:var(--_ui5-v2-8-0_tc_headerItemIcon_border);border-radius:50%;margin-inline-end:.25rem;height:var(--_ui5-v2-8-0_tc_item_icon_circle_size);width:var(--_ui5-v2-8-0_tc_item_icon_circle_size);pointer-events:none;background-color:var(--_ui5-v2-8-0_tc_headerItemIcon_background_color)}.ui5-tab-strip-item-icon{width:var(--_ui5-v2-8-0_tc_item_icon_size);height:var(--_ui5-v2-8-0_tc_item_icon_size);color:var(--_ui5-v2-8-0_tc_headerItemIcon_color);text-shadow:var(--sapContent_TextShadow);pointer-events:none}.ui5-tab-strip-item--selected .ui5-tab-strip-item-icon-outer{background-color:var(--_ui5-v2-8-0_tc_headerItemIcon_selected_background)}.ui5-tab-strip-item--selected .ui5-tab-strip-item-icon{color:var(--_ui5-v2-8-0_tc_headerItemIcon_selected_color);text-shadow:none}.ui5-tab-strip-itemAdditionalText+.ui5-tab-strip-itemText{display:flex}.ui5-tab-strip-itemAdditionalText-hidden{visibility:hidden;margin-top:1.25rem}.ui5-tab-strip-item--inline .ui5-tab-strip-itemAdditionalText+.ui5-tab-strip-itemText{display:inline}.ui5-tab-strip-item--withIcon .ui5-tab-strip-itemAdditionalText+.ui5-tab-strip-itemText{margin-block-start:var(--_ui5-v2-8-0_tc_item_add_text_margin_top)}.ui5-tab-strip-item--textOnly,.ui5-tab-strip-item.ui5-tab-strip-item--textOnly.ui5-tab-strip-item--inline{font-size:var(--sapFontSize);height:var(--_ui5-v2-8-0_tc_item_text_only_height);display:flex;align-items:center;line-height:var(--_ui5-v2-8-0_tc_item_text_line_height)}.ui5-tab-strip-item--textOnly .ui5-tab-strip-itemText{padding:0 .188rem}.ui5-tab-strip-item--textOnly.ui5-tab-strip-item--withAdditionalText{justify-content:flex-start;height:var(--_ui5-v2-8-0_tc_item_text_only_with_additional_text_height)}.ui5-tab-strip-item--mixedMode .ui5-tab-strip-itemText,.ui5-tab-strip-item--mixedMode .ui5-tab-strip-itemAdditionalText{display:inline-block;vertical-align:middle}.ui5-tab-strip-item--mixedMode .ui5-tab-strip-itemContent{flex-direction:row;align-items:center}.ui5-tab-strip-item--mixedMode .ui5-tab-strip-itemAdditionalText{font-size:1.5rem;margin-inline-end:.5rem}.ui5-tab-strip-item--mixedMode .ui5-tab-strip-itemText{color:var(--_ui5-v2-8-0_tc_mixedMode_itemText_color);font-family:var(--_ui5-v2-8-0_tc_mixedMode_itemText_font_family);font-size:var(--_ui5-v2-8-0_tc_mixedMode_itemText_font_size);font-weight:var(--_ui5-v2-8-0_tc_mixedMode_itemText_font_weight)}.ui5-tab-strip-item--positive.ui5-tab-strip-item--textOnly .ui5-tab-strip-itemText,.ui5-tab-strip-item--positive .ui5-tab-strip-item-icon-outer{color:var(--_ui5-v2-8-0_tc_headerItem_positive_color);border-color:var(--_ui5-v2-8-0_tc_headerItem_positive_selected_border_color)}.ui5-tab-strip-item--positive .ui5-tab-strip-item-icon{color:var(--_ui5-v2-8-0_tc_headerItem_positive_color)}.ui5-tab-strip-item--positive.ui5-tab-strip-item--selected .ui5-tab-strip-item-icon-outer{background-color:var(--_ui5-v2-8-0_tc_headerItemIcon_positive_selected_background);color:var(--_ui5-v2-8-0_tc_headerItemIcon_semantic_selected_color)}.ui5-tab-strip-item--positive.ui5-tab-strip-item--selected .ui5-tab-strip-item-icon{color:var(--_ui5-v2-8-0_tc_headerItemIcon_semantic_selected_color)}.ui5-tab-strip-item.ui5-tab-strip-item--neutral .ui5-tab-strip-itemContent:after,.ui5-tab-strip-item--neutral .ui5-tab-strip-item-icon-outer:after{border-color:var(--_ui5-v2-8-0_tc_headerItem_neutral_border_color);background-color:var(--_ui5-v2-8-0_tc_headerItem_neutral_border_bg)}.ui5-tab-strip-item.ui5-tab-strip-item--positive .ui5-tab-strip-itemContent:after,.ui5-tab-strip-item--positive .ui5-tab-strip-item-icon-outer:after{border-color:var(--_ui5-v2-8-0_tc_headerItem_positive_border_color);background-color:var(--_ui5-v2-8-0_tc_headerItem_positive_border_bg)}.ui5-tab-strip-item--negative.ui5-tab-strip-item--textOnly .ui5-tab-strip-itemText,.ui5-tab-strip-item--negative .ui5-tab-strip-item-icon-outer{color:var(--_ui5-v2-8-0_tc_headerItem_negative_color);border-color:var(--_ui5-v2-8-0_tc_headerItem_negative_selected_border_color)}.ui5-tab-strip-item--negative .ui5-tab-strip-item-icon{color:var(--_ui5-v2-8-0_tc_headerItem_negative_color)}.ui5-tab-strip-item--negative.ui5-tab-strip-item--selected .ui5-tab-strip-item-icon-outer{background-color:var(--_ui5-v2-8-0_tc_headerItemIcon_negative_selected_background)}.ui5-tab-strip-item--negative.ui5-tab-strip-item--selected .ui5-tab-strip-item-icon{color:var(--_ui5-v2-8-0_tc_headerItemIcon_semantic_selected_color)}.ui5-tab-strip-item.ui5-tab-strip-item--negative .ui5-tab-strip-itemContent:after,.ui5-tab-strip-item--negative .ui5-tab-strip-item-icon-outer:after{border-color:var(--_ui5-v2-8-0_tc_headerItem_negative_border_color);background-color:var(--_ui5-v2-8-0_tc_headerItem_negative_border_bg)}.ui5-tab-strip-item--critical.ui5-tab-strip-item--textOnly .ui5-tab-strip-itemText,.ui5-tab-strip-item--critical .ui5-tab-strip-item-icon-outer{color:var(--_ui5-v2-8-0_tc_headerItem_critical_color);border-color:var(--_ui5-v2-8-0_tc_headerItem_critical_selected_border_color)}.ui5-tab-strip-item--critical .ui5-tab-strip-item-icon{color:var(--_ui5-v2-8-0_tc_headerItem_critical_color)}.ui5-tab-strip-item--critical.ui5-tab-strip-item--selected .ui5-tab-strip-item-icon-outer{background-color:var(--_ui5-v2-8-0_tc_headerItemIcon_critical_selected_background)}.ui5-tab-strip-item--critical.ui5-tab-strip-item--selected .ui5-tab-strip-item-icon{color:var(--_ui5-v2-8-0_tc_headerItemIcon_semantic_selected_color)}.ui5-tab-strip-item.ui5-tab-strip-item--critical .ui5-tab-strip-itemContent:after,.ui5-tab-strip-item--critical .ui5-tab-strip-item-icon-outer:after{border-color:var(--_ui5-v2-8-0_tc_headerItem_critical_border_color);background-color:var(--_ui5-v2-8-0_tc_headerItem_critical_border_bg)}.ui5-tab-strip-item--neutral.ui5-tab-strip-item--textOnly .ui5-tab-strip-itemText,.ui5-tab-strip-item--neutral .ui5-tab-strip-item-icon-outer{color:var(--_ui5-v2-8-0_tc_headerItem_neutral_color);border-color:var(--_ui5-v2-8-0_tc_headerItem_neutral_selected_border_color)}.ui5-tab-strip-item--neutral .ui5-tab-strip-item-icon{color:var(--_ui5-v2-8-0_tc_headerItem_neutral_color)}.ui5-tab-strip-item--neutral.ui5-tab-strip-item--selected .ui5-tab-strip-item-icon-outer{background-color:var(--_ui5-v2-8-0_tc_headerItemIcon_neutral_selected_background)}.ui5-tab-strip-item--neutral.ui5-tab-strip-item--selected .ui5-tab-strip-item-icon{color:var(--_ui5-v2-8-0_tc_headerItemIcon_semantic_selected_color)}.ui5-tab-strip-item.ui5-tab-strip-item--neutral .ui5-tab-strip-itemContent:after,.ui5-tab-strip-item--neutral .ui5-tab-strip-item-icon:after{border-color:var(--_ui5-v2-8-0_tc_headerItem_neutral_border_color);background-color:var(--_ui5-v2-8-0_tc_headerItem_neutral_border_bg)}.ui5-tab-strip-item--withIcon .ui5-tab-strip-itemContent .ui5-tab-strip-itemAdditionalText{padding:0}.ui5-tab-strip-item .ui5-tab-strip-itemAdditionalText{padding:0 .188rem;color:var(--_ui5-v2-8-0_tc_headerItem_additional_text_color);font-weight:var(--_ui5-v2-8-0_tc_headerItem_additional_text_font_weight)}
`;

// node_modules/@ui5/webcomponents/dist/generated/themes/TabInOverflow.css.js
registerThemePropertiesLoader("@ui5/webcomponents-theming", "sap_horizon", async () => parameters_bundle_css_default);
registerThemePropertiesLoader("@ui5/webcomponents", "sap_horizon", async () => parameters_bundle_css_default2);
var TabInOverflow_css_default = `.ui5-tab-semantic-icon{display:var(--_ui5-v2-8-0_tc_headerItemSemanticIcon_display);height:var(--_ui5-v2-8-0_tc_headerItemSemanticIcon_size);width:var(--_ui5-v2-8-0_tc_headerItemSemanticIcon_size);margin-inline-end:.5rem}.ui5-tab-semantic-icon--positive{color:var(--sapPositiveElementColor)}.ui5-tab-semantic-icon--negative{color:var(--sapNegativeElementColor)}.ui5-tab-semantic-icon--critical{color:var(--sapCriticalElementColor)}.ui5-hidden-text{position:absolute;clip:rect(1px,1px,1px,1px);user-select:none;left:-1000px;top:-1000px;pointer-events:none;font-size:0}.ui5-tab-overflow-item{color:var(--_ui5-v2-8-0_tc_overflowItem_default_color)}.ui5-tab-overflow-item--disabled{cursor:default;opacity:var(--sapContent_DisabledOpacity)}.ui5-tab-overflow-item[hidden]{display:none}.ui5-tab-overflow-item--positive:not(.ui5-tab-overflow-item--disabled) .ui5-tab-overflow-itemContent{color:var(--_ui5-v2-8-0_tc_overflowItem_positive_color)}.ui5-tab-overflow-item--negative:not(.ui5-tab-overflow-item--disabled) .ui5-tab-overflow-itemContent{color:var(--_ui5-v2-8-0_tc_overflowItem_negative_color)}.ui5-tab-overflow-item--critical:not(.ui5-tab-overflow-item--disabled) .ui5-tab-overflow-itemContent{color:var(--_ui5-v2-8-0_tc_overflowItem_critical_color)}.ui5-tab-overflow-item[active] .ui5-tab-overflow-itemContent{color:var(--sapList_Active_TextColor)}.ui5-tab-overflow-itemContent{display:flex;align-items:center;position:relative;height:var(--_ui5-v2-8-0_tc_item_text);pointer-events:none;font-size:.875rem}.ui5-tab-overflow-itemContent-wrapper{padding-inline-start:calc((calc(var(--_ui5-v2-8-0-tab-indentation-level) + var(--_ui5-v2-8-0-tab-level-has-icon) * var(--_ui5-v2-8-0_tc_overflowItem_additional, 0))) * (var(--_ui5-v2-8-0_tc_overflowItem_indent) + var(--_ui5-v2-8-0_tc_overflowItem_extra_indent)))}.ui5-tab-overflow-item .ui5-tab-semantic-icon{position:absolute;inset-inline-start:-1.25rem}.ui5-tab-overflow-item--selectedSubTab{background-color:var(--sapList_SelectionBackgroundColor)}.ui5-tab-overflow-item [ui5-icon]:not(.ui5-tab-semantic-icon){width:1.375rem;height:1.375rem;padding-inline-end:.75rem;color:var(--_ui5-v2-8-0_tc_overflowItem_current_color)}.ui5-tab-container-responsive-popover [ui5-li-custom][focused]::part(native-li):after{inset:var(--_ui5-v2-8-0_tc_overflowItem_focus_offset)}.ui5-tab-container-responsive-popover::part(content){padding:0}
`;

// node_modules/@ui5/webcomponents/dist/Tab.js
var __decorate99 = function(decorators, target, key, desc) {
  var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
  if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
  else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
  return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var Tab_1;
var DESIGN_DESCRIPTIONS = {
  [SemanticColor_default.Positive]: TAB_ARIA_DESIGN_POSITIVE,
  [SemanticColor_default.Negative]: TAB_ARIA_DESIGN_NEGATIVE,
  [SemanticColor_default.Neutral]: TAB_ARIA_DESIGN_NEUTRAL,
  [SemanticColor_default.Critical]: TAB_ARIA_DESIGN_CRITICAL
};
var Tab = Tab_1 = class Tab2 extends UI5Element_default {
  constructor() {
    super(...arguments);
    this.disabled = false;
    this.design = "Default";
    this.selected = false;
    this.movable = false;
    this._isTopLevelTab = false;
  }
  set forcedTabIndex(val) {
    this.getDomRefInStrip().setAttribute("tabindex", val);
  }
  get forcedTabIndex() {
    return this.getDomRefInStrip().getAttribute("tabindex");
  }
  get displayText() {
    let text = this.text;
    if (this._isInline && this.additionalText) {
      text += ` (${this.additionalText})`;
    }
    return text;
  }
  get isSeparator() {
    return false;
  }
  get stripPresentation() {
    return executeTemplate_default(Tab_1.stripTemplate, this);
  }
  get overflowPresentation() {
    return executeTemplate_default(Tab_1.overflowTemplate, this);
  }
  get stableDomRef() {
    return this.getAttribute("stable-dom-ref") || `${this._id}-stable-dom-ref`;
  }
  get requiresExpandButton() {
    return this.items.length > 0 && this._isTopLevelTab && this.hasOwnContent;
  }
  get isSingleClickArea() {
    return this.items.length > 0 && this._isTopLevelTab && !this.hasOwnContent;
  }
  get isTwoClickArea() {
    return this.items.length > 0 && this._isTopLevelTab && this.hasOwnContent;
  }
  get isOnSelectedTabPath() {
    return this._selectedTabReference === this || this.tabs.some((subTab) => subTab.isOnSelectedTabPath);
  }
  get _effectiveSlotName() {
    return this.isOnSelectedTabPath ? this._individualSlot : `disabled-${this._individualSlot}`;
  }
  get _defaultSlotName() {
    return this._selectedTabReference === this ? "" : "disabled-slot";
  }
  get hasOwnContent() {
    return willShowContent_default(this.content);
  }
  get expandBtnAccessibilityAttributes() {
    return {
      hasPopup: "menu"
    };
  }
  receiveStripInfo({ getElementInStrip, posinset, setsize, isInline, isTopLevelTab, mixedMode }) {
    this._getElementInStrip = getElementInStrip;
    this._forcedPosinset = posinset;
    this._forcedSetsize = setsize;
    this._forcedMixedMode = mixedMode;
    this._isInline = isInline;
    this._isTopLevelTab = !!isTopLevelTab;
  }
  receiveOverflowInfo({ getElementInOverflow, style }) {
    this._getElementInOverflow = getElementInOverflow;
    this._forcedStyleInOverflow = style;
  }
  /**
   * Returns the DOM reference of the tab that is placed in the header.
   *
   * **Note:** Tabs, placed in the `items` slot of other tabs are not shown in the header. Calling this method on such tabs will return `undefined`.
   *
   * **Note:** If you need a DOM ref to the tab content please use the `getDomRef` method.
   * @public
   * @since 1.0.0-rc.16
   */
  getDomRefInStrip() {
    var _a;
    return (_a = this._getElementInStrip) == null ? void 0 : _a.call(this);
  }
  getFocusDomRef() {
    var _a, _b;
    let focusedDomRef = (_a = this._getElementInOverflow) == null ? void 0 : _a.call(this);
    if (!focusedDomRef) {
      focusedDomRef = (_b = this._getElementInStrip) == null ? void 0 : _b.call(this);
    }
    return focusedDomRef;
  }
  async focus(focusOptions) {
    await renderFinished();
    return super.focus(focusOptions);
  }
  get isMixedModeTab() {
    return !this.icon && this._forcedMixedMode;
  }
  get isTextOnlyTab() {
    return !this.icon && !this._forcedMixedMode;
  }
  get isIconTab() {
    return !!this.icon;
  }
  get effectiveDisabled() {
    return this.disabled || void 0;
  }
  get effectiveSelected() {
    const subItemSelected = this.tabs.some((elem) => elem.effectiveSelected);
    return this.selected || this._selectedTabReference === this || subItemSelected;
  }
  get effectiveHidden() {
    return !this.effectiveSelected;
  }
  get tabs() {
    return this.items.filter((tab) => !tab.isSeparator);
  }
  get ariaLabelledBy() {
    const labels = [];
    if (this.text) {
      labels.push(`${this._id}-text`);
    }
    if (this.additionalText) {
      labels.push(`${this._id}-additionalText`);
    }
    if (this.icon) {
      labels.push(`${this._id}-icon`);
    }
    if (this._designDescription) {
      labels.push(`${this._id}-designDescription`);
    }
    return labels.join(" ");
  }
  get stripClasses() {
    const classes = ["ui5-tab-strip-item"];
    if (this.effectiveSelected) {
      classes.push("ui5-tab-strip-item--selected");
    }
    if (this.disabled) {
      classes.push("ui5-tab-strip-item--disabled");
    }
    if (this._isInline) {
      classes.push("ui5-tab-strip-item--inline");
    }
    if (this.additionalText) {
      classes.push("ui5-tab-strip-item--withAdditionalText");
    }
    if (!this.icon && !this._forcedMixedMode) {
      classes.push("ui5-tab-strip-item--textOnly");
    }
    if (this.icon) {
      classes.push("ui5-tab-strip-item--withIcon");
    }
    if (!this.icon && this._forcedMixedMode) {
      classes.push("ui5-tab-strip-item--mixedMode");
    }
    if (this.design !== SemanticColor_default.Default) {
      classes.push(`ui5-tab-strip-item--${this.design.toLowerCase()}`);
    }
    if (this.isSingleClickArea) {
      classes.push(`ui5-tab-strip-item--singleClickArea`);
    }
    if (this.isTwoClickArea) {
      classes.push(`ui5-tab-strip-item--twoClickArea`);
    }
    return {
      itemClasses: classes.join(" "),
      additionalTextClasses: this.additionalTextClasses
    };
  }
  get additionalTextClasses() {
    const classes = [];
    if (this.additionalText) {
      classes.push("ui5-tab-strip-itemAdditionalText");
    }
    if (this.icon && !this.additionalText) {
      classes.push("ui5-tab-strip-itemAdditionalText-hidden");
    }
    return classes.join(" ");
  }
  get expandButtonTitle() {
    return Tab_1.i18nBundle.getText(TABCONTAINER_END_OVERFLOW);
  }
  get _roleDescription() {
    return this.items.length > 0 ? Tab_1.i18nBundle.getText(TAB_SPLIT_ROLE_DESCRIPTION) : void 0;
  }
  get _ariaHasPopup() {
    return this.isSingleClickArea ? "menu" : void 0;
  }
  get semanticIconName() {
    switch (this.design) {
      case SemanticColor_default.Positive:
        return "sys-enter-2";
      case SemanticColor_default.Negative:
        return "error";
      case SemanticColor_default.Critical:
        return "alert";
      default:
        return null;
    }
  }
  get _designDescription() {
    if (this.design === SemanticColor_default.Default) {
      return null;
    }
    return Tab_1.i18nBundle.getText(DESIGN_DESCRIPTIONS[this.design]);
  }
  get semanticIconClasses() {
    const classes = ["ui5-tab-semantic-icon"];
    if (this.design !== SemanticColor_default.Default && this.design !== SemanticColor_default.Neutral) {
      classes.push(`ui5-tab-semantic-icon--${this.design.toLowerCase()}`);
    }
    return classes.join(" ");
  }
  get overflowClasses() {
    const classes = ["ui5-tab-overflow-item"];
    if (this.design !== SemanticColor_default.Default && this.design !== SemanticColor_default.Neutral) {
      classes.push(`ui5-tab-overflow-item--${this.design.toLowerCase()}`);
    }
    if (this.effectiveDisabled) {
      classes.push("ui5-tab-overflow-item--disabled");
    }
    if (this.selected) {
      classes.push("ui5-tab-overflow-item--selectedSubTab");
    }
    return classes.join(" ");
  }
  get overflowState() {
    return this.disabled || this.isSingleClickArea ? ListItemType_default.Inactive : ListItemType_default.Active;
  }
  static get stripTemplate() {
    return TabInStripTemplate;
  }
  static get overflowTemplate() {
    return TabInOverflowTemplate;
  }
  _ondragstart(e) {
    if (e.target instanceof HTMLElement) {
      e.target.setAttribute("data-moving", "");
    }
  }
  _ondragend(e) {
    if (e.target instanceof HTMLElement) {
      e.target.removeAttribute("data-moving");
    }
  }
  captureRef(ref) {
    if (ref) {
      ref.realTabReference = this;
    }
  }
  captureButtonRef(ref) {
    if (ref) {
      ref.tab = this;
    }
  }
};
__decorate99([
  property_default()
], Tab.prototype, "text", void 0);
__decorate99([
  property_default({ type: Boolean })
], Tab.prototype, "disabled", void 0);
__decorate99([
  property_default()
], Tab.prototype, "additionalText", void 0);
__decorate99([
  property_default()
], Tab.prototype, "icon", void 0);
__decorate99([
  property_default()
], Tab.prototype, "design", void 0);
__decorate99([
  property_default({ type: Boolean })
], Tab.prototype, "selected", void 0);
__decorate99([
  property_default({ type: Boolean })
], Tab.prototype, "movable", void 0);
__decorate99([
  property_default({ type: Boolean })
], Tab.prototype, "_isTopLevelTab", void 0);
__decorate99([
  property_default({ type: Object })
], Tab.prototype, "_selectedTabReference", void 0);
__decorate99([
  slot_default({
    type: Node,
    "default": true,
    invalidateOnChildChange: {
      properties: true,
      slots: false
    }
  })
], Tab.prototype, "content", void 0);
__decorate99([
  slot_default({
    type: HTMLElement,
    individualSlots: true,
    invalidateOnChildChange: {
      properties: true,
      slots: false
    }
  })
], Tab.prototype, "items", void 0);
__decorate99([
  i18n_default("@ui5/webcomponents")
], Tab, "i18nBundle", void 0);
Tab = Tab_1 = __decorate99([
  customElement_default({
    tag: "ui5-tab",
    languageAware: true,
    renderer: JsxRenderer_default,
    template: TabTemplate,
    styles: Tab_css_default
  })
], Tab);
Tab.define();
TabContainer_default.registerTabStyles(TabInStrip_css_default);
TabContainer_default.registerTabStyles(DraggableElement_css_default);
TabContainer_default.registerTabStyles(TabInOverflow_css_default);

// node_modules/@ui5/webcomponents-react/dist/webComponents/Tab/index.js
var Tab3 = withWebComponent("ui5-tab", ["additionalText", "design", "icon", "text"], ["disabled", "selected"], ["items"], []);
Tab3.displayName = "Tab";

// node_modules/@ui5/webcomponents-react/dist/webComponents/TabContainer/index.js
var TabContainer3 = withWebComponent("ui5-tabcontainer", ["contentBackgroundDesign", "headerBackgroundDesign", "overflowMode", "tabLayout"], ["collapsed"], ["overflowButton", "startOverflowButton"], ["move-over", "move", "tab-select"]);
TabContainer3.displayName = "TabContainer";

// node_modules/@ui5/webcomponents/dist/TableCellTemplate.js
function TableCellTemplate() {
  return jsxs(Fragment, { children: [this._popin && jsxs(Fragment, { children: [jsx("div", { class: "popin-header", ref: this.injectHeaderNodes.bind(this) }), jsx("span", { class: "popin-colon", children: this._i18nPopinColon })] }), jsx("slot", {})] });
}

// node_modules/@ui5/webcomponents/dist/generated/themes/TableCell.css.js
registerThemePropertiesLoader("@ui5/webcomponents-theming", "sap_horizon", async () => parameters_bundle_css_default);
registerThemePropertiesLoader("@ui5/webcomponents", "sap_horizon", async () => parameters_bundle_css_default2);
var TableCell_css_default = `:host([_popin]){color:var(--sapContent_LabelColor);padding-inline-start:0;padding-inline-end:0;align-items:center}.popin-colon{padding-inline-end:.5rem}.popin-header{display:contents}
`;

// node_modules/@ui5/webcomponents/dist/generated/themes/TableCellBase.css.js
registerThemePropertiesLoader("@ui5/webcomponents-theming", "sap_horizon", async () => parameters_bundle_css_default);
registerThemePropertiesLoader("@ui5/webcomponents", "sap_horizon", async () => parameters_bundle_css_default2);
var TableCellBase_css_default = `:host{display:flex;flex-wrap:wrap;align-content:var(--_ui5-v2-8-0_table_cell_valign);min-width:var(--_ui5-v2-8-0_table_cell_min_width);max-width:100%;overflow:clip;overflow-clip-margin:content-box;padding:var(--_ui5-v2-8-0_table_cell_vertical_padding) var(--_ui5-v2-8-0_table_cell_horizontal_padding);box-sizing:border-box}:host([tabindex]:focus){outline:var(--sapContent_FocusWidth) var(--sapContent_FocusStyle) var(--sapContent_FocusColor);outline-offset:calc(-1 * var(--sapContent_FocusWidth))}:host(#selection-cell){width:auto;min-width:auto;background-color:inherit}:host([data-ui5-table-cell-fixed]){position:sticky;z-index:1}
`;

// node_modules/@ui5/webcomponents/dist/TableCellBase.js
var __decorate100 = function(decorators, target, key, desc) {
  var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
  if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
  else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
  return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var TableCellBase = class TableCellBase2 extends UI5Element_default {
  constructor() {
    super(...arguments);
    this._popin = false;
    this._popinHidden = false;
    this.ariaRole = "gridcell";
  }
  onEnterDOM() {
    this.toggleAttribute("ui5-table-cell-base", true);
  }
  onBeforeRendering() {
    if (this._popin) {
      this.removeAttribute("role");
    } else {
      this.setAttribute("role", this.ariaRole);
    }
  }
  getFocusDomRef() {
    return this;
  }
  isTableCellBase() {
    return true;
  }
};
__decorate100([
  slot_default({ type: Node, "default": true })
], TableCellBase.prototype, "content", void 0);
__decorate100([
  property_default()
], TableCellBase.prototype, "horizontalAlign", void 0);
__decorate100([
  property_default({ type: Boolean })
], TableCellBase.prototype, "_popin", void 0);
__decorate100([
  property_default({ type: Boolean, noAttribute: true })
], TableCellBase.prototype, "_popinHidden", void 0);
__decorate100([
  i18n_default("@ui5/webcomponents")
], TableCellBase, "i18nBundle", void 0);
TableCellBase = __decorate100([
  customElement_default({
    renderer: JsxRenderer_default,
    styles: TableCellBase_css_default
  })
], TableCellBase);
var TableCellBase_default = TableCellBase;

// node_modules/@ui5/webcomponents/dist/TableCell.js
var __decorate101 = function(decorators, target, key, desc) {
  var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
  if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
  else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
  return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var TableCell = class TableCell2 extends TableCellBase_default {
  onBeforeRendering() {
    super.onBeforeRendering();
    if (this.horizontalAlign) {
      this.style.justifyContent = this.horizontalAlign;
    } else if (this._individualSlot) {
      this.style.justifyContent = `var(--horizontal-align-${this._individualSlot})`;
    }
  }
  injectHeaderNodes(ref) {
    if (ref && !ref.hasChildNodes()) {
      ref.replaceChildren(...this._popinHeaderNodes);
    }
  }
  get _headerCell() {
    const row = this.parentElement;
    const table = row.parentElement;
    const index = row.cells.indexOf(this);
    return table.headerRow[0].cells[index];
  }
  get _popinHeaderNodes() {
    const nodes = [];
    const headerCell = this._headerCell;
    if (headerCell.popinText) {
      nodes.push(headerCell.popinText);
    } else {
      nodes.push(...this._headerCell.content.map((node) => node.cloneNode(true)));
    }
    if (headerCell.action[0]) {
      nodes.push(headerCell.action[0].cloneNode(true));
    }
    return nodes;
  }
  get _i18nPopinColon() {
    return TableCellBase_default.i18nBundle.getText(LABEL_COLON);
  }
};
TableCell = __decorate101([
  customElement_default({
    tag: "ui5-table-cell",
    renderer: JsxRenderer_default,
    styles: [TableCellBase_default.styles, TableCell_css_default],
    template: TableCellTemplate
  })
], TableCell);
TableCell.define();
var TableCell_default = TableCell;

// node_modules/@ui5/webcomponents/dist/TableRowTemplate.js
function TableRowTemplate() {
  return jsxs(Fragment, { children: [this._hasRowSelector && jsx(TableCell_default, { id: "selection-cell", "aria-selected": this._isSelected, "data-ui5-table-cell-fixed": true, "data-ui5-table-selection-component": true, children: this._isMultiSelect ? jsx(CheckBox_default, { id: "selection-component", tabindex: -1, checked: this._isSelected, onChange: this._onSelectionChange, accessibleName: this._i18nRowSelector }) : jsx(RadioButton_default, { id: "selection-component", tabindex: -1, name: this._tableId, checked: this._isSelected, onChange: this._onSelectionChange, accessibleName: this._i18nRowSelector }) }), this._visibleCells.map((cell) => jsx("slot", { name: cell._individualSlot })), this._hasRowActions && jsxs(TableCell_default, { id: "actions-cell", children: [this._flexibleActions.map((action) => jsx("slot", { name: action._individualSlot })), this._hasOverflowActions && jsx(Button_default, { id: "overflow", icon: "overflow", design: "Transparent", onClick: this._onOverflowButtonClick }), this._fixedActions.map((action) => jsx("slot", { name: action._individualSlot }))] }), this._renderNavigated && jsx(TableCell_default, { id: "navigated-cell", "data-excluded-from-navigation": true, children: jsx("div", { id: "navigated" }) }), this._popinCells.length > 0 && jsx(TableCell_default, { id: "popin-cell", children: this._popinCells.map((cell) => jsx("slot", { name: cell._individualSlot })) })] });
}

// node_modules/@ui5/webcomponents/dist/generated/themes/TableRowBase.css.js
registerThemePropertiesLoader("@ui5/webcomponents-theming", "sap_horizon", async () => parameters_bundle_css_default);
registerThemePropertiesLoader("@ui5/webcomponents", "sap_horizon", async () => parameters_bundle_css_default2);
var TableRowBase_css_default = `:host{display:grid;grid-template-columns:subgrid;grid-column:1 / -1;min-height:var(--_ui5-v2-8-0_list_item_base_height);box-sizing:border-box;border-bottom:var(--sapList_BorderWidth) solid var(--sapList_BorderColor);border-right:var(--sapList_BorderWidth) solid var(--sapList_BorderColor);border-left:var(--sapList_BorderWidth) solid var(--sapList_BorderColor);overflow:clip}:host([tabindex]:focus){outline:var(--sapContent_FocusWidth) var(--sapContent_FocusStyle) var(--sapContent_FocusColor);outline-offset:calc(-1 * var(--sapContent_FocusWidth))}:host([tabindex]:focus) #selection-cell,:host([tabindex]:focus) #actions-cell{clip-path:inset(var(--sapContent_FocusWidth))}#selection-cell{padding:0;left:0}:dir(rtl)#selection-cell{right:0}#selection-component{vertical-align:middle}#actions-cell{position:sticky;right:0;background-color:inherit;flex-wrap:nowrap}:dir(rtl)#actions-cell{left:0}
`;

// node_modules/@ui5/webcomponents/dist/TableUtils.js
var isInstanceOfTable = (obj) => {
  return !!obj && "isTable" in obj && !!obj.isTable;
};
var isSelectionCheckbox = (e) => {
  return e.composedPath().some((el) => {
    var _a;
    return (_a = el.hasAttribute) == null ? void 0 : _a.call(el, "data-ui5-table-selection-component");
  });
};
var isHeaderSelector = (e) => {
  return isSelectionCheckbox(e) && e.composedPath().some((el) => el instanceof HTMLElement && el.hasAttribute("ui5-table-header-row"));
};
var findRowInPath = (composedPath) => {
  return composedPath.find((el) => el instanceof HTMLElement && el.hasAttribute("ui5-table-row"));
};
var findVerticalScrollContainer = (element) => {
  while (element) {
    const { overflowY } = window.getComputedStyle(element);
    if (overflowY === "auto" || overflowY === "scroll") {
      return element;
    }
    if (element.parentNode instanceof ShadowRoot) {
      element = element.parentNode.host;
    } else {
      element = element.parentElement;
    }
  }
  return document.scrollingElement || document.documentElement;
};
var scrollElementIntoView = (scrollContainer, element, stickyElements, isRtl) => {
  if (stickyElements.length === 0) {
    return;
  }
  const elementRect = element.getBoundingClientRect();
  const inline = isRtl ? "right" : "left";
  const { x: stickyX, y: stickyY } = stickyElements.reduce(({ x, y }, stickyElement) => {
    const { top, [inline]: inlineStart } = getComputedStyle(stickyElement);
    const stickyElementRect = stickyElement.getBoundingClientRect();
    if (top !== "auto" && stickyElementRect.bottom > elementRect.top) {
      y = Math.max(y, stickyElementRect.bottom);
    }
    if (inlineStart !== "auto") {
      if (!isRtl && stickyElementRect.right > elementRect.left) {
        x = Math.max(x, stickyElementRect.right);
      } else if (isRtl && stickyElementRect.left < elementRect.right) {
        x = Math.min(x, stickyElementRect.left);
      }
    }
    return { x, y };
  }, { x: elementRect[inline], y: elementRect.top });
  const scrollX = elementRect[inline] - stickyX;
  const scrollY = elementRect.top - stickyY;
  if (scrollX === 0 && scrollY === 0) {
    return;
  }
  scrollContainer.scrollBy({
    top: scrollY,
    left: scrollX
  });
};
var isFeature = (element, identifier) => {
  return element.identifier === identifier;
};
var throttle3 = (callback) => {
  let timer;
  return () => {
    cancelAnimationFrame(timer);
    timer = requestAnimationFrame(() => {
      callback();
    });
  };
};

// node_modules/@ui5/webcomponents/dist/TableRowBase.js
var __decorate102 = function(decorators, target, key, desc) {
  var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
  if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
  else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
  return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var TableRowBase_1;
var TableRowBase = TableRowBase_1 = class TableRowBase2 extends UI5Element_default {
  constructor() {
    super(...arguments);
    this._invalidate = 0;
    this._rowActionCount = 0;
  }
  onEnterDOM() {
    this.setAttribute("role", "row");
    this.toggleAttribute("ui5-table-row-base", true);
  }
  onBeforeRendering() {
    if (this._isSelectable) {
      this.setAttribute("aria-selected", `${this._isSelected}`);
    } else {
      this.removeAttribute("aria-selected");
    }
  }
  getFocusDomRef() {
    return this;
  }
  isHeaderRow() {
    return false;
  }
  _onSelectionChange() {
    const tableSelection = this._tableSelection;
    const selected = tableSelection.isMultiSelectable() ? !this._isSelected : true;
    tableSelection.setSelected(this, selected, true);
  }
  _onkeydown(e, eventOrigin) {
    if (eventOrigin === this && this._isSelectable && isSpace(e) || eventOrigin === this._selectionCell && (isSpace(e) || isEnter(e))) {
      this._onSelectionChange();
      e.preventDefault();
    }
  }
  get _table() {
    const element = this.parentElement;
    return isInstanceOfTable(element) ? element : void 0;
  }
  get _tableId() {
    var _a;
    return (_a = this._table) == null ? void 0 : _a._id;
  }
  get _tableSelection() {
    var _a;
    return (_a = this._table) == null ? void 0 : _a._getSelection();
  }
  get _isSelected() {
    var _a;
    return (_a = this._tableSelection) == null ? void 0 : _a.isSelected(this);
  }
  get _isSelectable() {
    var _a;
    return (_a = this._tableSelection) == null ? void 0 : _a.isSelectable();
  }
  get _isMultiSelect() {
    var _a;
    return !!((_a = this._tableSelection) == null ? void 0 : _a.isMultiSelectable());
  }
  get _hasRowSelector() {
    var _a;
    return !!((_a = this._tableSelection) == null ? void 0 : _a.isRowSelectorRequired());
  }
  get _selectionCell() {
    return this.shadowRoot.getElementById("selection-cell");
  }
  get _visibleCells() {
    return this.cells.filter((c) => !c._popin);
  }
  get _popinCells() {
    return this.cells.filter((c) => c._popin && !c._popinHidden);
  }
  get _stickyCells() {
    var _a, _b;
    const selectionCell = (_a = this.shadowRoot) == null ? void 0 : _a.querySelector("#selection-cell"), navigatedCell = (_b = this.shadowRoot) == null ? void 0 : _b.querySelector("#navigated-cell");
    return [selectionCell, ...this.cells, navigatedCell].filter((cell) => cell == null ? void 0 : cell.hasAttribute("fixed"));
  }
  get _i18nRowSelector() {
    return TableRowBase_1.i18nBundle.getText(TABLE_ROW_SELECTOR);
  }
};
__decorate102([
  property_default({ type: Number, noAttribute: true })
], TableRowBase.prototype, "_invalidate", void 0);
__decorate102([
  property_default({ type: Number, noAttribute: true })
], TableRowBase.prototype, "_rowActionCount", void 0);
__decorate102([
  i18n_default("@ui5/webcomponents")
], TableRowBase, "i18nBundle", void 0);
TableRowBase = TableRowBase_1 = __decorate102([
  customElement_default({
    renderer: JsxRenderer_default,
    styles: TableRowBase_css_default
  })
], TableRowBase);
var TableRowBase_default = TableRowBase;

// node_modules/@ui5/webcomponents/dist/generated/themes/TableRow.css.js
registerThemePropertiesLoader("@ui5/webcomponents-theming", "sap_horizon", async () => parameters_bundle_css_default);
registerThemePropertiesLoader("@ui5/webcomponents", "sap_horizon", async () => parameters_bundle_css_default2);
var TableRow_css_default = `:host{background:var(--sapList_Background)}:host([position]){height:var(--row-height)}:host([aria-selected=true]){background-color:var(--sapList_SelectionBackgroundColor);border-bottom:var(--sapList_BorderWidth) solid var(--sapList_SelectionBorderColor)}:host([_interactive]){cursor:pointer}@media (hover: hover){:host([_interactive]:hover){background:var(--sapList_Hover_Background)}:host([_interactive][aria-selected=true]:hover){background:var(--sapList_Hover_SelectionBackground)}}:host([_interactive]:active),:host([_interactive][_active]),:host([_interactive][aria-selected=true]:active),:host([_interactive][aria-selected=true][_active]){background:var(--sapList_Active_Background)}#popin-cell{align-content:initial;flex-direction:column;grid-column:1 / -1}#navigated-cell{position:sticky;right:0;overflow:visible;grid-row:span 2;min-width:0;padding:0;background:inherit}:dir(rtl)#navigated-cell{left:0}:host([navigated]) #navigated{position:absolute;inset:0;background-color:var(--sapList_SelectionBorderColor)}:host([tabindex]:focus) #navigated{transform:translate(calc(var(--_ui5-v2-8-0_table_navigated_cell_width) * -1));bottom:2px;top:3px}:host([tabindex]:focus) #navigated:dir(rtl){transform:translate(var(--_ui5-v2-8-0_table_navigated_cell_width))}:host([tabindex]:focus) #navigated-cell{clip-path:inset(var(--sapContent_FocusWidth) var(--sapContent_FocusWidth) var(--sapContent_FocusWidth) calc(var(--_ui5-v2-8-0_table_navigated_cell_width) * -1))}:host([tabindex]:focus) #navigated-cell:dir(rtl){clip-path:inset(var(--sapContent_FocusWidth) calc(var(--_ui5-v2-8-0_table_navigated_cell_width) * -1) var(--sapContent_FocusWidth) var(--sapContent_FocusWidth))}:host([navigated]) #popin-cell{grid-column:1 / -2}#actions-cell{display:flex;align-items:center;gap:var(--_ui5-v2-8-0_table_row_actions_gap)}#actions-cell:has(+#navigated-cell){right:var(--_ui5-v2-8-0_table_navigated_cell_width);overflow:auto}:dir(rtl)#actions-cell:has(+#navigated-cell){left:var(--_ui5-v2-8-0_table_navigated_cell_width)}
`;

// node_modules/@ui5/webcomponents/dist/TableRow.js
var __decorate103 = function(decorators, target, key, desc) {
  var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
  if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
  else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
  return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var TableRow = class TableRow2 extends TableRowBase_default {
  constructor() {
    super(...arguments);
    this.position = -1;
    this.interactive = false;
    this.navigated = false;
    this.movable = false;
    this._renderNavigated = false;
  }
  onBeforeRendering() {
    super.onBeforeRendering();
    this.toggleAttribute("_interactive", this._isInteractive);
    if (this.position !== -1) {
      this.setAttribute("aria-rowindex", `${this.position + 1}`);
    }
    if (this._renderNavigated && this.navigated) {
      this.setAttribute("aria-current", "true");
    } else {
      this.removeAttribute("aria-current");
    }
    if (this.movable) {
      this.setAttribute("draggable", "true");
    } else {
      this.removeAttribute("draggable");
    }
  }
  async focus(focusOptions) {
    this.setAttribute("tabindex", "-1");
    HTMLElement.prototype.focus.call(this, focusOptions);
    return Promise.resolve();
  }
  _onkeydown(e, eventOrigin) {
    var _a;
    super._onkeydown(e, eventOrigin);
    if (e.defaultPrevented) {
      return;
    }
    if (eventOrigin === this && this._isInteractive && isEnter(e)) {
      this.toggleAttribute("_active", true);
      (_a = this._table) == null ? void 0 : _a._onRowClick(this);
    }
  }
  _onclick() {
    var _a;
    if (this._isInteractive && this === getActiveElement_default()) {
      (_a = this._table) == null ? void 0 : _a._onRowClick(this);
    }
  }
  _onkeyup() {
    this.removeAttribute("_active");
  }
  _onfocusout() {
    this.removeAttribute("_active");
  }
  _onOverflowButtonClick(e) {
    const ctor = this.actions[0].constructor;
    ctor.showMenu(this._overflowActions, e.target);
  }
  get _isInteractive() {
    return this.interactive;
  }
  get _hasRowActions() {
    return this._rowActionCount > 0;
  }
  get _hasOverflowActions() {
    let renderedActionsCount = 0;
    return this.actions.some((action) => {
      if (action.isFixedAction() || !action.invisible) {
        renderedActionsCount++;
      }
      return renderedActionsCount > this._rowActionCount;
    });
  }
  get _flexibleActions() {
    const flexibleActions = this.actions.filter((action) => !action.isFixedAction());
    const fixedActionsCount = this.actions.length - flexibleActions.length;
    let maxFlexibleActionsCount = this._rowActionCount - fixedActionsCount;
    if (maxFlexibleActionsCount < 1) {
      return [];
    }
    if (flexibleActions.length <= maxFlexibleActionsCount) {
      return flexibleActions;
    }
    const visibleFlexibleActions = flexibleActions.filter((action) => !action.invisible);
    if (visibleFlexibleActions.length > maxFlexibleActionsCount) {
      maxFlexibleActionsCount--;
    }
    return visibleFlexibleActions.slice(0, maxFlexibleActionsCount);
  }
  get _fixedActions() {
    let maxFixedActionsCount = this._rowActionCount;
    if (this._hasOverflowActions) {
      maxFixedActionsCount--;
    }
    const fixedActions = this.actions.filter((action) => action.isFixedAction());
    return fixedActions.slice(0, maxFixedActionsCount);
  }
  get _overflowActions() {
    const fixedActions = this._fixedActions;
    const flexibleActions = this._flexibleActions;
    const overflowActions = [];
    this.actions.forEach((action) => {
      if (!action.invisible && !fixedActions.includes(action) && !flexibleActions.includes(action)) {
        overflowActions.push(action);
      }
    });
    return overflowActions;
  }
};
__decorate103([
  slot_default({
    type: HTMLElement,
    "default": true,
    individualSlots: true,
    invalidateOnChildChange: {
      properties: ["_popin", "_popinHidden"],
      slots: false
    }
  })
], TableRow.prototype, "cells", void 0);
__decorate103([
  slot_default({
    type: HTMLElement,
    individualSlots: true
  })
], TableRow.prototype, "actions", void 0);
__decorate103([
  property_default()
], TableRow.prototype, "rowKey", void 0);
__decorate103([
  property_default({ type: Number })
], TableRow.prototype, "position", void 0);
__decorate103([
  property_default({ type: Boolean })
], TableRow.prototype, "interactive", void 0);
__decorate103([
  property_default({ type: Boolean })
], TableRow.prototype, "navigated", void 0);
__decorate103([
  property_default({ type: Boolean })
], TableRow.prototype, "movable", void 0);
__decorate103([
  property_default({ type: Boolean, noAttribute: true })
], TableRow.prototype, "_renderNavigated", void 0);
TableRow = __decorate103([
  customElement_default({
    tag: "ui5-table-row",
    styles: [TableRowBase_default.styles, TableRow_css_default],
    template: TableRowTemplate
  })
], TableRow);
TableRow.define();
var TableRow_default = TableRow;

// node_modules/@ui5/webcomponents/dist/TableTemplate.js
function TableTemplate() {
  var _a;
  return jsxs(Fragment, { children: [jsx("div", { id: "before", role: "none", tabindex: 0, "ui5-table-dummy-focus-area": true }), jsxs("div", { id: "table", role: "grid", style: this.styles.table, "aria-label": this._ariaLabel, "aria-rowcount": this._ariaRowCount, "aria-multiselectable": this._ariaMultiSelectable, children: [jsx("slot", { name: "headerRow" }), jsx("div", { id: "rows", children: jsx("div", { id: "spacer", style: this.styles.spacer, children: jsx("slot", {}) }) }), this.rows.length === 0 && jsx(TableRow_default, { id: "nodata-row", children: jsx(TableCell_default, { id: "nodata-cell", "data-excluded-from-navigation": true, "horizontal-align": "Center", children: this.nodata.length > 0 ? jsx("slot", { name: "nodata" }) : this._effectiveNoDataText }) }), this.rows.length > 0 && ((_a = this._getGrowing()) == null ? void 0 : _a.hasGrowingComponent()) && jsx("div", { id: "footer", role: "rowgroup", children: growingRow.call(this) }), jsx(DropIndicator_default, { orientation: "Horizontal", ownerReference: this }), jsx("div", { "aria-hidden": "true", id: "table-end-row", children: jsx("div", { id: "table-end-cell", children: jsx("div", { id: "table-end", "aria-hidden": "true", tabindex: -1 }) }) }), this.loading && jsx(BusyIndicator_default, { id: "loading", delay: this.loadingDelay, active: true, "data-sap-focus-ref": true })] }), jsx("div", { id: "after", role: "none", tabindex: 0, "ui5-table-dummy-focus-area": true })] });
}
function growingRow() {
  var _a;
  return jsx(TableRow_default, { id: "growing-row", "ui5-growing-row": true, children: jsx(TableCell_default, { id: "growing-cell", children: jsx("slot", { name: (_a = this._getGrowing()) == null ? void 0 : _a._individualSlot }) }) });
}

// node_modules/@ui5/webcomponents/dist/generated/themes/Table.css.js
registerThemePropertiesLoader("@ui5/webcomponents-theming", "sap_horizon", async () => parameters_bundle_css_default);
registerThemePropertiesLoader("@ui5/webcomponents", "sap_horizon", async () => parameters_bundle_css_default2);
var Table_css_default = `:host{display:block;position:relative;color:var(--sapList_TextColor);font:var(--sapFontSize) var(--sapFontFamily)}:host([hidden]){display:none}#table{display:grid;grid-auto-rows:minmax(min-content,max-content)}:host([overflow-mode="Scroll"]) #table{overflow-x:auto;height:100%;height:-webkit-fill-available;height:fill-available}#rows,#spacer{display:grid;grid-template-rows:min-content;grid-template-columns:subgrid;grid-column:1 / -1}#nodata-cell{grid-column:1 / -1;justify-content:center}#footer{grid-column:1 / -1;grid-template-rows:subgrid;height:fit-content}#growing-cell{grid-column:1 / -1;justify-content:center;padding:0;border-top:1px solid var(--sapList_BorderColor);box-sizing:border-box}#loading{position:absolute;inset:0;height:100%;z-index:2}#loading[_is-busy]{background-color:var(--_ui5-v2-8-0_busy_indicator_block_layer)}
`;

// node_modules/@ui5/webcomponents/dist/TableExtension.js
var TableExtension = class {
};

// node_modules/@ui5/webcomponents/dist/GridWalker.js
var GridWalker = class {
  constructor(grid = [[]]) {
    this.rowPos = 0;
    this.colPos = 0;
    this.pageSize = 20;
    this.firstRowPos = 0;
    this.lastRowPos = 0;
    this.grid = grid;
  }
  left() {
    this.colPos = Math.max(this.getColPos() - 1, 0);
  }
  right() {
    this.colPos = Math.min(this.getColPos() + 1, this.grid[this.getRowPos()].length - 1);
  }
  up() {
    this.rowPos = Math.max(this.getRowPos() - 1, 0);
  }
  down() {
    this.rowPos = Math.min(this.getRowPos() + 1, this.grid.length - 1);
  }
  pageup() {
    this.colPos = this.getColPos();
    const rowPos = this.getRowPos();
    this.rowPos = Math.max(rowPos > this.firstRowPos ? this.firstRowPos : 0, rowPos - this.pageSize);
  }
  pagedown() {
    this.colPos = this.getColPos();
    const rowPos = this.getRowPos();
    const endRowPos = this.grid.length - 1;
    const lastRowPos = endRowPos + this.lastRowPos;
    this.rowPos = Math.min(rowPos < lastRowPos ? lastRowPos : endRowPos, rowPos + this.pageSize);
  }
  home() {
    this.colPos = this.getColPos();
    if (this.colPos === 0) {
      this.rowPos = this.rowPos > this.firstRowPos ? this.firstRowPos : 0;
    } else {
      this.colPos = this.colPos > 1 ? 1 : 0;
    }
  }
  end() {
    this.colPos = this.getColPos();
    if (this.colPos === 0) {
      const endRowPos = this.grid.length - 1;
      const lastRowPos = endRowPos + this.lastRowPos;
      this.rowPos = this.rowPos < lastRowPos ? lastRowPos : endRowPos;
    } else {
      const lastColPos = this.grid[this.rowPos].length - 1;
      this.colPos = this.colPos < lastColPos ? lastColPos : 0;
    }
  }
  setGrid(grid) {
    this.grid = grid;
  }
  getCurrent() {
    return this.grid[this.getRowPos()][this.getColPos()];
  }
  setCurrent(current) {
    this.grid.forEach((row, rowIndex) => {
      row.forEach((cell, colIndex) => {
        if (cell === current) {
          this.rowPos = rowIndex;
          this.colPos = colIndex;
        }
      });
    });
  }
  setRowPos(rowPos) {
    this.rowPos = rowPos;
  }
  getRowPos() {
    return Math.min(this.rowPos, this.grid.length - 1);
  }
  setColPos(colPos) {
    this.colPos = colPos;
  }
  getColPos() {
    return Math.min(this.colPos, this.grid[this.getRowPos()].length - 1);
  }
  setFirstRowPos(firstRowPos) {
    this.firstRowPos = firstRowPos;
  }
  getFirstRowPos() {
    return this.firstRowPos;
  }
  setLastRowPos(lastRowPos) {
    this.lastRowPos = lastRowPos;
  }
  getLastRowPos() {
    return this.lastRowPos;
  }
};
var GridWalker_default = GridWalker;

// node_modules/@ui5/webcomponents/dist/TableNavigation.js
var TableNavigation = class extends TableExtension {
  constructor(table) {
    super();
    this._colPosition = 0;
    this._tabPosition = 0;
    this._table = table;
    this._gridWalker = new GridWalker_default();
    this._gridWalker.setGrid(this._getNavigationItemsOfGrid());
    this._onKeyDownCaptureBound = this._onKeyDownCapture.bind(this);
    this._table.addEventListener("keydown", this._onKeyDownCaptureBound, { capture: true });
  }
  _getNavigationItemsOfRow(row) {
    return [row, ...row.shadowRoot.children].map((element) => {
      return element.localName === "slot" ? element.assignedElements() : element;
    }).flat().filter((element) => {
      return element.localName.includes("ui5-table-") && !element.hasAttribute("data-excluded-from-navigation");
    });
  }
  _getNavigationItemsOfGrid() {
    var _a, _b;
    const items3 = [];
    if (this._table.headerRow[0] && !isElementHidden_default(this._table.headerRow[0])) {
      items3.push(this._getNavigationItemsOfRow(this._table.headerRow[0]));
      this._gridWalker.setFirstRowPos(1);
    } else {
      this._gridWalker.setFirstRowPos(0);
    }
    if (this._table.rows.length) {
      this._table.rows.forEach((row) => items3.push(this._getNavigationItemsOfRow(row)));
    } else {
      items3.push(this._getNavigationItemsOfRow(this._table._nodataRow));
    }
    if (this._table.rows.length > 0 && ((_a = this._table._getGrowing()) == null ? void 0 : _a.hasGrowingComponent())) {
      items3.push([(_b = this._table._getGrowing()) == null ? void 0 : _b.getFocusDomRef()]);
      this._gridWalker.setLastRowPos(-1);
    } else {
      this._gridWalker.setLastRowPos(0);
    }
    if (!this._gridWalker.getCurrent()) {
      this._gridWalker.setRowPos(this._gridWalker.getFirstRowPos());
    }
    this._gridWalker.setGrid(items3);
    return items3;
  }
  _setCurrentItem(e, callback) {
    const navigationItems = this._getNavigationItemsOfGrid().flat();
    const navigationItem = e.composedPath().find((target) => navigationItems.includes(target));
    if (navigationItem) {
      this._gridWalker.setCurrent(navigationItem);
      callback && callback(navigationItem);
    }
  }
  _isEventFromCurrentItem(e) {
    return e.composedPath()[0] === this._gridWalker.getCurrent();
  }
  _focusElement(element, ignoreFocusIn = true) {
    var _a;
    if (!element || element === getActiveElement_default()) {
      return;
    }
    const navigationItems = this._getNavigationItemsOfGrid().flat();
    if (navigationItems.includes(this._lastFocusedItem)) {
      (_a = this._lastFocusedItem) == null ? void 0 : _a.removeAttribute("tabindex");
    }
    if (navigationItems.includes(element)) {
      element.setAttribute("tabindex", "-1");
      this._lastFocusedItem = element;
    }
    this._ignoreFocusIn = ignoreFocusIn;
    element.focus({ preventScroll: element === this._table._beforeElement || element === this._table._afterElement });
    if (element instanceof HTMLInputElement) {
      element.select();
    }
    this._ignoreFocusIn = false;
  }
  _focusCurrentItem() {
    this._focusElement(this._gridWalker.getCurrent());
  }
  _handleEnter(e, eventOrigin) {
    if (eventOrigin.hasAttribute("ui5-table-cell-base")) {
      this._handleF2(e, eventOrigin);
    }
  }
  _handleF2(e, eventOrigin) {
    if (this._isEventFromCurrentItem(e)) {
      const firstTabbable = getTabbableElements(eventOrigin)[0];
      this._focusElement(firstTabbable);
    } else {
      this._setCurrentItem(e, () => this._focusCurrentItem());
    }
    e.preventDefault();
  }
  _handleF7(e, eventOrigin) {
    if (eventOrigin.hasAttribute("ui5-table-row-base")) {
      this._gridWalker.setColPos(this._colPosition);
      let elementToFocus = this._gridWalker.getCurrent();
      if (this._tabPosition > -1) {
        const tabbables = getTabbableElements(elementToFocus);
        elementToFocus = tabbables[this._tabPosition] || tabbables.pop() || elementToFocus;
      }
      this._focusElement(elementToFocus);
    } else {
      this._setCurrentItem(e, (currentItem) => {
        this._tabPosition = getTabbableElements(currentItem).indexOf(eventOrigin);
        this._colPosition = this._gridWalker.getColPos();
        this._gridWalker.setColPos(0);
        this._focusCurrentItem();
      });
    }
    e.preventDefault();
  }
  _handleTab(e, eventOrigin) {
    if (this._isEventFromCurrentItem(e)) {
      this._focusElement(e.shiftKey ? this._table._beforeElement : this._table._afterElement);
    } else {
      const tabbables = getTabbableElements(this._table._tableElement);
      if (e.shiftKey && tabbables[0] === eventOrigin) {
        this._focusElement(this._table._beforeElement);
      }
      if (!e.shiftKey && tabbables[tabbables.length - 1] === eventOrigin) {
        this._focusElement(this._table._afterElement);
      }
    }
  }
  _handleArrowUpDown(e, eventOrigin, direction) {
    if (e.shiftKey || e.altKey || e.ctrlKey || e.metaKey || e.defaultPrevented || this._isEventFromCurrentItem(e) || /^(input|textarea)$/i.test(eventOrigin.nodeName)) {
      return false;
    }
    this._setCurrentItem(e, (currentItem) => {
      this._tabPosition = getTabbableElements(currentItem).indexOf(eventOrigin);
      this._gridWalker.setRowPos(this._gridWalker.getRowPos() + direction);
      let elementToFocus = this._gridWalker.getCurrent();
      const tabbables = getTabbableElements(elementToFocus);
      elementToFocus = tabbables[this._tabPosition] || tabbables.pop() || elementToFocus;
      this._focusElement(elementToFocus);
      e.preventDefault();
    });
    return false;
  }
  _handleArrowUp(e, eventOrigin) {
    return this._handleArrowUpDown(e, eventOrigin, -1);
  }
  _handleArrowDown(e, eventOrigin) {
    return this._handleArrowUpDown(e, eventOrigin, 1);
  }
  _onkeydown(e, eventOrigin) {
    var _a;
    if (e.defaultPrevented) {
      return;
    }
    if (!this._isEventFromCurrentItem(e) && this._getNavigationItemsOfGrid().flat().includes(eventOrigin)) {
      this._gridWalker.setCurrent(eventOrigin);
    }
    (_a = this._table._getVirtualizer()) == null ? void 0 : _a._onKeyDown(e);
    if (e.defaultPrevented) {
      return;
    }
    const keydownHandlerName = `_handle${e.code}`;
    const keydownHandler = this[keydownHandlerName];
    if (typeof keydownHandler === "function" && keydownHandler.call(this, e, eventOrigin) === void 0) {
      return;
    }
    if (!this._isEventFromCurrentItem(e)) {
      return;
    }
    if (isLeft(e)) {
      this._gridWalker[this._table.effectiveDir === "rtl" ? "right" : "left"]();
    } else if (isRight(e)) {
      this._gridWalker[this._table.effectiveDir === "rtl" ? "left" : "right"]();
    } else if (isUp(e) || isUpShift(e)) {
      this._gridWalker.up();
    } else if (isDown(e) || isDownShift(e)) {
      this._gridWalker.down();
    } else if (isHome(e)) {
      this._gridWalker.home();
    } else if (isEnd(e)) {
      this._gridWalker.end();
    } else if (isPageUp(e)) {
      this._gridWalker.pageup();
    } else if (isPageDown(e)) {
      this._gridWalker.pagedown();
    } else {
      return;
    }
    this._focusCurrentItem();
    e.preventDefault();
  }
  _onclick(e) {
    var _a;
    const navigationItems = this._getNavigationItemsOfGrid();
    const flatNavigationItems = navigationItems.flat();
    let navigationItem = null;
    let focusableElement = null;
    for (const target of e.composedPath()) {
      if (target.nodeType === Node.ELEMENT_NODE) {
        const element = target;
        if (element.matches(":focus-within")) {
          focusableElement = element;
          break;
        }
        if (flatNavigationItems.includes(element)) {
          navigationItem = element;
          break;
        }
      }
    }
    if (focusableElement && focusableElement !== this._lastFocusedItem) {
      (_a = this._lastFocusedItem) == null ? void 0 : _a.removeAttribute("tabindex");
      this._lastFocusedItem = void 0;
    } else if (navigationItem) {
      this._gridWalker.setCurrent(navigationItem);
      this._gridWalker.setColPos(0);
      this._focusCurrentItem();
    }
  }
  _onfocusin(e, eventOrigin) {
    if (this._ignoreFocusIn) {
      return;
    }
    if (eventOrigin === this._table._beforeElement || eventOrigin === this._table._afterElement) {
      if (this._table.loading) {
        this._table._loadingElement.focus();
      } else {
        this._getNavigationItemsOfGrid();
        this._gridWalker.setColPos(0);
        this._focusCurrentItem();
      }
    } else if (eventOrigin !== this._lastFocusedItem && this._getNavigationItemsOfGrid().flat().includes(eventOrigin)) {
      this._lastFocusedItem = eventOrigin;
    }
  }
  _onKeyDownCapture(e) {
    if (!this._table.loading) {
      return;
    }
    if (isTabNext(e) || isTabPrevious(e)) {
      this._focusElement(e.shiftKey ? this._table._beforeElement : this._table._afterElement);
      e.stopImmediatePropagation();
    }
  }
};
var TableNavigation_default = TableNavigation;

// node_modules/@ui5/webcomponents/dist/types/TableOverflowMode.js
var TableOverflowMode;
(function(TableOverflowMode2) {
  TableOverflowMode2["Scroll"] = "Scroll";
  TableOverflowMode2["Popin"] = "Popin";
})(TableOverflowMode || (TableOverflowMode = {}));
var TableOverflowMode_default = TableOverflowMode;

// node_modules/@ui5/webcomponents/dist/TableDragAndDrop.js
var TableDragAndDrop = class extends TableExtension {
  constructor(table) {
    super();
    this._table = table;
    DragRegistry_default.subscribe(this._table);
  }
  _ondragenter(e) {
    e.preventDefault();
  }
  _ondragleave(e) {
    if (e.relatedTarget instanceof Node && this._table.shadowRoot.contains(e.relatedTarget)) {
      return;
    }
    this._table.dropIndicatorDOM.targetReference = null;
  }
  _ondragover(e) {
    if (!(e.target instanceof HTMLElement)) {
      return;
    }
    const closestPosition = findClosestPosition(this._table.rows, e.clientY, Orientation_default.Vertical);
    if (!closestPosition) {
      this._table.dropIndicatorDOM.targetReference = null;
      return;
    }
    const { targetReference, placement } = handleDragOver_default(e, this._table, closestPosition, closestPosition.element, { crossDnD: true, originalEvent: true });
    this._table.dropIndicatorDOM.targetReference = targetReference;
    this._table.dropIndicatorDOM.placement = placement;
  }
  _ondrop(e) {
    var _a, _b;
    if (!((_a = this._table.dropIndicatorDOM) == null ? void 0 : _a.targetReference) || !((_b = this._table.dropIndicatorDOM) == null ? void 0 : _b.placement)) {
      return;
    }
    handleDrop_default(e, this._table, this._table.dropIndicatorDOM.targetReference, this._table.dropIndicatorDOM.placement);
    this._table.dropIndicatorDOM.targetReference = null;
  }
};

// node_modules/@ui5/webcomponents/dist/Table.js
var __decorate104 = function(decorators, target, key, desc) {
  var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
  if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
  else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
  return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var Table_1;
var Table = Table_1 = class Table2 extends UI5Element_default {
  constructor() {
    super();
    this.overflowMode = "Scroll";
    this.loading = false;
    this.loadingDelay = 1e3;
    this.stickyTop = "0";
    this.rowActionCount = 0;
    this._invalidate = 0;
    this._renderNavigated = false;
    this._events = ["keydown", "keyup", "click", "focusin", "focusout", "dragenter", "dragleave", "dragover", "drop"];
    this._poppedIn = [];
    this._containerWidth = 0;
    this._onResizeBound = this._onResize.bind(this);
    this._onEventBound = this._onEvent.bind(this);
  }
  onEnterDOM() {
    if (this.overflowMode === TableOverflowMode_default.Popin) {
      ResizeHandler_default.register(this, this._onResizeBound);
    }
    this._events.forEach((eventType) => this.addEventListener(eventType, this._onEventBound));
    this.features.forEach((feature) => {
      var _a;
      return (_a = feature.onTableActivate) == null ? void 0 : _a.call(feature, this);
    });
    this._tableNavigation = new TableNavigation_default(this);
    this._tableDragAndDrop = new TableDragAndDrop(this);
  }
  onExitDOM() {
    this._tableNavigation = void 0;
    this._tableDragAndDrop = void 0;
    this._events.forEach((eventType) => this.removeEventListener(eventType, this._onEventBound));
    if (this.overflowMode === TableOverflowMode_default.Popin) {
      ResizeHandler_default.deregister(this, this._onResizeBound);
    }
  }
  onBeforeRendering() {
    this._renderNavigated = this.rows.some((row) => row.navigated);
    if (this.headerRow[0]) {
      this.headerRow[0]._rowActionCount = this.rowActionCount;
    }
    this.rows.forEach((row) => {
      row._renderNavigated = this._renderNavigated;
      row._rowActionCount = this.rowActionCount;
    });
    this.style.setProperty(getScopedVarName("--ui5_grid_sticky_top"), this.stickyTop);
    this._refreshPopinState();
    this.features.forEach((feature) => {
      var _a;
      return (_a = feature.onTableBeforeRendering) == null ? void 0 : _a.call(feature, this);
    });
  }
  onAfterRendering() {
    this.features.forEach((feature) => {
      var _a;
      return (_a = feature.onTableAfterRendering) == null ? void 0 : _a.call(feature, this);
    });
  }
  _findFeature(featureName) {
    return this.features.find((feature) => isFeature(feature, featureName));
  }
  _getSelection() {
    return this._findFeature("TableSelectionBase") || this._findFeature("TableSelection");
  }
  _getVirtualizer() {
    return this._findFeature("TableVirtualizer");
  }
  _getGrowing() {
    return this._findFeature("TableGrowing");
  }
  _onEvent(e) {
    const composedPath = e.composedPath();
    const eventOrigin = composedPath[0];
    const elements = [this._tableNavigation, this._tableDragAndDrop, ...composedPath, ...this.features];
    elements.forEach((element) => {
      if (element instanceof TableExtension || element instanceof HTMLElement && element.localName.includes("ui5-table")) {
        const eventHandlerName = `_on${e.type}`;
        const eventHandler = element[eventHandlerName];
        if (typeof eventHandler === "function") {
          eventHandler.call(element, e, eventOrigin);
        }
      }
    });
  }
  _onResize() {
    const { clientWidth, scrollWidth } = this._tableElement;
    if (scrollWidth > clientWidth) {
      const overflow = scrollWidth - clientWidth;
      const headers = this._getPopinOrderedColumns(false);
      const poppedInWidth = headers.reduce((totalPoppedInWidth, headerCell) => {
        if (totalPoppedInWidth < overflow && !headerCell._popin) {
          const headerWidth = Math.ceil(headerCell.getBoundingClientRect().width);
          totalPoppedInWidth += headerWidth;
          this._setHeaderPopinState(headerCell, true, headerWidth);
        }
        return totalPoppedInWidth;
      }, 0);
      const columnOverflow = poppedInWidth - overflow;
      this._containerWidth = clientWidth - columnOverflow;
    } else {
      const headers = this._getPopinOrderedColumns(true).filter((it) => it._popin);
      headers.every((headerCell) => {
        const underflow = clientWidth - this._containerWidth;
        if (underflow >= headerCell._popinWidth) {
          this._containerWidth += headerCell._popinWidth;
          this._setHeaderPopinState(headerCell, false, 0);
          return true;
        }
        return false;
      });
    }
  }
  _onfocusin(e) {
    if (e.target === this) {
      return;
    }
    scrollElementIntoView(this._scrollContainer, e.target, this._stickyElements, this.effectiveDir === "rtl");
  }
  _onGrow() {
    var _a;
    (_a = this._getGrowing()) == null ? void 0 : _a.loadMore();
  }
  _getPopinOrderedColumns(reverse) {
    let headers = [...this.headerRow[0].cells];
    headers = headers.reverse();
    headers = headers.sort((a, b) => a.importance - b.importance);
    headers.pop();
    if (reverse) {
      headers = headers.reverse();
    }
    return headers;
  }
  /**
   * Refreshes the popin state of the columns.
   * Syncs the popin state of the columns with the popin state of the header cells.
   * This is needed when additional rows are manually added and no resize happens.
   * @private
   */
  _refreshPopinState() {
    var _a;
    (_a = this.headerRow[0]) == null ? void 0 : _a.cells.forEach((header3, index) => {
      this.rows.forEach((row) => {
        const cell = row.cells[index];
        if (cell) {
          cell._popinHidden = header3.popinHidden;
          cell._popin = header3._popin;
        }
      });
    });
  }
  _setHeaderPopinState(headerCell, inPopin, popinWidth) {
    const headerIndex = this.headerRow[0].cells.indexOf(headerCell);
    headerCell._popin = inPopin;
    headerCell._popinWidth = popinWidth;
    this.rows.forEach((row) => {
      row.cells[headerIndex]._popinHidden = headerCell.popinHidden;
      row.cells[headerIndex]._popin = inPopin;
    });
  }
  _isGrowingFeature(feature) {
    return Boolean(feature.loadMore && feature.hasGrowingComponent && isFeature(feature, "TableGrowing"));
  }
  _onRowClick(row) {
    this.fireDecoratorEvent("row-click", { row });
  }
  _onRowActionClick(action) {
    const row = action.parentElement;
    this.fireDecoratorEvent("row-action-click", { action, row });
  }
  get styles() {
    var _a, _b, _c;
    const virtualizer = this._getVirtualizer();
    const headerStyleMap = (_c = (_b = (_a = this.headerRow) == null ? void 0 : _a[0]) == null ? void 0 : _b.cells) == null ? void 0 : _c.reduce((headerStyles, headerCell) => {
      if (headerCell.horizontalAlign !== void 0 && !headerCell._popin) {
        headerStyles[`--horizontal-align-${headerCell._individualSlot}`] = headerCell.horizontalAlign;
      }
      return headerStyles;
    }, {});
    return {
      table: {
        "grid-template-columns": this._gridTemplateColumns,
        "--row-height": virtualizer ? `${virtualizer.rowHeight}px` : "auto",
        ...headerStyleMap
      },
      spacer: {
        "transform": virtualizer == null ? void 0 : virtualizer._getTransform(),
        "will-change": virtualizer && "transform"
      }
    };
  }
  get _gridTemplateColumns() {
    var _a;
    if (!this.headerRow[0]) {
      return;
    }
    const widths = [];
    const visibleHeaderCells = this.headerRow[0]._visibleCells;
    if ((_a = this._getSelection()) == null ? void 0 : _a.isRowSelectorRequired()) {
      widths.push("min-content");
    }
    widths.push(...visibleHeaderCells.map((cell) => {
      const minWidth = cell.minWidth === "auto" ? "3rem" : cell.minWidth;
      if (cell.width === "auto" || cell.width.includes("%") || cell.width.includes("fr") || cell.width.includes("vw")) {
        return `minmax(${minWidth}, ${cell.maxWidth})`;
      }
      return `minmax(${cell.width}, ${cell.width})`;
    }));
    if (this.rowActionCount > 0) {
      widths.push(`calc(var(${getScopedVarName("--_ui5_button_base_min_width")}) * ${this.rowActionCount} + var(${getScopedVarName("--_ui5_table_row_actions_gap")}) * ${this.rowActionCount - 1} + var(${getScopedVarName("--_ui5_table_cell_horizontal_padding")}) * 2)`);
    }
    if (this._renderNavigated) {
      widths.push(`var(${getScopedVarName("--_ui5_table_navigated_cell_width")})`);
    }
    return widths.join(" ");
  }
  get _tableOverflowX() {
    return this.overflowMode === TableOverflowMode_default.Popin ? "clip" : "auto";
  }
  get _tableOverflowY() {
    return "auto";
  }
  get _nodataRow() {
    return this.shadowRoot.getElementById("nodata-row");
  }
  get _beforeElement() {
    return this.shadowRoot.getElementById("before");
  }
  get _afterElement() {
    return this.shadowRoot.getElementById("after");
  }
  get _tableElement() {
    return this.shadowRoot.getElementById("table");
  }
  get _loadingElement() {
    return this.shadowRoot.getElementById("loading");
  }
  get _effectiveNoDataText() {
    return this.noDataText || Table_1.i18nBundle.getText(TABLE_NO_DATA);
  }
  get _ariaLabel() {
    return getEffectiveAriaLabelText(this) || void 0;
  }
  get _ariaRowCount() {
    var _a;
    return ((_a = this._getVirtualizer()) == null ? void 0 : _a.rowCount) || void 0;
  }
  get _ariaMultiSelectable() {
    const selection = this._getSelection();
    return (selection == null ? void 0 : selection.isSelectable()) && this.rows.length ? selection.isMultiSelectable() : void 0;
  }
  get _stickyElements() {
    const stickyRows = this.headerRow.filter((row) => row.sticky);
    const stickyColumns = this.headerRow[0]._stickyCells;
    return [...stickyRows, ...stickyColumns];
  }
  get _scrollContainer() {
    return this._getVirtualizer() ? this._tableElement : findVerticalScrollContainer(this);
  }
  get isTable() {
    return true;
  }
  get dropIndicatorDOM() {
    return this.shadowRoot.querySelector("[ui5-drop-indicator]");
  }
  get _hasRowActions() {
    return this.rowActionCount > 0;
  }
};
__decorate104([
  slot_default({
    type: HTMLElement,
    "default": true,
    invalidateOnChildChange: {
      properties: ["navigated", "position"],
      slots: false
    }
  })
], Table.prototype, "rows", void 0);
__decorate104([
  slot_default({ type: HTMLElement, invalidateOnChildChange: { properties: false, slots: true } })
], Table.prototype, "headerRow", void 0);
__decorate104([
  slot_default()
], Table.prototype, "nodata", void 0);
__decorate104([
  slot_default({ type: HTMLElement, individualSlots: true })
], Table.prototype, "features", void 0);
__decorate104([
  property_default()
], Table.prototype, "accessibleName", void 0);
__decorate104([
  property_default()
], Table.prototype, "accessibleNameRef", void 0);
__decorate104([
  property_default()
], Table.prototype, "noDataText", void 0);
__decorate104([
  property_default()
], Table.prototype, "overflowMode", void 0);
__decorate104([
  property_default({ type: Boolean })
], Table.prototype, "loading", void 0);
__decorate104([
  property_default({ type: Number })
], Table.prototype, "loadingDelay", void 0);
__decorate104([
  property_default()
], Table.prototype, "stickyTop", void 0);
__decorate104([
  property_default({ type: Number })
], Table.prototype, "rowActionCount", void 0);
__decorate104([
  property_default({ type: Number, noAttribute: true })
], Table.prototype, "_invalidate", void 0);
__decorate104([
  property_default({ type: Boolean, noAttribute: true })
], Table.prototype, "_renderNavigated", void 0);
__decorate104([
  i18n_default("@ui5/webcomponents")
], Table, "i18nBundle", void 0);
Table = Table_1 = __decorate104([
  customElement_default({
    tag: "ui5-table",
    renderer: JsxRenderer_default,
    styles: Table_css_default,
    template: TableTemplate,
    fastNavigation: true
  }),
  event_strict_default("row-click", {
    bubbles: false
  }),
  event_strict_default("move-over", {
    cancelable: true,
    bubbles: true
  }),
  event_strict_default("move", {
    bubbles: true
  }),
  event_strict_default("row-action-click", {
    bubbles: false
  })
], Table);
Table.define();

// node_modules/@ui5/webcomponents-react/dist/webComponents/Table/index.js
var Table3 = withWebComponent("ui5-table", ["accessibleName", "accessibleNameRef", "loadingDelay", "noDataText", "overflowMode", "rowActionCount"], ["loading"], ["features", "headerRow", "nodata"], ["move-over", "move", "row-action-click", "row-click"]);
Table3.displayName = "Table";

// node_modules/@ui5/webcomponents-react/dist/webComponents/TableCell/index.js
var TableCell3 = withWebComponent("ui5-table-cell", ["horizontalAlign"], [], [], []);
TableCell3.displayName = "TableCell";

// node_modules/@ui5/webcomponents/dist/types/TableGrowingMode.js
var TableGrowingMode;
(function(TableGrowingMode2) {
  TableGrowingMode2["Button"] = "Button";
  TableGrowingMode2["Scroll"] = "Scroll";
})(TableGrowingMode || (TableGrowingMode = {}));
var TableGrowingMode_default = TableGrowingMode;

// node_modules/@ui5/webcomponents/dist/TableGrowingTemplate.js
function TableGrowingTemplate() {
  return jsxs("div", { id: "growing-button", tabindex: -1, "data-ui5-growing-active": this._activeState, onClick: this.loadMore, onKeyDown: this._onKeydown, onKeyUp: this._onKeyup, onFocusOut: this._onFocusout, role: "button", "aria-labelledby": "growing-text growing-subtext", "aria-describedby": "growing-description", children: [jsx("span", { id: "growing-text", children: this._growingButtonText }), this.growingSubText && jsx("span", { id: "growing-subtext", children: this.growingSubText }), jsx("span", { id: "growing-description", class: "ui5-hidden-text", "aria-hidden": "true", children: this._growingButtonDescription })] });
}

// node_modules/@ui5/webcomponents/dist/generated/themes/TableGrowing.css.js
registerThemePropertiesLoader("@ui5/webcomponents-theming", "sap_horizon", async () => parameters_bundle_css_default);
registerThemePropertiesLoader("@ui5/webcomponents", "sap_horizon", async () => parameters_bundle_css_default2);
var TableGrowing_css_default = `.ui5-hidden-text{position:absolute;clip:rect(1px,1px,1px,1px);user-select:none;left:-1000px;top:-1000px;pointer-events:none;font-size:0}:host{flex-grow:1}#growing-button:focus{outline:var(--sapContent_FocusWidth) var(--sapContent_FocusStyle) var(--sapContent_FocusColor);outline-offset:calc(-1 * var(--sapContent_FocusWidth))}#growing-button{margin:0;padding:0;display:flex;justify-content:center;align-items:center;flex-direction:column;cursor:pointer}@media (hover: hover){#growing-button:hover{background:var(--sapButton_Hover_Background)}}#growing-button:active,#growing-button[data-ui5-growing-active=true]{background:var(--sapList_Active_Background)}#growing-text{padding:1rem 0;font-size:var(--sapFontSize);color:var(--sapButton_TextColor);font-weight:700}#growing-subtext{padding-bottom:1rem;color:var(--sapButton_TextColor)}
`;

// node_modules/@ui5/webcomponents/dist/TableGrowing.js
var __decorate105 = function(decorators, target, key, desc) {
  var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
  if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
  else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
  return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var TableGrowing_1;
var TableGrowing = TableGrowing_1 = class TableGrowing2 extends UI5Element_default {
  constructor() {
    super(...arguments);
    this.type = "Button";
    this._activeState = false;
    this._invalidate = 0;
    this.identifier = "TableGrowing";
    this._renderContent = true;
  }
  onTableActivate(table) {
    this._table = table;
    this._shouldFocusRow = false;
  }
  onTableAfterRendering() {
    var _a, _b;
    if (this._shouldFocusRow) {
      this._shouldFocusRow = false;
      let focusRow = (_a = this._currentLastRow) == null ? void 0 : _a.nextElementSibling;
      if (this.hasGrowingComponent()) {
        focusRow || (focusRow = this.getFocusDomRef());
      }
      focusRow || (focusRow = (_b = this._table) == null ? void 0 : _b.rows[0]);
      focusRow == null ? void 0 : focusRow.focus();
    }
    if (this._renderContent !== this.hasGrowingComponent()) {
      this._invalidate++;
      return;
    }
    if (this._hasScrollToLoad() && !this.hasGrowingComponent() && !this._observer) {
      this._observeTableEnd();
    }
  }
  onExitDOM() {
    var _a;
    this._table = void 0;
    (_a = this._observer) == null ? void 0 : _a.disconnect();
    this._observer = void 0;
    this._currentLastRow = void 0;
  }
  onBeforeRendering() {
    var _a;
    (_a = this._observer) == null ? void 0 : _a.disconnect();
    this._observer = void 0;
    this._currentLastRow = void 0;
    this._renderContent = this.hasGrowingComponent();
    this._invalidateTable();
  }
  hasGrowingComponent() {
    if (this.type === TableGrowingMode_default.Scroll) {
      return !!this._table && this._table._scrollContainer.clientHeight >= this._table._tableElement.scrollHeight;
    }
    return this.type === `${TableGrowingMode_default.Button}`;
  }
  /**
   * An event handler that can be used by the Table to notify the TableGrowing that
   * the Table is growing either by pressing the load more button or by scrolling to the end of the table.
   */
  loadMore() {
    if (this._table && this.hasGrowingComponent()) {
      this._currentLastRow = this._table.rows[this._table.rows.length - 1];
    }
    this._shouldFocusRow = true;
    this.fireDecoratorEvent("load-more");
  }
  _hasScrollToLoad() {
    return this.type === TableGrowingMode_default.Scroll;
  }
  /**
   * Observes the end of the table.
   * @private
   */
  _observeTableEnd() {
    var _a;
    if (!this._table) {
      return;
    }
    const lastElement = (_a = this._table.shadowRoot) == null ? void 0 : _a.querySelector("#table-end-row");
    if (lastElement) {
      this._getIntersectionObserver().observe(lastElement);
    }
  }
  /**
   * Returns the IntersectionObserver instance. If it does not exist, it will be created.
   * The observer will call the loadMore function when the end of the table is reached.
   * @private
   */
  _getIntersectionObserver() {
    if (!this._observer) {
      this._observer = new IntersectionObserver(this._onIntersection.bind(this), { root: document });
    }
    return this._observer;
  }
  _onIntersection(entries) {
    if (entries.some((entry) => entry.isIntersecting)) {
      this.loadMore();
    }
  }
  _invalidateTable() {
    if (!this._table) {
      return;
    }
    this._table._invalidate++;
  }
  /**
   * Handles the keydown event on the growing button.
   *
   * Calls the loadMore function when the Enter and Space keys are pressed.
   * @private
   */
  _onKeydown(e) {
    if (isSpace(e)) {
      e.preventDefault();
      this._activeState = true;
    }
    if (isEnter(e)) {
      this.loadMore();
      this._activeState = true;
    }
  }
  _onKeyup(e) {
    if (isSpace(e)) {
      this.loadMore();
    }
    this._activeState = false;
  }
  _onFocusout() {
    this._activeState = false;
  }
  get _growingButtonText() {
    return this.growingText || TableGrowing_1.i18nBundle.getText(TABLE_MORE);
  }
  get _growingButtonDescription() {
    return TableGrowing_1.i18nBundle.getText(TABLE_MORE_DESCRIPTION);
  }
  get _hasGrowingButton() {
    return this.hasGrowingComponent();
  }
};
__decorate105([
  property_default()
], TableGrowing.prototype, "type", void 0);
__decorate105([
  property_default()
], TableGrowing.prototype, "growingText", void 0);
__decorate105([
  property_default()
], TableGrowing.prototype, "growingSubText", void 0);
__decorate105([
  property_default({ type: Boolean, noAttribute: true })
], TableGrowing.prototype, "_activeState", void 0);
__decorate105([
  property_default({ type: Number, noAttribute: true })
], TableGrowing.prototype, "_invalidate", void 0);
__decorate105([
  i18n_default("@ui5/webcomponents")
], TableGrowing, "i18nBundle", void 0);
TableGrowing = TableGrowing_1 = __decorate105([
  customElement_default({
    tag: "ui5-table-growing",
    renderer: JsxRenderer_default,
    template: TableGrowingTemplate,
    styles: TableGrowing_css_default
  }),
  event_strict_default("load-more", {
    bubbles: true
  })
], TableGrowing);
TableGrowing.define();

// node_modules/@ui5/webcomponents-react/dist/webComponents/TableGrowing/index.js
var TableGrowing3 = withWebComponent("ui5-table-growing", ["growingSubText", "growingText", "type"], [], [], ["load-more"]);
TableGrowing3.displayName = "TableGrowing";

// node_modules/@ui5/webcomponents-base/dist/types/SortOrder.js
var SortOrder;
(function(SortOrder2) {
  SortOrder2["None"] = "None";
  SortOrder2["Ascending"] = "Ascending";
  SortOrder2["Descending"] = "Descending";
})(SortOrder || (SortOrder = {}));
var SortOrder_default = SortOrder;

// node_modules/@ui5/webcomponents-icons/dist/v4/sort-ascending.js
var name54 = "sort-ascending";
var pathData53 = "M82 288h351l15 32H65zm-48 96h446l15 32H17zm366-160H113l16-32h255zm-47-96H161l17-32h158z";
var ltr53 = false;
var accData29 = ICON_SORT_ASCENDING;
var collection54 = "SAP-icons-v4";
var packageName53 = "@ui5/webcomponents-icons";
registerIcon(name54, { pathData: pathData53, ltr: ltr53, accData: accData29, collection: collection54, packageName: packageName53 });

// node_modules/@ui5/webcomponents-icons/dist/v5/sort-ascending.js
var name55 = "sort-ascending";
var pathData54 = "M358 147H154q-11 0-18.5-7t-7.5-18 7.5-18.5T154 96h204q11 0 18.5 7.5T384 122t-7.5 18-18.5 7zm64 128H90q-11 0-18.5-7T64 250t7.5-18.5T90 224h332q11 0 18.5 7.5T448 250t-7.5 18-18.5 7zm64 128H26q-11 0-18.5-7T0 378t7.5-18.5T26 352h460q11 0 18.5 7.5T512 378t-7.5 18-18.5 7z";
var ltr54 = false;
var accData30 = ICON_SORT_ASCENDING;
var collection55 = "SAP-icons-v5";
var packageName54 = "@ui5/webcomponents-icons";
registerIcon(name55, { pathData: pathData54, ltr: ltr54, accData: accData30, collection: collection55, packageName: packageName54 });

// node_modules/@ui5/webcomponents-icons/dist/sort-ascending.js
var sort_ascending_default = "sort-ascending";

// node_modules/@ui5/webcomponents-icons/dist/v4/sort-descending.js
var name56 = "sort-descending";
var pathData55 = "M17 96h478l-15 32H34zm431 96l-15 32H82l-17-32h383zm-335 96h287l-16 32H129zm48 96h192l-16 32H177z";
var ltr55 = false;
var accData31 = ICON_SORT_DESCENDING;
var collection56 = "SAP-icons-v4";
var packageName55 = "@ui5/webcomponents-icons";
registerIcon(name56, { pathData: pathData55, ltr: ltr55, accData: accData31, collection: collection56, packageName: packageName55 });

// node_modules/@ui5/webcomponents-icons/dist/v5/sort-descending.js
var name57 = "sort-descending";
var pathData56 = "M486 96q11 0 18.5 7.5T512 122t-7.5 18-18.5 7H26q-11 0-18.5-7T0 122t7.5-18.5T26 96h460zm-64 128q11 0 18.5 7.5T448 250t-7.5 18-18.5 7H90q-11 0-18.5-7T64 250t7.5-18.5T90 224h332zm-64 128q11 0 18.5 7.5T384 378t-7.5 18-18.5 7H154q-11 0-18.5-7t-7.5-18 7.5-18.5T154 352h204z";
var ltr56 = false;
var accData32 = ICON_SORT_DESCENDING;
var collection57 = "SAP-icons-v5";
var packageName56 = "@ui5/webcomponents-icons";
registerIcon(name57, { pathData: pathData56, ltr: ltr56, accData: accData32, collection: collection57, packageName: packageName56 });

// node_modules/@ui5/webcomponents-icons/dist/sort-descending.js
var sort_descending_default = "sort-descending";

// node_modules/@ui5/webcomponents/dist/TableHeaderCellTemplate.js
function TableHeaderCellTemplate() {
  return jsxs(Fragment, { children: [jsx("slot", { name: "action" }), jsx("slot", {}), sortIcon.call(this)] });
}
function sortIcon() {
  switch (this.sortIndicator) {
    case SortOrder_default.Ascending:
      return jsx(Icon_default, { name: sort_ascending_default });
    case SortOrder_default.Descending:
      return jsx(Icon_default, { name: sort_descending_default });
    default:
      return jsx(Fragment, {});
  }
}

// node_modules/@ui5/webcomponents/dist/generated/themes/TableHeaderCell.css.js
registerThemePropertiesLoader("@ui5/webcomponents-theming", "sap_horizon", async () => parameters_bundle_css_default);
registerThemePropertiesLoader("@ui5/webcomponents", "sap_horizon", async () => parameters_bundle_css_default2);
var TableHeaderCell_css_default = `:host{font-family:var(--sapFontSemiboldDuplexFamily);color:var(--sapList_HeaderTextColor);align-items:center;flex-wrap:nowrap;max-width:100%;gap:.125rem}:host(:empty){padding:0}[ui5-icon]{margin-inline-start:.375rem;width:1rem;height:1rem;flex-shrink:0}::slotted([ui5-label]){color:inherit;font-family:inherit;overflow:hidden}
`;

// node_modules/@ui5/webcomponents/dist/TableHeaderCell.js
var __decorate106 = function(decorators, target, key, desc) {
  var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
  if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
  else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
  return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var TableHeaderCell = class TableHeaderCell2 extends TableCellBase_default {
  constructor() {
    super(...arguments);
    this.width = "auto";
    this.minWidth = "auto";
    this.maxWidth = "auto";
    this.importance = 0;
    this.sortIndicator = "None";
    this.popinHidden = false;
    this._popin = false;
    this.ariaRole = "columnheader";
    this._popinWidth = 0;
  }
  onEnterDOM() {
    super.onEnterDOM();
    this.style.minWidth = this.minWidth;
    this.style.maxWidth = this.maxWidth;
    this.style.width = this.width;
  }
  onBeforeRendering() {
    super.onBeforeRendering();
    if (this._individualSlot) {
      this.style.justifyContent = `var(--horizontal-align-${this._individualSlot})`;
    }
    if (this.sortIndicator !== SortOrder_default.None) {
      this.setAttribute("aria-sort", this.sortIndicator.toLowerCase());
    } else if (this.hasAttribute("aria-sort")) {
      this.removeAttribute("aria-sort");
    }
  }
};
__decorate106([
  property_default()
], TableHeaderCell.prototype, "width", void 0);
__decorate106([
  property_default()
], TableHeaderCell.prototype, "minWidth", void 0);
__decorate106([
  property_default()
], TableHeaderCell.prototype, "maxWidth", void 0);
__decorate106([
  property_default({ type: Number })
], TableHeaderCell.prototype, "importance", void 0);
__decorate106([
  property_default()
], TableHeaderCell.prototype, "popinText", void 0);
__decorate106([
  property_default()
], TableHeaderCell.prototype, "sortIndicator", void 0);
__decorate106([
  property_default({ type: Boolean })
], TableHeaderCell.prototype, "popinHidden", void 0);
__decorate106([
  slot_default()
], TableHeaderCell.prototype, "action", void 0);
__decorate106([
  property_default({ type: Boolean, noAttribute: true })
], TableHeaderCell.prototype, "_popin", void 0);
TableHeaderCell = __decorate106([
  customElement_default({
    tag: "ui5-table-header-cell",
    styles: [TableCellBase_default.styles, TableHeaderCell_css_default],
    template: TableHeaderCellTemplate
  })
], TableHeaderCell);
TableHeaderCell.define();
var TableHeaderCell_default = TableHeaderCell;

// node_modules/@ui5/webcomponents-react/dist/webComponents/TableHeaderCell/index.js
var TableHeaderCell3 = withWebComponent("ui5-table-header-cell", ["horizontalAlign", "importance", "maxWidth", "minWidth", "popinText", "width"], [], [], []);
TableHeaderCell3.displayName = "TableHeaderCell";

// node_modules/@ui5/webcomponents/dist/TableHeaderRowTemplate.js
function TableHeaderRowTemplate() {
  return jsxs(Fragment, { children: [this._hasRowSelector && jsx(TableHeaderCell_default, { id: "selection-cell", "aria-selected": this._isSelected, "aria-label": this._i18nSelection, "data-ui5-table-cell-fixed": true, "data-ui5-table-selection-component": true, children: this._isMultiSelect && jsx(CheckBox_default, { id: "selection-component", tabindex: -1, checked: this._isSelected, onChange: this._onSelectionChange, accessibleName: this._i18nRowSelector }) }), this._visibleCells.map((cell) => jsx("slot", { name: cell._individualSlot }, cell._individualSlot)), this._hasRowActions && jsx(TableHeaderCell_default, { id: "actions-cell", "aria-label": this._i18nRowActions }), this._popinCells.length > 0 && jsx(TableHeaderCell_default, { id: "popin-cell", "aria-label": this._i18nRowPopin, "data-excluded-from-navigation": true })] });
}

// node_modules/@ui5/webcomponents/dist/generated/themes/TableHeaderRow.css.js
registerThemePropertiesLoader("@ui5/webcomponents-theming", "sap_horizon", async () => parameters_bundle_css_default);
registerThemePropertiesLoader("@ui5/webcomponents", "sap_horizon", async () => parameters_bundle_css_default2);
var TableHeaderRow_css_default = `:host{background:var(--sapList_HeaderBackground);border-top:var(--sapList_BorderWidth) solid var(--sapList_BorderColor);border-bottom:var(--sapList_BorderWidth) solid var(--sapList_HeaderBorderColor)}:host([hidden]){display:none}:host([sticky]){position:sticky;top:var(--ui5-v2-8-0_grid_sticky_top, 0);z-index:2}#popin-cell{padding:0;width:0}
`;

// node_modules/@ui5/webcomponents/dist/TableHeaderRow.js
var __decorate107 = function(decorators, target, key, desc) {
  var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
  if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
  else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
  return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var TableHeaderRow = (
  /**
   * Example custom event.
   * Please keep in mind that all public events should be documented in the API Reference as shown below.
   *
   * @public
   */
  class TableHeaderRow2 extends TableRowBase_default {
    constructor() {
      super(...arguments);
      this.sticky = false;
    }
    onEnterDOM() {
      super.onEnterDOM();
      this.setAttribute("aria-roledescription", TableRowBase_default.i18nBundle.getText(TABLE_COLUMN_HEADER_ROW));
    }
    onBeforeRendering() {
      super.onBeforeRendering();
      if (this._table) {
        this.style.top = this._table.stickyTop;
      }
    }
    isHeaderRow() {
      return true;
    }
    get _hasRowActions() {
      return this._table ? this._table._hasRowActions : false;
    }
    get _isSelectable() {
      return this._isMultiSelect;
    }
    get _i18nSelection() {
      return TableRowBase_default.i18nBundle.getText(TABLE_SELECTION);
    }
    get _i18nRowPopin() {
      return TableRowBase_default.i18nBundle.getText(TABLE_ROW_POPIN);
    }
    get _i18nRowActions() {
      return TableRowBase_default.i18nBundle.getText(TABLE_ROW_ACTIONS);
    }
  }
);
__decorate107([
  slot_default({
    type: HTMLElement,
    "default": true,
    invalidateOnChildChange: {
      properties: ["width", "_popin", "horizontalAlign", "popinHidden"],
      slots: false
    },
    individualSlots: true
  })
], TableHeaderRow.prototype, "cells", void 0);
__decorate107([
  property_default({ type: Boolean })
], TableHeaderRow.prototype, "sticky", void 0);
TableHeaderRow = __decorate107([
  customElement_default({
    tag: "ui5-table-header-row",
    languageAware: true,
    styles: [TableRowBase_default.styles, TableHeaderRow_css_default],
    template: TableHeaderRowTemplate
  })
  /**
   * Example custom event.
   * Please keep in mind that all public events should be documented in the API Reference as shown below.
   *
   * @public
   */
], TableHeaderRow);
TableHeaderRow.define();

// node_modules/@ui5/webcomponents-react/dist/webComponents/TableHeaderRow/index.js
var TableHeaderRow3 = withWebComponent("ui5-table-header-row", [], ["sticky"], [], []);
TableHeaderRow3.displayName = "TableHeaderRow";

// node_modules/@ui5/webcomponents-react/dist/webComponents/TableRow/index.js
var TableRow3 = withWebComponent("ui5-table-row", ["position", "rowKey"], ["interactive", "movable", "navigated"], ["actions"], []);
TableRow3.displayName = "TableRow";

// node_modules/@ui5/webcomponents/dist/TableRowActionBaseTemplate.js
function TableRowActionBaseTemplate() {
  return jsx(Fragment, { children: this.invisible ? jsx("div", {}) : this._isInteractive ? jsx(Button_default, { icon: this._icon, tooltip: this._text, onClick: this._onActionClick, design: "Transparent" }) : jsx(Icon_default, { name: this._icon, accessibleName: this._text, showTooltip: true, design: "NonInteractive" }) });
}

// node_modules/@ui5/webcomponents/dist/generated/themes/TableRowActionBase.css.js
registerThemePropertiesLoader("@ui5/webcomponents-theming", "sap_horizon", async () => parameters_bundle_css_default);
registerThemePropertiesLoader("@ui5/webcomponents", "sap_horizon", async () => parameters_bundle_css_default2);
var TableRowActionBase_css_default = `:host([invisible]){display:block;width:var(--_ui5-v2-8-0_button_base_min_width)}:host([_fixed]){margin-inline-start:auto}[ui5-icon]{display:flex;width:var(--_ui5-v2-8-0_button_base_min_width);height:.75rem}
`;

// node_modules/@ui5/webcomponents/dist/TableRowActionBase.js
var __decorate108 = function(decorators, target, key, desc) {
  var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
  if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
  else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
  return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var MenuConstructor;
var MenuItemConstructor;
var TableRowActionBase = class TableRowActionBase2 extends UI5Element_default {
  constructor() {
    super(...arguments);
    this.invisible = false;
  }
  static async showMenu(actions3, opener2) {
    if (!MenuConstructor) {
      [MenuConstructor, MenuItemConstructor] = await Promise.all([
        import("./Menu-N6QHZXHI.js").then((module) => module.default),
        import("./MenuItem-KB5M3D7Y.js").then((module) => module.default)
      ]);
    }
    if (!this._menu || !this._menu.isConnected) {
      this._menu = new MenuConstructor();
      this._menu.addEventListener("item-click", (e) => {
        const menuItem = e.detail.item;
        const rowAction = this._menuItems.get(menuItem);
        rowAction._onActionClick();
      });
      document.body.append(this._menu);
    }
    const menuItems = actions3.map((action) => {
      const menuItem = new MenuItemConstructor();
      menuItem.icon = action._icon;
      menuItem.text = action._text;
      menuItem.disabled = !action._isInteractive;
      this._menuItems.set(menuItem, action);
      return menuItem;
    });
    this._menu.replaceChildren(...menuItems);
    this._menu.opener = opener2;
    this._menu.open = true;
  }
  isFixedAction() {
    return false;
  }
  onEnterDOM() {
    this.toggleAttribute("_fixed", this.isFixedAction());
  }
  _onActionClick() {
    const row = this.parentElement;
    const table = row.parentElement;
    table._onRowActionClick(this);
  }
  get _text() {
    return this.getRenderInfo().text;
  }
  get _icon() {
    return this.getRenderInfo().icon;
  }
  get _isInteractive() {
    return this.getRenderInfo().interactive;
  }
};
TableRowActionBase._menuItems = /* @__PURE__ */ new WeakMap();
__decorate108([
  property_default({ type: Boolean })
], TableRowActionBase.prototype, "invisible", void 0);
TableRowActionBase = __decorate108([
  customElement_default({
    renderer: JsxRenderer_default,
    styles: TableRowActionBase_css_default,
    template: TableRowActionBaseTemplate
  })
], TableRowActionBase);
var TableRowActionBase_default = TableRowActionBase;

// node_modules/@ui5/webcomponents/dist/TableRowAction.js
var __decorate109 = function(decorators, target, key, desc) {
  var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
  if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
  else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
  return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var TableRowAction = class TableRowAction2 extends TableRowActionBase_default {
  constructor() {
    super(...arguments);
    this.icon = "";
    this.text = "";
  }
  getRenderInfo() {
    return {
      text: this.text,
      icon: this.icon,
      interactive: true
    };
  }
};
__decorate109([
  property_default()
], TableRowAction.prototype, "icon", void 0);
__decorate109([
  property_default()
], TableRowAction.prototype, "text", void 0);
TableRowAction = __decorate109([
  customElement_default({ tag: "ui5-table-row-action" })
], TableRowAction);
TableRowAction.define();

// node_modules/@ui5/webcomponents-react/dist/webComponents/TableRowAction/index.js
var TableRowAction3 = withWebComponent("ui5-table-row-action", ["icon", "text"], ["disabled", "invisible"], [], []);
TableRowAction3.displayName = "TableRowAction";

// node_modules/@ui5/webcomponents/dist/TableRowActionNavigation.js
var __decorate110 = function(decorators, target, key, desc) {
  var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
  if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
  else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
  return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var TableRowActionNavigation_1;
var TableRowActionNavigation = TableRowActionNavigation_1 = class TableRowActionNavigation2 extends TableRowActionBase_default {
  constructor() {
    super(...arguments);
    this.interactive = false;
  }
  getRenderInfo() {
    return {
      text: this._i18nNavigation,
      icon: "navigation-right-arrow",
      interactive: this.interactive
    };
  }
  isFixedAction() {
    return true;
  }
  get _i18nNavigation() {
    return TableRowActionNavigation_1.i18nBundle.getText(TABLE_NAVIGATION);
  }
};
__decorate110([
  property_default({ type: Boolean })
], TableRowActionNavigation.prototype, "interactive", void 0);
__decorate110([
  i18n_default("@ui5/webcomponents")
], TableRowActionNavigation, "i18nBundle", void 0);
TableRowActionNavigation = TableRowActionNavigation_1 = __decorate110([
  customElement_default({ tag: "ui5-table-row-action-navigation" })
], TableRowActionNavigation);
TableRowActionNavigation.define();

// node_modules/@ui5/webcomponents-react/dist/webComponents/TableRowActionNavigation/index.js
var TableRowActionNavigation3 = withWebComponent("ui5-table-row-action-navigation", [], ["interactive", "invisible"], [], []);
TableRowActionNavigation3.displayName = "TableRowActionNavigation";

// node_modules/@ui5/webcomponents/dist/types/TableSelectionMode.js
var TableSelectionMode;
(function(TableSelectionMode2) {
  TableSelectionMode2["None"] = "None";
  TableSelectionMode2["Single"] = "Single";
  TableSelectionMode2["Multiple"] = "Multiple";
})(TableSelectionMode || (TableSelectionMode = {}));
var TableSelectionMode_default = TableSelectionMode;

// node_modules/@ui5/webcomponents/dist/TableSelection.js
var __decorate111 = function(decorators, target, key, desc) {
  var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
  if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
  else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
  return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var TableSelection = class TableSelection2 extends UI5Element_default {
  constructor() {
    super(...arguments);
    this.mode = "Multiple";
    this.selected = "";
    this.identifier = "TableSelection";
    this._rowsLength = 0;
  }
  onTableActivate(table) {
    this._table = table;
    this._invalidateTableAndRows();
  }
  onExitDOM() {
    this.mode = TableSelectionMode_default.None;
    this._invalidateTableAndRows();
    this._table = void 0;
  }
  onBeforeRendering() {
    this._invalidateTableAndRows();
  }
  onTableBeforeRendering() {
    if (this.isMultiSelectable() && this._table && this._table.headerRow[0] && this._rowsLength !== this._table.rows.length) {
      this._rowsLength = this._table.rows.length;
      this._table.headerRow[0]._invalidate++;
    }
  }
  isSelectable() {
    return this.mode !== TableSelectionMode_default.None;
  }
  isMultiSelectable() {
    return this.mode === TableSelectionMode_default.Multiple;
  }
  isRowSelectorRequired() {
    return this.mode !== TableSelectionMode_default.None;
  }
  getRowKey(row) {
    return row.rowKey || "";
  }
  isSelected(row) {
    if (!this._table || !this.isSelectable()) {
      return false;
    }
    if (row.isHeaderRow()) {
      return this.areAllRowsSelected();
    }
    const rowKey = this.getRowKey(row);
    return this.selectedAsArray.includes(rowKey);
  }
  hasSelectedRow() {
    if (!this._table || !this.isSelectable()) {
      return false;
    }
    const selectedArray = this.selectedAsArray;
    return this._table.rows.some((row) => {
      const rowKey = this.getRowKey(row);
      return selectedArray.includes(rowKey);
    });
  }
  areAllRowsSelected() {
    if (!this._table || !this._table.rows.length || this.mode !== TableSelectionMode_default.Multiple) {
      return false;
    }
    const selectedArray = this.selectedAsArray;
    return this._table.rows.every((row) => {
      const rowKey = this.getRowKey(row);
      return selectedArray.includes(rowKey);
    });
  }
  setSelected(row, selected, fireEvent = false) {
    var _a;
    if (((_a = this._rangeSelection) == null ? void 0 : _a.isMouse) && this._rangeSelection.shiftPressed) {
      return;
    }
    if (row.isHeaderRow()) {
      this._selectHeaderRow(selected);
    } else {
      this._selectRow(row, selected);
    }
    if (fireEvent) {
      this.fireDecoratorEvent("change");
    }
  }
  get selectedAsArray() {
    return this.selected.split(" ").filter(String);
  }
  set selectedAsArray(selectedArray) {
    this.selected = selectedArray.filter(String).join(" ");
  }
  get selectedAsSet() {
    return new Set(this.selectedAsArray);
  }
  set selectedAsSet(selectedSet) {
    this.selectedAsArray = [...selectedSet];
  }
  _selectRow(row, selected) {
    const rowKey = this.getRowKey(row);
    if (this.mode === TableSelectionMode_default.Multiple) {
      const selectedSet = this.selectedAsSet;
      selectedSet[selected ? "add" : "delete"](rowKey);
      this.selectedAsSet = selectedSet;
    } else {
      this.selected = selected ? rowKey : "";
    }
  }
  _selectHeaderRow(selected) {
    const selectedSet = this.selectedAsSet;
    this._table.rows.forEach((row) => {
      const rowKey = this.getRowKey(row);
      selectedSet[selected ? "add" : "delete"](rowKey);
    });
    this.selectedAsSet = selectedSet;
  }
  _invalidateTableAndRows() {
    if (!this._table) {
      return;
    }
    if (!this.isSelectable()) {
      this.selected = "";
    } else if (!this.isMultiSelectable()) {
      this.selected = this.selectedAsArray.shift() || "";
    }
    this._table._invalidate++;
    this._table.headerRow[0]._invalidate++;
    this._table.rows.forEach((row) => row._invalidate++);
  }
  _onkeydown(e) {
    var _a;
    if (!this.isMultiSelectable() || !this._table || !e.shiftKey) {
      return;
    }
    const focusedElement = getActiveElement_default();
    if (!((focusedElement == null ? void 0 : focusedElement.hasAttribute("ui5-table-row")) || ((_a = this._rangeSelection) == null ? void 0 : _a.isMouse) || (focusedElement == null ? void 0 : focusedElement.hasAttribute("ui5-growing-row")))) {
      this._stopRangeSelection();
      return;
    }
    if (!this._rangeSelection) {
      this._startRangeSelection(focusedElement);
    } else if (e.key === "ArrowUp" || e.key === "ArrowDown") {
      const change = isUpShift(e) ? -1 : 1;
      this._handleRangeSelection(focusedElement, change);
    }
    if (this._rangeSelection) {
      this._rangeSelection.shiftPressed = e.shiftKey;
    }
  }
  _onkeyup(e, eventOrigin) {
    if (!this._table) {
      return;
    }
    if (!eventOrigin.hasAttribute("ui5-table-row") || !this._rangeSelection || !e.shiftKey) {
      this._stopRangeSelection();
    }
    if (this._rangeSelection) {
      this._rangeSelection.shiftPressed = e.shiftKey;
    }
  }
  _onclick(e) {
    var _a, _b, _c;
    if (!this._table) {
      return;
    }
    if (isHeaderSelector(e)) {
      this._stopRangeSelection();
      return;
    }
    if (!isSelectionCheckbox(e)) {
      this._stopRangeSelection();
      return;
    }
    const row = findRowInPath(e.composedPath());
    if (e.shiftKey && ((_a = this._rangeSelection) == null ? void 0 : _a.isMouse)) {
      const startRow = this._rangeSelection.rows[0];
      const startIndex = this._table.rows.indexOf(startRow);
      const endIndex = this._table.rows.indexOf(row);
      (_c = (_b = row.shadowRoot) == null ? void 0 : _b.querySelector("#selection-component")) == null ? void 0 : _c.toggleAttribute("checked", true);
      if (startIndex === -1 || endIndex === -1 || row.rowKey === startRow.rowKey || row.rowKey === this._rangeSelection.rows[this._rangeSelection.rows.length - 1].rowKey) {
        return;
      }
      const change = endIndex - startIndex;
      this._handleRangeSelection(row, change);
    } else if (row) {
      this._startRangeSelection(row, true);
    }
  }
  /**
   * Start the range selection and initialises the range selection state
   * @param row starting row
   * @private
   */
  _startRangeSelection(row, isMouse = false) {
    const selected = this.isSelected(row);
    if (isMouse && !selected) {
      return;
    }
    this._rangeSelection = {
      selected,
      isUp: null,
      rows: [row],
      isMouse,
      shiftPressed: false
    };
  }
  /**
   * Handles the range selection
   * @param targetRow row that is currently focused
   * @param change indicates direction
   * @private
   */
  _handleRangeSelection(targetRow, change) {
    var _a, _b;
    if (!this._rangeSelection) {
      return;
    }
    const isUp2 = change > 0;
    (_a = this._rangeSelection).isUp ?? (_a.isUp = isUp2);
    const shouldReverseSelection = isUp2 !== this._rangeSelection.isUp && !this._rangeSelection.isMouse;
    let selectionChanged = shouldReverseSelection && this.isSelected(targetRow);
    if (shouldReverseSelection) {
      this._reverseRangeSelection();
    } else {
      const rowIndex = this._table.rows.indexOf(targetRow);
      const [startIndex, endIndex] = [rowIndex, rowIndex - change].sort((a, b) => a - b);
      selectionChanged = ((_b = this._table) == null ? void 0 : _b.rows.slice(startIndex, endIndex + 1).reduce((changed, row) => {
        var _a2, _b2;
        const isRowNotInSelection = !((_a2 = this._rangeSelection) == null ? void 0 : _a2.rows.includes(row));
        const isRowSelectionDifferent = this.isSelected(row) !== this._rangeSelection.selected;
        if (isRowNotInSelection) {
          (_b2 = this._rangeSelection) == null ? void 0 : _b2.rows.push(row);
        }
        this._selectRow(row, this._rangeSelection.selected);
        return changed || isRowSelectionDifferent;
      }, selectionChanged)) || false;
    }
    selectionChanged && this.fireDecoratorEvent("change");
  }
  _stopRangeSelection() {
    this._rangeSelection = null;
  }
  _reverseRangeSelection() {
    var _a, _b;
    const row = (_a = this._rangeSelection) == null ? void 0 : _a.rows.pop();
    if (row) {
      this._selectRow(row, false);
    }
    if (((_b = this._rangeSelection) == null ? void 0 : _b.rows.length) === 1) {
      this._rangeSelection.isUp = null;
    }
  }
};
__decorate111([
  property_default()
], TableSelection.prototype, "mode", void 0);
__decorate111([
  property_default()
], TableSelection.prototype, "selected", void 0);
TableSelection = __decorate111([
  customElement_default({ tag: "ui5-table-selection" }),
  event_strict_default("change", {
    bubbles: true
  })
], TableSelection);
TableSelection.define();

// node_modules/@ui5/webcomponents-react/dist/webComponents/TableSelection/index.js
var TableSelection3 = withWebComponent("ui5-table-selection", ["mode", "selected"], [], [], ["change"]);
TableSelection3.displayName = "TableSelection";

// node_modules/@ui5/webcomponents/dist/TableVirtualizer.js
var __decorate112 = function(decorators, target, key, desc) {
  var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
  if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
  else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
  return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var TabBlocking;
(function(TabBlocking2) {
  TabBlocking2[TabBlocking2["None"] = 0] = "None";
  TabBlocking2[TabBlocking2["Next"] = 1] = "Next";
  TabBlocking2[TabBlocking2["Previous"] = 2] = "Previous";
  TabBlocking2[TabBlocking2["Released"] = 4] = "Released";
  TabBlocking2[TabBlocking2["NextReleased"] = 5] = "NextReleased";
  TabBlocking2[TabBlocking2["PreviousReleased"] = 6] = "PreviousReleased";
})(TabBlocking || (TabBlocking = {}));
var TableVirtualizer = class TableVirtualizer2 extends UI5Element_default {
  constructor() {
    super();
    this.rowHeight = 45;
    this.rowCount = 100;
    this.extraRows = 0;
    this.identifier = "TableVirtualizer";
    this._lastRowPosition = 0;
    this._firstRowPosition = 0;
    this._visibleRowCount = 0;
    this._tabBlockingState = TabBlocking.None;
    this._onScrollBound = throttle3(this._onScroll.bind(this));
    this._onRowInvalidateBound = this._onRowInvalidate.bind(this);
  }
  onAfterRendering() {
    this._table && this._table._invalidate++;
  }
  onTableAfterRendering(table) {
    if (!this._table) {
      this._table = table;
      this._scrollContainer.addEventListener("scroll", this._onScrollBound, { passive: true });
      this._updateRowsHeight();
      this._onScroll();
    } else {
      this._updateRowsHeight();
    }
    if (this._tabBlockingState & TabBlocking.Released) {
      const tabBlockingRow = this._table.rows.at(this._tabBlockingState & TabBlocking.Next ? -1 : 0);
      const tabForwardingElement = getTabbableElements(tabBlockingRow).at(this._tabBlockingState & TabBlocking.Next ? 0 : -1);
      this._tabBlockingState = TabBlocking.None;
      (tabForwardingElement || tabBlockingRow).focus();
    }
  }
  onExitDOM() {
    if (this._table) {
      this._scrollContainer.removeEventListener("scroll", this._onScrollBound);
      this._table = void 0;
    }
  }
  /**
   * Resets the virtualizer to its initial state and triggers the `range-change` event.
   * @public
   */
  reset() {
    this._lastRowPosition = -1;
    this._firstRowPosition = -1;
    if (this._table) {
      if (this._scrollContainer.scrollTop > 0) {
        this._scrollContainer.scrollTop = 0;
      } else {
        this._onScroll();
      }
    }
  }
  get _scrollContainer() {
    return this._table._tableElement;
  }
  get _rowsContainer() {
    return this._table.shadowRoot.getElementById("rows");
  }
  _onScroll() {
    const headerRow = this._table.headerRow[0];
    const headerHeight = headerRow.offsetHeight;
    let scrollTop = this._scrollContainer.scrollTop;
    let scrollableHeight = this._scrollContainer.clientHeight;
    if (headerRow.sticky) {
      scrollableHeight = Math.max(0, scrollableHeight - headerHeight);
    } else {
      scrollTop = Math.max(0, scrollTop - headerHeight);
    }
    this._visibleRowCount = Math.ceil(scrollableHeight / this.rowHeight);
    let firstRowPosition = Math.floor(scrollTop / this.rowHeight) - this.extraRows;
    firstRowPosition = Math.max(0, firstRowPosition);
    let lastRowPosition = Math.max(0, firstRowPosition + this._visibleRowCount + 2 * this.extraRows);
    lastRowPosition = Math.min(lastRowPosition, this.rowCount);
    if (this._firstRowPosition === firstRowPosition && this._lastRowPosition === lastRowPosition) {
      return;
    }
    this._lastRowPosition = lastRowPosition;
    this._firstRowPosition = firstRowPosition;
    this.fireDecoratorEvent("range-change", {
      first: firstRowPosition,
      last: lastRowPosition
    });
  }
  _updateRowsHeight() {
    const rowsHeight = this.rowCount * this.rowHeight;
    this._rowsContainer.style.height = `${rowsHeight}px`;
  }
  _getTransform() {
    if (!this._table) {
      return;
    }
    const firstRow = this._table.rows[0];
    if (firstRow && firstRow.position > 0) {
      const transform = firstRow.position * this.rowHeight;
      return `translateY(${transform}px)`;
    }
  }
  _onRowInvalidate(invalidationInfo) {
    if (invalidationInfo.name === "position") {
      invalidationInfo.target.detachInvalidate(this._onRowInvalidateBound);
      this._tabBlockingState |= TabBlocking.Released;
    }
  }
  _onKeyDown(e) {
    if (!this._table) {
      return;
    }
    let scrollTopChange = 0;
    const rows = this._table.rows;
    const firstRow = rows[0];
    const lastRow = rows[rows.length - 1];
    const hasDataBeforeFirstRow = firstRow.position !== 0;
    const hasDataAfterLastRow = lastRow.position !== this.rowCount - 1;
    const tableNavigation = this._table._tableNavigation;
    const activeElement = getActiveElement_default();
    if (isTabNext(e) && hasDataAfterLastRow && getTabbableElements(this._rowsContainer).pop() === activeElement) {
      this._tabBlockingState = TabBlocking.Next;
      lastRow.attachInvalidate(this._onRowInvalidateBound);
      scrollTopChange = this.rowHeight;
    } else if (isTabPrevious(e) && hasDataBeforeFirstRow && getTabbableElements(this._rowsContainer).shift() === activeElement) {
      this._tabBlockingState = TabBlocking.Previous;
      firstRow.attachInvalidate(this._onRowInvalidateBound);
      scrollTopChange = this.rowHeight * -1;
    } else if (hasDataAfterLastRow && tableNavigation._getNavigationItemsOfRow(lastRow).includes(activeElement)) {
      if (isDown(e) || isDownShift(e)) {
        scrollTopChange = this.rowHeight;
      } else if (isPageDown(e)) {
        scrollTopChange = this._visibleRowCount * this.rowHeight;
      } else if (isEnd(e) && activeElement === lastRow) {
        scrollTopChange = this.rowCount * this.rowHeight;
      }
    } else if (hasDataBeforeFirstRow && tableNavigation._getNavigationItemsOfRow(firstRow).includes(activeElement)) {
      if (isUp(e) || isUpShift(e)) {
        scrollTopChange = this.rowHeight * -1;
      } else if (isPageUp(e)) {
        scrollTopChange = this._visibleRowCount * this.rowHeight * -1;
      } else if (isHome(e) && activeElement === firstRow) {
        scrollTopChange = this.rowCount * this.rowHeight * -1;
      }
    }
    if (scrollTopChange) {
      const scrollTop = this._table.scrollTop;
      this._scrollContainer.scrollTop += scrollTopChange;
      if (this._scrollContainer.scrollTop !== scrollTop) {
        e.preventDefault();
      }
    }
  }
};
__decorate112([
  property_default({ type: Number })
], TableVirtualizer.prototype, "rowHeight", void 0);
__decorate112([
  property_default({ type: Number })
], TableVirtualizer.prototype, "rowCount", void 0);
__decorate112([
  property_default({ type: Number })
], TableVirtualizer.prototype, "extraRows", void 0);
TableVirtualizer = __decorate112([
  customElement_default({ tag: "ui5-table-virtualizer" }),
  event_strict_default("range-change")
], TableVirtualizer);
TableVirtualizer.define();

// node_modules/@ui5/webcomponents-react/dist/webComponents/TableVirtualizer/index.js
var TableVirtualizer3 = withWebComponent("ui5-table-virtualizer", ["extraRows", "rowCount", "rowHeight"], [], [], ["range-change"]);
TableVirtualizer3.displayName = "TableVirtualizer";

// node_modules/@ui5/webcomponents/dist/TabSeparatorInStripTemplate.js
function TabSeparatorInStripTemplate() {
  return jsx("div", { id: this._id, role: "separator", class: "ui5-tc__separator", ref: this.captureRef.bind(this) });
}

// node_modules/@ui5/webcomponents/dist/TabSeparatorInOverflowTemplate.js
function TabSeparatorInOverflowTemplate() {
  return jsx(ListItemCustom_default, {
    id: this._id,
    // role="separator"
    class: "ui5-tc__separator",
    disabled: true,
    style: this._forcedStyleInOverflow,
    ref: this.captureRef.bind(this)
  });
}

// node_modules/@ui5/webcomponents/dist/generated/themes/TabSeparatorInStrip.css.js
registerThemePropertiesLoader("@ui5/webcomponents-theming", "sap_horizon", async () => parameters_bundle_css_default);
registerThemePropertiesLoader("@ui5/webcomponents", "sap_horizon", async () => parameters_bundle_css_default2);
var TabSeparatorInStrip_css_default = `div.ui5-tc__separator{position:relative;width:.5625rem}div.ui5-tc__separator:before{content:" ";position:absolute;width:.0625rem;left:.25rem;top:.5rem;bottom:.5rem;background:var(--sapGroup_TitleBorderColor)}
`;

// node_modules/@ui5/webcomponents/dist/generated/themes/TabSeparatorInOverflow.css.js
registerThemePropertiesLoader("@ui5/webcomponents-theming", "sap_horizon", async () => parameters_bundle_css_default);
registerThemePropertiesLoader("@ui5/webcomponents", "sap_horizon", async () => parameters_bundle_css_default2);
var TabSeparatorInOverflow_css_default = `[ui5-li-custom].ui5-tc__separator{min-height:.25rem;border-bottom:.0625rem solid var(--sapGroup_TitleBorderColor);margin-inline-start:calc(var(--_ui5-v2-8-0-tab-indentation-level) * .5rem);margin-inline-end:.5rem}[ui5-list]>[ui5-li-custom].ui5-tc__separator:first-child{min-height:.5rem}
`;

// node_modules/@ui5/webcomponents/dist/TabSeparator.js
var __decorate113 = function(decorators, target, key, desc) {
  var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
  if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
  else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
  return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var TabSeparator_1;
var TabSeparator = TabSeparator_1 = class TabSeparator2 extends UI5Element_default {
  static get stripTemplate() {
    return TabSeparatorInStripTemplate;
  }
  static get overflowTemplate() {
    return TabSeparatorInOverflowTemplate;
  }
  get isSeparator() {
    return true;
  }
  receiveStripInfo({ getElementInStrip }) {
    this._getElementInStrip = getElementInStrip;
  }
  receiveOverflowInfo({ style }) {
    this._forcedStyleInOverflow = style;
  }
  /**
   * Returns the DOM reference of the separator that is placed in the header.
   *
   * **Note:** Separators, placed in the `items` slot of other tabs are not shown in the header. Calling this method on such separators will return `undefined`.
   * @public
   */
  getDomRefInStrip() {
    var _a;
    return (_a = this._getElementInStrip) == null ? void 0 : _a.call(this);
  }
  get stableDomRef() {
    return this.getAttribute("stable-dom-ref") || `${this._id}-stable-dom-ref`;
  }
  get stripPresentation() {
    return executeTemplate_default(TabSeparator_1.stripTemplate, this);
  }
  get overflowPresentation() {
    return executeTemplate_default(TabSeparator_1.overflowTemplate, this);
  }
  captureRef(ref) {
    if (ref) {
      ref.realTabReference = this;
    }
  }
};
TabSeparator = TabSeparator_1 = __decorate113([
  customElement_default({
    tag: "ui5-tab-separator",
    renderer: JsxRenderer_default
  })
], TabSeparator);
TabSeparator.define();
TabContainer_default.registerTabStyles(TabSeparatorInStrip_css_default);
TabContainer_default.registerTabStyles(TabSeparatorInOverflow_css_default);

// node_modules/@ui5/webcomponents-react/dist/webComponents/TabSeparator/index.js
var TabSeparator3 = withWebComponent("ui5-tab-separator", [], [], [], []);
TabSeparator3.displayName = "TabSeparator";

// node_modules/@ui5/webcomponents-react/dist/webComponents/Tag/index.js
var Tag3 = withWebComponent("ui5-tag", ["colorScheme", "design", "size", "wrappingType"], ["hideStateIcon", "interactive"], ["icon"], ["click"]);
Tag3.displayName = "Tag";

// node_modules/@ui5/webcomponents-react/dist/webComponents/Text/index.js
var Text3 = withWebComponent("ui5-text", ["emptyIndicatorMode", "maxLines"], [], [], []);
Text3.displayName = "Text";

// node_modules/@ui5/webcomponents/dist/TextAreaPopoverTemplate.js
var IconPerValueState = {
  Negative: error_default,
  Critical: alert_default,
  Positive: sys_enter_2_default,
  Information: information_default
};
function TextAreaPopoverTemplate() {
  return jsx(Fragment, { children: this.displayValueStateMessagePopover && jsx(Popover_default, { preventFocusRestore: true, hideArrow: true, preventInitialFocus: true, class: "ui5-valuestatemessage-popover", style: { "max-width": `${this._width}px` }, placement: "Bottom", horizontalAlign: this._valueStatePopoverHorizontalAlign, children: jsxs("div", { slot: "header", class: {
    "ui5-valuestatemessage-root": true,
    ...this.classes.valueStateMsg
  }, children: [jsx(Icon_default, { class: "ui5-input-value-state-message-icon", name: valueStateIcon2.call(this) }), valueStateMessage5.call(this)] }) }) });
}
function valueStateMessage5() {
  return this.hasCustomValueState ? jsx("slot", { name: "valueStateMessage" }) : this.valueStateDefaultText;
}
function valueStateIcon2() {
  return this.valueState !== ValueState_default.None ? IconPerValueState[this.valueState] : "";
}

// node_modules/@ui5/webcomponents/dist/TextAreaTemplate.js
function TextAreaTemplate() {
  return jsxs(Fragment, { children: [jsxs("div", { class: this.classes.root, onFocusIn: this._onfocusin, onFocusOut: this._onfocusout, children: [jsxs("div", { class: "ui5-textarea-wrapper", children: [this.growing && jsx("div", { id: `${this._id}-mirror`, class: "ui5-textarea-mirror", "aria-hidden": "true", children: this._mirrorText.map((mirrorText) => {
    return jsxs(Fragment, { children: [mirrorText.text, jsx("br", {})] });
  }) }), jsx("textarea", { id: `${this._id}-inner`, class: "ui5-textarea-inner", part: "textarea", placeholder: this.placeholder, disabled: this.disabled, readonly: this.readonly, "aria-label": this.ariaLabelText, "aria-describedby": this.ariaDescribedBy, "aria-invalid": this._ariaInvalid, "aria-required": this.required, maxlength: this._exceededTextProps.calcedMaxLength, value: this.value, "data-sap-focus-ref": true, onInput: this._oninput, onChange: this._onchange, onKeyUp: this._onkeyup, onKeyDown: this._onkeydown, onSelect: this._onselect, onScroll: this._onscroll })] }), afterTextarea.call(this), this.showExceededText && jsx("span", { class: "ui5-textarea-exceeded-text", children: this._exceededTextProps.exceededText }), this.hasValueState && jsx("span", { id: `${this._id}-valueStateDesc`, class: "ui5-hidden-text", children: this.ariaValueStateHiddenText })] }), TextAreaPopoverTemplate.call(this)] });
}
function afterTextarea() {
}

// node_modules/@ui5/webcomponents/dist/generated/themes/TextArea.css.js
registerThemePropertiesLoader("@ui5/webcomponents-theming", "sap_horizon", async () => parameters_bundle_css_default);
registerThemePropertiesLoader("@ui5/webcomponents", "sap_horizon", async () => parameters_bundle_css_default2);
var TextArea_css_default = `:host{vertical-align:middle}.ui5-hidden-text{position:absolute;clip:rect(1px,1px,1px,1px);user-select:none;left:-1000px;top:-1000px;pointer-events:none;font-size:0}:host(:not([hidden])){display:inline-block}:host{width:100%;min-width:6rem;color:var(--sapField_TextColor);min-height:var(--_ui5-v2-8-0_textarea_min_height);font-size:var(--sapFontSize);font-family:"72override",var(--sapFontFamily);font-style:normal;box-sizing:border-box;line-height:var(--_ui5-v2-8-0_textarea_line_height);margin:var(--_ui5-v2-8-0_textarea_margin)}:host([value-state][disabled]) .ui5-textarea-wrapper,:host(:not([value-state]):not([readonly]):not([focused])) .ui5-textarea-wrapper,:host([readonly][disabled]) .ui5-textarea-wrapper,:host([value-state="None"]:not([readonly]):not([disabled]):not([focused])) .ui5-textarea-wrapper{background:var(--sapField_BackgroundStyle);background-color:var(--sapField_Background)}:host(:not([value-state]):not([readonly]):not([disabled]):hover) .ui5-textarea-wrapper,:host([value-state="None"]:not([readonly]):not([disabled]):hover) .ui5-textarea-wrapper{background:var(--sapField_Hover_BackgroundStyle);background-color:var(--sapField_Hover_Background);border:var(--_ui5-v2-8-0_textarea_hover_border)}:host(:not([value-state]):not([readonly]):not([disabled]):not([focused]):hover) .ui5-textarea-wrapper,:host([value-state="None"]:not([readonly]):not([disabled]):not([focused]):hover) .ui5-textarea-wrapper{box-shadow:var(--sapField_Hover_Shadow)}.ui5-textarea-root{width:100%;height:inherit;min-height:var(--_ui5-v2-8-0_textarea_min_height);display:inline-flex;vertical-align:top;outline:none;box-sizing:border-box;border-radius:inherit;border-color:inherit;position:relative}.ui5-textarea-wrapper{position:relative;box-sizing:border-box;width:100%;border-bottom:none;display:flex;height:100%;background-color:var(--sapField_Background);border-color:var(--sapField_BorderColor);border-radius:var(--sapField_BorderCornerRadius);border-width:var(--sapField_BorderWidth);border-style:var(--sapField_BorderStyle);padding:var(--_ui5-v2-8-0_textarea_wrapper_padding);outline:none}:host([disabled]) .ui5-textarea-wrapper{opacity:var(--_ui5-v2-8-0_textarea_disabled_opacity);cursor:default;pointer-events:none}:host(:not([readonly])) .ui5-textarea-wrapper,:host([readonly][disabled]) .ui5-textarea-wrapper{box-shadow:var(--sapField_Shadow)}:host([value-state]) .ui5-textarea-wrapper{border-color:inherit}:host([focused]) .ui5-textarea-wrapper{background-color:var(--sapField_Focus_Background);background-image:none;box-shadow:none}:host([focused]) .ui5-textarea-wrapper:after{content:var(--_ui5-v2-8-0_textarea_focus_pseudo_element_content);position:absolute;pointer-events:none;z-index:2;border:var(--sapContent_FocusWidth) var(--sapContent_FocusStyle) var(--_ui5-v2-8-0_textarea_focus_outline_color);border-radius:var(--_ui5-v2-8-0_textarea_focus_border_radius);top:var(--_ui5-v2-8-0_textarea_focus_offset);bottom:var(--_ui5-v2-8-0_textarea_focus_offset);left:var(--_ui5-v2-8-0_textarea_focus_offset);right:var(--_ui5-v2-8-0_textarea_focus_offset)}:host([focused][readonly]) .ui5-textarea-wrapper:after{top:var(--_ui5-v2-8-0_textarea_readonly_focus_offset);bottom:var(--_ui5-v2-8-0_textarea_readonly_focus_offset);left:var(--_ui5-v2-8-0_textarea_readonly_focus_offset);right:var(--_ui5-v2-8-0_textarea_readonly_focus_offset)}:host([focused][value-state="Negative"]:not([disabled])) .ui5-textarea-wrapper:after,:host([focused][value-state="Critical"]:not([disabled])) .ui5-textarea-wrapper:after,:host([focused][value-state="Information"]:not([disabled])) .ui5-textarea-wrapper:after{top:var(--_ui5-v2-8-0_textarea_value_state_focus_offset);bottom:var(--_ui5-v2-8-0_textarea_value_state_focus_offset);left:var(--_ui5-v2-8-0_textarea_value_state_focus_offset);right:var(--_ui5-v2-8-0_textarea_value_state_focus_offset)}.ui5-textarea-inner{border:none;box-sizing:border-box;width:100%;margin:0;padding:var(--_ui5-v2-8-0_textarea_padding_top) var(--_ui5-v2-8-0_textarea_padding_right_and_left) var(--_ui5-v2-8-0_textarea_padding_bottom);color:inherit;font-size:inherit;font-family:inherit;font-style:inherit;-webkit-appearance:none;-moz-appearance:textfield;overflow:auto;resize:none;line-height:inherit;letter-spacing:inherit;word-spacing:inherit;background:transparent;outline:none}:host([growing]) .ui5-textarea-inner{box-sizing:border-box;height:100%;position:absolute;top:0;left:0}.ui5-textarea-mirror{box-sizing:border-box;line-height:var(--_ui5-v2-8-0_textarea_line_height);visibility:hidden;width:100%;max-height:94vh;min-height:calc((var(--_textarea_rows) * var(--_ui5-v2-8-0_textarea_line_height)) * var(--sapFontSize) + var(--_ui5-v2-8-0_textarea_padding_top) + var(--_ui5-v2-8-0_textarea_padding_bottom));word-break:break-all;padding-top:var(--_ui5-v2-8-0_textarea_padding_top);padding-bottom:var(--_ui5-v2-8-0_textarea_padding_bottom);font-size:var(--sapFontSize);font-family:"72override",var(--sapFontFamily);white-space:pre-wrap;overflow-y:auto}:host([style*="height"]) .ui5-textarea-root,:host([growing][style*="height"]) .ui5-textarea-wrapper{height:inherit;min-height:var(--_ui5-v2-8-0_textarea_min_height)}:host([rows]) .ui5-textarea-inner,:host([rows]) .ui5-textarea-mirror{min-height:calc((var(--_textarea_rows) * var(--_ui5-v2-8-0_textarea_line_height)) * var(--sapFontSize) + var(--_ui5-v2-8-0_textarea_padding_top) + var(--_ui5-v2-8-0_textarea_padding_bottom))}:host:not([rows]) .ui5-textarea-inner{min-height:calc(2 * var(--_ui5-v2-8-0_textarea_line_height) * var(--sapFontSize) + var(--_ui5-v2-8-0_textarea_padding_top) + var(--_ui5-v2-8-0_textarea_padding_bottom))}:host([growing]):not([growing-max-rows="0"]) .ui5-textarea-inner{max-height:100%}:host([growing-max-rows]:not([growing-max-rows="0"])) .ui5-textarea-mirror{max-height:calc((var(--_textarea_growing_max_rows) * var(--_ui5-v2-8-0_textarea_line_height)) * var(--sapFontSize) + var(--_ui5-v2-8-0_textarea_padding_top) + var(--_ui5-v2-8-0_textarea_padding_bottom))}:host([rows="1"]) .ui5-textarea-inner{min-height:calc(var(--_ui5-v2-8-0_textarea_line_height) * var(--sapFontSize) + var(--_ui5-v2-8-0_textarea_padding_top) + var(--_ui5-v2-8-0_textarea_padding_bottom))}:host([growing-max-rows="1"]) .ui5-textarea-inner,:host([growing-max-rows="1"]) .ui5-textarea-mirror{max-height:calc(var(--_ui5-v2-8-0_textarea_line_height) * var(--sapFontSize) + var(--_ui5-v2-8-0_textarea_padding_top) + var(--_ui5-v2-8-0_textarea_padding_bottom));min-height:calc(var(--_ui5-v2-8-0_textarea_line_height) * var(--sapFontSize) + var(--_ui5-v2-8-0_textarea_padding_top) + var(--_ui5-v2-8-0_textarea_padding_bottom))}:host([rows="1"][growing-max-rows]) .ui5-textarea-inner,:host([rows="1"][growing-max-rows]) .ui5-textarea-mirror{min-height:calc(var(--_ui5-v2-8-0_textarea_line_height) * var(--sapFontSize) + var(--_ui5-v2-8-0_textarea_padding_top) + var(--_ui5-v2-8-0_textarea_padding_bottom));max-height:calc((var(--_textarea_growing_max_rows) * var(--_ui5-v2-8-0_textarea_line_height)) * var(--sapFontSize) + var(--_ui5-v2-8-0_textarea_padding_top) + var(--_ui5-v2-8-0_textarea_padding_bottom))}:host([value-state="Negative"]) .ui5-textarea-mirror,:host([value-state="Critical"]) .ui5-textarea-mirror{padding-top:var(--_ui5-v2-8-0_textarea_padding_top_error_warning);padding-bottom:var(--_ui5-v2-8-0_textarea_padding_bottom_error_warning);min-height:calc(var(--_textarea_rows) * var(--_ui5-v2-8-0_textarea_line_height) * var(--sapFontSize) + var(--_ui5-v2-8-0_textarea_padding_top_error_warning) + var(--_ui5-v2-8-0_textarea_padding_bottom_error_warning))}:host([growing-max-rows="1"][value-state="Negative"]) .ui5-textarea-inner,:host([growing-max-rows="1"][value-state="Negative"]) .ui5-textarea-mirror :host([growing-max-rows="1"][value-state="Critical"]) .ui5-textarea-inner,:host([growing-max-rows="1"][value-state="Critical"]) .ui5-textarea-mirror{max-height:var(--_ui5-v2-8-0_textarea_line_height) * var(--sapFontSize) + var(--_ui5-v2-8-0_textarea_padding_top_error_warning) + var(--_ui5-v2-8-0_textarea_padding_bottom_error_warning);min-height:var(--_ui5-v2-8-0_textarea_line_height) * var(--sapFontSize) + var(--_ui5-v2-8-0_textarea_padding_top_error_warning) + var(--_ui5-v2-8-0_textarea_padding_bottom_error_warning)}:host([value-state="Information"]) .ui5-textarea-mirror{padding-top:var(--_ui5-v2-8-0_textarea_padding_top_information);padding-bottom:var(--_ui5-v2-8-0_textarea_padding_bottom_information);min-height:calc(var(--_textarea_rows) * var(--_ui5-v2-8-0_textarea_line_height) * var(--sapFontSize) + var(--_ui5-v2-8-0_textarea_padding_top_information) + var(--_ui5-v2-8-0_textarea_padding_bottom_information))}:host([growing-max-rows="1"][value-state="Information"]) .ui5-textarea-inner,:host([growing-max-rows="1"][value-state="Information"]) .ui5-textarea-mirror{max-height:var(--_ui5-v2-8-0_textarea_line_height) * var(--sapFontSize) + var(--_ui5-v2-8-0_textarea_padding_top__ui5_textarea_padding_top_information) + var(--_ui5-v2-8-0_textarea_padding_bottom__ui5_textarea_padding_top_information);min-height:var(--_ui5-v2-8-0_textarea_line_height) * var(--sapFontSize) + var(--_ui5-v2-8-0_textarea_padding_top_error_warning) + var(--_ui5-v2-8-0_textarea_padding_bottom_information)}:host([readonly]:not([disabled])){border-color:var(--sapField_ReadOnly_BorderColor)}:host([readonly]:not([disabled])) .ui5-textarea-inner{padding:var(--_ui5-v2-8-0_textarea_padding_top_readonly) var(--_ui5-v2-8-0_textarea_padding_right_and_left_readonly) var(--_ui5-v2-8-0_textarea_padding_bottom_readonly)}:host([readonly]:not([disabled])) .ui5-textarea-root .ui5-textarea-wrapper{background-color:var(--sapField_ReadOnly_Background);border-color:var(--sapField_ReadOnly_BorderColor);border-style:var(--_ui5-v2-8-0_textarea_readonly_border_style)}:host([show-exceeded-text]) .ui5-textarea-root{flex-direction:column}.ui5-textarea-inner::-webkit-input-placeholder{font-weight:400;font-style:var(--_ui5-v2-8-0_textarea_placeholder_font_style);color:var(--sapField_PlaceholderTextColor)}.ui5-textarea-inner::-moz-placeholder{font-weight:400;font-style:var(--_ui5-v2-8-0_textarea_placeholder_font_style);color:var(--sapField_PlaceholderTextColor)}.ui5-textarea-inner:-moz-placeholder{font-weight:400;font-style:var(--_ui5-v2-8-0_textarea_placeholder_font_style);color:var(--sapField_PlaceholderTextColor)}:host([value-state="Negative"]) .ui5-textarea-inner::-webkit-input-placeholder{font-weight:var(--_ui5-v2-8-0_textarea_value_state_error_warning_placeholder_font_weight);font-style:var(--_ui5-v2-8-0_textarea_error_placeholder_font_style);color:var(--_ui5-v2-8-0_textarea_error_placeholder_color)}:host([value-state="Negative"]) .ui5-textarea-inner::-moz-placeholder{font-weight:var(--_ui5-v2-8-0_textarea_value_state_error_warning_placeholder_font_weight);font-style:var(--_ui5-v2-8-0_textarea_error_placeholder_font_style);color:var(--_ui5-v2-8-0_textarea_error_placeholder_color)}:host([value-state="Critical"]) .ui5-textarea-inner::-moz-placeholder{font-weight:var(--_ui5-v2-8-0_textarea_value_state_error_warning_placeholder_font_weight);font-style:var(--_ui5-v2-8-0_textarea_error_placeholder_font_style);color:var(--sapField_PlaceholderTextColor)}:host([value-state="Critical"]) .ui5-textarea-inner::-webkit-input-placeholder{font-weight:var(--_ui5-v2-8-0_textarea_value_state_error_warning_placeholder_font_weight);font-style:var(--_ui5-v2-8-0_textarea_error_placeholder_font_style);color:var(--sapField_PlaceholderTextColor)}:host([value-state="Negative"]:not([readonly]):not([disabled])) .ui5-textarea-wrapper{background:var(--sapField_InvalidBackgroundStyle);background-color:var(--sapField_InvalidBackground);border-color:var(--sapField_InvalidColor);box-shadow:var(--sapField_InvalidShadow)}:host([value-state="Negative"][focused]:not([readonly]):not([disabled])) .ui5-textarea-wrapper{background-color:var(--_ui5-v2-8-0_textarea_focused_value_state_error_background);border-color:var(--sapField_InvalidColor)}:host([value-state="Negative"][focused]:not([readonly]):not([disabled])) .ui5-textarea-wrapper:after{border-color:var(--_ui5-v2-8-0_textarea_focused_value_state_error_focus_outline_color)}:host([value-state="Negative"]:not([readonly]):not([focused]):not([disabled]):hover) .ui5-textarea-wrapper{background-color:var(--_ui5-v2-8-0_textarea_error_hover_background_color);box-shadow:var(--sapField_Hover_InvalidShadow)}:host([value-state="Negative"]:not([readonly]):not([disabled])) .ui5-textarea-inner,:host([value-state="Critical"]:not([readonly]):not([disabled])) .ui5-textarea-inner{font-style:var(--_ui5-v2-8-0_textarea_error_warning_font_style);font-weight:var(--_ui5-v2-8-0_textarea_error_warning_font_weight);padding:var(--_ui5-v2-8-0_textarea_padding_top_error_warning) var(--_ui5-v2-8-0_textarea_padding_right_and_left_error_warning) var(--_ui5-v2-8-0_textarea_padding_bottom_error_warning)}:host([value-state="Negative"]:not([readonly]):not([disabled])) .ui5-textarea-wrapper,:host([value-state="Critical"]:not([readonly]):not([disabled])) .ui5-textarea-wrapper{border-style:var(--_ui5-v2-8-0_textarea_error_warning_border_style);border-width:var(--_ui5-v2-8-0_textarea_state_border_width);padding:var(--_ui5-v2-8-0_textarea_warning_error_wrapper_padding)}:host([value-state="Negative"]:not([readonly]):not([disabled])) .ui5-textarea-inner,:host([value-state="Critical"]:not([readonly]):not([disabled])) .ui5-textarea-inner,:host([value-state="Information"]:not([readonly]):not([disabled])) .ui5-textarea-inner{border-style:none}:host([value-state="Critical"]:not([readonly]):not([disabled])) .ui5-textarea-wrapper{background:var(--sapField_WarningBackgroundStyle);background-color:var(--sapField_WarningBackground);border-color:var(--sapField_WarningColor);box-shadow:var(--sapField_WarningShadow)}:host([value-state="Critical"][focused]:not([readonly])) .ui5-textarea-wrapper{background-color:var(--_ui5-v2-8-0_textarea_focused_value_state_warning_background);border-color:var(--sapField_WarningColor)}:host([value-state="Critical"][focused]:not([readonly])) .ui5-textarea-wrapper:after{border-color:var(--_ui5-v2-8-0_textarea_focused_value_state_warning_focus_outline_color)}:host([value-state="Critical"]:not([readonly]):not([disabled]):not([focused]):hover) .ui5-textarea-wrapper{background-color:var(--sapField_Hover_Background);box-shadow:var(--sapField_Hover_WarningShadow)}:host([value-state="Positive"]:not([readonly]):not([disabled])) .ui5-textarea-wrapper{background:var(--sapField_SuccessBackgroundStyle);background-color:var(--sapField_SuccessBackground);border-color:var(--sapField_SuccessColor);border-width:var(--sapField_BorderWidth);box-shadow:var(--sapField_SuccessShadow);padding:var(--_ui5-v2-8-0_textarea_success_wrapper_padding)}:host([value-state="Positive"][focused]:not([readonly])) .ui5-textarea-wrapper{background-color:var(--_ui5-v2-8-0_textarea_focused_value_state_success_background);border-color:var(--sapField_SuccessColor)}:host([value-state="Positive"][focused]:not([readonly])) .ui5-textarea-wrapper:after{border-color:var(--_ui5-v2-8-0_textarea_focused_value_state_success_focus_outline_color)}:host([value-state="Positive"]:not([readonly]):not([disabled]):not([focused]):hover) .ui5-textarea-wrapper{background-color:var(--sapField_Hover_Background);box-shadow:var(--sapField_Hover_SuccessShadow)}:host([value-state][value-state="Positive"]) .ui5-textarea-inner{border-radius:var(--sapField_BorderCornerRadius)}:host([value-state="Information"]:not([readonly]):not([disabled])) .ui5-textarea-inner{padding:var(--_ui5-v2-8-0_textarea_padding_top_information) var(--_ui5-v2-8-0_textarea_padding_right_and_left_information) var(--_ui5-v2-8-0_textarea_padding_bottom_information)}:host([value-state="Information"]:not([readonly]):not([disabled])) .ui5-textarea-wrapper{background:var(--sapField_InformationBackgroundStyle);background-color:var(--sapField_InformationBackground);border-color:var(--sapField_InformationColor);box-shadow:var(--sapField_InformationShadow);padding:var(--_ui5-v2-8-0_textarea_information_wrapper_padding);border-width:var(--_ui5-v2-8-0_textarea_information_border_width);border-style:var(--_ui5-v2-8-0_textarea_error_warning_border_style)}:host([value-state="Information"][focused]:not([readonly])) .ui5-textarea-wrapper{background-color:var(--_ui5-v2-8-0_textarea_focused_value_state_information_background);border-color:var(--sapField_InformationColor)}:host([value-state="Information"]:not([readonly]):not([disabled]):not([focused]):hover) .ui5-textarea-wrapper{background-color:var(--sapField_Hover_Background);box-shadow:var(--sapField_Hover_InformationShadow)}.ui5-textarea-exceeded-text{align-self:flex-end;padding:.125rem .125rem .5rem;color:var(--sapContent_LabelColor);font-family:"72override",var(--sapFontFamily);font-size:var(--sapFontSmallSize)}:host([readonly]) .ui5-textarea-exceeded-text,:host([disabled]) .ui5-textarea-exceeded-text{display:none}:host .ui5-content-custom-scrollbars ::-webkit-scrollbar{border-top-right-radius:var(--sapField_BorderCornerRadius);border-bottom-right-radius:var(--sapField_BorderCornerRadius)}:host([value-state="Negative"]) .ui5-content-custom-scrollbars ::-webkit-scrollbar{background-color:var(--sapScrollBar_TrackColor)}:host([value-state="Critical"]) .ui5-content-custom-scrollbars ::-webkit-scrollbar{background-color:var(--sapScrollBar_TrackColor)}:host([value-state="Information"]) .ui5-content-custom-scrollbars ::-webkit-scrollbar{background-color:var(--sapScrollBar_TrackColor)}:host([value-state="Positive"]) .ui5-content-custom-scrollbars ::-webkit-scrollbar{background-color:var(--sapScrollBar_TrackColor)}:host([focused]) .ui5-content-custom-scrollbars ::-webkit-scrollbar{background-image:none}
`;

// node_modules/@ui5/webcomponents/dist/TextArea.js
var __decorate114 = function(decorators, target, key, desc) {
  var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
  if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
  else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
  return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var TextArea_1;
var TextArea = TextArea_1 = class TextArea2 extends UI5Element_default {
  get formValidityMessage() {
    return TextArea_1.i18nBundle.getText(FORM_TEXTFIELD_REQUIRED);
  }
  get formValidity() {
    return { valueMissing: this.required && !this.value };
  }
  async formElementAnchor() {
    return this.getFocusDomRefAsync();
  }
  get formFormattedValue() {
    return this.value;
  }
  constructor() {
    super();
    this.value = "";
    this.disabled = false;
    this.readonly = false;
    this.required = false;
    this.valueState = "None";
    this.rows = 0;
    this.showExceededText = false;
    this.growing = false;
    this.growingMaxRows = 0;
    this.focused = false;
    this.exceeding = false;
    this._mirrorText = [];
    this._firstRendering = true;
    this._openValueStateMsgPopover = false;
    this._fnOnResize = this._onResize.bind(this);
    this.previousValue = "";
  }
  onEnterDOM() {
    ResizeHandler_default.register(this, this._fnOnResize);
  }
  onExitDOM() {
    ResizeHandler_default.deregister(this, this._fnOnResize);
  }
  onBeforeRendering() {
    if (!this.value) {
      this.value = "";
    }
    this._exceededTextProps = this._calcExceededText();
    this._mirrorText = this._tokenizeText(this.value);
    this.exceeding = !!this._exceededTextProps.leftCharactersCount && this._exceededTextProps.leftCharactersCount < 0;
    this._setCSSParams();
  }
  onAfterRendering() {
    const nativeTextArea = this.getInputDomRef();
    if (this.rows === 1) {
      nativeTextArea.setAttribute("rows", "1");
    } else {
      nativeTextArea.removeAttribute("rows");
    }
    this.toggleValueStateMessage(this.openValueStateMsgPopover);
    this._firstRendering = false;
  }
  getInputDomRef() {
    return this.getDomRef().querySelector("textarea");
  }
  _onkeydown(e) {
    this._keyDown = true;
    if (isEscape(e)) {
      const nativeTextArea = this.getInputDomRef();
      this.value = this.previousValue;
      nativeTextArea.value = this.value;
      this.fireDecoratorEvent("input");
    }
  }
  _onkeyup() {
    this._keyDown = false;
  }
  _onfocusin() {
    this.focused = true;
    this._openValueStateMsgPopover = true;
    this.previousValue = this.getInputDomRef().value;
  }
  _onfocusout(e) {
    const eTarget = e.relatedTarget;
    const focusedOutToValueStateMessage = eTarget && this.contains(eTarget);
    this.focused = false;
    if (!focusedOutToValueStateMessage) {
      this._openValueStateMsgPopover = false;
    }
  }
  _onchange() {
    this.fireDecoratorEvent("change");
  }
  _onselect() {
    this.fireDecoratorEvent("select");
  }
  _onscroll() {
    this.fireDecoratorEvent("scroll");
  }
  _oninput(e) {
    const nativeTextArea = this.getInputDomRef();
    if (e.target === nativeTextArea) {
      e.stopImmediatePropagation();
    }
    this.value = nativeTextArea.value;
    const valueLength = this.value.length;
    if (e.inputType === "insertFromPaste" && this.maxlength && valueLength > this.maxlength) {
      nativeTextArea.setSelectionRange(this.maxlength, valueLength);
    }
    this.fireDecoratorEvent("input");
    this.fireDecoratorEvent("value-changed");
  }
  _onResize() {
    if (this.displayValueStateMessagePopover) {
      this._width = this.offsetWidth;
    }
  }
  _setCSSParams() {
    this.style.setProperty("--_textarea_rows", this.rows ? String(this.rows) : "2");
    this.style.setProperty("--_textarea_growing_max_rows", String(this.growingMaxRows));
  }
  toggleValueStateMessage(toggle) {
    if (toggle) {
      this.openPopover();
    } else {
      this.closePopover();
    }
  }
  openPopover() {
    this.valueStatePopover = this._getPopover();
    if (this.valueStatePopover) {
      this.valueStatePopover.opener = this.shadowRoot.querySelector(".ui5-textarea-root .ui5-textarea-wrapper");
      this.valueStatePopover.open = true;
    }
  }
  closePopover() {
    this.valueStatePopover = this._getPopover();
    if (this.valueStatePopover) {
      this.valueStatePopover.open = false;
    }
  }
  _getPopover() {
    return this.shadowRoot.querySelector("[ui5-popover]");
  }
  _tokenizeText(value) {
    const tokenizedText = value.replace(/&/gm, "&amp;").replace(/"/gm, "&quot;").replace(/'/gm, "&apos;").replace(/</gm, "<").replace(/>/gm, ">").split("\n");
    if (tokenizedText.length < this.rows) {
      return this._mapTokenizedTextToObject([...tokenizedText, ...Array(this.rows - tokenizedText.length).fill("")]);
    }
    return this._mapTokenizedTextToObject(tokenizedText);
  }
  _mapTokenizedTextToObject(tokenizedText) {
    return tokenizedText.map((token, index) => {
      return {
        text: token,
        last: index === tokenizedText.length - 1
      };
    });
  }
  _calcExceededText() {
    let calcedMaxLength, exceededText, leftCharactersCount;
    if (this.showExceededText) {
      const maxLength = this.maxlength;
      if (maxLength !== null && maxLength !== void 0) {
        leftCharactersCount = maxLength - this.value.length;
        if (leftCharactersCount >= 0) {
          exceededText = TextArea_1.i18nBundle.getText(TEXTAREA_CHARACTERS_LEFT, leftCharactersCount);
        } else {
          exceededText = TextArea_1.i18nBundle.getText(TEXTAREA_CHARACTERS_EXCEEDED, Math.abs(leftCharactersCount));
        }
      }
    } else {
      calcedMaxLength = this.maxlength;
    }
    return {
      exceededText,
      leftCharactersCount,
      calcedMaxLength
    };
  }
  get classes() {
    return {
      root: {
        "ui5-textarea-root": true,
        "ui5-content-custom-scrollbars": !!getEffectiveScrollbarStyle_default()
      },
      valueStateMsg: {
        "ui5-valuestatemessage-header": true,
        "ui5-valuestatemessage--error": this.valueState === ValueState_default.Negative,
        "ui5-valuestatemessage--warning": this.valueState === ValueState_default.Critical,
        "ui5-valuestatemessage--information": this.valueState === ValueState_default.Information
      }
    };
  }
  get tabIndex() {
    return this.disabled ? -1 : 0;
  }
  get ariaLabelText() {
    const effectiveAriaLabelText = getEffectiveAriaLabelText(this) || getAssociatedLabelForTexts(this);
    if (this.showExceededText) {
      if (effectiveAriaLabelText) {
        return effectiveAriaLabelText.concat(" ", this._exceededTextProps.exceededText);
      }
      return this._exceededTextProps.exceededText;
    }
    return effectiveAriaLabelText;
  }
  get ariaDescribedBy() {
    return this.hasValueState ? `${this._id}-valueStateDesc` : void 0;
  }
  get ariaValueStateHiddenText() {
    if (!this.hasValueState) {
      return;
    }
    if (this.valueState === ValueState_default.None) {
      return;
    }
    if (this.hasCustomValueState) {
      return `${this.valueStateTypeMappings[this.valueState]}`.concat(" ", this.valueStateMessage.map((el) => el.textContent).join(" "));
    }
    return `${this.valueStateTypeMappings[this.valueState]} ${this.valueStateDefaultText}`;
  }
  get valueStateDefaultText() {
    if (this.valueState !== ValueState_default.None) {
      return this.valueStateTextMappings[this.valueState];
    }
    return "";
  }
  get _ariaInvalid() {
    return this.valueState === ValueState_default.Negative ? "true" : void 0;
  }
  get openValueStateMsgPopover() {
    return !this._firstRendering && this._openValueStateMsgPopover && this.displayValueStateMessagePopover;
  }
  get displayValueStateMessagePopover() {
    return !this.readonly && (this.hasCustomValueState || this.hasValueState);
  }
  get hasCustomValueState() {
    return !!this.valueStateMessage.length && this.hasValueState;
  }
  get hasValueState() {
    return this.valueState === ValueState_default.Negative || this.valueState === ValueState_default.Critical || this.valueState === ValueState_default.Information;
  }
  get _valueStatePopoverHorizontalAlign() {
    return this.effectiveDir !== "rtl" ? "Start" : "End";
  }
  get valueStateTextMappings() {
    return {
      "Positive": TextArea_1.i18nBundle.getText(VALUE_STATE_SUCCESS),
      "Information": TextArea_1.i18nBundle.getText(VALUE_STATE_INFORMATION),
      "Negative": TextArea_1.i18nBundle.getText(VALUE_STATE_ERROR),
      "Critical": TextArea_1.i18nBundle.getText(VALUE_STATE_WARNING)
    };
  }
  get valueStateTypeMappings() {
    return {
      "Positive": TextArea_1.i18nBundle.getText(VALUE_STATE_TYPE_SUCCESS),
      "Information": TextArea_1.i18nBundle.getText(VALUE_STATE_TYPE_INFORMATION),
      "Negative": TextArea_1.i18nBundle.getText(VALUE_STATE_TYPE_ERROR),
      "Critical": TextArea_1.i18nBundle.getText(VALUE_STATE_TYPE_WARNING)
    };
  }
};
__decorate114([
  property_default()
], TextArea.prototype, "value", void 0);
__decorate114([
  property_default({ type: Boolean })
], TextArea.prototype, "disabled", void 0);
__decorate114([
  property_default({ type: Boolean })
], TextArea.prototype, "readonly", void 0);
__decorate114([
  property_default({ type: Boolean })
], TextArea.prototype, "required", void 0);
__decorate114([
  property_default()
], TextArea.prototype, "placeholder", void 0);
__decorate114([
  property_default()
], TextArea.prototype, "valueState", void 0);
__decorate114([
  property_default({ type: Number })
], TextArea.prototype, "rows", void 0);
__decorate114([
  property_default({ type: Number })
], TextArea.prototype, "maxlength", void 0);
__decorate114([
  property_default({ type: Boolean })
], TextArea.prototype, "showExceededText", void 0);
__decorate114([
  property_default({ type: Boolean })
], TextArea.prototype, "growing", void 0);
__decorate114([
  property_default({ type: Number })
], TextArea.prototype, "growingMaxRows", void 0);
__decorate114([
  property_default()
], TextArea.prototype, "name", void 0);
__decorate114([
  property_default()
], TextArea.prototype, "accessibleName", void 0);
__decorate114([
  property_default()
], TextArea.prototype, "accessibleNameRef", void 0);
__decorate114([
  property_default({ type: Boolean })
], TextArea.prototype, "focused", void 0);
__decorate114([
  property_default({ type: Boolean })
], TextArea.prototype, "exceeding", void 0);
__decorate114([
  property_default({ type: Array })
], TextArea.prototype, "_mirrorText", void 0);
__decorate114([
  property_default({ noAttribute: true })
], TextArea.prototype, "_maxHeight", void 0);
__decorate114([
  property_default({ type: Number })
], TextArea.prototype, "_width", void 0);
__decorate114([
  slot_default()
], TextArea.prototype, "valueStateMessage", void 0);
__decorate114([
  i18n_default("@ui5/webcomponents")
], TextArea, "i18nBundle", void 0);
TextArea = TextArea_1 = __decorate114([
  customElement_default({
    tag: "ui5-textarea",
    formAssociated: true,
    languageAware: true,
    styles: [
      TextArea_css_default,
      ValueStateMessage_css_default,
      getEffectiveScrollbarStyle_default()
    ],
    renderer: JsxRenderer_default,
    template: TextAreaTemplate
  }),
  event_strict_default("change", {
    bubbles: true
  }),
  event_strict_default("value-changed", {
    bubbles: true
  }),
  event_strict_default("input", {
    bubbles: true
  }),
  event_strict_default("select", {
    bubbles: true
  }),
  event_strict_default("scroll", {
    bubbles: true
  })
], TextArea);
TextArea.define();

// node_modules/@ui5/webcomponents-react/dist/webComponents/TextArea/index.js
var TextArea3 = withWebComponent("ui5-textarea", ["accessibleName", "accessibleNameRef", "growingMaxRows", "maxlength", "name", "placeholder", "rows", "value", "valueState"], ["disabled", "growing", "readonly", "required", "showExceededText"], ["valueStateMessage"], ["change", "input", "scroll", "select"]);
TextArea3.displayName = "TextArea";

// node_modules/@ui5/webcomponents-fiori/dist/types/TimelineLayout.js
var TimelineLayout;
(function(TimelineLayout2) {
  TimelineLayout2["Vertical"] = "Vertical";
  TimelineLayout2["Horizontal"] = "Horizontal";
})(TimelineLayout || (TimelineLayout = {}));
var TimelineLayout_default = TimelineLayout;

// node_modules/@ui5/webcomponents-fiori/dist/TimelineItemTemplate.js
function TimelineItemTemplate() {
  return jsxs("div", { class: "ui5-tli-root", children: [jsx("div", { class: {
    "ui5-tli-indicator": true,
    "ui5-tli-indicator-short-line": this.forcedLineWidth === "ShortLineWidth",
    "ui5-tli-indicator-large-line": this.forcedLineWidth === "LargeLineWidth"
  }, children: jsx("div", { class: "ui5-tli-icon-outer", children: this.icon ? jsx(Icon_default, { class: "ui5-tli-icon", name: this.icon, mode: "Decorative" }) : jsx("div", { class: "ui5-tli-dummy-icon-container" }) }) }), !this.hideBubble && jsxs("div", { "data-sap-focus-ref": true, class: "ui5-tli-bubble", tabindex: parseInt(this.forcedTabIndex), "aria-description": this.timelineItemStateText, children: [jsxs("div", { class: "ui5-tli-title", children: [this.name && name58.call(this), jsx("span", { children: this.titleText })] }), jsx("div", { class: "ui5-tli-subtitle", children: this.subtitleText }), this.content && jsx("div", { class: "ui5-tli-desc", children: jsx("slot", {}) }), jsx("span", { class: {
    "ui5-tli-bubble-arrow": true,
    "ui5-tli-bubble-arrow--left": this.layout === TimelineLayout_default.Vertical,
    "ui5-tli-bubble-arrow--top": this.layout === TimelineLayout_default.Horizontal
  } })] })] });
}
function name58() {
  return jsx(Fragment, { children: this.nameClickable ? jsxs(Link_default, { class: "ui5-tli-title-name-clickable", wrappingType: this.layout === TimelineLayout_default.Horizontal ? "None" : "Normal", onClick: this.onNamePress, children: [this.name, " "] }) : jsxs("span", { class: "ui5-tli-title-name", children: [this.name, " "] }) });
}

// node_modules/@ui5/webcomponents-fiori/dist/generated/themes/TimelineItem.css.js
registerThemePropertiesLoader("@ui5/webcomponents-theming", "sap_horizon", async () => parameters_bundle_css_default);
registerThemePropertiesLoader("@ui5/webcomponents-fiori", "sap_horizon", async () => parameters_bundle_css_default3);
var TimelineItem_css_default = `:host(:not([hidden])){display:block}.ui5-tli-root{display:flex}:host([layout="Vertical"]) .ui5-tli-indicator{position:relative;width:2rem}:host([layout="Horizontal"]) .ui5-tli-indicator{position:relative;display:flex;height:2rem;align-items:center}:host([layout="Vertical"]) .ui5-tli-indicator:before{content:"";display:inline-block;background-color:var(--sapContent_ForegroundBorderColor);width:.0625rem;position:absolute;inset-block-start:2rem;bottom:var(--_ui5-v2-8-0_timeline_tli_indicator_before_bottom);inset-inline-start:50%}:host([state="Positive"]) .ui5-tli-icon{color:var(--sapPositiveElementColor)}:host([state="Negative"]) .ui5-tli-icon{color:var(--sapNegativeElementColor)}:host([state="Critical"]) .ui5-tli-icon{color:var(--sapCriticalElementColor)}:host([state="Information"]) .ui5-tli-icon{color:var(--sapInformativeElementColor)}:host(:not([icon])[layout="Vertical"]) .ui5-tli-indicator:before{inset-block-start:1.75rem}:host([position-in-group][layout="Vertical"]) .ui5-tli-indicator:before{bottom:-1.5rem}:host([position-in-group][layout="Vertical"]) .ui5-tli-indicator.ui5-tli-indicator-large-line:before{bottom:-1.75rem}:host(:first-child[layout="Vertical"]:not([first-item-in-timeline])[icon]) .ui5-tli-indicator:after{content:"";display:inline-block;background-color:var(--sapContent_ForegroundBorderColor);width:.0625rem;position:absolute;inset-block-start:var(--_ui5-v2-8-0_timeline_tli_indicator_after_top);bottom:var(--_ui5-v2-8-0_timeline_tli_indicator_before_bottom);inset-inline-start:50%;height:var(--_ui5-v2-8-0_timeline_tli_indicator_after_height)}:host(:not([position-in-group])[layout="Vertical"]) .ui5-tli-indicator.ui5-tli-indicator-large-line:before{bottom:var(--_ui5-v2-8-0_timeline_tli_indicator_before_without_icon_bottom)}:host([layout="Vertical"]):not([icon]) .ui5-tli-indicator:before{bottom:var(--_ui5-v2-8-0_timeline_tli_indicator_before_without_icon_bottom);inset-block-start:1.875rem}:host([layout="Horizontal"]:not([icon])) .ui5-tli-indicator:before{inset-block-start:50%;inset-inline-end:var(--_ui5-v2-8-0_timeline_tli_indicator_before_without_icon_right);inset-inline-start:1rem}:host([layout="Vertical"]):not([icon]) .ui5-tli-indicator.ui5-tli-indicator-short-line:before{bottom:var(--_ui5-v2-8-0_timeline_tli_indicator_before_bottom)}:host([layout="Horizontal"]:not([icon])) .ui5-tli-indicator.ui5-tli-indicator-short-line:before{inset-inline-end:var(--_ui5-v2-8-0_timeline_tli_indicator_before_right)}:host(:not([icon])) .ui5-tli-indicator:after{content:"";display:inline-block;box-sizing:border-box;border:.0625rem solid var(--sapContent_NonInteractiveIconColor);background-color:var(--sapContent_NonInteractiveIconColor);border-radius:50%;width:.375rem;height:.375rem;position:absolute;inset-block-start:.9375rem;inset-inline-start:51.75%;transform:translate(-50%)}:host([layout="Horizontal"]:not([icon])) .ui5-tli-indicator:after{inset-block-start:.84rem;inset-inline-start:.9625rem}:host(:last-child) .ui5-tli-indicator:before{display:none}.ui5-tli-icon-outer{display:flex;justify-content:center;align-items:center;margin-block-start:.25rem;height:1.625rem;width:2rem}:host([layout="Horizontal"]) .ui5-tli-icon-outer{margin-block-start:0rem;height:1.3125rem}.ui5-tli-icon{color:var(--sapContent_NonInteractiveIconColor);height:1.375rem;width:1.375rem}:host([layout="Horizontal"]) .ui5-tli-dummy-icon-container{height:1.375rem;width:1.375rem;display:inline-block;outline:none}.ui5-tli-bubble{background:var(--sapGroup_ContentBackground);border:.0625rem solid var(--_ui5-v2-8-0_TimelineItem_bubble_border_color);box-sizing:border-box;border-radius:var(--_ui5-v2-8-0_TimelineItem_bubble_border_radius);flex:1;position:relative;margin-left:.5rem;padding:var(--_ui5-v2-8-0_TimelineItem_bubble_content_padding);word-break:break-word}:host([layout="Horizontal"]) .ui5-tli-bubble{margin-top:.5rem;margin-left:0}.ui5-tli-bubble:focus{outline:none}.ui5-tli-bubble:focus:after{content:"";border:var(--_ui5-v2-8-0_TimelineItem_bubble_border_width) var(--_ui5-v2-8-0_TimelineItem_bubble_border_style) var(--sapContent_FocusColor);border-radius:var(--_ui5-v2-8-0_TimelineItem_bubble_focus_border_radius);position:absolute;inset-block-start:var(--_ui5-v2-8-0_TimelineItem_bubble_border_top);inset-inline-end:var(--_ui5-v2-8-0_TimelineItem_bubble_border_right);bottom:var(--_ui5-v2-8-0_TimelineItem_bubble_border_bottom);inset-inline-start:var(--_ui5-v2-8-0_TimelineItem_bubble_border_left);pointer-events:none}:host([layout="Horizontal"]) .ui5-tli-bubble:focus:after{inset-block-start:var(--_ui5-v2-8-0_TimelineItem_horizontal_bubble_focus_top_offset);inset-inline-start:var(--_ui5-v2-8-0_TimelineItem_horizontal_bubble_focus_left_offset)}.ui5-tli-bubble-arrow{width:var(--_ui5-v2-8-0_TimelineItem_arrow_size);padding-bottom:var(--_ui5-v2-8-0_TimelineItem_arrow_size);position:absolute;pointer-events:none;top:0;left:0;overflow:hidden}.ui5-tli-bubble-arrow:before{content:"";background:var(--sapGroup_ContentBackground);border:.0625rem solid var(--_ui5-v2-8-0_TimelineItem_bubble_border_color);position:absolute;top:0;left:0;width:100%;height:100%;transform-origin:0 100%;transform:rotate(45deg)}:host([layout="Horizontal"]) .ui5-tli-bubble-arrow:before{transform:rotate(315deg)}.ui5-tli-bubble-arrow--left{left:calc(-1 * var(--_ui5-v2-8-0_TimelineItem_arrow_size))}.ui5-tli-bubble-arrow--top{inset-block-start:calc(-1 * var(--_ui5-v2-8-0_TimelineItem_arrow_size))}.ui5-tli-bubble-arrow--left:before{left:50%;width:50%;transform-origin:100% 100%}.ui5-tli-bubble-arrow--top:before{left:42%;width:75%;transform-origin:152% 104%}.ui5-tli-title,.ui5-tli-desc{color:var(--sapTextColor);font-family:var(--sapFontFamily);font-weight:400;font-size:var(--sapFontSize)}.ui5-tli-title span{display:inline-block}.ui5-tli-subtitle{color:var(--sapContent_LabelColor);font-family:var(--sapFontFamily);font-weight:400;font-size:var(--sapFontSmallSize);padding-block-start:var(--_ui5-v2-8-0_TimelineItem_bubble_content_subtitle_padding_top)}.ui5-tli-desc{padding-block-start:var(--_ui5-v2-8-0_TimelineItem_bubble_content_description_padding_top)}:dir(rtl) .ui5-tli-bubble-arrow--left{right:calc(-1 * var(--_ui5-v2-8-0_TimelineItem_arrow_size));left:auto;transform:scaleX(-1)}:dir(rtl) .ui5-tli-bubble-arrow--top{right:0;left:auto;transform:scaleX(-1)}:dir(rtl) .ui5-tli-bubble{margin-left:auto;margin-right:.5rem}:host([layout="Horizontal"]:dir(rtl)) .ui5-tli-bubble{margin-right:0}:dir(rtl) .ui5-tli-bubble:focus:after{left:var(--_ui5-v2-8-0_TimelineItem_bubble_rtl_left_offset);right:var(--_ui5-v2-8-0_TimelineItem_bubble_rtl_right_offset)}:host([layout="Horizontal"]:dir(rtl)) .ui5-tli-bubble:focus:after{right:0}:host([layout="Horizontal"]:not([icon]):dir(rtl)) .ui5-tli-indicator:after{right:.625rem}:host([layout="Horizontal"]:not([icon]):dir(rtl)) .ui5-tli-indicator:before{right:1.9375rem;left:var(--_ui5-v2-8-0_timeline_tli_indicator_before_right)}:host([layout="Horizontal"]:dir(rtl)) .ui5-tli-indicator:before{left:var(--_ui5-v2-8-0_timeline_tli_indicator_before_right);right:2.125rem}:host{align-content:end}:host([hide-bubble]){display:none}.ui5-tli-group-item-btn-arrow{position:absolute;width:.5rem;height:.5rem;transform:rotate(45deg);border:.0625rem solid var(--sapButton_BorderColor);background-color:var(--sapButton_Background);inset-inline-end:4.25rem;inset-block-start:.8125rem;border-inline-end-color:transparent;border-block-start-color:transparent}.ui5-tli-root:hover .ui5-tli-group-item-btn-arrow{background-color:var(--sapButton_Hover_Background)}:host([layout="Horizontal"]) .ui5-tli-root{flex-direction:column}:host([layout="Horizontal"][is-next-item-group]:last-child:not([last-item])) .ui5-tli-indicator:before{height:.0625rem;inset-block-start:50%;inset-inline-start:1.75rem}:host([position-in-group][layout="Horizontal"][is-next-item-group]:last-child:not([last-item])) .ui5-tli-indicator:before{inset-inline-start:1.625rem;width:calc(100% + .5rem)}:host([layout="Vertical"]:last-child:not([last-item])) .ui5-tli-indicator:before{content:"";display:inline-block;background-color:var(--sapContent_ForegroundBorderColor);inset-block-start:2rem;position:absolute;height:var(--_ui5-v2-8-0_timeline_tli_indicator_before_height)}:host(:not([icon])[layout="Vertical"]:last-child:not([last-item])) .ui5-tli-indicator:before{inset-block-start:1.75rem}:host([layout="Horizontal"]){height:auto;min-width:3rem;margin-inline-end:.25rem}:host([icon][layout="Horizontal"]:not([last-item])) .ui5-tli-indicator:after,:host(:not([icon])[layout="Horizontal"]:not([last-item])) .ui5-tli-indicator:before{content:"";display:inline-block;background-color:var(--sapContent_ForegroundBorderColor);height:.0625rem;inset-block-start:1rem;position:absolute;width:var(--_ui5-v2-8-0_timeline_tli_horizontal_indicator_after_width);inset-inline-start:1.5rem}:host([icon][layout="Horizontal"]:not([last-item])) .ui5-tli-indicator:after{inset-inline-start:var(--_ui5-v2-8-0_timeline_tli_horizontal_indicator_after_left)}:host([icon][layout="Horizontal"]:not([last-item]):not([is-next-item-group])) .ui5-tli-indicator:after{width:calc(var(--_ui5-v2-8-0_timeline_tli_icon_horizontal_indicator_after_width) + 1.25rem)}:host(:not([icon])[layout="Horizontal"]:not([last-item])[is-next-item-group]) .ui5-tli-indicator:before{width:var(--_ui5-v2-8-0_timeline_tli_horizontal_without_icon_indicator_before_width)}:host([is-next-item-group][icon][layout="Horizontal"]:not([last-item])) .ui5-tli-indicator.ui5-tli-indicator-large-line:after{width:var(--_ui5-v2-8-0_timeline_tli_horizontal_indicator_short_after_width)}:host([icon][layout="Horizontal"]:not([last-item])) .ui5-tli-indicator-short-line:after{content:"";display:inline-block;background-color:var(--sapContent_ForegroundBorderColor);height:.0625rem;inset-block-start:1rem;position:absolute;width:100%;inset-inline-start:1.9375rem}:host(:not([position-in-group])[icon][layout="Horizontal"]:not([last-item])) .ui5-tli-indicator-short-line:after{width:var(--_ui5-v2-8-0_timeline_tli_horizontal_indicator_short_after_width)}:host([position-in-group][icon][layout="Horizontal"]:not([last-item])) .ui5-tli-indicator-short-line:after{width:calc(100% - .5rem)}:host([icon][layout="Horizontal"]:not([last-item]):not([is-next-item-group])) .ui5-tli-indicator-large-line:after{width:var(--_ui5-v2-8-0_timeline_tli_icon_horizontal_indicator_after_width)}:host([position-in-group]:not([icon])[layout="Horizontal"]:not([last-item]):not([is-next-item-group])) .ui5-tli-indicator:before{width:calc(100% + .125rem)}:host([position-in-group]:not([icon])[layout="Horizontal"]:not([last-item]):not([is-next-item-group])) .ui5-tli-indicator.ui5-tli-indicator-short-line:before{width:100%}:host([position-in-group][icon][layout="Horizontal"]:not([last-item]):not([is-next-item-group])) .ui5-tli-indicator-large-line:after{width:calc(100% - .25rem)}:host(:not([icon])[layout="Horizontal"]:not([last-item]):not([is-next-item-group])) .ui5-tli-indicator:before{width:var(--_ui5-v2-8-0_timeline_tli_horizontal_indicator_before_width);inset-inline-start:1.625rem}:host(:not([icon])[layout="Horizontal"]:not([last-item])) .ui5-tli-indicator.ui5-tli-indicator-short-line:before{width:var(--_ui5-v2-8-0_timeline_tli_without_icon_horizontal_indicator_before_width);inset-inline-start:1.5rem}
`;

// node_modules/@ui5/webcomponents-fiori/dist/TimelineItem.js
var __decorate115 = function(decorators, target, key, desc) {
  var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
  if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
  else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
  return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var TimelineItem_1;
var TimelineItem = TimelineItem_1 = class TimelineItem2 extends UI5Element_default {
  constructor() {
    super();
    this.nameClickable = false;
    this.state = "None";
    this.firstItemInTimeline = false;
    this.isNextItemGroup = false;
    this.forcedTabIndex = "-1";
    this.layout = "Vertical";
    this.hideBubble = false;
    this.lastItem = false;
    this.hidden = false;
  }
  onNamePress() {
    this.fireDecoratorEvent("name-click");
  }
  /**
   * Focus the internal link.
   */
  focusLink() {
    var _a;
    (_a = this.shadowRoot.querySelector("[ui5-link]")) == null ? void 0 : _a.focus();
  }
  static typeTextMappings() {
    return {
      "Information": TIMELINE_ITEM_INFORMATION_STATE_TEXT,
      "Positive": TIMELINE_ITEM_POSITIVE_STATE_TEXT,
      "Negative": TIMELINE_ITEM_NEGATIVE_STATE_TEXT,
      "Critical": TIMELINE_ITEM_CRITICAL_STATE_TEXT
    };
  }
  get timelineItemStateText() {
    return this.state !== "None" ? TimelineItem_1.i18nBundle.getText(TimelineItem_1.typeTextMappings()[this.state]) : void 0;
  }
  get isGroupItem() {
    return false;
  }
};
__decorate115([
  property_default()
], TimelineItem.prototype, "icon", void 0);
__decorate115([
  property_default()
], TimelineItem.prototype, "name", void 0);
__decorate115([
  property_default({ type: Boolean })
], TimelineItem.prototype, "nameClickable", void 0);
__decorate115([
  property_default()
], TimelineItem.prototype, "titleText", void 0);
__decorate115([
  property_default()
], TimelineItem.prototype, "subtitleText", void 0);
__decorate115([
  property_default()
], TimelineItem.prototype, "state", void 0);
__decorate115([
  slot_default({ type: HTMLElement, "default": true })
], TimelineItem.prototype, "content", void 0);
__decorate115([
  property_default({ type: Boolean })
], TimelineItem.prototype, "firstItemInTimeline", void 0);
__decorate115([
  property_default({ type: Boolean })
], TimelineItem.prototype, "isNextItemGroup", void 0);
__decorate115([
  property_default({ noAttribute: true })
], TimelineItem.prototype, "forcedTabIndex", void 0);
__decorate115([
  property_default()
], TimelineItem.prototype, "layout", void 0);
__decorate115([
  property_default({ noAttribute: true })
], TimelineItem.prototype, "forcedLineWidth", void 0);
__decorate115([
  property_default({ type: Boolean })
], TimelineItem.prototype, "hideBubble", void 0);
__decorate115([
  property_default({ type: Boolean })
], TimelineItem.prototype, "lastItem", void 0);
__decorate115([
  property_default({ type: Boolean })
], TimelineItem.prototype, "hidden", void 0);
__decorate115([
  property_default({ type: Number })
], TimelineItem.prototype, "positionInGroup", void 0);
__decorate115([
  i18n_default("@ui5/webcomponents")
], TimelineItem, "i18nBundle", void 0);
TimelineItem = TimelineItem_1 = __decorate115([
  customElement_default({
    tag: "ui5-timeline-item",
    renderer: JsxRenderer_default,
    styles: TimelineItem_css_default,
    template: TimelineItemTemplate
  }),
  event_strict_default("name-click", {
    bubbles: true
  })
], TimelineItem);
TimelineItem.define();

// node_modules/@ui5/webcomponents-fiori/dist/TimelineTemplate.js
function TimelineTemplate() {
  return jsx("div", { class: "ui5-timeline-root", onFocusIn: this._onfocusin, onKeyDown: this._onkeydown, children: jsx(BusyIndicator_default, { id: `${this._id}-busyIndicator`, delay: this.loadingDelay, active: this.showBusyIndicatorOverlay, class: "ui5-timeline-busy-indicator", children: jsx("div", { class: "ui5-timeline-scroll-container", children: jsxs("ul", { class: "ui5-timeline-list", "aria-live": "polite", "aria-label": this.ariaLabel, children: [this.items.map((item2) => jsx("li", { class: "ui5-timeline-list-item", children: jsx("slot", { name: item2._individualSlot }) })), this.growsWithButton && moreRow.call(this), this.growsOnScroll && endRow.call(this)] }) }) }) });
}
function moreRow() {
  return jsxs("li", { class: "ui5-timeline-list-item ui5-timeline-list-growing", children: [jsx("div", { class: "ui5-tli-icon-outer", children: jsx(Button_default, { icon: this.growingButtonIcon, id: "ui5-timeline-growing-btn", class: {
    "ui5-timeline-growing-row-inner": true,
    "ui5-timeline-growing-row-inner--active": this._loadMoreActive
  }, tabindex: 0, onClick: this._onLoadMoreClick, onKeyDown: this._onLoadMoreKeydown, onKeyUp: this._onLoadMoreKeyup }) }), this.loading && jsx(BusyIndicator_default, { delay: this.loadingDelay, class: "ui5-timeline-growing-button-busy-indicator", active: true })] });
}
function endRow() {
  return jsx("div", { tabindex: -1, "aria-hidden": "true", class: "ui5-timeline-end-marker", children: jsx("span", { tabindex: -1, "aria-hidden": "true", class: "ui5-timeline-end-marker" }) });
}

// node_modules/@ui5/webcomponents-icons/dist/v4/process.js
var name59 = "process";
var pathData57 = "M424 268q11-12 0-23l-98-126q-10-9-10-22.5T326 74q9-10 22.5-10T371 74l132 160q9 9 9 22.5t-9 22.5L373 439q-9 10-22 10t-23-10q-9-9-9-22.5t9-22.5zm-157 0q11-12 0-23l-98-126q-9-9-9-22.5t9-22.5q10-10 23-10t23 10l131 160q10 9 10 22.5T346 279L217 439q-10 10-23 10t-23-10q-9-9-9-22.5t9-22.5zm-160 0q5-5 5-11.5t-5-11.5L9 119q-9-9-9-22.5T9 74q10-10 23-10t23 10l131 160q10 9 10 22.5T186 279L57 439q-10 10-23 10t-23-10q-9-9-9-22.5t9-22.5z";
var ltr57 = false;
var collection58 = "SAP-icons-v4";
var packageName57 = "@ui5/webcomponents-icons";
registerIcon(name59, { pathData: pathData57, ltr: ltr57, collection: collection58, packageName: packageName57 });

// node_modules/@ui5/webcomponents-icons/dist/v5/process.js
var name60 = "process";
var pathData58 = "M202 384q-11 0-18.5-7.5T176 358q0-10 8-18l89-84-89-84q-8-8-8-18 0-11 7.5-18.5T202 128q10 0 17 7l109 102q8 8 8 19t-8 19L219 377q-7 7-17 7zm144 0q-11 0-18.5-7.5T320 358q0-10 8-18l89-84-89-84q-8-8-8-18 0-11 7.5-18.5T346 128q10 0 17 7l109 102q8 8 8 19t-8 19L363 377q-7 7-17 7zm-288 0q-11 0-18.5-7.5T32 358q0-10 8-18l89-84-89-84q-8-8-8-18 0-11 7.5-18.5T58 128q10 0 17 7l109 102q8 8 8 19t-8 19L75 377q-7 7-17 7z";
var ltr58 = false;
var collection59 = "SAP-icons-v5";
var packageName58 = "@ui5/webcomponents-icons";
registerIcon(name60, { pathData: pathData58, ltr: ltr58, collection: collection59, packageName: packageName58 });

// node_modules/@ui5/webcomponents-icons/dist/process.js
var process_default = "process";

// node_modules/@ui5/webcomponents-icons/dist/v4/drill-down.js
var name61 = "drill-down";
var pathData59 = "M394 327q11-9 23-9.5t22 9.5q9 9 9 22.5t-9 22.5L279 501q-9 10-22.5 10T234 501L74 370q-10-9-10-22.5T74 325q9-10 21.5-9.5T119 325l126 97q5 5 11.5 5t11.5-5zm-22-146q21-17 38 0 8 8 8 18.5t-8 18.5L275 327q-8 8-19 8t-19-8L103 217q-8-8-8-19t8-19 18.5-8 19.5 8l106 82q4 4 9.5 4t9.5-4zM361 41q18-15 33 0 7 7 7 16.5T394 74l-120 97q-7 8-16.5 8t-17.5-8L120 73q-7-7-7-17t7-17 16.5-7 17.5 7l95 73q8 9 17 0z";
var ltr59 = false;
var accData34 = ICON_DRILL_DOWN;
var collection60 = "SAP-icons-v4";
var packageName59 = "@ui5/webcomponents-icons";
registerIcon(name61, { pathData: pathData59, ltr: ltr59, accData: accData34, collection: collection60, packageName: packageName59 });

// node_modules/@ui5/webcomponents-icons/dist/v5/drill-down.js
var name62 = "drill-down";
var pathData60 = "M256 192q-11 0-19-8L135 75q-7-7-7-17 0-11 7.5-18.5T154 32q10 0 18 8l84 89 84-89q8-8 18-8 11 0 18.5 7.5T384 58q0 10-7 17L275 184q-8 8-19 8zm0 144q-11 0-19-8L135 219q-7-7-7-17 0-11 7.5-18.5T154 176q10 0 18 8l84 89 84-89q8-8 18-8 11 0 18.5 7.5T384 202q0 10-7 17L275 328q-8 8-19 8zm0 144q-11 0-19-8L135 363q-7-7-7-17 0-11 7.5-18.5T154 320q10 0 18 8l84 89 84-89q8-8 18-8 11 0 18.5 7.5T384 346q0 10-7 17L275 472q-8 8-19 8z";
var ltr60 = false;
var accData35 = ICON_DRILL_DOWN;
var collection61 = "SAP-icons-v5";
var packageName60 = "@ui5/webcomponents-icons";
registerIcon(name62, { pathData: pathData60, ltr: ltr60, accData: accData35, collection: collection61, packageName: packageName60 });

// node_modules/@ui5/webcomponents-icons/dist/drill-down.js
var drill_down_default = "drill-down";

// node_modules/@ui5/webcomponents-fiori/dist/generated/themes/Timeline.css.js
registerThemePropertiesLoader("@ui5/webcomponents-theming", "sap_horizon", async () => parameters_bundle_css_default);
registerThemePropertiesLoader("@ui5/webcomponents-fiori", "sap_horizon", async () => parameters_bundle_css_default3);
var Timeline_css_default = `:host(:not([hidden])){display:block}.ui5-timeline-root{padding:var(--_ui5-v2-8-0_tl_padding);box-sizing:border-box;overflow:hidden}.ui5-timeline-list{list-style:none;margin:0;padding:0}:host([layout="Horizontal"]) .ui5-timeline-list-item.ui5-timeline-list-growing{display:flex;flex-direction:column;justify-content:center;margin-inline-start:.625rem;align-items:center;min-width:3.375rem}:host([layout="Vertical"]) .ui5-timeline-list-item.ui5-timeline-list-growing{display:flex;flex-direction:row-reverse;justify-content:center;align-items:center}:host([layout="Horizontal"]) .ui5-timeline-end-marker{margin:-.625rem}:host([layout="Vertical"]) .ui5-timeline-list{display:flex;flex-direction:column}.ui5-timeline-list-item{margin-bottom:var(--_ui5-v2-8-0_tl_li_margin_bottom)}.ui5-timeline-list-item:last-child{margin-bottom:0}:host([layout="Horizontal"]) .ui5-timeline-list{white-space:nowrap;list-style:none;margin:0;padding:0;display:flex}:host([layout="Horizontal"]) .ui5-timeline-list-item{display:inline-block;margin-inline-start:var(--_ui5-v2-8-0_tl_li_margin_bottom)}:host([layout="Horizontal"]) .ui5-timeline-scroll-container{overflow:auto;width:calc(100% + var(--_ui5-v2-8-0_timeline_scroll_container_offset))}:host([loading]) .ui5-timeline-growing-button-busy-indicator:not([_is-busy]){display:none}.ui5-timeline-root,.ui5-timeline-busy-indicator{width:100%;height:100%;position:relative;box-sizing:border-box;padding-inline-end:0}:host([layout="Vertical"]) .ui5-timeline-scroll-container{overflow:auto;height:100%;width:100%}:host([growing="Scroll"]) .ui5-timeline-end-marker{display:inline-block}
`;

// node_modules/@ui5/webcomponents-fiori/dist/types/TimelineGrowingMode.js
var TimelineGrowingMode;
(function(TimelineGrowingMode2) {
  TimelineGrowingMode2["Button"] = "Button";
  TimelineGrowingMode2["Scroll"] = "Scroll";
  TimelineGrowingMode2["None"] = "None";
})(TimelineGrowingMode || (TimelineGrowingMode = {}));
var TimelineGrowingMode_default = TimelineGrowingMode;

// node_modules/@ui5/webcomponents-fiori/dist/Timeline.js
var __decorate116 = function(decorators, target, key, desc) {
  var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
  if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
  else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
  return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var Timeline_1;
var SHORT_LINE_WIDTH = "ShortLineWidth";
var LARGE_LINE_WIDTH = "LargeLineWidth";
var GROWING_WITH_SCROLL_DEBOUNCE_RATE = 250;
var Timeline = Timeline_1 = class Timeline2 extends UI5Element_default {
  constructor() {
    super();
    this.layout = "Vertical";
    this.loading = false;
    this.loadingDelay = 1e3;
    this.growing = "None";
    this._loadMoreActive = false;
    this.timeLineEndObserved = false;
    this.initialIntersection = true;
    this._itemNavigation = new ItemNavigation_default(this, {
      getItemsCallback: () => this._navigableItems
    });
  }
  get ariaLabel() {
    return this.accessibleName ? `${Timeline_1.i18nBundle.getText(TIMELINE_ARIA_LABEL)} ${this.accessibleName}` : Timeline_1.i18nBundle.getText(TIMELINE_ARIA_LABEL);
  }
  get showBusyIndicatorOverlay() {
    return !this.growsWithButton && this.loading;
  }
  get growsOnScroll() {
    return this.growing === TimelineGrowingMode_default.Scroll;
  }
  get growingButtonIcon() {
    return this.layout === TimelineLayout_default.Horizontal ? process_default : drill_down_default;
  }
  get growsWithButton() {
    return this.growing === TimelineGrowingMode_default.Button;
  }
  onAfterRendering() {
    if (this.growsOnScroll) {
      this.observeTimelineEnd();
    } else if (this.timeLineEndObserved) {
      this.unobserveTimelineEnd();
    }
    this.growingIntersectionObserver = this.getIntersectionObserver();
  }
  onExitDOM() {
    this.unobserveTimelineEnd();
  }
  async observeTimelineEnd() {
    if (!this.timeLineEndObserved) {
      await renderFinished();
      this.getIntersectionObserver().observe(this.timelineEndMarker);
      this.timeLineEndObserved = true;
    }
  }
  unobserveTimelineEnd() {
    if (this.growingIntersectionObserver) {
      this.growingIntersectionObserver.disconnect();
      this.growingIntersectionObserver = null;
      this.timeLineEndObserved = false;
    }
  }
  getIntersectionObserver() {
    if (!this.growingIntersectionObserver) {
      this.growingIntersectionObserver = new IntersectionObserver(this.onIntersection.bind(this), {
        root: null,
        threshold: 1
      });
    }
    return this.growingIntersectionObserver;
  }
  onIntersection(entries) {
    if (this.initialIntersection) {
      this.initialIntersection = false;
      return;
    }
    if (entries.some((entry) => entry.isIntersecting)) {
      debounce_default(this.loadMore.bind(this), GROWING_WITH_SCROLL_DEBOUNCE_RATE);
    }
  }
  loadMore() {
    this.fireDecoratorEvent("load-more");
  }
  _onLoadMoreKeydown(e) {
    if (isSpace(e)) {
      e.preventDefault();
      this._loadMoreActive = true;
    }
    if (isEnter(e)) {
      this._onLoadMoreClick();
      this._loadMoreActive = true;
    }
  }
  _onLoadMoreKeyup(e) {
    if (isSpace(e)) {
      this._onLoadMoreClick();
    }
    this._loadMoreActive = false;
  }
  _onLoadMoreClick() {
    this.fireDecoratorEvent("load-more");
  }
  _onfocusin(e) {
    let target = e.target;
    if (target.isGroupItem) {
      target = target.shadowRoot.querySelector("[ui5-toggle-button]");
    }
    this._itemNavigation.setCurrentItem(target);
  }
  onBeforeRendering() {
    this._itemNavigation._navigationMode = this.layout === TimelineLayout_default.Horizontal ? NavigationMode_default.Horizontal : NavigationMode_default.Vertical;
    if (!this.items.length) {
      return;
    }
    for (let i = 0; i < this.items.length; i++) {
      this.items[i].layout = this.layout;
      if (this.items[i + 1] && !!this.items[i + 1].icon) {
        this.items[i].forcedLineWidth = SHORT_LINE_WIDTH;
      } else if (this.items[i].icon && this.items[i + 1] && !this.items[i + 1].icon) {
        this.items[i].forcedLineWidth = LARGE_LINE_WIDTH;
      }
    }
    this._setLastItem();
    this._setIsNextItemGroup();
    this.items[0].firstItemInTimeline = true;
  }
  _setLastItem() {
    const items3 = this.items;
    for (let i = 0; i < items3.length; i++) {
      items3[i].lastItem = false;
    }
    if (items3.length > 0) {
      items3[items3.length - 1].lastItem = true;
    }
  }
  _setIsNextItemGroup() {
    for (let i = 0; i < this.items.length; i++) {
      this.items[i].isNextItemGroup = false;
    }
    for (let i = 0; i < this.items.length; i++) {
      if (this.items[i + 1] && this.items[i + 1].isGroupItem) {
        this.items[i].isNextItemGroup = true;
      }
    }
  }
  _onkeydown(e) {
    const target = e.target;
    if (isDown(e) || isRight(e)) {
      this._handleDown();
      e.preventDefault();
      return;
    }
    if (isUp(e) || isLeft(e)) {
      this._handleUp(e);
      e.preventDefault();
      return;
    }
    if (target.nameClickable && !target.getFocusDomRef().matches(":has(:focus-within)")) {
      return;
    }
    if (isTabNext(e)) {
      this._handleNextOrPreviousItem(e, true);
    } else if (isTabPrevious(e)) {
      this._handleNextOrPreviousItem(e);
    }
  }
  _handleNextOrPreviousItem(e, isNext) {
    const target = e.target;
    let updatedTarget = target;
    if (target.isGroupItem) {
      updatedTarget = target.shadowRoot.querySelector("[ui5-toggle-button]");
    }
    const nextTargetIndex = isNext ? this._navigableItems.indexOf(updatedTarget) + 1 : this._navigableItems.indexOf(updatedTarget) - 1;
    const nextTarget = this._navigableItems[nextTargetIndex];
    if (!nextTarget) {
      return;
    }
    if (nextTarget) {
      e.preventDefault();
      nextTarget.focus();
      this._itemNavigation.setCurrentItem(nextTarget);
    }
  }
  _handleDown() {
    if (this.growsWithButton) {
      this.focusGrowingButton();
    }
  }
  focusGrowingButton() {
    var _a;
    const items3 = this._navigableItems;
    const lastIndex = items3.length - 1;
    const currentIndex = this._itemNavigation._currentIndex;
    if (currentIndex !== -1 && currentIndex === lastIndex) {
      (_a = this.growingButton) == null ? void 0 : _a.focus();
    }
  }
  _handleUp(e) {
    if (this.growingButton === e.target) {
      const items3 = this._navigableItems;
      const lastItem = items3[items3.length - 1];
      this.focusItem(lastItem);
      e.preventDefault();
      e.stopImmediatePropagation();
    }
  }
  /**
   * Focuses a list item and sets its tabindex to "0" via the ItemNavigation
   * @protected
   * @param item
   */
  focusItem(item2) {
    this._itemNavigation.setCurrentItem(item2);
    item2.focus();
  }
  get _navigableItems() {
    const navigatableItems = [];
    if (!this.items.length) {
      return [];
    }
    this.items.forEach((item2) => {
      var _a;
      if (!item2.isGroupItem) {
        navigatableItems.push(item2);
        return;
      }
      const navigatableItem = item2.shadowRoot.querySelector("[ui5-toggle-button]");
      if (navigatableItem) {
        navigatableItems.push(navigatableItem);
      }
      if (!item2.collapsed) {
        (_a = item2.items) == null ? void 0 : _a.forEach((groupItem) => {
          navigatableItems.push(groupItem);
        });
      }
    });
    return navigatableItems;
  }
};
__decorate116([
  property_default()
], Timeline.prototype, "layout", void 0);
__decorate116([
  property_default()
], Timeline.prototype, "accessibleName", void 0);
__decorate116([
  property_default({ type: Boolean })
], Timeline.prototype, "loading", void 0);
__decorate116([
  property_default({ type: Number })
], Timeline.prototype, "loadingDelay", void 0);
__decorate116([
  property_default()
], Timeline.prototype, "growing", void 0);
__decorate116([
  property_default({ type: Boolean })
], Timeline.prototype, "_loadMoreActive", void 0);
__decorate116([
  slot_default({ type: HTMLElement, individualSlots: true, "default": true })
], Timeline.prototype, "items", void 0);
__decorate116([
  query_default(".ui5-timeline-end-marker")
], Timeline.prototype, "timelineEndMarker", void 0);
__decorate116([
  query_default(`[id="ui5-timeline-growing-btn"]`)
], Timeline.prototype, "growingButton", void 0);
__decorate116([
  i18n_default("@ui5/webcomponents-fiori")
], Timeline, "i18nBundle", void 0);
Timeline = Timeline_1 = __decorate116([
  customElement_default({
    tag: "ui5-timeline",
    languageAware: true,
    renderer: JsxRenderer_default,
    styles: Timeline_css_default,
    template: TimelineTemplate
  }),
  event_strict_default("load-more", {
    bubbles: true
  })
], Timeline);
Timeline.define();

// node_modules/@ui5/webcomponents-react/dist/webComponents/Timeline/index.js
var Timeline3 = withWebComponent("ui5-timeline", ["accessibleName", "growing", "layout", "loadingDelay"], ["loading"], [], ["load-more"]);
Timeline3.displayName = "Timeline";

// node_modules/@ui5/webcomponents-fiori/dist/TimelineGroupItemTemplate.js
function TimelineGroupItemTemplate() {
  return jsxs("div", { class: "ui5-tlgi-root", children: [jsxs("div", { class: "ui5-tlgi-btn-root", children: [jsx("div", { class: "ui5-tlgi-icon-placeholder", children: jsx("div", { class: "ui5-tlgi-icon-dot" }) }), jsx("div", { class: "ui5-tlgi-line-placeholder", children: jsx("div", { class: "ui5-tlgi-line" }) }), jsx(ToggleButton_default, { class: "ui5-tlgi-btn", icon: getEffectiveGroupIcon.call(this, this.layout, this.collapsed), pressed: this.collapsed, onClick: this.onGroupItemClick, children: this.groupName })] }), jsx("ul", { class: "ui5-tl-group-item", children: this.items.map((item2) => jsx("li", { class: "ui5-timeline-group-list-item", children: jsx("slot", { name: item2._individualSlot }) })) })] });
}
function getEffectiveGroupIcon(layout, collapsed) {
  if (layout === TimelineLayout_default.Vertical) {
    return collapsed ? slim_arrow_left_default : slim_arrow_down_default;
  }
  return collapsed ? slim_arrow_up_default : slim_arrow_right_default;
}

// node_modules/@ui5/webcomponents-fiori/dist/generated/themes/TimelineGroupItem.css.js
registerThemePropertiesLoader("@ui5/webcomponents-theming", "sap_horizon", async () => parameters_bundle_css_default);
registerThemePropertiesLoader("@ui5/webcomponents-fiori", "sap_horizon", async () => parameters_bundle_css_default3);
var TimelineGroupItem_css_default = `:host .ui5-timeline-group-list-item{list-style:none}:host([collapsed]) .ui5-timeline-group-list-item{display:none}.ui5-tl-group-item{width:100%;display:flex;flex-direction:column;margin:0;padding:0;gap:1.25rem}.ui5-tlgi-root{display:flex;flex-direction:column;gap:var(--_ui5-v2-8-0_timeline_tlgi_compact_root_gap, 1.25rem)}.ui5-tlgi-btn-root{display:flex;justify-content:space-between;gap:.125rem}.ui5-tlgi-icon-placeholder{display:flex;justify-content:center;position:relative;width:2rem;align-self:center}:host([collapsed]) .ui5-tlgi-icon-dot{width:.375rem;height:.375rem;box-sizing:border-box;border:.0625rem solid var(--sapContent_NonInteractiveIconColor);background-color:var(--sapBackgroundColor);border-radius:50%;margin-inline-start:.0625rem}.ui5-tlgi-line-placeholder{display:flex;justify-content:center;position:relative;align-self:center;flex-grow:1;margin-inline-end:.5rem;margin-inline-start:-.9375rem}:host([collapsed]) .ui5-tlgi-line{width:100%;height:.0625rem;border-block-start:.0625rem dashed var(--sapContent_NonInteractiveIconColor)}:host([layout="Vertical"]:not(:last-child)[collapsed]) .ui5-tlgi-icon-dot:before{content:"";display:inline-block;background-color:var(--sapContent_ForegroundBorderColor);width:.0625rem;position:absolute;inset-block-start:.375rem;inset-inline-start:50%;height:var(--_ui5-v2-8-0_timeline_tlgi_compact_icon_before_height, calc(100% + 4.5rem) )}:host([layout="Vertical"]:not(:last-child)[collapsed]:not([is-next-item-group])) .ui5-tlgi-icon-dot:before{height:var(--_ui5-v2-8-0_timeline_tlgi_compact_icon_before_height, calc(100% + 3.75rem) )}:host([layout="Vertical"]:not([first-item-in-timeline])[collapsed]) .ui5-tlgi-icon-dot:after{content:"";display:inline-block;background-color:var(--sapContent_ForegroundBorderColor);width:.0625rem;position:absolute;inset-block-start:-2rem;inset-inline-start:50%;height:2rem}:host([layout="Horizontal"]) .ui5-tl-group-item{height:100%}:host([layout="Horizontal"]) .ui5-tlgi-root{height:var(--_ui5-v2-8-0_timeline_tlgi_root_horizontal_height)}:host([layout="Horizontal"][collapsed]) .ui5-tlgi-btn-root,:host([layout="Horizontal"][collapsed]) .ui5-tlgi-root{flex-direction:column;gap:.8275rem;margin-block-start:.4375rem;margin-inline-end:var(--_ui5-v2-8-0_timeline_tlgi_horizontal_compact_root_margin_left, 0)}:host([layout="Horizontal"][collapsed]) .ui5-tlgi-root:last-child{margin-block-end:-.4375rem}:host([layout="Horizontal"][collapsed]):first-child .ui5-tlgi-btn-root{padding-inline-end:2rem}:host([layout="Horizontal"][collapsed]) .ui5-tlgi-icon-placeholder{align-self:unset;justify-content:unset}:host([layout="Horizontal"]) .ui5-tlgi-btn{margin-inline-start:-.75rem}:host([layout="Horizontal"][collapsed]) .ui5-tlgi-line{width:100%;height:calc(100% + 1rem);border-block-start:none;border-inline-start:.0625rem dashed var(--sapContent_NonInteractiveIconColor);margin-block-start:-.8125rem}:host([layout="Horizontal"]) .ui5-tlgi-line-placeholder{height:var(--_ui5-v2-8-0_timeline_tlgi_line_horizontal_height);align-self:unset;margin-inline-end:0;margin-inline-start:.25rem}:host([layout="Horizontal"]:not([collapsed])) .ui5-tlgi-line-placeholder{display:none}:host([layout="Horizontal"][collapsed]) .ui5-tlgi-root>:last-child{margin-block-end:-.8275rem}:host([layout="Horizontal"]) .ui5-tl-group-item{flex-direction:row}:host([layout="Horizontal"]) .ui5-tl-group-item:last-child{margin-inline-end:.25rem}:host([layout="Horizontal"]) .ui5-tlgi-root{flex-direction:column-reverse}:host([layout="Horizontal"]) .ui5-tlgi-btn-root{flex-direction:row-reverse}:host([layout="Horizontal"]:not(:last-child)[collapsed]) .ui5-tlgi-line-placeholder:before{content:"";display:inline-block;background-color:var(--sapContent_ForegroundBorderColor);height:.0625rem;inset-block-start:-1.0625rem;position:absolute;inset-inline-start:.125rem;width:var(--_ui5-v2-8-0_timeline_tlgi_horizontal_line_placeholder_before_width, calc(100% + 1.5625rem) )}:host(:not([is-next-item-group])[layout="Horizontal"]:not(:last-child)[collapsed]) .ui5-tlgi-line-placeholder:before{width:var(--_ui5-v2-8-0_timeline_tlgi_horizontal_line_placeholder_before_width, calc(100% + 1.9375rem) )}
`;

// node_modules/@ui5/webcomponents-fiori/dist/TimelineGroupItem.js
var __decorate117 = function(decorators, target, key, desc) {
  var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
  if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
  else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
  return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var SHORT_LINE_WIDTH2 = "ShortLineWidth";
var LARGE_LINE_WIDTH2 = "LargeLineWidth";
var TimelineGroupItem = class TimelineGroupItem2 extends UI5Element_default {
  constructor() {
    super(...arguments);
    this.collapsed = false;
    this.layout = "Vertical";
    this.lastItem = false;
    this.isNextItemGroup = false;
    this.hidden = false;
    this.firstItemInTimeline = false;
    this.forcedTabIndex = "-1";
  }
  onBeforeRendering() {
    if (!this.items.length) {
      return;
    }
    this._setGroupItemProps();
  }
  _setGroupItemProps() {
    const items3 = this.items;
    const itemsLength = items3.length;
    if (itemsLength && this.firstItemInTimeline) {
      items3[0].firstItemInTimeline = true;
    }
    for (let i = 0; i < itemsLength; i++) {
      items3[i].lastItem = false;
      items3[i].isNextItemGroup = false;
    }
    if (itemsLength > 0) {
      items3[itemsLength - 1].isNextItemGroup = this.isNextItemGroup;
      if (this.collapsed) {
        items3[itemsLength - 1].lastItem = false;
      } else if (this.lastItem) {
        items3[itemsLength - 1].lastItem = true;
      }
    }
    for (let i = 0; i < itemsLength; i++) {
      const item2 = items3[i];
      item2.positionInGroup = i + 1;
      item2.hidden = !!this.collapsed;
      item2.layout = this.layout;
      if (items3[i + 1] && !!items3[i + 1].icon) {
        item2.forcedLineWidth = SHORT_LINE_WIDTH2;
      } else if (item2.icon && items3[i + 1] && !items3[i + 1].icon) {
        item2.forcedLineWidth = LARGE_LINE_WIDTH2;
      }
    }
  }
  onGroupItemClick() {
    this.collapsed = !this.collapsed;
    this.fireDecoratorEvent("toggle");
  }
  get isGroupItem() {
    return true;
  }
  get _groupName() {
    return this.groupName;
  }
};
__decorate117([
  property_default()
], TimelineGroupItem.prototype, "groupName", void 0);
__decorate117([
  property_default({ type: Boolean })
], TimelineGroupItem.prototype, "collapsed", void 0);
__decorate117([
  slot_default({ type: HTMLElement, individualSlots: true, "default": true })
], TimelineGroupItem.prototype, "items", void 0);
__decorate117([
  property_default()
], TimelineGroupItem.prototype, "layout", void 0);
__decorate117([
  property_default({ type: Boolean })
], TimelineGroupItem.prototype, "lastItem", void 0);
__decorate117([
  property_default({ type: Boolean })
], TimelineGroupItem.prototype, "isNextItemGroup", void 0);
__decorate117([
  property_default({ type: Boolean })
], TimelineGroupItem.prototype, "hidden", void 0);
__decorate117([
  property_default({ type: Boolean })
], TimelineGroupItem.prototype, "firstItemInTimeline", void 0);
__decorate117([
  property_default({ noAttribute: true })
], TimelineGroupItem.prototype, "forcedTabIndex", void 0);
TimelineGroupItem = __decorate117([
  customElement_default({
    tag: "ui5-timeline-group-item",
    renderer: JsxRenderer_default,
    styles: TimelineGroupItem_css_default,
    template: TimelineGroupItemTemplate
  }),
  event_strict_default("toggle", {
    bubbles: true
  })
], TimelineGroupItem);
TimelineGroupItem.define();

// node_modules/@ui5/webcomponents-react/dist/webComponents/TimelineGroupItem/index.js
var TimelineGroupItem3 = withWebComponent("ui5-timeline-group-item", ["groupName"], ["collapsed"], [], ["toggle"]);
TimelineGroupItem3.displayName = "TimelineGroupItem";

// node_modules/@ui5/webcomponents-react/dist/webComponents/TimelineItem/index.js
var TimelineItem3 = withWebComponent("ui5-timeline-item", ["icon", "name", "state", "subtitleText", "titleText"], ["nameClickable"], [], ["name-click"]);
TimelineItem3.displayName = "TimelineItem";

// node_modules/@ui5/webcomponents/dist/DateTimeInput.js
var __decorate118 = function(decorators, target, key, desc) {
  var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
  if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
  else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
  return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var DateTimeInput = class DateTimeInput2 extends Input_default {
  constructor() {
    super(...arguments);
    this._shouldOpenValueStatePopover = false;
  }
  /**
   * Prevents the value state message popover from appearing when a responsive popover (like time selection) is open
   * since the responsive popover already includes the necessary information in its header.
   *
   * @protected
   * @override
   */
  get hasValueStateMessage() {
    return this._shouldOpenValueStatePopover && super.hasValueStateMessage && !this._isMobileDevice;
  }
  get _isMobileDevice() {
    return !isDesktop() && (isPhone() || isTablet());
  }
};
__decorate118([
  property_default({ noAttribute: true })
], DateTimeInput.prototype, "_shouldOpenValueStatePopover", void 0);
DateTimeInput = __decorate118([
  customElement_default({
    tag: "ui5-datetime-input"
  })
], DateTimeInput);
DateTimeInput.define();
var DateTimeInput_default = DateTimeInput;

// node_modules/@ui5/webcomponents/dist/TimeSelectionInputsTemplate.js
function TimeSelectionInputsTemplate() {
  return jsxs("div", { class: "ui5-time-selection-inputs", onKeyDown: this._onkeydown, children: [this._entities.map((entity) => jsxs(Fragment, { children: [entity.hasSeparator && jsx("span", { class: "ui5-time-selection-separator", children: ":" }), jsx(Input_default, { id: `${this._id}_input_${entity.entity}`, class: "ui5-time-selection-numeric-input", type: this._numberType, maxlength: 2, autocomplete: "off", pattern: "[0-9]*", inputmode: "numeric", value: entity.stringValue, accessibleName: entity.label, _nativeInputAttributes: entity.attributes, onFocusIn: this._onfocusin, onFocusOut: this._onfocusout, onInput: this._oninput })] })), this._periods.length > 0 && jsxs(Fragment, { children: [jsx("span", { class: "ui5-time-selection-separator" }), jsx(SegmentedButton_default, { id: `${this._id}_AmPm`, onClick: this._periodChange, children: this._periods.map((period) => jsx(SegmentedButtonItem_default, { selected: period.selected, children: period.label })) })] })] });
}

// node_modules/@ui5/webcomponents/dist/generated/themes/TimeSelectionInputs.css.js
registerThemePropertiesLoader("@ui5/webcomponents-theming", "sap_horizon", async () => parameters_bundle_css_default);
registerThemePropertiesLoader("@ui5/webcomponents", "sap_horizon", async () => parameters_bundle_css_default2);
var TimeSelectionInputs_css_default = `.ui5-time-selection-numeric-input{width:2.875rem;text-align:center}.ui5-time-selection-inputs{min-width:12.5rem;display:flex;justify-content:center;align-items:center}.ui5-time-selection-separator{display:inline-block;min-width:.5rem;padding:0 .125rem;text-align:center;font-family:var(--sapFontFamily);font-size:var(--sapFontSize);color:var(--sapTextColor)}.ui5-hidden-text{display:none}
`;

// node_modules/@ui5/webcomponents/dist/TimeSelectionInputs.js
var __decorate119 = function(decorators, target, key, desc) {
  var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
  if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
  else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
  return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var TimeSelectionInputs = class TimeSelectionInputs2 extends TimePickerInternals_default {
  constructor() {
    super(...arguments);
    this._editedInput = -1;
  }
  get enterHoursLabel() {
    return TimePickerInternals_default.i18nBundle.getText(TIMEPICKER_INPUTS_ENTER_HOURS);
  }
  get enterMinutesLabel() {
    return TimePickerInternals_default.i18nBundle.getText(TIMEPICKER_INPUTS_ENTER_MINUTES);
  }
  get enterSecondsLabel() {
    return TimePickerInternals_default.i18nBundle.getText(TIMEPICKER_INPUTS_ENTER_SECONDS);
  }
  get _numberType() {
    return InputType_default.Number;
  }
  get _isHoursInput() {
    const key = this._componentKey("hours");
    return this._componentMap[key] === this._activeIndex;
  }
  get _is24HoursFormat() {
    var _a, _b;
    return ((_a = this.formatPattern) == null ? void 0 : _a.includes("HH")) || ((_b = this.formatPattern) == null ? void 0 : _b.includes("H"));
  }
  onBeforeRendering() {
    this._createComponents();
  }
  _addNumericAttributes() {
    this._entities.forEach((item2, index) => {
      const input = this._inputComponent(index);
      if (input) {
        const innerInput = this._innerInput(input);
        innerInput.setAttribute("autocomplete", "off");
        innerInput.setAttribute("pattern", "[0-9]*");
        innerInput.setAttribute("inputmode", "numeric");
      }
    });
  }
  /**
   * Returns Input component by index or name.
   * @param indexOrName the index or name of the component
   * @returns component (if exists) or undefined
   */
  _inputComponent(indexOrName) {
    var _a;
    const index = typeof indexOrName === "string" ? this._indexFromName(indexOrName) : indexOrName;
    const entity = this._entities[index].entity;
    return entity ? (_a = this.shadowRoot) == null ? void 0 : _a.querySelector(`#${this._id}_input_${entity}`) : void 0;
  }
  /**
   * Returns the inner input element DOM reference.
   * @param input the Input component
   * @returns inner input element
   */
  _innerInput(input) {
    return input && input.getInputDOMRefSync();
  }
  /**
   * Creates clock and button components according to the display format pattern.
   */
  _createComponents() {
    let value;
    this._entities = [];
    this._periods = [];
    this._componentMap = {
      hours: -1,
      minutes: -1,
      seconds: -1
    };
    if (this._hasHoursComponent) {
      this._componentMap.hours = this._entities.length;
      value = parseInt(this._hours);
      this._entities.push({
        "entity": "hours",
        "label": this.enterHoursLabel,
        "value": value,
        "stringValue": this._editedInput === this._entities.length ? this._editedInputValue : this._formatNumberToString(value, this._zeroPaddedHours),
        "hasSeparator": this._entities.length > 0,
        "prependZero": this._zeroPaddedHours,
        "attributes": {
          "min": this._hoursConfiguration.minHour,
          "max": this._hoursConfiguration.maxHour,
          "step": 1
        }
      });
    }
    if (this._hasMinutesComponent) {
      this._componentMap.minutes = this._entities.length;
      value = parseInt(this._minutes);
      this._entities.push({
        "entity": "minutes",
        "label": this.enterMinutesLabel,
        "value": value,
        "stringValue": this._editedInput === this._entities.length ? this._editedInputValue : this._formatNumberToString(value, true),
        "hasSeparator": this._entities.length > 0,
        "prependZero": true,
        "attributes": {
          "min": 0,
          "max": 59,
          "step": 1
        }
      });
    }
    if (this._hasSecondsComponent) {
      this._componentMap.seconds = this._entities.length;
      value = parseInt(this._seconds);
      this._entities.push({
        "entity": "seconds",
        "label": this.enterSecondsLabel,
        "value": value,
        "stringValue": this._editedInput === this._entities.length ? this._editedInputValue : this._formatNumberToString(value, true),
        "hasSeparator": this._entities.length > 0,
        "prependZero": true,
        "attributes": {
          "min": 0,
          "max": 59,
          "step": 1
        }
      });
    }
    this._createPeriodComponent();
  }
  /**
   * Switches to the specific input.
   * @param index the index (in _entities array) of the input
   * @private
   */
  _switchInput(index) {
    if (index >= this._entities.length) {
      index = 0;
    }
    this._inputComponent(index).focus();
  }
  /**
   * Switches to the next input that can de focused.
   * @param wrapAround whether to start with first clock after reaching the last one, or not
   * @private
   */
  _switchNextInput(wrapAround = false) {
    let activeInput = this._activeIndex;
    const startActiveInput = activeInput;
    if (!this._entities.length) {
      return;
    }
    do {
      activeInput++;
      if (activeInput >= this._entities.length) {
        activeInput = wrapAround ? 0 : this._entities.length - 1;
      }
    } while (this._inputComponent(activeInput).disabled && activeInput !== startActiveInput && (wrapAround || activeInput < this._entities.length));
    if (activeInput !== startActiveInput && !this._inputComponent(activeInput).disabled) {
      this._switchInput(activeInput);
    }
  }
  /**
   * Return a value as string, formatted and prepended with zero if necessary.
   * @param num A number to format
   * @param prependZero Whether to prepend with zero or not
   * @returns Formatted value
   * @private
   */
  _formatNumberToString(num, prependZero) {
    return num < 10 && prependZero ? `0${num}` : num.toString();
  }
  _onkeydown(evt) {
    if (this._activeIndex === -1) {
      return;
    }
    if (isEnter(evt)) {
      this.fireDecoratorEvent("close-inputs");
    } else if (isNumber(evt) && this._entities[this._activeIndex]) {
      const char = evt.key;
      const buffer = this._keyboardBuffer + char;
      const bufferValue = parseInt(buffer);
      evt.preventDefault();
      this._resetCooldown(true);
      if (bufferValue > this._entities[this._activeIndex].attributes.max) {
        this._inputChange(parseInt(this._keyboardBuffer));
        this._switchNextInput();
        this._keyboardBuffer = char;
        this._inputChange(parseInt(char));
        this._resetCooldown(true);
      } else {
        this._keyboardBuffer = buffer;
        this._inputChange(parseInt(this._keyboardBuffer));
        if (this._keyboardBuffer.length === 2 || parseInt(`${this._keyboardBuffer}0`) > this._entities[this._activeIndex].attributes.max) {
          this._resetCooldown(this._keyboardBuffer.length !== 2);
          this._keyboardBuffer = "";
          this._switchNextInput();
        }
      }
    }
  }
  /**
   * Input 'change' event handler.
   * @param value new value to set on active input
   */
  _inputChange(value) {
    const stringValue = this._formatNumberToString(value, this._entities[this._activeIndex].prependZero);
    if (this._activeIndex === -1) {
      return;
    }
    value = parseInt(stringValue);
    this._entities[this._activeIndex].value = value;
    this._inputComponent(this._activeIndex).value = this._formatNumberToString(value, this._entities[this._activeIndex].prependZero);
    switch (this._activeIndex) {
      case this._componentMap.hours:
        this._hoursChange(value);
        break;
      case this._componentMap.minutes:
        this._minutesChange(value);
        break;
      case this._componentMap.seconds:
        this._secondsChange(value);
        break;
    }
  }
  _onfocusin(e) {
    const input = e.target;
    const innerInput = this._innerInput(input);
    this._editedInput = -1;
    innerInput.select();
    this._activeIndex = this._getIndexFromId(input.id);
  }
  _onfocusout() {
    let value = this._inputComponent(this._activeIndex).value === "" ? 0 : this._entities[this._activeIndex].value;
    this._editedInput = -1;
    if (this._isHoursInput && !this._is24HoursFormat && value === 0) {
      value = 12;
    }
    this._inputChange(value);
    this._activeIndex = -1;
  }
  _oninput() {
    const stringValue = this._inputComponent(this._activeIndex).value;
    const value = stringValue === "" ? 0 : parseInt(stringValue);
    if (value !== this._entities[this._activeIndex].value) {
      this._editedInput = this._activeIndex;
      this._editedInputValue = stringValue;
      this._inputChange(value);
      this._keyboardBuffer = stringValue;
    }
  }
};
__decorate119([
  property_default({ type: Number })
], TimeSelectionInputs.prototype, "_editedInput", void 0);
__decorate119([
  property_default()
], TimeSelectionInputs.prototype, "_editedInputValue", void 0);
TimeSelectionInputs = __decorate119([
  customElement_default({
    tag: "ui5-time-selection-inputs",
    styles: TimeSelectionInputs_css_default,
    template: TimeSelectionInputsTemplate
  }),
  event_strict_default("close-inputs", {
    bubbles: true
  })
], TimeSelectionInputs);
TimeSelectionInputs.define();
var TimeSelectionInputs_default = TimeSelectionInputs;

// node_modules/@ui5/webcomponents/dist/TimePickerPopoverTemplate.js
function TimePickerPopoverTemplate() {
  return jsxs(Fragment, { children: [jsxs(ResponsivePopover_default, { id: `${this._id}-responsive-popover`, class: "ui5-time-picker-popover", placement: "Bottom", horizontalAlign: "Start", opener: this, open: this.open, allowTargetOverlap: true, _hideHeader: !this.hasValueStateText, hideArrow: true, accessibleName: this.pickerAccessibleName, onClose: this.onResponsivePopoverAfterClose, onBeforeOpen: this.onResponsivePopoverBeforeOpen, onOpen: this.onResponsivePopoverAfterOpen, onWheel: this._handleWheel, onKeyDown: this._onkeydown, children: [this.shouldDisplayValueStateMessageInResponsivePopover && valueStateTextHeader.call(this), jsx(TimeSelectionClocks_default, { id: `${this._id}-time-sel`, value: this._timeSelectionValue, formatPattern: this._formatPattern, onChange: this.onTimeSelectionChange, onClosePicker: this.submitPickers }), jsxs("div", { slot: "footer", class: "ui5-time-picker-footer", children: [jsx(Button_default, { id: "submit", design: "Emphasized", onClick: this.submitPickers, children: this.submitButtonLabel }), jsx(Button_default, { id: "close", design: "Transparent", onClick: this._togglePicker, children: this.cancelButtonLabel })] })] }), this._isMobileDevice && jsxs(Popover_default, { id: `${this._id}-popover`, class: "ui5-time-picker-inputs-popover", placement: "Bottom", horizontalAlign: "Start", "allow-target-overlap": true, "_hide-header": true, "hide-arrow": true, onOpen: this.onInputsPopoverAfterOpen, onClose: this.onInputsPopoverAfterClose, onWheel: this._handleWheel, onKeyDown: this._onkeydown, children: [this.hasValueStateText && valueStateTextHeader.call(this, { "width": "100%" }), jsx("div", { class: "popover-content", children: jsx(TimeSelectionInputs_default, { id: `${this._id}-time-sel-inputs`, value: this._timeSelectionValue, formatPattern: this._formatPattern, onChange: this.onTimeSelectionChange, onCloseInputs: this.submitInputsPopover }) }), jsxs("div", { slot: "footer", class: "ui5-time-picker-footer", children: [jsx(Button_default, { id: "submitInputs", design: "Emphasized", onClick: this.submitInputsPopover, children: this.submitButtonLabel }), jsx(Button_default, { id: "closeInputs", design: "Transparent", onClick: this.closeInputsPopover, children: this.cancelButtonLabel })] })] })] });
}
function valueStateMessage6() {
  return this.shouldDisplayDefaultValueStateMessage ? this.valueStateDefaultText : jsx("slot", { name: "valueStateMessage" });
}
function valueStateTextHeader(style) {
  if (!this.hasValueStateText) {
    return;
  }
  return jsxs("div", { slot: "header", class: {
    "ui5-popover-header": true,
    ...this.classes.popoverValueState
  }, style, children: [jsx(Icon_default, { class: "ui5-input-value-state-message-icon", name: valueStateMessageInputIcon.call(this) }), valueStateMessage6.call(this)] });
}
function valueStateMessageInputIcon() {
  const iconPerValueState = {
    Negative: error_default,
    Critical: alert_default,
    Positive: sys_enter_2_default,
    Information: information_default
  };
  return this.valueState !== ValueState_default.None ? iconPerValueState[this.valueState] : "";
}

// node_modules/@ui5/webcomponents-icons/dist/v4/time-entry-request.js
var name63 = "time-entry-request";
var pathData61 = "M416 272q0 16-16 16H224V144q0-16 16-16t16 16v112h144q16 0 16 16zM256 0q53 0 99.5 20T437 75t55 81.5 20 99.5q0 49-17.5 92.5T447 426t-71 56-88 28v-32q40-6 75.5-25.5t61-49T465 336t15-80q0-46-17.5-87t-48-71.5-71.5-48T256 32q-38 0-72.5 12T121 77.5t-49 51T41 192H8q11-41 34.5-76.5t56-61 72.5-40T256 0zM144 480q16 0 16 16 0 6-4.5 11t-11.5 5H16q-6 0-11-5t-5-11q0-7 5-11.5t11-4.5h128zm0-64q16 0 16 16 0 6-4.5 11t-11.5 5H16q-6 0-11-5t-5-11q0-7 5-11.5t11-4.5h128zm0-64q16 0 16 16 0 6-4.5 11t-11.5 5H16q-6 0-11-5t-5-11q0-7 5-11.5t11-4.5h128z";
var ltr61 = false;
var collection62 = "SAP-icons-v4";
var packageName61 = "@ui5/webcomponents-icons";
registerIcon(name63, { pathData: pathData61, ltr: ltr61, collection: collection62, packageName: packageName61 });

// node_modules/@ui5/webcomponents-icons/dist/v5/time-entry-request.js
var name64 = "time-entry-request";
var pathData62 = "M262 461q11 0 18.5 7t7.5 18-7.5 18.5T262 512h-6q-53 0-99.5-20T75 437t-55-81.5T0 256t20-99.5T75 75t81.5-55T256 0q44 0 84 14t73 39 56.5 59.5T503 188q2 5 2 6.5v3.5q0 11-7.5 18.5T479 224q-8 0-15.5-5.5T454 205q-9-34-27.5-62.5t-45-48.5T323 62.5 256 51q-42 0-79.5 16T111 111t-44 65.5T51 256t16 79.5 44 65.5 65.5 44 79.5 16h6zm0-365q11 0 18.5 7.5T288 122v131q0 8-5 15l-77 105q-8 11-20 11-11 0-18.5-7.5T160 358q0-7 5-15l72-98V122q0-11 7-18.5t18-7.5zm224 192q11 0 18.5 7.5T512 314t-7.5 18-18.5 7H378q-11 0-18.5-7t-7.5-18 7.5-18.5T378 288h108zm0 86q11 0 18.5 7.5T512 400t-7.5 18.5T486 426H378q-11 0-18.5-7.5T352 400t7.5-18.5T378 374h108zm0 87q11 0 18.5 7t7.5 18-7.5 18.5T486 512H378q-11 0-18.5-7.5T352 486t7.5-18 18.5-7h108z";
var ltr62 = false;
var collection63 = "SAP-icons-v5";
var packageName62 = "@ui5/webcomponents-icons";
registerIcon(name64, { pathData: pathData62, ltr: ltr62, collection: collection63, packageName: packageName62 });

// node_modules/@ui5/webcomponents-icons/dist/time-entry-request.js
var time_entry_request_default = "time-entry-request";

// node_modules/@ui5/webcomponents/dist/TimePickerTemplate.js
function TimePickerTemplate() {
  return jsxs(Fragment, { children: [jsx("div", { id: this._id, class: "ui5-time-picker-root", children: jsxs(DateTimeInput_default, { "data-sap-focus-ref": true, id: `${this._id}-inner`, class: "ui5-time-picker-input", value: this.value, placeholder: this._placeholder, disabled: this.disabled, readonly: this.readonly, required: this.required, valueState: this.valueState, _shouldOpenValueStatePopover: !this.open, _inputAccInfo: this.accInfo, onClick: this._handleInputClick, onChange: this._handleInputChange, onInput: this._handleInputLiveChange, onFocusIn: this._onfocusin, onKeyDown: this._onkeydown, children: [this.shouldDisplayValueStateMessageOnDesktop && jsx("slot", { name: "valueStateMessage", slot: "valueStateMessage" }), !this.readonly && jsx(Icon_default, { slot: "icon", name: time_entry_request_default, tabindex: -1, showTooltip: true, onClick: this._togglePicker, class: {
    "ui5-time-picker-input-icon-button": true,
    "inputIcon": true,
    "inputIcon--pressed": this.open
  } })] }) }), TimePickerPopoverTemplate.call(this)] });
}

// node_modules/@ui5/webcomponents/dist/generated/themes/TimePicker.css.js
registerThemePropertiesLoader("@ui5/webcomponents-theming", "sap_horizon", async () => parameters_bundle_css_default);
registerThemePropertiesLoader("@ui5/webcomponents", "sap_horizon", async () => parameters_bundle_css_default2);
var TimePicker_css_default = `:host{vertical-align:middle}.ui5-hidden-text{position:absolute;clip:rect(1px,1px,1px,1px);user-select:none;left:-1000px;top:-1000px;pointer-events:none;font-size:0}.inputIcon{color:var(--_ui5-v2-8-0_input_icon_color);cursor:pointer;outline:none;padding:var(--_ui5-v2-8-0_input_icon_padding);border-inline-start:var(--_ui5-v2-8-0_input_icon_border);min-width:1rem;min-height:1rem;border-radius:var(--_ui5-v2-8-0_input_icon_border_radius)}.inputIcon.inputIcon--pressed{background:var(--_ui5-v2-8-0_input_icon_pressed_bg);box-shadow:var(--_ui5-v2-8-0_input_icon_box_shadow);border-inline-start:var(--_ui5-v2-8-0_select_hover_icon_left_border);color:var(--_ui5-v2-8-0_input_icon_pressed_color)}.inputIcon:active{background-color:var(--sapButton_Active_Background);box-shadow:var(--_ui5-v2-8-0_input_icon_box_shadow);border-inline-start:var(--_ui5-v2-8-0_select_hover_icon_left_border);color:var(--_ui5-v2-8-0_input_icon_pressed_color)}.inputIcon:not(.inputIcon--pressed):not(:active):hover{background:var(--_ui5-v2-8-0_input_icon_hover_bg);box-shadow:var(--_ui5-v2-8-0_input_icon_box_shadow)}.inputIcon:hover{border-inline-start:var(--_ui5-v2-8-0_select_hover_icon_left_border);box-shadow:var(--_ui5-v2-8-0_input_icon_box_shadow)}:host([readonly]:not([disabled])){border-color:var(--_ui5-v2-8-0_input_readonly_border_color);background:var(--sapField_ReadOnly_BackgroundStyle);background-color:var(--_ui5-v2-8-0_input_readonly_background)}:host([disabled]){opacity:var(--_ui5-v2-8-0_input_disabled_opacity);cursor:default;pointer-events:none;background-color:var(--_ui5-v2-8-0-input_disabled_background);border-color:var(--_ui5-v2-8-0_input_disabled_border_color)}:host([value-state="Negative"]) .inputIcon:not(.inputIcon--pressed):not(:active):hover{box-shadow:var(--_ui5-v2-8-0_input_error_icon_box_shadow)}:host([value-state="Critical"]) .inputIcon:not(.inputIcon--pressed):not(:active):hover{box-shadow:var(--_ui5-v2-8-0_input_warning_icon_box_shadow)}:host([value-state="Information"]) .inputIcon:not(.inputIcon--pressed):not(:active):hover{box-shadow:var(--_ui5-v2-8-0_input_information_icon_box_shadow)}:host([value-state="Positive"]) .inputIcon:not(.inputIcon--pressed):not(:active):hover{box-shadow:var(--_ui5-v2-8-0_input_success_icon_box_shadow)}:host([value-state="Negative"]:not([readonly]):not([disabled])){background:var(--sapField_InvalidBackgroundStyle);background-color:var(--sapField_InvalidBackground);border-color:var(--_ui5-v2-8-0_input_value_state_error_border_color);box-shadow:var(--sapField_InvalidShadow)}:host([value-state="Critical"]:not([readonly]):not([disabled])){background:var(--sapField_WarningBackgroundStyle);background-color:var(--sapField_WarningBackground);border-color:var(--_ui5-v2-8-0_input_value_state_warning_border_color);box-shadow:var(--sapField_WarningShadow)}:host([value-state="Positive"]:not([readonly]):not([disabled])){background:var(--sapField_SuccessBackgroundStyle);background-color:var(--sapField_SuccessBackground);border-color:var(--_ui5-v2-8-0_input_value_state_success_border_color);border-width:var(--_ui5-v2-8-0_input_value_state_success_border_width);box-shadow:var(--sapField_SuccessShadow)}:host([value-state="Information"]:not([readonly]):not([disabled])){background:var(--sapField_InformationBackgroundStyle);background-color:var(--sapField_InformationBackground);border-color:var(--_ui5-v2-8-0_input_value_state_information_border_color);border-width:var(--_ui5-v2-8-0_input_information_border_width);box-shadow:var(--sapField_InformationShadow)}:host([value-state="Negative"]) .inputIcon:active,:host([value-state="Negative"]) .inputIcon.inputIcon--pressed{box-shadow:var(--_ui5-v2-8-0_input_error_icon_box_shadow);color:var(--_ui5-v2-8-0_input_icon_error_pressed_color)}:host([value-state="Critical"]) .inputIcon:active,:host([value-state="Critical"]) .inputIcon.inputIcon--pressed{box-shadow:var(--_ui5-v2-8-0_input_warning_icon_box_shadow);color:var(--_ui5-v2-8-0_input_icon_warning_pressed_color)}:host([value-state="Information"]) .inputIcon:active,:host([value-state="Information"]) .inputIcon.inputIcon--pressed{box-shadow:var(--_ui5-v2-8-0_input_information_icon_box_shadow);color:var(--_ui5-v2-8-0_input_icon_information_pressed_color)}:host([value-state="Positive"]) .inputIcon:active,:host([value-state="Positive"]) .inputIcon.inputIcon--pressed{box-shadow:var(--_ui5-v2-8-0_input_success_icon_box_shadow);color:var(--_ui5-v2-8-0_input_icon_success_pressed_color)}:host([value-state="Negative"]) .inputIcon,:host([value-state="Critical"]) .inputIcon{padding:var(--_ui5-v2-8-0_input_error_warning_icon_padding)}:host([value-state="Information"]) .inputIcon{padding:var(--_ui5-v2-8-0_input_information_icon_padding)}:host(:not([hidden])){display:inline-block;line-height:normal;letter-spacing:normal;word-spacing:normal}:host{min-width:calc(var(--_ui5-v2-8-0_input_min_width) + var(--_ui5-v2-8-0_input_icon_width));height:var(--_ui5-v2-8-0_input_height);color:var(--sapField_TextColor);background-color:var(--sapField_Background);border-radius:var(--_ui5-v2-8-0-time_picker_border_radius);margin:var(--_ui5-v2-8-0_input_margin_top_bottom) 0;user-select:none;-moz-user-select:none;-webkit-user-select:none;-ms-user-select:none}:host([value-state="Negative"]){background-color:var(--sapField_InvalidBackground)}:host(:not([disabled]):hover){background:var(--sapField_Hover_Background)}.ui5-time-picker-root{line-height:inherit;letter-spacing:inherit;word-spacing:inherit;height:inherit}:host .ui5-time-picker-input{width:100%;color:inherit;background-color:inherit;line-height:inherit;letter-spacing:inherit;word-spacing:inherit;margin:inherit;height:inherit}.ui5-time-picker-popover::part(header){padding:0}
`;

// node_modules/@ui5/webcomponents/dist/generated/themes/TimePickerPopover.css.js
registerThemePropertiesLoader("@ui5/webcomponents-theming", "sap_horizon", async () => parameters_bundle_css_default);
registerThemePropertiesLoader("@ui5/webcomponents", "sap_horizon", async () => parameters_bundle_css_default2);
var TimePickerPopover_css_default = `.ui5-time-picker-popover{width:20rem}.ui5-time-picker-footer{height:fit-content;display:flex;justify-content:flex-end;width:100%}.ui5-time-picker-footer>[ui5-button]{margin:1%;min-width:20%}.ui5-time-picker-popover::part(content){padding:0}.ui5-time-picker-inputs-popover::part(header){padding:0;width:100%}
`;

// node_modules/@ui5/webcomponents/dist/TimePicker.js
var __decorate120 = function(decorators, target, key, desc) {
  var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
  if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
  else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
  return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var TimePicker_1;
var TimePicker = TimePicker_1 = class TimePicker2 extends UI5Element_default {
  constructor() {
    super(...arguments);
    this.value = "";
    this.valueState = "None";
    this.disabled = false;
    this.readonly = false;
    this.open = false;
    this.required = false;
    this._isInputsPopoverOpen = false;
  }
  get formValidityMessage() {
    return TimePicker_1.i18nBundle.getText(FORM_TEXTFIELD_REQUIRED);
  }
  get formValidity() {
    return { valueMissing: this.required && !this.value };
  }
  async formElementAnchor() {
    var _a;
    return (_a = await this.getFocusDomRefAsync()) == null ? void 0 : _a.getFocusDomRefAsync();
  }
  get formFormattedValue() {
    return this.value || "";
  }
  onBeforeRendering() {
    if (this.value) {
      this.value = this.normalizeValue(this.value) || this.value;
    }
    this.tempValue = this.value && this.isValid(this.value) ? this.value : this.getFormat().format(UI5Date_default2.getInstance());
  }
  get dateAriaDescription() {
    return TimePicker_1.i18nBundle.getText(TIMEPICKER_INPUT_DESCRIPTION);
  }
  get pickerAccessibleName() {
    return TimePicker_1.i18nBundle.getText(TIMEPICKER_POPOVER_ACCESSIBLE_NAME);
  }
  get accInfo() {
    return {
      "ariaRoledescription": this.dateAriaDescription,
      "ariaHasPopup": "dialog",
      "ariaRequired": this.required,
      "ariaLabel": getEffectiveAriaLabelText(this)
    };
  }
  /**
   * Currently selected time represented as JavaScript Date instance
   * @public
   * @default null
   */
  get dateValue() {
    return this.getFormat().parse(this._effectiveValue);
  }
  /**
   * @protected
   */
  get _placeholder() {
    return this.placeholder !== void 0 ? this.placeholder : this._displayFormat;
  }
  /**
   * @protected
   */
  get _formatPattern() {
    var _a;
    const hasHours = !!((_a = this.formatPattern) == null ? void 0 : _a.match(/H/i));
    const fallback = !this.formatPattern || !hasHours;
    const localeData = getCachedLocaleDataInstance_default(getLocale_default());
    return fallback ? localeData.getTimePattern("medium") : this.formatPattern;
  }
  get _displayFormat() {
    return this.getFormat().oFormatOptions.pattern;
  }
  get _effectiveValue() {
    return this.value;
  }
  get _timeSelectionValue() {
    return this.tempValue;
  }
  get _isPhone() {
    return isPhone();
  }
  get _isMobileDevice() {
    return !isDesktop() && (isPhone() || isTablet());
  }
  get shouldDisplayValueStateMessageInResponsivePopover() {
    var _a;
    return this.hasValueStateText && !((_a = this._inputsPopover) == null ? void 0 : _a.open);
  }
  onTimeSelectionChange(e) {
    this.tempValue = e.detail.value;
  }
  _togglePicker() {
    this.open = !this.open;
    if (this._isMobileDevice) {
      this._inputsPopover.open = false;
    }
  }
  submitPickers() {
    this._updateValueAndFireEvents(this.tempValue, true, ["change", "value-changed"]);
    this._togglePicker();
  }
  onResponsivePopoverAfterClose() {
    this.open = false;
    this.fireDecoratorEvent("close");
  }
  onResponsivePopoverBeforeOpen() {
    const clocks = this._timeSelectionClocks;
    if (clocks) {
      clocks._activeIndex = 0;
      clocks._skipAnimation = true;
    }
  }
  onResponsivePopoverAfterOpen() {
    this.fireDecoratorEvent("open");
  }
  /**
   * Opens the Inputs popover.
   * @private
   * @returns Resolves when the Inputs popover is open
   */
  openInputsPopover() {
    this.tempValue = this.value && this.isValid(this.value) ? this.value : this.getFormat().format(UI5Date_default2.getInstance());
    const popover = this._inputsPopover;
    popover.opener = this;
    popover.open = true;
    this._isInputsPopoverOpen = true;
  }
  /**
   * Closes the Inputs popover
   * @private
   * @returns Resolves when the Inputs popover is closed
   */
  closeInputsPopover() {
    const popover = this._inputsPopover;
    popover.open = false;
  }
  toggleInputsPopover() {
    if (this.isInputsPopoverOpen()) {
      this.closeInputsPopover();
    } else if (this._canOpenInputsPopover()) {
      this.openInputsPopover();
    }
  }
  /**
   * Checks if the inputs popover is open
   * @private
   */
  isInputsPopoverOpen() {
    return !!this._isInputsPopoverOpen;
  }
  submitInputsPopover() {
    this._updateValueAndFireEvents(this.tempValue, true, ["change", "value-changed"]);
    this.closeInputsPopover();
  }
  onInputsPopoverAfterOpen() {
    const popover = this._inputsPopover;
    popover.querySelector("[ui5-time-selection-inputs]")._addNumericAttributes();
  }
  onInputsPopoverAfterClose() {
    this._isInputsPopoverOpen = false;
  }
  _handleInputClick(e) {
    const target = e.target;
    if (this.open) {
      return;
    }
    if (this._isMobileDevice && target && !target.hasAttribute("ui5-icon")) {
      this.toggleInputsPopover();
    }
    const inputField = this._getInputField();
    if (inputField) {
      inputField.select();
    }
  }
  _updateValueAndFireEvents(value, normalizeValue, eventsNames) {
    if (value === this.value) {
      return;
    }
    const valid = this.isValid(value);
    if (value !== void 0 && valid && normalizeValue) {
      value = this.normalizeValue(value);
    }
    if (!eventsNames.includes("input")) {
      this.value = "";
      this.value = value;
    }
    this.tempValue = value;
    this._updateValueState();
    eventsNames.forEach((eventName) => {
      this.fireDecoratorEvent(eventName, { value, valid });
    });
  }
  _updateValueState() {
    const isValid = this.isValid(this.value);
    if (!isValid) {
      this.valueState = ValueState_default.Negative;
    } else if (isValid && this.valueState === ValueState_default.Negative) {
      this.valueState = ValueState_default.None;
    }
  }
  _handleInputChange(e) {
    const target = e.target;
    this._updateValueAndFireEvents(target.value, true, ["change", "value-changed"]);
  }
  _handleInputLiveChange(e) {
    if (this._isPhone) {
      e.preventDefault();
    }
    const target = e.target;
    this._updateValueAndFireEvents(target.value, false, ["input"]);
  }
  _canOpenPicker() {
    return !this.disabled && !this.readonly;
  }
  _canOpenInputsPopover() {
    return !this.disabled && this._isMobileDevice;
  }
  _getInputField() {
    const input = this._dateTimeInput;
    return input && input.getInputDOMRef();
  }
  _onkeydown(e) {
    if (this._isMobileDevice && !this.isInputsPopoverOpen()) {
      e.preventDefault();
    }
    if (isShow(e)) {
      e.preventDefault();
      this._togglePicker();
    }
    const target = e.target;
    if (target && this.open && this._dateTimeInput.id === target.id && (isTabNext(e) || isTabPrevious(e) || isF6Next(e) || isF6Previous(e))) {
      this._togglePicker();
    }
    if (this.open) {
      return;
    }
    if (isEnter(e)) {
      if (this._internals.form) {
        submitForm(this);
      }
    } else if (isPageUpShiftCtrl(e)) {
      e.preventDefault();
      this._modifyValueBy(1, "second");
    } else if (isPageUpShift(e)) {
      e.preventDefault();
      this._modifyValueBy(1, "minute");
    } else if (isPageUp(e)) {
      e.preventDefault();
      this._modifyValueBy(1, "hour");
    } else if (isPageDownShiftCtrl(e)) {
      e.preventDefault();
      this._modifyValueBy(-1, "second");
    } else if (isPageDownShift(e)) {
      e.preventDefault();
      this._modifyValueBy(-1, "minute");
    } else if (isPageDown(e)) {
      e.preventDefault();
      this._modifyValueBy(-1, "hour");
    }
  }
  get _isPattern() {
    return this._formatPattern !== "medium" && this._formatPattern !== "short" && this._formatPattern !== "long";
  }
  getFormat() {
    let dateFormat;
    if (this._isPattern) {
      dateFormat = DateFormat_default2.getDateInstance({
        pattern: this._formatPattern
      });
    } else {
      dateFormat = DateFormat_default2.getDateInstance({
        style: this._formatPattern
      });
    }
    return dateFormat;
  }
  /**
   * Formats a Java Script date object into a string representing a locale date and time
   * according to the `formatPattern` property of the TimePicker instance
   * @param date A Java Script date object to be formatted as string
   * @public
   * @returns formatted value
   */
  formatValue(date) {
    return this.getFormat().format(date);
  }
  /**
   * Checks if a value is valid against the current `formatPattern` value.
   *
   * **Note:** an empty string is considered as valid value.
   * @param value The value to be tested against the current date format
   * @public
   */
  isValid(value) {
    if (value === "") {
      return true;
    }
    return !!this.getFormat().parse(value);
  }
  normalizeValue(value) {
    if (value === "") {
      return value;
    }
    return this.getFormat().format(this.getFormat().parse(value));
  }
  _modifyValueBy(amount, unit) {
    const date = this.getFormat().parse(this._effectiveValue);
    if (!date) {
      return;
    }
    if (unit === "hour") {
      date.setHours(date.getHours() + amount);
    } else if (unit === "minute") {
      date.setMinutes(date.getMinutes() + amount);
    } else if (unit === "second") {
      date.setSeconds(date.getSeconds() + amount);
    }
    const newValue = this.formatValue(date);
    this._updateValueAndFireEvents(newValue, true, ["change", "value-changed"]);
  }
  /**
   * The listener for this event can't be passive as it calls preventDefault()
   * @param e Wheel Event
   * @private
   */
  _handleWheel(e) {
    e.preventDefault();
  }
  /**
   * Hides mobile device keyboard by temporary setting the input to readonly state.
   */
  _hideMobileKeyboard() {
    this._dateTimeInput.readonly = true;
    setTimeout(() => {
      this._dateTimeInput.readonly = false;
    }, 0);
  }
  _onfocusin(e) {
    if (this._isMobileDevice) {
      this._hideMobileKeyboard();
      if (this._isInputsPopoverOpen) {
        const popover = this._inputsPopover;
        popover.applyFocus();
      }
      e.preventDefault();
    }
  }
  get valueStateDefaultText() {
    if (this.valueState === ValueState_default.None) {
      return;
    }
    return this.valueStateTextMappings[this.valueState];
  }
  get valueStateTextMappings() {
    return {
      [ValueState_default.Positive]: TimePicker_1.i18nBundle.getText(VALUE_STATE_SUCCESS),
      [ValueState_default.Negative]: TimePicker_1.i18nBundle.getText(VALUE_STATE_ERROR),
      [ValueState_default.Critical]: TimePicker_1.i18nBundle.getText(VALUE_STATE_WARNING),
      [ValueState_default.Information]: TimePicker_1.i18nBundle.getText(VALUE_STATE_INFORMATION)
    };
  }
  get shouldDisplayDefaultValueStateMessage() {
    return !willShowContent_default(this.valueStateMessage) && this.hasValueStateText;
  }
  get submitButtonLabel() {
    return TimePicker_1.i18nBundle.getText(TIMEPICKER_SUBMIT_BUTTON);
  }
  get cancelButtonLabel() {
    return TimePicker_1.i18nBundle.getText(TIMEPICKER_CANCEL_BUTTON);
  }
  get hasValueStateText() {
    return this.hasValueState && this.valueState !== ValueState_default.Positive;
  }
  get hasValueState() {
    return this.valueState !== ValueState_default.None;
  }
  get shouldDisplayValueStateMessageOnDesktop() {
    return this.valueStateMessage.length > 0 && !this.open && !this._isMobileDevice;
  }
  get classes() {
    return {
      popover: {
        "ui5-suggestions-popover": true,
        "ui5-popover-with-value-state-header-phone": this._isPhone && this.hasValueStateText,
        "ui5-popover-with-value-state-header": !this._isPhone && this.hasValueStateText
      },
      popoverValueState: {
        "ui5-valuestatemessage-header": true,
        "ui5-valuestatemessage-root": true,
        "ui5-valuestatemessage--success": this.valueState === ValueState_default.Positive,
        "ui5-valuestatemessage--error": this.valueState === ValueState_default.Negative,
        "ui5-valuestatemessage--warning": this.valueState === ValueState_default.Critical,
        "ui5-valuestatemessage--information": this.valueState === ValueState_default.Information
      }
    };
  }
  /**
   * @protected
   */
  get openIconName() {
    return "time-entry-request";
  }
};
__decorate120([
  property_default()
], TimePicker.prototype, "value", void 0);
__decorate120([
  property_default()
], TimePicker.prototype, "name", void 0);
__decorate120([
  property_default()
], TimePicker.prototype, "valueState", void 0);
__decorate120([
  property_default({ type: Boolean })
], TimePicker.prototype, "disabled", void 0);
__decorate120([
  property_default({ type: Boolean })
], TimePicker.prototype, "readonly", void 0);
__decorate120([
  property_default()
], TimePicker.prototype, "placeholder", void 0);
__decorate120([
  property_default()
], TimePicker.prototype, "formatPattern", void 0);
__decorate120([
  property_default({ type: Boolean })
], TimePicker.prototype, "open", void 0);
__decorate120([
  property_default({ type: Boolean })
], TimePicker.prototype, "required", void 0);
__decorate120([
  property_default()
], TimePicker.prototype, "accessibleName", void 0);
__decorate120([
  property_default()
], TimePicker.prototype, "accessibleNameRef", void 0);
__decorate120([
  property_default({ type: Boolean, noAttribute: true })
], TimePicker.prototype, "_isInputsPopoverOpen", void 0);
__decorate120([
  slot_default()
], TimePicker.prototype, "valueStateMessage", void 0);
__decorate120([
  query_default("[ui5-time-selection-clocks]")
], TimePicker.prototype, "_timeSelectionClocks", void 0);
__decorate120([
  query_default("[ui5-popover]")
], TimePicker.prototype, "_inputsPopover", void 0);
__decorate120([
  query_default("[ui5-datetime-input]")
], TimePicker.prototype, "_dateTimeInput", void 0);
__decorate120([
  i18n_default("@ui5/webcomponents")
], TimePicker, "i18nBundle", void 0);
TimePicker = TimePicker_1 = __decorate120([
  customElement_default({
    tag: "ui5-time-picker",
    languageAware: true,
    cldr: true,
    formAssociated: true,
    renderer: JsxRenderer_default,
    template: TimePickerTemplate,
    styles: [
      TimePicker_css_default,
      ResponsivePopoverCommon_css_default,
      TimePickerPopover_css_default,
      ValueStateMessage_css_default
    ]
  }),
  event_strict_default("change", {
    bubbles: true
  }),
  event_strict_default("input", {
    bubbles: true
  }),
  event_strict_default("open", {
    bubbles: true
  }),
  event_strict_default("close", {
    bubbles: true
  })
], TimePicker);
TimePicker.define();

// node_modules/@ui5/webcomponents-react/dist/webComponents/TimePicker/index.js
var TimePicker3 = withWebComponent("ui5-time-picker", ["accessibleName", "accessibleNameRef", "formatPattern", "name", "placeholder", "value", "valueState"], ["disabled", "open", "readonly", "required"], ["valueStateMessage"], ["change", "close", "input", "open"]);
TimePicker3.displayName = "TimePicker";

// node_modules/@ui5/webcomponents-react/dist/webComponents/Title/index.js
var Title = withWebComponent("ui5-title", ["level", "size", "wrappingType"], [], [], []);
Title.displayName = "Title";

// node_modules/@ui5/webcomponents/dist/ToastTemplate.js
function ToastTemplate() {
  return jsx(Fragment, { children: this.open && jsx("div", { class: "ui5-toast-root", role: "alert", tabindex: this._tabindex, children: jsx("bdi", { children: jsx("slot", {}) }) }) });
}

// node_modules/@ui5/webcomponents/dist/generated/themes/Toast.css.js
registerThemePropertiesLoader("@ui5/webcomponents-theming", "sap_horizon", async () => parameters_bundle_css_default);
registerThemePropertiesLoader("@ui5/webcomponents", "sap_horizon", async () => parameters_bundle_css_default2);
var Toast_css_default = `:host{font-family:"72override",var(--sapFontFamily);color:var(--sapContent_ContrastTextColor);font-size:var(--sapFontSize);position:fixed;display:none;box-sizing:border-box;max-width:15rem;overflow:hidden;background:var(--_ui5-v2-8-0_toast_background);box-shadow:var(--_ui5-v2-8-0_toast_shadow);border-radius:var(--sapElement_BorderCornerRadius);transition-property:opacity;opacity:1;word-wrap:break-word;text-align:center;text-overflow:ellipsis;white-space:pre-line;padding:1rem;inset:unset;margin:0;border:none}.ui5-toast-root{height:100%;width:100%;padding:0;outline:none;box-sizing:border-box}:host([open]){display:block}:host(:not([placement])){bottom:var(--_ui5-v2-8-0_toast_vertical_offset);left:50%;transform:translate(-50%)}:host([placement="TopStart"]){top:var(--_ui5-v2-8-0_toast_vertical_offset);left:var(--_ui5-v2-8-0_toast_horizontal_offset)}:host([placement="MiddleStart"]){left:var(--_ui5-v2-8-0_toast_horizontal_offset);top:50%;transform:translateY(-50%)}:host([placement="BottomStart"]){left:var(--_ui5-v2-8-0_toast_horizontal_offset);bottom:var(--_ui5-v2-8-0_toast_vertical_offset)}:host([placement="TopCenter"]){top:var(--_ui5-v2-8-0_toast_vertical_offset);left:50%;transform:translate(-50%)}:host([placement="MiddleCenter"]){left:50%;top:50%;transform:translate(-50%,-50%)}:host([placement="BottomCenter"]){bottom:var(--_ui5-v2-8-0_toast_vertical_offset);left:50%;transform:translate(-50%)}:host([placement="TopEnd"]){right:var(--_ui5-v2-8-0_toast_horizontal_offset);top:var(--_ui5-v2-8-0_toast_vertical_offset)}:host([placement="MiddleEnd"]){right:var(--_ui5-v2-8-0_toast_horizontal_offset);top:50%;transform:translateY(-50%)}:host([placement="BottomEnd"]){right:var(--_ui5-v2-8-0_toast_horizontal_offset);bottom:var(--_ui5-v2-8-0_toast_vertical_offset)}:host([focused]){outline-width:var(--sapContent_FocusWidth);outline-style:var(--sapContent_FocusStyle);outline-color:var(--sapContent_FocusColor);outline-offset:var(--_ui5-v2-8-0_toast_offset_width)}
`;

// node_modules/@ui5/webcomponents/dist/Toast.js
var __decorate121 = function(decorators, target, key, desc) {
  var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
  if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
  else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
  return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var MIN_DURATION = 500;
var MAX_DURATION = 1e3;
var openedToasts = [];
var opener;
var globalListenerAdded = false;
var handleGlobalKeydown = (e) => {
  const isCtrl2 = e.metaKey || !isMac() && e.ctrlKey;
  const isMKey = e.key && e.key.toLowerCase() === "m";
  const isCombinationPressed = isCtrl2 && e.shiftKey && isMKey;
  const hasOpenToast = openedToasts.length;
  if (isCombinationPressed) {
    e.preventDefault();
    if (hasOpenToast) {
      openedToasts[0].focusable = true;
      if (openedToasts[0].focused) {
        openedToasts[0].focused = false;
        opener == null ? void 0 : opener.focus();
      } else {
        opener = document.activeElement;
        openedToasts[0].focus();
      }
    }
  }
};
var Toast = class Toast2 extends UI5Element_default {
  constructor() {
    super();
    this.duration = 3e3;
    this.placement = "BottomCenter";
    this.open = false;
    this.hover = false;
    this.focusable = false;
    this.focused = false;
    this._onfocusinFn = this._onfocusin.bind(this);
    this._onfocusoutFn = this._onfocusout.bind(this);
    this._onkeydownFn = this._onkeydown.bind(this);
    this._onmouseoverFn = this._onmouseover.bind(this);
    this._onmouseleaveFn = this._onmouseleave.bind(this);
    this._ontransitionendFn = this._ontransitionend.bind(this);
  }
  onBeforeRendering() {
    if (this.open) {
      openedToasts.pop();
      openedToasts.push(this);
    }
    requestAnimationFrame(() => {
      const transitionDuration = Math.min(this.effectiveDuration / 3, MAX_DURATION);
      this.style.transitionDuration = this.open ? `${transitionDuration}ms` : "";
      this.style.transitionDelay = this.open ? `${this.effectiveDuration - transitionDuration}ms` : "";
      this.style.opacity = this.open && !this.hover && !this.focused ? "0" : "";
    });
    if (!globalListenerAdded) {
      document.addEventListener("keydown", handleGlobalKeydown);
      globalListenerAdded = true;
    }
  }
  onAfterRendering() {
    if (!this.hasAttribute("popover")) {
      this.setAttribute("popover", "manual");
    }
    if (this.open) {
      this.showPopover();
    }
  }
  _onfocusin() {
    if (this.focusable) {
      this.focused = true;
    }
  }
  _onfocusout() {
    this.focused = false;
  }
  /**
   * If the minimum duration is lower than 500ms, we force
   * it to be 500ms, as described in the documentation.
   * @private
   */
  get effectiveDuration() {
    return this.duration < MIN_DURATION ? MIN_DURATION : this.duration;
  }
  _ontransitionend() {
    if (this.hover || this.focused) {
      return;
    }
    this.open = false;
    this.focusable = false;
    this.focused = false;
    this.fireDecoratorEvent("close");
    this.hidePopover();
  }
  _onmouseover() {
    this.hover = true;
  }
  _onmouseleave() {
    this.hover = false;
  }
  _onkeydown(e) {
    if (isEscape(e)) {
      this.focused = false;
      opener == null ? void 0 : opener.focus();
    }
  }
  get _tabindex() {
    return this.focused ? 0 : -1;
  }
  onEnterDOM() {
    this.addEventListener("focusin", this._onfocusinFn);
    this.addEventListener("focusout", this._onfocusoutFn);
    this.addEventListener("keydown", this._onkeydownFn);
    this.addEventListener("mouseover", this._onmouseoverFn);
    this.addEventListener("mouseleave", this._onmouseleaveFn);
    this.addEventListener("transitionend", this._ontransitionendFn);
    this.addEventListener("transitioncancel", this._ontransitionendFn);
  }
  onExitDOM() {
    this.removeEventListener("focusin", this._onfocusinFn);
    this.removeEventListener("focusout", this._onfocusoutFn);
    this.removeEventListener("keydown", this._onkeydownFn);
    this.removeEventListener("mouseover", this._onmouseoverFn);
    this.removeEventListener("mouseleave", this._onmouseleaveFn);
    this.removeEventListener("transitionend", this._ontransitionendFn);
    this.removeEventListener("transitioncancel", this._ontransitionendFn);
  }
};
__decorate121([
  property_default({ type: Number })
], Toast.prototype, "duration", void 0);
__decorate121([
  property_default()
], Toast.prototype, "placement", void 0);
__decorate121([
  property_default({ type: Boolean })
], Toast.prototype, "open", void 0);
__decorate121([
  property_default({ type: Boolean })
], Toast.prototype, "hover", void 0);
__decorate121([
  property_default({ type: Boolean })
], Toast.prototype, "focusable", void 0);
__decorate121([
  property_default({ type: Boolean })
], Toast.prototype, "focused", void 0);
Toast = __decorate121([
  customElement_default({
    tag: "ui5-toast",
    renderer: JsxRenderer_default,
    styles: Toast_css_default,
    template: ToastTemplate
  }),
  event_strict_default("close", {
    bubbles: true
  })
], Toast);
Toast.define();

// node_modules/@ui5/webcomponents-react/dist/webComponents/Toast/index.js
var Toast3 = withWebComponent("ui5-toast", ["duration", "placement"], ["open"], [], ["close"]);
Toast3.displayName = "Toast";

// node_modules/@ui5/webcomponents-react/dist/webComponents/ToggleButton/index.js
var ToggleButton3 = withWebComponent("ui5-toggle-button", ["accessibilityAttributes", "accessibleDescription", "accessibleName", "accessibleNameRef", "accessibleRole", "design", "endIcon", "icon", "tooltip", "type"], ["disabled", "pressed", "submits"], ["badge"], ["click"]);
ToggleButton3.displayName = "ToggleButton";

// node_modules/@ui5/webcomponents-react/dist/webComponents/Token/index.js
var Token3 = withWebComponent("ui5-token", ["text"], ["selected"], ["closeIcon"], []);
Token3.displayName = "Token";

// node_modules/@ui5/webcomponents-react/dist/webComponents/Tokenizer/index.js
var Tokenizer3 = withWebComponent("ui5-tokenizer", ["accessibleName", "accessibleNameRef"], ["disabled", "multiLine", "readonly", "showClearAll"], [], ["selection-change", "token-delete"]);
Tokenizer3.displayName = "Tokenizer";

// node_modules/@ui5/webcomponents/dist/ToolbarPopoverTemplate.js
function ToolbarPopoverTemplate() {
  return jsx(Popover_default, { class: "ui5-overflow-popover", placement: "Bottom", horizontalAlign: "End", onClose: this.onOverflowPopoverClosed, onOpen: this.onOverflowPopoverOpened, accessibleName: this.accInfo.popover.accessibleName, hideArrow: true, children: jsx("div", { class: {
    "ui5-overflow-list": true,
    "ui5-overflow-list--alignleft": this.hasItemWithText
  }, children: this.overflowItems.map((item2) => item2.toolbarPopoverTemplate.call(item2.context)) }) });
}

// node_modules/@ui5/webcomponents/dist/ToolbarTemplate.js
function ToolbarTemplate() {
  return jsxs(Fragment, { children: [jsxs("div", { class: {
    "ui5-tb-items": true,
    "ui5-tb-items-full-width": this.hasFlexibleSpacers
  }, role: this.accInfo.root.role, "aria-label": this.accInfo.root.accessibleName, children: [this.standardItems.map((item2) => item2.toolbarTemplate.call(item2.context)), jsx(Button_default, { "aria-hidden": this.hideOverflowButton, icon: overflow_default, design: "Transparent", onClick: this.toggleOverflow, class: {
    "ui5-tb-item": true,
    "ui5-tb-overflow-btn": true,
    "ui5-tb-overflow-btn-hidden": this.hideOverflowButton
  }, tooltip: this.accInfo.overflowButton.tooltip, accessibleName: this.accInfo.overflowButton.accessibleName, accessibilityAttributes: this.accInfo.overflowButton.accessibilityAttributes })] }), ToolbarPopoverTemplate.call(this)] });
}

// node_modules/@ui5/webcomponents/dist/generated/themes/Toolbar.css.js
registerThemePropertiesLoader("@ui5/webcomponents-theming", "sap_horizon", async () => parameters_bundle_css_default);
registerThemePropertiesLoader("@ui5/webcomponents", "sap_horizon", async () => parameters_bundle_css_default2);
var Toolbar_css_default = `:host(:not([hidden])){width:100%;height:var(--_ui5-v2-8-0-toolbar-height);display:flex;align-items:center;justify-content:flex-end;box-sizing:border-box;border-bottom:.0625rem solid var(--sapGroup_ContentBorderColor);padding:0 var(--_ui5-v2-8-0-toolbar-padding-left) 0 var(--_ui5-v2-8-0-toolbar-padding-right);background-color:var(--sapList_HeaderBackground)}:host([align-content="Start"]){justify-content:flex-start}.ui5-tb-items{width:100%;height:100%;display:inherit;align-items:inherit;justify-content:inherit}.ui5-tb-items-full-width{width:100%}.ui5-tb-item{flex-shrink:0}.ui5-tb-item{margin-inline-end:var(--_ui5-v2-8-0-toolbar-item-margin-right);margin-inline-start:var(--_ui5-v2-8-0-toolbar-item-margin-left)}.ui5-tb-overflow-btn,.ui5-tb-items:has(.ui5-tb-overflow-btn-hidden) .ui5-tb-item:nth-last-child(2){margin-inline-end:0;margin-inline-start:0}.ui5-tb-separator{height:var(--_ui5-v2-8-0-toolbar-separator-height);width:.0625rem;background:var(--sapToolbar_SeparatorColor);box-sizing:border-box}.ui5-tb-overflow-btn-hidden{visibility:hidden;position:absolute}:host([design="Transparent"]){background-color:transparent}
`;

// node_modules/@ui5/webcomponents/dist/generated/themes/ToolbarPopover.css.js
registerThemePropertiesLoader("@ui5/webcomponents-theming", "sap_horizon", async () => parameters_bundle_css_default);
registerThemePropertiesLoader("@ui5/webcomponents", "sap_horizon", async () => parameters_bundle_css_default2);
var ToolbarPopover_css_default = `.ui5-overflow-popover::part(content){padding:var(--_ui5-v2-8-0_toolbar_overflow_padding)}.ui5-overflow-list{display:flex;flex-direction:column;justify-content:center;align-items:center}.ui5-tb-popover-item{width:100%}.ui5-tb-popover-item:not(:last-child){margin-bottom:.25rem}.ui5-tb-separator-in-overflow{display:none;height:.0625rem;background:var(--sapToolbar_SeparatorColor);box-sizing:border-box}.ui5-tb-separator-in-overflow[visible]{display:block}
`;

// node_modules/@ui5/webcomponents/dist/ToolbarRegistry.js
var registry2 = getSharedResource_default("ToolbarItem.registry", /* @__PURE__ */ new Map());
var registerToolbarItem = (ElementClass) => {
  registry2.set(ElementClass.getMetadata().getPureTag(), ElementClass);
};
var getRegisteredToolbarItem = (name105) => {
  if (!registry2.has(name105)) {
    throw new Error(`No template found for ${name105}`);
  }
  return registry2.get(name105);
};
var getRegisteredStyles = () => {
  return [...registry2.values()].map((ElementClass) => ElementClass.styles);
};

// node_modules/@ui5/webcomponents/dist/Toolbar.js
var __decorate122 = function(decorators, target, key, desc) {
  var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
  if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
  else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
  return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var Toolbar_1;
function calculateCSSREMValue(styleSet, propertyName) {
  return Number(styleSet.getPropertyValue(propertyName).replace("rem", "")) * parseInt(getComputedStyle(document.body).getPropertyValue("font-size"));
}
function parsePxValue(styleSet, propertyName) {
  return Number(styleSet.getPropertyValue(propertyName).replace("px", ""));
}
var Toolbar = Toolbar_1 = class Toolbar2 extends UI5Element_default {
  static get styles() {
    const styles2 = getRegisteredStyles();
    return [
      Toolbar_css_default,
      ToolbarPopover_css_default,
      ...styles2
    ];
  }
  constructor() {
    super();
    this.alignContent = "End";
    this.reverseOverflow = false;
    this.design = "Solid";
    this.itemsToOverflow = [];
    this.itemsWidth = 0;
    this.minContentWidth = 0;
    this.popoverOpen = false;
    this.itemsWidthMeasured = false;
    this.ITEMS_WIDTH_MAP = /* @__PURE__ */ new Map();
    this._onResize = this.onResize.bind(this);
    this._onCloseOverflow = this.closeOverflow.bind(this);
  }
  /**
   * Read-only members
   */
  get overflowButtonSize() {
    var _a;
    return ((_a = this.overflowButtonDOM) == null ? void 0 : _a.getBoundingClientRect().width) || 0;
  }
  get padding() {
    const toolbarComputedStyle = getComputedStyle(this.getDomRef());
    return calculateCSSREMValue(toolbarComputedStyle, getScopedVarName("--_ui5-toolbar-padding-left")) + calculateCSSREMValue(toolbarComputedStyle, getScopedVarName("--_ui5-toolbar-padding-right"));
  }
  get alwaysOverflowItems() {
    return this.items.filter((item2) => item2.overflowPriority === ToolbarItemOverflowBehavior_default.AlwaysOverflow);
  }
  get movableItems() {
    return this.items.filter((item2) => item2.overflowPriority !== ToolbarItemOverflowBehavior_default.AlwaysOverflow && item2.overflowPriority !== ToolbarItemOverflowBehavior_default.NeverOverflow);
  }
  get overflowItems() {
    const overflowItems = this.getItemsInfo(this.itemsToOverflow.filter((item2) => !item2.ignoreSpace));
    return this.reverseOverflow ? overflowItems.reverse() : overflowItems;
  }
  get standardItems() {
    return this.getItemsInfo(this.items.filter((item2) => this.itemsToOverflow.indexOf(item2) === -1));
  }
  get hideOverflowButton() {
    return this.itemsToOverflow.filter((item2) => !(item2.ignoreSpace || item2.isSeparator)).length === 0;
  }
  get interactiveItemsCount() {
    return this.items.filter((item2) => item2.isInteractive).length;
  }
  /**
   * Accessibility
   */
  get hasAriaSemantics() {
    return this.interactiveItemsCount > 1;
  }
  get accessibleRole() {
    return this.hasAriaSemantics ? "toolbar" : void 0;
  }
  get ariaLabelText() {
    return this.hasAriaSemantics ? getEffectiveAriaLabelText(this) : void 0;
  }
  get accInfo() {
    var _a;
    return {
      root: {
        role: this.accessibleRole,
        accessibleName: this.ariaLabelText
      },
      overflowButton: {
        accessibleName: Toolbar_1.i18nBundle.getText(TOOLBAR_OVERFLOW_BUTTON_ARIA_LABEL),
        tooltip: Toolbar_1.i18nBundle.getText(TOOLBAR_OVERFLOW_BUTTON_ARIA_LABEL),
        accessibilityAttributes: {
          expanded: (_a = this.overflowButtonDOM) == null ? void 0 : _a.accessibilityAttributes.expanded,
          hasPopup: "menu"
        }
      },
      popover: {
        accessibleName: Toolbar_1.i18nBundle.getText(TOOLBAR_POPOVER_AVAILABLE_VALUES)
      }
    };
  }
  /**
   * Toolbar Overflow Popover
   */
  get overflowButtonDOM() {
    return this.shadowRoot.querySelector(".ui5-tb-overflow-btn");
  }
  get itemsDOM() {
    return this.shadowRoot.querySelector(".ui5-tb-items");
  }
  get hasItemWithText() {
    return this.itemsToOverflow.some((item2) => item2.containsText);
  }
  get hasFlexibleSpacers() {
    return this.items.some((item2) => item2.hasFlexibleWidth);
  }
  /**
   * Lifecycle methods
   */
  onEnterDOM() {
    ResizeHandler_default.register(this, this._onResize);
  }
  onExitDOM() {
    ResizeHandler_default.deregister(this, this._onResize);
  }
  onInvalidation(changeInfo) {
    if (changeInfo.reason === "childchange" && changeInfo.child === this.itemsToOverflow[0]) {
      this.onToolbarItemChange();
    }
  }
  onBeforeRendering() {
    this.detachListeners();
    this.attachListeners();
    this.preprocessItems();
  }
  async onAfterRendering() {
    await renderFinished();
    this.storeItemsWidth();
    this.processOverflowLayout();
  }
  /**
   * Returns if the overflow popup is open.
   * @public
   */
  isOverflowOpen() {
    const overflowPopover = this.getOverflowPopover();
    return overflowPopover.open;
  }
  openOverflow() {
    const overflowPopover = this.getOverflowPopover();
    overflowPopover.opener = this.overflowButtonDOM;
    overflowPopover.open = true;
    this.reverseOverflow = overflowPopover.actualPlacement === "Top";
  }
  closeOverflow() {
    const overflowPopover = this.getOverflowPopover();
    overflowPopover.open = false;
  }
  toggleOverflow() {
    if (this.popoverOpen) {
      this.closeOverflow();
    } else {
      this.openOverflow();
    }
  }
  getOverflowPopover() {
    return this.shadowRoot.querySelector(".ui5-overflow-popover");
  }
  /**
   * Layout management
   */
  processOverflowLayout() {
    if (this.offsetWidth === 0) {
      return;
    }
    const containerWidth = this.offsetWidth - this.padding;
    const contentWidth = this.itemsWidth;
    let overflowSpace = contentWidth - containerWidth + this.overflowButtonSize;
    if (contentWidth <= containerWidth) {
      overflowSpace = 0;
    }
    if (this.width === containerWidth && this.contentWidth === contentWidth) {
      return;
    }
    this.distributeItems(overflowSpace);
    this.width = containerWidth;
    this.contentWidth = contentWidth;
  }
  storeItemsWidth() {
    let totalWidth = 0, minWidth = 0;
    this.items.forEach((item2) => {
      const itemWidth = this.getItemWidth(item2);
      totalWidth += itemWidth;
      if (item2.overflowPriority === ToolbarItemOverflowBehavior_default.NeverOverflow) {
        minWidth += itemWidth;
      }
      this.ITEMS_WIDTH_MAP.set(item2._id, itemWidth);
    });
    if (minWidth !== this.minContentWidth) {
      const spaceAroundContent = this.offsetWidth - this.getDomRef().offsetWidth;
      this.fireDecoratorEvent("_min-content-width-change", {
        minWidth: minWidth + spaceAroundContent + this.overflowButtonSize
      });
    }
    this.itemsWidth = totalWidth;
    this.minContentWidth = minWidth;
  }
  distributeItems(overflowSpace = 0) {
    const movableItems = this.movableItems.reverse();
    let index = 0;
    let currentItem = movableItems[index];
    this.itemsToOverflow = [];
    this.distributeItemsThatAlwaysOverflow();
    while (overflowSpace > 0 && currentItem) {
      this.itemsToOverflow.unshift(currentItem);
      overflowSpace -= this.getCachedItemWidth(currentItem == null ? void 0 : currentItem._id) || 0;
      index++;
      currentItem = movableItems[index];
    }
    if (index < movableItems.length) {
      let lastItem = movableItems[index];
      while (index <= movableItems.length - 1 && lastItem.isSeparator) {
        this.itemsToOverflow.unshift(lastItem);
        index++;
        lastItem = movableItems[index];
      }
    }
    this.setSeperatorsVisibilityInOverflow();
  }
  distributeItemsThatAlwaysOverflow() {
    this.alwaysOverflowItems.forEach((item2) => {
      this.itemsToOverflow.push(item2);
    });
  }
  setSeperatorsVisibilityInOverflow() {
    this.itemsToOverflow.forEach((item2, idx, items3) => {
      if (item2.isSeparator) {
        item2.visible = this.shouldShowSeparatorInOverflow(idx, items3);
      }
    });
  }
  shouldShowSeparatorInOverflow(separatorIdx, overflowItems) {
    let foundPrevNonSeparatorItem = false;
    let foundNextNonSeperatorItem = false;
    overflowItems.forEach((item2, idx) => {
      if (idx < separatorIdx && !item2.isSeparator) {
        foundPrevNonSeparatorItem = true;
      }
      if (idx > separatorIdx && !item2.isSeparator) {
        foundNextNonSeperatorItem = true;
      }
    });
    return foundPrevNonSeparatorItem && foundNextNonSeperatorItem;
  }
  /**
   * Event Handlers
   */
  onOverflowPopoverClosed() {
    this.popoverOpen = false;
    if (this.overflowButtonDOM) {
      this.overflowButtonDOM.accessibilityAttributes.expanded = false;
    }
  }
  onBeforeClose(e) {
    e.preventDefault();
  }
  onOverflowPopoverOpened() {
    this.popoverOpen = true;
    if (this.overflowButtonDOM) {
      this.overflowButtonDOM.accessibilityAttributes.expanded = true;
    }
  }
  onResize() {
    if (!this.itemsWidth) {
      return;
    }
    this.closeOverflow();
    this.processOverflowLayout();
  }
  /**
   * Private members
   */
  attachListeners() {
    this.addEventListener("close-overflow", this._onCloseOverflow);
  }
  detachListeners() {
    this.removeEventListener("close-overflow", this._onCloseOverflow);
  }
  onToolbarItemChange() {
    this.itemsToOverflow = [];
    this.contentWidth = 0;
  }
  getItemsInfo(items3) {
    return items3.map((item2) => {
      const ctor = item2.constructor;
      const ElementClass = getRegisteredToolbarItem(ctor.getMetadata().getPureTag());
      if (!ElementClass) {
        return null;
      }
      const toolbarItem = {
        toolbarTemplate: ElementClass.toolbarTemplate,
        toolbarPopoverTemplate: ElementClass.toolbarPopoverTemplate,
        context: item2
      };
      return toolbarItem;
    }).filter((item2) => !!item2);
  }
  getItemWidth(item2) {
    if (item2.ignoreSpace || item2.isSeparator) {
      return 0;
    }
    const id = item2._id;
    const renderedItem = this.getRegisteredToolbarItemByID(id);
    let itemWidth = 0;
    if (renderedItem) {
      const ItemCSSStyleSet = getComputedStyle(renderedItem);
      itemWidth = renderedItem.offsetWidth + parsePxValue(ItemCSSStyleSet, "margin-inline-end") + parsePxValue(ItemCSSStyleSet, "margin-inline-start");
    } else {
      itemWidth = this.getCachedItemWidth(id) || 0;
    }
    return Math.ceil(itemWidth);
  }
  getCachedItemWidth(id) {
    return this.ITEMS_WIDTH_MAP.get(id);
  }
  getItemByID(id) {
    return this.items.find((item2) => item2._id === id);
  }
  getRegisteredToolbarItemByID(id) {
    return this.itemsDOM.querySelector(`[data-ui5-external-action-item-id="${id}"]`);
  }
  preprocessItems() {
    this.items.forEach((item2) => {
      item2._getRealDomRef = () => this.getDomRef().querySelector(`[data-ui5-stable*=${item2.stableDomRef}]`) ?? this.getOverflowPopover().querySelector(`[data-ui5-stable*=${item2.stableDomRef}]`);
    });
  }
};
__decorate122([
  property_default()
], Toolbar.prototype, "alignContent", void 0);
__decorate122([
  property_default({ type: Number })
], Toolbar.prototype, "width", void 0);
__decorate122([
  property_default({ type: Number })
], Toolbar.prototype, "contentWidth", void 0);
__decorate122([
  property_default({ type: Boolean })
], Toolbar.prototype, "reverseOverflow", void 0);
__decorate122([
  property_default()
], Toolbar.prototype, "accessibleName", void 0);
__decorate122([
  property_default()
], Toolbar.prototype, "accessibleNameRef", void 0);
__decorate122([
  property_default()
], Toolbar.prototype, "design", void 0);
__decorate122([
  slot_default({ "default": true, type: HTMLElement, invalidateOnChildChange: true })
], Toolbar.prototype, "items", void 0);
__decorate122([
  i18n_default("@ui5/webcomponents")
], Toolbar, "i18nBundle", void 0);
Toolbar = Toolbar_1 = __decorate122([
  customElement_default({
    tag: "ui5-toolbar",
    languageAware: true,
    renderer: JsxRenderer_default,
    template: ToolbarTemplate
  }),
  event_strict_default("_min-content-width-change", {
    bubbles: true
  })
], Toolbar);
Toolbar.define();

// node_modules/@ui5/webcomponents-react/dist/webComponents/Toolbar/index.js
var Toolbar3 = withWebComponent("ui5-toolbar", ["accessibleName", "accessibleNameRef", "alignContent", "design"], [], [], []);
Toolbar3.displayName = "Toolbar";

// node_modules/@ui5/webcomponents/dist/ToolbarItem.js
var __decorate123 = function(decorators, target, key, desc) {
  var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
  if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
  else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
  return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var ToolbarItem = (
  /**
   * @class
   *
   * Represents an abstract class for items, used in the `ui5-toolbar`.
   * @constructor
   * @extends UI5Element
   * @abstract
   * @public
   * @since 1.17.0
   */
  class ToolbarItem2 extends UI5Element_default {
    constructor() {
      super(...arguments);
      this.overflowPriority = "Default";
      this.preventOverflowClosing = false;
    }
    /**
    * Defines if the width of the item should be ignored in calculating the whole width of the toolbar
    * @protected
    */
    get ignoreSpace() {
      return false;
    }
    /**
     * Returns if the item contains text. Used to position the text properly inside the popover.
     * Aligned left if the item has text, default aligned otherwise.
     * @protected
     */
    get containsText() {
      return false;
    }
    /**
     * Returns if the item is flexible. An item that is returning true for this property will make
     * the toolbar expand to fill the 100% width of its container.
     * @protected
     */
    get hasFlexibleWidth() {
      return false;
    }
    /**
     * Returns if the item is interactive.
     * This value is used to determinate if the toolbar should have its accessibility role and attributes set.
     * At least two interactive items are needed for the toolbar to have the role="toolbar" attribute set.
     * @protected
     */
    get isInteractive() {
      return true;
    }
    /**
     * Returns if the item is separator.
     * @protected
     */
    get isSeparator() {
      return false;
    }
    /**
     * Returns the template for the toolbar item.
     * @protected
     */
    static get toolbarTemplate() {
      throw new Error("Template must be defined");
    }
    /**
     * Returns the template for the toolbar item popover.
     * @protected
     */
    static get toolbarPopoverTemplate() {
      throw new Error("Popover template must be defined");
    }
    get stableDomRef() {
      return this.getAttribute("stable-dom-ref") || `${this._id}-stable-dom-ref`;
    }
  }
);
__decorate123([
  property_default()
], ToolbarItem.prototype, "overflowPriority", void 0);
__decorate123([
  property_default({ type: Boolean })
], ToolbarItem.prototype, "preventOverflowClosing", void 0);
ToolbarItem = __decorate123([
  event_strict_default("close-overflow", {
    bubbles: true
  })
  /**
   * @class
   *
   * Represents an abstract class for items, used in the `ui5-toolbar`.
   * @constructor
   * @extends UI5Element
   * @abstract
   * @public
   * @since 1.17.0
   */
], ToolbarItem);
var ToolbarItem_default = ToolbarItem;

// node_modules/@ui5/webcomponents/dist/ToolbarButtonTemplate.js
function ToolbarButtonTemplate() {
  return jsx(Button_default, { class: "ui5-tb-button ui5-tb-item", id: this.id, style: {
    width: this.width,
    display: this.hidden ? "none" : "inline-block"
  }, icon: this.icon, endIcon: this.endIcon, tooltip: this.tooltip, accessibleName: this.accessibleName, accessibleNameRef: this.accessibleNameRef, accessibilityAttributes: this.accessibilityAttributes, design: this.design, disabled: this.disabled, hidden: this.hidden, "data-ui5-external-action-item-id": this._id, "data-ui5-stable": this.stableDomRef, onClick: (...args) => this.onClick(...args), children: this.text });
}

// node_modules/@ui5/webcomponents/dist/ToolbarPopoverButtonTemplate.js
function ToolbarPopoverButtonTemplate() {
  return jsx(Button_default, { icon: this.icon, endIcon: this.endIcon, accessibleName: this.accessibleName, accessibleNameRef: this.accessibleNameRef, accessibilityAttributes: this.accessibilityAttributes, tooltip: this.tooltip, design: this.design, disabled: this.disabled, hidden: this.hidden, class: "ui5-tb-popover-button ui5-tb-popover-item", "data-ui5-external-action-item-id": this._id, "data-ui5-stable": this.stableDomRef, onClick: (...args) => this.onClick(...args), children: this.text });
}

// node_modules/@ui5/webcomponents/dist/generated/themes/ToolbarButtonPopover.css.js
registerThemePropertiesLoader("@ui5/webcomponents-theming", "sap_horizon", async () => parameters_bundle_css_default);
registerThemePropertiesLoader("@ui5/webcomponents", "sap_horizon", async () => parameters_bundle_css_default2);
var ToolbarButtonPopover_css_default = `:not([icon-only]).ui5-tb-popover-button::part(button){justify-content:start}
`;

// node_modules/@ui5/webcomponents/dist/ToolbarButton.js
var __decorate124 = function(decorators, target, key, desc) {
  var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
  if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
  else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
  return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var ToolbarButton = class ToolbarButton2 extends ToolbarItem_default {
  constructor() {
    super(...arguments);
    this.disabled = false;
    this.design = "Default";
    this.accessibilityAttributes = {};
  }
  get styles() {
    return {
      width: this.width,
      display: this.hidden ? "none" : "inline-block"
    };
  }
  get containsText() {
    return true;
  }
  static get toolbarTemplate() {
    return ToolbarButtonTemplate;
  }
  static get toolbarPopoverTemplate() {
    return ToolbarPopoverButtonTemplate;
  }
  onClick(e) {
    e.stopImmediatePropagation();
    const prevented = !this.fireDecoratorEvent("click", { targetRef: e.target });
    if (!prevented && !this.preventOverflowClosing) {
      this.fireDecoratorEvent("close-overflow");
    }
  }
};
__decorate124([
  property_default({ type: Boolean })
], ToolbarButton.prototype, "disabled", void 0);
__decorate124([
  property_default()
], ToolbarButton.prototype, "design", void 0);
__decorate124([
  property_default()
], ToolbarButton.prototype, "icon", void 0);
__decorate124([
  property_default()
], ToolbarButton.prototype, "endIcon", void 0);
__decorate124([
  property_default()
], ToolbarButton.prototype, "tooltip", void 0);
__decorate124([
  property_default()
], ToolbarButton.prototype, "accessibleName", void 0);
__decorate124([
  property_default()
], ToolbarButton.prototype, "accessibleNameRef", void 0);
__decorate124([
  property_default({ type: Object })
], ToolbarButton.prototype, "accessibilityAttributes", void 0);
__decorate124([
  property_default()
], ToolbarButton.prototype, "text", void 0);
__decorate124([
  property_default()
], ToolbarButton.prototype, "width", void 0);
ToolbarButton = __decorate124([
  customElement_default({
    tag: "ui5-toolbar-button",
    styles: ToolbarButtonPopover_css_default
  }),
  event_strict_default("click", {
    bubbles: true,
    cancelable: true
  })
], ToolbarButton);
registerToolbarItem(ToolbarButton);
ToolbarButton.define();

// node_modules/@ui5/webcomponents-react/dist/webComponents/ToolbarButton/index.js
var ToolbarButton3 = withWebComponent("ui5-toolbar-button", ["accessibilityAttributes", "accessibleName", "accessibleNameRef", "design", "endIcon", "icon", "overflowPriority", "text", "tooltip", "width"], ["disabled", "preventOverflowClosing"], [], ["click"]);
ToolbarButton3.displayName = "ToolbarButton";

// node_modules/@ui5/webcomponents/dist/ToolbarSelectTemplate.js
function ToolbarSelectTemplate() {
  return jsx(Select_default, { class: "ui5-tb-item", style: this.styles, "data-ui5-external-action-item-id": this._id, valueState: this.valueState, disabled: this.disabled, accessibleName: this.accessibleName, accessibleNameRef: this.accessibleNameRef, onClick: (...args) => this.onClick(...args), onClose: (...args) => this.onClose(...args), onOpen: (...args) => this.onOpen(...args), onChange: (...args) => this.onChange(...args), children: this.options.map((option, index) => jsx(Option_default, { selected: option.selected, "data-ui5-external-action-item-index": index, children: option.textContent })) });
}

// node_modules/@ui5/webcomponents/dist/ToolbarPopoverSelectTemplate.js
function ToolbarPopoverSelectTemplate() {
  return jsx(Select_default, { class: "ui5-tb-popover-item", "data-ui5-external-action-item-id": this._id, valueState: this.valueState, disabled: this.disabled, accessibleName: this.accessibleName, accessibleNameRef: this.accessibleNameRef, onClick: (...args) => this.onClick(...args), onClose: (...args) => this.onClose(...args), onOpen: (...args) => this.onOpen(...args), onChange: (...args) => this.onChange(...args), children: this.options.map((option, index) => jsx(Option_default, { selected: option.selected, "data-ui5-external-action-item-index": index, children: option.textContent })) });
}

// node_modules/@ui5/webcomponents/dist/ToolbarSelect.js
var __decorate125 = function(decorators, target, key, desc) {
  var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
  if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
  else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
  return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var ToolbarSelect = class ToolbarSelect2 extends ToolbarItem_default {
  constructor() {
    super(...arguments);
    this.valueState = "None";
    this.disabled = false;
  }
  static get toolbarTemplate() {
    return ToolbarSelectTemplate;
  }
  static get toolbarPopoverTemplate() {
    return ToolbarPopoverSelectTemplate;
  }
  onClick(e) {
    e.stopImmediatePropagation();
    const prevented = !this.fireDecoratorEvent("click", { targetRef: e.target });
    if (prevented && !this.preventOverflowClosing) {
      this.fireDecoratorEvent("close-overflow");
    }
  }
  onOpen(e) {
    e.stopImmediatePropagation();
    const prevented = !this.fireDecoratorEvent("open", { targetRef: e.target });
    if (prevented) {
      this.fireDecoratorEvent("close-overflow");
    }
  }
  onClose(e) {
    e.stopImmediatePropagation();
    const prevented = !this.fireDecoratorEvent("close", { targetRef: e.target });
    if (prevented) {
      this.fireDecoratorEvent("close-overflow");
    }
  }
  onChange(e) {
    e.stopImmediatePropagation();
    const prevented = !this.fireDecoratorEvent("change", { ...e.detail, targetRef: e.target });
    if (!prevented) {
      this.fireDecoratorEvent("close-overflow");
    }
    this._syncOptions(e.detail.selectedOption);
  }
  _syncOptions(selectedOption) {
    const selectedOptionIndex = Number(selectedOption == null ? void 0 : selectedOption.getAttribute("data-ui5-external-action-item-index"));
    this.options.forEach((option, index) => {
      if (index === selectedOptionIndex) {
        option.setAttribute("selected", "");
      } else {
        option.removeAttribute("selected");
      }
    });
  }
  get styles() {
    return {
      width: this.width
    };
  }
};
__decorate125([
  property_default()
], ToolbarSelect.prototype, "width", void 0);
__decorate125([
  slot_default({ "default": true, type: HTMLElement, invalidateOnChildChange: true })
], ToolbarSelect.prototype, "options", void 0);
__decorate125([
  property_default()
], ToolbarSelect.prototype, "valueState", void 0);
__decorate125([
  property_default({ type: Boolean })
], ToolbarSelect.prototype, "disabled", void 0);
__decorate125([
  property_default()
], ToolbarSelect.prototype, "accessibleName", void 0);
__decorate125([
  property_default()
], ToolbarSelect.prototype, "accessibleNameRef", void 0);
ToolbarSelect = __decorate125([
  customElement_default({
    tag: "ui5-toolbar-select"
  }),
  event_strict_default("change", {
    bubbles: true,
    cancelable: true
  }),
  event_strict_default("open", {
    bubbles: true
  }),
  event_strict_default("close")
], ToolbarSelect);
registerToolbarItem(ToolbarSelect);
ToolbarSelect.define();

// node_modules/@ui5/webcomponents-react/dist/webComponents/ToolbarSelect/index.js
var ToolbarSelect3 = withWebComponent("ui5-toolbar-select", ["accessibleName", "accessibleNameRef", "overflowPriority", "valueState", "width"], ["disabled", "preventOverflowClosing"], [], ["change", "close", "open"]);
ToolbarSelect3.displayName = "ToolbarSelect";

// node_modules/@ui5/webcomponents/dist/ToolbarSelectOption.js
var __decorate126 = function(decorators, target, key, desc) {
  var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
  if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
  else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
  return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var ToolbarSelectOption = class ToolbarSelectOption2 extends UI5Element_default {
  constructor() {
    super(...arguments);
    this.selected = false;
  }
};
__decorate126([
  property_default({ type: Boolean })
], ToolbarSelectOption.prototype, "selected", void 0);
__decorate126([
  slot_default({ type: Node, "default": true, invalidateOnChildChange: true })
], ToolbarSelectOption.prototype, "text", void 0);
ToolbarSelectOption = __decorate126([
  customElement_default("ui5-toolbar-select-option")
], ToolbarSelectOption);
ToolbarSelectOption.define();

// node_modules/@ui5/webcomponents-react/dist/webComponents/ToolbarSelectOption/index.js
var ToolbarSelectOption3 = withWebComponent("ui5-toolbar-select-option", [], ["selected"], [], []);
ToolbarSelectOption3.displayName = "ToolbarSelectOption";

// node_modules/@ui5/webcomponents/dist/ToolbarSeparatorTemplate.js
function ToolbarSeparatorTemplate() {
  return jsx("div", { class: "ui5-tb-separator ui5-tb-item", "data-ui5-external-action-item-id": this._id });
}

// node_modules/@ui5/webcomponents/dist/ToolbarPopoverSeparatorTemplate.js
function ToolbarPopoverSeparator() {
  return jsx("div", { class: "ui5-tb-separator-in-overflow ui5-tb-popover-item", "data-ui5-external-action-item-id": this._id });
}

// node_modules/@ui5/webcomponents/dist/ToolbarSeparator.js
var __decorate127 = function(decorators, target, key, desc) {
  var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
  if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
  else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
  return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var ToolbarSeparator = class ToolbarSeparator2 extends ToolbarItem_default {
  constructor() {
    super(...arguments);
    this.visible = false;
  }
  static get toolbarTemplate() {
    return ToolbarSeparatorTemplate;
  }
  static get toolbarPopoverTemplate() {
    return ToolbarPopoverSeparator;
  }
  get isSeparator() {
    return true;
  }
  get isInteractive() {
    return false;
  }
};
__decorate127([
  property_default({ type: Boolean })
], ToolbarSeparator.prototype, "visible", void 0);
ToolbarSeparator = __decorate127([
  customElement_default({
    tag: "ui5-toolbar-separator"
  })
], ToolbarSeparator);
registerToolbarItem(ToolbarSeparator);
ToolbarSeparator.define();

// node_modules/@ui5/webcomponents-react/dist/webComponents/ToolbarSeparator/index.js
var ToolbarSeparator3 = withWebComponent("ui5-toolbar-separator", ["overflowPriority"], ["preventOverflowClosing"], [], []);
ToolbarSeparator3.displayName = "ToolbarSeparator";

// node_modules/@ui5/webcomponents/dist/ToolbarSpacerTemplate.js
function ToolbarSpacerTemplate() {
  return jsx("div", { class: "ui5-tb-spacer ui5-tb-item", style: this.styles, role: "separator", "data-ui5-external-action-item-id": this._id });
}

// node_modules/@ui5/webcomponents/dist/ToolbarSpacer.js
var __decorate128 = function(decorators, target, key, desc) {
  var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
  if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
  else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
  return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var ToolbarSpacer = class ToolbarSpacer2 extends ToolbarItem_default {
  get styles() {
    return this.width ? { width: this.width } : { flex: "auto" };
  }
  get ignoreSpace() {
    return this.width === "" || this.width === void 0 || this.width === "auto";
  }
  get hasFlexibleWidth() {
    return this.width === "" || this.width === void 0 || this.width === "auto";
  }
  static get toolbarTemplate() {
    return ToolbarSpacerTemplate;
  }
  static get toolbarPopoverTemplate() {
    return ToolbarSpacerTemplate;
  }
  get isInteractive() {
    return false;
  }
};
__decorate128([
  property_default()
], ToolbarSpacer.prototype, "width", void 0);
ToolbarSpacer = __decorate128([
  customElement_default({
    tag: "ui5-toolbar-spacer"
  })
], ToolbarSpacer);
registerToolbarItem(ToolbarSpacer);
ToolbarSpacer.define();

// node_modules/@ui5/webcomponents-react/dist/webComponents/ToolbarSpacer/index.js
var ToolbarSpacer3 = withWebComponent("ui5-toolbar-spacer", ["overflowPriority", "width"], ["preventOverflowClosing"], [], []);
ToolbarSpacer3.displayName = "ToolbarSpacer";

// node_modules/@ui5/webcomponents/dist/TreeItemBaseTemplate.js
var predefinedHooks3 = {
  listItemPreContent,
  listItemContent: listItemContent8,
  imageBegin: imageBegin2,
  iconBegin: iconBegin3
};
function TreeItemBaseTemplate(hooks) {
  const currentHooks = { ...predefinedHooks3, ...hooks };
  return jsxs("div", { children: [ListItemTemplate.call(this, currentHooks), listItemPostContent2.call(this)] });
}
function listItemPreContent() {
  return jsx("div", { class: "ui5-li-tree-toggle-box", style: this.styles.preContent, children: this.showToggleButton && jsx(Icon_default, {
    part: "toggle-icon",
    class: "ui5-li-tree-toggle-icon",
    name: this.expanded ? navigation_down_arrow_default : navigation_right_arrow_default,
    showTooltip: true,
    accessibleName: this.iconAccessibleName,
    // @ts-expect-error
    onClick: this._toggleClick
  }) });
}
function listItemPostContent2() {
  if (this.expanded) {
    return jsx("ul", { role: "group", id: `${this._id}-subtree`, class: "ui5-tree-li-subtree", children: jsx("slot", {}) });
  }
}
function listItemContent8() {
}
function imageBegin2() {
}
function iconBegin3() {
  return this.icon ? jsx(Icon_default, { part: "icon", name: this.icon, class: "ui5-li-icon" }) : jsx(Fragment, {});
}

// node_modules/@ui5/webcomponents/dist/generated/themes/TreeItem.css.js
registerThemePropertiesLoader("@ui5/webcomponents-theming", "sap_horizon", async () => parameters_bundle_css_default);
registerThemePropertiesLoader("@ui5/webcomponents", "sap_horizon", async () => parameters_bundle_css_default2);
var TreeItem_css_default = `.ui5-hidden-text{position:absolute;clip:rect(1px,1px,1px,1px);user-select:none;left:-1000px;top:-1000px;pointer-events:none;font-size:0}:host(:not([hidden])){display:block;position:relative}.ui5-li-tree-text-wrapper{flex:auto}.ui5-li-root-tree{padding-inline-start:0}:host(:not([level="1"])) .ui5-li-root{border-color:var(--sapList_AlternatingBackground)}:host([_toggle-button-end][selected]:not([level="1"])) .ui5-li-root{border-bottom:var(--ui5-v2-8-0-listitem-selected-border-bottom)}:host([_toggle-button-end]) .ui5-li-root-tree:hover,:host([_selection-mode]:not([_selection-mode="None"],[_selection-mode="Delete"],[active])) .ui5-li-root-tree:hover{cursor:pointer}:host([_toggle-button-end]:not([selected])) .ui5-li-root-tree:hover,:host(:not([_selection-mode="None"]):not([_selection-mode="Delete"]):not([active]):not([selected])) .ui5-li-root-tree:hover{background:var(--sapList_Hover_Background)}:host(:not([level="1"]):not([active]):not([selected])) .ui5-li-root-tree{background:var(--sapList_AlternatingBackground)}:host([_toggle-button-end]:not([level="1"])) .ui5-li-root-tree{background:var(--ui5-v2-8-0-listitem-background-color)}:host([_toggle-button-end][selected]:not([level="1"])) .ui5-li-root-tree{background:var(--sapList_SelectionBackgroundColor)}:host(:not([_selection-mode="None"]):not([_selection-mode="Delete"]):not([active])[selected]) .ui5-li-root-tree:hover{background-color:var(--sapList_Hover_SelectionBackground)}.ui5-li-tree-toggle-box{min-width:var(--_ui5-v2-8-0-tree-toggle-box-width);min-height:var(--_ui5-v2-8-0-tree-toggle-box-height);display:flex;align-items:center;justify-content:center;flex-shrink:0}.ui5-li-tree-toggle-icon{width:var(--_ui5-v2-8-0-tree-toggle-icon-size);height:var(--_ui5-v2-8-0-tree-toggle-icon-size);color:var(--sapContent_IconColor);cursor:pointer}:host([actionable]) .ui5-li-tree-toggle-icon{color:var(--sapButton_TextColor)}:host([active][actionable]) .ui5-li-tree-toggle-icon{color:var(--sapList_Active_TextColor)}:host{height:unset}.ui5-li-root{height:var(--_ui5-v2-8-0_list_item_base_height)}:host([selected]){background:unset}:host([selected]) .ui5-li-root{background:var(--sapList_SelectionBackgroundColor)}:host([has-border]){border-bottom:unset}:host([has-border]) .ui5-li-root{border-bottom:var(--ui5-v2-8-0-listitem-border-bottom)}:host(:not([focused])[selected][has-border]){border-bottom:unset}:host(:not([focused])[selected][has-border]) .ui5-li-root{border-bottom:var(--ui5-v2-8-0-listitem-selected-border-bottom)}:host([focused][selected]){border-bottom:unset}:host([focused][selected]) .ui5-li-root{border-bottom:var(--ui5-v2-8-0-listitem-focused-selected-border-bottom)}.ui5-tree-li-subtree{margin:0;padding:0;list-style:none}:host([focused][active]) .ui5-li-root-tree{background:var(--sapList_Active_Background)}:host([focused][active]) .ui5-li-root-tree .ui5-li-tree-toggle-icon,:host([focused][active]) .ui5-li-root-tree .ui5-li-title,:host([focused][active]) .ui5-li-root-tree .ui5-li-additional-text{color:var(--sapList_Active_TextColor)}
`;

// node_modules/@ui5/webcomponents/dist/TreeItemBase.js
var __decorate129 = function(decorators, target, key, desc) {
  var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
  if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
  else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
  return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var TreeItemBase_1;
var TreeItemBase = TreeItemBase_1 = class TreeItemBase2 extends ListItem_default {
  constructor() {
    super(...arguments);
    this.level = 1;
    this.showToggleButton = false;
    this.expanded = false;
    this.movable = false;
    this.hasChildren = false;
    this.additionalTextState = "None";
    this.forcedSetsize = 1;
    this.forcedPosinset = 1;
    this._fixed = false;
  }
  onBeforeRendering() {
    this.showToggleButton = this.requiresToggleButton;
  }
  get classes() {
    const allClasses = super.classes;
    allClasses.main["ui5-li-root-tree"] = true;
    return allClasses;
  }
  get styles() {
    return {
      preContent: {
        "padding-inline-start": `calc(var(${getScopedVarName("--_ui5-tree-indent-step")}) * ${this.effectiveLevel})`
      }
    };
  }
  get requiresToggleButton() {
    return !this._fixed ? this.hasChildren || this.items.length > 0 : false;
  }
  get effectiveLevel() {
    return this.level - 1;
  }
  get hasParent() {
    return this.level > 1;
  }
  get _toggleIconName() {
    return this.expanded ? "navigation-down-arrow" : "navigation-right-arrow";
  }
  get _ariaLabel() {
    return TreeItemBase_1.i18nBundle.getText(TREE_ITEM_ARIA_LABEL);
  }
  get _accInfo() {
    const accInfoSettings = {
      role: "treeitem",
      ariaExpanded: this.showToggleButton ? this.expanded : void 0,
      ariaLevel: this.level,
      posinset: this.forcedPosinset,
      setsize: this.forcedSetsize,
      ariaSelectedText: this.ariaSelectedText,
      listItemAriaLabel: !this.accessibleName ? this._ariaLabel : void 0,
      ariaOwns: this.expanded ? `${this._id}-subtree` : void 0,
      ariaHaspopup: this.accessibilityAttributes.hasPopup
    };
    return { ...super._accInfo, ...accInfoSettings };
  }
  /**
   * Used to duck-type TreeItem elements without using instanceof
   * @default true
   * @protected
   */
  get isTreeItem() {
    return true;
  }
  /**
   * Call this method to manually switch the `expanded` state of a tree item.
   * @public
   */
  toggle() {
    this.expanded = !this.expanded;
  }
  _toggleClick(e) {
    e.stopPropagation();
    this.fireDecoratorEvent("toggle", { item: this });
  }
  async _onkeydown(e) {
    await super._onkeydown(e);
    if (!this._fixed && this.showToggleButton && isRight(e)) {
      if (!this.expanded) {
        this.fireDecoratorEvent("toggle", { item: this });
      } else {
        this.fireDecoratorEvent("step-in", { item: this });
      }
    }
    if (!this._fixed && isLeft(e)) {
      if (this.expanded) {
        this.fireDecoratorEvent("toggle", { item: this });
      } else if (this.hasParent) {
        this.fireDecoratorEvent("step-out", { item: this });
      }
    }
  }
  get iconAccessibleName() {
    return this.expanded ? TreeItemBase_1.i18nBundle.getText(TREE_ITEM_COLLAPSE_NODE) : TreeItemBase_1.i18nBundle.getText(TREE_ITEM_EXPAND_NODE);
  }
};
__decorate129([
  property_default({ type: Number })
], TreeItemBase.prototype, "level", void 0);
__decorate129([
  property_default()
], TreeItemBase.prototype, "icon", void 0);
__decorate129([
  property_default({ type: Boolean })
], TreeItemBase.prototype, "showToggleButton", void 0);
__decorate129([
  property_default({ type: Boolean })
], TreeItemBase.prototype, "expanded", void 0);
__decorate129([
  property_default({ type: Boolean })
], TreeItemBase.prototype, "movable", void 0);
__decorate129([
  property_default({ type: Boolean })
], TreeItemBase.prototype, "indeterminate", void 0);
__decorate129([
  property_default({ type: Boolean })
], TreeItemBase.prototype, "hasChildren", void 0);
__decorate129([
  property_default()
], TreeItemBase.prototype, "additionalTextState", void 0);
__decorate129([
  property_default()
], TreeItemBase.prototype, "accessibleName", void 0);
__decorate129([
  property_default({ type: Number, noAttribute: true })
], TreeItemBase.prototype, "forcedSetsize", void 0);
__decorate129([
  property_default({ type: Number, noAttribute: true })
], TreeItemBase.prototype, "forcedPosinset", void 0);
__decorate129([
  property_default({ type: Boolean })
], TreeItemBase.prototype, "_fixed", void 0);
__decorate129([
  slot_default({
    type: HTMLElement,
    invalidateOnChildChange: {
      properties: false,
      slots: ["default"]
    },
    "default": true
  })
], TreeItemBase.prototype, "items", void 0);
__decorate129([
  i18n_default("@ui5/webcomponents")
], TreeItemBase, "i18nBundle", void 0);
TreeItemBase = TreeItemBase_1 = __decorate129([
  customElement_default({
    languageAware: true,
    renderer: JsxRenderer_default,
    template: TreeItemBaseTemplate,
    styles: [
      ListItem_default.styles,
      TreeItem_css_default
    ]
  }),
  event_strict_default("toggle", {
    bubbles: true
  }),
  event_strict_default("step-in", {
    bubbles: true
  }),
  event_strict_default("step-out", {
    bubbles: true
  })
], TreeItemBase);
var TreeItemBase_default = TreeItemBase;

// node_modules/@ui5/webcomponents/dist/TreeItemTemplate.js
var predefinedHooks4 = {
  listItemContent: listItemContent9
};
function TreeItemTemplate3(hooks) {
  const currentHooks = { ...predefinedHooks4, ...hooks };
  return TreeItemBaseTemplate.call(this, currentHooks);
}
function listItemContent9() {
  return jsxs(Fragment, { children: [jsx("div", { class: "ui5-li-text-wrapper", children: !!this._showTitle && jsxs("div", { part: "title", class: "ui5-li-title", children: [" ", this.text] }) }), this.additionalText && jsx("span", { part: "additional-text", class: "ui5-li-additional-text", children: this.additionalText })] });
}

// node_modules/@ui5/webcomponents/dist/TreeItem.js
var __decorate130 = function(decorators, target, key, desc) {
  var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
  if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
  else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
  return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var TreeItem = class TreeItem2 extends TreeItemBase_default {
  get _showTitle() {
    var _a;
    return (_a = this.text) == null ? void 0 : _a.length;
  }
};
__decorate130([
  property_default()
], TreeItem.prototype, "text", void 0);
__decorate130([
  property_default()
], TreeItem.prototype, "additionalText", void 0);
TreeItem = __decorate130([
  customElement_default({
    renderer: JsxRenderer_default,
    tag: "ui5-tree-item",
    template: TreeItemTemplate3,
    styles: [TreeItemBase_default.styles, TreeItem_css_default]
  })
], TreeItem);
TreeItem.define();

// node_modules/@ui5/webcomponents/dist/TreeItemCustomTemplate.js
var predefinedHooks5 = {
  listItemContent: listItemContent10
};
function TreeItemCustomTemplate(hooks) {
  const currentHooks = { ...predefinedHooks5, ...hooks };
  return TreeItemBaseTemplate.call(this, currentHooks);
}
function listItemContent10() {
  return jsx("div", { class: "ui5-li-tree-text-wrapper", children: jsx("slot", { name: "content", slot: "content" }) });
}

// node_modules/@ui5/webcomponents/dist/TreeItemCustom.js
var __decorate131 = function(decorators, target, key, desc) {
  var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
  if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
  else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
  return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var TreeItemCustom = class TreeItemCustom2 extends TreeItemBase_default {
  constructor() {
    super(...arguments);
    this.hideSelectionElement = false;
  }
  async _onkeydown(e) {
    var _a;
    if (isDown(e) && ((_a = this.content) == null ? void 0 : _a.some((el) => el.contains(e.target)))) {
      e.stopPropagation();
      return;
    }
    const isTab = isTabNext(e) || isTabPrevious(e);
    const isFocused = this.matches(":focus");
    if (!isTab && !isFocused && !isF2(e)) {
      return;
    }
    await super._onkeydown(e);
  }
  _onkeyup(e) {
    const isTab = isTabNext(e) || isTabPrevious(e);
    const isFocused = this.matches(":focus");
    if (!isTab && !isFocused && !isF2(e)) {
      return;
    }
    super._onkeyup(e);
  }
  /**
   * @override
   */
  get placeSelectionElementBefore() {
    return !this.hideSelectionElement && super.placeSelectionElementBefore;
  }
  /**
   * @override
   */
  get placeSelectionElementAfter() {
    return !this.hideSelectionElement && super.placeSelectionElementAfter;
  }
};
__decorate131([
  property_default({ type: Boolean })
], TreeItemCustom.prototype, "hideSelectionElement", void 0);
__decorate131([
  slot_default()
], TreeItemCustom.prototype, "content", void 0);
TreeItemCustom = __decorate131([
  customElement_default({
    renderer: JsxRenderer_default,
    tag: "ui5-tree-item-custom",
    template: TreeItemCustomTemplate,
    styles: [TreeItemBase_default.styles, TreeItem_css_default]
  })
], TreeItemCustom);
TreeItemCustom.define();

// node_modules/@ui5/webcomponents/dist/TreeList.js
var __decorate132 = function(decorators, target, key, desc) {
  var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
  if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
  else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
  return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var TreeList = class TreeList2 extends List_default {
  /*
   * @override
   */
  getItems(includeCollapsed = false) {
    const slottedItems = this.getSlottedNodes("items");
    const flatItems = [];
    flattenTree(slottedItems, flatItems, includeCollapsed);
    return flatItems;
  }
  getItemsForProcessing() {
    return this.getItems(true);
  }
};
TreeList = __decorate132([
  customElement_default("ui5-tree-list")
], TreeList);
var flattenTree = (items3, result, includeCollapsed = false) => {
  items3.forEach((item2) => {
    result.push(item2);
    if ((item2.expanded || includeCollapsed) && item2.items) {
      flattenTree(item2.items, result, includeCollapsed);
    }
  });
};
TreeList.define();
var TreeList_default = TreeList;

// node_modules/@ui5/webcomponents/dist/TreeTemplate.js
function TreeTemplate() {
  return jsxs(TreeList_default, { class: "ui5-tree-root", selectionMode: this.selectionMode, headerText: this.headerText, footerText: this.footerText, noDataText: this.noDataText, accessibleRole: this._role, accessibleName: this.accessibleName, accessibleNameRef: this.accessibleNameRef, accessibleDescription: this.accessibleDescription, accessibleDescriptionRef: this.accessibleDescriptionRef, onDragEnter: this._ondragenter, onDragOver: this._ondragover, onDrop: this._ondrop, onDragLeave: this._ondragleave, onItemClick: this._onListItemClick, onItemDelete: this._onListItemDelete, onItemFocused: this._onListItemFocus, onSelectionChange: this._onListSelectionChange, onMouseOver: this._onListItemMouseOver, onMouseOut: this._onListItemMouseOut, "onui5-toggle": this._onListItemToggle, "onui5-step-in": this._onListItemStepIn, "onui5-step-out": this._onListItemStepOut, children: [this._hasHeader && jsx("slot", { name: "header", slot: "header" }), jsx("slot", {}), jsx(DropIndicator_default, { orientation: "Horizontal", ownerReference: this })] });
}

// node_modules/@ui5/webcomponents/dist/generated/themes/Tree.css.js
registerThemePropertiesLoader("@ui5/webcomponents-theming", "sap_horizon", async () => parameters_bundle_css_default);
registerThemePropertiesLoader("@ui5/webcomponents", "sap_horizon", async () => parameters_bundle_css_default2);
var Tree_css_default = `.ui5-hidden-text{position:absolute;clip:rect(1px,1px,1px,1px);user-select:none;left:-1000px;top:-1000px;pointer-events:none;font-size:0}:host(:not([hidden])){display:block;width:100%}.ui5-tree-root{height:100%;width:100%}
`;

// node_modules/@ui5/webcomponents/dist/Tree.js
var __decorate133 = function(decorators, target, key, desc) {
  var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
  if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
  else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
  return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var Tree = class Tree2 extends UI5Element_default {
  constructor() {
    super(...arguments);
    this.selectionMode = "None";
  }
  onEnterDOM() {
    DragRegistry_default.subscribe(this);
  }
  onExitDOM() {
    DragRegistry_default.unsubscribe(this);
  }
  onBeforeRendering() {
    this._prepareTreeItems();
  }
  onAfterRendering() {
    this.shadowRoot.querySelector("[ui5-tree-list]").onBeforeRendering();
  }
  get dropIndicatorDOM() {
    return this.shadowRoot.querySelector("[ui5-drop-indicator]");
  }
  get list() {
    return this.getDomRef();
  }
  get _role() {
    return ListAccessibleRole_default.Tree;
  }
  get _hasHeader() {
    return !!this.header.length;
  }
  _ondragenter(e) {
    e.preventDefault();
  }
  _ondragleave(e) {
    if (e.relatedTarget instanceof Node && this.shadowRoot.contains(e.relatedTarget)) {
      return;
    }
    this.dropIndicatorDOM.targetReference = null;
  }
  _ondragover(e) {
    const draggedElement = DragRegistry_default.getDraggedElement();
    const allLiNodesTraversed = [];
    if (!(e.target instanceof HTMLElement) || !draggedElement) {
      return;
    }
    this.walk((item2) => {
      allLiNodesTraversed.push(item2.shadowRoot.querySelector("li"));
    });
    const closestPosition = findClosestPosition(allLiNodesTraversed, e.clientY, Orientation_default.Vertical);
    if (!closestPosition) {
      this.dropIndicatorDOM.targetReference = null;
      return;
    }
    closestPosition.element = closestPosition.element.getRootNode().host;
    if (draggedElement.contains(closestPosition.element)) {
      return;
    }
    if (closestPosition.element === draggedElement) {
      closestPosition.placements = closestPosition.placements.filter((placement2) => placement2 !== MovePlacement_default.On);
    }
    const { targetReference, placement } = handleDragOver_default(e, this, closestPosition, closestPosition.element);
    this.dropIndicatorDOM.targetReference = targetReference;
    this.dropIndicatorDOM.placement = placement;
  }
  _ondrop(e) {
    var _a, _b;
    if (!((_a = this.dropIndicatorDOM) == null ? void 0 : _a.targetReference) || !((_b = this.dropIndicatorDOM) == null ? void 0 : _b.placement)) {
      return;
    }
    handleDrop_default(e, this, this.dropIndicatorDOM.targetReference, this.dropIndicatorDOM.placement);
    this.dropIndicatorDOM.targetReference = null;
  }
  _onListItemStepIn(e) {
    const treeItem = e.detail.item;
    if (treeItem.items.length > 0) {
      const firstChild = treeItem.items[0];
      const firstChildListItem = this._getListItemForTreeItem(firstChild);
      firstChildListItem && this.list.focusItem(firstChildListItem);
    }
  }
  _onListItemStepOut(e) {
    const treeItem = e.detail.item;
    if (treeItem.parentElement !== this) {
      const parent = treeItem.parentElement;
      const parentListItem = this._getListItemForTreeItem(parent);
      parentListItem && this.list.focusItem(parentListItem);
    }
  }
  _onListItemToggle(e) {
    const treeItem = e.detail.item;
    const defaultPrevented = !this.fireDecoratorEvent("item-toggle", { item: treeItem });
    if (!defaultPrevented) {
      treeItem.toggle();
    }
  }
  _onListItemClick(e) {
    const treeItem = e.detail.item;
    if (!this.fireDecoratorEvent("item-click", { item: treeItem })) {
      e.preventDefault();
    }
  }
  _onListItemDelete(e) {
    const treeItem = e.detail.item;
    this.fireDecoratorEvent("item-delete", { item: treeItem });
  }
  _onListItemFocus(e) {
    const treeItem = e.detail.item;
    this.fireDecoratorEvent("item-focus", { item: treeItem });
  }
  _onListItemMouseOver(e) {
    const target = e.target;
    if (this._isInstanceOfTreeItemBase(target)) {
      this.fireDecoratorEvent("item-mouseover", { item: target });
    }
  }
  _onListItemMouseOut(e) {
    const target = e.target;
    if (this._isInstanceOfTreeItemBase(target)) {
      this.fireDecoratorEvent("item-mouseout", { item: target });
    }
  }
  _onListSelectionChange(e) {
    const previouslySelectedItems = e.detail.previouslySelectedItems;
    const selectedItems = e.detail.selectedItems;
    const targetItem = e.detail.targetItem;
    previouslySelectedItems.forEach((item2) => {
      item2.selected = false;
    });
    selectedItems.forEach((item2) => {
      item2.selected = true;
    });
    this.fireDecoratorEvent("selection-change", {
      previouslySelectedItems,
      selectedItems,
      targetItem
    });
  }
  _prepareTreeItems() {
    this.walk((item2, level, index) => {
      const parent = item2.parentNode;
      const ariaSetSize = parent && parent.children.length || this.items.length;
      item2.setAttribute("level", level.toString());
      item2.forcedSetsize = ariaSetSize;
      item2.forcedPosinset = index + 1;
    });
  }
  /**
   * Returns the corresponding list item for a given tree item
   * @param item The tree item
   * @protected
   */
  _getListItemForTreeItem(item2) {
    return this.getItems().find((listItem) => listItem === item2);
  }
  /**
   * Returns the a flat array of all tree items
   * @protected
   * @returns array of the tree items
   */
  getItems() {
    return this.list.getItems();
  }
  /**
   * Focus a tree item by its index in the flat array of all tree items
   * @protected
   * @param index
   */
  focusItemByIndex(index) {
    const item2 = this.getItems()[index];
    item2 && this.list.focusItem(item2);
  }
  /**
   * Perform Depth-First-Search walk on the tree and run a callback on each node
   * @public
   * @param callback function to execute on each node of the tree with 3 arguments: the node, the level and the index
   */
  walk(callback) {
    walkTree(this, 1, callback);
  }
  _isInstanceOfTreeItemBase(object) {
    return "isTreeItem" in object;
  }
};
__decorate133([
  property_default()
], Tree.prototype, "selectionMode", void 0);
__decorate133([
  property_default()
], Tree.prototype, "noDataText", void 0);
__decorate133([
  property_default()
], Tree.prototype, "headerText", void 0);
__decorate133([
  property_default()
], Tree.prototype, "footerText", void 0);
__decorate133([
  property_default()
], Tree.prototype, "accessibleName", void 0);
__decorate133([
  property_default()
], Tree.prototype, "accessibleNameRef", void 0);
__decorate133([
  property_default()
], Tree.prototype, "accessibleDescription", void 0);
__decorate133([
  property_default()
], Tree.prototype, "accessibleDescriptionRef", void 0);
__decorate133([
  slot_default({ type: HTMLElement, invalidateOnChildChange: true, "default": true })
], Tree.prototype, "items", void 0);
__decorate133([
  slot_default()
], Tree.prototype, "header", void 0);
Tree = __decorate133([
  customElement_default({
    tag: "ui5-tree",
    renderer: JsxRenderer_default,
    styles: Tree_css_default,
    template: TreeTemplate
  }),
  event_strict_default("item-toggle", {
    bubbles: true,
    cancelable: true
  }),
  event_strict_default("item-mouseover", {
    bubbles: true
  }),
  event_strict_default("item-mouseout", {
    bubbles: true
  }),
  event_strict_default("item-click", {
    bubbles: true,
    cancelable: true
  }),
  event_strict_default("item-delete", {
    bubbles: true
  }),
  event_strict_default("item-focus", {
    bubbles: true
  }),
  event_strict_default("selection-change", {
    bubbles: true
  }),
  event_strict_default("move", {
    bubbles: true
  }),
  event_strict_default("move-over", {
    bubbles: true,
    cancelable: true
  })
], Tree);
var walkTree = (el, level, callback) => {
  el.items.forEach((item2, index) => {
    callback(item2, level, index);
    if (item2.items.length > 0) {
      walkTree(item2, level + 1, callback);
    }
  });
};
Tree.define();

// node_modules/@ui5/webcomponents-react/dist/webComponents/Tree/index.js
var Tree3 = withWebComponent("ui5-tree", ["accessibleDescription", "accessibleDescriptionRef", "accessibleName", "accessibleNameRef", "footerText", "headerText", "noDataText", "selectionMode"], [], ["header"], ["item-click", "item-delete", "item-mouseout", "item-mouseover", "item-toggle", "selection-change"]);
Tree3.displayName = "Tree";

// node_modules/@ui5/webcomponents-react/dist/webComponents/TreeItem/index.js
var TreeItem3 = withWebComponent("ui5-tree-item", ["accessibilityAttributes", "accessibleName", "additionalText", "additionalTextState", "highlight", "icon", "text", "tooltip", "type"], ["expanded", "hasChildren", "indeterminate", "movable", "navigated", "selected"], ["deleteButton"], ["detail-click"]);
TreeItem3.displayName = "TreeItem";

// node_modules/@ui5/webcomponents-react/dist/webComponents/TreeItemCustom/index.js
var TreeItemCustom3 = withWebComponent("ui5-tree-item-custom", ["accessibilityAttributes", "accessibleName", "additionalTextState", "highlight", "icon", "tooltip", "type"], ["expanded", "hasChildren", "hideSelectionElement", "indeterminate", "movable", "navigated", "selected"], ["content", "deleteButton"], ["detail-click"]);
TreeItemCustom3.displayName = "TreeItemCustom";

// node_modules/@ui5/webcomponents-fiori/dist/illustrations/sapIllus-Dialog-Tent.js
var sapIllus_Dialog_Tent_default = `<svg width="161" height="160" viewBox="0 0 161 160" fill="none" xmlns="http://www.w3.org/2000/svg" id="sapIllus-Dialog-Tent">
<path d="M147.773 115.193C136.699 114.224 126.858 111.959 117.414 110.283C126.865 111.959 136.699 114.228 147.773 115.193Z" fill="var(--sapContent_Illustrative_Color7)"/>
<path d="M78.5401 3C45.5183 3 17.3223 23.5809 6.13635 52.5731C10.5988 49.1952 15.2199 45.8137 20.1903 42.626C19.6717 42.376 19.192 42.0449 18.7757 41.6468C18.236 41.1326 17.8056 40.5127 17.5128 39.8258C17.2165 39.139 17.0648 38.4028 17.0648 37.6561C17.0648 36.9093 17.22 36.1732 17.5128 35.4898C17.8021 34.803 18.2325 34.1831 18.7757 33.6688C19.3154 33.1545 19.9539 32.753 20.6524 32.4888C21.3508 32.2282 22.0952 32.1049 22.843 32.1366H26.5117C26.42 31.7386 26.3741 31.3335 26.3706 30.9249C26.3706 29.4596 26.9562 28.0542 27.9968 27.0151C28.5119 26.5009 29.1221 26.0958 29.7959 25.8176C30.4661 25.5393 31.1893 25.3984 31.916 25.3984H49.8502C50.5769 25.3984 51.2965 25.5393 51.9703 25.8176C52.6441 26.0958 53.2544 26.5009 53.7694 27.0151C53.9987 27.2476 54.2103 27.5012 54.4008 27.7689C58.4787 26.7932 62.6095 26.0395 66.7686 25.5146C91.6698 22.3446 117.245 26.7862 141.388 35.0284C134.205 25.1061 124.762 17.0294 113.834 11.4606C102.905 5.89182 90.8091 2.99296 78.5366 3.00352L78.5401 3Z" fill="var(--sapContent_Illustrative_Color7)"/>
<path d="M6.65479 109.37C8.72548 114.464 11.3394 119.321 14.4472 123.861H142.629C144.531 121.086 146.249 118.19 147.772 115.193C136.699 114.228 126.861 111.963 117.418 110.279C82.5015 104.076 49.4197 105.267 6.65479 109.374V109.37Z" fill="var(--sapContent_Illustrative_Color7)"/>
<path d="M6.65479 109.37C8.72548 114.464 11.3394 119.321 14.4472 123.861H142.629C144.531 121.086 146.249 118.19 147.772 115.193C136.699 114.228 126.861 111.963 117.418 110.279C82.5015 104.076 49.4197 105.267 6.65479 109.374V109.37Z" fill="var(--sapContent_Illustrative_Color20)"/>
<path d="M78.54 157.64C91.1759 157.651 103.621 154.579 114.79 148.69C125.961 142.804 135.518 134.284 142.629 123.868H14.4508C21.5624 134.284 31.1187 142.804 42.2905 148.69C53.4624 154.576 65.9077 157.647 78.54 157.64Z" fill="var(--sapContent_Illustrative_Color7)"/>
<path d="M66.7826 25.497C62.6201 26.0219 58.4893 26.7756 54.4114 27.7513C55.0604 28.6812 55.4097 29.7872 55.4097 30.9214C55.4097 32.3867 54.8241 33.7921 53.7834 34.8312C53.2684 35.3454 52.6581 35.754 51.9844 36.0323C51.3106 36.3105 50.591 36.455 49.8608 36.4514H46.4143C46.506 36.8459 46.5519 37.251 46.5519 37.6561C46.5519 38.4028 46.3967 39.139 46.1074 39.8258C45.8146 40.5127 45.3843 41.1326 44.841 41.6469C44.3013 42.1646 43.6628 42.5662 42.9643 42.8268C42.2659 43.0875 41.5215 43.2072 40.7772 43.1791H22.8535C22.1092 43.2072 21.3614 43.0875 20.6629 42.8268C20.5077 42.767 20.356 42.7 20.2078 42.6261C15.2339 45.8138 10.6163 49.1952 6.15039 52.5731C2.73921 61.4282 0.993065 70.8363 1.00012 80.3254C0.982482 90.283 2.90502 100.153 6.65485 109.385C49.4198 105.281 82.5016 104.098 117.418 110.29C126.861 111.963 136.703 114.231 147.776 115.2C153.265 104.386 156.115 92.4316 156.094 80.3113C156.119 64.0382 150.969 48.1772 141.384 35.0038C117.238 26.7651 91.6592 22.3199 66.7756 25.4935L66.7826 25.497Z" fill="var(--sapContent_Illustrative_Color18)"/>
<path d="M22.8395 43.172H40.7632C41.5075 43.2002 42.2518 43.0804 42.9503 42.8198C43.6487 42.5556 44.2872 42.1541 44.8269 41.6398C45.3702 41.1255 45.8006 40.5056 46.0934 39.8188C46.3861 39.1319 46.5378 38.3958 46.5378 37.649C46.5378 37.244 46.4884 36.8389 46.4002 36.4444H49.8467C50.5734 36.4444 51.2966 36.3 51.9668 36.0252C52.6406 35.747 53.2508 35.3384 53.7659 34.8241C54.8065 33.7886 55.3921 32.3832 55.3921 30.9144C55.3921 29.7802 55.0464 28.6742 54.3938 27.7443C54.2068 27.4766 53.9952 27.223 53.7659 26.9905C53.2508 26.4762 52.6406 26.0712 51.9668 25.7929C51.293 25.5146 50.5734 25.3737 49.8467 25.3737H31.9124C31.1858 25.3737 30.4661 25.5146 29.7924 25.7929C29.1221 26.0712 28.5083 26.4762 27.9933 26.9905C26.9527 28.0261 26.3671 29.4315 26.3671 30.8967C26.3671 31.3053 26.4165 31.7104 26.5082 32.1084H22.8395C22.0916 32.0802 21.3473 32.2 20.6489 32.4606C19.9504 32.7248 19.3119 33.1264 18.7722 33.6406C18.2325 34.1549 17.8021 34.7748 17.5128 35.4617C17.2165 36.145 17.0648 36.8847 17.0648 37.6279C17.0648 38.3746 17.22 39.1143 17.5128 39.7976C17.8021 40.4845 18.2325 41.1044 18.7722 41.6187C19.1884 42.0167 19.6647 42.3478 20.1867 42.5979C20.3349 42.6718 20.4866 42.7388 20.6418 42.7986C21.3438 43.0663 22.0881 43.1931 22.8395 43.1685V43.172Z" fill="var(--sapContent_Illustrative_Color19)"/>
<path d="M61.1279 64.4538C61.068 64.2918 61.0503 64.1192 61.0786 63.9466C61.1068 63.7775 61.1738 63.6155 61.2832 63.4817C61.389 63.3443 61.5266 63.2386 61.6853 63.1717C61.8441 63.1048 62.0169 63.0766 62.1898 63.0942L140.859 64.0276C141.268 64.0523 141.659 64.1967 141.984 64.4503C142.308 64.7039 142.545 65.0456 142.665 65.4366L160.938 133.097C160.998 133.262 161.015 133.438 160.987 133.611C160.962 133.784 160.892 133.946 160.786 134.086C160.68 134.227 160.542 134.337 160.384 134.411C160.225 134.485 160.052 134.516 159.876 134.506L82.1206 135.333C81.715 135.323 81.3234 135.185 80.9989 134.942C80.6743 134.699 80.4344 134.361 80.3074 133.974L61.1279 64.4538Z" fill="var(--sapContent_Illustrative_Color3)"/>
<path d="M71.3622 51.1867L66.4637 52.5404L71.8333 52.7272L71.3622 51.1867Z" fill="var(--sapContent_Illustrative_Color3)"/>
<path d="M69.5253 53.4274L66.4637 52.5405L69.9492 52.6338L69.5253 53.4274Z" fill="var(--sapContent_Illustrative_Color15)"/>
<path d="M74.1244 64.2511H81.3377C83.0227 64.2511 83.8684 62.2334 82.6821 61.0501L77.5463 55.9412L73.2864 51.7041C71.778 50.2035 69.1922 51.2599 69.1922 53.3804V59.3598C69.192 60.6566 69.7115 61.9003 70.6364 62.8175C71.5613 63.7348 72.8159 64.2504 74.1244 64.2511Z" fill="var(--sapContent_Illustrative_Color2)"/>
<path opacity="0.5" d="M72.3792 53.1369C72.0509 52.8115 72.0508 52.2842 72.379 51.9589C72.7071 51.6337 73.2393 51.6338 73.5675 51.9592L86.4056 64.6825C86.7339 65.0078 86.734 65.5352 86.4059 65.8604C86.0777 66.1856 85.5456 66.1855 85.2173 65.8602L72.3792 53.1369Z" fill="var(--sapContent_Illustrative_Color8)"/>
<path d="M74.1273 53.9699L72.2672 55.8134C71.7629 56.3132 71.4796 56.991 71.4796 57.6978C71.4796 58.4046 71.7629 59.0824 72.2672 59.5821L73.9639 61.2637C74.9616 62.2527 76.3148 62.8085 77.7259 62.8088C79.137 62.8091 80.4905 62.254 81.4887 61.2655L74.1273 53.9699Z" fill="var(--sapContent_Illustrative_Color4)"/>
<path d="M82.6789 61.0501L77.5431 55.9412L73.2831 51.7041C72.4745 50.8995 73.2344 52.6926 72.3708 53.1285C72.2167 52.9717 72.1312 52.7611 72.1326 52.5423C72.134 52.3234 72.2224 52.1139 72.3785 51.9591C72.5361 51.8031 72.7498 51.7154 72.9726 51.7154C73.1954 51.7154 73.4091 51.8031 73.5667 51.9591L86.4056 64.6832C86.563 64.8394 86.6515 65.0512 86.6515 65.272C86.6515 65.4928 86.563 65.7046 86.4056 65.8608C86.3275 65.9382 86.2348 65.9996 86.1328 66.0414C86.0308 66.0833 85.9215 66.1049 85.8111 66.1049C85.7007 66.1049 85.5914 66.0833 85.4894 66.0414C85.3874 65.9996 85.2947 65.9382 85.2167 65.8608L82.8479 63.5132C83.3716 62.8153 83.4087 61.776 82.6789 61.0501Z" fill="var(--sapContent_Illustrative_Color4)"/>
<path d="M73.2831 51.7041L77.5431 55.9412L82.6789 61.0501C83.4087 61.7759 83.3716 62.8152 82.846 63.5106L70.4995 51.2751C70.4971 51.2722 70.4945 51.2695 70.4918 51.2669C71.3541 50.831 72.4745 50.8995 73.2831 51.7041Z" fill="var(--sapContent_Illustrative_Color4)"/>
<path d="M71.0315 53.0285C70.975 53.1233 70.7389 53.0866 70.5041 52.9467C70.2693 52.8067 70.1248 52.6164 70.1813 52.5217C70.2378 52.4269 70.4739 52.4636 70.7087 52.6035C70.9434 52.7435 71.088 52.9338 71.0315 53.0285Z" fill="var(--sapContent_Illustrative_Color4)"/>
<path d="M65.5186 53.2816C65.7381 53.2161 65.9411 53.4235 65.8709 53.6415L65.1768 55.7987C64.836 56.8578 63.4915 57.175 62.7133 56.3799C61.9351 55.5849 62.281 54.2475 63.3471 53.9294L65.5186 53.2816Z" fill="var(--sapContent_Illustrative_Color8)"/>
<g opacity="0.7">
<path opacity="0.7" d="M128.378 134.794C128.194 134.802 128.015 134.766 127.845 134.696C127.676 134.625 127.528 134.52 127.404 134.386C127.281 134.252 127.186 134.094 127.133 133.921C127.076 133.748 127.059 133.565 127.08 133.382L133.44 65.4471C133.486 65.0632 133.669 64.711 133.958 64.4503C134.244 64.1897 134.618 64.0453 135.006 64.0382H140.848C141.254 64.0558 141.645 64.1967 141.97 64.4433C142.294 64.6898 142.534 65.028 142.654 65.4154L160.927 133.076C160.983 133.241 161.001 133.417 160.976 133.59C160.948 133.762 160.881 133.928 160.775 134.065C160.669 134.206 160.532 134.315 160.373 134.389C160.214 134.463 160.041 134.495 159.865 134.485L128.378 134.791V134.794Z" fill="var(--sapContent_Illustrative_Color15)"/>
</g>
<path d="M101.917 140.307C101.759 140.307 101.6 140.254 101.476 140.155C98.5062 137.841 95.7018 135.319 93.0808 132.614C86.7664 126.084 80.7977 117.489 72.2045 96.7711L71.4249 94.8901C67.8444 86.2816 64.1404 77.3807 60.3095 64.2319C60.2812 64.1403 60.2742 64.0487 60.2812 63.9536C60.2918 63.8585 60.3201 63.7705 60.3659 63.686C60.4118 63.6049 60.4717 63.531 60.5458 63.4711C60.6199 63.4112 60.7045 63.3689 60.7963 63.3443C60.888 63.3161 60.9797 63.3091 61.0749 63.3161C61.1702 63.3267 61.2584 63.3549 61.343 63.4006C61.4277 63.4464 61.4983 63.5063 61.5582 63.5803C61.6182 63.6543 61.6605 63.7388 61.6852 63.8304C65.495 76.8911 69.1849 85.7568 72.7477 94.3301L73.5344 96.211C82.0394 116.721 87.9164 125.193 94.1179 131.607C96.6895 134.263 99.4446 136.735 102.362 139.007C102.436 139.063 102.499 139.137 102.545 139.218C102.591 139.299 102.623 139.391 102.634 139.486C102.644 139.581 102.637 139.676 102.612 139.764C102.584 139.856 102.542 139.941 102.482 140.011C102.418 140.099 102.334 140.173 102.235 140.222C102.14 140.272 102.03 140.3 101.917 140.303V140.307Z" fill="var(--sapContent_Illustrative_Color8)"/>
<path d="M15.5761 135.309C15.4456 135.309 15.3186 135.277 15.2057 135.21C15.0928 135.143 15.0011 135.048 14.9412 134.932C14.8953 134.847 14.8671 134.759 14.8565 134.664C14.8459 134.569 14.8565 134.474 14.8812 134.386C14.9094 134.294 14.9553 134.21 15.0152 134.139C15.0752 134.069 15.1528 134.009 15.2339 133.963C23.3439 129.659 30.7835 124.196 37.3131 117.754C43.0525 112.09 48.037 105.718 52.1572 98.7929C52.203 98.7119 52.2665 98.6414 52.3406 98.5815C52.4147 98.5217 52.4994 98.4829 52.5911 98.4618C52.6828 98.4371 52.778 98.4336 52.8698 98.4477C52.9615 98.4618 53.0532 98.4935 53.1343 98.5428C53.2155 98.5886 53.286 98.652 53.346 98.726C53.4024 98.7999 53.4447 98.8845 53.4694 98.976C53.4941 99.0676 53.4977 99.1627 53.4871 99.2543C53.473 99.3459 53.4412 99.4375 53.3918 99.5185C49.2187 106.549 44.1566 113.016 38.3396 118.768C31.7113 125.316 24.1587 130.864 15.9254 135.242C15.816 135.291 15.6961 135.316 15.5761 135.309Z" fill="var(--sapContent_Illustrative_Color8)"/>
<path d="M61.1278 64.4538C60.9197 63.6965 60.5775 63.6965 60.3624 64.4538L40.8089 134.129C40.7525 134.291 40.7349 134.467 40.7595 134.636C40.7878 134.805 40.8548 134.967 40.9606 135.104C41.0665 135.242 41.204 135.348 41.3628 135.418C41.5215 135.488 41.6944 135.513 41.8672 135.499L79.2702 135.326C79.4395 135.333 79.6124 135.302 79.7676 135.231C79.9228 135.157 80.0604 135.048 80.1627 134.914C80.265 134.777 80.3355 134.618 80.3673 134.449C80.3955 134.28 80.3814 134.108 80.3285 133.946L61.1243 64.4609L61.1278 64.4538Z" fill="var(--sapContent_Illustrative_Color8)"/>
<path d="M53.8645 135.457C53.6881 135.464 53.5118 135.432 53.3495 135.358C53.1872 135.288 53.0461 135.175 52.9332 135.041C52.8239 134.904 52.7427 134.745 52.7075 134.569C52.6687 134.396 52.6722 134.217 52.7181 134.048L59.2935 101.797C59.4522 101.026 59.7027 101.026 59.8544 101.797L66.2146 134.097C66.2604 134.27 66.264 134.449 66.2252 134.622C66.1864 134.794 66.1088 134.957 65.9959 135.094C65.883 135.231 65.7384 135.34 65.5761 135.411C65.4138 135.481 65.2339 135.513 65.0575 135.502L53.8645 135.453V135.457Z" fill="var(--sapContent_Illustrative_Color4)"/>
<path d="M102.831 141.406C102.782 142.191 102.387 142.815 101.953 142.815C101.519 142.815 101.127 142.174 101.088 141.406L100.799 135.767C100.778 135.594 100.792 135.418 100.842 135.249C100.891 135.083 100.976 134.925 101.088 134.791C101.201 134.657 101.339 134.548 101.498 134.47C101.653 134.393 101.826 134.347 101.999 134.337C102.171 134.347 102.341 134.393 102.496 134.467C102.651 134.544 102.789 134.654 102.898 134.784C103.007 134.914 103.092 135.069 103.142 135.235C103.191 135.4 103.205 135.573 103.187 135.745L102.835 141.402L102.831 141.406Z" fill="var(--sapContent_Illustrative_Color4)"/>
<path d="M16.5427 136.446C16.4933 137.232 16.0982 137.855 15.6608 137.855C15.2234 137.855 14.8354 137.214 14.7966 136.446L14.5108 130.807C14.4932 130.635 14.5108 130.462 14.5602 130.296C14.6096 130.131 14.6943 129.979 14.8071 129.846C14.92 129.715 15.0576 129.606 15.2128 129.529C15.368 129.451 15.5373 129.405 15.7102 129.398C15.883 129.409 16.0524 129.451 16.2076 129.529C16.3628 129.606 16.5004 129.715 16.6132 129.846C16.7226 129.976 16.8073 130.131 16.8566 130.296C16.906 130.462 16.9201 130.635 16.899 130.807L16.5498 136.446H16.5427Z" fill="var(--sapContent_Illustrative_Color4)"/>
<path d="M80.1557 11.9537C80.519 12.859 80.1063 13.8981 79.2279 14.2749C78.3496 14.6518 77.3513 14.2186 76.9844 13.3134C76.6211 12.4081 77.0338 11.369 77.9122 10.9921C78.7905 10.6153 79.7994 11.0485 80.1557 11.9537Z" fill="var(--sapContent_Illustrative_Color10)"/>
<path d="M102.023 19.6782C101.889 21.8479 101.409 23.4682 100.856 23.4647C100.295 23.4647 99.822 21.8338 99.7056 19.65C97.522 19.502 95.8923 19.0124 95.8993 18.4524C95.9064 17.8888 97.5291 17.4415 99.7056 17.3429C99.8396 15.1696 100.309 13.5529 100.873 13.5529C101.438 13.5529 101.907 15.1837 102.023 17.3675C104.207 17.5155 105.837 18.0086 105.83 18.5686C105.822 19.1287 104.2 19.5795 102.023 19.6782V19.6782Z" fill="var(--sapContent_Illustrative_Color10)"/>
<path d="M57.6744 19.2661C57.9249 19.893 57.6391 20.6116 57.0324 20.8722C56.4256 21.1329 55.7342 20.8335 55.4802 20.2065C55.2298 19.5795 55.5155 18.861 56.1222 18.6003C56.729 18.3397 57.4275 18.6391 57.6744 19.2661Z" fill="var(--sapContent_Illustrative_Color10)"/>
</svg>
`;

// node_modules/@ui5/webcomponents-fiori/dist/illustrations/sapIllus-Scene-Tent.js
var sapIllus_Scene_Tent_default = `<svg width="320" height="240" viewBox="0 0 320 240" fill="none" xmlns="http://www.w3.org/2000/svg" id="sapIllus-Scene-Tent">
<path d="M315.24 213.299C314.643 213.299 314.083 212.572 313.829 211.585L168.913 211.214C168.819 211.332 168.702 211.43 168.57 211.501C168.438 211.571 168.288 211.613 168.142 211.623C167.992 211.613 167.841 211.571 167.709 211.501C167.578 211.43 167.46 211.332 167.366 211.209L1.26062 210.787C2.3942 213.337 4.24743 215.502 6.58986 217.019C8.93228 218.536 11.6698 219.349 14.4685 219.344H305.517C308.161 219.344 310.753 218.621 313.01 217.259C315.268 215.892 317.112 213.934 318.33 211.595H316.623C316.392 212.576 315.833 213.299 315.235 213.299H315.24Z" fill="var(--sapContent_Illustrative_Color7)"/>
<path d="M266.9 151.304C275.122 148.636 282.752 146.715 292.827 147.171C304.487 147.64 311.816 151.647 319.981 157.56V157.503C311.806 151.595 304.506 147.612 292.855 147.124C282.752 146.696 275.122 148.627 266.9 151.304Z" fill="var(--sapContent_Illustrative_Color7)"/>
<path d="M259.53 153.784C261.218 153.211 262.855 152.652 264.464 152.121L259.534 153.788L259.53 153.784Z" fill="var(--sapContent_Illustrative_Color7)"/>
<path d="M223.029 74.6219L234.671 74.7581H235.715C236.416 74.791 237.088 75.0305 237.648 75.4485L237.686 75.4156C237.827 75.317 237.987 75.2465 238.156 75.2137C238.311 75.1855 238.471 75.1855 238.627 75.2137C238.796 75.2418 238.951 75.3029 239.097 75.3921C239.238 75.4861 239.36 75.5988 239.459 75.735C239.558 75.8759 239.624 76.0356 239.657 76.2046C240.263 78.8019 240.898 81.3944 241.566 83.9729C274.139 101.322 301.764 121.231 320 135.575V34.4046C320 30.5862 318.476 26.9181 315.767 24.2176C313.057 21.517 309.384 20 305.55 20H14.4873C10.6538 20 6.98028 21.517 4.27097 24.2176C1.56165 26.9181 0.0376661 30.5815 0.0376661 34.4046V46.5219C0.0705918 46.4327 0.0987954 46.3434 0.136425 46.2542C0.508015 45.3712 1.05837 44.5728 1.75452 43.9106C2.44125 43.2484 3.25968 42.7364 4.15338 42.3983C5.04237 42.0554 5.99719 41.8957 6.95204 41.9286H11.6557C11.5381 41.4214 11.4817 40.9 11.477 40.3787C11.477 39.4488 11.6604 38.5329 12.0179 37.6734C12.3754 36.814 12.8975 36.0343 13.556 35.3815C14.2145 34.724 14.9953 34.2026 15.8561 33.8457C16.7169 33.4887 17.6388 33.3056 18.5701 33.3056H41.4958C43.3773 33.3056 45.1787 34.0523 46.5099 35.3768C47.1684 36.0343 47.6905 36.814 48.048 37.6687C48.4055 38.5282 48.5889 39.4441 48.5889 40.374C48.5889 42.2527 47.841 44.0515 46.5099 45.3759C45.1787 46.7004 43.3773 47.4424 41.4958 47.4424H37.0838C37.2014 47.9497 37.2578 48.471 37.2625 48.9876C37.2625 49.9411 37.0649 50.8851 36.6886 51.7587C36.317 52.6416 35.7667 53.4401 35.0706 54.1023C34.3838 54.7645 33.5654 55.2764 32.6717 55.6099C31.7733 55.9574 30.8138 56.1171 29.8495 56.0796H6.91443C5.95958 56.1124 5.00941 55.9527 4.11571 55.6099C3.22201 55.2764 2.40359 54.7598 1.71685 54.1023C1.02071 53.4401 0.470406 52.6416 0.0988161 51.7587C0.0611867 51.6741 0.0329257 51.5802 0 51.4956V92.502C23.8053 74.6829 47.4083 53.1583 91.0865 47.588C135.865 41.891 182.333 55.4126 223.029 74.6125V74.6219ZM280.348 48.9172C281.011 47.6021 282.079 46.5313 283.396 45.8691C285.052 45.0706 286.919 44.8452 288.721 45.2209C290.202 45.5027 291.595 46.1462 292.766 47.0949C292.902 47.1935 293.015 47.3203 293.1 47.4659C293.184 47.6115 293.241 47.7712 293.264 47.9356C293.288 48.1 293.274 48.2738 293.227 48.4334C293.18 48.5931 293.095 48.7434 292.987 48.8749C292.883 49.0064 292.756 49.1144 292.606 49.1896C292.46 49.2647 292.3 49.3164 292.135 49.3305C291.966 49.3446 291.797 49.3211 291.637 49.2694C291.477 49.2131 291.331 49.1285 291.204 49.0158C290.353 48.3348 289.351 47.8745 288.278 47.6726C287.023 47.4096 285.71 47.5552 284.544 48.0953C283.659 48.5462 282.954 49.2835 282.54 50.1806C282.328 50.6784 282.008 51.1199 281.599 51.4769C281.195 51.8291 280.71 52.0827 280.188 52.2189C280.009 52.233 279.835 52.233 279.657 52.2189C278.123 52.2189 277.065 50.9743 276.044 49.6733C275.226 48.3912 274.031 47.3955 272.625 46.8084C270.856 46.273 268.617 47.0197 265.964 49.0017C265.701 49.1849 265.372 49.26 265.056 49.2084C264.741 49.1567 264.459 48.9923 264.262 48.7387C264.073 48.4804 263.989 48.1657 264.026 47.8464C264.059 47.5317 264.214 47.2405 264.459 47.0338C267.794 44.554 270.771 43.657 273.344 44.4272C275.235 45.1599 276.853 46.4608 277.977 48.1516C278.598 48.8937 279.389 49.8471 279.732 49.772C279.84 49.7579 280.042 49.4244 280.329 48.9125H280.348V48.9172ZM257.305 35.4942C257.328 35.3298 257.38 35.1701 257.465 35.0245C257.549 34.8883 257.662 34.7662 257.789 34.6629C260.353 32.7279 262.681 32.061 264.694 32.6668C266.166 33.2257 267.432 34.2214 268.316 35.5224C268.603 35.9169 268.937 36.2738 269.313 36.5885C269.389 36.4899 269.497 36.302 269.586 36.1564C270.113 35.1185 270.955 34.2778 271.99 33.7471C273.293 33.1318 274.755 32.9533 276.171 33.2398C277.333 33.4512 278.42 33.949 279.332 34.6864C279.567 34.9024 279.713 35.1983 279.741 35.5177C279.765 35.8324 279.666 36.147 279.468 36.396C279.266 36.6496 278.979 36.8187 278.659 36.8656C278.344 36.9032 278.02 36.8234 277.761 36.6355C277.168 36.1564 276.468 35.8371 275.72 35.6962C274.835 35.513 273.913 35.6163 273.095 35.9967C272.488 36.3114 272.008 36.8187 271.726 37.4386C271.552 37.8519 271.279 38.2183 270.931 38.5047C270.588 38.7959 270.183 38.9979 269.746 39.1012L269.323 39.1388C268.081 39.1388 267.159 38.0727 266.373 37.1192C265.795 36.2175 264.962 35.5083 263.975 35.0856C262.728 34.7146 261.185 35.2594 259.271 36.6872C259.144 36.7858 258.993 36.8562 258.838 36.8938C258.683 36.9361 258.528 36.9455 258.368 36.922C258.203 36.8985 258.043 36.8468 257.897 36.7623C257.761 36.6778 257.634 36.565 257.535 36.4382C257.436 36.3067 257.366 36.1611 257.324 36.0014C257.277 35.8371 257.262 35.668 257.286 35.4989H257.305V35.4942Z" fill="var(--sapContent_Illustrative_Color7)"/>
<path d="M71.0442 150.891C49.2944 151.656 26.0959 153.647 0.0281982 156.32V173.453H50.1928C57.8363 166.601 64.8165 159.044 71.0442 150.891Z" fill="var(--sapContent_Illustrative_Color7)"/>
<path d="M71.0442 150.891C49.2944 151.656 26.0959 153.647 0.0281982 156.32V173.453H50.1928C57.8363 166.601 64.8165 159.044 71.0442 150.891Z" fill="var(--sapContent_Illustrative_Color20)"/>
<path d="M266.9 151.309C271.962 161.322 276.378 168.428 279.934 173.453H319.986V157.564C311.816 151.651 304.487 147.664 292.832 147.176C282.756 146.72 275.127 148.641 266.905 151.309H266.9Z" fill="var(--sapContent_Illustrative_Color7)"/>
<path d="M266.9 151.309C271.962 161.322 276.378 168.428 279.934 173.453H319.986V157.564C311.816 151.651 304.487 147.664 292.832 147.176C282.756 146.72 275.127 148.641 266.905 151.309H266.9Z" fill="var(--sapContent_Illustrative_Color20)"/>
<path d="M74.2051 150.783C68.1232 158.941 61.3076 166.53 53.8429 173.448H68.4525L74.8213 150.759L74.2051 150.778V150.783Z" fill="var(--sapContent_Illustrative_Color7)"/>
<path d="M74.2051 150.783C68.1232 158.941 61.3076 166.53 53.8429 173.448H68.4525L74.8213 150.759L74.2051 150.778V150.783Z" fill="var(--sapContent_Illustrative_Color20)"/>
<path d="M264.835 173.453H276.834C272.239 166.624 268.104 159.499 264.459 152.121C262.85 152.657 261.214 153.211 259.525 153.784L264.835 173.448V173.453Z" fill="var(--sapContent_Illustrative_Color7)"/>
<path d="M264.835 173.453H276.834C272.239 166.624 268.104 159.499 264.459 152.121C262.85 152.657 261.214 153.211 259.525 153.784L264.835 173.448V173.453Z" fill="var(--sapContent_Illustrative_Color20)"/>
<path d="M313.532 206.823C303.485 200.938 294.313 193.677 286.289 185.251C282.808 181.597 279.647 177.657 276.834 173.467H264.835L270.56 194.654C270.644 194.875 270.687 195.109 270.682 195.349C270.691 195.433 270.691 195.513 270.682 195.598C270.64 195.903 270.517 196.194 270.334 196.443C270.151 196.692 269.911 196.889 269.628 197.016C269.346 197.148 269.04 197.204 268.73 197.181L170.127 198.233C170.169 198.317 170.202 198.406 170.235 198.496C170.32 198.787 170.348 199.087 170.31 199.388L169.699 209.166C169.675 209.918 169.407 210.646 168.942 211.238L313.857 211.609C313.796 211.355 313.758 211.097 313.744 210.838L313.528 206.827L313.532 206.823Z" fill="var(--sapContent_Illustrative_Color7)"/>
<path d="M166.656 209.138L166.505 206.287C163.325 203.784 160.263 201.14 157.319 198.345L133.73 198.594C133.024 198.575 132.342 198.336 131.778 197.913C131.261 197.523 130.865 196.988 130.64 196.382C130.687 196.603 130.701 196.833 130.668 197.058C130.616 197.354 130.499 197.631 130.32 197.871C130.136 198.111 129.897 198.298 129.624 198.42C129.351 198.543 129.05 198.599 128.754 198.575L105.085 198.688L105.014 198.73C104.727 198.857 104.417 198.914 104.106 198.9L84.6802 198.81C84.5485 198.824 84.4168 198.824 84.2851 198.81L63.8053 198.909C63.5043 198.937 63.2032 198.885 62.9304 198.763C62.6576 198.641 62.4177 198.453 62.2343 198.214C62.0555 197.979 61.9427 197.697 61.9003 197.401C61.8533 197.105 61.8815 196.805 61.985 196.523L68.4525 173.477H53.843C43.636 182.926 32.286 191.066 20.0518 197.707L19.873 200.572C19.7837 201.938 19.1016 203.051 18.3396 203.051C17.5776 203.051 16.9286 201.934 16.8345 200.572L16.3359 190.751C16.2983 190.45 16.3265 190.14 16.4111 189.849C16.5052 189.558 16.6511 189.29 16.8486 189.055C17.0415 188.821 17.2861 188.628 17.5589 188.496C17.8317 188.36 18.128 188.28 18.429 188.266C18.7301 188.285 19.0264 188.365 19.2992 188.501C19.5673 188.637 19.8025 188.825 19.9953 189.06C20.1929 189.29 20.3387 189.563 20.4187 189.859C20.4939 190.15 20.5175 190.45 20.4798 190.751L20.2305 194.776C30.9925 188.806 41.049 181.649 50.2023 173.434H0.0377197V204.925C0.0377197 206.94 0.461057 208.927 1.27949 210.768L167.385 211.191C166.924 210.604 166.665 209.885 166.656 209.138Z" fill="var(--sapContent_Illustrative_Color7)"/>
<path d="M166.331 202.962L166.143 199.36C166.105 199.059 166.134 198.754 166.218 198.463C166.247 198.388 166.284 198.317 166.312 198.242L160.931 198.303C162.691 199.905 164.492 201.455 166.331 202.962Z" fill="var(--sapContent_Illustrative_Color7)"/>
<path d="M288.165 183.537C295.625 191.385 304.106 198.2 313.377 203.803L313.236 201.041C313.189 200.736 313.198 200.431 313.273 200.13C313.358 199.839 313.504 199.566 313.697 199.327C313.899 199.092 314.144 198.904 314.421 198.777C314.699 198.646 315 198.58 315.306 198.58C315.611 198.58 315.917 198.646 316.199 198.777C316.477 198.904 316.721 199.092 316.919 199.327C317.116 199.562 317.262 199.834 317.342 200.13C317.417 200.426 317.432 200.736 317.38 201.041L316.773 210.815C316.754 211.078 316.712 211.336 316.646 211.594H318.353C319.426 209.542 319.99 207.259 319.986 204.944V173.453H279.934C282.417 177.023 285.169 180.395 288.165 183.546V183.537Z" fill="var(--sapContent_Illustrative_Color7)"/>
<path d="M264.454 152.116C262.394 148.026 260.221 143.465 257.991 138.379C255.31 132.437 252.803 126.426 250.466 120.339L259.497 153.788L264.449 152.121L264.454 152.116Z" fill="var(--sapContent_Illustrative_Color19)"/>
<path d="M241.548 83.9447C246.279 102.252 252.564 120.128 260.329 137.374C262.615 142.53 264.812 147.175 266.914 151.304C275.136 148.627 282.785 146.692 292.869 147.124C304.52 147.617 311.82 151.595 319.995 157.503V135.547C301.755 121.203 274.12 101.313 241.548 83.9447Z" fill="var(--sapContent_Illustrative_Color18)"/>
<path d="M77.206 142.244L95.9266 75.5189C95.936 75.486 95.9454 75.4485 95.9595 75.4156L95.8749 75.1432C95.8278 74.9929 95.8137 74.8332 95.8372 74.6735C95.8513 74.5091 95.8984 74.3494 95.9736 74.2038C96.0583 74.0629 96.1618 73.9408 96.2841 73.8328C96.4158 73.7342 96.5663 73.6543 96.7215 73.6074C96.8767 73.5651 97.0366 73.551 97.1919 73.5651C97.3471 73.5839 97.4976 73.6309 97.634 73.706C97.7893 73.5322 97.9821 73.3913 98.1985 73.2927C98.4713 73.1706 98.7723 73.1236 99.0733 73.1471L222.992 74.6265C182.314 55.4314 135.851 41.9051 91.1053 47.6068C47.4224 53.177 23.8241 74.7205 0.0187988 92.5207V156.32C26.0724 153.647 49.2709 151.633 71.0348 150.891C73.1796 148.077 75.2399 145.193 77.206 142.244Z" fill="var(--sapContent_Illustrative_Color18)"/>
<path d="M74.8213 150.764L75.1928 149.444C74.8635 149.914 74.539 150.341 74.2051 150.787L74.8213 150.768V150.764Z" fill="var(--sapContent_Illustrative_Color19)"/>
<path d="M152.78 193.869C141.816 182.532 131.453 167.611 116.533 131.63L115.179 128.347C111.199 119.16 107.521 109.856 104.149 100.435L130.583 196.161C130.607 196.227 130.626 196.293 130.64 196.363C130.865 196.974 131.261 197.505 131.778 197.894C132.342 198.317 133.024 198.557 133.73 198.575L157.319 198.327C155.776 196.889 154.257 195.396 152.78 193.869Z" fill="var(--sapContent_Illustrative_Color3)"/>
<path d="M98.0433 74.0207C98.1468 74.1475 98.2221 74.2931 98.2691 74.4481C103.584 92.4738 110 110.161 117.479 127.412L118.834 130.695C133.608 166.3 143.805 181.029 154.577 192.155C156.632 194.273 158.754 196.33 160.936 198.317L166.317 198.256C166.402 198.049 166.519 197.857 166.66 197.683C166.853 197.453 167.093 197.26 167.366 197.124C167.639 196.988 167.935 196.908 168.241 196.889C168.542 196.908 168.838 196.988 169.111 197.124C169.384 197.26 169.619 197.448 169.807 197.688C169.939 197.847 170.047 198.026 170.122 198.219L268.725 197.166C269.031 197.19 269.341 197.134 269.624 197.002C269.906 196.875 270.146 196.678 270.329 196.429C270.513 196.18 270.635 195.889 270.677 195.584C270.687 195.499 270.687 195.419 270.677 195.335C270.682 195.405 270.682 195.476 270.677 195.546C270.635 195.851 270.513 196.143 270.329 196.392C270.146 196.64 269.906 196.838 269.624 196.965C269.341 197.096 269.036 197.152 268.725 197.129L214.078 197.688C213.753 197.702 213.434 197.641 213.137 197.514C212.841 197.392 212.578 197.209 212.366 196.969C212.145 196.734 211.985 196.457 211.896 196.147C211.801 195.847 211.773 195.523 211.811 195.208L222.836 77.2473C222.916 76.5757 223.231 75.9604 223.73 75.5048C224.233 75.0493 224.882 74.7862 225.56 74.7675H234.657L223.015 74.6313L99.0969 73.1565C98.7959 73.133 98.4949 73.18 98.2221 73.3021C98.0057 73.4007 97.8175 73.5416 97.6576 73.7154C97.8081 73.7859 97.9398 73.8939 98.048 74.0207H98.0433Z" fill="var(--sapContent_Illustrative_Color3)"/>
<path d="M118.085 58.2538L111.427 60.0939L118.726 60.3477L118.085 58.2538Z" fill="var(--sapContent_Illustrative_Color3)"/>
<path d="M115.588 61.2995L111.427 60.0939L116.165 60.2208L115.588 61.2995Z" fill="var(--sapContent_Illustrative_Color15)"/>
<path d="M121.84 76.012H131.645C133.935 76.012 135.085 73.2694 133.472 71.661L126.491 64.7165L120.701 58.957C118.65 56.9173 115.136 58.3533 115.136 61.2356V69.3634C115.135 71.126 115.841 72.8166 117.099 74.0634C118.356 75.3102 120.061 76.0111 121.84 76.012Z" fill="var(--sapContent_Illustrative_Color2)"/>
<path opacity="0.5" d="M119.468 60.9047C119.021 60.4624 119.021 59.7456 119.467 59.3035C119.913 58.8614 120.637 58.8616 121.083 59.3038L138.533 76.5984C138.98 77.0407 138.98 77.7575 138.534 78.1996C138.088 78.6417 137.364 78.6415 136.918 78.1993L119.468 60.9047Z" fill="var(--sapContent_Illustrative_Color8)"/>
<path d="M121.844 62.037L119.315 64.5428C118.63 65.2221 118.245 66.1435 118.245 67.1042C118.245 68.0649 118.63 68.9862 119.315 69.6655L121.622 71.9512C122.978 73.2956 124.817 74.0511 126.735 74.0515C128.653 74.052 130.493 73.2974 131.85 71.9537L121.844 62.037Z" fill="var(--sapContent_Illustrative_Color4)"/>
<path d="M133.468 71.661L126.487 64.7165L120.696 58.957C119.597 57.8634 120.63 60.3007 119.456 60.8932C119.247 60.6801 119.13 60.3939 119.132 60.0964C119.134 59.7989 119.254 59.5141 119.467 59.3037C119.681 59.0916 119.971 58.9724 120.274 58.9724C120.577 58.9724 120.868 59.0916 121.082 59.3037L138.533 76.5994C138.747 76.8117 138.868 77.0996 138.868 77.3997C138.868 77.6999 138.747 77.9877 138.533 78.2001C138.427 78.3053 138.301 78.3887 138.163 78.4456C138.024 78.5025 137.875 78.5318 137.725 78.5318C137.575 78.5318 137.427 78.5025 137.288 78.4456C137.149 78.3887 137.023 78.3053 136.917 78.2001L133.697 75.009C134.409 74.0603 134.46 72.6476 133.468 71.661Z" fill="var(--sapContent_Illustrative_Color4)"/>
<path d="M120.696 58.957L126.487 64.7165L133.468 71.6609C134.46 72.6476 134.409 74.0603 133.695 75.0055L116.912 58.374C116.909 58.3701 116.906 58.3663 116.902 58.3628C118.074 57.7703 119.597 57.8634 120.696 58.957Z" fill="var(--sapContent_Illustrative_Color4)"/>
<path d="M117.636 60.7573C117.559 60.8861 117.238 60.8363 116.919 60.6461C116.6 60.4558 116.403 60.1972 116.48 60.0684C116.557 59.9396 116.878 59.9894 117.197 60.1796C117.516 60.3699 117.712 60.6285 117.636 60.7573Z" fill="var(--sapContent_Illustrative_Color4)"/>
<path d="M110.142 61.1013C110.44 61.0124 110.716 61.2942 110.621 61.5905L109.677 64.5228C109.214 65.9624 107.387 66.3936 106.329 65.3129C105.271 64.2321 105.741 62.4142 107.19 61.9819L110.142 61.1013Z" fill="var(--sapContent_Illustrative_Color8)"/>
<path d="M237.606 75.4626C237.046 75.0446 236.373 74.8051 235.673 74.7722C236.373 74.8004 237.046 75.0446 237.606 75.4626Z" fill="var(--sapContent_Illustrative_Color7)"/>
<path opacity="0.7" d="M237.606 75.4626C237.046 75.0446 236.373 74.8051 235.673 74.7722C236.373 74.8004 237.046 75.0446 237.606 75.4626Z" fill="var(--sapContent_Illustrative_Color15)"/>
<path d="M259.52 153.788L264.831 173.448L259.52 153.784V153.788Z" fill="var(--sapContent_Illustrative_Color7)"/>
<path opacity="0.7" d="M259.52 153.788L264.831 173.448L259.52 153.784V153.788Z" fill="var(--sapContent_Illustrative_Color2)"/>
<path opacity="0.7" d="M259.52 153.788L264.831 173.448L259.52 153.784V153.788Z" fill="var(--sapContent_Illustrative_Color15)"/>
<path d="M270.56 194.673C270.64 194.884 270.682 195.105 270.682 195.33C270.682 195.095 270.645 194.856 270.56 194.635L264.835 173.448L270.56 194.673Z" fill="var(--sapContent_Illustrative_Color7)"/>
<path opacity="0.7" d="M270.56 194.673C270.64 194.884 270.682 195.105 270.682 195.33C270.682 195.095 270.645 194.856 270.56 194.635L264.835 173.448L270.56 194.673Z" fill="var(--sapContent_Illustrative_Color15)"/>
<path d="M259.53 153.784L250.494 120.334C250.48 120.306 250.471 120.273 250.461 120.245L259.52 153.784H259.53Z" fill="var(--sapContent_Illustrative_Color19)"/>
<path opacity="0.7" d="M259.53 153.784L250.494 120.334C250.48 120.306 250.471 120.273 250.461 120.245L259.52 153.784H259.53Z" fill="var(--sapContent_Illustrative_Color15)"/>
<path d="M223.725 75.4955C223.227 75.951 222.911 76.571 222.832 77.2379L211.806 195.199C211.769 195.513 211.797 195.833 211.891 196.138C211.98 196.443 212.14 196.725 212.361 196.96C212.573 197.195 212.836 197.383 213.133 197.505C213.429 197.631 213.749 197.688 214.073 197.678L268.721 197.12C269.026 197.143 269.337 197.087 269.619 196.955C269.901 196.828 270.141 196.631 270.324 196.382C270.508 196.133 270.63 195.842 270.673 195.537C270.673 195.466 270.673 195.396 270.673 195.325C270.673 195.1 270.63 194.879 270.55 194.668L264.816 173.444L259.506 153.784L250.447 120.245C245.028 106.056 240.578 91.5204 237.135 76.7307C237.102 76.5663 237.102 76.3972 237.135 76.2328C237.164 76.0684 237.225 75.9088 237.309 75.7632C237.394 75.6457 237.493 75.5424 237.606 75.4532C237.051 75.0399 236.383 74.8004 235.691 74.7628H225.555C224.873 74.7769 224.224 75.0352 223.721 75.4908L223.725 75.4955Z" fill="var(--sapContent_Illustrative_Color3)"/>
<path d="M223.725 75.4955C223.227 75.951 222.911 76.571 222.832 77.2379L211.806 195.199C211.769 195.513 211.797 195.833 211.891 196.138C211.98 196.443 212.14 196.725 212.361 196.96C212.573 197.195 212.836 197.383 213.133 197.505C213.429 197.631 213.749 197.688 214.073 197.678L268.721 197.12C269.026 197.143 269.337 197.087 269.619 196.955C269.901 196.828 270.141 196.631 270.324 196.382C270.508 196.133 270.63 195.842 270.673 195.537C270.673 195.466 270.673 195.396 270.673 195.325C270.673 195.1 270.63 194.879 270.55 194.668L264.816 173.444L259.506 153.784L250.447 120.245C245.028 106.056 240.578 91.5204 237.135 76.7307C237.102 76.5663 237.102 76.3972 237.135 76.2328C237.164 76.0684 237.225 75.9088 237.309 75.7632C237.394 75.6457 237.493 75.5424 237.606 75.4532C237.051 75.0399 236.383 74.8004 235.691 74.7628H225.555C224.873 74.7769 224.224 75.0352 223.721 75.4908L223.725 75.4955Z" fill="var(--sapContent_Illustrative_Color15)"/>
<path d="M239.44 75.7209C239.341 75.5847 239.219 75.472 239.078 75.378C238.937 75.2888 238.777 75.2278 238.608 75.1996C238.452 75.1714 238.293 75.1714 238.137 75.1996C237.968 75.2324 237.808 75.2982 237.667 75.4015L237.629 75.4344C237.516 75.5236 237.418 75.627 237.333 75.7444C237.248 75.89 237.187 76.0497 237.159 76.214C237.126 76.3784 237.126 76.5475 237.159 76.7119C240.602 91.5016 245.047 106.038 250.47 120.226C250.48 120.254 250.489 120.287 250.503 120.315C252.827 126.398 255.334 132.409 258.029 138.355C260.273 143.442 262.432 148.007 264.492 152.093C268.133 159.471 272.267 166.596 276.867 173.425C279.68 177.61 282.841 181.555 286.322 185.209C294.346 193.635 303.518 200.896 313.565 206.776L313.41 203.756C304.135 198.153 295.654 191.338 288.199 183.49C285.202 180.343 282.451 176.971 279.967 173.402C276.416 168.381 271.994 161.27 266.933 151.262C264.845 147.129 262.648 142.512 260.348 137.331C252.582 120.085 246.298 102.21 241.566 83.9024C240.903 81.3193 240.268 78.7267 239.657 76.1342C239.614 75.9839 239.539 75.843 239.445 75.7209H239.44Z" fill="var(--sapContent_Illustrative_Color8)"/>
<path d="M160.95 198.308C158.753 196.321 156.637 194.264 154.591 192.146C143.829 181.019 133.626 166.291 118.848 130.686L117.493 127.403C110.009 110.161 103.589 92.4785 98.2643 74.4575C98.2173 74.3025 98.142 74.1569 98.0386 74.0301C97.9398 73.8986 97.8128 73.7953 97.667 73.7154C97.5306 73.6403 97.3801 73.5933 97.2248 73.5745C97.0649 73.5604 96.9097 73.5745 96.7545 73.6168C96.5946 73.6638 96.4487 73.7436 96.317 73.8422C96.1947 73.9503 96.0912 74.0724 96.0066 74.2133C95.9313 74.3589 95.8843 74.5186 95.8702 74.6829C95.8467 74.8379 95.8608 75.0023 95.9078 75.1526L95.9925 75.425C96.3641 74.2133 96.9332 74.2461 97.2907 75.5283L104.177 100.458C107.554 109.875 111.232 119.179 115.212 128.37L116.566 131.653C131.482 167.634 141.848 182.555 152.813 193.893C154.29 195.419 155.809 196.913 157.352 198.374C160.296 201.149 163.358 203.798 166.538 206.316L166.364 202.99C164.506 201.469 162.7 199.905 160.95 198.303V198.308Z" fill="var(--sapContent_Illustrative_Color8)"/>
<path d="M74.2051 150.783C74.539 150.336 74.8636 149.885 75.1928 149.439L77.2107 142.244C75.2493 145.194 73.1938 148.073 71.0442 150.886C64.8213 159.044 57.8411 166.596 50.2023 173.448C41.0443 181.658 30.9925 188.821 20.2305 194.79L20.0518 197.678C32.286 191.037 43.636 182.898 53.8429 173.448C61.3124 166.53 68.1279 158.941 74.2051 150.783Z" fill="var(--sapContent_Illustrative_Color8)"/>
<path d="M104.149 100.449L97.2625 75.5189C96.9098 74.2367 96.3218 74.2039 95.9643 75.4156C95.9502 75.4485 95.9408 75.4813 95.9314 75.5189L77.2108 142.244L75.1929 149.439L74.8213 150.764L68.4525 173.448L61.985 196.495C61.8815 196.777 61.8533 197.077 61.9004 197.373C61.9427 197.669 62.0556 197.946 62.2343 198.186C62.4177 198.42 62.6576 198.608 62.9304 198.735C63.2032 198.857 63.5043 198.909 63.8053 198.881L84.2851 198.782C84.1064 198.759 83.9324 198.712 83.7724 198.637C83.4902 198.51 83.2409 198.317 83.0481 198.073C82.8552 197.829 82.7235 197.547 82.653 197.242C82.5871 196.932 82.6012 196.608 82.6906 196.302L94.1017 140.304C94.3745 138.966 94.8119 138.966 95.0847 140.304L106.124 196.392C106.209 196.697 106.218 197.021 106.148 197.331C106.082 197.636 105.946 197.923 105.748 198.167C105.565 198.383 105.339 198.561 105.085 198.683L128.754 198.571C129.05 198.594 129.351 198.538 129.624 198.416C129.897 198.294 130.137 198.106 130.32 197.866C130.499 197.627 130.616 197.35 130.668 197.054C130.701 196.828 130.692 196.598 130.64 196.377C130.626 196.307 130.607 196.241 130.583 196.175L104.149 100.449Z" fill="var(--sapContent_Illustrative_Color8)"/>
<path d="M106.148 197.312C106.214 197.002 106.209 196.678 106.124 196.373L95.1082 140.323C94.8354 138.985 94.3979 138.985 94.1251 140.323L82.714 196.321C82.6247 196.626 82.6105 196.95 82.6764 197.26C82.7422 197.561 82.8786 197.848 83.0715 198.092C83.2643 198.336 83.5136 198.529 83.7958 198.655C83.9605 198.73 84.1298 198.777 84.3085 198.801C84.4402 198.82 84.572 198.82 84.7037 198.801L104.13 198.89C104.44 198.904 104.751 198.848 105.038 198.721L105.108 198.679C105.362 198.557 105.588 198.383 105.771 198.162C105.964 197.913 106.091 197.622 106.148 197.312Z" fill="var(--sapContent_Illustrative_Color4)"/>
<path d="M169.69 209.138L170.301 199.36C170.339 199.059 170.31 198.759 170.226 198.467C170.193 198.378 170.16 198.289 170.118 198.204C170.042 198.012 169.934 197.833 169.802 197.674C169.614 197.439 169.379 197.246 169.106 197.11C168.833 196.974 168.542 196.894 168.236 196.875C167.93 196.894 167.634 196.974 167.361 197.11C167.088 197.246 166.849 197.434 166.656 197.669C166.515 197.843 166.397 198.035 166.312 198.242C166.284 198.317 166.247 198.388 166.218 198.463C166.134 198.754 166.105 199.059 166.143 199.36L166.331 202.962L166.505 206.287L166.656 209.138C166.66 209.89 166.919 210.618 167.385 211.205C167.479 211.327 167.592 211.421 167.728 211.496C167.86 211.566 168.01 211.609 168.161 211.618C168.311 211.609 168.457 211.566 168.589 211.496C168.721 211.425 168.838 211.327 168.932 211.209C169.398 210.618 169.666 209.89 169.69 209.138Z" fill="var(--sapContent_Illustrative_Color4)"/>
<path d="M20.4752 190.751C20.5128 190.455 20.4893 190.15 20.4141 189.859C20.3294 189.563 20.1883 189.295 19.9907 189.06C19.7978 188.83 19.5627 188.637 19.2945 188.501C19.0217 188.365 18.7301 188.285 18.4244 188.266C18.1186 188.28 17.8223 188.36 17.5542 188.496C17.2813 188.628 17.0367 188.821 16.8439 189.055C16.6463 189.29 16.4958 189.558 16.4064 189.849C16.3217 190.14 16.2936 190.45 16.3312 190.751L16.8298 200.525C16.905 201.891 17.5777 203.004 18.335 203.004C19.0923 203.004 19.779 201.887 19.8684 200.525L20.0471 197.66L20.2259 194.771L20.4752 190.746V190.751Z" fill="var(--sapContent_Illustrative_Color4)"/>
<path d="M313.735 210.815C313.749 211.073 313.787 211.332 313.848 211.585C314.083 212.576 314.643 213.304 315.259 213.304C315.875 213.304 316.416 212.581 316.67 211.595C316.736 211.341 316.778 211.078 316.797 210.815L317.404 201.041C317.456 200.736 317.441 200.431 317.366 200.13C317.282 199.834 317.14 199.562 316.943 199.327C316.745 199.092 316.501 198.909 316.223 198.777C315.941 198.646 315.64 198.58 315.33 198.58C315.024 198.58 314.723 198.646 314.445 198.777C314.168 198.904 313.918 199.092 313.721 199.327C313.528 199.562 313.382 199.834 313.298 200.13C313.222 200.426 313.213 200.736 313.26 201.041L313.401 203.803L313.556 206.823L313.735 210.815Z" fill="var(--sapContent_Illustrative_Color4)"/>
<path d="M32.6858 42.3842C33.5795 42.7176 34.398 43.2343 35.0847 43.8918C35.7808 44.554 36.3311 45.3525 36.7027 46.2354C36.8721 46.6346 37.0038 47.0432 37.0978 47.4659H41.4958C43.3726 47.4659 45.1787 46.7192 46.5099 45.3994C47.841 44.0703 48.5889 42.2715 48.5889 40.3975C48.5889 39.4676 48.4055 38.5517 48.048 37.6922C47.6905 36.8328 47.1684 36.0531 46.5099 35.4003C45.1787 34.0758 43.3773 33.3291 41.4958 33.3291H18.5513C17.62 33.3291 16.698 33.5122 15.8373 33.8692C14.9765 34.2261 14.1957 34.7475 13.5372 35.405C12.8787 36.0625 12.3565 36.8422 11.9991 37.6969C11.6416 38.5564 11.4581 39.4723 11.4581 40.4022C11.4581 40.9235 11.5193 41.4449 11.6369 41.9521H29.8777C30.8373 41.9051 31.7921 42.0554 32.6905 42.3889L32.6858 42.3842Z" fill="var(--sapContent_Illustrative_Color18)"/>
<path d="M1.75457 54.1023C2.4413 54.7645 3.25973 55.2764 4.15342 55.6099C5.04712 55.9527 5.99724 56.1124 6.95208 56.0795H29.8871C30.8514 56.1171 31.8109 55.9574 32.7093 55.6099C33.603 55.2764 34.4215 54.7598 35.1082 54.1023C35.8043 53.44 36.3547 52.6416 36.7263 51.7586C37.1026 50.8851 37.3001 49.9411 37.3001 48.9876C37.3001 48.4663 37.239 47.9497 37.1214 47.4424C37.0273 47.0197 36.8956 46.6111 36.7263 46.2119C36.3547 45.329 35.8043 44.5305 35.1082 43.8683C34.4215 43.2061 33.603 42.6941 32.7093 42.356C31.8109 42.0084 30.8514 41.8488 29.8871 41.8863H6.95208C5.99724 41.8535 5.04712 42.0131 4.15342 42.356C3.25973 42.6895 2.4413 43.2061 1.75457 43.8683C1.05843 44.5305 0.508068 45.329 0.136478 46.2119C0.098849 46.3012 0.0706454 46.3904 0.0377197 46.4796V51.4956C0.0706454 51.5802 0.098849 51.6741 0.136478 51.7586C0.508068 52.6416 1.05843 53.44 1.75457 54.1023Z" fill="var(--sapContent_Illustrative_Color18)"/>
<path d="M257.521 36.4148C257.62 36.5416 257.742 36.6543 257.883 36.7388C258.029 36.8234 258.189 36.875 258.354 36.8985C258.509 36.922 258.669 36.9126 258.824 36.8703C258.979 36.8328 259.13 36.7623 259.257 36.6637C261.162 35.2312 262.705 34.6911 263.96 35.0621C264.948 35.4848 265.781 36.194 266.359 37.0958C267.145 38.0351 268.067 39.1153 269.309 39.1153L269.732 39.0778C270.169 38.9744 270.574 38.7725 270.917 38.4813C271.265 38.1948 271.538 37.8285 271.712 37.4151C271.994 36.7952 272.474 36.288 273.081 35.9733C273.899 35.5929 274.821 35.4895 275.705 35.6727C276.453 35.8089 277.154 36.133 277.747 36.612C278.006 36.7999 278.325 36.8797 278.645 36.8422C278.965 36.7952 279.257 36.6261 279.454 36.3725C279.652 36.1236 279.751 35.8136 279.727 35.4942C279.699 35.1749 279.553 34.879 279.318 34.6629C278.405 33.9209 277.319 33.423 276.157 33.2164C274.746 32.9299 273.278 33.1083 271.975 33.7236C270.936 34.2543 270.099 35.095 269.572 36.133C269.483 36.2786 269.374 36.4664 269.299 36.5651C268.923 36.2504 268.589 35.8934 268.302 35.4989C267.418 34.198 266.152 33.2023 264.68 32.6434C262.667 32.0375 260.339 32.7044 257.775 34.6394C257.648 34.7381 257.54 34.8602 257.451 35.0011C257.366 35.1467 257.309 35.3064 257.291 35.4707C257.267 35.6257 257.277 35.7854 257.314 35.9404C257.347 36.1095 257.418 36.2692 257.521 36.4101V36.4148Z" fill="var(--sapContent_Illustrative_Color18)"/>
<path d="M277.94 48.1375C276.82 46.4514 275.198 45.1505 273.307 44.4131C270.734 43.6428 267.756 44.5399 264.421 47.0197C264.177 47.2217 264.022 47.5129 263.989 47.8322C263.951 48.1469 264.036 48.4663 264.224 48.7246C264.417 48.9735 264.704 49.1426 265.019 49.1943C265.334 49.2459 265.663 49.1708 265.927 48.9876C268.58 47.0056 270.818 46.2589 272.587 46.7943C273.993 47.3814 275.183 48.3771 276.007 49.6592C277.027 50.9649 278.086 52.2048 279.619 52.2048C279.798 52.2189 279.972 52.2189 280.151 52.2048C280.673 52.0686 281.152 51.815 281.562 51.4627C281.971 51.1105 282.291 50.6643 282.502 50.1665C282.916 49.2647 283.622 48.532 284.506 48.0812C285.673 47.5458 286.98 47.3955 288.241 47.6585C289.313 47.8604 290.315 48.3207 291.167 49.0017C291.294 49.1144 291.439 49.199 291.599 49.2553C291.759 49.307 291.929 49.3305 292.098 49.3164C292.262 49.3023 292.422 49.2553 292.568 49.1755C292.714 49.1003 292.846 48.9923 292.949 48.8608C293.057 48.7293 293.142 48.5837 293.189 48.4193C293.236 48.2596 293.25 48.0906 293.227 47.9215C293.203 47.7571 293.147 47.5974 293.062 47.4518C292.977 47.3062 292.865 47.1794 292.728 47.0808C291.557 46.1321 290.165 45.4886 288.683 45.2068C286.886 44.8311 285.014 45.0565 283.358 45.855C282.041 46.5172 280.974 47.588 280.31 48.9031C280.024 49.415 279.84 49.7485 279.675 49.7485C279.332 49.8377 278.561 48.8796 277.94 48.1422V48.1375Z" fill="var(--sapContent_Illustrative_Color18)"/>
<path d="M207.747 40.8343C208.33 42.2949 207.662 43.9669 206.251 44.5728C204.84 45.1787 203.222 44.4836 202.634 43.0229C202.051 41.5622 202.719 39.8902 204.13 39.2844C205.541 38.6785 207.164 39.3736 207.747 40.8343Z" fill="var(--sapContent_Illustrative_Color10)"/>
<path d="M62.446 38.0774C63.9182 38.0774 65.113 39.2703 65.113 40.7404C65.113 42.2104 63.9182 43.4033 62.446 43.4033C60.9737 43.4033 59.7791 42.2104 59.7791 40.7404C59.7791 39.2703 60.9737 38.0774 62.446 38.0774Z" fill="var(--sapContent_Illustrative_Color10)"/>
<path d="M242.973 53.2757C242.761 56.7747 241.994 59.386 241.091 59.3766C240.188 59.3719 239.431 56.7512 239.238 53.2287C235.72 52.9892 233.1 52.2048 233.109 51.2984C233.119 50.3919 235.738 49.6687 239.247 49.509C239.459 46.0053 240.221 43.3987 241.129 43.3987C242.037 43.3987 242.785 46.0241 242.982 49.5465C246.5 49.7861 249.12 50.5751 249.111 51.4816C249.102 52.388 246.482 53.1113 242.973 53.271V53.2757Z" fill="var(--sapContent_Illustrative_Color10)"/>
</svg>
`;

// node_modules/@ui5/webcomponents-fiori/dist/illustrations/sapIllus-Spot-Tent.js
var sapIllus_Spot_Tent_default = `<svg width="128" height="137" viewBox="0 0 128 137" fill="none" xmlns="http://www.w3.org/2000/svg" id="sapIllus-Spot-Tent">
<path d="M112.69 31.4022C106.69 24.3716 99.2251 18.7253 90.8152 14.8577C82.4054 10.9902 73.2547 8.9895 63.9947 9.00007C51.8032 8.98245 39.8658 12.452 29.5933 18.9965H35.3328C36.5322 18.9965 37.6822 19.472 38.5323 20.3139C39.3789 21.1592 39.8552 22.304 39.8552 23.5016C39.8552 24.6992 39.3789 25.8439 38.5323 26.6928C37.6822 27.5382 36.5322 28.0102 35.3328 28.0102H32.5107C32.5847 28.3342 32.62 28.6653 32.6235 28.9964C32.6235 29.5988 32.5036 30.1976 32.2708 30.7541C32.0309 31.3142 31.6781 31.8179 31.2372 32.237C30.7998 32.6597 30.2777 32.9873 29.7097 33.2021C29.1418 33.417 28.5315 33.5156 27.9248 33.4874H13.585C6.96713 41.8953 2.58935 51.8389 0.85376 62.3848C19.1939 50.4863 34.2463 32.2617 66.9579 28.0912C82.1302 26.161 97.6165 27.6967 112.69 31.4022Z" fill="var(--sapContent_Illustrative_Color7)"/>
<path d="M56.5655 93.8464H56.1739C52.3006 99.049 47.9546 103.882 43.1923 108.292H52.5087L56.5655 93.8464Z" fill="var(--sapContent_Illustrative_Color7)"/>
<path d="M56.5655 93.8464H56.1739C52.3006 99.049 47.9546 103.882 43.1923 108.292H52.5087L56.5655 93.8464Z" fill="var(--sapContent_Illustrative_Color20)"/>
<path d="M54.1631 93.9239C39.2448 94.4488 23.2682 95.8788 5.10095 97.7915C6.67427 101.472 8.58977 104.995 10.8263 108.313H40.8781C45.7498 103.941 50.1946 99.1229 54.1631 93.9204V93.9239Z" fill="var(--sapContent_Illustrative_Color7)"/>
<path d="M54.1631 93.9239C39.2448 94.4488 23.2682 95.8788 5.10095 97.7915C6.67427 101.472 8.58977 104.995 10.8263 108.313H40.8781C45.7498 103.941 50.1946 99.1229 54.1631 93.9204V93.9239Z" fill="var(--sapContent_Illustrative_Color20)"/>
<path d="M92.8683 123.896C92.5367 123.646 92.2827 123.307 92.1416 122.916C92.1734 123.057 92.1804 123.202 92.1628 123.346C92.1311 123.533 92.0535 123.709 91.9406 123.864C91.8242 124.015 91.6689 124.135 91.4961 124.216C91.3232 124.294 91.1292 124.329 90.9387 124.315L75.8511 124.389L75.8087 124.413C75.6253 124.494 75.4278 124.53 75.2302 124.523L62.8483 124.466C62.7636 124.473 62.6825 124.473 62.5978 124.466L49.5456 124.526C49.3551 124.544 49.1646 124.512 48.9917 124.435C48.8189 124.354 48.6637 124.234 48.5473 124.082C48.4344 123.927 48.3603 123.751 48.3321 123.561C48.3039 123.374 48.3215 123.184 48.3885 123.004L52.5123 108.313H43.1959C37.3188 113.758 30.8421 118.524 23.8927 122.518C28.9231 126.566 34.5426 129.824 40.5572 132.191C48.0216 135.118 55.9764 136.618 63.9983 136.608C71.9072 136.618 79.7526 135.16 87.1254 132.311C92.3639 130.285 97.3061 127.576 101.832 124.258L94.1136 124.343C93.6585 124.329 93.2211 124.17 92.8613 123.896H92.8683Z" fill="var(--sapContent_Illustrative_Color7)"/>
<path d="M10.8263 108.302C13.3274 112.015 16.2095 115.453 19.4266 118.57C19.476 118.461 19.5395 118.358 19.6171 118.263C19.7406 118.115 19.8958 117.996 20.0722 117.911C20.2451 117.827 20.432 117.774 20.626 117.763C20.8201 117.774 21.007 117.827 21.1799 117.915C21.3527 117.999 21.5009 118.119 21.6244 118.267C21.7478 118.415 21.8431 118.587 21.896 118.774C21.9454 118.961 21.956 119.154 21.9348 119.345L21.8431 120.792C22.0935 121.011 22.344 121.229 22.598 121.444C29.1488 117.731 35.2798 113.329 40.8781 108.306H10.8263V108.302Z" fill="var(--sapContent_Illustrative_Color7)"/>
<path d="M56.8019 93.0011C56.5937 93.2899 56.3856 93.5752 56.174 93.857H56.5655L56.8019 93.0011Z" fill="var(--sapContent_Illustrative_Color19)"/>
<path d="M58.0894 88.415L70.0199 45.8896L70.041 45.8227L69.9881 45.6501C69.9564 45.5515 69.9493 45.4458 69.967 45.3437C69.974 45.2415 70.0022 45.1394 70.0516 45.0478C70.1045 44.9562 70.1716 44.8787 70.2527 44.8118C70.3338 44.7484 70.4291 44.6991 70.5278 44.6674C70.6301 44.6392 70.736 44.6286 70.8383 44.6427C70.9371 44.6533 71.0323 44.6815 71.1205 44.7308C71.2193 44.6216 71.3392 44.53 71.4733 44.4666C71.6461 44.3891 71.8366 44.3574 72.0271 44.375L121.583 44.9668C119.206 40.0848 116.214 35.5269 112.679 31.4022C97.6094 27.7002 82.1232 26.1609 66.9508 28.0947C34.2427 32.2687 19.1974 50.4933 0.850206 62.3883C0.285786 65.8296 4.82042e-05 69.3062 4.82042e-05 72.7933C-0.0105347 81.3808 1.72153 89.8803 5.09394 97.7809C23.2577 95.8788 39.2378 94.4487 54.1561 93.9134C55.5284 92.131 56.8407 90.2994 58.093 88.4185L58.0894 88.415Z" fill="var(--sapContent_Illustrative_Color18)"/>
<path d="M82.289 79.5704C79.7561 73.7092 77.4103 67.7775 75.2584 61.779L92.1099 122.79C92.124 122.832 92.1381 122.874 92.1452 122.92C92.2863 123.311 92.5403 123.649 92.8718 123.899C93.2317 124.17 93.6656 124.322 94.1171 124.336L101.836 124.251C103.247 123.219 104.619 122.141 105.938 120.99C99.0664 113.801 92.5332 104.234 83.1603 81.6521L82.2925 79.5739L82.289 79.5704Z" fill="var(--sapContent_Illustrative_Color3)"/>
<path d="M121.604 44.9668L72.0447 44.375C71.8542 44.3574 71.6637 44.3891 71.4908 44.4666C71.3568 44.53 71.2368 44.6216 71.1381 44.7308C71.2298 44.7801 71.3144 44.847 71.3779 44.928C71.4414 45.0091 71.4873 45.1042 71.519 45.2028C74.9056 56.6962 78.9941 67.9713 83.7634 78.9645L84.6277 81.0533C93.9159 103.438 100.371 112.874 107.13 119.936C113.709 113.966 118.966 106.689 122.56 98.5734C126.155 90.4579 128.007 81.6838 128 72.811C128.017 63.1668 125.83 53.6459 121.608 44.9668H121.604Z" fill="var(--sapContent_Illustrative_Color3)"/>
<path d="M81.7317 32.1934L76.6585 33.5954L82.2195 33.7888L81.7317 32.1934Z" fill="var(--sapContent_Illustrative_Color3)"/>
<path d="M79.8292 34.5139L76.6584 33.5954L80.2682 33.6921L79.8292 34.5139Z" fill="var(--sapContent_Illustrative_Color15)"/>
<path d="M84.5922 45.7234H92.0626C93.8077 45.7234 94.6836 43.6338 93.455 42.4083L88.1361 37.1173L83.7243 32.7292C82.1622 31.1751 79.4842 32.2692 79.4842 34.4652V40.6578C79.484 42.0008 80.022 43.2889 80.9799 44.2388C81.9378 45.1887 83.2371 45.7228 84.5922 45.7234Z" fill="var(--sapContent_Illustrative_Color2)"/>
<path opacity="0.5" d="M82.7848 34.2131C82.4448 33.8761 82.4447 33.33 82.7846 32.9931C83.1244 32.6563 83.6755 32.6564 84.0155 32.9934L97.3112 46.1702C97.6512 46.5072 97.6513 47.0534 97.3114 47.3902C96.9716 47.727 96.4205 47.7269 96.0805 47.3899L82.7848 34.2131Z" fill="var(--sapContent_Illustrative_Color8)"/>
<path d="M84.5952 35.0758L82.6688 36.985C82.1465 37.5026 81.8531 38.2046 81.8531 38.9365C81.8531 39.6685 82.1465 40.3705 82.6688 40.888L84.426 42.6295C85.4592 43.6538 86.8607 44.2294 88.3221 44.2297C89.7835 44.2301 91.1852 43.6552 92.219 42.6314L84.5952 35.0758Z" fill="var(--sapContent_Illustrative_Color4)"/>
<path d="M93.4516 42.4083L88.1327 37.1173L83.7209 32.7292C82.8835 31.8959 83.6705 33.7529 82.7761 34.2044C82.6165 34.042 82.5279 33.8239 82.5294 33.5972C82.5308 33.3706 82.6223 33.1536 82.784 32.9933C82.9473 32.8317 83.1686 32.7409 83.3993 32.7409C83.63 32.7409 83.8514 32.8317 84.0146 32.9933L97.3111 46.1709C97.4742 46.3327 97.5658 46.552 97.5658 46.7807C97.5658 47.0094 97.4742 47.2287 97.3111 47.3905C97.2303 47.4707 97.1343 47.5342 97.0286 47.5776C96.923 47.6209 96.8098 47.6433 96.6955 47.6433C96.5811 47.6433 96.4679 47.6209 96.3623 47.5776C96.2567 47.5342 96.1607 47.4707 96.0798 47.3905L93.6266 44.9592C94.169 44.2364 94.2074 43.1601 93.4516 42.4083Z" fill="var(--sapContent_Illustrative_Color4)"/>
<path d="M83.7209 32.7292L88.1327 37.1173L93.4516 42.4083C94.2074 43.1601 94.169 44.2364 93.6246 44.9566L80.838 32.285C80.8355 32.2819 80.8329 32.2791 80.83 32.2764C81.7231 31.825 82.8834 31.8959 83.7209 32.7292Z" fill="var(--sapContent_Illustrative_Color4)"/>
<path d="M81.3889 34.1008C81.3304 34.199 81.0859 34.161 80.8428 34.0161C80.5996 33.8711 80.4499 33.674 80.5084 33.5759C80.567 33.4778 80.8115 33.5157 81.0546 33.6607C81.2978 33.8056 81.4474 34.0027 81.3889 34.1008Z" fill="var(--sapContent_Illustrative_Color4)"/>
<path d="M75.6797 34.3629C75.9069 34.2951 76.1171 34.5099 76.0445 34.7356L75.3256 36.9698C74.9727 38.0666 73.5803 38.3951 72.7743 37.5717C71.9683 36.7483 72.3266 35.3632 73.4307 35.0339L75.6797 34.3629Z" fill="var(--sapContent_Illustrative_Color8)"/>
<path d="M83.7565 78.961C78.9907 67.9642 74.9021 56.6892 71.5121 45.1993C71.4803 45.1006 71.4345 45.0091 71.371 44.9245C71.3075 44.8435 71.2228 44.7766 71.1311 44.7273C71.0429 44.678 70.9477 44.6498 70.8489 44.6392C70.7466 44.6251 70.6408 44.6357 70.5385 44.6639C70.4397 44.6956 70.3444 44.7449 70.2633 44.8083C70.1822 44.8752 70.1152 44.9527 70.0622 45.0443C70.0128 45.1359 69.9846 45.238 69.9776 45.3402C69.9599 45.4423 69.967 45.548 69.9987 45.6466L70.0517 45.8192L70.0305 45.8861L58.1001 88.4115C56.8478 90.2889 55.5355 92.124 54.1703 93.9204C50.2052 99.1194 45.7569 103.934 40.8853 108.302C35.2834 113.325 29.1559 117.731 22.6051 121.441C23.0319 121.8 23.4658 122.152 23.8997 122.497C30.8492 118.503 37.3259 113.737 43.2029 108.292C47.9652 103.885 52.3077 99.049 56.1846 93.8464C56.3962 93.5611 56.6043 93.2758 56.8125 92.9905L56.5761 93.8359L52.5194 108.295L48.3956 122.99C48.3285 123.166 48.3109 123.36 48.3391 123.547C48.3673 123.737 48.4414 123.913 48.5543 124.068C48.6707 124.22 48.8259 124.339 48.9988 124.42C49.1716 124.498 49.3621 124.53 49.5526 124.512L62.6048 124.452C62.492 124.435 62.3826 124.403 62.2768 124.357C62.0969 124.28 61.9381 124.156 61.8146 124.005C61.6912 123.85 61.6065 123.667 61.5642 123.473C61.5219 123.279 61.5324 123.078 61.5854 122.888L68.8593 87.1962C69.0322 86.3438 69.3109 86.3438 69.4872 87.1962L76.5178 122.955C76.5636 123.149 76.5636 123.35 76.5178 123.543C76.479 123.737 76.3908 123.92 76.2638 124.075C76.1474 124.213 76.0028 124.325 75.8405 124.406L90.9281 124.332C91.1186 124.346 91.3126 124.311 91.4855 124.234C91.6619 124.156 91.8136 124.033 91.93 123.882C92.0429 123.727 92.1205 123.55 92.1522 123.364C92.1699 123.219 92.1628 123.075 92.1311 122.934C92.1205 122.892 92.1099 122.846 92.0958 122.804L75.2443 61.7931C77.3962 67.7951 79.7385 73.7268 82.2749 79.5844L83.1427 81.6626C92.505 104.244 99.0523 113.811 105.921 121C106.319 120.655 106.714 120.303 107.106 119.944C100.347 112.881 93.8949 103.445 84.6066 81.0603L83.7565 78.968V78.961Z" fill="var(--sapContent_Illustrative_Color8)"/>
<path d="M75.2337 124.523C75.4312 124.53 75.6288 124.494 75.8122 124.413L75.8545 124.389C76.0168 124.308 76.1614 124.195 76.2778 124.058C76.4048 123.903 76.493 123.723 76.5318 123.526C76.5777 123.332 76.5777 123.131 76.5318 122.938L69.4977 87.1892C69.3214 86.3368 69.0427 86.3368 68.8698 87.1892L61.5959 122.881C61.543 123.071 61.5324 123.272 61.5747 123.466C61.617 123.66 61.7017 123.843 61.8252 123.998C61.9486 124.149 62.1074 124.269 62.2873 124.35C62.3931 124.396 62.5025 124.427 62.6154 124.445C62.7 124.452 62.7812 124.452 62.8658 124.445L75.2337 124.523Z" fill="var(--sapContent_Illustrative_Color4)"/>
<path d="M21.8924 118.771C21.8395 118.584 21.7443 118.411 21.6208 118.263C21.4973 118.115 21.3492 117.996 21.1763 117.911C21.0035 117.823 20.8165 117.77 20.6225 117.76C20.4285 117.77 20.2415 117.823 20.0686 117.908C19.8923 117.992 19.7371 118.112 19.6136 118.26C19.536 118.351 19.4725 118.457 19.4231 118.566C20.2098 119.327 21.0141 120.067 21.8395 120.789L21.9312 119.341C21.9524 119.151 21.9418 118.957 21.8924 118.771Z" fill="var(--sapContent_Illustrative_Color4)"/>
<path d="M29.7132 33.2021C30.2812 32.9873 30.8033 32.6597 31.2407 32.237C31.6817 31.8178 32.0344 31.3142 32.2743 30.7541C32.5071 30.1976 32.6271 29.5988 32.627 28.9964C32.6271 28.6653 32.5883 28.3342 32.5142 28.0102H35.3363C36.5357 28.0102 37.6857 27.5347 38.5358 26.6928C39.3825 25.8475 39.8587 24.6992 39.8587 23.5016C39.8587 22.3075 39.3825 21.1627 38.5358 20.3138C37.6857 19.4685 36.5357 18.9965 35.3363 18.9965H29.5968C26.997 20.6485 24.5241 22.4871 22.1888 24.4949C19.0316 27.2106 16.1495 30.2257 13.5779 33.498H27.9212C28.5315 33.5227 29.1418 33.424 29.7132 33.2021Z" fill="var(--sapContent_Illustrative_Color18)"/>
<path d="M66.1042 14.8895C66.3864 15.5904 66.0654 16.397 65.3846 16.6894C64.7038 16.9817 63.9277 16.6471 63.6455 15.9426C63.3633 15.2417 63.6843 14.4351 64.3651 14.1427C65.0459 13.8504 65.8291 14.185 66.1042 14.8895Z" fill="var(--sapContent_Illustrative_Color10)"/>
<path d="M83.0615 20.8774C82.9592 22.5611 82.5853 23.8151 82.1585 23.8151C81.721 23.8151 81.3577 22.5506 81.266 20.8563C79.5727 20.7401 78.3098 20.3632 78.3134 19.9264C78.3204 19.4896 79.5762 19.1444 81.266 19.0634C81.3683 17.3762 81.7351 16.1258 82.169 16.1258C82.6029 16.1258 82.9698 17.3903 83.0615 19.0846C84.7548 19.2008 86.0177 19.5812 86.0142 20.018C86.0106 20.4548 84.7513 20.8 83.0615 20.881V20.8774Z" fill="var(--sapContent_Illustrative_Color10)"/>
<path d="M48.6672 20.5569C48.8612 21.043 48.639 21.5995 48.1698 21.8003C47.7006 22.0011 47.1609 21.7721 46.9669 21.286C46.7728 20.7999 46.9951 20.2434 47.4643 20.0426C47.9334 19.8419 48.4767 20.0708 48.6672 20.5569Z" fill="var(--sapContent_Illustrative_Color10)"/>
</svg>
`;

// node_modules/@ui5/webcomponents-fiori/dist/illustrations/sapIllus-Dot-Tent.js
var sapIllus_Dot_Tent_default = `<svg width="45" height="46" viewBox="0 0 45 46" fill="none" xmlns="http://www.w3.org/2000/svg" id="sapIllus-Dot-Tent">
<path d="M11.8495 6.88857L6.60265 38.5138C6.38254 39.8405 7.27963 41.0945 8.60636 41.3146L30.6754 44.976C32.0021 45.1961 33.256 44.299 33.4762 42.9723L38.723 11.3471C38.9431 10.0204 38.046 8.76641 36.7193 8.54629L14.6503 4.88488C13.3236 4.66477 12.0696 5.56185 11.8495 6.88857Z" style="fill:var(--sapContent_Illustrative_Color3)"/>
<path d="M30.2351 6.39545H8.71177C7.39155 6.39545 6.32129 7.4657 6.32129 8.78593V39.6571C6.32129 40.9773 7.39155 42.0476 8.71177 42.0476H30.2351C31.5553 42.0476 32.6256 40.9773 32.6256 39.6571V8.78593C32.6256 7.4657 31.5553 6.39545 30.2351 6.39545Z" style="fill:var(--sapContent_Illustrative_Color8)"/>
<path d="M30.0654 42.3687H8.87215C8.11113 42.3663 7.38196 42.063 6.84383 41.5249C6.30571 40.9867 6.00235 40.2576 6 39.4965V8.94649C6.00235 8.18547 6.30571 7.4563 6.84383 6.91817C7.38196 6.38005 8.11113 6.07669 8.87215 6.07434H30.0654C30.8272 6.07434 31.5577 6.37694 32.0963 6.91557C32.635 7.45421 32.9376 8.18475 32.9376 8.94649V39.4965C32.9376 39.8737 32.8633 40.2472 32.7189 40.5957C32.5746 40.9441 32.363 41.2608 32.0963 41.5275C31.8296 41.7942 31.513 42.0057 31.1645 42.1501C30.8161 42.2944 30.4426 42.3687 30.0654 42.3687ZM8.87215 6.6898C8.28074 6.6898 7.71354 6.92475 7.29535 7.34294C6.87716 7.76113 6.64222 8.32832 6.64222 8.91973V39.4698C6.64222 40.0612 6.87716 40.6284 7.29535 41.0466C7.71354 41.4648 8.28074 41.6997 8.87215 41.6997H30.0654C30.6576 41.6997 31.2258 41.4651 31.6454 41.0471C32.065 40.6292 32.3019 40.062 32.3043 39.4698V8.94649C32.3019 8.35426 32.065 7.78709 31.6454 7.36915C31.2258 6.95122 30.6576 6.71656 30.0654 6.71656L8.87215 6.6898Z" style="fill:var(--sapContent_Illustrative_Color4)"/>
<path d="M32.3489 15.0922C35.9105 15.0922 38.7978 12.2049 38.7978 8.64323C38.7978 5.08157 35.9105 2.19427 32.3489 2.19427C28.7872 2.19427 25.8999 5.08157 25.8999 8.64323C25.8999 12.2049 28.7872 15.0922 32.3489 15.0922Z" style="fill:var(--sapContent_Illustrative_Color8)"/>
<path d="M32.4649 0C30.7836 0 29.1401 0.498545 27.7422 1.43259C26.3443 2.36664 25.2548 3.69423 24.6114 5.2475C23.968 6.80076 23.7997 8.50992 24.1277 10.1589C24.4557 11.8078 25.2653 13.3224 26.4541 14.5112C27.6429 15.7001 29.1576 16.5097 30.8065 16.8376C32.4554 17.1656 34.1646 16.9973 35.7179 16.3539C37.2711 15.7105 38.5987 14.621 39.5328 13.2231C40.4668 11.8252 40.9654 10.1817 40.9654 8.50049C40.9583 6.24819 40.0604 4.09016 38.4678 2.49754C36.8752 0.904914 34.7172 0.00705687 32.4649 0ZM32.4649 13.6026C32.2126 13.6026 31.966 13.5278 31.7562 13.3876C31.5465 13.2475 31.383 13.0482 31.2864 12.8152C31.1899 12.5821 31.1646 12.3256 31.2138 12.0782C31.2631 11.8308 31.3845 11.6035 31.5629 11.4251C31.7413 11.2467 31.9686 11.1253 32.216 11.076C32.4634 11.0268 32.7199 11.0521 32.953 11.1486C33.1861 11.2452 33.3853 11.4087 33.5254 11.6184C33.6656 11.8282 33.7404 12.0748 33.7404 12.327C33.7314 12.6625 33.5941 12.9817 33.3568 13.219C33.1195 13.4563 32.8003 13.5936 32.4649 13.6026ZM34.1239 9.0446L33.6333 9.32111C33.5372 9.35828 33.447 9.40936 33.3658 9.47274L33.2766 9.55303C33.2435 9.75899 33.1324 9.94431 32.9663 10.0705C32.8002 10.1968 32.5919 10.2542 32.3846 10.2309C32.2681 10.2442 32.15 10.2317 32.0388 10.1945C31.9276 10.1572 31.826 10.0961 31.7409 10.0153C31.6559 9.93453 31.5896 9.8361 31.5467 9.72696C31.5038 9.61781 31.4853 9.5006 31.4926 9.38355C31.4926 8.78593 31.778 8.49157 32.4559 7.95639L32.7681 7.74231L33.1874 7.51932C33.785 7.17145 34.0793 6.9217 34.0793 6.32408C34.0793 5.72646 33.3212 5.04857 32.3846 5.04857C31.448 5.04857 30.6809 5.64618 30.6809 6.32408C30.6809 6.54882 30.5916 6.76435 30.4327 6.92326C30.2738 7.08218 30.0583 7.17145 29.8335 7.17145C29.6088 7.17145 29.3933 7.08218 29.2344 6.92326C29.0754 6.76435 28.9862 6.54882 28.9862 6.32408C29.0903 5.49619 29.493 4.73478 30.1187 4.18279C30.7445 3.63081 31.5502 3.32622 32.3846 3.32622C33.219 3.32622 34.0247 3.63081 34.6504 4.18279C35.2762 4.73478 35.6789 5.49619 35.783 6.32408C35.7935 6.88831 35.643 7.44384 35.3491 7.92564C35.0553 8.40745 34.6303 8.79558 34.1239 9.0446Z" style="fill:var(--sapContent_Illustrative_Color14)"/>
</svg>
`;

// node_modules/@ui5/webcomponents-fiori/dist/illustrations/Tent.js
var name65 = "Tent";
var set2 = "fiori";
var collection64 = "V4";
var title2 = IM_TITLE_NODATA;
var subtitle2 = IM_SUBTITLE_NODATA;
registerIllustration(name65, {
  dialogSvg: sapIllus_Dialog_Tent_default,
  sceneSvg: sapIllus_Scene_Tent_default,
  spotSvg: sapIllus_Spot_Tent_default,
  dotSvg: sapIllus_Dot_Tent_default,
  title: title2,
  subtitle: subtitle2,
  set: set2,
  collection: collection64
});

// node_modules/@ui5/webcomponents-icons/dist/v4/document.js
var name66 = "document";
var pathData63 = "M416 0q14 0 23 9t9 23v448q0 14-8.5 23t-22.5 9H97q-14 0-23.5-9T64 480V128L192 0h224zm1 480l-1-448H224v96q0 14-9 23t-23 9H96v320h321z";
var ltr63 = false;
var collection65 = "SAP-icons-v4";
var packageName63 = "@ui5/webcomponents-icons";
registerIcon(name66, { pathData: pathData63, ltr: ltr63, collection: collection65, packageName: packageName63 });

// node_modules/@ui5/webcomponents-icons/dist/v5/document.js
var name67 = "document";
var pathData64 = "M422 0q11 0 18.5 7.5T448 26v460q0 11-7.5 18.5T422 512H90q-11 0-18.5-7.5T64 486V192q0-10 6-17L213 9q6-9 19-9h190zm-25 51H244l-20 24v66q0 21-15 36t-36 15h-50l-8 9v260h282V51z";
var ltr64 = false;
var collection66 = "SAP-icons-v5";
var packageName64 = "@ui5/webcomponents-icons";
registerIcon(name67, { pathData: pathData64, ltr: ltr64, collection: collection66, packageName: packageName64 });

// node_modules/@ui5/webcomponents-fiori/dist/types/UploadCollectionDnDMode.js
var UploadCollectionDnDOverlayMode;
(function(UploadCollectionDnDOverlayMode2) {
  UploadCollectionDnDOverlayMode2["None"] = "None";
  UploadCollectionDnDOverlayMode2["Drag"] = "Drag";
  UploadCollectionDnDOverlayMode2["Drop"] = "Drop";
})(UploadCollectionDnDOverlayMode || (UploadCollectionDnDOverlayMode = {}));
var UploadCollectionDnDMode_default = UploadCollectionDnDOverlayMode;

// node_modules/@ui5/webcomponents-fiori/dist/upload-utils/UploadCollectionBodyDnD.js
var draggingFiles = (event) => {
  return event.dataTransfer && Array.from(event.dataTransfer.types).includes("Files");
};
var eventProvider2 = new EventProvider_default();
var EVENT = "UploadCollectionBodyDndEvent";
var lastDragEnter = null;
var globalHandlersAttached = false;
var ondragenter = (event) => {
  if (!draggingFiles(event)) {
    return;
  }
  lastDragEnter = event.target;
  eventProvider2.fireEvent(EVENT, { mode: UploadCollectionDnDMode_default.Drag });
};
var ondragleave = (event) => {
  if (lastDragEnter === event.target) {
    eventProvider2.fireEvent(EVENT, { mode: UploadCollectionDnDMode_default.None });
  }
};
var ondrop = () => {
  eventProvider2.fireEvent(EVENT, { mode: UploadCollectionDnDMode_default.None });
};
var ondragover = (event) => {
  event.preventDefault();
};
var attachGlobalHandlers = () => {
  document.body.addEventListener("dragenter", ondragenter);
  document.body.addEventListener("dragleave", ondragleave);
  document.body.addEventListener("drop", ondrop);
  document.body.addEventListener("dragover", ondragover);
};
var detachGlobalHandlers = () => {
  document.body.removeEventListener("dragenter", ondragenter);
  document.body.removeEventListener("dragleave", ondragleave);
  document.body.removeEventListener("drop", ondrop);
  document.body.removeEventListener("dragover", ondragover);
  globalHandlersAttached = false;
};
var attachBodyDnDHandler = (handler) => {
  eventProvider2.attachEvent(EVENT, handler);
  if (!globalHandlersAttached) {
    attachGlobalHandlers();
    globalHandlersAttached = true;
  }
};
var detachBodyDnDHandler = (handler) => {
  eventProvider2.detachEvent(EVENT, handler);
  if (!eventProvider2.hasListeners(EVENT)) {
    detachGlobalHandlers();
  }
};

// node_modules/@ui5/webcomponents-icons/dist/v4/upload-to-cloud.js
var name68 = "upload-to-cloud";
var pathData65 = "M494 212q18 23 18 56 0 18-7 31-3 8-8 15l-10 14q-6 7-10.5 10t-12.5 6q-19 8-34 8h-15v-32h15q10 0 21-5 5-2 6.5-3t4.5-4q5-5 8-10t5-10l2-4q3-6 3-16 0-22-11-36-11-12-30-18l-42-11 22-36q5-8 5-18 0-25-17-40-17-17-42-17-23 0-36 13l-33 28-18-40q-12-28-36-44-23-17-58-17-14 0-33 8-17 8-34 23-12 14-20 31-7 14-7 35 0 20 8 34l22 37-41 10q-22 6-33 21h-1l-1 1q-12 14-12 36 0 11 4 19 1 2 5.5 8T59 312q2 2 12.5 5t40.5 3v32q-23 0-43-3t-31-13q-24-21-31-36t-7-32q0-35 21-58 19-23 50-31-13-22-13-50 0-29 10-49 11-24 28-41 18-17 42-28t46-11q45 0 76 22 32 22 48 58 23-20 57-20 39 0 64 25 27 26 27 64 0 19-9 34 28 7 47 29zm-112 75q11 12 0 23-12 11-23 0l-87-87v273q0 16-16 16t-16-16V225l-85 85q-5 5-11 5t-11-5q-12-11 0-23l102-101q9-10 22-10t23 10z";
var ltr65 = false;
var collection67 = "SAP-icons-v4";
var packageName65 = "@ui5/webcomponents-icons";
registerIcon(name68, { pathData: pathData65, ltr: ltr65, collection: collection67, packageName: packageName65 });

// node_modules/@ui5/webcomponents-icons/dist/v5/upload-to-cloud.js
var name69 = "upload-to-cloud";
var pathData66 = "M391 71q9-7 18-7 10 0 19 7l76 77q8 8 8 18 0 11-7.5 18.5T486 192q-10 0-18-8l-33-33v143q0 11-7.5 18.5T409 320t-18-7.5-7-18.5V151l-33 33q-8 8-18 8-11 0-18.5-7.5T307 166q0-10 8-18zm95 217q11 0 18.5 7.5T512 314q0 27-10 51.5t-27 43-41 29-52 10.5H109q-22 0-42-9t-35-24-23.5-35.5T0 336t8.5-43 23-35 34-24 41.5-9q4-25 16-47.5t29-40 39.5-28.5T239 96h4q10-1 17.5 6t8.5 17v2q1 10-7 17.5t-25 9.5q-16 1-30.5 10t-26 22-18 29-6.5 32q0 18-7.5 26.5T130 276h-21q-24 0-41 17.5T51 336q0 26 17 43.5t41 17.5h273q17 0 31-6.5t25-17 17-24.5 6-28q0-17 7-25t18-8z";
var ltr66 = false;
var collection68 = "SAP-icons-v5";
var packageName66 = "@ui5/webcomponents-icons";
registerIcon(name69, { pathData: pathData66, ltr: ltr66, collection: collection68, packageName: packageName66 });

// node_modules/@ui5/webcomponents-icons/dist/upload-to-cloud.js
var upload_to_cloud_default = "upload-to-cloud";

// node_modules/@ui5/webcomponents-fiori/dist/UploadCollectionTemplate.js
function UploadCollectionTemplate() {
  return jsx("div", { role: "region", class: "ui5-uc-root", "aria-roledescription": this._roleDescription, onDrop: this._ondrop, "onui5-request-delete": this._onItemDelete, children: jsxs("div", { class: {
    "ui5-uc-content": true,
    "ui5-uc-content-no-data": this.items.length === 0
  }, children: [jsxs(List_default, { accessibleName: this.accessibleName, selectionMode: this.selectionMode, onSelectionChange: this._onSelectionChange, children: [jsx("slot", { slot: "header", name: "header" }), jsx("slot", {}), this._showNoData && jsx(ListItemCustom_default, { class: {
    "uc-no-files": true,
    "uc-no-files-dnd-overlay": this._showDndOverlay
  }, type: "Inactive", children: jsxs(IllustratedMessage_default, { name: "Tent", children: [jsx(Title_default, { slot: "title", wrappingType: "None", level: "H2", children: this._noDataText }), jsx("span", { slot: "subtitle", children: this._noDataDescription })] }) })] }), this._showDndOverlay && jsxs("div", { class: {
    "uc-dnd-overlay": true,
    "uc-drag-overlay": this._dndOverlayMode === UploadCollectionDnDMode_default.Drag,
    "uc-drop-overlay": this._dndOverlayMode === UploadCollectionDnDMode_default.Drop
  }, onDragEnter: this._ondragenter, onDragLeave: this._ondragleave, onDragOver: this._ondragover, children: [jsx(Icon_default, { name: upload_to_cloud_default }), jsx("span", { class: "dnd-overlay-text", children: this._dndOverlayText })] })] }) });
}

// node_modules/@ui5/webcomponents-fiori/dist/generated/themes/UploadCollection.css.js
registerThemePropertiesLoader("@ui5/webcomponents-theming", "sap_horizon", async () => parameters_bundle_css_default);
registerThemePropertiesLoader("@ui5/webcomponents-fiori", "sap_horizon", async () => parameters_bundle_css_default3);
var UploadCollection_css_default = `:host(:not([hidden])){display:block}.ui5-uc-content{position:relative}.uc-no-files{background-color:var(--sapGroup_ContentBackground)}.uc-dnd-overlay{position:absolute;inset:.5rem;display:flex;flex-direction:column;align-items:center;justify-content:center;border-radius:var(--ui5-v2-8-0_upload_collection_drag_overlay_border_radius);container-type:size}.uc-drag-overlay{border:var(--ui5-v2-8-0_upload_collection_drag_overlay_border)}.uc-drop-overlay{border:var(--ui5-v2-8-0_upload_collection_drop_overlay_border)}.uc-dnd-overlay:before{content:"";position:absolute;inset:0;background-color:var(--sapGroup_ContentBackground);opacity:var(--ui5-v2-8-0_upload_collection_drag_overlay_opacity);border-radius:var(--ui5-v2-8-0_upload_collection_drag_overlay_border_radius)}.uc-drop-overlay:after{content:"";position:absolute;inset:0;background-color:var(--ui5-v2-8-0_upload_collection_drop_overlay_background);opacity:.05;border-radius:var(--ui5-v2-8-0_upload_collection_drag_overlay_border_radius)}.uc-dnd-overlay [ui5-icon]{width:4rem;height:4rem;margin-bottom:1rem;color:var(--ui5-v2-8-0_upload_collection_drag_overlay_icon_color)}@container (max-height: 10rem){.uc-dnd-overlay [ui5-icon]{display:none}}.uc-dnd-overlay .dnd-overlay-text{font-family:"72override",var(--sapFontFamily);font-size:var(--sapFontHeader4Size);color:var(--ui5-v2-8-0_upload_collection_drag_overlay_text_color)}.uc-dnd-overlay [ui5-icon],.uc-dnd-overlay .dnd-overlay-text{z-index:1;pointer-events:none}.uc-drop-overlay [ui5-icon],.uc-drop-overlay .dnd-overlay-text{color:var(--sapContent_DragAndDropActiveColor)}.uc-no-files-dnd-overlay{visibility:hidden}
`;

// node_modules/@ui5/webcomponents-fiori/dist/UploadCollection.js
var __decorate134 = function(decorators, target, key, desc) {
  var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
  if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
  else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
  return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var UploadCollection_1;
var UploadCollection = UploadCollection_1 = class UploadCollection2 extends UI5Element_default {
  constructor() {
    super();
    this.selectionMode = "None";
    this.hideDragOverlay = false;
    this._dndOverlayMode = "None";
    this._bodyDnDHandler = this.bodyDnDHandler.bind(this);
  }
  bodyDnDHandler(e) {
    if (this._dndOverlayMode !== UploadCollectionDnDMode_default.Drop) {
      this._dndOverlayMode = e.mode;
    }
  }
  onEnterDOM() {
    if (this.hideDragOverlay) {
      return;
    }
    attachBodyDnDHandler(this._bodyDnDHandler);
  }
  onExitDOM() {
    if (this.hideDragOverlay) {
      return;
    }
    detachBodyDnDHandler(this._bodyDnDHandler);
  }
  _ondragenter(e) {
    if (this.hideDragOverlay) {
      return;
    }
    if (!draggingFiles(e)) {
      return;
    }
    this._dndOverlayMode = UploadCollectionDnDMode_default.Drop;
  }
  _ondrop(e) {
    if (this.hideDragOverlay) {
      return;
    }
    if (e.target !== this.shadowRoot.querySelector(".uc-dnd-overlay")) {
      e.stopPropagation();
    }
    this._dndOverlayMode = UploadCollectionDnDMode_default.None;
  }
  _ondragover(e) {
    if (this.hideDragOverlay) {
      return;
    }
    e.preventDefault();
  }
  _ondragleave() {
    if (this.hideDragOverlay) {
      return;
    }
    this._dndOverlayMode = UploadCollectionDnDMode_default.Drag;
  }
  _onItemDelete(e) {
    this.fireDecoratorEvent("item-delete", { item: e.target });
  }
  _onSelectionChange(e) {
    this.fireDecoratorEvent("selection-change", { selectedItems: e.detail.selectedItems });
  }
  get classes() {
    return {
      content: {
        "ui5-uc-content": true,
        "ui5-uc-content-no-data": this.items.length === 0
      }
    };
  }
  get _root() {
    return this.shadowRoot.querySelector(".ui5-uc-root");
  }
  get _dndOverlay() {
    var _a;
    return (_a = this._root) == null ? void 0 : _a.querySelector(".uc-dnd-overlay");
  }
  get _showDndOverlay() {
    return this._dndOverlayMode !== UploadCollectionDnDMode_default.None;
  }
  get _showNoData() {
    return this.items.length === 0;
  }
  get _noDataText() {
    return this.noDataText || UploadCollection_1.i18nBundle.getText(UPLOADCOLLECTION_NO_DATA_TEXT);
  }
  get _noDataDescription() {
    return this.noDataDescription || UploadCollection_1.i18nBundle.getText(UPLOADCOLLECTION_NO_DATA_DESCRIPTION);
  }
  get _roleDescription() {
    return UploadCollection_1.i18nBundle.getText(UPLOADCOLLECTION_ARIA_ROLE_DESCRIPTION);
  }
  get _dndOverlayText() {
    if (this._dndOverlayMode === UploadCollectionDnDMode_default.Drag) {
      return UploadCollection_1.i18nBundle.getText(UPLOADCOLLECTION_DRAG_FILE_INDICATOR);
    }
    return UploadCollection_1.i18nBundle.getText(UPLOADCOLLECTION_DROP_FILE_INDICATOR);
  }
};
__decorate134([
  property_default()
], UploadCollection.prototype, "selectionMode", void 0);
__decorate134([
  property_default()
], UploadCollection.prototype, "noDataDescription", void 0);
__decorate134([
  property_default()
], UploadCollection.prototype, "noDataText", void 0);
__decorate134([
  property_default({ type: Boolean })
], UploadCollection.prototype, "hideDragOverlay", void 0);
__decorate134([
  property_default()
], UploadCollection.prototype, "accessibleName", void 0);
__decorate134([
  property_default()
], UploadCollection.prototype, "_dndOverlayMode", void 0);
__decorate134([
  slot_default({ type: HTMLElement, "default": true })
], UploadCollection.prototype, "items", void 0);
__decorate134([
  slot_default({ type: HTMLElement })
], UploadCollection.prototype, "header", void 0);
__decorate134([
  i18n_default("@ui5/webcomponents-fiori")
], UploadCollection, "i18nBundle", void 0);
UploadCollection = UploadCollection_1 = __decorate134([
  customElement_default({
    tag: "ui5-upload-collection",
    languageAware: true,
    renderer: JsxRenderer_default,
    styles: UploadCollection_css_default,
    template: UploadCollectionTemplate
  }),
  event_strict_default("item-delete", {
    bubbles: true
  }),
  event_strict_default("selection-change", {
    bubbles: true
  })
], UploadCollection);
UploadCollection.define();

// node_modules/@ui5/webcomponents-react/dist/webComponents/UploadCollection/index.js
var UploadCollection3 = withWebComponent("ui5-upload-collection", ["accessibleName", "noDataDescription", "noDataText", "selectionMode"], ["hideDragOverlay"], ["header"], ["item-delete", "selection-change"]);
UploadCollection3.displayName = "UploadCollection";

// node_modules/@ui5/webcomponents-base/dist/util/getFileExtension.js
var getFileExtension = (fileName) => {
  const dotPos = fileName.lastIndexOf(".");
  if (dotPos < 1) {
    return "";
  }
  return fileName.slice(dotPos);
};
var getFileExtension_default = getFileExtension;

// node_modules/@ui5/webcomponents-fiori/dist/types/UploadState.js
var UploadState;
(function(UploadState2) {
  UploadState2["Complete"] = "Complete";
  UploadState2["Error"] = "Error";
  UploadState2["Ready"] = "Ready";
  UploadState2["Uploading"] = "Uploading";
})(UploadState || (UploadState = {}));
var UploadState_default = UploadState;

// node_modules/@ui5/webcomponents-icons/dist/v4/refresh.js
var name70 = "refresh";
var pathData67 = "M478 320q-6 41-25.5 76T404 456.5 337.5 497 257 512q-46 0-86.5-17.5t-71-48-48-71T34 288q0-45 16.5-85T96 133t68-48 84-20h61q26 0 60-1l-41-36q-5-5-5-11.5T328 5t11-5 11 5l58 51q9 10 9 23t-9 23l-57 54q-5 5-11 5t-11-5-5-11.5 5-11.5l40-37H257q-40 0-74.5 15T122 152t-41 61-15 75 15 75 41 61 60.5 41 74.5 15q36 0 68-12t56.5-33.5T423 384t23-64h32z";
var ltr67 = false;
var accData39 = ICON_REFRESH;
var collection69 = "SAP-icons-v4";
var packageName67 = "@ui5/webcomponents-icons";
registerIcon(name70, { pathData: pathData67, ltr: ltr67, accData: accData39, collection: collection69, packageName: packageName67 });

// node_modules/@ui5/webcomponents-icons/dist/v5/refresh.js
var name71 = "refresh";
var pathData68 = "M307 179q0-11 7.5-18t18.5-7h101q-27-48-75-75.5T255 51q-42 0-79.5 16t-65 43.5-43.5 65T51 256t16 80 44 65 65 44 80 16q35 0 67-11.5t58.5-31.5 45.5-48.5 28-62.5q2-8 9.5-13.5T480 288q11 0 18.5 7.5T506 314q0 2-.5 3.5L504 322q-10 42-34 76.5t-57 60-73 39.5-84 14q-53 0-100-20t-81.5-54.5T20 356 0 256t20-100 54.5-81.5 81-54.5T255 0q61 0 115.5 26.5T461 101V26q0-11 7-18.5T486 0t18.5 7.5T512 26v153q0 11-7.5 18.5T486 205H333q-11 0-18.5-7.5T307 179z";
var ltr68 = false;
var accData40 = ICON_REFRESH;
var collection70 = "SAP-icons-v5";
var packageName68 = "@ui5/webcomponents-icons";
registerIcon(name71, { pathData: pathData68, ltr: ltr68, accData: accData40, collection: collection70, packageName: packageName68 });

// node_modules/@ui5/webcomponents-icons/dist/refresh.js
var refresh_default = "refresh";

// node_modules/@ui5/webcomponents-icons/dist/v4/stop.js
var name72 = "stop";
var pathData69 = "M256 0q53 0 99.5 20T437 74.5t55 81.5 20 100-20 99.5-55 81.5-81.5 55-99.5 20-100-20-81.5-55T20 355.5 0 256t20-100 54.5-81.5T156 20 256 0zm0 480q46 0 87-17.5t71.5-48 48-71.5 17.5-87-17.5-87-48-71.5-71.5-48T256 32q-47 0-87.5 17.5t-71 48-48 71.5T32 256t17.5 87 48 71.5 71 48T256 480zm64-320q13 0 22.5 9t9.5 23v128q0 13-9.5 22.5T320 352H192q-14 0-23-9.5t-9-22.5V192q0-14 9-23t23-9h128z";
var ltr69 = false;
var collection71 = "SAP-icons-v4";
var packageName69 = "@ui5/webcomponents-icons";
registerIcon(name72, { pathData: pathData69, ltr: ltr69, collection: collection71, packageName: packageName69 });

// node_modules/@ui5/webcomponents-icons/dist/v5/stop.js
var name73 = "stop";
var pathData70 = "M256 0q53 0 100 20t81.5 54.5T492 156t20 100-20 100-54.5 81.5T356 492t-100 20-100-20-81.5-54.5T20 356 0 256t20-100 54.5-81.5T156 20 256 0zm0 461q43 0 80.5-16t65-44 43.5-65 16-80-16-80.5-43.5-65-65-43.5T256 51t-80 16-65 43.5-44 65T51 256t16 80 44 65 65 44 80 16zm64-301q14 0 23 9t9 23v128q0 14-9 23t-23 9H192q-14 0-23-9.5t-9-22.5V192q0-14 9-23t23-9h128z";
var ltr70 = false;
var collection72 = "SAP-icons-v5";
var packageName70 = "@ui5/webcomponents-icons";
registerIcon(name73, { pathData: pathData70, ltr: ltr70, collection: collection72, packageName: packageName70 });

// node_modules/@ui5/webcomponents-icons/dist/stop.js
var stop_default = "stop";

// node_modules/@ui5/webcomponents-fiori/dist/UploadCollectionItemTemplate.js
var predefinedHooks6 = {
  listItemContent: listItemContent11
};
function UploadCollectionItemTemplate(hooks) {
  const currentHooks = { ...predefinedHooks6, ...hooks };
  return ListItemTemplate.call(this, currentHooks);
}
function listItemContent11() {
  return jsxs(Fragment, { children: [jsxs("div", { class: "ui5-uci-thumbnail-and-content-container", children: [jsx("div", { class: "ui5-uci-thumbnail", children: jsx("slot", { name: "thumbnail" }) }), jsxs("div", { class: "ui5-uci-content-and-progress", children: [jsxs("div", { class: "ui5-uci-content", children: [this._editing ? jsxs("div", { class: "ui5-uci-edit-container", children: [jsx(Input_default, { id: "ui5-uci-edit-input", "data-sap-focus-ref": true, onFocusIn: this._onInputFocusin, onKeyDown: this._onInputKeyDown }), jsx("span", { class: "ui5-uci-file-extension", children: this._fileExtension })] }) : this.fileNameClickable ? jsx(Link_default, { class: "ui5-uci-file-name", onClick: this._onFileNameClick, wrappingType: "None", children: this.fileName }) : jsx("span", { class: "ui5-uci-file-name ui5-uci-file-name-text", children: this.fileName }), jsx("div", { class: "ui5-uci-description", children: jsx("slot", {}) })] }), this._showProgressIndicator && jsxs("div", { class: "ui5-uci-progress-box", children: [jsx(ProgressIndicator_default, { class: "ui5-uci-progress-indicator", hideValue: true, value: this.progress, valueState: this.valueStateName }), jsxs("div", { class: "ui5-uci-progress-labels", children: [jsx(Label_default, { showColon: true, wrappingType: "None", children: this._progressText }), jsxs(Label_default, { children: [this.progress, "%"] })] })] })] })] }), jsx("div", { class: "ui5-uci-buttons", children: this._editing ? jsxs(Fragment, { children: [jsx(Button_default, { design: "Transparent", class: "ui5-uci-edit-rename-btn", onClick: this._onRename, onKeyUp: this._onRenameKeyup, children: this._renameBtnText }), jsx(Button_default, { design: "Transparent", id: "ui5-uci-edit-cancel", onClick: this._onRenameCancel, onKeyUp: this._onRenameCancelKeyup, children: this._cancelRenameBtnText })] }) : jsxs(Fragment, { children: [this._showRetry && jsx(Button_default, { icon: refresh_default, design: "Transparent", tooltip: this._retryButtonTooltip, onClick: this._onRetry, onKeyUp: this._onRetryKeyup }), this._showTerminate && jsx(Button_default, { icon: stop_default, design: "Transparent", tooltip: this._terminateButtonTooltip, onClick: this._onTerminate, onKeyUp: this._onTerminateKeyup }), this.showEditButton && jsx(Button_default, { id: `${this._id}-editing-button`, design: "Transparent", tooltip: this._editButtonTooltip, icon: edit_default, onClick: this.onDetailClick, onKeyUp: this._onDetailKeyup, class: "ui5-li-detailbtn ui5-uci-edit" }), !this.hideDeleteButton && (this.hasDeleteButtonSlot ? jsx("slot", { name: "deleteButton" }) : jsx(Button_default, { class: "ui5-upload-collection-deletebtn", id: `${this._id}-deleteSelectionElement`, design: "Transparent", icon: decline_default, disabled: this.disableDeleteButton, onClick: this._onDelete, tooltip: this.deleteText }))] }) })] });
}

// node_modules/@ui5/webcomponents-fiori/dist/generated/themes/UploadCollectionItem.css.js
registerThemePropertiesLoader("@ui5/webcomponents-theming", "sap_horizon", async () => parameters_bundle_css_default);
registerThemePropertiesLoader("@ui5/webcomponents-fiori", "sap_horizon", async () => parameters_bundle_css_default3);
var UploadCollectionItem_css_default = `:host{height:auto;container-type:inline-size}:host(:not([hidden])){display:block}:host::part(content){overflow:visible}.ui5-li-root.ui5-uci-root{padding:1rem}.ui5-uci-buttons{display:flex;margin-inline-start:1rem;gap:.5rem}.ui5-uci-thumbnail{width:var(--ui5-v2-8-0_upload_collection_thumbnail_size);height:var(--ui5-v2-8-0_upload_collection_thumbnail_size);margin-inline-end:var(--ui5-v2-8-0_upload_collection_thumbnail_margin_inline_end)}::slotted([ui5-icon][slot="thumbnail"]){width:var(--ui5-v2-8-0_upload_collection_thumbnail_size);height:var(--ui5-v2-8-0_upload_collection_thumbnail_size);font-size:2.5rem}::slotted(img[slot="thumbnail"]){width:var(--ui5-v2-8-0_upload_collection_thumbnail_size);height:var(--ui5-v2-8-0_upload_collection_thumbnail_size)}:host([actionable]) ::slotted([ui5-icon][slot="thumbnail"]){color:var(--sapContent_IconColor)}.ui5-uci-thumbnail-and-content-container{flex:1 1 auto;min-width:0;display:flex;align-items:flex-start}.ui5-uci-content-and-progress{max-width:100%;min-width:0;display:flex;flex:1 1 auto}.ui5-uci-content{flex:1 1 auto;width:100%;min-width:0}.ui5-uci-progress-box{margin-inline-start:.5rem}.ui5-uci-file-name{display:block;font-family:"72override",var(--sapFontFamily);font-size:var(--sapFontLargeSize);margin-bottom:.25rem;white-space:nowrap;text-overflow:ellipsis;overflow:hidden}.ui5-uci-file-name-text{color:var(--sapList_TextColor)}[ui5-link].ui5-uci-file-name{pointer-events:all}.ui5-uci-description{margin-top:.375rem;font-family:"72override",var(--sapFontFamily);font-size:var(--sapFontMediumSize);color:var(--sapContent_LabelColor);white-space:initial;overflow:hidden;text-overflow:ellipsis}.ui5-uci-edit-container{display:flex;align-items:center}.ui5-uci-edit-container [ui5-input]{width:60%;pointer-events:all;min-width:auto}.ui5-uci-file-extension{font-family:"72override",var(--sapFontFamily);font-size:var(--sapFontMediumSize);color:var(--sapTextColor);white-space:no-wrap;overflow:hidden;margin-left:.5rem;width:40%;display:inline-block;vertical-align:middle}.ui5-uci-root-editing .ui5-li-detailbtn,.ui5-uci-root-uploading .ui5-li-detailbtn{display:none}.ui5-uci-edit-rename-btn{margin-right:.125rem}@container (max-width: 30rem){:host::part(content){flex-wrap:wrap}.ui5-uci-thumbnail-and-content-container{width:100%}.ui5-uci-content-and-progress{flex-wrap:wrap}.ui5-uci-progress-box{width:100%;margin-top:.5rem;margin-inline-start:0}.ui5-uci-content{width:100%}.ui5-uci-buttons{margin-inline-start:var(--ui5-v2-8-0_upload_collection_small_size_buttons_margin_inline_start);margin-block-start:var(--ui5-v2-8-0_upload_collection_small_size_buttons_margin_block_start)}}.ui5-uci-progress-indicator{height:1.125rem;margin-bottom:.5rem;padding:5px 0;box-sizing:border-box}.ui5-uci-progress-labels{display:flex;justify-content:space-between}:host([active][actionable]) ::slotted([ui5-icon][slot="thumbnail"]),:host([active][actionable]) .ui5-uci-file-name,:host([active][actionable]) .ui5-uci-description{color:var(--sapList_Active_TextColor)}
`;

// node_modules/@ui5/webcomponents-fiori/dist/UploadCollectionItem.js
var __decorate135 = function(decorators, target, key, desc) {
  var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
  if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
  else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
  return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var UploadCollectionItem_1;
var UploadCollectionItem = UploadCollectionItem_1 = class UploadCollectionItem2 extends ListItem_default {
  constructor() {
    super(...arguments);
    this.file = null;
    this.fileName = "";
    this.fileNameClickable = false;
    this.disableDeleteButton = false;
    this.hideDeleteButton = false;
    this.hideRetryButton = false;
    this.hideTerminateButton = false;
    this.progress = 0;
    this.uploadState = "Ready";
    this._editing = false;
  }
  /**
   * @override
   */
  async onDetailClick() {
    super.onDetailClick();
    this._editing = true;
    await this._initInputField();
  }
  async _initInputField() {
    var _a;
    await renderFinished();
    if (this.editInpElement) {
      this.editInpElement.value = this._fileNameWithoutExtension;
    }
    await renderFinished();
    const inpFocusDomRef = (_a = this.editInpElement) == null ? void 0 : _a.getFocusDomRef();
    if (inpFocusDomRef) {
      inpFocusDomRef.focus();
      inpFocusDomRef.setSelectionRange(0, this._fileNameWithoutExtension.length);
    }
  }
  get editInpElement() {
    return this.shadowRoot.querySelector("#ui5-uci-edit-input");
  }
  _onkeyup(e) {
    super._onkeyup(e);
    if (isDelete(e) && !this.disableDeleteButton && !this.hideDeleteButton && !this.disabled) {
      this._onDelete();
    }
  }
  _onDetailKeyup(e) {
    if (isSpace(e)) {
      this.onDetailClick();
    }
  }
  _onInputFocusin(e) {
    e.stopPropagation();
  }
  _onInputKeyDown(e) {
    if (isEscape(e)) {
      this._onRenameCancel(e);
    } else if (isEnter(e)) {
      this._onRename();
    } else if (isSpace(e)) {
      e.stopImmediatePropagation();
    }
  }
  _onRename() {
    const inp = this.shadowRoot.querySelector("#ui5-uci-edit-input");
    this.fileName = inp.value + this._fileExtension;
    this.fireDecoratorEvent("rename");
    this._editing = false;
    this._focus();
  }
  _onRenameKeyup(e) {
    if (isSpace(e)) {
      this._onRename();
    }
  }
  async _onRenameCancel(e) {
    this._editing = false;
    if (isEscape(e)) {
      await renderFinished();
      this.shadowRoot.querySelector(`#${this._id}-editing-button`).focus();
    } else {
      this._focus();
    }
  }
  _onRenameCancelKeyup(e) {
    if (isSpace(e)) {
      this._onRenameCancel(e);
    }
  }
  _focus() {
    this.fireDecoratorEvent("focus-requested");
  }
  _onFileNameClick() {
    this.fireDecoratorEvent("file-name-click");
  }
  _onRetry() {
    this.fireDecoratorEvent("retry");
  }
  _onRetryKeyup(e) {
    if (isSpace(e)) {
      this._onRetry();
    }
  }
  _onTerminate() {
    this.fireDecoratorEvent("terminate");
  }
  _onTerminateKeyup(e) {
    if (isSpace(e)) {
      this._onTerminate();
    }
  }
  _onDelete() {
    this.fireDecoratorEvent("request-delete");
  }
  getFocusDomRef() {
    return this.getDomRef();
  }
  /**
   * @override
   */
  get classes() {
    const result = super.classes;
    return {
      main: {
        ...result.main,
        "ui5-uci-root": true,
        "ui5-uci-root-editing": this._editing,
        "ui5-uci-root-uploading": this.uploadState === UploadState_default.Uploading
      }
    };
  }
  get _fileNameWithoutExtension() {
    return this.fileName.substring(0, this.fileName.length - this._fileExtension.length);
  }
  get _fileExtension() {
    return getFileExtension_default(this.fileName);
  }
  get _renameBtnText() {
    return UploadCollectionItem_1.i18nFioriBundle.getText(UPLOADCOLLECTIONITEM_RENAMEBUTTON_TEXT);
  }
  get _cancelRenameBtnText() {
    return UploadCollectionItem_1.i18nFioriBundle.getText(UPLOADCOLLECTIONITEM_CANCELBUTTON_TEXT);
  }
  get _showProgressIndicator() {
    return this.uploadState !== UploadState_default.Complete;
  }
  get _progressText() {
    if (this.uploadState === UploadState_default.Uploading) {
      return UploadCollectionItem_1.i18nFioriBundle.getText(UPLOADCOLLECTIONITEM_UPLOADING_STATE);
    }
    if (this.uploadState === UploadState_default.Error) {
      return UploadCollectionItem_1.i18nFioriBundle.getText(UPLOADCOLLECTIONITEM_ERROR_STATE);
    }
    return UploadCollectionItem_1.i18nFioriBundle.getText(UPLOADCOLLECTIONITEM_READY_STATE);
  }
  get _showRetry() {
    return !this.hideRetryButton && this.uploadState === UploadState_default.Error;
  }
  get _showTerminate() {
    return !this.hideTerminateButton && this.uploadState === UploadState_default.Uploading;
  }
  get _retryButtonTooltip() {
    return UploadCollectionItem_1.i18nFioriBundle.getText(UPLOADCOLLECTIONITEM_RETRY_BUTTON_TEXT);
  }
  get _terminateButtonTooltip() {
    return UploadCollectionItem_1.i18nFioriBundle.getText(UPLOADCOLLECTIONITEM_TERMINATE_BUTTON_TEXT);
  }
  get _editButtonTooltip() {
    return UploadCollectionItem_1.i18nFioriBundle.getText(UPLOADCOLLECTIONITEM_EDIT_BUTTON_TEXT);
  }
  get valueStateName() {
    if (this.uploadState === UploadState_default.Error) {
      return ValueState_default.Negative;
    }
    if (this.uploadState === UploadState_default.Ready || this.uploadState === UploadState_default.Uploading) {
      return ValueState_default.Information;
    }
    return ValueState_default.None;
  }
  /**
   * override
   */
  get typeDetail() {
    return false;
  }
  get showEditButton() {
    return this.type === ListItemType_default.Detail;
  }
};
__decorate135([
  property_default({ type: Object, noAttribute: true })
], UploadCollectionItem.prototype, "file", void 0);
__decorate135([
  property_default()
], UploadCollectionItem.prototype, "fileName", void 0);
__decorate135([
  property_default({ type: Boolean })
], UploadCollectionItem.prototype, "fileNameClickable", void 0);
__decorate135([
  property_default({ type: Boolean })
], UploadCollectionItem.prototype, "disableDeleteButton", void 0);
__decorate135([
  property_default({ type: Boolean })
], UploadCollectionItem.prototype, "hideDeleteButton", void 0);
__decorate135([
  property_default({ type: Boolean })
], UploadCollectionItem.prototype, "hideRetryButton", void 0);
__decorate135([
  property_default({ type: Boolean })
], UploadCollectionItem.prototype, "hideTerminateButton", void 0);
__decorate135([
  property_default({ type: Number })
], UploadCollectionItem.prototype, "progress", void 0);
__decorate135([
  property_default()
], UploadCollectionItem.prototype, "uploadState", void 0);
__decorate135([
  property_default({ type: Boolean })
], UploadCollectionItem.prototype, "_editing", void 0);
__decorate135([
  slot_default({ type: HTMLElement })
], UploadCollectionItem.prototype, "thumbnail", void 0);
__decorate135([
  i18n_default("@ui5/webcomponents-fiori")
], UploadCollectionItem, "i18nFioriBundle", void 0);
UploadCollectionItem = UploadCollectionItem_1 = __decorate135([
  customElement_default({
    tag: "ui5-upload-collection-item",
    languageAware: true,
    renderer: JsxRenderer_default,
    styles: [ListItem_default.styles, UploadCollectionItem_css_default],
    template: UploadCollectionItemTemplate
  }),
  event_strict_default("file-name-click", {
    bubbles: true
  }),
  event_strict_default("rename", {
    bubbles: true
  }),
  event_strict_default("terminate", {
    bubbles: true
  }),
  event_strict_default("retry", {
    bubbles: true
  }),
  event_strict_default("focus-requested", {
    bubbles: true
  }),
  event_strict_default("request-delete", {
    bubbles: true
  })
], UploadCollectionItem);
UploadCollectionItem.define();

// node_modules/@ui5/webcomponents-react/dist/webComponents/UploadCollectionItem/index.js
var UploadCollectionItem3 = withWebComponent("ui5-upload-collection-item", ["accessibilityAttributes", "file", "fileName", "highlight", "progress", "tooltip", "type", "uploadState"], ["disableDeleteButton", "fileNameClickable", "hideDeleteButton", "hideRetryButton", "hideTerminateButton", "navigated", "selected"], ["deleteButton", "thumbnail"], ["detail-click", "file-name-click", "rename", "retry", "terminate"]);
UploadCollectionItem3.displayName = "UploadCollectionItem";

// node_modules/@ui5/webcomponents-icons/dist/v4/person-placeholder.js
var name74 = "person-placeholder";
var pathData71 = "M64 512V384q0-26 10-49.5t27.5-41T142 266t50-10h64q-27 0-50-10t-40.5-27.5T138 178t-10-50q0-26 10-49.5t27.5-41T206 10t50-10q26 0 49.5 10t41 27.5 27.5 41 10 49.5q0 27-10 50t-27.5 40.5-41 27.5-49.5 10h64q26 0 49.5 10t41 27.5 27.5 41 10 49.5v128H64zm32-128v96h320v-96q0-40-28-68t-68-28H192q-40 0-68 28t-28 68zm64-256q0 40 28 68t68 28 68-28 28-68-28-68-68-28-68 28-28 68z";
var ltr71 = false;
var collection73 = "SAP-icons-v4";
var packageName71 = "@ui5/webcomponents-icons";
registerIcon(name74, { pathData: pathData71, ltr: ltr71, collection: collection73, packageName: packageName71 });

// node_modules/@ui5/webcomponents-icons/dist/v5/person-placeholder.js
var name75 = "person-placeholder";
var pathData72 = "M342 255q48 23 77 67.5t29 99.5v32q0 11-7.5 18.5T422 480H90q-11 0-18.5-7.5T64 454v-32q0-56 29-100t77-67q-20-18-31-42.5T128 160q0-27 10-50t27.5-40.5 41-27.5T256 32t49.5 10.5 41 28T374 111t10 49q0 27-11 52t-31 43zM256 83q-32 0-54.5 22.5T179 160t22.5 54.5T256 237t54.5-22.5T333 160t-22.5-54.5T256 83zm141 339q0-28-10.5-52.5t-29-42.5-43-28.5T262 288h-12q-28 0-52.5 10.5t-43 28.5-29 42.5T115 422v7h282v-7z";
var ltr72 = false;
var collection74 = "SAP-icons-v5";
var packageName72 = "@ui5/webcomponents-icons";
registerIcon(name75, { pathData: pathData72, ltr: ltr72, collection: collection74, packageName: packageName72 });

// node_modules/@ui5/webcomponents-icons/dist/person-placeholder.js
var person_placeholder_default = "person-placeholder";

// node_modules/@ui5/webcomponents-icons/dist/v4/user-settings.js
var name76 = "user-settings";
var pathData73 = "M512 512H192v-64q0-27 10-50t27.5-40.5T270 330t50-10h32q-43 0-69.5-27T256 224q0-13 1-14 5-32 27-54t54-27q1-1 14-1 42 0 69 26.5t27 69.5q0 40-28 68t-68 28h32q26 0 49.5 10t41 27.5T502 398t10 50v64zM0 224q0-14 9-23t23-9h28q2-8 5.5-15t6.5-14l-20-20q-9-10-9-23t9-22l46-46q9-9 22-9 14 0 23 9l20 20q7-3 14-6.5t15-5.5V32q0-14 9-23t23-9h64q14 0 23 9t9 23v28q8 2 15 5.5t14 6.5l20-20q9-9 23-9 13 0 22 9l46 46q9 9 9 22t-9 23l-6 5-10-12-12-11 5-5-45-45-23 23q-5-1-8.5-1.5T352 96q-6 0-12 .5T328 98q-1-1-4-1-4-2-6.5-3l-7.5-3-22-8V32h-64v51l-22 8q-2 1-5 1.5t-5 2.5l-15 6-20 10-37-36-45 45 36 37-10 20q-3 6-5.5 12.5T91 202l-8 22H32v64h51l8 22q1 2 2 5t2 5q0 2 2 4 1 3 2 5.5t2 4.5l10 21-36 37 45 45 37-37 9 5q-5 18-6 37l-17 18q-9 9-23 9-13 0-22-9l-46-46q-9-9-9-22.5t9-22.5l20-20q-3-7-6.5-14T60 320H32q-14 0-23-9.5T0 288v-64zm480 256v-32q0-40-28-68t-68-28h-64q-40 0-68 28t-28 68v32h256zM288 224q0 27 18.5 45.5T352 288q26 0 45-19t19-45q0-27-18.5-45.5T352 160q-26 0-45 19t-19 45zm-128 37q0-35 16-59.5t48-36.5l8-2 9-2q-5 8-8.5 16.5T227 194q0 1-.5 2t-.5 3q-1 0-1 .5t-1 .5l-12 9q-11 11-15.5 21.5T192 256q0 4 .5 8t1.5 9q8 25 30 38l4 2 4 2q-4 1-8 5-5 4-9.5 8t-9.5 9q-4-2-7-5t-6-5q-4-3-7-7-13-15-18-27t-7-32z";
var ltr73 = false;
var collection75 = "SAP-icons-v4";
var packageName73 = "@ui5/webcomponents-icons";
registerIcon(name76, { pathData: pathData73, ltr: ltr73, collection: collection75, packageName: packageName73 });

// node_modules/@ui5/webcomponents-icons/dist/v5/user-settings.js
var name77 = "user-settings";
var pathData74 = "M166.907 396.779q10.994 0 18.49 6.996t7.495 17.99-7.495 18.49-18.49 7.495H25.985q-10.993 0-18.49-7.496T0 421.764v-31.982q0-55.968 28.984-99.944t76.957-66.962q-41.977-38.979-41.977-94.947 0-26.985 10.494-50.472t27.985-40.977T142.92 9.495 191.893 0q26.985 0 49.972 10.494t40.477 27.985 27.485 40.477 9.995 48.973-9.495 48.972-26.985 40.478-40.977 27.984-50.472 10.494h-5.997q-27.984 0-52.47 10.494T90.45 294.835t-28.984 42.477-10.494 52.47v6.997h115.935zm24.986-345.807q-31.982 0-54.47 22.487t-22.487 54.47 22.487 54.47 54.47 22.487q32.982 0 54.97-22.988t21.987-53.97q0-31.982-22.487-54.469t-54.47-22.487zm310.826 340.81q4.998 1.998 7.496 5.996t1.5 8.995l-3.998 16.99q-2 9.995-11.994 9.995l-27.984-3.998q-5.997 11.993-15.991 21.988l-6.996 6.996 9.994 26.985q0 1 .5 1.999t.5 1.999q0 8.995-7.996 11.993l-14.991 7.996q-2 0-2.5.5t-2.498.499q-7.995 0-10.994-6.996l-14.991-25.986q-4.997 1-8.995 1.5t-8.995.5q-3.998 0-7.496-.5t-8.495-.5l-14.992 26.985q-2.998 5.996-10.994 5.996-3.998 0-5.996-.999l-14.992-7.996q-6.996-2.998-6.996-10.993 0-3.998 1-4.998l9.994-26.985q-7.996-4.997-13.493-11.993t-10.494-14.991l-27.984 3.997q-10.994 0-12.993-9.994l-3.998-19.989q0-9.994 8.995-11.993l22.987-7.996q0-21.988 6.996-39.978l-16.99-15.99q-3.998-3.998-3.998-9.995 0-3.998 2.999-7.996l9.994-12.992q4.997-4.998 9.994-4.998 2.999 0 6.996 2l18.99 12.992q7.995-6.996 16.99-11.493t18.99-7.496l1.999-22.987q1.999-11.994 12.992-11.994h16.99q4.998 0 8.496 3.498t3.498 8.496l2 21.987q21.987 4.997 37.978 17.99l18.99-12.993q3.997-1.998 6.995-1.998 4.998 0 9.995 4.997l9.994 12.993q2.999 3.997 2.999 7.995 0 5.997-3.998 9.995l-15.991 14.991q7.995 20.988 7.995 40.977zm-163.908-7.996q0 18.99 12.993 31.982t31.982 12.993 31.982-12.993 12.993-31.982-12.993-31.982-31.982-12.993-31.982 12.993-12.993 31.982z";
var ltr74 = false;
var collection76 = "SAP-icons-v5";
var packageName74 = "@ui5/webcomponents-icons";
registerIcon(name77, { pathData: pathData74, ltr: ltr74, collection: collection76, packageName: packageName74 });

// node_modules/@ui5/webcomponents-icons/dist/user-settings.js
var user_settings_default = "user-settings";

// node_modules/@ui5/webcomponents-icons/dist/v4/log.js
var name78 = "log";
var pathData75 = "M352 86q57 27 92.5 81T480 288q0 47-17.5 87.5t-48 71-71.5 48-87 17.5q-47 0-87.5-17.5t-71-48-48-71T32 288q0-67 35.5-121T160 86v36q-43 25-69.5 68.5T64 288q0 40 15 75t41 61 61 41 75 15 75-15 61-41 41-61 15-75q0-54-26.5-97.5T352 122V86zm-96 202q-14 0-23-9t-9-23V32q0-13 9-22.5T256 0q13 0 22.5 9.5T288 32v224q0 14-9.5 23t-22.5 9z";
var ltr75 = false;
var collection77 = "SAP-icons-v4";
var packageName75 = "@ui5/webcomponents-icons";
registerIcon(name78, { pathData: pathData75, ltr: ltr75, collection: collection77, packageName: packageName75 });

// node_modules/@ui5/webcomponents-icons/dist/v5/log.js
var name79 = "log";
var pathData76 = "M256 256q-11 0-18.5-7.5T230 230V26q0-11 7.5-18.5T256 0t18.5 7.5T282 26v204q0 11-7.5 18.5T256 256zm0 256q-53 0-100-20t-81.5-54.5T20 356 0 256q0-67 31-125t82-90q9-6 13.5-7.5T134 32q11 0 18.5 7.5T160 58q0 13-12 21-46 29-71.5 76T51 256q0 43 16 80t44 65 65 44 80 16 80.5-16 65-44 43.5-65 16-80q0-54-26-101t-71-76q-12-8-12-21 0-11 7.5-18.5T378 32q3 0 7.5 1.5T399 41q51 32 82 90t31 126q0 53-20 99.5t-54.5 81T356 492t-100 20z";
var ltr76 = false;
var collection78 = "SAP-icons-v5";
var packageName76 = "@ui5/webcomponents-icons";
registerIcon(name79, { pathData: pathData76, ltr: ltr76, collection: collection78, packageName: packageName76 });

// node_modules/@ui5/webcomponents-icons/dist/log.js
var log_default = "log";

// node_modules/@ui5/webcomponents-icons/dist/v4/user-edit.js
var name80 = "user-edit";
var pathData77 = "M151.25 384H.25v-64q0-26 10-49.5t27.5-41 40.5-27.5 50-10h32q-40 0-68-28t-28-68 28-68 68-28 68 28 28 68-28 68-68 28h32q31 0 57 14t44 37l-23 22q-13-19-33.5-30t-44.5-11h-64q-40 0-68 28t-28 68v32h151zm-9 128q2-4 8-20t12-34q4-10 7.5-21t8.5-24l261-260q5-5 11-5t11 5l45 45q11 11 0 22l-260 261q-1 1-17 6t-36 10q-22 8-51 15zm18-352q26 0 45-19t19-45-19-45-45-19q-27 0-45.5 19t-18.5 45 18.5 45 45.5 19zm45 271l23 22 181-181-22-22zm204-204l23 23 40-41-22-22z";
var ltr77 = false;
var collection79 = "SAP-icons-v4";
var packageName77 = "@ui5/webcomponents-icons";
registerIcon(name80, { pathData: pathData77, ltr: ltr77, collection: collection79, packageName: packageName77 });

// node_modules/@ui5/webcomponents-icons/dist/v5/user-edit.js
var name81 = "user-edit";
var pathData78 = "M70 397q11 0 18.5 7t7.5 18-7.5 18.5T70 448H26q-11 0-18.5-7.5T0 422v-32q0-55 29-99.5t77-67.5l-4-5q-19-18-28.5-41T64 128q0-27 10.5-50.5t28-41 40.5-27T192 0q27 0 50 10.5t40.5 28T310 79t10 49-9.5 49-27 40.5-41 28T192 256h-6q-28 0-52.5 10.5t-43 28.5-29 42.5T51 390v7h19zM192 51q-32 0-54.5 22.5T115 128t22.5 54.5T192 205q33 0 55-23t22-54q0-32-22.5-54.5T192 51zm313 161q7 7 7 18t-7 18l-25 26q-8 8-19 8-10 0-18-8l-50-51q-7-7-7-18t7-18l25-26q7-7 18-7 12 0 19 7zm-75 77q7 9 7 18t-7 18L254 504q-8 8-18 8h-50q-11 0-18.5-7.5T160 486v-51q0-9 7-18l176-179q8-8 18-8 12 0 18 8zm-55 18l-14-14-150 153v15h14z";
var ltr78 = false;
var collection80 = "SAP-icons-v5";
var packageName78 = "@ui5/webcomponents-icons";
registerIcon(name81, { pathData: pathData78, ltr: ltr78, collection: collection80, packageName: packageName78 });

// node_modules/@ui5/webcomponents-icons/dist/user-edit.js
var user_edit_default = "user-edit";

// node_modules/@ui5/webcomponents-fiori/dist/UserMenuTemplate.js
function UserMenuTemplate() {
  return jsxs(ResponsivePopover_default, { id: "user-menu-rp", class: "ui5-pm-rp", tabIndex: -1, placement: "Bottom", verticalAlign: "Bottom", horizontalAlign: "End", accessibleName: this.accessibleNameText, open: this.open, opener: this.opener, onClose: this._handlePopoverAfterClose, onOpen: this._handlePopoverAfterOpen, children: [this._isPhone ? jsxs(Fragment, { children: [jsxs(Bar_default, { class: "ui5-pm-phone-header", slot: "header", children: [this._manageAccountVisibleInHeader && jsx(Button_default, { icon: user_settings_default, onClick: this._handleManageAccountClick, slot: "startContent" }), this._titleMovedToHeader && jsx(Title_default, { level: "H1", wrappingType: "None", children: this._selectedAccount.titleText }), jsx(Button_default, { icon: decline_default, design: "Transparent", accessibleName: this._closeDialogAriaLabel, onClick: this._closeUserMenu, slot: "endContent" })] }), jsx("div", { class: "ui5-pm-header", children: headerContent.call(this) })] }) : jsx("div", { class: "ui5-pm-header", slot: "header", children: headerContent.call(this) }), this.showOtherAccounts && jsxs(Panel_default, { collapsed: true, class: "ui5-pm-other-accounts", children: [jsxs("div", { slot: "header", class: "ui5-user-menu-account-header", children: [jsxs(Title_default, { slot: "header", level: "H4", children: [this._otherAccountsButtonText, " (", this._otherAccounts.length, ")"] }), this.showEditAccounts && jsx(Button_default, { slot: "header", class: "ui5-pm-add-account-btn", design: "Transparent", icon: user_edit_default, onClick: this._handleEditAccountsClick, tooltip: this._editAccountsTooltip })] }), this._otherAccounts.length > 0 && jsx(List_default, { onItemClick: this._handleAccountSwitch, children: this._otherAccounts.map((account) => jsx(ListItemCustom_default, { ref: this.captureRef.bind(account), children: jsxs("div", { class: "ui5-pm-other-accounts-content", children: [jsx(Avatar_default, { slot: "image", size: "S", initials: account._initials, fallbackIcon: person_placeholder_default, children: account.avatarSrc && jsx("img", { src: account.avatarSrc }) }), jsxs("div", { children: [account.titleText && jsx(Title_default, { children: account.titleText }), account.subtitleText && jsx(Label_default, { children: account.subtitleText }), account.description && jsx(Label_default, { children: account.description })] })] }) })) })] }), this.menuItems.length > 0 && jsx(List_default, { class: "ui5-user-menu-list", selectionMode: "None", separators: "None", accessibleRole: "Menu", onItemClick: this._handleMenuItemClick, "onui5-close-menu": this._handleMenuItemClose, children: jsx("slot", {}) }), jsx("div", { slot: "footer", class: "ui5-pm-footer", children: jsx(Button_default, { class: "ui5-pm-sign-out-btn", design: "Transparent", icon: log_default, onClick: this._handleSignOutClick, children: this._signOutButtonText }) })] });
}
function headerContent() {
  return jsx(Fragment, { children: this._selectedAccount && jsxs("div", { class: "ui5-pm-selected-account", children: [jsxs(Avatar_default, { size: "L", onClick: this._handleAvatarClick, initials: this._selectedAccount._initials, fallbackIcon: person_placeholder_default, class: "ui5-pm--selected-account-avatar", children: [this._selectedAccount.avatarSrc && jsx("img", { src: this._selectedAccount.avatarSrc }), this.showEditButton && jsx(Tag_default, { slot: "badge", wrappingType: "None", design: "Set1", colorScheme: "5", title: this._editAvatarTooltip, children: jsx(Icon_default, { slot: "icon", name: edit_default }) })] }), this._selectedAccount.titleText && jsx(Title_default, { id: "selected-account-title", class: "ui5-pm-selected-account-title", children: this._selectedAccount.titleText }), this._selectedAccount.subtitleText && jsx(Text_default, { class: "ui5-pm-selected-account-subtitleText", children: this._selectedAccount.subtitleText }), this._selectedAccount.description && jsx(Text_default, { class: "ui5-pm-selected-account-description", children: this._selectedAccount.description }), this.showManageAccount && jsx(Button_default, { id: "selected-account-manage-btn", icon: user_settings_default, class: "ui5-pm-manage-account-btn", onClick: this._handleManageAccountClick, children: this._manageAccountButtonText })] }) });
}

// node_modules/@ui5/webcomponents-fiori/dist/generated/themes/UserMenu.css.js
registerThemePropertiesLoader("@ui5/webcomponents-theming", "sap_horizon", async () => parameters_bundle_css_default);
registerThemePropertiesLoader("@ui5/webcomponents-fiori", "sap_horizon", async () => parameters_bundle_css_default3);
var UserMenu_css_default = `.ui5-pm-rp{width:20rem}.ui5-pm-rp::part(content),.ui5-pm-rp::part(footer){padding-inline:.5rem}.ui5-pm-rp::part(header){box-shadow:none;padding:0}.ui5-pm-header{width:100%;padding-block-start:1rem;padding-inline:.5rem;display:flex;flex-direction:column}[on-phone] .ui5-pm-header{padding-inline:0}.ui5-pm-phone-header::part(startContent),.ui5-pm-phone-header::part(endContent){padding:0}.ui5-pm-phone-header [ui5-button]{margin-inline:.5rem;font-family:var(--sapFontSemiboldFamily)}.ui5-pm-rp::part(content){padding-top:0;padding-bottom:.5rem}.ui5-pm-rp::part(footer){padding-block:.5rem}.ui5-pm-selected-account{display:flex;align-items:center;flex-direction:column;margin-bottom:1rem}.ui5-pm--selected-account-avatar{margin-block:.5rem}.ui5-pm-selected-account-title{margin-block:.25rem;font-family:var(--sapFontBoldFamily);font-size:var(--sapFontLargeSize);color:var(--sapTextColor)}.ui5-pm-selected-account-subtitleText{margin-block:.25rem;font-family:var(--sapFontFamily);font-size:var(--sapFontSize);color:var(--sapContent_LabelColor)}.ui5-pm-selected-account-description{margin-bottom:1rem;font-family:var(--sapFontFamily);font-size:var(--sapFontSize);color:var(--sapContent_LabelColor)}.ui5-pm-decline-btn{align-self:flex-end;font-family:var(--sapFontSemiboldFamily)}.ui5-pm-manage-account-btn{margin-top:.5rem;font-family:var(--sapFontSemiboldFamily)}.ui5-pm-sign-out-btn{font-family:var(--sapFontSemiboldFamily)}.ui5-pm-other-accounts{margin-bottom:1rem}.ui5-pm-other-accounts::part(content){padding:0}.ui5-pm-other-accounts-content{display:grid;grid-template-columns:auto 1fr;align-items:center;gap:1rem;padding-block:1rem}.ui5-user-menu-account-header{display:flex;flex:1;justify-content:space-between;align-items:center}.ui5-pm-footer{display:flex;flex:1;justify-content:flex-end;align-items:center}
`;

// node_modules/@ui5/webcomponents-fiori/dist/UserMenu.js
var __decorate136 = function(decorators, target, key, desc) {
  var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
  if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
  else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
  return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var UserMenu_1;
var UserMenu = UserMenu_1 = class UserMenu2 extends UI5Element_default {
  constructor() {
    super(...arguments);
    this.open = false;
    this.showManageAccount = false;
    this.showOtherAccounts = false;
    this.showEditAccounts = false;
    this.showEditButton = false;
    this._titleMovedToHeader = false;
    this._manageAccountMovedToHeader = false;
  }
  onBeforeRendering() {
    this._selectedAccount = this.accounts.find((account) => account.selected) || this.accounts[0];
  }
  onAfterRendering() {
    var _a;
    if (this._isPhone && this._responsivePopover) {
      const observerOptions = {
        threshold: [0.15]
      };
      (_a = this._observer) == null ? void 0 : _a.disconnect();
      this._observer = new IntersectionObserver((entries) => this._handleIntersection(entries), observerOptions);
      if (this._selectedAccountTitleEl) {
        this._observer.observe(this._selectedAccountTitleEl);
      }
      if (this._selectedAccountManageBtn) {
        this._observer.observe(this._selectedAccountManageBtn);
      }
    }
  }
  get _isPhone() {
    return isPhone();
  }
  _handleIntersection(entries) {
    entries.forEach((entry) => {
      if (entry.isIntersecting) {
        if (entry.target.id === "selected-account-title") {
          this._titleMovedToHeader = false;
        } else if (entry.target.id === "selected-account-manage-btn") {
          this._manageAccountMovedToHeader = false;
        }
        return;
      }
      if (entry.target.id === "selected-account-title") {
        this._titleMovedToHeader = true;
      } else if (entry.target.id === "selected-account-manage-btn") {
        this._manageAccountMovedToHeader = true;
      }
    }, this);
  }
  _handleAvatarClick(e) {
    if (e.type === "click") {
      this.fireDecoratorEvent("avatar-click");
    }
  }
  _handleManageAccountClick() {
    this.fireDecoratorEvent("manage-account-click");
  }
  _handleEditAccountsClick() {
    this.fireDecoratorEvent("edit-accounts-click");
  }
  _handleAccountSwitch(e) {
    const item2 = e.detail.item;
    const eventPrevented = !this.fireDecoratorEvent("change-account", {
      prevSelectedAccount: this._selectedAccount,
      selectedAccount: item2.associatedAccount
    });
    if (eventPrevented) {
      return;
    }
    this._selectedAccount.selected = false;
    item2.associatedAccount.selected = true;
  }
  _handleSignOutClick() {
    const eventPrevented = !this.fireDecoratorEvent("sign-out-click");
    if (eventPrevented) {
      return;
    }
    this._closeUserMenu();
  }
  _handleMenuItemClick(e) {
    const item2 = e.detail.item;
    if (!item2._popover) {
      const eventPrevented = !this.fireDecoratorEvent("item-click", {
        "item": item2
      });
      if (!eventPrevented) {
        item2.fireEvent("close-menu");
      }
    } else {
      this._openItemSubMenu(item2);
    }
  }
  _handleMenuItemClose() {
    this._closeUserMenu();
  }
  _handlePopoverAfterOpen() {
    this.fireDecoratorEvent("open");
  }
  _handlePopoverAfterClose() {
    this.open = false;
    this.fireDecoratorEvent("close");
  }
  _openItemSubMenu(item2) {
    if (!item2._popover || item2._popover.open) {
      return;
    }
    item2._popover.opener = item2;
    item2._popover.open = true;
    item2.selected = true;
  }
  _closeUserMenu() {
    this.open = false;
  }
  get _manageAccountVisibleInHeader() {
    return this.showManageAccount && this._manageAccountMovedToHeader;
  }
  get _otherAccounts() {
    return this.accounts.filter((account) => account !== this._selectedAccount);
  }
  get _manageAccountButtonText() {
    return UserMenu_1.i18nBundle.getText(USER_MENU_MANAGE_ACCOUNT_BUTTON_TXT);
  }
  get _otherAccountsButtonText() {
    return UserMenu_1.i18nBundle.getText(USER_MENU_OTHER_ACCOUNT_BUTTON_TXT);
  }
  get _signOutButtonText() {
    return UserMenu_1.i18nBundle.getText(USER_MENU_SIGN_OUT_BUTTON_TXT);
  }
  get _editAvatarTooltip() {
    return UserMenu_1.i18nBundle.getText(USER_MENU_EDIT_AVATAR_TXT);
  }
  get _editAccountsTooltip() {
    return UserMenu_1.i18nBundle.getText(USER_MENU_EDIT_ACCOUNTS_TXT);
  }
  get _closeDialogAriaLabel() {
    return UserMenu_1.i18nBundle.getText(USER_MENU_CLOSE_DIALOG_BUTTON);
  }
  get accessibleNameText() {
    if (!this._selectedAccount) {
      return "";
    }
    return `${UserMenu_1.i18nBundle.getText(USER_MENU_POPOVER_ACCESSIBLE_NAME)} ${this._selectedAccount.titleText}`;
  }
  getAccountByRefId(refId) {
    return this.accounts.find((account) => account._id === refId);
  }
  captureRef(ref) {
    if (ref) {
      ref.associatedAccount = this;
    }
  }
};
__decorate136([
  property_default({ type: Boolean })
], UserMenu.prototype, "open", void 0);
__decorate136([
  property_default({ converter: DOMReference_default })
], UserMenu.prototype, "opener", void 0);
__decorate136([
  property_default({ type: Boolean })
], UserMenu.prototype, "showManageAccount", void 0);
__decorate136([
  property_default({ type: Boolean })
], UserMenu.prototype, "showOtherAccounts", void 0);
__decorate136([
  property_default({ type: Boolean })
], UserMenu.prototype, "showEditAccounts", void 0);
__decorate136([
  property_default({ type: Boolean })
], UserMenu.prototype, "showEditButton", void 0);
__decorate136([
  slot_default({
    type: HTMLElement,
    "default": true
  })
], UserMenu.prototype, "menuItems", void 0);
__decorate136([
  slot_default({
    type: HTMLElement,
    invalidateOnChildChange: {
      properties: true,
      slots: false
    }
  })
], UserMenu.prototype, "accounts", void 0);
__decorate136([
  property_default({ type: Boolean })
], UserMenu.prototype, "_titleMovedToHeader", void 0);
__decorate136([
  property_default({ type: Boolean })
], UserMenu.prototype, "_manageAccountMovedToHeader", void 0);
__decorate136([
  query_default("#user-menu-rp")
], UserMenu.prototype, "_responsivePopover", void 0);
__decorate136([
  query_default("#selected-account-title")
], UserMenu.prototype, "_selectedAccountTitleEl", void 0);
__decorate136([
  query_default("#selected-account-manage-btn")
], UserMenu.prototype, "_selectedAccountManageBtn", void 0);
__decorate136([
  i18n_default("@ui5/webcomponents-fiori")
], UserMenu, "i18nBundle", void 0);
UserMenu = UserMenu_1 = __decorate136([
  customElement_default({
    tag: "ui5-user-menu",
    languageAware: true,
    renderer: JsxRenderer_default,
    template: UserMenuTemplate,
    styles: [UserMenu_css_default]
  }),
  event_strict_default("avatar-click"),
  event_strict_default("manage-account-click"),
  event_strict_default("edit-accounts-click"),
  event_strict_default("change-account", {
    cancelable: true
  }),
  event_strict_default("item-click", {
    cancelable: true
  }),
  event_strict_default("open"),
  event_strict_default("close"),
  event_strict_default("sign-out-click", {
    cancelable: true
  })
], UserMenu);
UserMenu.define();

// node_modules/@ui5/webcomponents-react/dist/webComponents/UserMenu/index.js
var UserMenu3 = withWebComponent("ui5-user-menu", ["opener"], ["open", "showAddAccount", "showEditButton", "showManageAccount", "showOtherAccounts"], ["accounts"], ["add-account-click", "avatar-click", "change-account", "close", "item-click", "manage-account-click", "open", "sign-out-click"]);
UserMenu3.displayName = "UserMenu";

// node_modules/@ui5/webcomponents-fiori/dist/UserMenuAccount.js
var __decorate137 = function(decorators, target, key, desc) {
  var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
  if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
  else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
  return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var UserMenuAccount = (
  /**
   * @class
   * ### Overview
   *
   * The `ui5-user-menu-account` represents an account in the `ui5-user-menu`.
   *
   * ### ES6 Module Import
   * `import "@ui5/webcomponents-fiori/dist/UserMenuAccount.js";`
   *
   * @constructor
   * @extends UI5Element
   * @experimental
   * @public
   * @since 2.5.0
   */
  class UserMenuAccount2 extends UI5Element_default {
    constructor() {
      super(...arguments);
      this.titleText = "";
      this.subtitleText = "";
      this.description = "";
      this.selected = false;
    }
    get _initials() {
      return this.avatarInitials || "undefined";
    }
  }
);
__decorate137([
  property_default({ type: String })
], UserMenuAccount.prototype, "avatarSrc", void 0);
__decorate137([
  property_default({ type: String })
], UserMenuAccount.prototype, "avatarInitials", void 0);
__decorate137([
  property_default({ type: String })
], UserMenuAccount.prototype, "titleText", void 0);
__decorate137([
  property_default({ type: String })
], UserMenuAccount.prototype, "subtitleText", void 0);
__decorate137([
  property_default({ type: String })
], UserMenuAccount.prototype, "description", void 0);
__decorate137([
  property_default({ type: Boolean })
], UserMenuAccount.prototype, "selected", void 0);
UserMenuAccount = __decorate137([
  customElement_default({
    tag: "ui5-user-menu-account"
  })
  /**
   * @class
   * ### Overview
   *
   * The `ui5-user-menu-account` represents an account in the `ui5-user-menu`.
   *
   * ### ES6 Module Import
   * `import "@ui5/webcomponents-fiori/dist/UserMenuAccount.js";`
   *
   * @constructor
   * @extends UI5Element
   * @experimental
   * @public
   * @since 2.5.0
   */
], UserMenuAccount);
UserMenuAccount.define();

// node_modules/@ui5/webcomponents-react/dist/webComponents/UserMenuAccount/index.js
var UserMenuAccount3 = withWebComponent("ui5-user-menu-account", ["avatarInitials", "avatarSrc", "description", "subtitleText", "titleText"], ["selected"], [], []);
UserMenuAccount3.displayName = "UserMenuAccount";

// node_modules/@ui5/webcomponents-fiori/dist/UserMenuItemTemplate.js
function UserMenuItemTemplate() {
  return [MenuItemTemplate.call(this)];
}

// node_modules/@ui5/webcomponents-fiori/dist/generated/themes/UserMenuItem.css.js
registerThemePropertiesLoader("@ui5/webcomponents-theming", "sap_horizon", async () => parameters_bundle_css_default);
registerThemePropertiesLoader("@ui5/webcomponents-fiori", "sap_horizon", async () => parameters_bundle_css_default3);
var UserMenuItem_css_default = `:host{margin-block:.5rem}:host(:last-of-type){margin-bottom:0}:host(:first-of-type){margin-top:0}
`;

// node_modules/@ui5/webcomponents-fiori/dist/UserMenuItem.js
var __decorate138 = function(decorators, target, key, desc) {
  var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
  if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
  else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
  return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var UserMenuItem = class UserMenuItem2 extends MenuItem_default {
  get _menuItems() {
    return this.items.filter((item2) => !item2.isSeparator);
  }
};
__decorate138([
  slot_default({ "default": true, type: HTMLElement, invalidateOnChildChange: true })
], UserMenuItem.prototype, "items", void 0);
UserMenuItem = __decorate138([
  customElement_default({
    tag: "ui5-user-menu-item",
    template: UserMenuItemTemplate,
    styles: [MenuItem_default.styles, UserMenuItem_css_default]
  })
], UserMenuItem);
UserMenuItem.define();

// node_modules/@ui5/webcomponents-react/dist/webComponents/UserMenuItem/index.js
var UserMenuItem3 = withWebComponent("ui5-user-menu-item", ["accessibilityAttributes", "accessibleName", "additionalText", "highlight", "icon", "loadingDelay", "text", "tooltip", "type"], ["disabled", "loading", "navigated", "selected"], ["deleteButton", "endContent"], ["before-close", "before-open", "close", "detail-click", "open"]);
UserMenuItem3.displayName = "UserMenuItem";

// node_modules/@ui5/webcomponents-fiori/dist/types/ViewSettingsDialogMode.js
var ViewSettingsDialogMode;
(function(ViewSettingsDialogMode2) {
  ViewSettingsDialogMode2["Sort"] = "Sort";
  ViewSettingsDialogMode2["Filter"] = "Filter";
})(ViewSettingsDialogMode || (ViewSettingsDialogMode = {}));
var ViewSettingsDialogMode_default = ViewSettingsDialogMode;

// node_modules/@ui5/webcomponents-icons/dist/v4/sort.js
var name82 = "sort";
var pathData79 = "M405.022 498.566q-9.951 9.951-22.888 9.951t-21.893-9.951l-101.504-100.51q-11.942-11.941 0-22.888 4.975-4.976 10.946-4.976t10.947 4.976l84.587 84.587v-317.45q0-15.922 15.922-15.922t15.922 15.922v319.44l86.577-86.577q10.947-10.946 22.889 0 10.946 10.947 0 22.888zM253.761 110.46q10.946 11.941 0 22.888-4.976 4.976-11.444 4.976t-11.444-4.976l-86.578-86.577v319.44q0 15.922-15.922 15.922t-15.922-15.922V48.762l-84.587 84.587q-4.976 4.976-10.947 4.976t-10.946-4.976q-11.942-10.947 0-22.888L107.475 9.95Q116.431 0 129.368 0t22.889 9.951z";
var ltr79 = false;
var accData46 = ICON_SORT;
var collection81 = "SAP-icons-v4";
var packageName79 = "@ui5/webcomponents-icons";
registerIcon(name82, { pathData: pathData79, ltr: ltr79, accData: accData46, collection: collection81, packageName: packageName79 });

// node_modules/@ui5/webcomponents-icons/dist/v5/sort.js
var name83 = "sort";
var pathData80 = "M504 124q8 8 8 18 0 11-7.5 18.5T486 168t-18-7l-42-42v335q0 11-7.5 18.5T400 480t-18-7.5-7-18.5V118l-43 43q-7 7-18 7t-18.5-7.5T288 142q0-10 8-18l86-85q7-7 18-7t18 7zM180 351q7-7 18-7t18.5 7.5T224 370q0 10-8 18l-86 85q-7 7-18 7t-18-7L8 388q-8-8-8-18 0-11 7.5-18.5T26 344t18 7l43 43V58q0-11 7.5-18.5T113 32t18 7.5 7 18.5v335z";
var ltr80 = false;
var accData47 = ICON_SORT;
var collection82 = "SAP-icons-v5";
var packageName80 = "@ui5/webcomponents-icons";
registerIcon(name83, { pathData: pathData80, ltr: ltr80, accData: accData47, collection: collection82, packageName: packageName80 });

// node_modules/@ui5/webcomponents-icons/dist/sort.js
var sort_default = "sort";

// node_modules/@ui5/webcomponents-icons/dist/v4/filter.js
var name84 = "filter";
var pathData81 = "M447.897 32q20 0 28.5 17t-2.5 33q-12 12-23 26-11 12-23 27t-26 30q-32 36-73 82-9 9-9 23v114l-101 91q-4 5-11 5-6 0-11-4t-5-12V270q0-13-10-23l-72-82q-14-15-27-30t-23-26.5-16-19l-6-7.5q-11-16-2.5-33t28.5-17h384zm-142 193q40-45 71-80 13-15 25.5-29.5t22.5-26 16.5-18.5l6.5-7h-384l6 7.5 16 18.5 22.5 25.5 26.5 29.5q31 35 71 80 18 20 18 45v158l64-58V270q0-27 18-45z";
var ltr81 = false;
var accData48 = ICON_FILTER;
var collection83 = "SAP-icons-v4";
var packageName81 = "@ui5/webcomponents-icons";
registerIcon(name84, { pathData: pathData81, ltr: ltr81, accData: accData48, collection: collection83, packageName: packageName81 });

// node_modules/@ui5/webcomponents-icons/dist/v5/filter.js
var name85 = "filter";
var pathData82 = "M218 480q-11 0-18.5-7.5T192 454V265L38 74q-6-8-6-16 0-11 7.5-18.5T58 32h396q11 0 18.5 7.5T480 58q0 8-6 16L320 265v125q0 12-9 20l-77 64q-7 6-16 6zM111 83l126 157q6 6 6 16v144l26-22V256q0-9 5-16L401 83H111z";
var ltr82 = false;
var accData49 = ICON_FILTER;
var collection84 = "SAP-icons-v5";
var packageName82 = "@ui5/webcomponents-icons";
registerIcon(name85, { pathData: pathData82, ltr: ltr82, accData: accData49, collection: collection84, packageName: packageName82 });

// node_modules/@ui5/webcomponents-icons/dist/filter.js
var filter_default = "filter";

// node_modules/@ui5/webcomponents-fiori/dist/ViewSettingsDialogTemplate.js
function ViewSettingsDialogTemplateHeader() {
  return jsxs("div", { slot: "header", class: "ui5-vsd-header", children: [jsxs("div", { class: "ui5-vsd-header-container", children: [jsxs("div", { class: "ui5-vsd-header-start", children: [this.showBackButton && jsx(Button_default, { design: "Transparent", icon: nav_back_default, class: "ui5-vsd-back-button", onClick: this._navigateToFilters }), jsx(Title_default, { wrappingType: "None", level: "H1", class: "ui5-vsd-title", id: `${this._id}-label`, children: this._title })] }), jsx("div", { class: "ui5-vsd-header-end", children: jsx(Button_default, { design: "Transparent", onClick: this._resetSettings, disabled: this._disableResetButton, children: this._resetButtonLabel }) })] }), !this.showBackButton && this.hasPagination && jsx("div", { class: "ui5-vsd-sub-header-container", children: jsx("div", { class: "ui5-vsd-sub-header", children: jsxs(SegmentedButton_default, { onSelectionChange: this._handleModeChange, children: [jsx(SegmentedButtonItem_default, { selected: this.isModeSort, icon: sort_default, "data-mode": "Sort", tooltip: this._sortButtonTooltip }), jsx(SegmentedButtonItem_default, { selected: this.isModeFilter, icon: filter_default, "data-mode": "Filter", tooltip: this._filterButtonTooltip })] }) }) })] });
}
function ViewSettingsDialogTemplateContent() {
  return jsxs("div", { class: {
    "ui5-vsd-content": true,
    "ui5-vsd-content-expand": this.expandContent
  }, children: [this.shouldBuildSort && this.isModeSort && jsxs("div", { class: "ui5-vsd-sort", children: [jsx(List_default, { selectionMode: "SingleStart", onSelectionChange: this._onSortOrderChange, "sort-order": "", accessibleNameRef: `${this._id}-label`, children: jsx(ListItemGroup_default, { headerText: this._sortOrderLabel, children: this._currentSettings.sortOrder.map((item2) => jsx(ListItemStandard_default, { selected: item2.selected, children: item2.text })) }) }), jsx(List_default, { selectionMode: "SingleStart", onSelectionChange: this._onSortByChange, "sort-by": "", children: jsx(ListItemGroup_default, { headerText: this._sortByLabel, children: this._currentSettings.sortBy.map((item2, index) => jsx(ListItemStandard_default, { "data-ui5-external-action-item-index": index, selected: item2.selected, children: item2.text })) }) })] }), this.shouldBuildFilter && this.isModeFilter && jsx(Fragment, { children: this._filterStepTwo ? jsx(List_default, { selectionMode: "Multiple", onSelectionChange: this._handleFilterValueItemClick, accessibleNameRef: `${this._id}-label`, children: this._currentSettings.filters.filter((item2) => item2.selected).map((item2) => jsx(Fragment, { children: item2.filterOptions.map((option) => jsx(ListItemStandard_default, { selected: option.selected, children: option.text })) })) }) : (
    // else
    jsx(List_default, { onItemClick: this._changeCurrentFilter, accessibleNameRef: `${this._id}-label`, children: jsx(ListItemGroup_default, { headerText: this._filterByLabel, children: this.filterItems.map((item2) => jsx(ListItemStandard_default, {
      class: "ui5-vsd-filterItemList",
      // selected={item.selected} TODO
      additionalText: item2.additionalText,
      children: item2.text
    })) }) })
  ) })] });
}
function ViewSettingsDialogTemplateFooter() {
  return jsxs("div", { slot: "footer", class: "ui5-vsd-footer", children: [jsx(Button_default, { design: "Emphasized", onClick: this._confirmSettings, children: this._okButtonLabel }), jsx(Button_default, { design: "Transparent", onClick: this._cancelSettings, children: this._cancelButtonLabel })] });
}
function ViewSettingsDialogTemplate() {
  return jsxs(Dialog_default, { preventInitialFocus: true, "aria-label": this._dialogTitle, onBeforeClose: this._restoreConfirmedOnEscape, stretch: this._isPhone, open: this.open, onBeforeOpen: this.beforeDialogOpen, onOpen: this.afterDialogOpen, onClose: this.afterDialogClose, children: [ViewSettingsDialogTemplateHeader.call(this), ViewSettingsDialogTemplateContent.call(this), ViewSettingsDialogTemplateFooter.call(this)] });
}

// node_modules/@ui5/webcomponents-fiori/dist/generated/themes/ViewSettingsDialog.css.js
registerThemePropertiesLoader("@ui5/webcomponents-theming", "sap_horizon", async () => parameters_bundle_css_default);
registerThemePropertiesLoader("@ui5/webcomponents-fiori", "sap_horizon", async () => parameters_bundle_css_default3);
var ViewSettingsDialog_css_default = `[on-desktop] .ui5-vsd-content{height:var(--_ui5-v2-8-0_vsd_content_height);min-width:350px}[on-desktop] .ui5-vsd-content.ui5-vsd-content-expand{height:var(--_ui5-v2-8-0_vsd_expand_content_height);min-width:350px}.ui5-vsd-header{width:100%;padding-bottom:.25rem}.ui5-vsd-content{margin:0 .1px 0 -1rem}.ui5-vsd-title{font-size:var(--sapFontHeader5Size)}.ui5-vsd-header-container{display:flex;align-items:center;justify-content:space-between;height:var(--_ui5-v2-8-0_vsd_header_container);line-height:var(--_ui5-v2-8-0_vsd_header_container)}.ui5-vsd-header-end{display:flex}.ui5-vsd-sub-header{height:var(--_ui5-v2-8-0_vsd_sub_header_container_height);line-height:var(--_ui5-v2-8-0_vsd_sub_header_container_height)}.ui5-vsd-header-start{display:flex;align-items:center}.ui5-vsd-back-button{margin-inline-end:.5rem}.ui5-vsd-footer{width:100%;display:flex;justify-content:flex-end;align-items:center;margin:.1875rem 0}.ui5-vsd-footer [ui5-button]:first-child{margin-inline-end:.5rem;min-width:4rem}.ui5-vsd-sort{width:100%;height:100%}[ui5-li-group]::part(header){overflow:hidden}[ui5-dialog]::part(content){padding-top:0;padding-bottom:0;padding-inline-end:0}:host [ui5-li]::part(native-li){padding-inline-start:var(--_ui5-v2-8-0_vsd_content_li_padding)}:host [ui5-li].ui5-vsd-filterItemList::part(native-li){padding-inline-start:1rem}
`;

// node_modules/@ui5/webcomponents-fiori/dist/ViewSettingsDialog.js
var __decorate139 = function(decorators, target, key, desc) {
  var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
  if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
  else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
  return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var ViewSettingsDialog_1;
var ViewSettingsDialog = ViewSettingsDialog_1 = class ViewSettingsDialog2 extends UI5Element_default {
  constructor() {
    super(...arguments);
    this.sortDescending = false;
    this.open = false;
    this._currentSettings = {
      sortOrder: [],
      sortBy: [],
      filters: []
    };
    this._initialSettings = this._currentSettings;
    this._confirmedSettings = this._currentSettings;
    this._currentMode = "Sort";
    this._filterStepTwo = false;
  }
  onBeforeRendering() {
    if (this._currentSettings.filters && this._currentSettings.filters.length) {
      this._setAdditionalTexts();
    }
    if (!this.shouldBuildSort && this.shouldBuildFilter) {
      this._currentMode = ViewSettingsDialogMode_default.Filter;
    }
  }
  onInvalidation(changeInfo) {
    if (changeInfo.type === "slot") {
      this._confirmedSettings = this._settings;
    }
  }
  _setAdditionalTexts() {
    this.filterItems.forEach((filter, index) => {
      let selectedCount = 0;
      for (let i = 0; i < filter.values.length; i++) {
        if (this._currentSettings.filters[index].filterOptions[i].selected) {
          selectedCount++;
        }
      }
      filter.additionalText = !selectedCount ? "" : `${selectedCount}`;
    });
  }
  get _selectedFilter() {
    for (let i = 0; i < this._currentSettings.filters.length; i++) {
      if (this._currentSettings.filters[i].selected) {
        return this._currentSettings.filters[i];
      }
    }
  }
  get shouldBuildSort() {
    return !!this.sortItems.length;
  }
  get shouldBuildFilter() {
    return !!this.filterItems.length;
  }
  get hasPagination() {
    return this.shouldBuildSort && this.shouldBuildFilter;
  }
  get _filterByTitle() {
    const selectedFilterText = this._selectedFilter ? this._selectedFilter.text : "";
    return `${ViewSettingsDialog_1.i18nBundle.getText(VSD_FILTER_BY)}: ${selectedFilterText}`;
  }
  get _dialogTitle() {
    return ViewSettingsDialog_1.i18nBundle.getText(VSD_DIALOG_TITLE_SORT);
  }
  get _okButtonLabel() {
    return ViewSettingsDialog_1.i18nBundle.getText(VSD_SUBMIT_BUTTON);
  }
  get _cancelButtonLabel() {
    return ViewSettingsDialog_1.i18nBundle.getText(VSD_CANCEL_BUTTON);
  }
  get _resetButtonLabel() {
    return ViewSettingsDialog_1.i18nBundle.getText(VSD_RESET_BUTTON);
  }
  get _ascendingLabel() {
    return ViewSettingsDialog_1.i18nBundle.getText(VSD_ORDER_ASCENDING);
  }
  get _descendingLabel() {
    return ViewSettingsDialog_1.i18nBundle.getText(VSD_ORDER_DESCENDING);
  }
  get _sortOrderLabel() {
    return ViewSettingsDialog_1.i18nBundle.getText(VSD_SORT_ORDER);
  }
  get _filterByLabel() {
    return ViewSettingsDialog_1.i18nBundle.getText(VSD_FILTER_BY);
  }
  get _sortByLabel() {
    return ViewSettingsDialog_1.i18nBundle.getText(VSD_SORT_BY);
  }
  get _sortButtonTooltip() {
    return ViewSettingsDialog_1.i18nBundle.getText(VSD_SORT_TOOLTIP);
  }
  get _filterButtonTooltip() {
    return ViewSettingsDialog_1.i18nBundle.getText(VSD_FILTER_TOOLTIP);
  }
  get _resetButtonAction() {
    return ViewSettingsDialog_1.i18nBundle.getText(VSD_RESET_BUTTON_ACTION);
  }
  get _isPhone() {
    return isPhone();
  }
  get _sortAscending() {
    return !this.sortDescending;
  }
  get _title() {
    return this.showBackButton ? this._filterByTitle : this._dialogTitle;
  }
  /**
   * Determines disabled state of the `Reset` button.
   */
  get _disableResetButton() {
    return this._dialog && this._sortSetttingsAreInitial && this._filteresAreInitial;
  }
  get _sortSetttingsAreInitial() {
    let settingsAreInitial = true;
    ["sortBy", "sortOrder"].forEach((sortList) => {
      this._currentSettings[sortList].forEach((item2, index) => {
        if (item2.selected !== this._initialSettings[sortList][index].selected) {
          settingsAreInitial = false;
        }
      });
    });
    return settingsAreInitial;
  }
  get _filteresAreInitial() {
    let filtersAreInitial = true;
    this._currentSettings.filters.forEach((filter, index) => {
      for (let i = 0; i < filter.filterOptions.length; i++) {
        if (filter.filterOptions[i].selected !== this._initialSettings.filters[index].filterOptions[i].selected) {
          filtersAreInitial = false;
        }
      }
    });
    return filtersAreInitial;
  }
  /**
   * Returns the current settings (current state of all lists).
   */
  get _settings() {
    return {
      sortOrder: JSON.parse(JSON.stringify(this.initSortOrderItems)),
      sortBy: JSON.parse(JSON.stringify(this.initSortByItems)),
      filters: this.filterItems.map((item2) => {
        return {
          text: item2.text || "",
          selected: false,
          filterOptions: item2.values.map((optionValue) => {
            return {
              text: optionValue.text || "",
              selected: optionValue.selected
            };
          })
        };
      })
    };
  }
  get initSortByItems() {
    return this.sortItems.map((item2, index) => {
      return {
        text: item2.text,
        selected: item2.selected,
        index
      };
    });
  }
  get initSortOrderItems() {
    return [
      {
        text: this._ascendingLabel,
        selected: !this.sortDescending
      },
      {
        text: this._descendingLabel,
        selected: this.sortDescending
      }
    ];
  }
  get expandContent() {
    return this._filterStepTwo || !this.hasPagination;
  }
  get isModeSort() {
    return this._currentMode === ViewSettingsDialogMode_default.Sort;
  }
  get isModeFilter() {
    return this._currentMode === ViewSettingsDialogMode_default.Filter;
  }
  get showBackButton() {
    return this.isModeFilter && this._filterStepTwo;
  }
  get _sortOrderListDomRef() {
    return this.shadowRoot.querySelector("[ui5-list][sort-order]");
  }
  get _sortByList() {
    return this.shadowRoot.querySelector("[ui5-list][sort-by]");
  }
  get _dialogDomRef() {
    return this.shadowRoot.querySelector("[ui5-dialog]");
  }
  /**
   * Shows the dialog.
   */
  beforeDialogOpen() {
    if (!this._dialog) {
      this._sortOrder = this._sortOrderListDomRef;
      this._sortBy = this._sortByList;
      this._initialSettings = this._settings;
      this._currentSettings = this._settings;
      this._confirmedSettings = this._settings;
      this._dialog = this._dialogDomRef;
    } else {
      this._restoreSettings(this._confirmedSettings);
    }
    this.fireDecoratorEvent("before-open");
  }
  afterDialogOpen() {
    var _a, _b;
    (_b = (_a = this._dialog) == null ? void 0 : _a.querySelector("[ui5-list]")) == null ? void 0 : _b.focusFirstItem();
    this._focusRecentlyUsedControl();
    this.fireDecoratorEvent("open");
  }
  afterDialogClose() {
    this.fireDecoratorEvent("close");
  }
  _handleModeChange(e) {
    const mode = e.detail.selectedItems[0].getAttribute("data-mode");
    this._currentMode = ViewSettingsDialogMode_default[mode];
  }
  _handleFilterValueItemClick(e) {
    const itemText = e.detail.targetItem.innerText;
    this._currentSettings.filters = this._currentSettings.filters.map((filter) => {
      if (filter.selected) {
        filter.filterOptions.forEach((option) => {
          if (option.text === itemText) {
            option.selected = !option.selected;
          }
        });
      }
      return filter;
    });
    this._setSelectedProp(itemText);
    this._currentSettings = JSON.parse(JSON.stringify(this._currentSettings));
  }
  /**
   * Sets the selected property of the clicked item.
   * @private
   */
  _setSelectedProp(itemText) {
    this.filterItems.forEach((filterItem) => {
      filterItem.values.forEach((option) => {
        if (option.text === itemText) {
          option.selected = !option.selected;
        }
      });
    });
  }
  _navigateToFilters() {
    this._filterStepTwo = false;
  }
  _changeCurrentFilter(e) {
    this._filterStepTwo = true;
    this._currentSettings.filters = this._currentSettings.filters.map((filter) => {
      filter.selected = filter.text === e.detail.item.innerText;
      return filter;
    });
  }
  /**
   * Sets focus on recently used control within the dialog.
   */
  _focusRecentlyUsedControl() {
    if (!this._recentlyFocused || !Object.keys(this._recentlyFocused).length) {
      return;
    }
    const recentlyFocusedSelectedItems = this._recentlyFocused.getSelectedItems();
    if (recentlyFocusedSelectedItems.length) {
      recentlyFocusedSelectedItems[0].focus();
    }
  }
  /**
   * Stores current settings as confirmed and fires `confirm` event.
   */
  _confirmSettings() {
    this.open = false;
    this._confirmedSettings = this._currentSettings;
    this.fireDecoratorEvent("confirm", this.eventsParams);
  }
  /**
   * Sets current settings to recently confirmed ones and fires `cancel` event.
   */
  _cancelSettings() {
    this._restoreSettings(this._confirmedSettings);
    this.fireDecoratorEvent("cancel", this.eventsParams);
    this.open = false;
  }
  get eventsParams() {
    const _currentSortOrderSelected = this._currentSettings.sortOrder.filter((item2) => item2.selected)[0], _currentSortBySelected = this._currentSettings.sortBy.filter((item2) => item2.selected)[0], sortOrder = _currentSortOrderSelected && (_currentSortOrderSelected.text || ""), sortDescending = !this._currentSettings.sortOrder[0].selected, sortBy = _currentSortBySelected && (_currentSortBySelected.text || ""), sortByElementIndex = _currentSortBySelected && _currentSortBySelected.index, sortByItem = this.sortItems[sortByElementIndex], selectedFilterItems = this.filterItems.filter((filterItem) => filterItem.values.some((item2) => item2.selected));
    return {
      sortOrder,
      sortDescending,
      sortBy,
      sortByItem,
      filters: this.selectedFilters,
      filterItems: selectedFilterItems
    };
  }
  get selectedFilters() {
    const result = [];
    this._currentSettings.filters.forEach((filter) => {
      const selectedOptions = [];
      filter.filterOptions.forEach((option) => {
        if (option.selected) {
          selectedOptions.push(option.text || "");
        }
      });
      if (selectedOptions.length) {
        result.push({});
        result[result.length - 1][filter.text || ""] = selectedOptions;
      }
    });
    return result;
  }
  /**
   * If the dialog is closed by [Escape] key, do the same as if the `Cancel` button is pressed.
   * @param evt
   */
  _restoreConfirmedOnEscape(evt) {
    if (evt.detail.escPressed) {
      this._cancelSettings();
      this._currentMode = ViewSettingsDialogMode_default.Sort;
      this._filterStepTwo = false;
    }
  }
  /**
   * Resets the control settings to their initial state.
   */
  _resetSettings() {
    this._restoreSettings(this._initialSettings);
    this._recentlyFocused = this._sortOrder;
    this._focusRecentlyUsedControl();
    InvisibleMessage_default(this._resetButtonAction, InvisibleMessageMode_default.Polite);
  }
  /**
   * Sets current settings to ones passed as `settings` argument.
   * @param settings
   */
  _restoreSettings(settings) {
    this._currentSettings = JSON.parse(JSON.stringify(settings));
    this._currentMode = ViewSettingsDialogMode_default.Sort;
    this._filterStepTwo = false;
  }
  /**
   * Stores `Sort Order` list as recently used control and its selected item in current state.
   */
  _onSortOrderChange(e) {
    this._recentlyFocused = this._sortOrder;
    this._currentSettings.sortOrder = this.initSortOrderItems.map((item2) => {
      item2.selected = item2.text === e.detail.targetItem.innerText;
      return item2;
    });
    this._currentSettings = JSON.parse(JSON.stringify(this._currentSettings));
  }
  /**
   * Stores `Sort By` list as recently used control and its selected item in current state.
   */
  _onSortByChange(e) {
    const selectedItemIndex = Number(e.detail.targetItem.getAttribute("data-ui5-external-action-item-index"));
    this._recentlyFocused = this._sortBy;
    this._currentSettings.sortBy = this.initSortByItems.map((item2, index) => {
      item2.selected = index === selectedItemIndex;
      return item2;
    });
    this._currentSettings = JSON.parse(JSON.stringify(this._currentSettings));
  }
  /**
   * Sets a JavaScript object, as settings to the `ui5-view-settings-dialog`.
   * This method can be used after the dialog is initially open, as the dialog needs
   * to set its initial settings.
   * The `ui5-view-settings-dialog` throws an event called "before-open",
   * which can be used as a trigger point.
   * The object should have the following format:
   * @param settings - predefined settings.
   * @public
   */
  setConfirmedSettings(settings) {
    if (settings && this._dialog && !this._dialog.open) {
      const tempSettings = JSON.parse(JSON.stringify(this._confirmedSettings));
      if (settings.sortOrder) {
        for (let i = 0; i < tempSettings.sortOrder.length; i++) {
          if (tempSettings.sortOrder[i].text === settings.sortOrder) {
            tempSettings.sortOrder[i].selected = true;
          } else {
            tempSettings.sortOrder[i].selected = false;
          }
        }
      }
      if (settings.sortBy) {
        for (let i = 0; i < tempSettings.sortBy.length; i++) {
          if (tempSettings.sortBy[i].text === settings.sortBy) {
            tempSettings.sortBy[i].selected = true;
          } else {
            tempSettings.sortBy[i].selected = false;
          }
        }
      }
      if (settings.filters) {
        const inputFilters = {};
        for (let i = 0; i < settings.filters.length; i++) {
          inputFilters[Object.keys(settings.filters[i])[0]] = settings.filters[i][Object.keys(settings.filters[i])[0]];
        }
        for (let i = 0; i < tempSettings.filters.length; i++) {
          for (let j = 0; j < tempSettings.filters[i].filterOptions.length; j++) {
            if (inputFilters[tempSettings.filters[i].text || ""] && inputFilters[tempSettings.filters[i].text || ""].indexOf(tempSettings.filters[i].filterOptions[j].text || "") > -1) {
              tempSettings.filters[i].filterOptions[j].selected = true;
            } else {
              tempSettings.filters[i].filterOptions[j].selected = false;
            }
          }
        }
      }
      this._confirmedSettings = JSON.parse(JSON.stringify(tempSettings));
    }
  }
};
__decorate139([
  property_default({ type: Boolean })
], ViewSettingsDialog.prototype, "sortDescending", void 0);
__decorate139([
  property_default({ type: Boolean })
], ViewSettingsDialog.prototype, "open", void 0);
__decorate139([
  property_default({ type: Object })
], ViewSettingsDialog.prototype, "_recentlyFocused", void 0);
__decorate139([
  property_default({ type: Object })
], ViewSettingsDialog.prototype, "_currentSettings", void 0);
__decorate139([
  property_default({ type: Object })
], ViewSettingsDialog.prototype, "_initialSettings", void 0);
__decorate139([
  property_default({ type: Object })
], ViewSettingsDialog.prototype, "_confirmedSettings", void 0);
__decorate139([
  property_default()
], ViewSettingsDialog.prototype, "_currentMode", void 0);
__decorate139([
  property_default({ type: Boolean, noAttribute: true })
], ViewSettingsDialog.prototype, "_filterStepTwo", void 0);
__decorate139([
  slot_default()
], ViewSettingsDialog.prototype, "sortItems", void 0);
__decorate139([
  slot_default()
], ViewSettingsDialog.prototype, "filterItems", void 0);
__decorate139([
  i18n_default("@ui5/webcomponents-fiori")
], ViewSettingsDialog, "i18nBundle", void 0);
ViewSettingsDialog = ViewSettingsDialog_1 = __decorate139([
  customElement_default({
    tag: "ui5-view-settings-dialog",
    renderer: JsxRenderer_default,
    styles: ViewSettingsDialog_css_default,
    template: ViewSettingsDialogTemplate
  }),
  event_strict_default("confirm", {
    bubbles: true
  }),
  event_strict_default("cancel", {
    bubbles: true
  }),
  event_strict_default("before-open", {
    cancelable: true
  }),
  event_strict_default("open", {
    bubbles: true
  }),
  event_strict_default("close", {
    bubbles: true
  })
], ViewSettingsDialog);
ViewSettingsDialog.define();

// node_modules/@ui5/webcomponents-react/dist/webComponents/ViewSettingsDialog/index.js
var ViewSettingsDialog3 = withWebComponent("ui5-view-settings-dialog", [], ["open", "sortDescending"], ["filterItems", "sortItems"], ["before-open", "cancel", "close", "confirm", "open"]);
ViewSettingsDialog3.displayName = "ViewSettingsDialog";

// node_modules/@ui5/webcomponents-fiori/dist/WizardStep.js
var __decorate140 = function(decorators, target, key, desc) {
  var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
  if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
  else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
  return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var WizardStep = class WizardStep2 extends UI5Element_default {
  constructor() {
    super(...arguments);
    this.disabled = false;
    this.selected = false;
    this.branching = false;
  }
};
__decorate140([
  property_default()
], WizardStep.prototype, "titleText", void 0);
__decorate140([
  property_default()
], WizardStep.prototype, "subtitleText", void 0);
__decorate140([
  property_default()
], WizardStep.prototype, "icon", void 0);
__decorate140([
  property_default({ type: Boolean })
], WizardStep.prototype, "disabled", void 0);
__decorate140([
  property_default({ type: Boolean })
], WizardStep.prototype, "selected", void 0);
__decorate140([
  property_default({ type: Boolean })
], WizardStep.prototype, "branching", void 0);
WizardStep = __decorate140([
  customElement_default("ui5-wizard-step")
], WizardStep);
WizardStep.define();

// node_modules/@ui5/webcomponents-fiori/dist/WizardTabTemplate.js
function WizardTabTemplate() {
  return jsxs("div", { class: "ui5-wiz-step-root", role: "listitem", tabIndex: this.effectiveTabIndex, "aria-current": this.accInfo.ariaCurrent, "aria-setsize": this.accInfo.ariaSetsize, "aria-posinset": this.accInfo.ariaPosinset, "aria-label": this.accInfo.ariaLabel, onClick: this._onclick, onKeyUp: this._onkeyup, onFocusIn: this._onfocusin, children: [jsxs("div", { class: "ui5-wiz-step-main", children: [jsx("div", { class: "ui5-wiz-step-icon-circle", children: this.icon ? jsx(Icon_default, { class: "ui5-wiz-step-icon", mode: "Decorative", name: this.icon }) : jsx("span", { class: "ui5-wiz-step-number", children: this.number }) }), this.hasTexts && jsxs("div", { class: "ui5-wiz-step-texts", children: [jsx("div", { class: "ui5-wiz-step-title-text", children: this.titleText }), this.subtitleText && jsx("div", { class: "ui5-wiz-step-subtitle-text", children: this.subtitleText })] })] }), !this.hideSeparator && jsx("div", { class: "ui5-wiz-step-hr" })] });
}

// node_modules/@ui5/webcomponents-fiori/dist/generated/themes/WizardTab.css.js
registerThemePropertiesLoader("@ui5/webcomponents-theming", "sap_horizon", async () => parameters_bundle_css_default);
registerThemePropertiesLoader("@ui5/webcomponents-fiori", "sap_horizon", async () => parameters_bundle_css_default3);
var WizardTab_css_default = `:host(:not([hidden])){min-width:1px}:host([selected]:not([disabled])) .ui5-wiz-step-icon-circle{background:var(--_ui5-v2-8-0_wiz_tab_selected_bg)}:host([selected]:not([disabled])) .ui5-wiz-step-title-text{color:var(--sapContent_Selected_ForegroundColor)}:host([selected]:not([disabled])) .ui5-wiz-step-icon-circle:after{content:"";position:absolute;border-bottom:.25rem solid var(--_ui5-v2-8-0_wiz_tab_selection_line);border-top-left-radius:.1875rem;border-top-right-radius:.1875rem;left:0;right:0;bottom:-1rem}:host([selected]:not([disabled])) .ui5-wiz-step-icon{color:var(--sapContent_ContrastIconColor)}:host([selected]:not([disabled])) .ui5-wiz-step-number{color:var(--sapContent_ContrastTextColor)}:host([disabled]) .ui5-wiz-step-icon-circle{border-color:var(--sapList_BorderColor);background:var(--sapObjectHeader_Background)}:host([disabled]) .ui5-wiz-step-title-text{color:var(--sapContent_LabelColor)}:host([disabled]) .ui5-wiz-step-icon{color:var(--sapContent_LabelColor)}:host([disabled]) .ui5-wiz-step-number{color:var(--sapContent_LabelColor)}.ui5-wiz-step-root{display:flex;align-items:center;flex-direction:row;font-size:var(--sapFontSize);font-family:var(--sapFontFamily);outline:none}.ui5-wiz-step-main{max-width:100%;text-align:center;white-space:nowrap}:host(:not([disabled])) .ui5-wiz-step-main{cursor:pointer}.ui5-wiz-step-root:focus .ui5-wiz-step-main{outline:var(--_ui5-v2-8-0_wiz_tab_focus_outline);outline-offset:1px;border-radius:var(--_ui5-v2-8-0_wiz_tab_focus_border_radius)}.ui5-wiz-step-icon-circle{display:inline-flex;box-sizing:border-box;vertical-align:middle;justify-content:center;align-items:center;text-align:center;width:2rem;height:2rem;margin:0 .1875rem;line-height:1.875rem;border-radius:50%;background:var(--sapObjectHeader_Background);border:var(--_ui5-v2-8-0_wiz_tab_border);position:relative}.ui5-wiz-step-icon{width:1rem;height:1rem;color:var(--_ui5-v2-8-0_wiz_tab_icon_color);pointer-events:none}.ui5-wiz-step-number{color:var(--_ui5-v2-8-0_wiz_tab_icon_color)}.ui5-wiz-step-texts{display:inline-block;max-width:calc(100% - 3rem);vertical-align:middle;text-align:left;padding:0 .5rem 0 .1875rem;max-height:3rem;overflow:hidden;background:var(--sapObjectHeader_Background)}.ui5-wiz-step-title-text,.ui5-wiz-step-subtitle-text{color:var(--_ui5-v2-8-0_wiz_tab_title_color);white-space:nowrap;text-overflow:ellipsis;overflow:hidden}.ui5-wiz-step-title-text{font-family:var(--_ui5-v2-8-0_wiz_tab_title_font_family);white-space:normal;display:-webkit-box;-webkit-line-clamp:2;-webkit-box-orient:vertical;overflow:hidden}:host([subtitle-text]:not([subtitle-text=""])) .ui5-wiz-step-title-text{-webkit-line-clamp:1}:host([data-ui5-wizard-expanded-tab-prev="true"]) .ui5-wiz-step-title-text,:host([data-ui5-wizard-expanded-tab-prev="true"]) .ui5-wiz-step-subtitle-text,:host([data-ui5-wizard-expanded-tab="false"]) .ui5-wiz-step-texts,:host([data-ui5-wizard-expanded-tab="false"]) .ui5-wiz-step-title-text,:host([data-ui5-wizard-expanded-tab="false"]) .ui5-wiz-step-subtitle-text{display:none}.ui5-wiz-step-subtitle-text{margin-top:.125rem;font-family:var(--sapFontFamily);color:var(--sapContent_LabelColor);font-size:var(--sapFontSmallSize)}.ui5-wiz-step-hr{display:inline-block;border-bottom-color:var(--sapList_BorderColor);border-bottom-width:1px;border-bottom-style:solid;height:1px;flex-grow:1;margin-right:.25rem}:host([active-separator]) .ui5-wiz-step-hr{border-bottom-color:var(--_ui5-v2-8-0_wiz_tab_active_separator_color)}:host([branching-separator]) .ui5-wiz-step-hr{border-bottom-style:dashed}:host([data-ui5-wizard-expanded-tab="false"]) .ui5-wiz-step-root{display:inline;position:absolute;top:0}:host([data-ui5-wizard-after-current-tab="true"]) .ui5-wiz-step-root{right:0}:host([data-ui5-wizard-expanded-tab="false"]) .ui5-wiz-step-hr{display:none}
`;

// node_modules/@ui5/webcomponents-fiori/dist/WizardTab.js
var __decorate141 = function(decorators, target, key, desc) {
  var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
  if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
  else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
  return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var WizardTab = class WizardTab2 extends UI5Element_default {
  constructor() {
    super(...arguments);
    this.disabled = false;
    this.selected = false;
    this.hideSeparator = false;
    this.activeSeparator = false;
    this.branchingSeparator = false;
  }
  _onclick() {
    if (!this.disabled) {
      this.fireDecoratorEvent("selection-change-requested");
    }
  }
  _onkeyup(e) {
    if (this.disabled) {
      return;
    }
    if ((isSpace(e) || isEnter(e)) && !isSpaceShift(e)) {
      e.preventDefault();
      this.fireDecoratorEvent("selection-change-requested");
    }
  }
  get effectiveTabIndex() {
    if (this.disabled) {
      return;
    }
    if (this.selected || this.forcedTabIndex === "0") {
      return 0;
    }
    return -1;
  }
  _onfocusin() {
    this.fireDecoratorEvent("focused");
  }
  get hasTexts() {
    return this.titleText || this.subtitleText;
  }
  get accInfo() {
    return {
      "ariaSetsize": this._wizardTabAccInfo && this._wizardTabAccInfo.ariaSetsize,
      "ariaPosinset": this._wizardTabAccInfo && this._wizardTabAccInfo.ariaPosinset,
      "ariaLabel": this._wizardTabAccInfo && this._wizardTabAccInfo.ariaLabel,
      "ariaCurrent": this.selected ? "true" : void 0
    };
  }
};
__decorate141([
  property_default()
], WizardTab.prototype, "icon", void 0);
__decorate141([
  property_default()
], WizardTab.prototype, "titleText", void 0);
__decorate141([
  property_default()
], WizardTab.prototype, "subtitleText", void 0);
__decorate141([
  property_default()
], WizardTab.prototype, "number", void 0);
__decorate141([
  property_default({ type: Boolean })
], WizardTab.prototype, "disabled", void 0);
__decorate141([
  property_default({ type: Boolean })
], WizardTab.prototype, "selected", void 0);
__decorate141([
  property_default({ type: Boolean })
], WizardTab.prototype, "hideSeparator", void 0);
__decorate141([
  property_default({ type: Boolean })
], WizardTab.prototype, "activeSeparator", void 0);
__decorate141([
  property_default({ type: Boolean })
], WizardTab.prototype, "branchingSeparator", void 0);
__decorate141([
  property_default()
], WizardTab.prototype, "forcedTabIndex", void 0);
__decorate141([
  property_default({ type: Object })
], WizardTab.prototype, "_wizardTabAccInfo", void 0);
WizardTab = __decorate141([
  customElement_default({
    tag: "ui5-wizard-tab",
    renderer: JsxRenderer_default,
    styles: WizardTab_css_default,
    template: WizardTabTemplate
  }),
  event_strict_default("focused", {
    bubbles: true
  }),
  event_strict_default("selection-change-requested", {
    bubbles: true
  })
], WizardTab);
WizardTab.define();
var WizardTab_default = WizardTab;

// node_modules/@ui5/webcomponents-fiori/dist/WizardPopoverTemplate.js
function WizardPopoverTemplate() {
  return jsxs(ResponsivePopover_default, { horizontalAlign: "Center", placement: "Bottom", "aria-label": this.actionSheetStepsText, class: {
    "ui5-wizard-responsive-popover": true,
    "ui5-wizard-popover": !isPhone(),
    "ui5-wizard-dialog": isPhone()
  }, contentOnlyOnDesktop: true, preventFocusRestore: true, _hideHeader: true, children: [jsx("ul", { class: "ui5-wizard-responsive-popover-list", children: this._groupedTabs.map((tab) => jsx("li", { children: jsx(Button_default, { icon: tab.icon, disabled: tab.disabled, design: "Transparent", "data-ui5-header-tab-ref-id": tab.accInfo.ariaPosinset, onClick: this._onOverflowStepButtonClick, children: tab.titleText }) })) }), jsx("div", { slot: "footer", class: "ui5-responsive-popover-footer", children: jsx(Button_default, { design: "Transparent", onClick: this._closeRespPopover, children: "Cancel" }) })] });
}

// node_modules/@ui5/webcomponents-fiori/dist/WizardTemplate.js
function WizardTemplate() {
  return jsxs(Fragment, { children: [jsxs("div", { class: "ui5-wiz-root", "aria-label": this.ariaLabelText, role: "region", children: [jsx("nav", { class: "ui5-wiz-nav", part: "navigator", "aria-label": this.navAriaLabelText, tabIndex: -1, children: jsx("div", { class: "ui5-wiz-nav-list", role: "list", "aria-label": this.listAriaLabelText, "aria-describedby": "wiz-nav-descr", "aria-controls": `${this._id}-wiz-content`, children: this._stepsInHeader.map((step) => jsx(WizardTab_default, { titleText: step.titleText, subtitleText: step.subtitleText, icon: step.icon, number: String(step.number), disabled: step.disabled, selected: step.selected, hideSeparator: step.hideSeparator, activeSeparator: step.activeSeparator, branchingSeparator: step.branchingSeparator, _wizardTabAccInfo: step.accInfo, "data-ui5-content-ref-id": step.refStepId, "data-ui5-index": step.pos, onSelectionChangeRequested: this.onSelectionChangeRequested, onFocused: this.onStepInHeaderFocused, onClick: this._onGroupedTabClick, style: step.styles })) }) }), jsx("span", { id: "wiz-nav-descr", class: "ui5-hidden-text", "aria-hidden": "true", children: this.navAriaDescribedbyText }), jsx("div", { id: `${this._id}-wiz-content`, class: "ui5-wiz-content", onScroll: this.onScroll, children: this._steps.map((step) => jsx("div", { class: {
    "ui5-wiz-content-item": true,
    "ui5-wiz-content-item-stretch": step.stretch,
    "ui5-wiz-content-item-selected": step.selected
  }, hidden: step.disabled, part: "step-content", "aria-label": step.stepContentAriaLabel, role: "region", "data-ui5-content-item-ref-id": step._id, children: jsx("div", { class: "ui5-wiz-content-item-wrapper", children: jsx("slot", { name: step._individualSlot }) }) })) })] }), WizardPopoverTemplate.call(this)] });
}

// node_modules/@ui5/webcomponents-fiori/dist/generated/themes/Wizard.css.js
registerThemePropertiesLoader("@ui5/webcomponents-theming", "sap_horizon", async () => parameters_bundle_css_default);
registerThemePropertiesLoader("@ui5/webcomponents-fiori", "sap_horizon", async () => parameters_bundle_css_default3);
var Wizard_css_default = `.ui5-hidden-text{position:absolute;clip:rect(1px,1px,1px,1px);user-select:none;left:-1000px;top:-1000px;pointer-events:none;font-size:0}:host(:not([hidden])){display:block;height:100%;width:100%;overflow:auto;container-type:inline-size}@container (max-width: 599px){:host::part(navigator),:host::part(step-content){padding-left:1rem;padding-right:1rem}}@container (min-width: 600px) and (max-width: 1023px){:host::part(navigator),:host::part(step-content){padding-left:2rem;padding-right:2rem}}@container (min-width: 1024px) and (max-width: 1439px){:host::part(navigator),:host::part(step-content){padding-left:2rem;padding-right:2rem}}@container (min-width: 1440px){:host::part(navigator),:host::part(step-content){padding-left:3rem;padding-right:3rem}}.ui5-wiz-root{height:100%;width:100%;position:relative}.ui5-wiz-content{position:relative;overflow:auto;height:calc(100% - 4rem);box-sizing:border-box;background:var(--sapBackgroundColor)}.ui5-wiz-content-item{display:block;box-sizing:border-box;padding-top:1rem;padding-bottom:1rem}:host([content-layout="SingleStep"]) .ui5-wiz-content-item:not(.ui5-wiz-content-item-selected){display:none}.ui5-wiz-content-item-wrapper{display:block;padding:var(--_ui5-v2-8-0_wiz_content_item_wrapper_padding);background-color:var(--_ui5-v2-8-0_wiz_content_item_wrapper_bg);border-radius:var(--sapElement_BorderCornerRadius)}.ui5-wiz-content-item[hidden]{display:none}.ui5-wiz-content-item.ui5-wiz-content-item-stretch{min-height:100%}[ui5-wizard-tab][data-ui5-wizard-expanded-tab=true]+[ui5-wizard-tab][data-ui5-wizard-expanded-tab=false]{width:2rem;padding-left:.5rem}[ui5-wizard-tab][data-ui5-wizard-expanded-tab=false]{width:.25rem;padding:0}.ui5-wiz-nav-list{display:table;table-layout:fixed;position:relative;list-style:none;margin:0;box-sizing:border-box;width:100%;height:2rem;padding:0}[ui5-wizard-tab]{display:table-cell;position:relative}.ui5-wiz-nav{box-sizing:border-box;height:4rem;padding-top:1rem;padding-bottom:1rem;-webkit-user-select:none;-moz-user-select:none;user-select:none;background-color:var(--sapObjectHeader_Background);font-size:.875rem;box-shadow:var(--sapContent_HeaderShadow);outline:none;display:flex;align-items:center}[ui5-wizard-tab][data-ui5-wizard-expanded-tab=false]+[ui5-wizard-tab][data-ui5-wizard-expanded-tab=false]{width:.25rem}[ui5-wizard-tab][data-ui5-wizard-expanded-tab-prev=true],[ui5-wizard-tab][data-ui5-wizard-expanded-tab=false]+[ui5-wizard-tab][data-ui5-wizard-expanded-tab-prev=true]{width:2rem;padding-right:.75rem}
`;

// node_modules/@ui5/webcomponents-fiori/dist/generated/themes/WizardPopover.css.js
registerThemePropertiesLoader("@ui5/webcomponents-theming", "sap_horizon", async () => parameters_bundle_css_default);
registerThemePropertiesLoader("@ui5/webcomponents-fiori", "sap_horizon", async () => parameters_bundle_css_default3);
var WizardPopover_css_default = `.ui5-hidden-text{position:absolute;clip:rect(1px,1px,1px,1px);user-select:none;left:-1000px;top:-1000px;pointer-events:none;font-size:0}.ui5-wizard-responsive-popover{box-shadow:var(--sapContent_Shadow1)}.ui5-wizard-responsive-popover-list{list-style:none;margin:0;padding:0}.ui5-responsive-popover-footer{display:flex;justify-content:flex-end;padding:.25rem 0;width:100%}.ui5-wizard-popover .ui5-wizard-responsive-popover-list [ui5-button]{width:200px}.ui5-wizard-dialog .ui5-wizard-responsive-popover-list [ui5-button]{width:100%}
`;

// node_modules/@ui5/webcomponents-fiori/dist/Wizard.js
var __decorate142 = function(decorators, target, key, desc) {
  var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
  if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
  else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
  return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var Wizard_1;
var MIN_STEP_WIDTH_NO_TITLE = 64;
var MIN_STEP_WIDTH_WITH_TITLE = 200;
var EXPANDED_STEP = "data-ui5-wizard-expanded-tab";
var AFTER_EXPANDED_STEP = "data-ui5-wizard-expanded-tab-next";
var AFTER_CURRENT_STEP = "data-ui5-wizard-after-current-tab";
var BEFORE_EXPANDED_STEP = "data-ui5-wizard-expanded-tab-prev";
var STEP_SWITCH_THRESHOLDS = {
  MIN: 0.5,
  DEFAULT: 0.7,
  MAX: 1
};
var Wizard = Wizard_1 = class Wizard2 extends UI5Element_default {
  constructor() {
    super();
    this.contentLayout = "MultipleSteps";
    this.stepSwitchThreshold = STEP_SWITCH_THRESHOLDS.DEFAULT;
    this._groupedTabs = [];
    this.stepScrollOffsets = [];
    this.selectedStepIndex = 0;
    this.previouslySelectedStepIndex = 0;
    this.selectionRequestedByClick = false;
    this._prevWidth = 0;
    this._prevContentHeight = 0;
    this.selectionRequestedByScroll = false;
    this._itemNavigation = new ItemNavigation_default(this, {
      navigationMode: NavigationMode_default.Auto,
      getItemsCallback: () => this.enabledStepsInHeaderDOM
    });
    this._onStepResize = this.onStepResize.bind(this);
  }
  static get SCROLL_DEBOUNCE_RATE() {
    return 25;
  }
  onExitDOM() {
    this.detachStepsResizeObserver();
  }
  onBeforeRendering() {
    this.syncSelection();
  }
  onAfterRendering() {
    this.storeStepScrollOffsets();
    if (this.previouslySelectedStepIndex !== this.selectedStepIndex) {
      this.scrollToSelectedStep();
    }
    this.attachStepsResizeObserver();
    this.previouslySelectedStepIndex = this.selectedStepIndex;
  }
  /**
   * Normalizes the step selection as follows:
   * (1) If there is no selected step - the first step is going to be selected.
   * (2) If the selected steps are more than one - the last step is going to be selected.
   * (3) If the selected step is also disabled - log a warning.
   * @private
   */
  syncSelection() {
    if (this.stepsCount === 0) {
      return;
    }
    if (this.selectedStepsCount === 0) {
      this.selectFirstStep();
      console.warn("Selecting the first step: no selected step is defined.");
    }
    if (this.selectedStepsCount > 1) {
      this.selectLastSelectedStep();
      console.warn(`Selecting the last step defined as selected: multiple selected steps are defined.`);
    }
    if (this.selectedStep && this.selectedStep.disabled) {
      console.warn("The selected step is disabled: you need to enable it in order to interact with the step.");
    }
    this.selectedStepIndex = this.getSelectedStepIndex();
    if (this.selectedStep && this.stepsInHeaderDOM.length) {
      if (this._itemNavigation._getItems().includes(this.stepsInHeaderDOM[this.selectedStepIndex])) {
        this._itemNavigation.setCurrentItem(this.stepsInHeaderDOM[this.selectedStepIndex]);
      } else {
        this._itemNavigation.setCurrentItem(this.stepsInHeaderDOM.find((el) => el.selected));
      }
    }
  }
  /**
   * Selects the first step.
   * @private
   */
  selectFirstStep() {
    this.deselectAll();
    this.slottedSteps[0].selected = true;
    this.slottedSteps[0].disabled = false;
  }
  /**
   * Selects the last step from multiple selected ones.
   * @private
   */
  selectLastSelectedStep() {
    const lastSelectedStep = this.lastSelectedStep;
    if (lastSelectedStep) {
      this.deselectAll();
      lastSelectedStep.selected = true;
      lastSelectedStep.disabled = false;
    }
  }
  /**
   * Deselects all steps.
   * @private
   */
  deselectAll() {
    this.slottedSteps.forEach((step) => {
      step.selected = false;
    });
  }
  /**
   * Stores the scroll offsets of the steps,
   * e.g. the steps' starting point.
   *
   * **Note:** the disabled ones has negative offsets.
   * @private
   */
  storeStepScrollOffsets() {
    this.stepScrollOffsets = this.slottedSteps.map((step) => {
      const contentItem = this.getStepWrapperByRefId(step._id);
      return contentItem.offsetTop + contentItem.offsetHeight;
    });
  }
  /**
   * Handles user click on steps' tabs within the header.
   * **Note:** the handler is bound in the template.
   * @private
   */
  onSelectionChangeRequested(e) {
    this.selectionRequestedByClick = true;
    this.changeSelectionByStepAction(e.target);
  }
  /**
   * Handles user scrolling with debouncing.
   * **Note:** the handler is bound in the template.
   * @private
   */
  onScroll(e) {
    if (this.selectionRequestedByClick) {
      this.selectionRequestedByClick = false;
      return;
    }
    if (this.contentLayout !== "SingleStep") {
      debounce_default(this.changeSelectionByScroll.bind(this, e.target.scrollTop), Wizard_1.SCROLL_DEBOUNCE_RATE);
    }
  }
  /**
   * Handles when a step in the header is focused in order to update the `ItemNavigation`.
   * **Note:** the handler is bound in the template.
   * @private
   */
  onStepInHeaderFocused(e) {
    this._itemNavigation.setCurrentItem(e.target);
  }
  /**
   * Handles resize in order to:
   * (1) sync steps' scroll offset and selection
   * (2) adapt navition step header
   * @private
   */
  onStepResize() {
    this.width = this.getBoundingClientRect().width;
    this.contentHeight = this.getContentHeight();
    if (this._prevWidth !== this.width || this.contentHeight !== this._prevContentHeight) {
      this._closeRespPopover();
    }
    this._prevWidth = this.width;
    this._prevContentHeight = this.contentHeight;
  }
  attachStepsResizeObserver() {
    this.stepsDOM.forEach((stepDOM) => {
      ResizeHandler_default.deregister(stepDOM, this._onStepResize);
      ResizeHandler_default.register(stepDOM, this._onStepResize);
    });
  }
  detachStepsResizeObserver() {
    this.stepsDOM.forEach((stepDOM) => {
      ResizeHandler_default.deregister(stepDOM, this._onStepResize);
    });
  }
  /**
   * Updates the expanded attribute for each ui5-wizard-tab based on the ui5-wizard width
   * @private
   */
  _adjustHeaderOverflow() {
    let counter = 0;
    let isForward = true;
    const tabs = this.stepsInHeaderDOM;
    if (!tabs.length) {
      return;
    }
    const iWidth = this.progressNavigatorListDOM.getBoundingClientRect().width;
    const iCurrStep = this.getSelectedStepIndex();
    const iStepsToShow = this.steps.length ? Math.floor(iWidth / MIN_STEP_WIDTH_WITH_TITLE) : Math.floor(iWidth / MIN_STEP_WIDTH_NO_TITLE);
    [...tabs].forEach((step, index) => {
      step.setAttribute(EXPANDED_STEP, "false");
      step.setAttribute(BEFORE_EXPANDED_STEP, "false");
      step.setAttribute(AFTER_EXPANDED_STEP, "false");
      if (index > iCurrStep) {
        tabs[index].setAttribute(AFTER_CURRENT_STEP, "true");
      } else {
        tabs[index].removeAttribute(AFTER_CURRENT_STEP);
      }
    });
    if (tabs[iCurrStep]) {
      tabs[iCurrStep].setAttribute(EXPANDED_STEP, "true");
    }
    for (let i = 1; i < iStepsToShow; i++) {
      if (isForward) {
        counter += 1;
      }
      if (isForward && tabs[iCurrStep + counter]) {
        tabs[iCurrStep + counter].setAttribute(EXPANDED_STEP, "true");
        isForward = !isForward;
      } else if (!isForward && tabs[iCurrStep - counter]) {
        tabs[iCurrStep - counter].setAttribute(EXPANDED_STEP, "true");
        isForward = !isForward;
      } else if (tabs[iCurrStep + counter + 1]) {
        counter += 1;
        tabs[iCurrStep + counter].setAttribute(EXPANDED_STEP, "true");
        isForward = true;
      } else if (tabs[iCurrStep - counter]) {
        tabs[iCurrStep - counter].setAttribute(EXPANDED_STEP, "true");
        counter += 1;
        isForward = false;
      }
    }
    for (let i = 0; i < tabs.length; i++) {
      if (tabs[i].getAttribute(EXPANDED_STEP) === "true" && tabs[i - 1] && tabs[i - 1].getAttribute(EXPANDED_STEP) === "false") {
        tabs[i - 1].setAttribute(BEFORE_EXPANDED_STEP, "true");
      }
      if (tabs[i].getAttribute(EXPANDED_STEP) === "false" && tabs[i - 1] && tabs[i - 1].getAttribute(EXPANDED_STEP) === "true") {
        tabs[i].setAttribute(AFTER_EXPANDED_STEP, "true");
        break;
      }
    }
  }
  _isGroupAtStart(selectedStep) {
    const iStepNumber = this.stepsInHeaderDOM.indexOf(selectedStep);
    return selectedStep.getAttribute(EXPANDED_STEP) === "false" && selectedStep.getAttribute(BEFORE_EXPANDED_STEP) === "true" && iStepNumber > 0;
  }
  _isGroupAtEnd(selectedStep) {
    const iStepNumber = this.stepsInHeaderDOM.indexOf(selectedStep);
    return selectedStep.getAttribute(EXPANDED_STEP) === "false" && selectedStep.getAttribute(AFTER_EXPANDED_STEP) === "true" && iStepNumber + 1 < this.steps.length;
  }
  _showPopover(oDomTarget, isAtStart) {
    const tabs = Array.from(this.stepsInHeaderDOM);
    this._groupedTabs = [];
    const iFromStep = isAtStart ? 0 : this.stepsInHeaderDOM.indexOf(oDomTarget);
    const iToStep = isAtStart ? this.stepsInHeaderDOM.indexOf(oDomTarget) : tabs.length - 1;
    for (let i = iFromStep; i <= iToStep; i++) {
      this._groupedTabs.push(tabs[i]);
    }
    const responsivePopover = this._respPopover();
    responsivePopover.opener = oDomTarget;
    responsivePopover.open = true;
  }
  _onGroupedTabClick(e) {
    const eTarget = e.target;
    if (this._isGroupAtStart(eTarget)) {
      return this._showPopover(eTarget, true);
    }
    if (this._isGroupAtEnd(eTarget)) {
      return this._showPopover(eTarget, false);
    }
  }
  _onOverflowStepButtonClick(e) {
    const tabs = Array.from(this.stepsInHeaderDOM);
    const eTarget = e.target;
    const stepRefId = eTarget.getAttribute("data-ui5-header-tab-ref-id");
    const stepToSelect = this.slottedSteps[Number(stepRefId) - 1];
    const selectedStep = this.selectedStep;
    const newlySelectedIndex = this.slottedSteps.indexOf(stepToSelect);
    this.switchSelectionFromOldToNewStep(selectedStep, stepToSelect, newlySelectedIndex, false);
    this._closeRespPopover();
    tabs[newlySelectedIndex].focus();
  }
  _closeRespPopover() {
    const responsivePopover = this._respPopover();
    if (responsivePopover) {
      responsivePopover.open = false;
    }
  }
  _respPopover() {
    return this.shadowRoot.querySelector(`.ui5-wizard-responsive-popover`);
  }
  /**
   * Called upon `onScroll`.
   * Selects the closest step, based on the user scroll position.
   * @param scrollPos the current scroll position
   * @private
   */
  changeSelectionByScroll(scrollPos) {
    const newlySelectedIndex = this.getClosestStepIndexByScrollPos(scrollPos);
    const stepToSelect = this.slottedSteps[newlySelectedIndex];
    if (this.selectedStepIndex === newlySelectedIndex) {
      return;
    }
    if (!stepToSelect.disabled && newlySelectedIndex >= 0 && newlySelectedIndex <= this.stepsCount - 1) {
      this.switchSelectionFromOldToNewStep(this.selectedStep, stepToSelect, newlySelectedIndex, true);
      this.selectionRequestedByScroll = true;
    }
  }
  /**
   * Called upon `onSelectionChangeRequested`.
   * Selects the external step (ui5-wizard-step),
   * based on the clicked or activated via keyboard step in the header (ui5-wizard-tab).
   * @param stepInHeader the step equivalent in the header
   * @private
   */
  async changeSelectionByStepAction(stepInHeader) {
    const stepRefId = stepInHeader.getAttribute("data-ui5-content-ref-id");
    const selectedStep = this.selectedStep;
    const stepToSelect = this.getStepByRefId(stepRefId);
    const bExpanded = stepInHeader.getAttribute(EXPANDED_STEP) === "true";
    const newlySelectedIndex = this.slottedSteps.indexOf(stepToSelect);
    const firstElementChild = stepToSelect.firstElementChild;
    const firstFocusableElement = await getFirstFocusableElement(firstElementChild);
    if (firstFocusableElement) {
      firstFocusableElement.focus();
    }
    if (selectedStep === stepToSelect) {
      this.scrollToContentItem(this.selectedStepIndex);
      return;
    }
    if (bExpanded || !bExpanded && (newlySelectedIndex === 0 || newlySelectedIndex === this.steps.length - 1)) {
      this.switchSelectionFromOldToNewStep(selectedStep, stepToSelect, newlySelectedIndex, false);
    }
  }
  getContentHeight() {
    let contentHeight = 0;
    this.stepsDOM.forEach((step) => {
      contentHeight += step.getBoundingClientRect().height;
    });
    return contentHeight;
  }
  getStepAriaLabelText(step, ariaLabel) {
    return Wizard_1.i18nBundle.getText(WIZARD_STEP_ARIA_LABEL, ariaLabel);
  }
  get stepsDOM() {
    return Array.from(this.shadowRoot.querySelectorAll(".ui5-wiz-content-item"));
  }
  get progressNavigatorListDOM() {
    return this.shadowRoot.querySelector(".ui5-wiz-nav-list");
  }
  get _stepsInHeader() {
    return this.getStepsInfo();
  }
  get _steps() {
    const lastEnabledStepIndex = this.getLastEnabledStepIndex();
    const stepsInfo = this.getStepsInfo();
    return this.steps.map((step, idx) => {
      step.stretch = idx === lastEnabledStepIndex;
      step.stepContentAriaLabel = `${this.navStepDefaultHeading} ${stepsInfo[idx].number} ${stepsInfo[idx].titleText}`;
      return step;
    });
  }
  get stepsCount() {
    return this.slottedSteps.length;
  }
  get selectedStep() {
    if (this.selectedStepsCount) {
      return this.selectedSteps[0];
    }
    return null;
  }
  get lastSelectedStep() {
    if (this.selectedStepsCount) {
      return this.selectedSteps[this.selectedStepsCount - 1];
    }
    return null;
  }
  get selectedSteps() {
    return this.slottedSteps.filter((step) => step.selected);
  }
  get enabledSteps() {
    return this.slottedSteps.filter((step) => !step.disabled);
  }
  get selectedStepsCount() {
    return this.selectedSteps.length;
  }
  get slottedSteps() {
    return this.getSlottedNodes("steps");
  }
  get contentDOM() {
    return this.shadowRoot.querySelector(`.ui5-wiz-content`);
  }
  get stepsInHeaderDOM() {
    return Array.from(this.shadowRoot.querySelectorAll("[ui5-wizard-tab]"));
  }
  get enabledStepsInHeaderDOM() {
    return this.stepsInHeaderDOM.filter((step) => !step.disabled);
  }
  get navAriaRoleDescription() {
    return Wizard_1.i18nBundle.getText(WIZARD_NAV_ARIA_ROLE_DESCRIPTION);
  }
  get navAriaLabelText() {
    return Wizard_1.i18nBundle.getText(WIZARD_NAV_ARIA_LABEL);
  }
  get navAriaDescribedbyText() {
    return Wizard_1.i18nBundle.getText(WIZARD_LIST_ARIA_DESCRIBEDBY);
  }
  get listAriaLabelText() {
    return Wizard_1.i18nBundle.getText(WIZARD_LIST_ARIA_LABEL);
  }
  get actionSheetStepsText() {
    return Wizard_1.i18nBundle.getText(WIZARD_ACTIONSHEET_STEPS_ARIA_LABEL);
  }
  get navStepDefaultHeading() {
    return Wizard_1.i18nBundle.getText(WIZARD_NAV_STEP_DEFAULT_HEADING);
  }
  get optionalStepText() {
    return Wizard_1.i18nBundle.getText(WIZARD_OPTIONAL_STEP_ARIA_LABEL);
  }
  get activeStepText() {
    return Wizard_1.i18nBundle.getText(WIZARD_STEP_ACTIVE);
  }
  get inactiveStepText() {
    return Wizard_1.i18nBundle.getText(WIZARD_STEP_INACTIVE);
  }
  get ariaLabelText() {
    return Wizard_1.i18nBundle.getText(WIZARD_NAV_ARIA_ROLE_DESCRIPTION);
  }
  get effectiveStepSwitchThreshold() {
    return clamp_default(this.stepSwitchThreshold, STEP_SWITCH_THRESHOLDS.MIN, STEP_SWITCH_THRESHOLDS.MAX);
  }
  /**
   * Returns an array of data objects, based on the user defined steps
   * to later build the steps (tabs) within the header.
   * @private
   */
  getStepsInfo() {
    const lastEnabledStepIndex = this.getLastEnabledStepIndex();
    const stepsCount = this.stepsCount;
    const selectedStepIndex = this.getSelectedStepIndex();
    let inintialZIndex = this.steps.length + 10;
    let accInfo;
    this._adjustHeaderOverflow();
    return this.steps.map((step, idx) => {
      const pos = idx + 1;
      const hideSeparator = idx === stepsCount - 1 && !step.branching;
      const isOptional = step.subtitleText ? this.optionalStepText : "";
      const stepStateText = step.disabled ? this.inactiveStepText : this.activeStepText;
      const ariaLabel = (step.titleText ? `${pos} ${step.titleText} ${stepStateText} ${isOptional}` : `${this.navStepDefaultHeading} ${pos} ${stepStateText} ${isOptional}`).trim();
      const isAfterCurrent = idx > selectedStepIndex;
      accInfo = {
        "ariaSetsize": stepsCount,
        "ariaPosinset": pos,
        "ariaLabel": this.getStepAriaLabelText(step, ariaLabel)
      };
      const stepInfo = {
        icon: step.icon,
        titleText: step.titleText,
        subtitleText: step.subtitleText,
        number: pos,
        selected: step.selected,
        disabled: step.disabled,
        hideSeparator,
        activeSeparator: idx < lastEnabledStepIndex && !step.disabled,
        branchingSeparator: step.branching,
        pos,
        accInfo,
        refStepId: step._id,
        styles: {
          zIndex: isAfterCurrent ? --inintialZIndex : 1
        }
      };
      return stepInfo;
    });
  }
  /**
   * Returns the index of the selected step.
   * @private
   */
  getSelectedStepIndex() {
    if (this.selectedStep) {
      return this.slottedSteps.indexOf(this.selectedStep);
    }
    return 0;
  }
  /**
   * Returns the index of the last enabled step.
   * @private
   */
  getLastEnabledStepIndex() {
    let lastEnabledStepIndex = 0;
    this.slottedSteps.forEach((step, idx) => {
      if (!step.disabled) {
        lastEnabledStepIndex = idx;
      }
    });
    return lastEnabledStepIndex;
  }
  getStepByRefId(refId) {
    return this.slottedSteps.find((step) => step._id === refId);
  }
  getStepWrapperByRefId(refId) {
    return this.shadowRoot.querySelector(`[data-ui5-content-item-ref-id=${refId}]`);
  }
  getStepWrapperByIdx(idx) {
    return this.getStepWrapperByRefId(this.steps[idx]._id);
  }
  /**
   * Scrolls to the content of the selected step, used in `onAfterRendering`.
   * @private
   */
  scrollToSelectedStep() {
    if (!this.selectionRequestedByScroll) {
      this.scrollToContentItem(this.selectedStepIndex);
    }
    this.selectionRequestedByScroll = false;
  }
  /**
   * Scrolls to the content item within the `ui5-wizard` shadowDOM
   * by given step index.
   * @private
   * @param stepIndex the index of a step
   */
  scrollToContentItem(stepIndex) {
    this.contentDOM.scrollTop = this.getClosestScrollPosByStepIndex(stepIndex);
  }
  /**
   * Returns to closest scroll position for the given step index.
   * @private
   * @param stepIndex the index of a step
   */
  getClosestScrollPosByStepIndex(stepIndex) {
    if (stepIndex === 0) {
      return 0;
    }
    for (let closestStepIndex = stepIndex - 1; closestStepIndex >= 0; closestStepIndex--) {
      if (this.stepScrollOffsets[closestStepIndex] > 0) {
        return this.stepScrollOffsets[closestStepIndex];
      }
    }
    return 0;
  }
  /**
   * Returns the closest step index by given scroll position.
   * @private
   * @param scrollPos the scroll position
   */
  getClosestStepIndexByScrollPos(scrollPos) {
    for (let closestStepIndex = 0; closestStepIndex <= this.stepScrollOffsets.length - 1; closestStepIndex++) {
      const stepScrollOffset = this.stepScrollOffsets[closestStepIndex];
      const step = this.getStepWrapperByIdx(closestStepIndex);
      const switchStepBoundary = step.offsetTop + step.offsetHeight * this.effectiveStepSwitchThreshold;
      if (stepScrollOffset > 0 && scrollPos < stepScrollOffset) {
        if (scrollPos > switchStepBoundary) {
          return closestStepIndex + 1;
        }
        return closestStepIndex;
      }
    }
    return this.selectedStepIndex;
  }
  /**
   * Switches the selection from the old step to the newly selected step.
   * @param selectedStep the old step
   * @param stepToSelect the step to be selected
   * @param stepToSelectIndex the index of the newly selected step
   * @param withScroll the selection changed due to user scrolling
   * @private
   */
  switchSelectionFromOldToNewStep(selectedStep, stepToSelect, stepToSelectIndex, withScroll) {
    if (selectedStep && stepToSelect) {
      if (!stepToSelect.disabled) {
        selectedStep.selected = false;
        stepToSelect.selected = true;
      }
      this.fireDecoratorEvent("step-change", {
        step: stepToSelect,
        previousStep: selectedStep,
        withScroll
      });
      this.selectedStepIndex = stepToSelectIndex;
    }
  }
  /**
   * Sorter method for sorting an array in ascending order.
   * @private
   */
  sortAscending(a, b) {
    if (a < b) {
      return -1;
    }
    if (a > b) {
      return 1;
    }
    return 0;
  }
};
__decorate142([
  property_default()
], Wizard.prototype, "contentLayout", void 0);
__decorate142([
  property_default({ type: Number })
], Wizard.prototype, "width", void 0);
__decorate142([
  property_default({ type: Number })
], Wizard.prototype, "stepSwitchThreshold", void 0);
__decorate142([
  property_default({ type: Number })
], Wizard.prototype, "contentHeight", void 0);
__decorate142([
  property_default({ type: Array })
], Wizard.prototype, "_groupedTabs", void 0);
__decorate142([
  slot_default({
    "default": true,
    type: HTMLElement,
    "individualSlots": true,
    invalidateOnChildChange: true
  })
], Wizard.prototype, "steps", void 0);
__decorate142([
  i18n_default("@ui5/webcomponents-fiori")
], Wizard, "i18nBundle", void 0);
Wizard = Wizard_1 = __decorate142([
  customElement_default({
    tag: "ui5-wizard",
    languageAware: true,
    fastNavigation: true,
    renderer: JsxRenderer_default,
    styles: [
      Wizard_css_default,
      WizardPopover_css_default,
      getEffectiveScrollbarStyle_default()
    ],
    template: WizardTemplate
  }),
  event_strict_default("step-change", {
    bubbles: true
  })
], Wizard);
Wizard.define();

// node_modules/@ui5/webcomponents-react/dist/webComponents/Wizard/index.js
var Wizard3 = withWebComponent("ui5-wizard", ["contentLayout"], [], [], ["step-change"]);
Wizard3.displayName = "Wizard";

// node_modules/@ui5/webcomponents-react/dist/webComponents/WizardStep/index.js
var WizardStep3 = withWebComponent("ui5-wizard-step", ["icon", "subtitleText", "titleText"], ["branching", "disabled", "selected"], [], []);
WizardStep3.displayName = "WizardStep";

// node_modules/@ui5/webcomponents-react/dist/components/ActionSheet/ActionSheet.module.css.js
var styleData = `@layer ui5-webcomponents-react{._actionSheet_189eg_1::part(content){padding:.1875rem .375rem}._actionSheet_189eg_1 [ui5-button]{display:block;margin:var(--_ui5wcr-ButtonTopBottomPadding)}._actionSheet_189eg_1 [ui5-button]:not([data-cancel-btn])::part(button){justify-content:flex-start}._actionSheet_189eg_1::part(header){background:#0000;box-shadow:var(--_ui5wcr_ActionSheet_HeaderBoxShadow)}._actionSheetMobile_189eg_20::part(content){padding:0!important}._contentMobile_189eg_25{background-color:var(--sapGroup_ContentBackground);border-top-left-radius:var(--_ui5wcr_ActionSheet_TopBorderRadius);border-top-right-radius:var(--_ui5wcr_ActionSheet_TopBorderRadius);box-shadow:var(--_ui5wcr_ActionSheet_BoxShadow);box-sizing:border-box;max-height:82vh;overflow:auto;padding:.25rem .5rem}._contentMobile_189eg_25>*{margin:.25rem 0}}`;
var classNames = {
  "actionSheet": "_actionSheet_189eg_1",
  "actionSheetMobile": "_actionSheetMobile_189eg_20",
  "contentMobile": "_contentMobile_189eg_25"
};

// node_modules/@ui5/webcomponents-react/dist/components/ActionSheet/index.js
var import_jsx_runtime135 = __toESM(require_jsx_runtime(), 1);
if (isPhone()) {
  addCustomCSSWithScoping("ui5-responsive-popover", `
  :host([data-actionsheet]) [ui5-button] {
    display: none;
  }
  :host([data-actionsheet]) [ui5-dialog] {
    top: auto !important;
    bottom: 0;
    height: auto;
    border-radius: ${CustomThemingParameters.ActionSheetMobileHeaderBorderRadius};
    background-color: ${CustomThemingParameters.ActionSheetMobileHeaderBackground};
    box-shadow: ${CustomThemingParameters.ActionSheetMobileHeaderBoxShadow};
    box-sizing: border-box;
    min-height: unset;
  }
  :host([data-actionsheet]) [ui5-title] {
    color: ${CustomThemingParameters.ActionSheetMobileHeaderTextColor} !important;
    text-shadow: none;
    text-align: start !important;
  }
  `);
}
function ActionSheetButton(props) {
  const {
    index,
    totalLength,
    ...buttonProps
  } = props;
  const i18nBundle = useI18nBundle("@ui5/webcomponents-react");
  return (0, import_jsx_runtime135.jsx)(
    Button,
    {
      accessibleName: `${buttonProps.children} ${i18nBundle.getText(X_OF_Y, index + 1, totalLength)}`,
      ...buttonProps,
      design: ButtonDesign_default.Transparent,
      "data-action-btn-index": index
    }
  );
}
var ActionSheet = (0, import_react14.forwardRef)((props, ref) => {
  var _a;
  const {
    accessibilityAttributes,
    children,
    className,
    header: header3,
    headerText,
    hideCancelButton,
    onOpen,
    open: open2,
    ...rest
  } = props;
  useStylesheet(styleData, ActionSheet.displayName);
  const i18nBundle = useI18nBundle("@ui5/webcomponents-react");
  const actionBtnsRef = (0, import_react14.useRef)(null);
  const [focusedItem, setFocusedItem] = (0, import_react14.useReducer)((_, action) => {
    return parseInt(action.target.dataset.actionBtnIndex);
  }, 0);
  const childrenToRender = flattenFragments(children);
  const childrenArrayLength = childrenToRender.length;
  const childrenLength = isPhone() && !hideCancelButton ? childrenArrayLength + 1 : childrenArrayLength;
  const [internalOpen, setInternalOpen] = (0, import_react14.useState)(void 0);
  (0, import_react14.useEffect)(() => {
    const tagName = getUi5TagWithSuffix2("ui5-responsive-popover");
    void customElements.whenDefined(tagName).then(() => {
      setInternalOpen(open2);
    });
  }, [open2]);
  const handleCancelBtnClick = () => {
    setInternalOpen(false);
  };
  const renderActionSheetButton = (element, index, childrenArray) => {
    return (0, import_jsx_runtime135.jsx)(ActionSheetButton, {
      index,
      totalLength: childrenArray.length,
      tabIndex: focusedItem === index ? 0 : -1,
      ...element.props,
      onClick: (e) => {
        var _a2, _b;
        setInternalOpen(false);
        if (typeof ((_a2 = element.props) == null ? void 0 : _a2.onClick) === "function") {
          (_b = element.props) == null ? void 0 : _b.onClick(e);
        }
      },
      onFocus: (e) => {
        var _a2, _b;
        if (typeof ((_a2 = element.props) == null ? void 0 : _a2.onFocus) === "function") {
          (_b = element.props) == null ? void 0 : _b.onFocus(e);
        }
        setFocusedItem(e);
      }
    }, index);
  };
  const handleAfterOpen = (e) => {
    if (isPhone()) {
      actionBtnsRef.current.querySelector(`[data-action-btn-index="${focusedItem}"]`).focus();
    }
    if (typeof onOpen === "function") {
      onOpen(e);
    }
  };
  const handleKeyDown = (e) => {
    var _a2;
    const currentIndex = parseInt(e.target.dataset.actionBtnIndex);
    const isRtl = (_a2 = actionBtnsRef.current) == null ? void 0 : _a2.matches(":dir(rtl)");
    switch (e.key) {
      case "ArrowDown":
      case (isRtl ? "ArrowLeft" : "ArrowRight"):
        if (currentIndex + 1 < childrenLength) {
          e.preventDefault();
          actionBtnsRef.current.querySelector(`[data-action-btn-index="${currentIndex + 1}"]`).focus();
        }
        break;
      case "ArrowUp":
      case (isRtl ? "ArrowRight" : "ArrowLeft"):
        if (currentIndex > 0) {
          e.preventDefault();
          actionBtnsRef.current.querySelector(`[data-action-btn-index="${currentIndex - 1}"]`).focus();
        }
        break;
      case "PageUp":
        e.preventDefault();
        actionBtnsRef.current.querySelector(`[data-action-btn-index="${Math.max(currentIndex - 5, 0)}"]`).focus();
        break;
      case "PageDown":
        e.preventDefault();
        actionBtnsRef.current.querySelector(`[data-action-btn-index="${Math.min(currentIndex + 5, childrenLength - 1)}"]`).focus();
        break;
      case "Home":
        e.preventDefault();
        actionBtnsRef.current.querySelector(`[data-action-btn-index="0"]`).focus();
        break;
      case "End":
        e.preventDefault();
        actionBtnsRef.current.querySelector(`[data-action-btn-index="${childrenLength - 1}"]`).focus();
        break;
    }
  };
  const displayHeader = isPhone();
  return (0, import_jsx_runtime135.jsx)(ResponsivePopover, {
    open: internalOpen,
    headerText: displayHeader ? headerText : void 0,
    header: displayHeader ? header3 : void 0,
    accessibleName: i18nBundle.getText(AVAILABLE_ACTIONS),
    ...rest,
    onOpen: handleAfterOpen,
    ref,
    className: clsx(classNames.actionSheet, isPhone() && classNames.actionSheetMobile, className),
    "data-actionsheet": true,
    children: (0, import_jsx_runtime135.jsxs)("div", {
      className: isPhone() ? classNames.contentMobile : void 0,
      "data-component-name": "ActionSheetMobileContent",
      role: ((_a = accessibilityAttributes == null ? void 0 : accessibilityAttributes.actionSheetMobileContent) == null ? void 0 : _a.role) ?? "application",
      onKeyDown: handleKeyDown,
      ref: actionBtnsRef,
      children: [childrenToRender.map(renderActionSheetButton), isPhone() && !hideCancelButton && (0, import_jsx_runtime135.jsx)(Button, {
        design: ButtonDesign_default.Negative,
        onClick: handleCancelBtnClick,
        tabIndex: focusedItem === childrenLength - 1 ? 0 : -1,
        "data-action-btn-index": childrenLength - 1,
        "data-cancel-btn": true,
        onFocus: setFocusedItem,
        children: i18nBundle.getText(CANCEL)
      })]
    })
  });
});
ActionSheet.displayName = "ActionSheet";

// node_modules/@ui5/webcomponents-icons/dist/v4/down.js
var name86 = "down";
var pathData83 = "M0 32h512L256 480zm64 32l192 352L448 64H64z";
var ltr83 = false;
var accData50 = ICON_DOWN;
var collection85 = "SAP-icons-v4";
var packageName83 = "@ui5/webcomponents-icons";
registerIcon(name86, { pathData: pathData83, ltr: ltr83, accData: accData50, collection: collection85, packageName: packageName83 });

// node_modules/@ui5/webcomponents-icons/dist/v5/down.js
var name87 = "down";
var pathData84 = "M256 480q-15 0-22-13L4 70q-4-5-4-12 0-11 7.5-18.5T26 32h460q11 0 18.5 7.5T512 58q0 6-3 12L278 467q-6 13-22 13zM70 83l186 320L442 83H70z";
var ltr84 = false;
var accData51 = ICON_DOWN;
var collection86 = "SAP-icons-v5";
var packageName84 = "@ui5/webcomponents-icons";
registerIcon(name87, { pathData: pathData84, ltr: ltr84, accData: accData51, collection: collection86, packageName: packageName84 });

// node_modules/@ui5/webcomponents-icons/dist/down.js
var down_default = "down";

// node_modules/@ui5/webcomponents-icons/dist/v4/up.js
var name88 = "up";
var pathData85 = "M256 32l256 448H0zm0 64L64 448h384z";
var ltr85 = false;
var accData52 = ICON_UP;
var collection87 = "SAP-icons-v4";
var packageName85 = "@ui5/webcomponents-icons";
registerIcon(name88, { pathData: pathData85, ltr: ltr85, accData: accData52, collection: collection87, packageName: packageName85 });

// node_modules/@ui5/webcomponents-icons/dist/v5/up.js
var name89 = "up";
var pathData86 = "M256 32q16 0 22 13l231 396q3 6 3 13 0 11-7.5 18.5T486 480H26q-11 0-18.5-7.5T0 454q0-8 4-13L234 45q7-13 22-13zm186 397L256 109 70 429h372z";
var ltr86 = false;
var accData53 = ICON_UP;
var collection88 = "SAP-icons-v5";
var packageName86 = "@ui5/webcomponents-icons";
registerIcon(name89, { pathData: pathData86, ltr: ltr86, accData: accData53, collection: collection88, packageName: packageName86 });

// node_modules/@ui5/webcomponents-icons/dist/up.js
var up_default = "up";

// node_modules/@ui5/webcomponents-react/dist/components/AnalyticalCardHeader/index.js
var import_react15 = __toESM(require_react(), 1);

// node_modules/@ui5/webcomponents-react/dist/components/AnalyticalCardHeader/AnalyticalCardHeader.module.css.js
var styleData2 = `@layer ui5-webcomponents-react{._cardHeader_164dx_1{background-color:var(--sapTile_Background);padding:1rem;position:relative}._cardHeader_164dx_1:focus:before{border:var(--_ui5wcr_card_header_focus_border);border-radius:var(--_ui5wcr_card_header_focus_radius) var(--_ui5wcr_card_header_focus_radius) var(--_ui5wcr_card_header_focus_bottom_radius) var(--_ui5wcr_card_header_focus_bottom_radius);content:"";inset:var(--_ui5wcr_card_header_focus_offset);outline:none;pointer-events:none;position:absolute}._cardHeader_164dx_1:focus-visible{outline:none}._cardHeaderClickable_164dx_22{cursor:pointer}._headerTitles_164dx_26{display:flex;flex:1 1 auto;flex-direction:column;justify-content:center;min-width:0;width:100%}._headerFirstLine_164dx_35{display:flex;justify-content:space-between;width:100%}._headerSecondLine_164dx_41{align-items:flex-end;color:var(--sapTile_TextColor);display:flex;flex-grow:1;font-family:var(--sapFontFamily);font-size:var(--sapFontSize);font-weight:400;min-height:1rem;position:relative;white-space:normal;word-wrap:break-word;margin:.5rem 0 0;overflow:hidden;text-align:start;text-overflow:ellipsis;width:100%;-webkit-line-clamp:2;-webkit-box-orient:vertical}._headerText_164dx_62{color:var(--sapTile_TitleTextColor);font-family:var(--sapFontHeaderFamily);font-size:var(--sapFontHeader6Size);font-weight:var(--sapFontHeaderWeight);overflow:hidden;-webkit-line-clamp:3;-webkit-box-orient:vertical;white-space:normal;word-wrap:break-word;text-align:start;text-overflow:ellipsis}._status_164dx_76{color:var(--sapTile_TextColor);font-size:var(--sapFontSmallSize);line-height:normal;margin-block-start:.125rem;margin-inline-start:1rem;text-align:end}._unitOfMeasurement_164dx_85{border-inline-start:1px solid var(--sapTile_TextColor);margin-inline-start:.25rem;padding-inline-start:.25rem}._kpiContent_164dx_91{align-items:flex-start;display:flex;margin-block-start:.25rem}._mainIndicator_164dx_97{color:var(--sapNeutralTextColor);display:inline-flex;font-family:var(--sapFontFamily);font-size:2.25rem;font-weight:400;justify-content:flex-start;position:relative;text-align:end;text-overflow:ellipsis;white-space:nowrap}._value_164dx_110{font-family:var(--sapFontLightFamily);height:2.875rem;padding-block-start:.125rem}._indicatorAndUnit_164dx_116{display:grid;height:2.125rem;padding-block:.5rem .375rem;padding-inline-start:.375rem;text-align:center;text-overflow:ellipsis}._indicator_164dx_116{color:currentColor;grid-column:1;grid-row:1;height:var(--sapFontSmallSize);width:var(--sapFontSmallSize)}._unit_164dx_85{font-family:var(--sapFontFamily);font-size:var(--sapFontSmallSize);grid-column:1;grid-row:1;margin-top:.9375rem}._indicatorGap_164dx_141{flex:1 0 1rem;max-width:3rem}._sideIndicators_164dx_146{display:flex;min-width:0;padding:.5rem 0}._sideIndicators_164dx_146>*{margin-inline-end:1rem}._sideIndicators_164dx_146:last-child{margin-inline-end:0}._description_164dx_160{color:var(--sapTile_TextColor);display:-webkit-box;font-family:var(--sapFontFamily);font-size:var(--sapFontSmallSize);font-weight:400;line-height:14px;margin-block-start:.25rem;max-height:14px;overflow:hidden;text-align:start;text-overflow:ellipsis;white-space:normal;width:100%;-webkit-line-clamp:1;-webkit-box-orient:vertical}._good_164dx_178{color:var(--sapPositiveTextColor)}._error_164dx_182{color:var(--sapNegativeTextColor)}._critical_164dx_186{color:var(--sapCriticalTextColor)}._neutral_164dx_190{color:var(--sapNeutralTextColor)}}`;
var classNames2 = {
  "cardHeader": "_cardHeader_164dx_1",
  "cardHeaderClickable": "_cardHeaderClickable_164dx_22",
  "headerTitles": "_headerTitles_164dx_26",
  "headerFirstLine": "_headerFirstLine_164dx_35",
  "headerSecondLine": "_headerSecondLine_164dx_41",
  "headerText": "_headerText_164dx_62",
  "status": "_status_164dx_76",
  "unitOfMeasurement": "_unitOfMeasurement_164dx_85",
  "kpiContent": "_kpiContent_164dx_91",
  "mainIndicator": "_mainIndicator_164dx_97",
  "value": "_value_164dx_110",
  "indicatorAndUnit": "_indicatorAndUnit_164dx_116",
  "indicator": "_indicator_164dx_116",
  "unit": "_unit_164dx_85",
  "indicatorGap": "_indicatorGap_164dx_141",
  "sideIndicators": "_sideIndicators_164dx_146",
  "description": "_description_164dx_160",
  "good": "_good_164dx_178",
  "error": "_error_164dx_182",
  "critical": "_critical_164dx_186",
  "neutral": "_neutral_164dx_190"
};

// node_modules/@ui5/webcomponents-react/dist/components/AnalyticalCardHeader/index.js
var import_jsx_runtime136 = __toESM(require_jsx_runtime(), 1);
var semanticColorMap = /* @__PURE__ */ new Map([[ValueColor.Neutral, SEMANTIC_COLOR_NEUTRAL], [ValueColor.Good, SEMANTIC_COLOR_GOOD], [ValueColor.Critical, SEMANTIC_COLOR_CRITICAL], [ValueColor.Error, SEMANTIC_COLOR_ERROR]]);
var deviationMap = /* @__PURE__ */ new Map([[DeviationIndicator.Up, NUMERICCONTENT_DEVIATION_UP], [DeviationIndicator.Down, NUMERICCONTENT_DEVIATION_DOWN]]);
var AnalyticalCardHeader = (0, import_react15.forwardRef)((props, ref) => {
  const {
    titleText,
    subtitleText,
    value,
    scale,
    state = ValueColor.None,
    onClick,
    className,
    description,
    status,
    unitOfMeasurement,
    trend = DeviationIndicator.None,
    style,
    children,
    id,
    ...rest
  } = props;
  useStylesheet(styleData2, AnalyticalCardHeader.displayName);
  const headerClasses = clsx(classNames2.cardHeader, onClick && classNames2.cardHeaderClickable, className);
  const valueAndUnitClasses = clsx(classNames2.mainIndicator, state === ValueColor.Good && classNames2.good, state === ValueColor.Error && classNames2.error, state === ValueColor.Critical && classNames2.critical, state === ValueColor.Neutral && classNames2.neutral);
  const i18nBundle = useI18nBundle("@ui5/webcomponents-react");
  const uniqueHeaderId = (0, import_react15.useId)();
  const headerId = id ?? uniqueHeaderId;
  const sideIndicators = flattenFragments(children);
  const sideIndicatorIds = sideIndicators.map((child, idx) => {
    var _a;
    return ((_a = child.props) == null ? void 0 : _a.id) ?? `${headerId}-indicator${idx}`;
  });
  let kpiAriaLabel = `${value ?? ""}${scale ?? ""}
`;
  if (trend && trend !== DeviationIndicator.None) {
    kpiAriaLabel += i18nBundle.getText(deviationMap.get(trend) ?? "");
    kpiAriaLabel += "\n";
  }
  if (state && state !== ValueColor.None) {
    kpiAriaLabel += i18nBundle.getText(semanticColorMap.get(state) ?? "");
  }
  let cardLabelledBy = `${headerId}-title`;
  if (subtitleText) {
    cardLabelledBy += ` ${headerId}-subtitle`;
  }
  if (unitOfMeasurement) {
    cardLabelledBy += ` ${headerId}-unitOfMeasurement`;
  }
  cardLabelledBy += ` ${headerId}-mainIndicator`;
  for (const sideIndicatorId of sideIndicatorIds) {
    cardLabelledBy += ` ${sideIndicatorId}`;
  }
  if (description) {
    cardLabelledBy += ` ${headerId}-description`;
  }
  return (0, import_jsx_runtime136.jsx)("div", {
    ref,
    className: headerClasses,
    style,
    id: headerId,
    "data-sap-ui-fastnavgroup": "true",
    tabIndex: 0,
    role: "heading",
    "aria-roledescription": i18nBundle.getText(ARIA_DESC_CARD_HEADER),
    "aria-labelledby": cardLabelledBy,
    ...rest,
    onClick,
    slot: "header",
    children: (0, import_jsx_runtime136.jsxs)("div", {
      children: [(0, import_jsx_runtime136.jsxs)("div", {
        className: classNames2.headerTitles,
        children: [(0, import_jsx_runtime136.jsxs)("div", {
          className: classNames2.headerFirstLine,
          children: [(0, import_jsx_runtime136.jsx)("span", {
            role: "heading",
            "aria-level": 3,
            className: classNames2.headerText,
            id: `${headerId}-title`,
            children: titleText
          }), status && (0, import_jsx_runtime136.jsx)("span", {
            className: classNames2.status,
            children: status
          })]
        }), (subtitleText || unitOfMeasurement) && (0, import_jsx_runtime136.jsxs)("div", {
          className: classNames2.headerSecondLine,
          children: [(0, import_jsx_runtime136.jsx)("span", {
            id: `${headerId}-subtitle`,
            children: subtitleText
          }), unitOfMeasurement && (0, import_jsx_runtime136.jsx)("span", {
            id: `${headerId}-unitOfMeasurement`,
            className: classNames2.unitOfMeasurement,
            children: unitOfMeasurement
          })]
        })]
      }), (0, import_jsx_runtime136.jsxs)("div", {
        className: classNames2.kpiContent,
        children: [(0, import_jsx_runtime136.jsxs)("div", {
          className: valueAndUnitClasses,
          id: `${headerId}-mainIndicator`,
          "aria-label": kpiAriaLabel,
          role: "img",
          children: [(0, import_jsx_runtime136.jsx)("span", {
            className: classNames2.value,
            children: value
          }), (0, import_jsx_runtime136.jsxs)("div", {
            className: classNames2.indicatorAndUnit,
            children: [trend !== DeviationIndicator.None && (0, import_jsx_runtime136.jsx)(Icon, {
              className: clsx(classNames2.indicator),
              name: trend === DeviationIndicator.Up ? up_default : down_default
            }), (0, import_jsx_runtime136.jsx)("div", {
              className: classNames2.unit,
              children: scale
            })]
          })]
        }), (0, import_jsx_runtime136.jsx)("div", {
          className: classNames2.indicatorGap
        }), (0, import_jsx_runtime136.jsx)("div", {
          className: classNames2.sideIndicators,
          children: sideIndicators.map((sideIndicator, index) => {
            return (0, import_react15.cloneElement)(sideIndicator, {
              id: sideIndicator.props.id ?? `${headerId}-indicator${index}`
            });
          })
        })]
      }), description && (0, import_jsx_runtime136.jsx)("span", {
        id: `${headerId}-description`,
        className: classNames2.description,
        children: description
      })]
    })
  });
});
AnalyticalCardHeader.displayName = "AnalyticalCardHeader";

// node_modules/@tanstack/react-virtual/dist/esm/index.js
var React = __toESM(require_react());
var import_react_dom = __toESM(require_react_dom());

// node_modules/@tanstack/virtual-core/dist/esm/utils.js
function memo(getDeps, fn, opts) {
  let deps = opts.initialDeps ?? [];
  let result;
  function memoizedFunction() {
    var _a, _b, _c, _d;
    let depTime;
    if (opts.key && ((_a = opts.debug) == null ? void 0 : _a.call(opts))) depTime = Date.now();
    const newDeps = getDeps();
    const depsChanged = newDeps.length !== deps.length || newDeps.some((dep, index) => deps[index] !== dep);
    if (!depsChanged) {
      return result;
    }
    deps = newDeps;
    let resultTime;
    if (opts.key && ((_b = opts.debug) == null ? void 0 : _b.call(opts))) resultTime = Date.now();
    result = fn(...newDeps);
    if (opts.key && ((_c = opts.debug) == null ? void 0 : _c.call(opts))) {
      const depEndTime = Math.round((Date.now() - depTime) * 100) / 100;
      const resultEndTime = Math.round((Date.now() - resultTime) * 100) / 100;
      const resultFpsPercentage = resultEndTime / 16;
      const pad = (str, num) => {
        str = String(str);
        while (str.length < num) {
          str = " " + str;
        }
        return str;
      };
      console.info(
        `%c⏱ ${pad(resultEndTime, 5)} /${pad(depEndTime, 5)} ms`,
        `
            font-size: .6rem;
            font-weight: bold;
            color: hsl(${Math.max(
          0,
          Math.min(120 - 120 * resultFpsPercentage, 120)
        )}deg 100% 31%);`,
        opts == null ? void 0 : opts.key
      );
    }
    (_d = opts == null ? void 0 : opts.onChange) == null ? void 0 : _d.call(opts, result);
    return result;
  }
  memoizedFunction.updateDeps = (newDeps) => {
    deps = newDeps;
  };
  return memoizedFunction;
}
function notUndefined(value, msg) {
  if (value === void 0) {
    throw new Error(`Unexpected undefined${msg ? `: ${msg}` : ""}`);
  } else {
    return value;
  }
}
var approxEqual = (a, b) => Math.abs(a - b) < 1;
var debounce2 = (targetWindow, fn, ms) => {
  let timeoutId;
  return function(...args) {
    targetWindow.clearTimeout(timeoutId);
    timeoutId = targetWindow.setTimeout(() => fn.apply(this, args), ms);
  };
};

// node_modules/@tanstack/virtual-core/dist/esm/index.js
var defaultKeyExtractor = (index) => index;
var defaultRangeExtractor = (range) => {
  const start = Math.max(range.startIndex - range.overscan, 0);
  const end = Math.min(range.endIndex + range.overscan, range.count - 1);
  const arr = [];
  for (let i = start; i <= end; i++) {
    arr.push(i);
  }
  return arr;
};
var observeElementRect = (instance, cb) => {
  const element = instance.scrollElement;
  if (!element) {
    return;
  }
  const targetWindow = instance.targetWindow;
  if (!targetWindow) {
    return;
  }
  const handler = (rect) => {
    const { width, height } = rect;
    cb({ width: Math.round(width), height: Math.round(height) });
  };
  handler(element.getBoundingClientRect());
  if (!targetWindow.ResizeObserver) {
    return () => {
    };
  }
  const observer = new targetWindow.ResizeObserver((entries) => {
    const run = () => {
      const entry = entries[0];
      if (entry == null ? void 0 : entry.borderBoxSize) {
        const box = entry.borderBoxSize[0];
        if (box) {
          handler({ width: box.inlineSize, height: box.blockSize });
          return;
        }
      }
      handler(element.getBoundingClientRect());
    };
    instance.options.useAnimationFrameWithResizeObserver ? requestAnimationFrame(run) : run();
  });
  observer.observe(element, { box: "border-box" });
  return () => {
    observer.unobserve(element);
  };
};
var addEventListenerOptions = {
  passive: true
};
var supportsScrollend = typeof window == "undefined" ? true : "onscrollend" in window;
var observeElementOffset = (instance, cb) => {
  const element = instance.scrollElement;
  if (!element) {
    return;
  }
  const targetWindow = instance.targetWindow;
  if (!targetWindow) {
    return;
  }
  let offset = 0;
  const fallback = instance.options.useScrollendEvent && supportsScrollend ? () => void 0 : debounce2(
    targetWindow,
    () => {
      cb(offset, false);
    },
    instance.options.isScrollingResetDelay
  );
  const createHandler = (isScrolling) => () => {
    const { horizontal, isRtl } = instance.options;
    offset = horizontal ? element["scrollLeft"] * (isRtl && -1 || 1) : element["scrollTop"];
    fallback();
    cb(offset, isScrolling);
  };
  const handler = createHandler(true);
  const endHandler = createHandler(false);
  endHandler();
  element.addEventListener("scroll", handler, addEventListenerOptions);
  const registerScrollendEvent = instance.options.useScrollendEvent && supportsScrollend;
  if (registerScrollendEvent) {
    element.addEventListener("scrollend", endHandler, addEventListenerOptions);
  }
  return () => {
    element.removeEventListener("scroll", handler);
    if (registerScrollendEvent) {
      element.removeEventListener("scrollend", endHandler);
    }
  };
};
var measureElement = (element, entry, instance) => {
  if (entry == null ? void 0 : entry.borderBoxSize) {
    const box = entry.borderBoxSize[0];
    if (box) {
      const size = Math.round(
        box[instance.options.horizontal ? "inlineSize" : "blockSize"]
      );
      return size;
    }
  }
  return Math.round(
    element.getBoundingClientRect()[instance.options.horizontal ? "width" : "height"]
  );
};
var elementScroll = (offset, {
  adjustments = 0,
  behavior
}, instance) => {
  var _a, _b;
  const toOffset = offset + adjustments;
  (_b = (_a = instance.scrollElement) == null ? void 0 : _a.scrollTo) == null ? void 0 : _b.call(_a, {
    [instance.options.horizontal ? "left" : "top"]: toOffset,
    behavior
  });
};
var Virtualizer = class {
  constructor(opts) {
    this.unsubs = [];
    this.scrollElement = null;
    this.targetWindow = null;
    this.isScrolling = false;
    this.scrollToIndexTimeoutId = null;
    this.measurementsCache = [];
    this.itemSizeCache = /* @__PURE__ */ new Map();
    this.pendingMeasuredCacheIndexes = [];
    this.scrollRect = null;
    this.scrollOffset = null;
    this.scrollDirection = null;
    this.scrollAdjustments = 0;
    this.elementsCache = /* @__PURE__ */ new Map();
    this.observer = /* @__PURE__ */ (() => {
      let _ro = null;
      const get = () => {
        if (_ro) {
          return _ro;
        }
        if (!this.targetWindow || !this.targetWindow.ResizeObserver) {
          return null;
        }
        return _ro = new this.targetWindow.ResizeObserver((entries) => {
          entries.forEach((entry) => {
            const run = () => {
              this._measureElement(entry.target, entry);
            };
            this.options.useAnimationFrameWithResizeObserver ? requestAnimationFrame(run) : run();
          });
        });
      };
      return {
        disconnect: () => {
          var _a;
          (_a = get()) == null ? void 0 : _a.disconnect();
          _ro = null;
        },
        observe: (target) => {
          var _a;
          return (_a = get()) == null ? void 0 : _a.observe(target, { box: "border-box" });
        },
        unobserve: (target) => {
          var _a;
          return (_a = get()) == null ? void 0 : _a.unobserve(target);
        }
      };
    })();
    this.range = null;
    this.setOptions = (opts2) => {
      Object.entries(opts2).forEach(([key, value]) => {
        if (typeof value === "undefined") delete opts2[key];
      });
      this.options = {
        debug: false,
        initialOffset: 0,
        overscan: 1,
        paddingStart: 0,
        paddingEnd: 0,
        scrollPaddingStart: 0,
        scrollPaddingEnd: 0,
        horizontal: false,
        getItemKey: defaultKeyExtractor,
        rangeExtractor: defaultRangeExtractor,
        onChange: () => {
        },
        measureElement,
        initialRect: { width: 0, height: 0 },
        scrollMargin: 0,
        gap: 0,
        indexAttribute: "data-index",
        initialMeasurementsCache: [],
        lanes: 1,
        isScrollingResetDelay: 150,
        enabled: true,
        isRtl: false,
        useScrollendEvent: false,
        useAnimationFrameWithResizeObserver: false,
        ...opts2
      };
    };
    this.notify = (sync) => {
      var _a, _b;
      (_b = (_a = this.options).onChange) == null ? void 0 : _b.call(_a, this, sync);
    };
    this.maybeNotify = memo(
      () => {
        this.calculateRange();
        return [
          this.isScrolling,
          this.range ? this.range.startIndex : null,
          this.range ? this.range.endIndex : null
        ];
      },
      (isScrolling) => {
        this.notify(isScrolling);
      },
      {
        key: "maybeNotify",
        debug: () => this.options.debug,
        initialDeps: [
          this.isScrolling,
          this.range ? this.range.startIndex : null,
          this.range ? this.range.endIndex : null
        ]
      }
    );
    this.cleanup = () => {
      this.unsubs.filter(Boolean).forEach((d) => d());
      this.unsubs = [];
      this.observer.disconnect();
      this.scrollElement = null;
      this.targetWindow = null;
    };
    this._didMount = () => {
      return () => {
        this.cleanup();
      };
    };
    this._willUpdate = () => {
      var _a;
      const scrollElement = this.options.enabled ? this.options.getScrollElement() : null;
      if (this.scrollElement !== scrollElement) {
        this.cleanup();
        if (!scrollElement) {
          this.maybeNotify();
          return;
        }
        this.scrollElement = scrollElement;
        if (this.scrollElement && "ownerDocument" in this.scrollElement) {
          this.targetWindow = this.scrollElement.ownerDocument.defaultView;
        } else {
          this.targetWindow = ((_a = this.scrollElement) == null ? void 0 : _a.window) ?? null;
        }
        this.elementsCache.forEach((cached) => {
          this.observer.observe(cached);
        });
        this._scrollToOffset(this.getScrollOffset(), {
          adjustments: void 0,
          behavior: void 0
        });
        this.unsubs.push(
          this.options.observeElementRect(this, (rect) => {
            this.scrollRect = rect;
            this.maybeNotify();
          })
        );
        this.unsubs.push(
          this.options.observeElementOffset(this, (offset, isScrolling) => {
            this.scrollAdjustments = 0;
            this.scrollDirection = isScrolling ? this.getScrollOffset() < offset ? "forward" : "backward" : null;
            this.scrollOffset = offset;
            this.isScrolling = isScrolling;
            this.maybeNotify();
          })
        );
      }
    };
    this.getSize = () => {
      if (!this.options.enabled) {
        this.scrollRect = null;
        return 0;
      }
      this.scrollRect = this.scrollRect ?? this.options.initialRect;
      return this.scrollRect[this.options.horizontal ? "width" : "height"];
    };
    this.getScrollOffset = () => {
      if (!this.options.enabled) {
        this.scrollOffset = null;
        return 0;
      }
      this.scrollOffset = this.scrollOffset ?? (typeof this.options.initialOffset === "function" ? this.options.initialOffset() : this.options.initialOffset);
      return this.scrollOffset;
    };
    this.getFurthestMeasurement = (measurements, index) => {
      const furthestMeasurementsFound = /* @__PURE__ */ new Map();
      const furthestMeasurements = /* @__PURE__ */ new Map();
      for (let m = index - 1; m >= 0; m--) {
        const measurement = measurements[m];
        if (furthestMeasurementsFound.has(measurement.lane)) {
          continue;
        }
        const previousFurthestMeasurement = furthestMeasurements.get(
          measurement.lane
        );
        if (previousFurthestMeasurement == null || measurement.end > previousFurthestMeasurement.end) {
          furthestMeasurements.set(measurement.lane, measurement);
        } else if (measurement.end < previousFurthestMeasurement.end) {
          furthestMeasurementsFound.set(measurement.lane, true);
        }
        if (furthestMeasurementsFound.size === this.options.lanes) {
          break;
        }
      }
      return furthestMeasurements.size === this.options.lanes ? Array.from(furthestMeasurements.values()).sort((a, b) => {
        if (a.end === b.end) {
          return a.index - b.index;
        }
        return a.end - b.end;
      })[0] : void 0;
    };
    this.getMeasurementOptions = memo(
      () => [
        this.options.count,
        this.options.paddingStart,
        this.options.scrollMargin,
        this.options.getItemKey,
        this.options.enabled
      ],
      (count, paddingStart, scrollMargin, getItemKey, enabled) => {
        this.pendingMeasuredCacheIndexes = [];
        return {
          count,
          paddingStart,
          scrollMargin,
          getItemKey,
          enabled
        };
      },
      {
        key: false
      }
    );
    this.getMeasurements = memo(
      () => [this.getMeasurementOptions(), this.itemSizeCache],
      ({ count, paddingStart, scrollMargin, getItemKey, enabled }, itemSizeCache) => {
        if (!enabled) {
          this.measurementsCache = [];
          this.itemSizeCache.clear();
          return [];
        }
        if (this.measurementsCache.length === 0) {
          this.measurementsCache = this.options.initialMeasurementsCache;
          this.measurementsCache.forEach((item2) => {
            this.itemSizeCache.set(item2.key, item2.size);
          });
        }
        const min = this.pendingMeasuredCacheIndexes.length > 0 ? Math.min(...this.pendingMeasuredCacheIndexes) : 0;
        this.pendingMeasuredCacheIndexes = [];
        const measurements = this.measurementsCache.slice(0, min);
        for (let i = min; i < count; i++) {
          const key = getItemKey(i);
          const furthestMeasurement = this.options.lanes === 1 ? measurements[i - 1] : this.getFurthestMeasurement(measurements, i);
          const start = furthestMeasurement ? furthestMeasurement.end + this.options.gap : paddingStart + scrollMargin;
          const measuredSize = itemSizeCache.get(key);
          const size = typeof measuredSize === "number" ? measuredSize : this.options.estimateSize(i);
          const end = start + size;
          const lane = furthestMeasurement ? furthestMeasurement.lane : i % this.options.lanes;
          measurements[i] = {
            index: i,
            start,
            size,
            end,
            key,
            lane
          };
        }
        this.measurementsCache = measurements;
        return measurements;
      },
      {
        key: "getMeasurements",
        debug: () => this.options.debug
      }
    );
    this.calculateRange = memo(
      () => [
        this.getMeasurements(),
        this.getSize(),
        this.getScrollOffset(),
        this.options.lanes
      ],
      (measurements, outerSize, scrollOffset, lanes) => {
        return this.range = measurements.length > 0 && outerSize > 0 ? calculateRange({
          measurements,
          outerSize,
          scrollOffset,
          lanes
        }) : null;
      },
      {
        key: "calculateRange",
        debug: () => this.options.debug
      }
    );
    this.getVirtualIndexes = memo(
      () => {
        let startIndex = null;
        let endIndex = null;
        const range = this.calculateRange();
        if (range) {
          startIndex = range.startIndex;
          endIndex = range.endIndex;
        }
        this.maybeNotify.updateDeps([this.isScrolling, startIndex, endIndex]);
        return [
          this.options.rangeExtractor,
          this.options.overscan,
          this.options.count,
          startIndex,
          endIndex
        ];
      },
      (rangeExtractor, overscan, count, startIndex, endIndex) => {
        return startIndex === null || endIndex === null ? [] : rangeExtractor({
          startIndex,
          endIndex,
          overscan,
          count
        });
      },
      {
        key: "getVirtualIndexes",
        debug: () => this.options.debug
      }
    );
    this.indexFromElement = (node) => {
      const attributeName = this.options.indexAttribute;
      const indexStr = node.getAttribute(attributeName);
      if (!indexStr) {
        console.warn(
          `Missing attribute name '${attributeName}={index}' on measured element.`
        );
        return -1;
      }
      return parseInt(indexStr, 10);
    };
    this._measureElement = (node, entry) => {
      const index = this.indexFromElement(node);
      const item2 = this.measurementsCache[index];
      if (!item2) {
        return;
      }
      const key = item2.key;
      const prevNode = this.elementsCache.get(key);
      if (prevNode !== node) {
        if (prevNode) {
          this.observer.unobserve(prevNode);
        }
        this.observer.observe(node);
        this.elementsCache.set(key, node);
      }
      if (node.isConnected) {
        this.resizeItem(index, this.options.measureElement(node, entry, this));
      }
    };
    this.resizeItem = (index, size) => {
      const item2 = this.measurementsCache[index];
      if (!item2) {
        return;
      }
      const itemSize = this.itemSizeCache.get(item2.key) ?? item2.size;
      const delta = size - itemSize;
      if (delta !== 0) {
        if (this.shouldAdjustScrollPositionOnItemSizeChange !== void 0 ? this.shouldAdjustScrollPositionOnItemSizeChange(item2, delta, this) : item2.start < this.getScrollOffset() + this.scrollAdjustments) {
          if (this.options.debug) {
            console.info("correction", delta);
          }
          this._scrollToOffset(this.getScrollOffset(), {
            adjustments: this.scrollAdjustments += delta,
            behavior: void 0
          });
        }
        this.pendingMeasuredCacheIndexes.push(item2.index);
        this.itemSizeCache = new Map(this.itemSizeCache.set(item2.key, size));
        this.notify(false);
      }
    };
    this.measureElement = (node) => {
      if (!node) {
        this.elementsCache.forEach((cached, key) => {
          if (!cached.isConnected) {
            this.observer.unobserve(cached);
            this.elementsCache.delete(key);
          }
        });
        return;
      }
      this._measureElement(node, void 0);
    };
    this.getVirtualItems = memo(
      () => [this.getVirtualIndexes(), this.getMeasurements()],
      (indexes, measurements) => {
        const virtualItems = [];
        for (let k = 0, len = indexes.length; k < len; k++) {
          const i = indexes[k];
          const measurement = measurements[i];
          virtualItems.push(measurement);
        }
        return virtualItems;
      },
      {
        key: "getVirtualItems",
        debug: () => this.options.debug
      }
    );
    this.getVirtualItemForOffset = (offset) => {
      const measurements = this.getMeasurements();
      if (measurements.length === 0) {
        return void 0;
      }
      return notUndefined(
        measurements[findNearestBinarySearch(
          0,
          measurements.length - 1,
          (index) => notUndefined(measurements[index]).start,
          offset
        )]
      );
    };
    this.getOffsetForAlignment = (toOffset, align, itemSize = 0) => {
      const size = this.getSize();
      const scrollOffset = this.getScrollOffset();
      if (align === "auto") {
        align = toOffset >= scrollOffset + size ? "end" : "start";
      }
      if (align === "center") {
        toOffset += (itemSize - size) / 2;
      } else if (align === "end") {
        toOffset -= size;
      }
      const scrollSizeProp = this.options.horizontal ? "scrollWidth" : "scrollHeight";
      const scrollSize = this.scrollElement ? "document" in this.scrollElement ? this.scrollElement.document.documentElement[scrollSizeProp] : this.scrollElement[scrollSizeProp] : 0;
      const maxOffset = scrollSize - size;
      return Math.max(Math.min(maxOffset, toOffset), 0);
    };
    this.getOffsetForIndex = (index, align = "auto") => {
      index = Math.max(0, Math.min(index, this.options.count - 1));
      const item2 = this.measurementsCache[index];
      if (!item2) {
        return void 0;
      }
      const size = this.getSize();
      const scrollOffset = this.getScrollOffset();
      if (align === "auto") {
        if (item2.end >= scrollOffset + size - this.options.scrollPaddingEnd) {
          align = "end";
        } else if (item2.start <= scrollOffset + this.options.scrollPaddingStart) {
          align = "start";
        } else {
          return [scrollOffset, align];
        }
      }
      const toOffset = align === "end" ? item2.end + this.options.scrollPaddingEnd : item2.start - this.options.scrollPaddingStart;
      return [
        this.getOffsetForAlignment(toOffset, align, item2.size),
        align
      ];
    };
    this.isDynamicMode = () => this.elementsCache.size > 0;
    this.cancelScrollToIndex = () => {
      if (this.scrollToIndexTimeoutId !== null && this.targetWindow) {
        this.targetWindow.clearTimeout(this.scrollToIndexTimeoutId);
        this.scrollToIndexTimeoutId = null;
      }
    };
    this.scrollToOffset = (toOffset, { align = "start", behavior } = {}) => {
      this.cancelScrollToIndex();
      if (behavior === "smooth" && this.isDynamicMode()) {
        console.warn(
          "The `smooth` scroll behavior is not fully supported with dynamic size."
        );
      }
      this._scrollToOffset(this.getOffsetForAlignment(toOffset, align), {
        adjustments: void 0,
        behavior
      });
    };
    this.scrollToIndex = (index, { align: initialAlign = "auto", behavior } = {}) => {
      index = Math.max(0, Math.min(index, this.options.count - 1));
      this.cancelScrollToIndex();
      if (behavior === "smooth" && this.isDynamicMode()) {
        console.warn(
          "The `smooth` scroll behavior is not fully supported with dynamic size."
        );
      }
      const offsetAndAlign = this.getOffsetForIndex(index, initialAlign);
      if (!offsetAndAlign) return;
      const [offset, align] = offsetAndAlign;
      this._scrollToOffset(offset, { adjustments: void 0, behavior });
      if (behavior !== "smooth" && this.isDynamicMode() && this.targetWindow) {
        this.scrollToIndexTimeoutId = this.targetWindow.setTimeout(() => {
          this.scrollToIndexTimeoutId = null;
          const elementInDOM = this.elementsCache.has(
            this.options.getItemKey(index)
          );
          if (elementInDOM) {
            const [latestOffset] = notUndefined(
              this.getOffsetForIndex(index, align)
            );
            if (!approxEqual(latestOffset, this.getScrollOffset())) {
              this.scrollToIndex(index, { align, behavior });
            }
          } else {
            this.scrollToIndex(index, { align, behavior });
          }
        });
      }
    };
    this.scrollBy = (delta, { behavior } = {}) => {
      this.cancelScrollToIndex();
      if (behavior === "smooth" && this.isDynamicMode()) {
        console.warn(
          "The `smooth` scroll behavior is not fully supported with dynamic size."
        );
      }
      this._scrollToOffset(this.getScrollOffset() + delta, {
        adjustments: void 0,
        behavior
      });
    };
    this.getTotalSize = () => {
      var _a;
      const measurements = this.getMeasurements();
      let end;
      if (measurements.length === 0) {
        end = this.options.paddingStart;
      } else if (this.options.lanes === 1) {
        end = ((_a = measurements[measurements.length - 1]) == null ? void 0 : _a.end) ?? 0;
      } else {
        const endByLane = Array(this.options.lanes).fill(null);
        let endIndex = measurements.length - 1;
        while (endIndex >= 0 && endByLane.some((val) => val === null)) {
          const item2 = measurements[endIndex];
          if (endByLane[item2.lane] === null) {
            endByLane[item2.lane] = item2.end;
          }
          endIndex--;
        }
        end = Math.max(...endByLane.filter((val) => val !== null));
      }
      return Math.max(
        end - this.options.scrollMargin + this.options.paddingEnd,
        0
      );
    };
    this._scrollToOffset = (offset, {
      adjustments,
      behavior
    }) => {
      this.options.scrollToFn(offset, { behavior, adjustments }, this);
    };
    this.measure = () => {
      this.itemSizeCache = /* @__PURE__ */ new Map();
      this.notify(false);
    };
    this.setOptions(opts);
  }
};
var findNearestBinarySearch = (low, high, getCurrentValue, value) => {
  while (low <= high) {
    const middle = (low + high) / 2 | 0;
    const currentValue = getCurrentValue(middle);
    if (currentValue < value) {
      low = middle + 1;
    } else if (currentValue > value) {
      high = middle - 1;
    } else {
      return middle;
    }
  }
  if (low > 0) {
    return low - 1;
  } else {
    return 0;
  }
};
function calculateRange({
  measurements,
  outerSize,
  scrollOffset,
  lanes
}) {
  const lastIndex = measurements.length - 1;
  const getOffset = (index) => measurements[index].start;
  if (measurements.length <= lanes) {
    return {
      startIndex: 0,
      endIndex: lastIndex
    };
  }
  let startIndex = findNearestBinarySearch(
    0,
    lastIndex,
    getOffset,
    scrollOffset
  );
  let endIndex = startIndex;
  if (lanes === 1) {
    while (endIndex < lastIndex && measurements[endIndex].end < scrollOffset + outerSize) {
      endIndex++;
    }
  } else if (lanes > 1) {
    const endPerLane = Array(lanes).fill(0);
    while (endIndex < lastIndex && endPerLane.some((pos) => pos < scrollOffset + outerSize)) {
      const item2 = measurements[endIndex];
      endPerLane[item2.lane] = item2.end;
      endIndex++;
    }
    const startPerLane = Array(lanes).fill(scrollOffset + outerSize);
    while (startIndex >= 0 && startPerLane.some((pos) => pos >= scrollOffset)) {
      const item2 = measurements[startIndex];
      startPerLane[item2.lane] = item2.start;
      startIndex--;
    }
    startIndex = Math.max(0, startIndex - startIndex % lanes);
    endIndex = Math.min(lastIndex, endIndex + (lanes - 1 - endIndex % lanes));
  }
  return { startIndex, endIndex };
}

// node_modules/@tanstack/react-virtual/dist/esm/index.js
var useIsomorphicLayoutEffect2 = typeof document !== "undefined" ? React.useLayoutEffect : React.useEffect;
function useVirtualizerBase(options) {
  const rerender = React.useReducer(() => ({}), {})[1];
  const resolvedOptions = {
    ...options,
    onChange: (instance2, sync) => {
      var _a;
      if (sync) {
        (0, import_react_dom.flushSync)(rerender);
      } else {
        rerender();
      }
      (_a = options.onChange) == null ? void 0 : _a.call(options, instance2, sync);
    }
  };
  const [instance] = React.useState(
    () => new Virtualizer(resolvedOptions)
  );
  instance.setOptions(resolvedOptions);
  useIsomorphicLayoutEffect2(() => {
    return instance._didMount();
  }, []);
  useIsomorphicLayoutEffect2(() => {
    return instance._willUpdate();
  });
  return instance;
}
function useVirtualizer(options) {
  return useVirtualizerBase({
    observeElementRect,
    observeElementOffset,
    scrollToFn: elementScroll,
    ...options
  });
}

// node_modules/@ui5/webcomponents-react/dist/components/AnalyticalTable/index.js
var import_react31 = __toESM(require_react(), 1);
var import_react_table4 = __toESM(require_react_table(), 1);

// node_modules/@ui5/webcomponents-react/dist/components/FlexBox/index.js
var import_react16 = __toESM(require_react(), 1);

// node_modules/@ui5/webcomponents-react/dist/components/FlexBox/FlexBox.module.css.js
var styleData3 = `@layer ui5-webcomponents-react{._flexBox_11fgm_1{display:flex}._flexBox_11fgm_1:where(._fitContainer_11fgm_4){height:100%;width:100%}._flexBox_11fgm_1:where(._justifyContentStart_11fgm_11){justify-content:flex-start}._flexBox_11fgm_1:where(._justifyContentEnd_11fgm_15){justify-content:flex-end}._flexBox_11fgm_1:where(._justifyContentCenter_11fgm_19){justify-content:center}._flexBox_11fgm_1:where(._justifyContentSpaceAround_11fgm_23){justify-content:space-around}._flexBox_11fgm_1:where(._justifyContentSpaceBetween_11fgm_27){justify-content:space-between}._flexBox_11fgm_1:where(._alignItemsStart_11fgm_33){align-items:flex-start}._flexBox_11fgm_1:where(._alignItemsEnd_11fgm_37){align-items:flex-end}._flexBox_11fgm_1:where(._alignItemsCenter_11fgm_41){align-items:center}._flexBox_11fgm_1:where(._alignItemsStretch_11fgm_45){align-items:stretch}._flexBox_11fgm_1:where(._alignItemsBaseline_11fgm_49){align-items:baseline}._flexBoxDisplayInline_11fgm_54{display:inline-flex}._flexBoxDirectionColumn_11fgm_58{flex-direction:column}._flexBoxDirectionColumnReverse_11fgm_62{flex-direction:column-reverse}._flexBoxDirectionRow_11fgm_66{flex-direction:row}._flexBoxDirectionRowReverse_11fgm_70{flex-direction:row-reverse}._flexWrapNoWrap_11fgm_74{flex-wrap:nowrap}._flexWrapWrap_11fgm_78{flex-wrap:wrap}._flexWrapWrapReverse_11fgm_82{flex-wrap:wrap-reverse}}`;
var classNames3 = {
  "flexBox": "_flexBox_11fgm_1",
  "fitContainer": "_fitContainer_11fgm_4",
  "justifyContentStart": "_justifyContentStart_11fgm_11",
  "justifyContentEnd": "_justifyContentEnd_11fgm_15",
  "justifyContentCenter": "_justifyContentCenter_11fgm_19",
  "justifyContentSpaceAround": "_justifyContentSpaceAround_11fgm_23",
  "justifyContentSpaceBetween": "_justifyContentSpaceBetween_11fgm_27",
  "alignItemsStart": "_alignItemsStart_11fgm_33",
  "alignItemsEnd": "_alignItemsEnd_11fgm_37",
  "alignItemsCenter": "_alignItemsCenter_11fgm_41",
  "alignItemsStretch": "_alignItemsStretch_11fgm_45",
  "alignItemsBaseline": "_alignItemsBaseline_11fgm_49",
  "flexBoxDisplayInline": "_flexBoxDisplayInline_11fgm_54",
  "flexBoxDirectionColumn": "_flexBoxDirectionColumn_11fgm_58",
  "flexBoxDirectionColumnReverse": "_flexBoxDirectionColumnReverse_11fgm_62",
  "flexBoxDirectionRow": "_flexBoxDirectionRow_11fgm_66",
  "flexBoxDirectionRowReverse": "_flexBoxDirectionRowReverse_11fgm_70",
  "flexWrapNoWrap": "_flexWrapNoWrap_11fgm_74",
  "flexWrapWrap": "_flexWrapWrap_11fgm_78",
  "flexWrapWrapReverse": "_flexWrapWrapReverse_11fgm_82"
};

// node_modules/@ui5/webcomponents-react/dist/components/FlexBox/index.js
var import_jsx_runtime137 = __toESM(require_jsx_runtime(), 1);
var FlexBox = (0, import_react16.forwardRef)((props, ref) => {
  const {
    children,
    justifyContent = FlexBoxJustifyContent.Start,
    direction = FlexBoxDirection.Row,
    alignItems = FlexBoxAlignItems.Stretch,
    displayInline,
    wrap = FlexBoxWrap.NoWrap,
    className,
    fitContainer,
    gap,
    as = "div",
    style,
    ...rest
  } = props;
  useStylesheet(styleData3, FlexBox.displayName);
  const flexBoxClasses = clsx(classNames3.flexBox, classNames3[`flexBoxDirection${direction}`], classNames3[`justifyContent${justifyContent}`], classNames3[`alignItems${alignItems}`], classNames3[`flexWrap${wrap}`], displayInline && classNames3.flexBoxDisplayInline, fitContainer && classNames3.fitContainer, className);
  const CustomTag = as;
  return (0, import_jsx_runtime137.jsx)(CustomTag, {
    ref,
    className: flexBoxClasses,
    style: {
      gap,
      ...style
    },
    ...rest,
    children
  });
});
FlexBox.displayName = "FlexBox";

// node_modules/@ui5/webcomponents-react/dist/components/AnalyticalTable/AnalyticalTable.module.css.js
var styleData4 = `@layer ui5-webcomponents-react{._baseCellFocus_1rgrg_1:focus{outline:none}._baseCellFocus_1rgrg_1:not([data-empty-row-cell]):focus:after{border:var(--sapContent_FocusWidth) var(--sapContent_FocusStyle) var(--sapContent_FocusColor);content:"";inset-block:1px;inset-inline:1px;pointer-events:none;position:absolute}._table_1rgrg_15{background-color:var(--sapList_Background);font-family:var(--sapFontFamily);font-size:var(--sapFontSize);font-weight:400;height:100%;max-width:100%;min-height:3rem;overflow-x:auto;overflow-y:hidden;position:relative;width:100%}._table_1rgrg_15:after{background:var(--sapList_HeaderBorderColor);content:"";height:var(--_ui5wcr-AnalyticalTable-HeaderBorderWidth);inset-block-end:0;inset-inline-start:0;position:absolute;width:100%}._tableContainerWithScrollBar_1rgrg_40{position:relative}._busyIndicator_1rgrg_44{height:100%;inset:0;position:absolute;z-index:1}._overlay_1rgrg_51{background:var(--sapGroup_ContentBackground);inset:0;opacity:.8;position:absolute;z-index:1}._overlay_1rgrg_51:focus{outline:var(--sapContent_FocusWidth) var(--sapContent_FocusStyle) var(--sapContent_FocusColor);outline-offset:calc(var(--sapContent_FocusWidth)*-1)}._tableHeaderRow_1rgrg_64{height:var(--_ui5wcr-AnalyticalTableHeaderRowHeight)}._tableHeaderRow_1rgrg_64 div:first-child ._th_1rgrg_67{border-inline-start:1px solid var(--_ui5wcr-AnalyticalTable-OuterBorderInline)}._hasNavigationIndicator_1rgrg_72 ._tableHeaderRow_1rgrg_64 :nth-last-child(2) ._th_1rgrg_67{border-inline-end:none}._hasNavigationIndicator_1rgrg_72 ._tr_1rgrg_77 :nth-last-child(2){border-inline-end:none}._tableHeaderBackgroundElement_1rgrg_82{background-color:var(--sapList_HeaderBackground);border-block-end:var(--_ui5wcr-AnalyticalTable-HeaderBorderWidth) solid var(--sapList_HeaderBorderColor);border-block-start:var(--_ui5wcr-AnalyticalTable-OuterBorderBlock);box-sizing:border-box;height:var(--_ui5wcr-AnalyticalTableHeaderRowHeight);inset-inline:0;position:absolute}._tableBodyBackgroundElement_1rgrg_92{border-block-end:1px solid var(--sapList_TableFooterBorder);box-sizing:border-box;inset-block-end:0;inset-inline:0;position:absolute}._th_1rgrg_67{background-color:var(--sapList_HeaderBackground);border-block-end:var(--_ui5wcr-AnalyticalTable-HeaderBorderWidth) solid var(--sapList_HeaderBorderColor);border-block-start:var(--_ui5wcr-AnalyticalTable-OuterBorderBlock);border-inline-end:1px solid var(--sapList_BorderColor);box-sizing:border-box;color:var(--sapList_HeaderTextColor);height:var(--_ui5wcr-AnalyticalTableHeaderRowHeight);padding-inline-end:.5rem;padding-inline-start:calc(.5rem - var(--_ui5wcr-AnalyticalTable-HeaderBorderWidth));text-align:start}._th_1rgrg_67:hover{background-color:var(--sapList_Hover_Background);color:var(--_ui5wcr-AnalyticalTable-HeaderActiveTextColor)}._th_1rgrg_67:active{background-color:var(--sapList_Active_Background);color:var(--_ui5wcr-AnalyticalTable-HeaderActiveTextColor)}._th_1rgrg_67[data-column-id=__ui5wcr__internal_highlight_column]{border-inline-end:1px solid #0000}._th_1rgrg_67:last-child [data-resizer]{transform:translateX(0)}._th_1rgrg_67[data-column-id=__ui5wcr__internal_selection_column]:focus{border-inline-start:1px solid #0000}._tbody_1rgrg_139{box-sizing:border-box;overflow-x:hidden;overflow-y:auto;position:relative;scrollbar-width:none;-ms-overflow-style:none}._tbody_1rgrg_139::-webkit-scrollbar{display:none!important;height:0!important;width:0!important}._alternateRowColor_1rgrg_154{background-color:var(--sapList_AlternatingBackground)}._tr_1rgrg_77{border-block-end:1px solid var(--sapList_BorderColor);box-sizing:border-box;color:var(--sapList_TextColor);display:flex;inset-block-start:0;inset-inline-start:0;margin-block-end:-1px;position:absolute;width:100%}._tr_1rgrg_77:hover:not([data-empty-row]){background-color:var(--sapList_Hover_Background)}._tr_1rgrg_77[data-is-selected]{background-color:var(--sapList_SelectionBackgroundColor);border-block-end:1px solid var(--sapList_SelectionBorderColor)}._tr_1rgrg_77[data-is-selected]:hover{background-color:var(--sapList_Hover_SelectionBackground)}._trActive_1rgrg_184{cursor:pointer}._tableGroupHeader_1rgrg_188._tr_1rgrg_77{background-color:var(--sapList_TableGroupHeaderBackground);border-color:var(--sapList_TableGroupHeaderBorderColor);color:var(--sapList_TextColor);font-family:var(--_ui5wcr-AnalyticalTable-HeaderFontFamily)}._tableGroupHeader_1rgrg_188._tr_1rgrg_77 ._tableCell_1rgrg_194{border-inline-end:1px solid #0000}._tableText_1rgrg_199{box-sizing:border-box;display:inline-block;font-size:var(--sapFontSize);font-weight:400;max-width:100%;overflow:hidden;word-wrap:normal;text-overflow:ellipsis;white-space:nowrap}._tableCell_1rgrg_194{align-items:center;border-inline-end:1px solid var(--sapList_BorderColor);box-sizing:border-box;display:inline-flex;height:100%;overflow:hidden;padding:0 .5rem;position:relative;text-overflow:ellipsis;white-space:nowrap}._tableCell_1rgrg_194:first-child{border-inline-start:var(--_ui5wcr-AnalyticalTable-OuterCellBorder)}._tableCell_1rgrg_194[data-column-id-cell=__ui5wcr__internal_highlight_column]:first-child{border-inline:none}._tableCell_1rgrg_194:last-child{border-inline-end:var(--_ui5wcr-AnalyticalTable-OuterCellBorder)}._tableCell_1rgrg_194[aria-selected=true]:not([data-empty-row-cell]):focus:after{inset-block-end:2px}._showVerticalEndBorder_1rgrg_241 ._tableCell_1rgrg_194{border-inline-end:1px solid var(--sapList_BorderColor)}._noDataContainer_1rgrg_245{align-items:center;background-color:var(--sapList_Background);border-block-end:1px solid var(--sapList_BorderColor);box-sizing:border-box;color:var(--sapList_TextColor);display:flex;font-family:var(--sapFontFamily);font-size:var(--sapFontSize);font-weight:400;height:100%;justify-content:center;width:100%}._navigation_1rgrg_260{background-color:var(--sapList_SelectionBorderColor)}._positive_1rgrg_264{background-color:var(--sapSuccessColor)}._negative_1rgrg_268{background-color:var(--sapErrorColor)}._critical_1rgrg_272{background-color:var(--sapWarningColor)}._information_1rgrg_276{background-color:var(--sapInformationColor)}._indication01_1rgrg_280{background:var(--sapIndicationColor_1)}._indication02_1rgrg_284{background:var(--sapIndicationColor_2)}._indication03_1rgrg_288{background:var(--sapIndicationColor_3)}._indication04_1rgrg_292{background:var(--sapIndicationColor_4)}._indication05_1rgrg_296{background:var(--sapIndicationColor_5)}._indication06_1rgrg_300{background:var(--sapIndicationColor_6)}._indication07_1rgrg_304{background:var(--sapIndicationColor_7)}._indication08_1rgrg_308{background:var(--sapIndicationColor_8)}._hiddenSmartColMeasure_1rgrg_312{height:0;position:fixed;visibility:hidden;white-space:nowrap}._hiddenSmartColMeasureHeader_1rgrg_319{font-family:var(--_ui5wcr-AnalyticalTable-HeaderFontFamily)}._hiddenA11yText_1rgrg_323{display:none}._checkBox_1rgrg_327::part(root){display:flex;height:unset;justify-content:center;min-height:unset;min-width:unset;padding:0;width:unset}._thContainer_1rgrg_341:first-child>[role=columnheader]{border-inline-start:var(--_ui5wcr-AnalyticalTable-OuterCellBorder)}._thContainer_1rgrg_341:last-child>[role=columnheader]{border-inline-end:var(--_ui5wcr-AnalyticalTable-OuterCellBorder)}._verticalEndBorder_1rgrg_351:last-child>[role=columnheader]{border-inline-end:1px solid var(--sapList_BorderColor)}._header_1rgrg_355{align-items:center;box-sizing:border-box;color:inherit;display:flex;font-family:var(--_ui5wcr-AnalyticalTable-HeaderFontFamily);font-size:var(--sapFontSize);font-weight:400;height:100%;max-width:100%;overflow-x:hidden;overflow-y:hidden;position:relative;text-align:start;text-overflow:ellipsis;white-space:nowrap;width:100%}._header_1rgrg_355>span{overflow-x:hidden;overflow-y:hidden;text-overflow:ellipsis;white-space:nowrap;width:100%}._text_1rgrg_382{color:inherit;cursor:inherit;font-family:inherit;text-align:start;width:100%}._iconContainer_1rgrg_390{color:var(--sapContent_IconColor);display:flex;inset-inline-end:.5rem;position:absolute}._iconContainer_1rgrg_390>[ui5-icon]:not(:first-child){margin-inline-start:.125rem}._selectAllCheckBoxContainer_1rgrg_401{display:flex;justify-content:center}._icon_1rgrg_390{height:.8125rem;width:.8125rem}._resizer_1rgrg_415{cursor:col-resize;display:inline-block;height:100%;inset-block-end:0;inset-block-start:0;position:absolute;width:3px;z-index:1}._resizer_1rgrg_415:active,._resizer_1rgrg_415:hover{background-color:var(--sapContent_DragAndDropActiveColor)}._popover_1rgrg_435{font-weight:400}._popover_1rgrg_435::part(content){padding:0}._filterIcon_1rgrg_443{color:var(--sapContent_NonInteractiveIconColor);padding-inline-end:.5rem}._filterText_1rgrg_448{overflow:visible;padding-inline-end:.5rem}._container_1rgrg_457{flex-shrink:0;height:var(--_ui5wcr-AnalyticalTableExpandButtonHeight);margin-inline-end:.125rem}._expandableIcon_1rgrg_463{align-items:center;color:var(--sapContent_IconColor);display:flex;height:100%;width:100%}._expandableIcon_1rgrg_463::part(root){height:var(--_ui5wcr-AnalyticalTableExpandIconHeight);padding:.375rem;width:var(--_ui5wcr-AnalyticalTableExpandIconHeight)}._button_1rgrg_476{color:var(--sapTextColor);font-size:.75rem;height:100%}._nonExpandableCellSpacer_1rgrg_482{flex-shrink:0;width:var(--_ui5wcr-AnalyticalTableExpandIndicatorWidth)}._withExpandableButton_1rgrg_487{margin-inline-end:.5rem}._popInContainer_1rgrg_495{width:100%}._defaultCell_1rgrg_499>:first-child{padding-block-start:.25rem}._popInHeader_1rgrg_503{color:var(--sapContent_LabelColor);height:16px}._gap_1rgrg_508{gap:.5rem}._subcomponent_1rgrg_516{position:absolute;width:100%}._subcomponent_1rgrg_516:focus{outline:var(--sapContent_FocusWidth) var(--sapContent_FocusStyle) var(--sapContent_FocusColor);outline-offset:calc(var(--sapContent_FocusWidth)*-1)}._verticalResizerContainer_1rgrg_529{box-sizing:border-box;cursor:row-resize;height:5px;overflow:hidden;position:relative;text-align:center}._verticalResizerContainer_1rgrg_529:hover{background-color:var(--sapContent_DragAndDropActiveColor);color:var(--sapHighlightTextColor)}._verticalResizerContainer_1rgrg_529:before{content:"⦁⦁⦁⦁";font-family:var(--sapFontFamily);font-size:10px;inset-block-start:0;line-height:5px;pointer-events:none;position:absolute}._verticalResizer_1rgrg_529{background-color:var(--sapContent_DragAndDropActiveColor);height:5px;opacity:.5;position:absolute}._headerSection_1rgrg_564{background-color:var(--sapList_HeaderBackground);border-block-end:var(--_ui5wcr-AnalyticalTable-HeaderBorderWidth) solid var(--sapList_HeaderBorderColor);border-block-start:var(--_ui5wcr-AnalyticalTable-OuterBorderBlock);border-inline-end:var(--_ui5wcr-AnalyticalTable-OuterBorderInline);border-inline-start:1px solid var(--sapList_BorderColor);box-sizing:border-box;margin-inline-start:-1px;width:calc(var(--sapScrollBar_Dimension) + 2px)}._scrollbar_1rgrg_574{border-block-end:1px solid var(--sapList_TableFooterBorder);border-inline-end:var(--_ui5wcr-AnalyticalTable-OuterBorderInline);border-inline-start:1px solid var(--sapList_BorderColor);box-sizing:border-box;margin-inline-start:-1px;overflow-y:auto}._bottomSection_1rgrg_583{background-color:var(--sapList_FooterBackground);border-inline-end:var(--_ui5wcr-AnalyticalTable-OuterBorderInline);box-sizing:border-box;flex-grow:1}}`;
var classNames4 = {
  "baseCellFocus": "_baseCellFocus_1rgrg_1",
  "table": "_table_1rgrg_15",
  "tableContainerWithScrollBar": "_tableContainerWithScrollBar_1rgrg_40",
  "busyIndicator": "_busyIndicator_1rgrg_44",
  "overlay": "_overlay_1rgrg_51",
  "tableHeaderRow": "_tableHeaderRow_1rgrg_64",
  "th": "_th_1rgrg_67 _baseCellFocus_1rgrg_1",
  "hasNavigationIndicator": "_hasNavigationIndicator_1rgrg_72",
  "tr": "_tr_1rgrg_77",
  "tableHeaderBackgroundElement": "_tableHeaderBackgroundElement_1rgrg_82",
  "tableBodyBackgroundElement": "_tableBodyBackgroundElement_1rgrg_92",
  "tbody": "_tbody_1rgrg_139",
  "alternateRowColor": "_alternateRowColor_1rgrg_154",
  "trActive": "_trActive_1rgrg_184",
  "tableGroupHeader": "_tableGroupHeader_1rgrg_188",
  "tableCell": "_tableCell_1rgrg_194 _baseCellFocus_1rgrg_1",
  "tableText": "_tableText_1rgrg_199",
  "showVerticalEndBorder": "_showVerticalEndBorder_1rgrg_241",
  "noDataContainer": "_noDataContainer_1rgrg_245",
  "navigation": "_navigation_1rgrg_260",
  "positive": "_positive_1rgrg_264",
  "negative": "_negative_1rgrg_268",
  "critical": "_critical_1rgrg_272",
  "information": "_information_1rgrg_276",
  "indication01": "_indication01_1rgrg_280",
  "indication02": "_indication02_1rgrg_284",
  "indication03": "_indication03_1rgrg_288",
  "indication04": "_indication04_1rgrg_292",
  "indication05": "_indication05_1rgrg_296",
  "indication06": "_indication06_1rgrg_300",
  "indication07": "_indication07_1rgrg_304",
  "indication08": "_indication08_1rgrg_308",
  "hiddenSmartColMeasure": "_hiddenSmartColMeasure_1rgrg_312",
  "hiddenSmartColMeasureHeader": "_hiddenSmartColMeasureHeader_1rgrg_319",
  "hiddenA11yText": "_hiddenA11yText_1rgrg_323",
  "checkBox": "_checkBox_1rgrg_327",
  "thContainer": "_thContainer_1rgrg_341",
  "verticalEndBorder": "_verticalEndBorder_1rgrg_351",
  "header": "_header_1rgrg_355",
  "text": "_text_1rgrg_382",
  "iconContainer": "_iconContainer_1rgrg_390",
  "selectAllCheckBoxContainer": "_selectAllCheckBoxContainer_1rgrg_401",
  "icon": "_icon_1rgrg_390",
  "resizer": "_resizer_1rgrg_415",
  "popover": "_popover_1rgrg_435",
  "filterIcon": "_filterIcon_1rgrg_443",
  "filterText": "_filterText_1rgrg_448",
  "container": "_container_1rgrg_457",
  "expandableIcon": "_expandableIcon_1rgrg_463",
  "button": "_button_1rgrg_476",
  "nonExpandableCellSpacer": "_nonExpandableCellSpacer_1rgrg_482",
  "withExpandableButton": "_withExpandableButton_1rgrg_487",
  "popInContainer": "_popInContainer_1rgrg_495",
  "defaultCell": "_defaultCell_1rgrg_499",
  "popInHeader": "_popInHeader_1rgrg_503",
  "gap": "_gap_1rgrg_508",
  "subcomponent": "_subcomponent_1rgrg_516",
  "verticalResizerContainer": "_verticalResizerContainer_1rgrg_529",
  "verticalResizer": "_verticalResizer_1rgrg_529",
  "headerSection": "_headerSection_1rgrg_564",
  "scrollbar": "_scrollbar_1rgrg_574",
  "bottomSection": "_bottomSection_1rgrg_583"
};

// node_modules/@ui5/webcomponents-react/dist/components/AnalyticalTable/ColumnHeader/ColumnHeaderContainer.js
var import_react18 = __toESM(require_react(), 1);

// node_modules/@ui5/webcomponents-react/dist/components/AnalyticalTable/types/index.js
var RenderColumnTypes = function(RenderColumnTypes2) {
  RenderColumnTypes2["Filter"] = "Filter";
  RenderColumnTypes2["Grouped"] = "Grouped";
  RenderColumnTypes2["Cell"] = "Cell";
  RenderColumnTypes2["Expandable"] = "Expandable";
  RenderColumnTypes2["RepeatedValue"] = "RepeatedValue";
  RenderColumnTypes2["PopIn"] = "PopIn";
  RenderColumnTypes2["Popover"] = "Popover";
  RenderColumnTypes2["Header"] = "Header";
  RenderColumnTypes2["Aggregated"] = "Aggregated";
  return RenderColumnTypes2;
}({});

// node_modules/@ui5/webcomponents-icons/dist/v4/group-2.js
var name90 = "group-2";
var pathData87 = "M415 64h64q14 0 23 9t9 23v320q0 13-9 22.5t-23 9.5h-64v-32h64V96h-64V64zM-1 416V96q0-14 9.5-23T31 64h64v32H31v320h64v32H31q-13 0-22.5-9.5T-1 416zm144-96h224q16 0 16 16 0 6-4.5 11t-11.5 5H143q-6 0-11-5t-5-11q0-7 5-11.5t11-4.5zm0-96h224q16 0 16 16 0 6-4.5 11t-11.5 5H143q-6 0-11-5t-5-11q0-7 5-11.5t11-4.5zm-16-80q0-7 5-11.5t11-4.5h224q16 0 16 16 0 6-4.5 11t-11.5 5H143q-6 0-11-5t-5-11z";
var ltr87 = false;
var accData54 = ICON_GROUP_2;
var collection89 = "SAP-icons-v4";
var packageName87 = "@ui5/webcomponents-icons";
registerIcon(name90, { pathData: pathData87, ltr: ltr87, accData: accData54, collection: collection89, packageName: packageName87 });

// node_modules/@ui5/webcomponents-icons/dist/v5/group-2.js
var name91 = "group-2";
var pathData88 = "M454 480h-44q-11 0-18.5-7.5T384 454t7.5-18 18.5-7h44q7 0 7-7V90q0-7-7-7h-44q-11 0-18.5-7T384 58t7.5-18.5T410 32h44q24 0 41 17t17 41v332q0 24-17 41t-41 17zm-352 0H58q-24 0-41-17T0 422V90q0-24 17-41t41-17h44q11 0 18.5 7.5T128 58t-7.5 18-18.5 7H58q-7 0-7 7v332q0 7 7 7h44q11 0 18.5 7t7.5 18-7.5 18.5T102 480zm256-301H154q-11 0-18.5-7t-7.5-18 7.5-18.5T154 128h204q11 0 18.5 7.5T384 154t-7.5 18-18.5 7zm0 96H154q-11 0-18.5-7t-7.5-18 7.5-18.5T154 224h204q11 0 18.5 7.5T384 250t-7.5 18-18.5 7zm-96 96H154q-11 0-18.5-7t-7.5-18 7.5-18.5T154 320h108q11 0 18.5 7.5T288 346t-7.5 18-18.5 7z";
var ltr88 = false;
var accData55 = ICON_GROUP_2;
var collection90 = "SAP-icons-v5";
var packageName88 = "@ui5/webcomponents-icons";
registerIcon(name91, { pathData: pathData88, ltr: ltr88, accData: accData55, collection: collection90, packageName: packageName88 });

// node_modules/@ui5/webcomponents-icons/dist/group-2.js
var group_2_default = "group-2";

// node_modules/@ui5/webcomponents-react/dist/components/AnalyticalTable/ColumnHeader/index.js
var import_react17 = __toESM(require_react(), 1);
var import_jsx_runtime138 = __toESM(require_jsx_runtime(), 1);
var ColumnHeader = (props) => {
  const {
    id,
    children,
    column,
    columnId,
    className,
    style,
    onDragEnter,
    onDragOver,
    onDragStart,
    onDrop,
    onDragEnd,
    headerTooltip,
    isDraggable,
    dragOver,
    role,
    virtualColumn,
    columnVirtualizer,
    isRtl,
    visibleColumnIndex,
    onClick,
    onKeyDown,
    onKeyUp,
    isFiltered,
    title: title4,
    "aria-label": ariaLabel,
    "aria-sort": ariaSort,
    showVerticalEndBorder,
    classNames: classNames32
  } = props;
  const columnIndex = virtualColumn.index;
  const [popoverOpen, setPopoverOpen] = (0, import_react17.useState)(false);
  const columnHeaderRef = (0, import_react17.useRef)(null);
  const childIsString = typeof children === "string";
  const tooltip = (() => {
    if (headerTooltip) {
      return headerTooltip;
    }
    if (childIsString) {
      return children;
    }
    return null;
  })();
  const textStyle = (() => {
    let margin = 0;
    const style2 = {};
    if (column.hAlign) {
      style2.textAlign = column.hAlign.toLowerCase();
    }
    if (column.isSorted) margin += 0.8125;
    if (column.isGrouped) margin += 0.8125;
    if (isFiltered) margin += 0.8125;
    if (margin === 0) {
      return style2;
    }
    if (margin > 0) {
      margin += 0.75;
    }
    style2.marginInlineEnd = `${margin}rem`;
    return style2;
  })();
  const hasPopover = column.canGroupBy || column.canSort || column.canFilter;
  const handleHeaderCellClick = (e) => {
    if (typeof onClick === "function") {
      onClick(e);
    }
    if (hasPopover) {
      setPopoverOpen(true);
    }
  };
  const directionStyles = isRtl ? {
    right: 0,
    transform: `translateX(-${virtualColumn.start}px)`
  } : {
    left: 0,
    transform: `translateX(${virtualColumn.start}px)`
  };
  const handleHeaderCellKeyDown = (e) => {
    if (typeof onKeyDown === "function") {
      onKeyDown(e);
    }
    if (hasPopover && e.code === "Enter") {
      setPopoverOpen(true);
    }
    if (e.code === "Space") {
      e.preventDefault();
    }
  };
  const handleHeaderCellKeyUp = (e) => {
    if (typeof onKeyUp === "function") {
      onKeyUp(e);
    }
    if (hasPopover && e.code === "Space" && !e.target.hasAttribute("ui5-li")) {
      setPopoverOpen(true);
    }
  };
  if (!column) return null;
  return (0, import_jsx_runtime138.jsx)("div", {
    ref: columnHeaderRef,
    className: clsx(classNames32.thContainer, showVerticalEndBorder && classNames32.verticalEndBorder),
    style: {
      position: "absolute",
      insetBlockStart: 0,
      width: `${virtualColumn.size}px`,
      ...directionStyles
    },
    children: (0, import_jsx_runtime138.jsxs)("div", {
      ref: columnVirtualizer.measureElement,
      "data-visible-column-index": visibleColumnIndex,
      "data-visible-row-index": 0,
      "data-row-index": 0,
      "data-column-index": columnIndex,
      tabIndex: -1,
      id,
      className,
      style: {
        ...style,
        borderInlineStart: dragOver ? `3px solid ${ThemingParameters.sapSelectedColor}` : void 0
      },
      "aria-haspopup": hasPopover ? "menu" : void 0,
      role,
      draggable: isDraggable,
      onDragEnter,
      onDragOver,
      onDragStart,
      onDrop,
      onDragEnd,
      "data-column-id": columnId,
      onClick: handleHeaderCellClick,
      onKeyDown: handleHeaderCellKeyDown,
      onKeyUp: handleHeaderCellKeyUp,
      "aria-label": ariaLabel,
      "aria-sort": ariaSort,
      title: title4,
      children: [(0, import_jsx_runtime138.jsxs)("div", {
        className: clsx(classNames32.header, columnId === "__ui5wcr__internal_selection_column" && classNames32.selectAllCheckBoxContainer),
        "data-h-align": column.hAlign,
        "data-component-name": `AnalyticalTableHeaderContentContainer-${columnId}`,
        children: [childIsString ? (0, import_jsx_runtime138.jsx)(Text3, {
          title: tooltip,
          maxLines: 1,
          style: textStyle,
          className: classNames32.text,
          "data-component-name": `AnalyticalTableHeaderTextContentContainer-${columnId}`,
          children
        }) : (0, import_jsx_runtime138.jsx)("span", {
          title: tooltip,
          style: textStyle,
          className: classNames32.text,
          "data-component-name": `AnalyticalTableHeaderContentContainer-${columnId}`,
          children
        }), (0, import_jsx_runtime138.jsxs)("div", {
          className: classNames32.iconContainer,
          "data-component-name": `AnalyticalTableHeaderIconsContainer-${columnId}`,
          children: [isFiltered && (0, import_jsx_runtime138.jsx)(Icon, {
            design: IconDesign_default.NonInteractive,
            name: filter_default,
            "aria-hidden": true,
            className: classNames32.icon
          }), column.isSorted && (0, import_jsx_runtime138.jsx)(Icon, {
            design: IconDesign_default.NonInteractive,
            name: column.isSortedDesc ? sort_descending_default : sort_ascending_default,
            "aria-hidden": true,
            className: classNames32.icon
          }), column.isGrouped && (0, import_jsx_runtime138.jsx)(Icon, {
            design: IconDesign_default.NonInteractive,
            name: group_2_default,
            "aria-hidden": true,
            className: classNames32.icon
          })]
        })]
      }), hasPopover && popoverOpen && // render the popover and add the props to the table instance
      column.render(RenderColumnTypes.Popover, {
        popoverProps: {
          openerRef: columnHeaderRef,
          setOpen: setPopoverOpen
        }
      })]
    })
  });
};
ColumnHeader.displayName = "ColumnHeader";

// node_modules/@ui5/webcomponents-react/dist/components/AnalyticalTable/ColumnHeader/ColumnHeaderContainer.js
var import_jsx_runtime139 = __toESM(require_jsx_runtime(), 1);
var ColumnHeaderContainer = (0, import_react18.forwardRef)((props, ref) => {
  const {
    headerProps: headerProps3,
    headerGroup,
    resizeInfo,
    isRtl,
    columnVirtualizer,
    uniqueId,
    showVerticalEndBorder,
    classNames: classNames32
  } = props;
  const {
    key,
    ...reactTableHeaderProps
  } = headerProps3;
  return (0, import_jsx_runtime139.jsx)("div", {
    ...reactTableHeaderProps,
    style: {
      width: `${columnVirtualizer.getTotalSize()}px`
    },
    ref,
    "data-component-name": "AnalyticalTableHeaderRow",
    children: columnVirtualizer.getVirtualItems().map((virtualColumn, index) => {
      const column = headerGroup.headers[virtualColumn.index];
      if (!column) {
        return null;
      }
      const isLastColumn = !column.disableResizing && virtualColumn.index + 1 === headerGroup.headers.length;
      const resizerDirectionStyle = isRtl ? {
        right: `${column.totalFlexWidth + column.totalLeft - (isLastColumn ? 3 : 0)}px`,
        transform: "translateX(50%)"
      } : {
        left: `${column.totalFlexWidth + column.totalLeft - (isLastColumn ? 3 : 0)}px`,
        transform: "translateX(-50%)"
      };
      const {
        key: key2,
        ...rest
      } = column.getHeaderProps();
      return (0, import_jsx_runtime139.jsxs)(import_react18.Fragment, {
        children: [column.canResize && column.getResizerProps && (0, import_jsx_runtime139.jsx)("div", {
          ...column.getResizerProps(),
          "data-resizer": true,
          "data-component-name": "AnalyticalTableResizer",
          className: classNames32.resizer,
          style: resizerDirectionStyle
        }), (0, import_jsx_runtime139.jsx)(ColumnHeader, {
          ...rest,
          showVerticalEndBorder,
          id: `${uniqueId}${(rest == null ? void 0 : rest.id) ?? ""}`,
          columnId: rest.id,
          visibleColumnIndex: index,
          headerTooltip: column.headerTooltip,
          isDraggable: !column.disableDragAndDrop && !resizeInfo.isResizingColumn,
          virtualColumn,
          columnVirtualizer,
          isRtl,
          classNames: classNames32,
          children: column.render(RenderColumnTypes.Header)
        })]
      }, key2);
    })
  }, key);
});
ColumnHeaderContainer.displayName = "ColumnHeaderContainer";

// node_modules/@ui5/webcomponents-react/dist/components/AnalyticalTable/defaults/FilterComponent/index.js
var import_react19 = __toESM(require_react(), 1);

// node_modules/@ui5/webcomponents-react/dist/internal/stopPropagation.js
var stopPropagation = (e) => {
  var _a;
  e.stopPropagation();
  (_a = e.stopImmediatePropagation) == null ? void 0 : _a.call(e);
};

// node_modules/@ui5/webcomponents-react/dist/components/AnalyticalTable/defaults/FilterComponent/index.js
var import_jsx_runtime140 = __toESM(require_jsx_runtime(), 1);
var DefaultFilterComponent = ({
  column
}) => {
  const handleInput = (0, import_react19.useCallback)((e) => {
    column.setFilter(e.target.value || void 0);
  }, [column.setFilter]);
  const handleKeyDown = (e) => {
    if (e.key !== "Enter") {
      stopPropagation(e);
    }
  };
  return (0, import_jsx_runtime140.jsx)(Input, {
    onInput: handleInput,
    value: column.filterValue ?? "",
    showClearIcon: true,
    onKeyDown: handleKeyDown
  });
};
DefaultFilterComponent.displayName = "DefaultFilterComponent";

// node_modules/@ui5/webcomponents-react/dist/components/AnalyticalTable/defaults/Column/Cell.js
var import_jsx_runtime141 = __toESM(require_jsx_runtime(), 1);
var Cell = ({
  cell: {
    value = "",
    isGrouped
  },
  column,
  row,
  webComponentsReactProperties
}) => {
  let cellContent = `${value ?? ""}`;
  if (isGrouped) {
    cellContent += ` (${row.subRows.length})`;
  }
  return (0, import_jsx_runtime141.jsx)("span", {
    title: cellContent,
    className: webComponentsReactProperties.classes.tableText,
    "data-column-id-cell-text": column.id,
    children: cellContent
  });
};

// node_modules/@ui5/webcomponents-react/dist/components/AnalyticalTable/defaults/Column/ColumnHeaderModal.js
var import_react20 = __toESM(require_react(), 1);
var import_jsx_runtime142 = __toESM(require_jsx_runtime(), 1);
var ColumnHeaderModal = (instance) => {
  const {
    setOpen,
    openerRef
  } = instance.popoverProps;
  const {
    column,
    state,
    webComponentsReactProperties
  } = instance;
  const {
    isRtl,
    groupBy
  } = state;
  const {
    onGroup,
    onSort,
    classes: classNames32
  } = webComponentsReactProperties;
  const showFilter = column.canFilter;
  const showGroup = column.canGroupBy;
  const showSort = column.canSort;
  const ref = (0, import_react20.useRef)(null);
  const listRef = (0, import_react20.useRef)(null);
  const {
    Filter
  } = column;
  const i18nBundle = useI18nBundle("@ui5/webcomponents-react");
  const clearSortingText = i18nBundle.getText(CLEAR_SORTING);
  const sortAscendingText = i18nBundle.getText(SORT_ASCENDING);
  const sortDescendingText = i18nBundle.getText(SORT_DESCENDING);
  const groupText = i18nBundle.getText(GROUP);
  const ungroupText = i18nBundle.getText(UNGROUP);
  const filterText = i18nBundle.getText(FILTER);
  const filterStyles = (0, import_react20.useMemo)(() => {
    if (showFilter) {
      return {
        iconDimensions: `var(${getScopedVarName("--_ui5_list_item_icon_size")})`,
        fontSize: `var(${getScopedVarName("--_ui5_list_item_title_size")})`
      };
    }
  }, [showFilter]);
  const handleSort = (e) => {
    const sortType = e.detail.item.getAttribute("data-sort");
    switch (sortType) {
      case "asc":
        column.toggleSortBy(false, !!column.enableMultiSort);
        if (typeof onSort === "function") {
          onSort(enrichEventWithDetails(e, {
            column,
            sortDirection: sortType
          }));
        }
        break;
      case "desc":
        column.toggleSortBy(true, !!column.enableMultiSort);
        if (typeof onSort === "function") {
          onSort(enrichEventWithDetails(e, {
            column,
            sortDirection: sortType
          }));
        }
        break;
      case "clear":
        column.clearSortBy();
        if (typeof onSort === "function") {
          onSort(enrichEventWithDetails(e, {
            column,
            sortDirection: sortType
          }));
        }
        break;
      case "group": {
        const willGroup = !column.isGrouped;
        column.toggleGroupBy(willGroup);
        let groupedColumns;
        if (willGroup) {
          groupedColumns = [...groupBy, column.id];
        } else {
          groupedColumns = groupBy.filter((group) => group !== column.id);
        }
        if (typeof onGroup === "function") {
          onGroup(enrichEventWithDetails(e, {
            column,
            groupedColumns,
            isGrouped: willGroup
          }));
        }
        break;
      }
    }
    setOpen(false);
  };
  const isSortedAscending = column.isSorted && column.isSortedDesc === false;
  const isSortedDescending = column.isSorted && column.isSortedDesc === true;
  const onAfterClose = (e) => {
    stopPropagation(e);
    setOpen(false);
  };
  const onAfterOpen = () => {
    var _a, _b, _c;
    (_c = (_b = (_a = listRef.current) == null ? void 0 : _a.children) == null ? void 0 : _b[0]) == null ? void 0 : _c.focus();
  };
  const horizontalAlign = (() => {
    switch (column.hAlign) {
      case TextAlign.Begin:
        return isRtl ? PopoverHorizontalAlign_default.End : PopoverHorizontalAlign_default.Start;
      case TextAlign.End:
        return isRtl ? PopoverHorizontalAlign_default.Start : PopoverHorizontalAlign_default.End;
      case TextAlign.Left:
        return PopoverHorizontalAlign_default.Start;
      case TextAlign.Right:
        return PopoverHorizontalAlign_default.End;
      case TextAlign.Center:
        return PopoverHorizontalAlign_default.Center;
      default:
        return isRtl ? PopoverHorizontalAlign_default.End : PopoverHorizontalAlign_default.Start;
    }
  })();
  const handleCustomLiKeyDown = (e) => {
    if (e.key === "Enter") {
      setOpen(false);
    }
  };
  const handleListKeyDown = (e) => {
    if (e.key !== "Escape") {
      stopPropagation(e);
    }
  };
  (0, import_react20.useEffect)(() => {
    if (open && ref.current && openerRef.current) {
      void customElements.whenDefined(getUi5TagWithSuffix2("ui5-popover")).then(() => {
        ref.current.opener = openerRef.current;
        ref.current.open = true;
      });
    }
  }, [open]);
  return (0, import_jsx_runtime142.jsx)(Popover, {
    hideArrow: true,
    horizontalAlign,
    placement: PopoverPlacement_default.Bottom,
    ref,
    className: classNames32.popover,
    onClick: stopPropagation,
    onClose: onAfterClose,
    onOpen: onAfterOpen,
    "data-component-name": "ATHeaderPopover",
    children: (0, import_jsx_runtime142.jsxs)(List, {
      onItemClick: handleSort,
      ref: listRef,
      onKeyDown: handleListKeyDown,
      "data-component-name": "ATHeaderPopoverList",
      children: [isSortedAscending && (0, import_jsx_runtime142.jsx)(ListItemStandard3, {
        type: ListItemType_default.Active,
        icon: decline_default,
        "data-sort": "clear",
        children: clearSortingText
      }), showSort && !isSortedAscending && (0, import_jsx_runtime142.jsx)(ListItemStandard3, {
        type: ListItemType_default.Active,
        icon: sort_ascending_default,
        "data-sort": "asc",
        children: sortAscendingText
      }), showSort && !isSortedDescending && (0, import_jsx_runtime142.jsx)(ListItemStandard3, {
        type: ListItemType_default.Active,
        icon: sort_descending_default,
        "data-sort": "desc",
        children: sortDescendingText
      }), isSortedDescending && (0, import_jsx_runtime142.jsx)(ListItemStandard3, {
        type: ListItemType_default.Active,
        icon: decline_default,
        "data-sort": "clear",
        children: clearSortingText
      }), showFilter && (0, import_jsx_runtime142.jsx)(ListItemCustom, {
        type: ListItemType_default.Inactive,
        onKeyDown: handleCustomLiKeyDown,
        accessibleName: filterText,
        children: (0, import_jsx_runtime142.jsxs)(FlexBox, {
          alignItems: FlexBoxAlignItems.Center,
          children: [(0, import_jsx_runtime142.jsx)(Icon, {
            name: filter_default,
            className: classNames32.filterIcon,
            "aria-hidden": true,
            style: {
              minWidth: filterStyles.iconDimensions,
              minHeight: filterStyles.iconDimensions
            }
          }), (0, import_jsx_runtime142.jsx)(Text3, {
            maxLines: 1,
            className: classNames32.filterText,
            style: {
              fontSize: filterStyles.fontSize
            },
            children: filterText
          }), (0, import_jsx_runtime142.jsx)(Filter, {
            column,
            popoverRef: ref
          })]
        })
      }), showGroup && (0, import_jsx_runtime142.jsx)(ListItemStandard3, {
        type: ListItemType_default.Active,
        icon: group_2_default,
        "data-sort": "group",
        children: column.isGrouped ? ungroupText : groupText
      })]
    })
  });
};
ColumnHeaderModal.displayName = "ColumnHeaderModal";

// node_modules/@ui5/webcomponents-react/dist/components/AnalyticalTable/defaults/Column/Expandable.js
var import_jsx_runtime143 = __toESM(require_jsx_runtime(), 1);
var getPadding = (level) => {
  switch (level) {
    case 0:
      return "0px";
    case 1:
      return CssSizeVariables.ui5WcrAnalyticalTableTreePaddingLevel1;
    case 2:
      return CssSizeVariables.ui5WcrAnalyticalTableTreePaddingLevel2;
    case 3:
      return CssSizeVariables.ui5WcrAnalyticalTableTreePaddingLevel3;
    default:
      return `calc(${CssSizeVariables.ui5WcrAnalyticalTableTreePaddingLevel3} + ${level - 3}rem * 0.5)`;
  }
};
var Expandable = (props) => {
  const {
    cell,
    row,
    column,
    visibleColumns: columns6,
    webComponentsReactProperties
  } = props;
  const {
    renderRowSubComponent,
    alwaysShowSubComponent,
    translatableTexts,
    classes: classNames32
  } = webComponentsReactProperties;
  const currentTheme = useCurrentTheme();
  const shouldRenderButton = currentTheme === "sap_horizon" || currentTheme === "sap_horizon_dark";
  const tableColumns = columns6.filter(({
    id
  }) => id !== "__ui5wcr__internal_selection_column" && id !== "__ui5wcr__internal_highlight_column" && id !== "__ui5wcr__internal_navigation_column");
  const columnIndex = tableColumns.findIndex((col) => col.id === column.id);
  const paddingLeft = getPadding(row.depth);
  const rowProps = row.getToggleRowExpandedProps();
  const subComponentExpandable = typeof renderRowSubComponent === "function" && !!renderRowSubComponent(row) && !alwaysShowSubComponent;
  return (0, import_jsx_runtime143.jsxs)(import_jsx_runtime143.Fragment, {
    children: [columnIndex === 0 && // todo rowProps should be applied to the whole row, not just the cell. We should consider refactoring this.
    (0, import_jsx_runtime143.jsx)(import_jsx_runtime143.Fragment, {
      children: row.canExpand || subComponentExpandable ? (0, import_jsx_runtime143.jsx)("span", {
        title: row.isExpanded ? translatableTexts.collapseNodeA11yText : translatableTexts.expandNodeA11yText,
        style: {
          ...rowProps.style,
          paddingInlineStart: paddingLeft
        },
        className: classNames32.container,
        "aria-label": row.isExpanded ? translatableTexts.collapseA11yText : translatableTexts.expandA11yText,
        children: shouldRenderButton ? (0, import_jsx_runtime143.jsx)(Button, {
          tabIndex: -1,
          icon: row.isExpanded ? navigation_down_arrow_default : navigation_right_arrow_default,
          design: ButtonDesign_default.Transparent,
          onClick: rowProps.onClick,
          className: classNames32.button
        }) : (0, import_jsx_runtime143.jsx)(Icon, {
          tabIndex: -1,
          onClick: rowProps.onClick,
          mode: IconMode_default.Interactive,
          name: row.isExpanded ? navigation_down_arrow_default : navigation_right_arrow_default,
          "data-component-name": "AnalyticalTableExpandIcon",
          className: classNames32.expandableIcon
        })
      }) : (0, import_jsx_runtime143.jsx)("span", {
        style: {
          paddingInlineStart: paddingLeft
        },
        "data-component-name": "AnalyticalTableNonExpandableCellSpacer",
        className: clsx(classNames32.nonExpandableCellSpacer, shouldRenderButton && classNames32.withExpandableButton)
      })
    }), cell.render(RenderColumnTypes.Cell)]
  });
};
Expandable.displayName = "Expandable";

// node_modules/@ui5/webcomponents-react/dist/components/AnalyticalTable/defaults/Column/Grouped.js
var import_jsx_runtime144 = __toESM(require_jsx_runtime(), 1);
var tableGroupExpandCollapseIcon = {
  color: "var(--sapContent_IconColor)",
  height: "0.75rem",
  width: "0.75rem",
  padding: "0.625rem",
  display: "block"
};
var Grouped = (props) => {
  const {
    cell,
    row,
    webComponentsReactProperties
  } = props;
  const {
    translatableTexts
  } = webComponentsReactProperties;
  const style = {};
  if (cell.column.hAlign && (cell.column.hAlign !== TextAlign.Left || cell.column.hAlign !== TextAlign.Begin)) {
    style.marginRight = "auto";
  }
  return (0, import_jsx_runtime144.jsxs)(import_jsx_runtime144.Fragment, {
    children: [(0, import_jsx_runtime144.jsx)("span", {
      ...row.getToggleRowExpandedProps({
        style,
        column: cell.column
      }),
      title: row.isExpanded ? translatableTexts.collapseNodeA11yText : translatableTexts.expandNodeA11yText,
      children: (0, import_jsx_runtime144.jsx)(Icon, {
        name: row.isExpanded ? navigation_down_arrow_default : navigation_right_arrow_default,
        style: tableGroupExpandCollapseIcon
      })
    }), cell.render(RenderColumnTypes.Cell)]
  });
};

// node_modules/@ui5/webcomponents-react/dist/components/AnalyticalTable/defaults/Column/PopIn.js
var import_react_table = __toESM(require_react_table(), 1);
var import_jsx_runtime145 = __toESM(require_jsx_runtime(), 1);
var PopIn = (instance) => {
  var _a;
  const {
    state,
    contentToRender,
    cell,
    row,
    internalRowHeight,
    webComponentsReactProperties: {
      classes: classNames32
    }
  } = instance;
  return (0, import_jsx_runtime145.jsxs)(FlexBox, {
    direction: FlexBoxDirection.Column,
    className: classNames32.popInContainer,
    children: [(0, import_jsx_runtime145.jsx)(FlexBox, {
      alignItems: contentToRender !== RenderColumnTypes.Grouped && contentToRender !== RenderColumnTypes.Expandable ? FlexBoxAlignItems.Start : FlexBoxAlignItems.Center,
      wrap: FlexBoxWrap.NoWrap,
      className: classNames32.defaultCell,
      style: {
        height: internalRowHeight
      },
      children: cell.render(contentToRender)
    }), contentToRender !== RenderColumnTypes.Grouped && ((_a = state.popInColumns) == null ? void 0 : _a.map((item2) => {
      const {
        popinDisplay,
        id,
        column
      } = item2;
      const popInInstanceProps = row.allCells.find((cell2) => cell2.column.id === item2.id);
      const renderHeader = () => {
        if (column.PopInHeader) {
          return typeof column.PopInHeader === "function" ? column.PopInHeader({
            ...instance,
            ...popInInstanceProps
          }) : column.PopInHeader;
        }
        return typeof column.Header === "function" ? (0, import_react_table.makeRenderer)({
          ...instance,
          ...popInInstanceProps
        }, column)(column.Header) : column.Header;
      };
      const renderCell = () => {
        if (column == null ? void 0 : column.Cell) {
          const cell2 = column.Cell;
          if (typeof cell2 === "string") {
            return (0, import_jsx_runtime145.jsx)(Text3, {
              maxLines: 1,
              title: cell2,
              children: cell2
            });
          }
          return (0, import_react_table.makeRenderer)({
            ...instance,
            ...popInInstanceProps,
            isPopIn: true
          }, column)(column.Cell);
        }
        return (popInInstanceProps == null ? void 0 : popInInstanceProps.value) ? (0, import_jsx_runtime145.jsx)(Text3, {
          maxLines: 1,
          title: popInInstanceProps.value,
          children: popInInstanceProps.value
        }) : null;
      };
      return (0, import_jsx_runtime145.jsxs)(FlexBox, {
        direction: popinDisplay === AnalyticalTablePopinDisplay.Inline ? FlexBoxDirection.Row : FlexBoxDirection.Column,
        className: popinDisplay === AnalyticalTablePopinDisplay.Inline ? classNames32.gap : void 0,
        children: [popinDisplay !== AnalyticalTablePopinDisplay.WithoutHeader && (column == null ? void 0 : column.Header) && (0, import_jsx_runtime145.jsxs)("div", {
          className: classNames32.popInHeader,
          "data-component-name": "AnalyticalTablePopinHeaderContainer",
          children: [renderHeader(), ":"]
        }), (0, import_jsx_runtime145.jsx)("div", {
          style: {
            height: internalRowHeight
          },
          children: popInInstanceProps && renderCell()
        })]
      }, id);
    }))]
  });
};
PopIn.displayName = "PopIn";

// node_modules/@ui5/webcomponents-react/dist/components/AnalyticalTable/defaults/Column/RepeatedValue.js
var RepeatedValue = () => null;

// node_modules/@ui5/webcomponents-react/dist/components/AnalyticalTable/defaults/Column/index.js
var DEFAULT_COLUMN_WIDTH = 60;
var DefaultColumn = {
  Filter: DefaultFilterComponent,
  minWidth: DEFAULT_COLUMN_WIDTH,
  vAlign: VerticalAlign.Middle,
  Grouped,
  Cell,
  Expandable,
  RepeatedValue,
  PopIn,
  Popover: ColumnHeaderModal,
  popinDisplay: AnalyticalTablePopinDisplay.Block
};

// node_modules/@ui5/webcomponents-react/dist/components/AnalyticalTable/defaults/LoadingComponent/TablePlaceholder.module.css.js
var styleData5 = `@layer ui5-webcomponents-react{@keyframes _placeholderShimmer_162vo_1{0%{background-position-x:100%}to{background-position-x:0}}._animation_162vo_10{animation-duration:2s;animation-fill-mode:forwards;animation-iteration-count:infinite;animation-name:_placeholderShimmer_162vo_1;animation-timing-function:linear;background-image:var(--sapContent_Placeholderloading_Gradient);background-repeat:no-repeat;background-size:1000px 104px}._row_162vo_21{align-items:center;display:flex;height:var(--_ui5wcr-AnalyticalTableRowHeight)}._cellContainer_162vo_27{box-sizing:border-box;display:flex;padding-inline:.25rem}._cell_162vo_27{border-radius:var(--sapElement_BorderCornerRadius);height:var(--sapFontSize);width:60%}}`;
var classNames5 = {
  "animation": "_animation_162vo_10",
  "placeholderShimmer": "_placeholderShimmer_162vo_1",
  "row": "_row_162vo_21",
  "cellContainer": "_cellContainer_162vo_27",
  "cell": "_cell_162vo_27"
};

// node_modules/@ui5/webcomponents-react/dist/components/AnalyticalTable/defaults/LoadingComponent/TablePlaceholder.js
var import_jsx_runtime146 = __toESM(require_jsx_runtime(), 1);
var getArrayOfLength = (len) => Array.from(Array(len).keys());
var TablePlaceholder = (props) => {
  const {
    columns: columns6,
    rows = 5,
    style
  } = props;
  useStylesheet(styleData5, TablePlaceholder.displayName);
  return (0, import_jsx_runtime146.jsx)("div", {
    style: {
      backgroundColor: ThemingParameters.sapList_Background,
      width: "100%",
      ...style
    },
    "data-component-name": "AnalyticalTableLoadingPlaceholder",
    children: getArrayOfLength(rows).map((_, index) => {
      return (0, import_jsx_runtime146.jsx)("div", {
        className: classNames5.row,
        children: columns6.map((col) => {
          return (0, import_jsx_runtime146.jsx)("div", {
            className: classNames5.cellContainer,
            style: {
              width: col.totalWidth,
              ...resolveCellAlignment(col)
            },
            children: (0, import_jsx_runtime146.jsx)("div", {
              className: clsx(classNames5.cell, classNames5.animation)
            })
          }, `row${index}-${col.id}`);
        })
      }, `row-${index}`);
    })
  });
};
TablePlaceholder.displayName = "TablePlaceholder";

// node_modules/@ui5/webcomponents-react/dist/components/AnalyticalTable/defaults/NoDataComponent/index.js
var import_jsx_runtime147 = __toESM(require_jsx_runtime(), 1);
var DefaultNoDataComponent = ({
  noDataText,
  className,
  style
}) => {
  return (0, import_jsx_runtime147.jsx)("div", {
    className,
    style,
    children: noDataText
  });
};

// node_modules/@ui5/webcomponents-react/dist/components/AnalyticalTable/hooks/useA11y.js
var setCellProps = (cellProps, {
  cell,
  instance
}) => {
  var _a, _b, _c, _d;
  const {
    column,
    row,
    value
  } = cell;
  const columnIndex = instance.visibleColumns.findIndex(({
    id
  }) => id === column.id);
  const {
    alwaysShowSubComponent,
    renderRowSubComponent,
    translatableTexts,
    selectionMode,
    selectionBehavior
  } = instance.webComponentsReactProperties;
  const updatedCellProps = {
    "aria-colindex": columnIndex + 1,
    role: "gridcell"
  };
  const RowSubComponent2 = typeof renderRowSubComponent === "function" ? renderRowSubComponent(row) : void 0;
  const rowIsExpandable = row.canExpand || RowSubComponent2 && !alwaysShowSubComponent;
  const userCols = instance.visibleColumns.filter(({
    id
  }) => id !== "__ui5wcr__internal_selection_column" && id !== "__ui5wcr__internal_highlight_column" && id !== "__ui5wcr__internal_navigation_column");
  const isFirstUserCol = ((_a = userCols[0]) == null ? void 0 : _a.id) === column.id || ((_b = userCols[0]) == null ? void 0 : _b.accessor) === column.accessor;
  updatedCellProps["data-is-first-column"] = isFirstUserCol;
  updatedCellProps["aria-label"] = column.headerLabel || (typeof column.Header === "string" ? column.Header : "");
  updatedCellProps["aria-label"] && (updatedCellProps["aria-label"] = `${updatedCellProps["aria-label"]} `);
  updatedCellProps["aria-label"] += value || value === 0 ? `${value} ` : "";
  if (isFirstUserCol && rowIsExpandable || row.isGrouped && row.canExpand) {
    updatedCellProps.onKeyDown = (_d = (_c = row.getToggleRowExpandedProps) == null ? void 0 : _c.call(row)) == null ? void 0 : _d.onKeyDown;
    let ariaLabel = "";
    if (row.isGrouped) {
      ariaLabel += translatableTexts.groupedA11yText + ",";
    }
    if (row.isExpanded) {
      updatedCellProps["aria-expanded"] = "true";
      ariaLabel += ` ${translatableTexts.collapseA11yText}`;
    } else {
      updatedCellProps["aria-expanded"] = "false";
      ariaLabel += ` ${translatableTexts.expandA11yText}`;
    }
    updatedCellProps["aria-label"] += ariaLabel;
  } else if (selectionMode !== AnalyticalTableSelectionMode.None && selectionBehavior !== AnalyticalTableSelectionBehavior.RowSelector && !row.isGrouped || column.id === "__ui5wcr__internal_selection_column") {
    if (row.isSelected) {
      updatedCellProps["aria-selected"] = "true";
      updatedCellProps["aria-label"] += ` ${translatableTexts.unselectA11yText}`;
    } else {
      updatedCellProps["aria-selected"] = "false";
      updatedCellProps["aria-label"] += ` ${translatableTexts.selectA11yText}`;
    }
  }
  const {
    cellLabel
  } = cell.column;
  if (typeof cellLabel === "function") {
    cell.cellLabel = updatedCellProps["aria-label"];
    updatedCellProps["aria-label"] = cellLabel({
      cell,
      instance
    });
  }
  return [cellProps, updatedCellProps];
};
var setHeaderProps = (headerProps3, {
  column,
  instance
}) => {
  const {
    translatableTexts,
    selectionMode
  } = instance.webComponentsReactProperties;
  if (!column) {
    return headerProps3;
  }
  const isFiltered = (column == null ? void 0 : column.filterValue) && (column == null ? void 0 : column.filterValue.length) > 0;
  const updatedProps = {};
  updatedProps["aria-label"] = column.headerLabel ?? (column.headerLabel = "");
  if (updatedProps["aria-label"]) {
    updatedProps["aria-label"] += " ";
  }
  if (column.isSorted) {
    updatedProps["aria-sort"] = column.isSortedDesc ? "descending" : "ascending";
  }
  if (isFiltered) {
    updatedProps["aria-label"] += translatableTexts.filteredA11yText;
  }
  if (column.isGrouped) {
    if (updatedProps["aria-label"]) {
      updatedProps["aria-label"] += ` ${translatableTexts.groupedA11yText}`;
    } else {
      updatedProps["aria-label"] += translatableTexts.groupedA11yText;
    }
  }
  if (selectionMode === AnalyticalTableSelectionMode.Multiple && column.id === "__ui5wcr__internal_selection_column") {
    updatedProps["aria-label"] += instance.isAllRowsSelected ? translatableTexts.deselectAllA11yText : translatableTexts.selectAllA11yText;
  }
  return [headerProps3, {
    isFiltered,
    ...updatedProps
  }];
};
var useA11y = (hooks) => {
  hooks.getCellProps.push(setCellProps);
  hooks.getHeaderProps.push(setHeaderProps);
};
useA11y.pluginName = "useA11y";

// node_modules/@ui5/webcomponents-react/dist/components/AnalyticalTable/hooks/useDynamicColumnWidths.js
var import_react21 = __toESM(require_react(), 1);
var ROW_SAMPLE_SIZE = 20;
var MAX_WIDTH = 700;
var CELL_PADDING_PX = 18;
function findLongestString(str1, str2) {
  if (typeof str1 !== "string" || typeof str2 !== "string") {
    return str1 || str2 || void 0;
  }
  return str1.length > str2.length ? str1 : str2;
}
function getContentPxAvg(rowSample, columnIdOrAccessor, uniqueId) {
  return rowSample.reduce((acc, item2) => {
    var _a;
    const dataPoint = (_a = item2.values) == null ? void 0 : _a[columnIdOrAccessor];
    let val = 0;
    if (dataPoint) {
      val = stringToPx(dataPoint, uniqueId) + CELL_PADDING_PX;
    }
    return acc + val;
  }, 0) / (rowSample.length || 1);
}
function stringToPx(dataPoint, id, isHeader = false) {
  const elementId = isHeader ? "scaleModeHelperHeader" : "scaleModeHelper";
  const ruler = document.getElementById(`${elementId}-${id}`);
  if (ruler) {
    ruler.textContent = `${dataPoint}`;
    return ruler.scrollWidth;
  }
  return 0;
}
var columnsDeps = (deps, {
  instance: {
    state,
    webComponentsReactProperties,
    visibleColumns: visibleColumns4,
    data,
    rows,
    columns: columns6
  }
}) => {
  const isLoadingPlaceholder = !(data == null ? void 0 : data.length) && webComponentsReactProperties.loading;
  const hasRows = (rows == null ? void 0 : rows.length) > 0;
  const colsEqual = (0, import_react21.useMemo)(() => {
    return visibleColumns4 == null ? void 0 : visibleColumns4.filter((col) => col.id !== "__ui5wcr__internal_selection_column" && col.id !== "__ui5wcr__internal_highlight_column" && col.id !== "__ui5wcr__internal_navigation_column").every((visCol) => {
      const id = visCol.id ?? visCol.accessor;
      return columns6.some((item2) => {
        return item2.accessor === id || item2.id === id;
      });
    });
  }, [visibleColumns4, columns6]);
  return [...deps, hasRows, colsEqual, visibleColumns4 == null ? void 0 : visibleColumns4.length, !state.tableColResized && state.tableClientWidth, state.hiddenColumns.length, webComponentsReactProperties.scaleWidthMode, isLoadingPlaceholder];
};
var smartColumns = (columns6, instance, hiddenColumns) => {
  const {
    rows,
    state,
    webComponentsReactProperties
  } = instance;
  const rowSample = rows.slice(0, ROW_SAMPLE_SIZE);
  const {
    tableClientWidth: totalWidth
  } = state;
  const visibleColumns4 = columns6.filter((column) => (column.isVisible ?? true) && !hiddenColumns.includes(column.id ?? column.accessor));
  const columnMeta = visibleColumns4.reduce((metadata, column) => {
    var _a, _b;
    const columnIdOrAccessor = column.id ?? column.accessor;
    if (column.id === "__ui5wcr__internal_selection_column" || column.id === "__ui5wcr__internal_highlight_column" || column.id === "__ui5wcr__internal_navigation_column") {
      metadata[columnIdOrAccessor] = {
        headerPx: column.width || column.minWidth || 60,
        contentPxAvg: 0
      };
      return metadata;
    }
    let headerPx, contentPxAvg;
    if ((_a = column.scaleWidthModeOptions) == null ? void 0 : _a.cellString) {
      contentPxAvg = stringToPx(column.scaleWidthModeOptions.cellString, webComponentsReactProperties.uniqueId) + CELL_PADDING_PX;
    } else {
      contentPxAvg = getContentPxAvg(rowSample, columnIdOrAccessor, webComponentsReactProperties.uniqueId);
    }
    if ((_b = column.scaleWidthModeOptions) == null ? void 0 : _b.headerString) {
      headerPx = Math.max(stringToPx(column.scaleWidthModeOptions.headerString, webComponentsReactProperties.uniqueId, true) + CELL_PADDING_PX, 60);
    } else {
      headerPx = typeof column.Header === "string" ? Math.max(stringToPx(column.Header, webComponentsReactProperties.uniqueId, true) + CELL_PADDING_PX, 60) : 60;
    }
    metadata[columnIdOrAccessor] = {
      headerPx,
      contentPxAvg
    };
    return metadata;
  }, {});
  let totalContentPxAvgPrio1 = 0;
  let totalNumberColPrio2 = 0;
  const reservedWidth = visibleColumns4.reduce((acc, column) => {
    const columnIdOrAccessor = column.id ?? column.accessor;
    const {
      contentPxAvg,
      headerPx
    } = columnMeta[columnIdOrAccessor];
    if (contentPxAvg > headerPx) {
      if (!column.minWidth && !column.width) {
        totalContentPxAvgPrio1 += columnMeta[columnIdOrAccessor].contentPxAvg;
        totalNumberColPrio2++;
        return acc;
      } else {
        return acc + Math.max(column.minWidth || 0, column.width || 0);
      }
    } else {
      if (!column.minWidth && !column.width) {
        totalNumberColPrio2++;
      }
      const max = Math.max(column.minWidth || 0, column.width || 0, headerPx);
      columnMeta[columnIdOrAccessor].headerDefinesWidth = true;
      return acc + max;
    }
  }, 0);
  const availableWidthPrio1 = totalWidth - reservedWidth;
  let availableWidthPrio2 = availableWidthPrio1;
  const visibleColumnsAdaptedPrio1 = visibleColumns4.map((column) => {
    const columnIdOrAccessor = column.id ?? column.accessor;
    const meta = columnMeta[columnIdOrAccessor];
    if (meta && !column.minWidth && !column.width && !meta.headerDefinesWidth) {
      let targetWidth;
      const {
        contentPxAvg,
        headerPx
      } = meta;
      if (availableWidthPrio1 > 0) {
        const factor = contentPxAvg / totalContentPxAvgPrio1;
        targetWidth = Math.max(Math.min(availableWidthPrio1 * factor, contentPxAvg), headerPx);
        availableWidthPrio2 -= targetWidth;
      }
      return {
        ...column,
        nextWidth: targetWidth || headerPx
      };
    }
    return column;
  });
  return visibleColumnsAdaptedPrio1.map((column) => {
    const columnIdOrAccessor = column.id ?? column.accessor;
    const meta = columnMeta[columnIdOrAccessor];
    const {
      headerPx
    } = meta;
    if (meta && !column.minWidth && !column.width) {
      let targetWidth = column.nextWidth || headerPx;
      if (availableWidthPrio2 > 0) {
        targetWidth = targetWidth + availableWidthPrio2 * (1 / totalNumberColPrio2);
      }
      return {
        ...column,
        width: targetWidth
      };
    } else {
      return {
        ...column,
        width: Math.max(column.width || 0, 60, headerPx)
      };
    }
  });
};
var columns2 = (columns6, {
  instance
}) => {
  if (!instance.state || !instance.rows) {
    return columns6;
  }
  const {
    rows,
    state
  } = instance;
  const {
    hiddenColumns,
    tableClientWidth: totalWidth
  } = state;
  const {
    scaleWidthMode,
    loading,
    uniqueId
  } = instance.webComponentsReactProperties;
  if (columns6.length === 0 || !totalWidth || !AnalyticalTableScaleWidthMode[scaleWidthMode]) {
    return columns6;
  }
  const visibleColumns4 = instance.visibleColumns.map((visCol) => {
    const column = columns6.find((col) => {
      return col.id === visCol.id || col.accessor !== void 0 && visCol.id !== void 0 && col.accessor === visCol.id;
    });
    if (column) {
      return column;
    }
    return column ?? false;
  }).filter(Boolean);
  if (scaleWidthMode === AnalyticalTableScaleWidthMode.Smart) {
    return smartColumns(columns6, instance, hiddenColumns);
  }
  const calculateDefaultTableWidth = () => {
    const columnsWithWidthProperties = visibleColumns4.filter((column) => column.width ?? column.minWidth ?? column.maxWidth ?? false).map((column) => ({
      accessor: column.id ?? column.accessor,
      minWidth: column.minWidth,
      width: column.width,
      maxWidth: column.maxWidth
    }));
    let availableWidth2 = totalWidth;
    let defaultColumnsCount = visibleColumns4.length;
    const columnsWithFixedWidth = columnsWithWidthProperties.map((column) => {
      const {
        width,
        minWidth,
        maxWidth,
        accessor
      } = column;
      if (width) {
        const acceptedWidth = accessor !== "__ui5wcr__internal_highlight_column" && accessor !== "__ui5wcr__internal_selection_column" && accessor !== "__ui5wcr__internal_navigation_column" && width < 60 ? 60 : width;
        availableWidth2 -= acceptedWidth;
        defaultColumnsCount--;
        return acceptedWidth;
      }
      const columnsWithMaxWidth = columnsWithWidthProperties.filter((item2) => item2.maxWidth);
      const aggregatedColumnsMaxWidth = columnsWithMaxWidth.reduce((acc, cur) => acc + cur.maxWidth, 0);
      const aggregatedColumnsMinWidth = columnsWithWidthProperties.filter((item2) => item2.minWidth && !item2.maxWidth).reduce((acc, cur) => acc + cur.minWidth, 0);
      if (minWidth > availableWidth2 / defaultColumnsCount) {
        if (availableWidth2 - aggregatedColumnsMaxWidth > aggregatedColumnsMinWidth + (visibleColumns4.length - columnsWithWidthProperties.length) * 60) {
          if (minWidth > (availableWidth2 - aggregatedColumnsMaxWidth) / columnsWithMaxWidth.length) {
            availableWidth2 -= minWidth;
            defaultColumnsCount--;
            return minWidth;
          }
          return false;
        }
        availableWidth2 -= minWidth;
        defaultColumnsCount--;
        return minWidth;
      }
      if (maxWidth < availableWidth2 / defaultColumnsCount) {
        availableWidth2 -= maxWidth;
        defaultColumnsCount--;
        return maxWidth;
      }
      return false;
    }).filter(Boolean);
    const fixedWidth = columnsWithFixedWidth.reduce((acc, val) => acc + val, 0);
    if (visibleColumns4.length > 0 && totalWidth > 0) {
      if (visibleColumns4.length === columnsWithFixedWidth.length) {
        return fixedWidth / visibleColumns4.length;
      }
      if (totalWidth >= fixedWidth + defaultColumnsCount * DEFAULT_COLUMN_WIDTH) {
        return (totalWidth - fixedWidth) / defaultColumnsCount;
      }
    }
    return DEFAULT_COLUMN_WIDTH;
  };
  const hasData = instance.data.length > 0;
  if (scaleWidthMode === AnalyticalTableScaleWidthMode.Default || !hasData && loading) {
    const defaultWidth = calculateDefaultTableWidth();
    return columns6.map((column) => ({
      ...column,
      width: column.width ?? defaultWidth
    }));
  }
  const rowSample = rows.slice(0, ROW_SAMPLE_SIZE);
  const columnMeta = visibleColumns4.reduce((acc, column) => {
    var _a, _b;
    const columnIdOrAccessor = column.id ?? column.accessor;
    if (column.id === "__ui5wcr__internal_selection_column" || column.id === "__ui5wcr__internal_highlight_column" || column.id === "__ui5wcr__internal_navigation_column") {
      acc[columnIdOrAccessor] = {
        minHeaderWidth: column.width,
        fullWidth: column.width
      };
      return acc;
    }
    const smartWidth = findLongestString((_a = column.scaleWidthModeOptions) == null ? void 0 : _a.headerString, (_b = column.scaleWidthModeOptions) == null ? void 0 : _b.cellString);
    if (smartWidth) {
      const width = Math.max(stringToPx(smartWidth, uniqueId) + CELL_PADDING_PX, 60);
      acc[columnIdOrAccessor] = {
        minHeaderWidth: width,
        fullWidth: width
      };
      return acc;
    }
    const minHeaderWidth = typeof column.Header === "string" ? stringToPx(column.Header, uniqueId, true) + CELL_PADDING_PX : DEFAULT_COLUMN_WIDTH;
    acc[columnIdOrAccessor] = {
      minHeaderWidth,
      fullWidth: Math.max(minHeaderWidth, getContentPxAvg(rowSample, columnIdOrAccessor, uniqueId))
    };
    return acc;
  }, {});
  let reservedWidth = visibleColumns4.reduce((acc, column) => {
    const {
      minHeaderWidth,
      fullWidth
    } = columnMeta[column.id ?? column.accessor];
    return acc + Math.max(column.minWidth || 0, column.width || 0, minHeaderWidth || 0, fullWidth) || 0;
  }, 0);
  let availableWidth = totalWidth - reservedWidth;
  if (availableWidth > 0) {
    let notReservedCount = 0;
    reservedWidth = visibleColumns4.reduce((acc, column) => {
      const reserved = Math.max(column.minWidth || 0, column.width || 0) || 0;
      if (!reserved) {
        notReservedCount++;
      }
      return acc + reserved;
    }, 0);
    availableWidth = totalWidth - reservedWidth;
    return columns6.map((column) => {
      const isColumnVisible = (column.isVisible ?? true) && !hiddenColumns.includes(column.id ?? column.accessor);
      const meta = columnMeta[column.id ?? column.accessor];
      if (isColumnVisible && meta) {
        const {
          minHeaderWidth
        } = meta;
        const targetWidth = availableWidth / notReservedCount;
        return {
          ...column,
          width: column.width ?? Math.min(targetWidth, MAX_WIDTH),
          minWidth: column.minWidth ?? minHeaderWidth
        };
      }
      return column;
    });
  }
  return columns6.map((column) => {
    const isColumnVisible = (column.isVisible ?? true) && !hiddenColumns.includes(column.id ?? column.accessor);
    const meta = columnMeta[column.id ?? column.accessor];
    if (isColumnVisible && meta) {
      const {
        fullWidth
      } = meta;
      return {
        ...column,
        width: column.width ?? fullWidth,
        maxWidth: column.maxWidth ?? MAX_WIDTH
      };
    }
    return column;
  });
};
var useDynamicColumnWidths = (hooks) => {
  hooks.columns.push(columns2);
  hooks.columnsDeps.push(columnsDeps);
};

// node_modules/@ui5/webcomponents-react/dist/components/AnalyticalTable/hooks/useAutoResize.js
function setResizerProps(props, {
  instance,
  header: header3
}) {
  const {
    dispatch,
    virtualRowsRange,
    rows,
    webComponentsReactProperties
  } = instance;
  const {
    onAutoResize,
    tableRef,
    isTreeTable
  } = webComponentsReactProperties;
  const {
    autoResizable,
    id: accessor
  } = header3;
  if (!document || !tableRef.current || !autoResizable || !rows.length || !virtualRowsRange) {
    return props;
  }
  return {
    ...props,
    onDoubleClick: (e) => {
      let largest = getMeasureMax(accessor, virtualRowsRange, tableRef.current, isTreeTable);
      if (largest === -1) {
        return;
      }
      largest = largest > DEFAULT_COLUMN_WIDTH ? largest : DEFAULT_COLUMN_WIDTH;
      if (typeof onAutoResize === "function") {
        onAutoResize(enrichEventWithDetails(e, {
          columnId: accessor,
          width: largest
        }));
      }
      if (e.defaultPrevented) {
        return;
      }
      dispatch({
        type: "AUTO_RESIZE",
        payload: {
          [accessor]: largest
        }
      });
    }
  };
}
function calculateContentWidth(cell) {
  let contentWidth = 0;
  Array.from(cell.children).forEach((child) => {
    contentWidth += child.scrollWidth;
  });
  return contentWidth;
}
function getMeasureMax(accessor, virtualRowsRange, tableNode, isTreeTable) {
  let maxWidth = 0;
  let cellWithMaxWidthContent = null;
  function recursiveFindMaxWidth(row, accessor2, remainingRows) {
    if (!row || remainingRows === 0) {
      return;
    }
    const cellNode = row.querySelector(`[data-column-id-cell="${accessor2}"]`);
    const cellTextElement = cellNode == null ? void 0 : cellNode.querySelector(`[data-column-id-cell-text="${accessor2}"]`);
    if (cellTextElement) {
      if (isTreeTable && (cellNode == null ? void 0 : cellNode.dataset.isFirstColumn)) {
        const cellWidth = calculateContentWidth(cellNode);
        if (maxWidth < cellWidth) {
          maxWidth = cellWidth;
          cellWithMaxWidthContent = false;
        }
      } else {
        const currWidth = cellTextElement.scrollWidth;
        if (maxWidth < currWidth) {
          maxWidth = currWidth;
          cellWithMaxWidthContent = cellNode;
        }
      }
    }
    if (cellWithMaxWidthContent === null) {
      cellWithMaxWidthContent = cellNode;
    }
    recursiveFindMaxWidth(row.nextElementSibling, accessor2, remainingRows - 1);
  }
  const firstRow = tableNode.querySelector(`[data-virtual-row-index="${virtualRowsRange.startIndex}"]`);
  recursiveFindMaxWidth(firstRow, accessor, virtualRowsRange.endIndex - virtualRowsRange.startIndex);
  if (cellWithMaxWidthContent === false) {
    return Math.ceil(
      maxWidth + CELL_PADDING_PX + 2
      /* account for rounding error and border */
    );
  }
  if (!cellWithMaxWidthContent) {
    return -1;
  }
  return Math.ceil(
    calculateContentWidth(cellWithMaxWidthContent) + CELL_PADDING_PX + 2
    /* account for rounding error and border */
  );
}
var setCellProps2 = (props, {
  cell: {
    column: {
      id
    }
  }
}) => {
  return [props, {
    ["data-column-id-cell"]: id
  }];
};
var useAutoResize = (hooks) => {
  hooks.getResizerProps.push(setResizerProps);
  hooks.getCellProps.push(setCellProps2);
};
useAutoResize.pluginName = "useAutoResize";

// node_modules/@ui5/webcomponents-react/dist/components/AnalyticalTable/hooks/useDragAndDrop.js
var getColumnId = (column) => {
  return typeof column.accessor === "string" ? column.accessor : column.id;
};
function getHeaderProps(props, {
  instance: {
    dispatch,
    state,
    columns: columns6,
    setColumnOrder,
    webComponentsReactProperties
  }
}) {
  const {
    columnOrder,
    columnResizing,
    isRtl,
    dndColumn
  } = state;
  const {
    onColumnsReorder
  } = webComponentsReactProperties;
  const handleDragStart = (e) => {
    if (columnResizing.isResizingColumn || !e.target.draggable) {
      e.preventDefault();
      return;
    }
    e.dataTransfer.setData("text", e.currentTarget.dataset.columnId);
  };
  const handleDragOver = (e) => {
    e.preventDefault();
  };
  const handleDragEnter = (e) => {
    dispatch({
      type: "COLUMN_DND_START",
      payload: e.currentTarget.dataset.columnId
    });
  };
  const handleOnDragEnd = () => {
    dispatch({
      type: "COLUMN_DND_END"
    });
  };
  const handleOnDrop = (e) => {
    dispatch({
      type: "COLUMN_DND_END"
    });
    const droppedColId = e.currentTarget.dataset.columnId;
    const draggedColId = e.dataTransfer.getData("text");
    if (droppedColId === draggedColId) return;
    const internalColumnOrder = columnOrder.length > 0 ? columnOrder : columns6.map((col) => getColumnId(col));
    const droppedColIdx = internalColumnOrder.findIndex((col) => col === droppedColId);
    const draggedColIdx = internalColumnOrder.findIndex((col) => col === draggedColId);
    const tempCols = [...internalColumnOrder];
    const targetIndex = droppedColIdx > draggedColIdx ? isRtl ? droppedColIdx : droppedColIdx - 1 : droppedColIdx;
    tempCols.splice(targetIndex, 0, tempCols.splice(draggedColIdx, 1)[0]);
    setColumnOrder(tempCols);
    if (typeof onColumnsReorder === "function") {
      const columnsNewOrder = tempCols.map((tempColId) => columns6.find((col) => getColumnId(col) === tempColId));
      onColumnsReorder(enrichEventWithDetails(e, {
        columnsNewOrder,
        column: columns6[draggedColIdx]
      }));
    }
  };
  return [props, {
    onDragStart: handleDragStart,
    onDragEnter: handleDragEnter,
    onDragOver: handleDragOver,
    onDragEnd: handleOnDragEnd,
    onDrop: handleOnDrop,
    dragOver: dndColumn === props.id
  }];
}
function useColumnDragAndDrop(hooks) {
  hooks.getHeaderProps.push(getHeaderProps);
}

// node_modules/@ui5/webcomponents-react/dist/components/AnalyticalTable/hooks/useKeyboardNavigation.js
var import_react22 = __toESM(require_react(), 1);
var import_react_table2 = __toESM(require_react_table(), 1);
var CELL_DATA_ATTRIBUTES = ["visibleColumnIndex", "columnIndex", "rowIndex", "visibleRowIndex"];
var getFirstVisibleCell = (target, currentlyFocusedCell, noData) => {
  if (target.dataset.componentName === "AnalyticalTableContainer" && target.querySelector('[data-component-name="AnalyticalTableBodyScrollableContainer"]')) {
    const rowElements = target.querySelector('[data-component-name="AnalyticalTableBodyScrollableContainer"]').children;
    const middleRowCell = target.querySelector(`div[data-visible-column-index="0"][data-visible-row-index="${Math.round(rowElements.length / 2)}"]`);
    middleRowCell == null ? void 0 : middleRowCell.focus({
      preventScroll: true
    });
  } else {
    const firstVisibleCell = noData ? target.querySelector(`div[data-visible-column-index="0"][data-visible-row-index="0"]`) : target.querySelector(`div[data-visible-column-index="0"][data-visible-row-index="1"]`);
    if (firstVisibleCell) {
      firstVisibleCell.tabIndex = 0;
      firstVisibleCell.focus();
      currentlyFocusedCell.current = firstVisibleCell;
    }
  }
};
function recursiveSubComponentElementSearch(element) {
  if (!element.parentElement) {
    return null;
  }
  if (element == null ? void 0 : element.parentElement.dataset.subcomponent) {
    return element.parentElement;
  }
  return recursiveSubComponentElementSearch(element.parentElement);
}
var findParentCell = (target) => {
  if (target === void 0 || target === null) return;
  if (target.dataset.rowIndex !== void 0 && target.dataset.columnIndex !== void 0 || target.dataset.rowIndexSub !== void 0 && target.dataset.columnIndexSub !== void 0) {
    return target;
  } else {
    return findParentCell(target.parentElement);
  }
};
var setFocus = (currentlyFocusedCell, nextElement) => {
  currentlyFocusedCell.current.tabIndex = -1;
  if (nextElement) {
    nextElement.tabIndex = 0;
    nextElement.focus();
    currentlyFocusedCell.current = nextElement;
  }
};
var navigateFromActiveSubCompItem = (currentlyFocusedCell, e) => {
  setFocus(currentlyFocusedCell, recursiveSubComponentElementSearch(e.target));
};
var useGetTableProps = (tableProps, {
  instance: {
    webComponentsReactProperties,
    data,
    columns: columns6,
    state
  }
}) => {
  const {
    showOverlay,
    tableRef
  } = webComponentsReactProperties;
  const currentlyFocusedCell = (0, import_react22.useRef)(null);
  const noData = data.length === 0;
  (0, import_react22.useEffect)(() => {
    if (showOverlay && currentlyFocusedCell.current) {
      currentlyFocusedCell.current.tabIndex = -1;
      currentlyFocusedCell.current = null;
    }
  }, [showOverlay]);
  const onTableBlur = (e) => {
    if (e.target.tagName === "UI5-LI" || e.target.tagName === "UI5-LI-CUSTOM") {
      currentlyFocusedCell.current = null;
    }
  };
  (0, import_react22.useEffect)(() => {
    if (!showOverlay && data && columns6 && currentlyFocusedCell.current && tableRef.current && tableRef.current.tabIndex !== 0 && !tableRef.current.contains(currentlyFocusedCell.current)) {
      currentlyFocusedCell.current = null;
      tableRef.current.tabIndex = 0;
    }
  }, [data, columns6, showOverlay]);
  const onTableFocus = (0, import_react22.useCallback)((e) => {
    const {
      dataset
    } = e.target;
    if (dataset.emptyRowCell === "true" || Object.prototype.hasOwnProperty.call(dataset, "subcomponentActiveElement") || // todo: with the new popover API of ui5wc this might not be necessary anymore
    dataset.componentName === "ATHeaderPopoverList" || dataset.componentName === "ATHeaderPopover") {
      return;
    }
    if (e.target.dataset.subcomponent) {
      e.target.tabIndex = 0;
      e.target.focus();
      currentlyFocusedCell.current = e.target;
      return;
    }
    const isFirstCellAvailable = e.target.querySelector('div[data-column-index="0"][data-row-index="1"]');
    if (e.target.dataset.componentName === "AnalyticalTableContainer") {
      e.target.tabIndex = -1;
      if (currentlyFocusedCell.current) {
        const {
          dataset: dataset2
        } = currentlyFocusedCell.current;
        const rowIndex = parseInt(dataset2.rowIndex ?? dataset2.rowIndexSub, 10);
        const columnIndex = parseInt(dataset2.columnIndex ?? dataset2.columnIndexSub, 10);
        if (e.target.querySelector(`div[data-column-index="${columnIndex}"][data-row-index="${rowIndex}"]`) || e.target.querySelector(`div[data-column-index-sub="${columnIndex}"][data-row-index-sub="${rowIndex}"]`)) {
          currentlyFocusedCell.current.tabIndex = 0;
          currentlyFocusedCell.current.focus({
            preventScroll: true
          });
        } else {
          getFirstVisibleCell(e.target, currentlyFocusedCell, noData);
        }
      } else if (isFirstCellAvailable) {
        const firstCell = e.target.querySelector('div[data-column-index]:not([data-column-id^="__ui5wcr__internal"][data-row-index="0"])');
        firstCell.tabIndex = 0;
        firstCell.focus({
          preventScroll: true
        });
        currentlyFocusedCell.current = firstCell;
      } else {
        getFirstVisibleCell(e.target, currentlyFocusedCell, noData);
      }
    } else {
      const tableCell = findParentCell(e.target);
      if (tableCell) {
        currentlyFocusedCell.current = tableCell;
      } else {
        getFirstVisibleCell(tableRef.current, currentlyFocusedCell, noData);
      }
    }
  }, [currentlyFocusedCell.current, tableRef.current, noData]);
  const onKeyboardNavigation = (0, import_react22.useCallback)((e) => {
    var _a, _b, _c, _d, _e, _f, _g;
    const {
      isRtl
    } = state;
    const isActiveItemInSubComponent = Object.prototype.hasOwnProperty.call(e.target.dataset, "subcomponentActiveElement");
    if (!currentlyFocusedCell.current && CELL_DATA_ATTRIBUTES.every((item2) => Object.keys(e.target.dataset).includes(item2))) {
      currentlyFocusedCell.current = e.target;
    }
    if (currentlyFocusedCell.current) {
      const columnIndex = parseInt(currentlyFocusedCell.current.dataset.columnIndex ?? "0", 10);
      const rowIndex = parseInt(currentlyFocusedCell.current.dataset.rowIndex ?? currentlyFocusedCell.current.dataset.subcomponentRowIndex, 10);
      switch (e.key) {
        case "End": {
          e.preventDefault();
          const visibleColumns4 = tableRef.current.querySelector(`div[data-component-name="AnalyticalTableHeaderRow"]`).children;
          const lastVisibleColumn = Array.from(visibleColumns4).slice(0).reduceRight((_, cur, index, arr) => {
            var _a2, _b2;
            const columnIndex2 = parseInt((_b2 = (_a2 = cur.children) == null ? void 0 : _a2[0]) == null ? void 0 : _b2.dataset.columnIndex, 10);
            if (!isNaN(columnIndex2)) {
              arr.length = 0;
              return columnIndex2;
            }
            return 0;
          }, 0);
          const newElement = tableRef.current.querySelector(`div[data-visible-column-index="${lastVisibleColumn}"][data-row-index="${rowIndex}"]`);
          setFocus(currentlyFocusedCell, newElement);
          break;
        }
        case "Home": {
          e.preventDefault();
          const newElement = tableRef.current.querySelector(`div[data-visible-column-index="0"][data-row-index="${rowIndex}"]`);
          setFocus(currentlyFocusedCell, newElement);
          break;
        }
        case "PageDown": {
          e.preventDefault();
          if (currentlyFocusedCell.current.dataset.rowIndex === "0") {
            const newElement = tableRef.current.querySelector(`div[data-column-index="${columnIndex}"][data-row-index="${rowIndex + 1}"]`);
            setFocus(currentlyFocusedCell, newElement);
          } else {
            const lastVisibleRow = (_b = (_a = tableRef.current.querySelector(`div[data-component-name="AnalyticalTableBody"]`)) == null ? void 0 : _a.children) == null ? void 0 : _b[0].children.length;
            const newElement = tableRef.current.querySelector(`div[data-column-index="${columnIndex}"][data-visible-row-index="${lastVisibleRow}"]`);
            setFocus(currentlyFocusedCell, newElement);
          }
          break;
        }
        case "PageUp": {
          e.preventDefault();
          if (currentlyFocusedCell.current.dataset.rowIndex <= "1") {
            const newElement = tableRef.current.querySelector(`div[data-column-index="${columnIndex}"][data-row-index="0"]`);
            setFocus(currentlyFocusedCell, newElement);
          } else {
            const newElement = tableRef.current.querySelector(`div[data-column-index="${columnIndex}"][data-visible-row-index="1"]`);
            setFocus(currentlyFocusedCell, newElement);
          }
          break;
        }
        case "ArrowRight": {
          e.preventDefault();
          if (isActiveItemInSubComponent) {
            navigateFromActiveSubCompItem(currentlyFocusedCell, e);
            return;
          }
          const newElement = tableRef.current.querySelector(`div[data-column-index="${columnIndex + (isRtl ? -1 : 1)}"][data-row-index="${rowIndex}"]`);
          if (newElement) {
            setFocus(currentlyFocusedCell, newElement);
            newElement.scrollIntoView({
              block: "nearest"
            });
          }
          break;
        }
        case "ArrowLeft": {
          e.preventDefault();
          if (isActiveItemInSubComponent) {
            navigateFromActiveSubCompItem(currentlyFocusedCell, e);
            return;
          }
          const newElement = tableRef.current.querySelector(`div[data-column-index="${columnIndex - (isRtl ? -1 : 1)}"][data-row-index="${rowIndex}"]`);
          if (newElement) {
            setFocus(currentlyFocusedCell, newElement);
            newElement.scrollIntoView({
              block: "nearest"
            });
          }
          break;
        }
        case "ArrowDown": {
          e.preventDefault();
          if (isActiveItemInSubComponent) {
            navigateFromActiveSubCompItem(currentlyFocusedCell, e);
            return;
          }
          const parent = currentlyFocusedCell.current.parentElement;
          const firstChildOfParent = (_c = parent == null ? void 0 : parent.children) == null ? void 0 : _c[0];
          const hasSubcomponent = (_d = firstChildOfParent == null ? void 0 : firstChildOfParent.dataset) == null ? void 0 : _d.subcomponent;
          const newElement = tableRef.current.querySelector(`div[data-column-index="${columnIndex}"][data-row-index="${rowIndex + 1}"]`);
          if (hasSubcomponent && !((_f = (_e = currentlyFocusedCell.current) == null ? void 0 : _e.dataset) == null ? void 0 : _f.subcomponent)) {
            currentlyFocusedCell.current.tabIndex = -1;
            firstChildOfParent.tabIndex = 0;
            firstChildOfParent.dataset.rowIndexSub = `${rowIndex}`;
            firstChildOfParent.dataset.columnIndexSub = `${columnIndex}`;
            firstChildOfParent.focus();
            currentlyFocusedCell.current = firstChildOfParent;
          } else if (newElement) {
            setFocus(currentlyFocusedCell, newElement);
          }
          break;
        }
        case "ArrowUp": {
          e.preventDefault();
          if (isActiveItemInSubComponent) {
            navigateFromActiveSubCompItem(currentlyFocusedCell, e);
            return;
          }
          let prevRowIndex = rowIndex - 1;
          const isSubComponent = e.target.dataset.subcomponent;
          if (isSubComponent) {
            prevRowIndex++;
          }
          const previousRowCell = tableRef.current.querySelector(`div[data-column-index="${columnIndex}"][data-row-index="${prevRowIndex}"]`);
          const firstChildPrevRow = previousRowCell == null ? void 0 : previousRowCell.parentElement.children[0];
          const hasSubcomponent = (_g = firstChildPrevRow == null ? void 0 : firstChildPrevRow.dataset) == null ? void 0 : _g.subcomponent;
          if (hasSubcomponent && !isSubComponent) {
            currentlyFocusedCell.current.tabIndex = -1;
            firstChildPrevRow.dataset.rowIndexSub = `${rowIndex - 1}`;
            firstChildPrevRow.dataset.columnIndexSub = `${columnIndex}`;
            firstChildPrevRow.tabIndex = 0;
            firstChildPrevRow.focus();
            currentlyFocusedCell.current = firstChildPrevRow;
          } else if (previousRowCell) {
            setFocus(currentlyFocusedCell, previousRowCell);
          }
          break;
        }
      }
    }
  }, [currentlyFocusedCell.current, tableRef.current, state == null ? void 0 : state.isRtl]);
  if (showOverlay) {
    return tableProps;
  }
  return [tableProps, {
    onFocus: onTableFocus,
    onKeyDown: onKeyboardNavigation,
    onBlur: onTableBlur
  }];
};
function getPayload(e, column) {
  e.preventDefault();
  e.stopPropagation();
  const clientX = e.target.getBoundingClientRect().x + e.target.getBoundingClientRect().width;
  const columnId = column.id;
  const columnWidth = column.totalWidth;
  const headersToResize = getLeafHeaders(column);
  const headerIdWidths = headersToResize.map((d) => [d.id, d.totalWidth]);
  return {
    clientX,
    columnId,
    columnWidth,
    headerIdWidths
  };
}
var setHeaderProps2 = (headerProps3, {
  instance: {
    dispatch
  },
  column
}) => {
  const handleKeyDown = (e) => {
    if (typeof headerProps3.onKeyDown === "function") {
      headerProps3.onKeyDown(e);
    }
    if (e.nativeEvent.shiftKey) {
      if (e.key === "ArrowRight") {
        const payload = getPayload(e, column);
        dispatch({
          type: import_react_table2.actions.columnStartResizing,
          ...payload
        });
        dispatch({
          type: import_react_table2.actions.columnResizing,
          clientX: payload.clientX + 16
        });
        dispatch({
          type: import_react_table2.actions.columnDoneResizing
        });
        return;
      }
      if (e.key === "ArrowLeft") {
        const payload = getPayload(e, column);
        dispatch({
          type: import_react_table2.actions.columnStartResizing,
          ...payload
        });
        dispatch({
          type: import_react_table2.actions.columnResizing,
          clientX: payload.clientX - 16
        });
        dispatch({
          type: import_react_table2.actions.columnDoneResizing
        });
        return;
      }
    }
  };
  return [headerProps3, {
    onKeyDown: handleKeyDown
  }];
};
var useKeyboardNavigation = (hooks) => {
  hooks.getTableProps.push(useGetTableProps);
  hooks.getHeaderProps.push(setHeaderProps2);
};

// node_modules/@ui5/webcomponents-react/dist/components/AnalyticalTable/hooks/usePopIn.js
var popInVisibleColumnsDeps = (deps, {
  instance: {
    state
  }
}) => [...deps, state.tableClientWidth];
var popInVisibleColumns = (cols, {
  instance
}) => {
  const {
    state,
    dispatch
  } = instance;
  const tableClientWidth = state.isScrollable ? (state == null ? void 0 : state.tableClientWidth) + 13 : state == null ? void 0 : state.tableClientWidth;
  const popInColumns = cols.filter((item2) => {
    return item2.responsivePopIn && tableClientWidth < item2.responsiveMinWidth;
  }).map((item2) => ({
    id: item2.id ?? item2.accessor,
    column: item2,
    // initially visibleColumns don't include the defaults
    popinDisplay: item2.popinDisplay || AnalyticalTablePopinDisplay.Block
  }));
  dispatch({
    type: "SET_POPIN_COLUMNS",
    payload: popInColumns
  });
  return cols.filter((col) => !popInColumns.some((item2) => item2.id === (col.id ?? col.accessor)) && (Object.prototype.hasOwnProperty.call(col, "responsiveMinWidth") ? !tableClientWidth || tableClientWidth >= col.responsiveMinWidth : true));
};
var usePopIn = (hooks) => {
  hooks.visibleColumns.push(popInVisibleColumns);
  hooks.visibleColumnsDeps.push(popInVisibleColumnsDeps);
};
usePopIn.pluginName = "usePopIn";

// node_modules/@ui5/webcomponents-react/dist/components/AnalyticalTable/hooks/useResizeColumnsConfig.js
var useGetResizerProps = (props) => {
  return {
    ...props,
    onMouseDown: (e) => {
      e.preventDefault();
      props.onMouseDown(e);
    }
  };
};
var useResizeColumnsConfig = (hooks) => {
  hooks.getResizerProps.push(useGetResizerProps);
};
useResizeColumnsConfig.pluginName = "useResizeColumnsConfig";

// node_modules/@ui5/webcomponents-react/dist/components/AnalyticalTable/hooks/useRowHighlight.js
var import_jsx_runtime148 = __toESM(require_jsx_runtime(), 1);
var baseStyles = {
  width: "100%",
  // border
  height: "calc(100% - 1px)",
  alignSelf: "start"
};
var HighlightColors = {
  ...ValueState_default,
  ...IndicationColor,
  None: void 0
};
var Header = () => (0, import_jsx_runtime148.jsx)("div", {
  style: {
    width: "6px"
  }
});
var Cell2 = (instance) => {
  const {
    cell,
    webComponentsReactProperties
  } = instance;
  const styleClass = HighlightColors[cell == null ? void 0 : cell.value] ? webComponentsReactProperties.classes[HighlightColors[cell.value].toLowerCase()] : void 0;
  return (0, import_jsx_runtime148.jsx)("div", {
    style: baseStyles,
    className: styleClass,
    "data-component-name": "AnalyticalTableHighlightCell"
  });
};
var columnsDeps2 = (deps, {
  instance: {
    webComponentsReactProperties
  }
}) => {
  return [...deps, webComponentsReactProperties.withRowHighlight, webComponentsReactProperties.highlightField];
};
var visibleColumnsDeps = (deps, {
  instance
}) => [...deps, instance.webComponentsReactProperties.withRowHighlight];
var visibleColumns = (currentVisibleColumns, {
  instance: {
    webComponentsReactProperties
  }
}) => {
  if (!webComponentsReactProperties.withRowHighlight) {
    return currentVisibleColumns.filter(({
      id
    }) => id !== "__ui5wcr__internal_highlight_column");
  }
  const highlightColumn = currentVisibleColumns.find(({
    id
  }) => id === "__ui5wcr__internal_highlight_column");
  return [highlightColumn, ...currentVisibleColumns.filter(({
    id
  }) => id !== "__ui5wcr__internal_highlight_column")];
};
var columns3 = (currentColumns, {
  instance
}) => {
  const {
    withRowHighlight,
    highlightField
  } = instance.webComponentsReactProperties;
  if (!withRowHighlight) {
    return currentColumns;
  }
  return [{
    id: "__ui5wcr__internal_highlight_column",
    accessor: highlightField,
    disableFilters: true,
    disableSortBy: true,
    disableGroupBy: true,
    disableResizing: true,
    disableDragAndDrop: true,
    width: 6,
    minWidth: 6,
    maxWidth: 6,
    Header,
    Cell: Cell2
  }, ...currentColumns];
};
var useRowHighlight = (hooks) => {
  hooks.columns.push(columns3);
  hooks.columnsDeps.push(columnsDeps2);
  hooks.visibleColumnsDeps.push(visibleColumnsDeps);
  hooks.visibleColumns.push(visibleColumns);
};
useRowHighlight.pluginName = "useRowHighlight";

// node_modules/@ui5/webcomponents-react/dist/components/AnalyticalTable/hooks/useRowNavigationIndicator.js
var import_jsx_runtime149 = __toESM(require_jsx_runtime(), 1);
var baseStyles2 = {
  width: "100%",
  height: "100%"
};
var Header2 = () => (0, import_jsx_runtime149.jsx)("div", {
  style: {
    width: "6px"
  }
});
var Cell3 = (instance) => {
  const {
    isNavigatedCell,
    webComponentsReactProperties
  } = instance;
  if (isNavigatedCell) {
    return (0, import_jsx_runtime149.jsx)("div", {
      style: baseStyles2,
      className: webComponentsReactProperties.classes.navigation,
      "data-component-name": "AnalyticalTableNavigatedCell"
    });
  }
  return (0, import_jsx_runtime149.jsx)("div", {
    style: baseStyles2
  });
};
var columnsDeps3 = (deps, {
  instance: {
    webComponentsReactProperties
  }
}) => {
  return [...deps, webComponentsReactProperties.withNavigationHighlight];
};
var visibleColumnsDeps2 = (deps, {
  instance
}) => [...deps, instance.webComponentsReactProperties.withNavigationHighlight];
var visibleColumns2 = (currentVisibleColumns, {
  instance: {
    webComponentsReactProperties
  }
}) => {
  if (!webComponentsReactProperties.withNavigationHighlight) {
    return currentVisibleColumns.filter(({
      id
    }) => id !== "__ui5wcr__internal_navigation_column");
  }
  const highlightColumn = currentVisibleColumns.find(({
    id
  }) => id === "__ui5wcr__internal_navigation_column");
  return [...currentVisibleColumns.filter(({
    id
  }) => id !== "__ui5wcr__internal_navigation_column"), highlightColumn];
};
var columns4 = (currentColumns, {
  instance
}) => {
  const {
    withNavigationHighlight
  } = instance.webComponentsReactProperties;
  if (!withNavigationHighlight) {
    return currentColumns;
  }
  return [...currentColumns, {
    id: "__ui5wcr__internal_navigation_column",
    disableFilters: true,
    disableSortBy: true,
    disableGroupBy: true,
    disableResizing: true,
    disableDragAndDrop: true,
    width: 6,
    minWidth: 6,
    maxWidth: 6,
    Header: Header2,
    Cell: Cell3
  }];
};
var useRowNavigationIndicators = (hooks) => {
  hooks.columns.push(columns4);
  hooks.columnsDeps.push(columnsDeps3);
  hooks.visibleColumnsDeps.push(visibleColumnsDeps2);
  hooks.visibleColumns.push(visibleColumns2);
};

// node_modules/@ui5/webcomponents-react/dist/components/AnalyticalTable/hooks/useRowSelectionColumn.js
var import_jsx_runtime150 = __toESM(require_jsx_runtime(), 1);
var customCheckBoxStyling2 = {
  verticalAlign: "middle",
  pointerEvents: "none",
  display: "block"
};
var Header3 = (instance) => {
  const {
    getToggleAllRowsSelectedProps,
    webComponentsReactProperties: {
      selectionMode,
      translatableTexts,
      classes
    }
  } = instance;
  if (selectionMode === AnalyticalTableSelectionMode.Single) {
    return null;
  }
  const checkBoxProps = getToggleAllRowsSelectedProps();
  return (0, import_jsx_runtime150.jsxs)(import_jsx_runtime150.Fragment, {
    children: [(0, import_jsx_runtime150.jsx)(CheckBox, {
      ...checkBoxProps,
      style: customCheckBoxStyling2,
      tabIndex: -1,
      onChange: void 0,
      checked: checkBoxProps.indeterminate ? true : checkBoxProps.checked,
      "aria-hidden": "true"
    }), (0, import_jsx_runtime150.jsx)("span", {
      className: classes.hiddenA11yText,
      children: translatableTexts.selectAllText
    })]
  });
};
var Cell4 = ({
  row,
  webComponentsReactProperties: {
    selectionMode
  }
}) => {
  if (selectionMode === AnalyticalTableSelectionMode.Single || row.isGrouped) {
    return null;
  }
  return (0, import_jsx_runtime150.jsx)(CheckBox, {
    ...row.getToggleRowSelectedProps(),
    tabIndex: -1,
    "aria-hidden": "true",
    style: customCheckBoxStyling2,
    "data-name": "internal_selection_column"
  });
};
function getNextSelectedRowIds(rowsById) {
  return Object.keys(rowsById).reduce((acc, cur) => {
    acc[cur] = true;
    return acc;
  }, {});
}
var headerProps2 = (props, {
  instance
}) => {
  const {
    webComponentsReactProperties: {
      onRowSelect,
      selectionMode,
      translatableTexts: {
        selectAllText,
        deselectAllText
      }
    },
    toggleAllRowsSelected,
    isAllRowsSelected,
    rowsById,
    preFilteredRowsById,
    dispatch,
    state: {
      filters,
      globalFilter
    }
  } = instance;
  const style = {
    ...props.style,
    cursor: "pointer",
    display: "flex",
    justifyContent: "center"
  };
  const isFiltered = (filters == null ? void 0 : filters.length) > 0 || !!globalFilter;
  const _rowsById = isFiltered ? preFilteredRowsById : rowsById;
  if (props.key === "header___ui5wcr__internal_selection_column" && selectionMode === AnalyticalTableSelectionMode.Multiple) {
    const onClick = (e) => {
      if (typeof props.onClick === "function") {
        props.onClick(e);
      }
      toggleAllRowsSelected(!isAllRowsSelected);
      if (typeof onRowSelect === "function") {
        if (isFiltered) {
          dispatch({
            type: "SELECT_ROW_CB",
            payload: {
              event: e,
              row: void 0,
              selectAll: true,
              fired: true
            }
          });
        } else {
          onRowSelect(
            // cannot use instance.selectedFlatRows here as it only returns all rows on the first level
            enrichEventWithDetails(e, {
              rowsById: _rowsById,
              allRowsSelected: !isAllRowsSelected,
              selectedRowIds: !isAllRowsSelected ? getNextSelectedRowIds(rowsById) : {}
            })
          );
        }
      }
    };
    const onKeyDown = (e) => {
      if (typeof props.onKeyDown === "function") {
        props.onKeyDown(e);
      }
      if (e.code === "Enter" || e.code === "Space") {
        e.preventDefault();
        if (e.code === "Enter") {
          onClick(e);
        }
      }
    };
    const onKeyUp = (e) => {
      if (typeof props.onKeyUp === "function") {
        props.onKeyUp(e);
      }
      if (e.code === "Space") {
        e.preventDefault();
        onClick(e);
      }
    };
    return [props, {
      onClick,
      onKeyDown,
      onKeyUp,
      style,
      title: isAllRowsSelected ? deselectAllText : selectAllText
    }];
  }
  return props;
};
var columnDeps = (deps, {
  instance: {
    webComponentsReactProperties
  }
}) => {
  return [...deps, webComponentsReactProperties.selectionMode, webComponentsReactProperties.selectionBehavior];
};
var visibleColumnsDeps3 = (deps, {
  instance
}) => [...deps, instance.webComponentsReactProperties.selectionMode, instance.webComponentsReactProperties.selectionBehavior];
var visibleColumns3 = (currentVisibleColumns, {
  instance: {
    webComponentsReactProperties
  }
}) => {
  if (webComponentsReactProperties.selectionMode === AnalyticalTableSelectionMode.None || webComponentsReactProperties.selectionBehavior === AnalyticalTableSelectionBehavior.RowOnly) {
    return currentVisibleColumns;
  }
  const selectionColumn = currentVisibleColumns.find(({
    id
  }) => id === "__ui5wcr__internal_selection_column");
  return [selectionColumn, ...currentVisibleColumns.filter(({
    id
  }) => id !== "__ui5wcr__internal_selection_column")];
};
var columns5 = (currentColumns, {
  instance
}) => {
  const {
    webComponentsReactProperties
  } = instance;
  const {
    selectionMode,
    selectionBehavior,
    tableRef
  } = webComponentsReactProperties;
  if (selectionMode === AnalyticalTableSelectionMode.None || selectionBehavior === AnalyticalTableSelectionBehavior.RowOnly) {
    return currentColumns;
  }
  const tableSelectionColumnWidth = tableRef.current && parseInt(getComputedStyle(tableRef.current).getPropertyValue(CssSizeVariablesNames.ui5WcrAnalyticalTableSelectionColumnWidth), 10);
  const selectionColumnWidth = !isNaN(tableSelectionColumnWidth) ? tableSelectionColumnWidth : 47;
  return [{
    id: "__ui5wcr__internal_selection_column",
    disableFilters: true,
    disableSortBy: true,
    disableGroupBy: true,
    disableResizing: true,
    disableDragAndDrop: true,
    width: selectionColumnWidth,
    minWidth: selectionColumnWidth,
    maxWidth: selectionColumnWidth,
    Header: Header3,
    Cell: Cell4
  }, ...currentColumns];
};
var getCellProps = (props, {
  cell
}) => {
  if (cell.column.id === "__ui5wcr__internal_selection_column") {
    const style = {
      ...props.style,
      cursor: "pointer",
      justifyContent: "center"
    };
    return [props, {
      style
    }];
  }
  return props;
};
var setToggleAllRowsSelectedProps = (props, {
  instance: {
    webComponentsReactProperties
  }
}) => {
  const {
    classes
  } = webComponentsReactProperties;
  return [props, {
    className: classes.checkBox,
    title: void 0
  }];
};
var setToggleRowSelectedProps = (props, {
  instance: {
    webComponentsReactProperties
  }
}) => {
  const {
    classes
  } = webComponentsReactProperties;
  return [props, {
    className: classes.checkBox,
    title: void 0
  }];
};
var useRowSelectionColumn = (hooks) => {
  hooks.getCellProps.push(getCellProps);
  hooks.getHeaderProps.push(headerProps2);
  hooks.getToggleRowSelectedProps.push(setToggleRowSelectedProps);
  hooks.getToggleAllRowsSelectedProps.push(setToggleAllRowsSelectedProps);
  hooks.columns.push(columns5);
  hooks.columnsDeps.push(columnDeps);
  hooks.visibleColumnsDeps.push(visibleColumnsDeps3);
  hooks.visibleColumns.push(visibleColumns3);
};
useRowSelectionColumn.pluginName = "useRowSelectionColumn";

// node_modules/@ui5/webcomponents-react/dist/components/AnalyticalTable/hooks/useSelectionChangeCallback.js
var import_react23 = __toESM(require_react(), 1);
var useSelectionChangeCallback = (hooks) => {
  hooks.useControlledState.push((state, {
    instance
  }) => {
    const {
      selectedRowPayload,
      selectedRowIds,
      filters,
      globalFilter
    } = state;
    const {
      rowsById,
      preFilteredRowsById,
      webComponentsReactProperties,
      dispatch
    } = instance;
    const isFiltered = (filters == null ? void 0 : filters.length) > 0 || !!globalFilter;
    (0, import_react23.useEffect)(() => {
      if (selectedRowPayload == null ? void 0 : selectedRowPayload.fired) {
        const {
          event: e,
          row: selRow,
          selectAll
        } = selectedRowPayload;
        const row = rowsById[selRow == null ? void 0 : selRow.id];
        const _rowsById = isFiltered ? preFilteredRowsById : rowsById;
        if (row || selectAll) {
          const payload = {
            row,
            rowsById: _rowsById,
            isSelected: row == null ? void 0 : row.isSelected,
            allRowsSelected: false,
            selectedRowIds
          };
          if (webComponentsReactProperties.selectionMode === AnalyticalTableSelectionMode.Multiple) {
            if (Object.keys(selectedRowIds).length === Object.keys(_rowsById).length) {
              payload.allRowsSelected = true;
            }
            if (selectAll) {
              dispatch({
                type: "SELECT_ROW_CB",
                payload: {
                  event: e,
                  row,
                  selectAll: false,
                  fired: false
                }
              });
              webComponentsReactProperties == null ? void 0 : webComponentsReactProperties.onRowSelect(enrichEventWithDetails(e, {
                rowsById: payload.rowsById,
                allRowsSelected: payload.allRowsSelected,
                selectedRowIds: payload.selectedRowIds
              }));
              return;
            }
          }
          dispatch({
            type: "SELECT_ROW_CB",
            payload: {
              event: e,
              row,
              fired: false
            }
          });
          webComponentsReactProperties == null ? void 0 : webComponentsReactProperties.onRowSelect(enrichEventWithDetails(e, payload));
        }
      }
    }, [selectedRowPayload == null ? void 0 : selectedRowPayload.fired, rowsById, webComponentsReactProperties.selectionMode, selectedRowIds, isFiltered]);
    return state;
  });
};
useSelectionChangeCallback.pluginName = "useSelectionChangeCallback";

// node_modules/@ui5/webcomponents-react/dist/components/AnalyticalTable/hooks/useSingleRowStateSelection.js
var getRowProps = (rowProps, {
  row,
  instance
}) => {
  const {
    webComponentsReactProperties,
    toggleRowSelected,
    selectedFlatRows,
    dispatch
  } = instance;
  const handleRowSelect = (e) => {
    var _a, _b, _c, _d, _e;
    const isSelectionCell = e.target.dataset.selectionCell === "true";
    if (((_b = (_a = e.target) == null ? void 0 : _a.dataset) == null ? void 0 : _b.name) !== "internal_selection_column" && !(e.markerAllowTableRowSelection === true || ((_c = e.nativeEvent) == null ? void 0 : _c.markerAllowTableRowSelection) === true) && webComponentsReactProperties.tagNamesWhichShouldNotSelectARow.has(getTagNameWithoutScopingSuffix(e.target.tagName))) {
      return;
    }
    if (row.isGrouped) {
      return;
    }
    const {
      selectionBehavior,
      selectionMode,
      onRowSelect,
      onRowClick
    } = webComponentsReactProperties;
    if (typeof onRowClick === "function" && ((_e = (_d = e.target) == null ? void 0 : _d.dataset) == null ? void 0 : _e.name) !== "internal_selection_column") {
      onRowClick(enrichEventWithDetails(e, {
        row
      }));
    }
    if (selectionMode === AnalyticalTableSelectionMode.None) {
      return;
    }
    if (selectionBehavior === AnalyticalTableSelectionBehavior.RowSelector && !isSelectionCell) {
      return;
    }
    if (selectionMode === AnalyticalTableSelectionMode.Single) {
      for (const selectedRow of selectedFlatRows) {
        if (selectedRow.id !== row.id) {
          toggleRowSelected(selectedRow.id, false);
        }
      }
    }
    toggleRowSelected(row.id);
    if (typeof onRowSelect === "function") {
      dispatch({
        type: "SELECT_ROW_CB",
        payload: {
          event: e,
          row,
          fired: true
        }
      });
    }
  };
  const handleKeyDown = (e) => {
    if ((!e.target.hasAttribute("aria-expanded") || e.shiftKey && e.code === "Space") && e.code === "Enter") {
      if (!webComponentsReactProperties.tagNamesWhichShouldNotSelectARow.has(getTagNameWithoutScopingSuffix(e.target.tagName))) {
        e.preventDefault();
      }
      handleRowSelect(e);
    }
    if (e.code === "Space" && e.target.role === "gridcell") {
      e.preventDefault();
    }
  };
  const handleKeyUp = (e) => {
    if (!e.target.hasAttribute("aria-expanded") && !e.shiftKey && e.code === "Space") {
      if (!webComponentsReactProperties.tagNamesWhichShouldNotSelectARow.has(getTagNameWithoutScopingSuffix(e.target.tagName))) {
        e.preventDefault();
      }
      handleRowSelect(e);
    }
  };
  return [rowProps, {
    onKeyDown: handleKeyDown,
    onKeyUp: handleKeyUp,
    onClick: handleRowSelect
  }];
};
var useSingleRowStateSelection = (hooks) => {
  hooks.getRowProps.push(getRowProps);
};
useSingleRowStateSelection.pluginName = "useSingleRowStateSelection";

// node_modules/@ui5/webcomponents-react/dist/components/AnalyticalTable/hooks/useStyling.js
var getHeaderGroupProps = (headerGroupProps, {
  instance
}) => {
  const {
    classes
  } = instance.webComponentsReactProperties;
  return [headerGroupProps, {
    className: classes.tableHeaderRow
  }];
};
var getHeaderProps2 = (columnProps, {
  instance,
  column
}) => {
  const hasPopover = column.canGroupBy || column.canSort || column.canFilter;
  const {
    classes
  } = instance.webComponentsReactProperties;
  const style = {
    width: column.totalWidth
  };
  if (column.id === "__ui5wcr__internal_highlight_column" || column.id === "__ui5wcr__internal_selection_column" || column.id === "__ui5wcr__internal_navigation_column") {
    style.padding = 0;
  }
  if (hasPopover) {
    style.cursor = "pointer";
  }
  return [columnProps, {
    className: classes.th,
    column,
    style,
    id: column.id
  }];
};
var ROW_SELECTION_ATTRIBUTE = "data-is-selected";
var getRowProps2 = (rowProps, {
  instance,
  row,
  userProps
}) => {
  const {
    webComponentsReactProperties
  } = instance;
  const {
    classes,
    selectionBehavior,
    selectionMode,
    alternateRowColor,
    subRowsKey
  } = webComponentsReactProperties;
  let className = classes.tr;
  const rowCanBeSelected = [AnalyticalTableSelectionMode.Single, AnalyticalTableSelectionMode.Multiple].includes(
    //@ts-expect-error: we know that "None" is not in the array...
    selectionMode
  );
  if (row.isGrouped || instance.manualGroupBy && row.cells.some((item2) => item2.column.isGrouped) && getSubRowsByString(subRowsKey, row.original) != null) {
    className += ` ${classes.tableGroupHeader}`;
  }
  if (alternateRowColor && userProps["aria-rowindex"] % 2 !== 1) {
    className += ` ${classes.alternateRowColor}`;
  }
  const newRowProps = {
    className,
    role: "row"
  };
  if (rowCanBeSelected) {
    if (AnalyticalTableSelectionBehavior.RowSelector !== selectionBehavior) {
      newRowProps.className += ` ${classes.trActive}`;
    }
    if (row.isSelected) {
      newRowProps[ROW_SELECTION_ATTRIBUTE] = "";
    }
  }
  return [rowProps, newRowProps];
};
var getCellProps2 = (cellProps, {
  cell: {
    column
  },
  instance
}) => {
  const {
    classes
  } = instance.webComponentsReactProperties;
  const style = {
    width: `${column.totalWidth}px`,
    ...resolveCellAlignment(column)
  };
  let className = classes.tableCell;
  if (column.className) {
    className += ` ${column.className}`;
  }
  if (column.id === "__ui5wcr__internal_highlight_column" || column.id === "__ui5wcr__internal_selection_column" || column.id === "__ui5wcr__internal_navigation_column") {
    style.padding = 0;
  }
  return [cellProps, {
    className,
    style,
    tabIndex: -1
  }];
};
var useStyling = (hooks) => {
  hooks.getHeaderGroupProps.push(getHeaderGroupProps);
  hooks.getHeaderProps.push(getHeaderProps2);
  hooks.getRowProps.push(getRowProps2);
  hooks.getCellProps.push(getCellProps2);
};
useStyling.pluginName = "useStyling";

// node_modules/@ui5/webcomponents-react/dist/components/AnalyticalTable/hooks/useTableScrollHandles.js
var import_react24 = __toESM(require_react(), 1);
var useTableScrollHandles = (ref, dispatch) => {
  let analyticalTableRef = (0, import_react24.useRef)(null);
  if (ref) {
    analyticalTableRef = ref;
  }
  const scrollToRef = (0, import_react24.useRef)({});
  (0, import_react24.useEffect)(() => {
    if (analyticalTableRef.current) {
      Object.assign(analyticalTableRef.current, {
        scrollTo: (offset, align) => {
          var _a;
          if (typeof ((_a = scrollToRef.current) == null ? void 0 : _a.scrollToOffset) === "function") {
            scrollToRef.current.scrollToOffset(offset, {
              align
            });
          } else {
            dispatch({
              type: "TRIGGER_PROG_SCROLL",
              payload: {
                direction: "vertical",
                type: "offset",
                args: [offset, {
                  align
                }]
              }
            });
          }
        },
        scrollToItem: (index, align) => {
          var _a;
          if (typeof ((_a = scrollToRef.current) == null ? void 0 : _a.scrollToIndex) === "function") {
            scrollToRef.current.scrollToIndex(index, {
              align
            });
          } else {
            dispatch({
              type: "TRIGGER_PROG_SCROLL",
              payload: {
                direction: "vertical",
                type: "item",
                args: [index, {
                  align
                }]
              }
            });
          }
        },
        horizontalScrollTo: (offset, align) => {
          var _a;
          if (typeof ((_a = scrollToRef.current) == null ? void 0 : _a.horizontalScrollToOffset) === "function") {
            scrollToRef.current.horizontalScrollToOffset(offset, {
              align
            });
          } else {
            dispatch({
              type: "TRIGGER_PROG_SCROLL",
              payload: {
                direction: "horizontal",
                type: "offset",
                args: [offset, {
                  align
                }]
              }
            });
          }
        },
        horizontalScrollToItem: (index, align) => {
          var _a;
          if (typeof ((_a = scrollToRef.current) == null ? void 0 : _a.horizontalScrollToIndex) === "function") {
            scrollToRef.current.horizontalScrollToIndex(index, {
              align
            });
          } else {
            dispatch({
              type: "TRIGGER_PROG_SCROLL",
              payload: {
                direction: "horizontal",
                type: "item",
                args: [index, {
                  align
                }]
              }
            });
          }
        }
      });
    }
  }, []);
  return [analyticalTableRef, scrollToRef];
};

// node_modules/@ui5/webcomponents-react/dist/components/AnalyticalTable/hooks/useToggleRowExpand.js
var getToggleRowExpandedProps = (rowProps, {
  row,
  instance,
  userProps
}) => {
  const {
    manualGroupBy
  } = instance;
  const {
    onRowExpandChange,
    isTreeTable,
    renderRowSubComponent,
    alwaysShowSubComponent
  } = instance.webComponentsReactProperties;
  const onClick = (e, noPropagation = true) => {
    var _a;
    if (noPropagation) {
      e.stopPropagation();
    }
    let column = null;
    if (!isTreeTable && (!renderRowSubComponent || renderRowSubComponent && alwaysShowSubComponent)) {
      if (!manualGroupBy) {
        column = (_a = row.cells.find((cell) => cell.column.id === row.groupByID)) == null ? void 0 : _a.column;
      } else {
        column = userProps.column;
      }
    }
    if (typeof onRowExpandChange === "function") {
      onRowExpandChange(enrichEventWithDetails(e, {
        row,
        column
      }));
    }
    row.toggleRowExpanded();
  };
  const onKeyDown = (e) => {
    if (e.code === "F4") {
      e.preventDefault();
      onClick(e, false);
    } else if (!e.shiftKey && e.code === "Space" || e.key === "Enter") {
      if (e.target.hasAttribute("ui5-icon") || e.target.hasAttribute("ui5-button")) {
        return;
      }
      e.preventDefault();
      onClick(e, false);
    }
  };
  const {
    title: _0,
    ...toggleRowPropsWithoutTitle
  } = rowProps;
  return [toggleRowPropsWithoutTitle, {
    onClick,
    onKeyDown
  }];
};
var useToggleRowExpand = (hooks) => {
  hooks.getToggleRowExpandedProps.push(getToggleRowExpandedProps);
};
useToggleRowExpand.pluginName = "useToggleRowExpand";

// node_modules/@ui5/webcomponents-react/dist/components/AnalyticalTable/hooks/useVisibleColumnsWidth.js
var getVisibleColumnsWidth = (instance) => {
  const visibleColumnsWidth = instance.visibleColumns.map((item2) => item2.totalWidth);
  Object.assign(instance, {
    visibleColumnsWidth
  });
};
var useVisibleColumnsWidth = (hooks) => {
  hooks.useInstance.push(getVisibleColumnsWidth);
};
useVisibleColumnsWidth.pluginName = "useVisibleColumnsWidth";

// node_modules/@ui5/webcomponents-react/dist/components/AnalyticalTable/scrollbars/VerticalScrollbar.js
var import_react25 = __toESM(require_react(), 1);
var import_jsx_runtime151 = __toESM(require_jsx_runtime(), 1);
var VerticalScrollbar = (0, import_react25.forwardRef)((props, ref) => {
  var _a, _b, _c;
  const {
    internalRowHeight,
    tableRef,
    handleVerticalScrollBarScroll,
    tableBodyHeight,
    scrollContainerRef,
    nativeScrollbar,
    parentRef,
    classNames: classNames32
  } = props;
  const [componentRef, containerRef] = useSyncRef(ref);
  const scrollElementRef = (0, import_react25.useRef)(null);
  const hasHorizontalScrollbar = ((_a = tableRef == null ? void 0 : tableRef.current) == null ? void 0 : _a.offsetWidth) !== ((_b = tableRef == null ? void 0 : tableRef.current) == null ? void 0 : _b.scrollWidth);
  (0, import_react25.useEffect)(() => {
    const observer = new ResizeObserver(([entry]) => {
      if (containerRef.current && parentRef.current && entry.target.getBoundingClientRect().height > 0) {
        containerRef.current.scrollTop = parentRef.current.scrollTop;
      }
    });
    if (scrollElementRef.current) {
      observer.observe(scrollElementRef.current);
    }
    return () => {
      observer.disconnect();
    };
  }, []);
  const horizontalScrollbarSectionStyles = clsx(hasHorizontalScrollbar && classNames32.bottomSection);
  return (0, import_jsx_runtime151.jsxs)(FlexBox, {
    direction: FlexBoxDirection.Column,
    style: {
      position: "relative"
    },
    "data-component-name": "AnalyticalTableVerticalScrollbarContainer",
    children: [(0, import_jsx_runtime151.jsx)("div", {
      style: {
        height: `${internalRowHeight}px`
      },
      className: classNames32.headerSection
    }), (0, import_jsx_runtime151.jsx)("div", {
      ref: componentRef,
      style: {
        height: tableRef.current ? `${tableBodyHeight}px` : "0"
      },
      onScroll: handleVerticalScrollBarScroll,
      className: clsx(classNames32.scrollbar, nativeScrollbar && "ui5-content-native-scrollbars"),
      "data-component-name": "AnalyticalTableVerticalScrollbar",
      children: (0, import_jsx_runtime151.jsx)("div", {
        ref: scrollElementRef,
        style: {
          height: `${(_c = scrollContainerRef.current) == null ? void 0 : _c.scrollHeight}px`,
          width: "1px",
          backgroundColor: ThemingParameters.sapList_Background
        }
      })
    }), (0, import_jsx_runtime151.jsx)("div", {
      className: horizontalScrollbarSectionStyles
    })]
  });
});
VerticalScrollbar.displayName = "VerticalScrollbar";

// node_modules/@ui5/webcomponents-react/dist/components/AnalyticalTable/TableBody/VirtualTableBody.js
var import_react27 = __toESM(require_react(), 1);

// node_modules/@ui5/webcomponents-react/dist/components/AnalyticalTable/TableBody/EmptyRow.js
var import_jsx_runtime152 = __toESM(require_jsx_runtime(), 1);
var EmptyRow = ({
  virtualRow,
  className,
  children
}) => {
  return (0, import_jsx_runtime152.jsx)("div", {
    "data-empty-row": "true",
    className,
    style: {
      height: `${virtualRow.size}px`,
      transform: `translateY(${virtualRow.start}px)`,
      boxSizing: "border-box"
    },
    children
  }, `empty_row_${virtualRow.index}`);
};

// node_modules/@ui5/webcomponents-react/dist/components/AnalyticalTable/TableBody/RowSubComponent.js
var import_react26 = __toESM(require_react(), 1);
var import_jsx_runtime153 = __toESM(require_jsx_runtime(), 1);
var RowSubComponent = (props) => {
  var _a, _b;
  const {
    subComponentsHeight,
    virtualRow,
    dispatch,
    row,
    rowHeight,
    children,
    rows,
    alwaysShowSubComponent,
    rowIndex,
    classNames: classNames32
  } = props;
  const subComponentRef = (0, import_react26.useRef)(null);
  (0, import_react26.useEffect)(() => {
    var _a2, _b2;
    const subComponentHeightObserver = new ResizeObserver((entries) => {
      entries.forEach((entry) => {
        var _a3, _b3, _c;
        const target = entry.target.getBoundingClientRect();
        if (target) {
          const borderBoxSize = Array.isArray(entry.borderBoxSize) ? entry.borderBoxSize[0] : entry.borderBoxSize;
          const subCompHeight = (borderBoxSize == null ? void 0 : borderBoxSize.blockSize) ?? target.height;
          if (((_a3 = subComponentsHeight == null ? void 0 : subComponentsHeight[virtualRow.index]) == null ? void 0 : _a3.subComponentHeight) !== subCompHeight && subCompHeight !== 0) {
            if (alwaysShowSubComponent && subComponentsHeight && Object.keys(subComponentsHeight).length === 10) {
              const objGroupedByHeight = Object.values(subComponentsHeight).reduce((acc, cur) => {
                const count = acc == null ? void 0 : acc[cur.subComponentHeight];
                if (typeof count === "number") {
                  return {
                    ...acc,
                    [cur.subComponentHeight]: count + 1
                  };
                }
                return {
                  ...acc,
                  [cur.subComponentHeight]: 1
                };
              }, {});
              const mostUsedHeight = Object.keys(objGroupedByHeight).reduce((a, b) => objGroupedByHeight[a] > objGroupedByHeight[b] ? a : b);
              const estimatedHeights = rows.reduce((acc, cur, index) => {
                acc[index] = {
                  subComponentHeight: parseInt(mostUsedHeight),
                  rowId: cur.id
                };
                return acc;
              }, {});
              dispatch({
                type: "SUB_COMPONENTS_HEIGHT",
                payload: {
                  ...estimatedHeights,
                  ...subComponentsHeight
                }
              });
            } else {
              dispatch({
                type: "SUB_COMPONENTS_HEIGHT",
                payload: {
                  ...subComponentsHeight,
                  [virtualRow.index]: {
                    subComponentHeight: subCompHeight,
                    rowId: row.id
                  }
                }
              });
            }
          }
          if (((_b3 = subComponentsHeight == null ? void 0 : subComponentsHeight[virtualRow.index]) == null ? void 0 : _b3.rowId) != null && ((_c = subComponentsHeight == null ? void 0 : subComponentsHeight[virtualRow.index]) == null ? void 0 : _c.rowId) !== row.id) {
            dispatch({
              type: "SUB_COMPONENTS_HEIGHT",
              payload: {
                ...subComponentsHeight,
                [virtualRow.index]: {
                  subComponentHeight: subCompHeight,
                  rowId: row.id
                }
              }
            });
          }
        }
      });
    });
    if ((_a2 = subComponentRef.current) == null ? void 0 : _a2.firstChild) {
      subComponentHeightObserver.observe((_b2 = subComponentRef.current) == null ? void 0 : _b2.firstChild);
    }
    return () => {
      subComponentHeightObserver.disconnect();
    };
  }, [(_a = subComponentRef.current) == null ? void 0 : _a.firstChild, subComponentsHeight, row.id, (_b = subComponentsHeight == null ? void 0 : subComponentsHeight[virtualRow.index]) == null ? void 0 : _b.subComponentHeight, virtualRow.index]);
  return (0, import_jsx_runtime153.jsx)("div", {
    ref: subComponentRef,
    "data-subcomponent": true,
    "data-subcomponent-row-index": rowIndex,
    tabIndex: -1,
    style: {
      boxSizing: "border-box",
      transform: `translateY(${rowHeight}px)`
    },
    className: classNames32.subcomponent,
    children
  });
};
RowSubComponent.displayName = "RowSubComponent";

// node_modules/@ui5/webcomponents-react/dist/components/AnalyticalTable/TableBody/VirtualTableBody.js
var import_jsx_runtime154 = __toESM(require_jsx_runtime(), 1);
var VirtualTableBody = (props) => {
  const {
    alternateRowColor,
    classes,
    prepareRow,
    rows,
    scrollToRef,
    isTreeTable,
    internalRowHeight,
    visibleColumns: visibleColumns4,
    renderRowSubComponent,
    popInRowHeight,
    markNavigatedRow,
    isRtl,
    alwaysShowSubComponent,
    dispatch,
    subComponentsHeight,
    columnVirtualizer,
    manualGroupBy,
    subRowsKey,
    scrollContainerRef,
    subComponentsBehavior,
    triggerScroll,
    rowVirtualizer
  } = props;
  const rowHeight = popInRowHeight !== internalRowHeight ? popInRowHeight : internalRowHeight;
  const lastNonEmptyRow = (0, import_react27.useRef)(null);
  scrollToRef.current = {
    ...scrollToRef.current,
    scrollToOffset: rowVirtualizer.scrollToOffset,
    scrollToIndex: rowVirtualizer.scrollToIndex
  };
  (0, import_react27.useEffect)(() => {
    if (triggerScroll && triggerScroll.direction === "vertical") {
      if (triggerScroll.type === "offset") {
        rowVirtualizer.scrollToOffset(...triggerScroll.args);
      } else {
        rowVirtualizer.scrollToIndex(...triggerScroll.args);
      }
    }
  }, [triggerScroll]);
  const popInColumn = (0, import_react27.useMemo)(() => visibleColumns4.filter((item2) => item2.id !== "__ui5wcr__internal_highlight_column" && item2.id !== "__ui5wcr__internal_selection_column" && item2.id !== "__ui5wcr__internal_navigation_column")[0], [visibleColumns4]);
  return (0, import_jsx_runtime154.jsx)("div", {
    ref: scrollContainerRef,
    "data-component-name": "AnalyticalTableBodyScrollableContainer",
    style: {
      position: "relative",
      height: `${rowVirtualizer.getTotalSize()}px`,
      width: `${columnVirtualizer.getTotalSize()}px`
    },
    children: rowVirtualizer.getVirtualItems().map((virtualRow, visibleRowIndex) => {
      var _a, _b, _c, _d, _e, _f;
      const row = rows[virtualRow.index];
      const rowIndexWithHeader = virtualRow.index + 1;
      if (!row || row.groupByVal === "undefined") {
        const alternate = alternateRowColor && virtualRow.index % 2 !== 0;
        if (!((_a = lastNonEmptyRow.current) == null ? void 0 : _a.cells)) {
          return (0, import_jsx_runtime154.jsx)(EmptyRow, {
            virtualRow,
            className: clsx(classes.tr, alternate && classes.alternateRowColor)
          }, `empty_row_${virtualRow.index}`);
        }
        const cells = lastNonEmptyRow.current.cells;
        return (0, import_jsx_runtime154.jsx)(EmptyRow, {
          virtualRow,
          className: clsx(classes.tr, alternate && classes.alternateRowColor),
          children: columnVirtualizer.getVirtualItems().map((item2) => {
            const cell = cells[item2.index];
            const cellProps = cell.getCellProps();
            const {
              "aria-colindex": _0,
              "aria-selected": _1,
              "aria-label": _2,
              tabIndex: _3,
              ...emptyRowCellProps
            } = cellProps;
            return (0, import_react27.createElement)("div", {
              ...emptyRowCellProps,
              key: `${visibleRowIndex}-${emptyRowCellProps.key}`,
              "data-empty-row-cell": "true",
              tabIndex: -1,
              "aria-hidden": true,
              style: {
                ...emptyRowCellProps.style,
                cursor: "unset",
                width: item2.size
              }
            });
          })
        }, `empty_row_${virtualRow.index}`);
      } else {
        lastNonEmptyRow.current = row;
      }
      prepareRow(row);
      const {
        key,
        ...rowProps
      } = row.getRowProps({
        "aria-rowindex": virtualRow.index + 1,
        "data-virtual-row-index": virtualRow.index
      });
      const isNavigatedCell = typeof markNavigatedRow === "function" ? markNavigatedRow(row) : false;
      const RowSubComponent2 = typeof renderRowSubComponent === "function" ? renderRowSubComponent(row) : void 0;
      if ((!RowSubComponent2 || subComponentsBehavior === AnalyticalTableSubComponentsBehavior.IncludeHeightExpandable && !row.isExpanded) && subComponentsHeight && ((_b = subComponentsHeight == null ? void 0 : subComponentsHeight[virtualRow.index]) == null ? void 0 : _b.subComponentHeight)) {
        dispatch({
          type: "SUB_COMPONENTS_HEIGHT",
          payload: {
            ...subComponentsHeight,
            [virtualRow.index]: {
              subComponentHeight: 0,
              rowId: row.id
            }
          }
        });
      }
      let updatedHeight = rowHeight;
      if (renderRowSubComponent && (((_c = rows[virtualRow.index]) == null ? void 0 : _c.isExpanded) || alwaysShowSubComponent) && ((_d = subComponentsHeight == null ? void 0 : subComponentsHeight[virtualRow.index]) == null ? void 0 : _d.rowId) === ((_e = rows[virtualRow.index]) == null ? void 0 : _e.id)) {
        updatedHeight += ((_f = subComponentsHeight == null ? void 0 : subComponentsHeight[virtualRow.index]) == null ? void 0 : _f.subComponentHeight) ?? 0;
      }
      const measureRef = isTreeTable && renderRowSubComponent && (row.isExpanded || alwaysShowSubComponent) ? (node) => {
        rowVirtualizer.measureElement(node);
      } : rowVirtualizer.measureElement;
      return (0, import_jsx_runtime154.jsxs)("div", {
        ...rowProps,
        ref: measureRef,
        style: {
          ...rowProps.style ?? {},
          transform: `translateY(${virtualRow.start}px)`,
          position: "absolute",
          boxSizing: "border-box",
          height: `${updatedHeight}px`
        },
        children: [RowSubComponent2 && (row.isExpanded || alwaysShowSubComponent) && (0, import_jsx_runtime154.jsx)(RowSubComponent, {
          subComponentsHeight,
          virtualRow,
          dispatch,
          row,
          rowHeight,
          rows,
          alwaysShowSubComponent,
          rowIndex: visibleRowIndex + 1,
          classNames: classes,
          children: RowSubComponent2
        }), columnVirtualizer.getVirtualItems().map((virtualColumn, visibleColumnIndex) => {
          const cell = row.cells[virtualColumn.index];
          const directionStyles = isRtl ? {
            transform: `translateX(-${virtualColumn.start}px)`,
            insertInlineStart: 0
          } : {
            transform: `translateX(${virtualColumn.start}px)`,
            insertInlineStart: 0
          };
          if (!cell) {
            return null;
          }
          const {
            key: key2,
            ...cellProps
          } = cell.getCellProps();
          const allCellProps = {
            ...cellProps,
            ["data-visible-column-index"]: visibleColumnIndex,
            ["data-column-index"]: virtualColumn.index,
            ["data-visible-row-index"]: visibleRowIndex + 1,
            ["data-row-index"]: rowIndexWithHeader,
            style: {
              ...cellProps.style,
              position: "absolute",
              width: `${virtualColumn.size}px`,
              top: 0,
              height: `${rowHeight}px`,
              ...directionStyles
            }
          };
          let contentToRender;
          if (cell.column.id === "__ui5wcr__internal_highlight_column" || cell.column.id === "__ui5wcr__internal_selection_column" || cell.column.id === "__ui5wcr__internal_navigation_column") {
            contentToRender = RenderColumnTypes.Cell;
          } else if (isTreeTable || !alwaysShowSubComponent && RowSubComponent2) {
            contentToRender = RenderColumnTypes.Expandable;
          } else if (cell.isGrouped || manualGroupBy && cell.column.isGrouped && getSubRowsByString(subRowsKey, row.original) != null && cell.value !== void 0) {
            contentToRender = RenderColumnTypes.Grouped;
          } else if (cell.isAggregated) {
            contentToRender = RenderColumnTypes.Aggregated;
          } else if (cell.isPlaceholder) {
            contentToRender = RenderColumnTypes.RepeatedValue;
          } else {
            contentToRender = RenderColumnTypes.Cell;
          }
          return (0, import_jsx_runtime154.jsx)("div", {
            ...allCellProps,
            "data-selection-cell": cell.column.id === "__ui5wcr__internal_selection_column",
            children: popInRowHeight !== internalRowHeight && popInColumn.id === cell.column.id ? cell.render(RenderColumnTypes.PopIn, {
              contentToRender,
              internalRowHeight
            }) : cell.render(contentToRender, isNavigatedCell === true ? {
              isNavigatedCell
            } : {})
          }, key2);
        })]
      }, key);
    })
  });
};

// node_modules/@ui5/webcomponents-react/dist/components/AnalyticalTable/TableBody/VirtualTableBodyContainer.js
var import_react28 = __toESM(require_react(), 1);
var import_jsx_runtime155 = __toESM(require_jsx_runtime(), 1);
var VirtualTableBodyContainer = (props) => {
  const {
    tableBodyHeight,
    totalColumnsWidth,
    children,
    parentRef,
    classes,
    infiniteScroll,
    infiniteScrollThreshold,
    onLoadMore,
    rows,
    internalRowHeight,
    handleExternalScroll,
    visibleRows,
    popInRowHeight,
    rowCollapsedFlag,
    isGrouped,
    dispatch
  } = props;
  const [isMounted, setIsMounted] = (0, import_react28.useState)(false);
  (0, import_react28.useEffect)(() => {
    if (parentRef.current) {
      setIsMounted(true);
    }
  }, [parentRef.current]);
  const dataLength = rows.length;
  const lastScrollTop = (0, import_react28.useRef)(0);
  const firedInfiniteLoadEvents = (0, import_react28.useRef)(/* @__PURE__ */ new Set());
  const prevDataLength = (0, import_react28.useRef)(dataLength);
  (0, import_react28.useEffect)(() => {
    if (prevDataLength.current > dataLength) {
      if (rowCollapsedFlag) {
        dispatch({
          type: "ROW_COLLAPSED_FLAG",
          payload: false
        });
      } else {
        firedInfiniteLoadEvents.current.clear();
        parentRef.current.scrollTop = 0;
        lastScrollTop.current = 0;
      }
    }
    prevDataLength.current = dataLength;
  }, [dataLength, rowCollapsedFlag]);
  const onScroll = (0, import_react28.useCallback)((event) => {
    handleExternalScroll(enrichEventWithDetails(event, {
      rows,
      rowElements: event.target.children[0].children
    }));
    const scrollOffset = event.target.scrollTop;
    const isScrollingDown = lastScrollTop.current < scrollOffset;
    const target = event.target;
    const scrolledToBottom = target.scrollHeight - target.scrollTop === target.clientHeight;
    const applyGroupingLogic = scrolledToBottom && isGrouped;
    if ((isScrollingDown || applyGroupingLogic) && infiniteScroll) {
      lastScrollTop.current = scrollOffset;
      const currentLastRow = Math.floor(scrollOffset / popInRowHeight) + (popInRowHeight === internalRowHeight ? visibleRows : Math.floor(tableBodyHeight / popInRowHeight));
      if (rows.length - currentLastRow < infiniteScrollThreshold || applyGroupingLogic) {
        if (!firedInfiniteLoadEvents.current.has(rows.length) || applyGroupingLogic) {
          onLoadMore(event);
        }
        firedInfiniteLoadEvents.current.add(rows.length);
      }
    }
  }, [infiniteScroll, infiniteScrollThreshold, onLoadMore, rows, internalRowHeight, firedInfiniteLoadEvents, lastScrollTop, handleExternalScroll, popInRowHeight, tableBodyHeight]);
  return (0, import_jsx_runtime155.jsx)("div", {
    className: classes.tbody,
    ref: parentRef,
    onScroll,
    style: {
      position: "relative",
      overflowY: "auto",
      height: `${tableBodyHeight}px`,
      width: `${totalColumnsWidth}px`
    },
    "data-component-name": "AnalyticalTableBody",
    children: isMounted && children
  });
};

// node_modules/@ui5/webcomponents-react/dist/components/AnalyticalTable/tableReducer/stateReducer.js
var import_react_table3 = __toESM(require_react_table(), 1);
var stateReducer = (state, action, _prevState, instance) => {
  const {
    payload
  } = action;
  if (state.isRtl && action.type === import_react_table3.actions.columnResizing) {
    const {
      clientX
    } = action;
    const {
      startX,
      columnWidth,
      headerIdWidths
    } = state.columnResizing;
    const deltaX = startX - clientX;
    const percentageDeltaX = deltaX / columnWidth;
    const newColumnWidths = {};
    headerIdWidths.forEach(([headerId, headerWidth]) => {
      newColumnWidths[headerId] = Math.max(headerWidth + headerWidth * percentageDeltaX, 0);
    });
    return {
      ...state,
      columnResizing: {
        ...state.columnResizing,
        columnWidths: {
          ...state.columnResizing.columnWidths,
          ...newColumnWidths
        }
      }
    };
  }
  switch (action.type) {
    case "toggleRowExpanded":
      if (!state.expanded[action.id]) {
        instance.dispatch({
          type: "ROW_COLLAPSED_FLAG",
          payload: true
        });
      }
      return state;
    case "TABLE_RESIZE":
      return {
        ...state,
        tableClientWidth: payload.tableClientWidth
      };
    case "VISIBLE_ROWS":
      return {
        ...state,
        visibleRows: payload.visibleRows
      };
    case "TABLE_SCROLLING_ENABLED":
      return {
        ...state,
        isScrollable: payload.isScrollable
      };
    case "SET_SELECTED_ROW_IDS":
      return {
        ...state,
        selectedRowIds: payload.selectedRowIds
      };
    case "SET_POPIN_COLUMNS":
      return {
        ...state,
        popInColumns: payload
      };
    case "INTERACTIVE_ROWS_HAVE_POPIN":
      return {
        ...state,
        interactiveRowsHavePopIn: payload
      };
    case "IS_RTL":
      return {
        ...state,
        isRtl: payload.isRtl
      };
    case "SUB_COMPONENTS_HEIGHT":
      return {
        ...state,
        subComponentsHeight: payload
      };
    case "TABLE_COL_RESIZED":
      return {
        ...state,
        tableColResized: payload
      };
    case "SELECT_ROW_CB":
      return {
        ...state,
        selectedRowPayload: payload
      };
    case "ROW_COLLAPSED_FLAG":
      return {
        ...state,
        rowCollapsed: payload
      };
    case "COLUMN_DND_START":
      return {
        ...state,
        dndColumn: payload
      };
    case "COLUMN_DND_END":
      return {
        ...state,
        dndColumn: ""
      };
    // fallback if the component wasn't ready yet for scrolling (elements are not initialized), e.g. when calling `.scrollToItem` on mount
    case "TRIGGER_PROG_SCROLL":
      return {
        ...state,
        triggerScroll: payload
      };
    case "AUTO_RESIZE":
      return {
        ...state,
        columnResizing: {
          ...state.columnResizing,
          columnWidths: {
            ...state.columnResizing.columnWidths,
            ...payload
          }
        }
      };
    default:
      return state;
  }
};

// node_modules/@ui5/webcomponents-react/dist/components/AnalyticalTable/TitleBar/index.js
var import_react29 = __toESM(require_react(), 1);
var import_jsx_runtime156 = __toESM(require_jsx_runtime(), 1);
var styles = {
  minHeight: "1.5rem",
  display: "flex",
  alignItems: "center"
};
var TitleBar = (0, import_react29.forwardRef)((props, ref) => {
  const {
    children,
    titleBarId
  } = props;
  return (0, import_jsx_runtime156.jsxs)("div", {
    style: styles,
    ref,
    id: titleBarId,
    children: [typeof children === "string" && (0, import_jsx_runtime156.jsx)(Title, {
      children
    }), (0, import_react29.isValidElement)(children) && children]
  });
});
TitleBar.displayName = "TitleBar";

// node_modules/@ui5/webcomponents-react/dist/components/AnalyticalTable/VerticalResizer.js
var import_react30 = __toESM(require_react(), 1);
var import_react_dom2 = __toESM(require_react_dom(), 1);
var import_jsx_runtime157 = __toESM(require_jsx_runtime(), 1);
var isTouchEvent = (e, touchEvent) => {
  if (e.type === touchEvent) {
    return !(e.touches && e.touches.length > 1);
  }
  return false;
};
var VerticalResizer = (props) => {
  var _a, _b, _c;
  const {
    analyticalTableRef,
    dispatch,
    extensionsHeight,
    internalRowHeight,
    hasPopInColumns,
    popInRowHeight,
    rowsLength,
    visibleRows,
    handleOnLoadMore,
    classNames: classNames32
  } = props;
  const startY = (0, import_react30.useRef)(null);
  const verticalResizerRef = (0, import_react30.useRef)(null);
  const [resizerPosition, setResizerPosition] = (0, import_react30.useState)(void 0);
  const [isDragging, setIsDragging] = (0, import_react30.useState)(false);
  const [mountTouchEvents, setMountTouchEvents] = (0, import_react30.useState)(false);
  const i18nBundle = useI18nBundle("@ui5/webcomponents-react");
  const handleResizeStart = (0, import_react30.useCallback)((e) => {
    e.preventDefault();
    const touchEvent = isTouchEvent(e, "touchstart");
    startY.current = touchEvent ? Math.round(e.touches[0].pageY) : e.pageY;
    setMountTouchEvents(touchEvent);
    setIsDragging(true);
  }, [startY.current, setIsDragging]);
  const handleMove = (0, import_react30.useCallback)((e) => {
    setResizerPosition((prev) => ({
      ...prev,
      top: isTouchEvent(e, "touchmove") ? Math.round(e.touches[0].pageY) : e.pageY
    }));
  }, [setResizerPosition]);
  const handleResizeEnd = (0, import_react30.useCallback)((e) => {
    setIsDragging(false);
    const rowCount = Math.floor((analyticalTableRef.current.clientHeight + (isTouchEvent(e, "touchend") ? Math.round(e.changedTouches[0].pageY) : e.pageY) - startY.current - extensionsHeight - 5) / popInRowHeight);
    if (hasPopInColumns) {
      dispatch({
        type: "INTERACTIVE_ROWS_HAVE_POPIN",
        payload: true
      });
    }
    dispatch({
      type: "VISIBLE_ROWS",
      payload: {
        visibleRows: rowCount
      }
    });
  }, [(_a = analyticalTableRef.current) == null ? void 0 : _a.clientHeight, startY.current, extensionsHeight, internalRowHeight, dispatch]);
  (0, import_react30.useEffect)(() => {
    const removeEventListeners = () => {
      if (mountTouchEvents) {
        document.removeEventListener("touchmove", handleMove);
        document.removeEventListener("touchend", handleResizeEnd);
      } else {
        document.removeEventListener("mouseup", handleResizeEnd);
        document.removeEventListener("mousemove", handleMove);
      }
    };
    if (isDragging) {
      if (mountTouchEvents) {
        document.addEventListener("touchmove", handleMove);
        document.addEventListener("touchend", handleResizeEnd);
      } else {
        document.addEventListener("mousemove", handleMove);
        document.addEventListener("mouseup", handleResizeEnd);
      }
    } else {
      removeEventListeners();
    }
    return () => {
      removeEventListeners();
    };
  }, [isDragging]);
  (0, import_react30.useEffect)(() => {
    var _a2, _b2, _c2, _d, _e, _f;
    const resizerPosTop = ((_b2 = (_a2 = verticalResizerRef.current) == null ? void 0 : _a2.getBoundingClientRect()) == null ? void 0 : _b2.top) + window.scrollY;
    const resizerPosLeft = ((_d = (_c2 = verticalResizerRef.current) == null ? void 0 : _c2.getBoundingClientRect()) == null ? void 0 : _d.left) + window.scrollX;
    const resizerPosWidth = (_f = (_e = verticalResizerRef.current) == null ? void 0 : _e.getBoundingClientRect()) == null ? void 0 : _f.width;
    if (!isDragging && resizerPosTop > 0) {
      setResizerPosition({
        left: resizerPosLeft,
        top: resizerPosTop,
        width: resizerPosWidth
      });
    }
  }, [(_c = (_b = verticalResizerRef.current) == null ? void 0 : _b.getBoundingClientRect()) == null ? void 0 : _c.top, isDragging]);
  (0, import_react30.useEffect)(() => {
    return () => {
      dispatch({
        type: "WITH_POPIN",
        payload: false
      });
    };
  }, []);
  const isInitial = (0, import_react30.useRef)(true);
  (0, import_react30.useEffect)(() => {
    if (!isInitial.current && rowsLength <= visibleRows) {
      handleOnLoadMore({
        type: "tableGrow"
      });
    }
    isInitial.current = false;
  }, [rowsLength, visibleRows]);
  const [allowed, setAllowed] = (0, import_react30.useState)(false);
  (0, import_react30.useEffect)(() => {
    setAllowed(true);
  }, []);
  if (!allowed) {
    return null;
  }
  return (0, import_jsx_runtime157.jsx)("div", {
    className: classNames32.verticalResizerContainer,
    ref: verticalResizerRef,
    onMouseDown: handleResizeStart,
    onTouchStart: handleResizeStart,
    role: "separator",
    title: i18nBundle.getText(DRAG_TO_RESIZE),
    children: resizerPosition && isDragging && (0, import_react_dom2.createPortal)((0, import_jsx_runtime157.jsx)("div", {
      className: classNames32.verticalResizer,
      style: {
        top: resizerPosition.top,
        left: resizerPosition.left,
        width: resizerPosition.width
      }
    }), document.body)
  });
};
VerticalResizer.displayName = "VerticalResizer";

// node_modules/@ui5/webcomponents-react/dist/components/AnalyticalTable/index.js
var import_jsx_runtime158 = __toESM(require_jsx_runtime(), 1);
var sortTypesFallback = {
  undefined: () => void 0
};
var measureElement2 = (el) => {
  return el.offsetHeight;
};
var AnalyticalTable = (0, import_react31.forwardRef)((props, ref) => {
  var _a, _b, _c, _d, _e, _f, _g, _h, _i, _j;
  const {
    alternateRowColor,
    adjustTableHeightOnPopIn,
    className,
    columnOrder,
    columns: columns6,
    data: rawData,
    extension,
    filterable,
    globalFilterValue,
    groupBy,
    groupable,
    header: header3,
    headerRowHeight,
    highlightField = "status",
    infiniteScroll,
    infiniteScrollThreshold = 20,
    isTreeTable,
    loading,
    loadingDelay,
    markNavigatedRow,
    minRows = 5,
    noDataText,
    overscanCount,
    overscanCountHorizontal = 5,
    retainColumnWidth,
    reactTableOptions,
    renderRowSubComponent,
    rowHeight,
    scaleWidthMode = AnalyticalTableScaleWidthMode.Default,
    scaleXFactor,
    selectedRowIds,
    selectionBehavior = AnalyticalTableSelectionBehavior.Row,
    selectionMode = AnalyticalTableSelectionMode.None,
    showOverlay,
    sortable,
    style,
    subComponentsBehavior = AnalyticalTableSubComponentsBehavior.Expandable,
    subRowsKey = "subRows",
    tableHooks = [],
    tableInstance,
    visibleRowCountMode = AnalyticalTableVisibleRowCountMode.Fixed,
    visibleRows = 15,
    withNavigationHighlight,
    withRowHighlight,
    onColumnsReorder,
    onGroup,
    onLoadMore,
    onRowClick,
    onRowExpandChange,
    onRowSelect,
    onSort,
    onTableScroll,
    onAutoResize,
    NoDataComponent = DefaultNoDataComponent,
    additionalEmptyRowsCount = 0,
    ...rest
  } = props;
  useStylesheet(styleData4, AnalyticalTable.displayName);
  const isInitial = (0, import_react31.useRef)(false);
  const alwaysShowSubComponent = subComponentsBehavior === AnalyticalTableSubComponentsBehavior.Visible || subComponentsBehavior === AnalyticalTableSubComponentsBehavior.IncludeHeight;
  const uniqueId = (0, import_react31.useId)();
  const i18nBundle = useI18nBundle("@ui5/webcomponents-react");
  const titleBarId = (0, import_react31.useRef)(`titlebar-${uniqueId}`).current;
  const invalidTableTextId = (0, import_react31.useRef)(`invalidTableText-${uniqueId}`).current;
  const tableRef = (0, import_react31.useRef)(null);
  const parentRef = (0, import_react31.useRef)(null);
  const verticalScrollBarRef = (0, import_react31.useRef)(null);
  const getSubRows = (0, import_react31.useCallback)((row) => getSubRowsByString(subRowsKey, row) || [], [subRowsKey]);
  const invalidTableA11yText = i18nBundle.getText(INVALID_TABLE);
  const tableInstanceRef = (0, import_react31.useRef)(null);
  const scrollContainerRef = (0, import_react31.useRef)(null);
  tableInstanceRef.current = (0, import_react_table4.useTable)({
    columns: columns6,
    data: rawData,
    defaultColumn: DefaultColumn,
    getSubRows,
    stateReducer,
    disableFilters: !filterable,
    disableSortBy: !sortable,
    disableGroupBy: isTreeTable || !alwaysShowSubComponent && renderRowSubComponent ? true : !groupable,
    selectSubRows: false,
    sortTypes: sortTypesFallback,
    webComponentsReactProperties: {
      translatableTexts: {
        selectAllText: i18nBundle.getText(SELECT_ALL),
        deselectAllText: i18nBundle.getText(DESELECT_ALL),
        expandA11yText: i18nBundle.getText(EXPAND_PRESS_SPACE),
        collapseA11yText: i18nBundle.getText(COLLAPSE_PRESS_SPACE),
        selectA11yText: i18nBundle.getText(SELECT_PRESS_SPACE),
        unselectA11yText: i18nBundle.getText(UNSELECT_PRESS_SPACE),
        expandNodeA11yText: i18nBundle.getText(EXPAND_NODE),
        collapseNodeA11yText: i18nBundle.getText(COLLAPSE_NODE),
        filteredA11yText: i18nBundle.getText(FILTERED),
        groupedA11yText: i18nBundle.getText(GROUPED),
        selectAllA11yText: i18nBundle.getText(SELECT_ALL_PRESS_SPACE),
        deselectAllA11yText: i18nBundle.getText(UNSELECT_ALL_PRESS_SPACE)
      },
      alternateRowColor,
      alwaysShowSubComponent,
      classes: classNames4,
      highlightField,
      isTreeTable,
      loading,
      markNavigatedRow,
      renderRowSubComponent,
      scaleWidthMode,
      selectionBehavior,
      selectionMode,
      showOverlay,
      subRowsKey,
      tableRef,
      tagNamesWhichShouldNotSelectARow,
      uniqueId,
      withNavigationHighlight,
      withRowHighlight,
      onAutoResize,
      onColumnsReorder,
      onGroup,
      onRowClick,
      onRowExpandChange,
      onRowSelect,
      onSort
    },
    ...reactTableOptions
  }, import_react_table4.useFilters, import_react_table4.useGlobalFilter, import_react_table4.useColumnOrder, import_react_table4.useGroupBy, import_react_table4.useSortBy, import_react_table4.useExpanded, import_react_table4.useRowSelect, import_react_table4.useResizeColumns, useResizeColumnsConfig, useRowSelectionColumn, useAutoResize, useSingleRowStateSelection, useSelectionChangeCallback, useRowHighlight, useRowNavigationIndicators, useDynamicColumnWidths, useStyling, useToggleRowExpand, useA11y, usePopIn, useVisibleColumnsWidth, useKeyboardNavigation, useColumnDragAndDrop, ...tableHooks);
  const {
    getTableProps,
    headerGroups,
    rows,
    prepareRow,
    setColumnOrder,
    dispatch,
    totalColumnsWidth,
    visibleColumns: visibleColumns4,
    visibleColumnsWidth,
    setGroupBy,
    setGlobalFilter
  } = tableInstanceRef.current;
  const tableState = tableInstanceRef.current.state;
  const {
    popInColumns,
    triggerScroll
  } = tableState;
  const isGrouped = !!tableState.groupBy.length;
  const noDataTextI18n = i18nBundle.getText(LIST_NO_DATA);
  const noDataTextFiltered = i18nBundle.getText(NO_DATA_FILTERED);
  const noDataTextLocal = noDataText ?? (((_a = tableState.filters) == null ? void 0 : _a.length) > 0 || tableState.globalFilter ? noDataTextFiltered : noDataTextI18n);
  const [componentRef, updatedRef] = useSyncRef(ref);
  const isRtl = useIsRTL(updatedRef);
  const columnVirtualizer = useVirtualizer({
    count: visibleColumnsWidth.length,
    getScrollElement: () => tableRef.current,
    estimateSize: (0, import_react31.useCallback)((index) => visibleColumnsWidth[index], [visibleColumnsWidth]),
    horizontal: true,
    overscan: isRtl ? Infinity : overscanCountHorizontal,
    indexAttribute: "data-column-index",
    // necessary as otherwise values are rounded which leads to wrong total width calculation leading to unnecessary scrollbar
    measureElement: !scaleXFactor || scaleXFactor === 1 ? (el) => el.getBoundingClientRect().width : void 0
  });
  (0, import_react31.useEffect)(() => {
    if (isInitial.current && visibleColumns4.length) {
      columnVirtualizer.measure();
    } else {
      isInitial.current = true;
    }
  }, [visibleColumns4.length]);
  const [analyticalTableRef, scrollToRef] = useTableScrollHandles(updatedRef, dispatch);
  if (parentRef.current) {
    scrollToRef.current = {
      ...scrollToRef.current,
      horizontalScrollToOffset: columnVirtualizer.scrollToOffset,
      horizontalScrollToIndex: columnVirtualizer.scrollToIndex
    };
  }
  (0, import_react31.useEffect)(() => {
    if (triggerScroll && triggerScroll.direction === "horizontal") {
      if (triggerScroll.type === "offset") {
        columnVirtualizer.scrollToOffset(...triggerScroll.args);
      } else {
        columnVirtualizer.scrollToIndex(...triggerScroll.args);
      }
    }
  }, [triggerScroll]);
  const includeSubCompRowHeight = !!renderRowSubComponent && (subComponentsBehavior === AnalyticalTableSubComponentsBehavior.IncludeHeight || subComponentsBehavior === AnalyticalTableSubComponentsBehavior.IncludeHeightExpandable) && !!tableState.subComponentsHeight && !!Object.keys(tableState.subComponentsHeight);
  if (tableInstance && {}.hasOwnProperty.call(tableInstance, "current")) {
    tableInstance.current = tableInstanceRef.current;
  }
  if (typeof tableInstance === "function") {
    tableInstance(tableInstanceRef.current);
  }
  const titleBarRef = (0, import_react31.useRef)(null);
  const extensionRef = (0, import_react31.useRef)(null);
  const headerRef = (0, import_react31.useRef)(null);
  const extensionsHeight = (((_b = titleBarRef.current) == null ? void 0 : _b.offsetHeight) ?? 0) + (((_c = extensionRef.current) == null ? void 0 : _c.offsetHeight) ?? 0) + (((_d = headerRef.current) == null ? void 0 : _d.offsetHeight) ?? 0);
  const internalRowHeight = getRowHeight(rowHeight, tableRef);
  const internalHeaderRowHeight = headerRowHeight ?? internalRowHeight;
  const popInRowHeight = (() => {
    if (popInColumns == null ? void 0 : popInColumns.length) {
      return popInColumns.reduce((acc, cur) => cur.popinDisplay === AnalyticalTablePopinDisplay.Block ? acc + internalRowHeight + 16 : acc + internalRowHeight, internalRowHeight);
    } else {
      return internalRowHeight;
    }
  })();
  const internalVisibleRowCount = tableState.visibleRows ?? visibleRows;
  const updateTableClientWidth = (0, import_react31.useCallback)(() => {
    if (tableRef.current) {
      dispatch({
        type: "TABLE_RESIZE",
        payload: {
          tableClientWidth: !scaleXFactor || scaleXFactor === 1 ? tableRef.current.getBoundingClientRect().width : tableRef.current.clientWidth
        }
      });
    }
  }, [tableRef.current, scaleXFactor]);
  const updateRowsCount = (0, import_react31.useCallback)(() => {
    var _a2, _b2, _c2, _d2;
    if ((visibleRowCountMode === AnalyticalTableVisibleRowCountMode.Auto || visibleRowCountMode === AnalyticalTableVisibleRowCountMode.AutoWithEmptyRows) && ((_a2 = analyticalTableRef.current) == null ? void 0 : _a2.parentElement)) {
      const parentElement = (_b2 = analyticalTableRef.current) == null ? void 0 : _b2.parentElement;
      const tableYPosition = parentElement && getComputedStyle(parentElement).position === "relative" && ((_c2 = analyticalTableRef.current) == null ? void 0 : _c2.offsetTop) ? (_d2 = analyticalTableRef.current) == null ? void 0 : _d2.offsetTop : 0;
      const parentHeight = parentElement == null ? void 0 : parentElement.getBoundingClientRect().height;
      const tableHeight = parentHeight ? parentHeight - tableYPosition : 0;
      const bodyHeight = tableHeight - extensionsHeight;
      let subCompsRowCount = 0;
      if (includeSubCompRowHeight) {
        let localBodyHeight = 0;
        let i = 0;
        while (localBodyHeight < bodyHeight) {
          if (tableState.subComponentsHeight[i]) {
            localBodyHeight += tableState.subComponentsHeight[i].subComponentHeight + popInRowHeight;
          } else if (rows[i]) {
            localBodyHeight += popInRowHeight;
          } else {
            break;
          }
          if (localBodyHeight >= bodyHeight) {
            break;
          }
          subCompsRowCount++;
          i++;
        }
        dispatch({
          type: "VISIBLE_ROWS",
          payload: {
            visibleRows: Math.max(1, subCompsRowCount)
          }
        });
      } else {
        const rowCount = Math.max(1, Math.floor(bodyHeight / popInRowHeight));
        dispatch({
          type: "VISIBLE_ROWS",
          payload: {
            visibleRows: rowCount
          }
        });
      }
    }
  }, [(_f = (_e = analyticalTableRef.current) == null ? void 0 : _e.parentElement) == null ? void 0 : _f.getBoundingClientRect().height, (_g = analyticalTableRef.current) == null ? void 0 : _g.getBoundingClientRect().y, extensionsHeight, popInRowHeight, visibleRowCountMode, includeSubCompRowHeight, tableState.subComponentsHeight]);
  (0, import_react31.useEffect)(() => {
    setGlobalFilter(globalFilterValue);
  }, [globalFilterValue, setGlobalFilter]);
  (0, import_react31.useEffect)(() => {
    var _a2, _b2;
    const debouncedWidthObserverFn = debounce(updateTableClientWidth, 60);
    const tableWidthObserver = new ResizeObserver(debouncedWidthObserverFn);
    tableWidthObserver.observe(tableRef.current);
    const debouncedHeightObserverFn = debounce(updateRowsCount, 60);
    const parentHeightObserver = new ResizeObserver(debouncedHeightObserverFn);
    if ((_a2 = analyticalTableRef.current) == null ? void 0 : _a2.parentElement) {
      parentHeightObserver.observe((_b2 = analyticalTableRef.current) == null ? void 0 : _b2.parentElement);
    }
    return () => {
      debouncedHeightObserverFn.cancel();
      debouncedWidthObserverFn.cancel();
      tableWidthObserver.disconnect();
      parentHeightObserver.disconnect();
    };
  }, [updateTableClientWidth, updateRowsCount]);
  useIsomorphicLayoutEffect(() => {
    dispatch({
      type: "IS_RTL",
      payload: {
        isRtl
      }
    });
  }, [isRtl]);
  useIsomorphicLayoutEffect(() => {
    updateTableClientWidth();
  }, [updateTableClientWidth]);
  useIsomorphicLayoutEffect(() => {
    updateRowsCount();
  }, [updateRowsCount]);
  (0, import_react31.useEffect)(() => {
    if (tableState.visibleRows !== void 0 && visibleRowCountMode === AnalyticalTableVisibleRowCountMode.Fixed) {
      dispatch({
        type: "VISIBLE_ROWS",
        payload: {
          visibleRows: void 0
        }
      });
    }
  }, [visibleRowCountMode, tableState.visibleRows]);
  (0, import_react31.useEffect)(() => {
    if (groupBy) {
      setGroupBy(groupBy);
    }
  }, [groupBy, setGroupBy]);
  (0, import_react31.useEffect)(() => {
    if (selectedRowIds) {
      dispatch({
        type: "SET_SELECTED_ROW_IDS",
        payload: {
          selectedRowIds
        }
      });
    }
  }, [selectedRowIds]);
  (0, import_react31.useEffect)(() => {
    var _a2;
    if ((tableState == null ? void 0 : tableState.interactiveRowsHavePopIn) && (!(tableState == null ? void 0 : tableState.popInColumns) || ((_a2 = tableState == null ? void 0 : tableState.popInColumns) == null ? void 0 : _a2.length) === 0)) {
      dispatch({
        type: "WITH_POPIN",
        payload: false
      });
    }
  }, [tableState == null ? void 0 : tableState.interactiveRowsHavePopIn, (_h = tableState == null ? void 0 : tableState.popInColumns) == null ? void 0 : _h.length]);
  const tableBodyHeight = (0, import_react31.useMemo)(() => {
    if (typeof tableState.bodyHeight === "number") {
      return tableState.bodyHeight;
    }
    let rowNum;
    if (visibleRowCountMode === AnalyticalTableVisibleRowCountMode.AutoWithEmptyRows) {
      rowNum = internalVisibleRowCount;
    } else {
      rowNum = rows.length < internalVisibleRowCount ? Math.max(rows.length, minRows) : internalVisibleRowCount;
    }
    const rowHeight2 = visibleRowCountMode === AnalyticalTableVisibleRowCountMode.Auto || visibleRowCountMode === AnalyticalTableVisibleRowCountMode.AutoWithEmptyRows || tableState.interactiveRowsHavePopIn || adjustTableHeightOnPopIn ? popInRowHeight : internalRowHeight;
    if (includeSubCompRowHeight) {
      let initialBodyHeightWithSubComps = 0;
      for (let i = 0; i < rowNum; i++) {
        if (tableState.subComponentsHeight[i]) {
          initialBodyHeightWithSubComps += tableState.subComponentsHeight[i].subComponentHeight + rowHeight2;
        } else if (rows[i]) {
          initialBodyHeightWithSubComps += rowHeight2;
        }
      }
      return initialBodyHeightWithSubComps;
    }
    return rowHeight2 * rowNum;
  }, [internalRowHeight, rows.length, internalVisibleRowCount, minRows, popInRowHeight, visibleRowCountMode, tableState.interactiveRowsHavePopIn, adjustTableHeightOnPopIn, includeSubCompRowHeight, tableState.subComponentsHeight, tableState.bodyHeight]);
  (0, import_react31.useEffect)(() => {
    const visibleRowCount = rows.length < internalVisibleRowCount ? Math.max(rows.length, minRows) : internalVisibleRowCount;
    if (popInRowHeight !== internalRowHeight) {
      dispatch({
        type: "TABLE_SCROLLING_ENABLED",
        payload: {
          isScrollable: visibleRowCount * popInRowHeight > tableBodyHeight || rows.length > visibleRowCount
        }
      });
    } else {
      dispatch({
        type: "TABLE_SCROLLING_ENABLED",
        payload: {
          isScrollable: rows.length > visibleRowCount
        }
      });
    }
  }, [rows.length, minRows, internalVisibleRowCount, popInRowHeight, tableBodyHeight]);
  const noDataStyles = {
    height: `${tableBodyHeight}px`,
    width: totalColumnsWidth ? `${totalColumnsWidth}px` : "100%"
  };
  (0, import_react31.useEffect)(() => {
    if ((columnOrder == null ? void 0 : columnOrder.length) > 0) {
      setColumnOrder(columnOrder);
    }
  }, [columnOrder]);
  const inlineStyle = (0, import_react31.useMemo)(() => {
    const tableStyles = {
      maxWidth: "100%",
      overflowX: "auto",
      display: "flex",
      flexDirection: "column"
    };
    if (rowHeight) {
      tableStyles["--_ui5wcr-AnalyticalTableRowHeight"] = `${rowHeight}px`;
      tableStyles["--_ui5wcr-AnalyticalTableHeaderRowHeight"] = `${rowHeight}px`;
    }
    if (headerRowHeight) {
      tableStyles["--_ui5wcr-AnalyticalTableHeaderRowHeight"] = `${headerRowHeight}px`;
    }
    if (tableState.tableClientWidth > 0) {
      return {
        ...tableStyles,
        ...style
      };
    }
    return {
      ...tableStyles,
      ...style,
      visibility: "hidden"
    };
  }, [tableState.tableClientWidth, style, rowHeight, headerRowHeight]);
  (0, import_react31.useEffect)(() => {
    var _a2;
    if (retainColumnWidth && ((_a2 = tableState.columnResizing) == null ? void 0 : _a2.isResizingColumn) && tableState.tableColResized == null) {
      dispatch({
        type: "TABLE_COL_RESIZED",
        payload: true
      });
    }
    if (tableState.tableColResized && !retainColumnWidth) {
      dispatch({
        type: "TABLE_COL_RESIZED",
        payload: void 0
      });
    }
  }, [tableState.columnResizing, retainColumnWidth, tableState.tableColResized]);
  const handleBodyScroll = (e) => {
    var _a2;
    if (typeof onTableScroll === "function") {
      onTableScroll(e);
    }
    const targetScrollTop = e.currentTarget.scrollTop;
    if (verticalScrollBarRef.current) {
      const vertScrollbarScrollElement = verticalScrollBarRef.current.firstElementChild;
      if (vertScrollbarScrollElement.offsetHeight !== ((_a2 = scrollContainerRef.current) == null ? void 0 : _a2.offsetHeight)) {
        vertScrollbarScrollElement.style.height = `${scrollContainerRef.current.offsetHeight}px`;
      }
      if (verticalScrollBarRef.current.scrollTop !== targetScrollTop) {
        if (!e.currentTarget.isExternalVerticalScroll) {
          verticalScrollBarRef.current.scrollTop = targetScrollTop;
          verticalScrollBarRef.current.isExternalVerticalScroll = true;
        }
        e.currentTarget.isExternalVerticalScroll = false;
      }
    }
  };
  const handleVerticalScrollBarScroll = (0, import_react31.useCallback)((e) => {
    if (parentRef.current && !e.currentTarget.isExternalVerticalScroll) {
      parentRef.current.scrollTop = e.currentTarget.scrollTop;
      parentRef.current.isExternalVerticalScroll = true;
    }
    e.currentTarget.isExternalVerticalScroll = false;
  }, []);
  (0, import_react31.useEffect)(() => {
    columnVirtualizer.measure();
  }, [columnVirtualizer, tableState.columnOrder, (_i = tableState.columnResizing) == null ? void 0 : _i.isResizingColumn, columns6, tableState.groupBy]);
  const totalSize = columnVirtualizer.getTotalSize();
  const showVerticalEndBorder = tableState.tableClientWidth > totalSize;
  const tableClasses = clsx(classNames4.table, withNavigationHighlight && classNames4.hasNavigationIndicator, showVerticalEndBorder && classNames4.showVerticalEndBorder, (className == null ? void 0 : className.includes("ui5-content-native-scrollbars")) && "ui5-content-native-scrollbars");
  const handleOnLoadMore = (e) => {
    const rootNodes = rows.filter((row) => row.depth === 0);
    onLoadMore(enrichEventWithDetails(e, {
      rowCount: rootNodes.length,
      totalRowCount: rows.length
    }));
  };
  const overscan = overscanCount ? overscanCount : Math.floor(visibleRows / 2);
  const rHeight = popInRowHeight !== internalRowHeight ? popInRowHeight : internalRowHeight;
  const itemCount = Math.max(minRows, rows.length, visibleRowCountMode === AnalyticalTableVisibleRowCountMode.AutoWithEmptyRows ? internalVisibleRowCount : 0) + (!tableState.isScrollable ? additionalEmptyRowsCount : 0);
  const rowVirtualizer = useVirtualizer({
    count: itemCount,
    getScrollElement: () => parentRef.current,
    estimateSize: (0, import_react31.useCallback)((index) => {
      var _a2, _b2, _c2, _d2, _e2, _f2;
      if (renderRowSubComponent && (((_a2 = rows[index]) == null ? void 0 : _a2.isExpanded) || alwaysShowSubComponent) && ((_c2 = (_b2 = tableState.subComponentsHeight) == null ? void 0 : _b2[index]) == null ? void 0 : _c2.rowId) === ((_d2 = rows[index]) == null ? void 0 : _d2.id)) {
        return rHeight + (((_f2 = (_e2 = tableState.subComponentsHeight) == null ? void 0 : _e2[index]) == null ? void 0 : _f2.subComponentHeight) ?? 0);
      }
      return rHeight;
    }, [rHeight, rows, renderRowSubComponent, alwaysShowSubComponent, tableState.subComponentsHeight]),
    overscan,
    measureElement: measureElement2,
    indexAttribute: "data-virtual-row-index",
    useAnimationFrameWithResizeObserver: true
  });
  tableInstanceRef.current.virtualRowsRange = rowVirtualizer.range;
  return (0, import_jsx_runtime158.jsxs)(import_jsx_runtime158.Fragment, {
    children: [(0, import_jsx_runtime158.jsxs)("div", {
      className,
      style: inlineStyle,
      ref: componentRef,
      ...rest,
      children: [header3 && (0, import_jsx_runtime158.jsx)(TitleBar, {
        ref: titleBarRef,
        titleBarId,
        children: header3
      }), extension && (0, import_jsx_runtime158.jsx)("div", {
        ref: extensionRef,
        children: extension
      }), (0, import_jsx_runtime158.jsxs)(FlexBox, {
        className: classNames4.tableContainerWithScrollBar,
        "data-component-name": "AnalyticalTableContainerWithScrollbar",
        children: [loading && !!rows.length && (0, import_jsx_runtime158.jsx)(BusyIndicator, {
          className: classNames4.busyIndicator,
          active: true,
          delay: loadingDelay,
          "data-component-name": "AnalyticalTableBusyIndicator",
          children: (0, import_jsx_runtime158.jsx)("span", {})
        }), showOverlay && (0, import_jsx_runtime158.jsxs)(import_jsx_runtime158.Fragment, {
          children: [(0, import_jsx_runtime158.jsx)("span", {
            id: invalidTableTextId,
            className: classNames4.hiddenA11yText,
            "aria-hidden": true,
            children: invalidTableA11yText
          }), (0, import_jsx_runtime158.jsx)("div", {
            tabIndex: 0,
            "aria-labelledby": `${titleBarId} ${invalidTableTextId}`,
            role: "region",
            "data-component-name": "AnalyticalTableOverlay",
            className: classNames4.overlay
          })]
        }), (0, import_jsx_runtime158.jsxs)("div", {
          "aria-labelledby": titleBarId,
          ...getTableProps(),
          tabIndex: loading || showOverlay ? -1 : 0,
          role: "grid",
          "aria-rowcount": rows.length,
          "aria-colcount": visibleColumns4.length,
          "data-per-page": internalVisibleRowCount,
          "aria-multiselectable": selectionMode === AnalyticalTableSelectionMode.Multiple,
          "data-component-name": "AnalyticalTableContainer",
          ref: tableRef,
          className: tableClasses,
          children: [(0, import_jsx_runtime158.jsx)("div", {
            className: classNames4.tableHeaderBackgroundElement
          }), (0, import_jsx_runtime158.jsx)("div", {
            className: classNames4.tableBodyBackgroundElement
          }), headerGroups.map((headerGroup) => {
            let headerProps3 = {};
            if (headerGroup.getHeaderGroupProps) {
              headerProps3 = headerGroup.getHeaderGroupProps();
            }
            return tableRef.current && (0, import_jsx_runtime158.jsx)(ColumnHeaderContainer, {
              ref: headerRef,
              resizeInfo: tableState.columnResizing,
              headerProps: headerProps3,
              headerGroup,
              isRtl,
              columnVirtualizer,
              uniqueId,
              showVerticalEndBorder,
              classNames: classNames4
            }, headerProps3.key);
          }), loading && (rows == null ? void 0 : rows.length) === 0 && (0, import_jsx_runtime158.jsx)(TablePlaceholder, {
            columns: visibleColumns4,
            rows: minRows,
            style: noDataStyles
          }), !loading && (rows == null ? void 0 : rows.length) === 0 && (0, import_jsx_runtime158.jsx)(NoDataComponent, {
            noDataText: noDataTextLocal,
            className: classNames4.noDataContainer,
            style: noDataStyles
          }), (rows == null ? void 0 : rows.length) > 0 && tableRef.current && (0, import_jsx_runtime158.jsx)(VirtualTableBodyContainer, {
            rowCollapsedFlag: tableState.rowCollapsed,
            dispatch,
            tableBodyHeight,
            totalColumnsWidth: columnVirtualizer.getTotalSize(),
            parentRef,
            classes: classNames4,
            infiniteScroll,
            infiniteScrollThreshold,
            onLoadMore: handleOnLoadMore,
            internalRowHeight,
            popInRowHeight,
            rows,
            handleExternalScroll: handleBodyScroll,
            visibleRows: internalVisibleRowCount,
            isGrouped,
            children: (0, import_jsx_runtime158.jsx)(VirtualTableBody, {
              scrollContainerRef,
              classes: classNames4,
              prepareRow,
              rows,
              scrollToRef,
              isTreeTable,
              internalRowHeight,
              popInRowHeight,
              alternateRowColor,
              visibleColumns: visibleColumns4,
              renderRowSubComponent,
              alwaysShowSubComponent,
              markNavigatedRow,
              isRtl,
              subComponentsHeight: tableState.subComponentsHeight,
              dispatch,
              columnVirtualizer,
              manualGroupBy: reactTableOptions == null ? void 0 : reactTableOptions.manualGroupBy,
              subRowsKey,
              subComponentsBehavior,
              triggerScroll: tableState.triggerScroll,
              rowVirtualizer
            })
          })]
        }), (additionalEmptyRowsCount || tableState.isScrollable === void 0 || tableState.isScrollable) && (0, import_jsx_runtime158.jsx)(VerticalScrollbar, {
          tableBodyHeight,
          internalRowHeight: internalHeaderRowHeight,
          tableRef,
          handleVerticalScrollBarScroll,
          ref: verticalScrollBarRef,
          scrollContainerRef,
          parentRef,
          nativeScrollbar: className == null ? void 0 : className.includes("ui5-content-native-scrollbars"),
          classNames: classNames4
        })]
      }), visibleRowCountMode === AnalyticalTableVisibleRowCountMode.Interactive && (0, import_jsx_runtime158.jsx)(VerticalResizer, {
        popInRowHeight,
        hasPopInColumns: ((_j = tableState == null ? void 0 : tableState.popInColumns) == null ? void 0 : _j.length) > 0,
        analyticalTableRef,
        dispatch,
        extensionsHeight,
        internalRowHeight,
        rowsLength: rows.length,
        visibleRows: internalVisibleRowCount,
        handleOnLoadMore,
        classNames: classNames4
      })]
    }), (0, import_jsx_runtime158.jsx)(Text3, {
      "aria-hidden": "true",
      id: `scaleModeHelper-${uniqueId}`,
      className: classNames4.hiddenSmartColMeasure,
      "data-component-name": "AnalyticalTableScaleModeHelper",
      children: ""
    }), (0, import_jsx_runtime158.jsx)(Text3, {
      "aria-hidden": "true",
      id: `scaleModeHelperHeader-${uniqueId}`,
      className: clsx(classNames4.hiddenSmartColMeasure, classNames4.hiddenSmartColMeasureHeader),
      "data-component-name": "AnalyticalTableScaleModeHelperHeader",
      children: ""
    })]
  });
});
AnalyticalTable.displayName = "AnalyticalTable";

// node_modules/@ui5/webcomponents-react/dist/components/ObjectPageHeader/index.js
var import_react32 = __toESM(require_react(), 1);

// node_modules/@ui5/webcomponents-react/dist/components/ObjectPageHeader/ObjectPageHeader.module.css.js
var styleData6 = `@layer ui5-webcomponents-react{._header_19ofl_1{background-color:var(--sapObjectHeader_Background);display:var(--_ui5wcr_ObjectPage_header_display);overflow:hidden;padding-block-end:1rem;padding-block-start:1rem;position:sticky;z-index:1}}`;
var classNames6 = {
  "header": "_header_19ofl_1"
};

// node_modules/@ui5/webcomponents-react/dist/components/ObjectPageHeader/index.js
var import_jsx_runtime159 = __toESM(require_jsx_runtime(), 1);
var ObjectPageHeader = (0, import_react32.forwardRef)((props, ref) => {
  const {
    children,
    headerPinned,
    topHeaderHeight,
    className,
    style,
    ...rest
  } = props;
  const headerStyles = (0, import_react32.useMemo)(() => {
    if (headerPinned) {
      return {
        ...style,
        top: `${topHeaderHeight}px`,
        zIndex: 1
      };
    }
    return style;
  }, [headerPinned, topHeaderHeight, style]);
  useStylesheet(styleData6, ObjectPageHeader.displayName);
  return (0, import_jsx_runtime159.jsx)("div", {
    ref,
    ...rest,
    className: clsx(classNames6.header, className),
    "data-component-name": "ObjectPageHeader",
    style: headerStyles,
    children
  });
});
ObjectPageHeader.displayName = "ObjectPageHeader";

// node_modules/@ui5/webcomponents-react/dist/components/ObjectPageTitle/index.js
var import_react33 = __toESM(require_react(), 1);

// node_modules/@ui5/webcomponents-react/dist/components/ObjectPageTitle/ObjectPageTitle.module.css.js
var styleData7 = `@layer ui5-webcomponents-react{._container_ivs52_1{background-color:var(--sapObjectHeader_Background);cursor:pointer;flex:1 1 100%;inset-block-start:0;min-height:3rem;padding-block-end:.5rem;padding-block-start:.5rem;position:sticky;z-index:2}._container_ivs52_1[data-not-clickable=true]{cursor:unset}._container_ivs52_1[data-not-clickable=true]:hover{background-color:var(--sapObjectHeader_Background)}._container_ivs52_1:hover{background-color:var(--sapObjectHeader_Hover_Background)}._phone_ivs52_25{--_ui5wcr_ObjectPage_title_fontsize:var(--sapObjectHeader_Title_SnappedFontSize)}._breadcrumbs_ivs52_29{min-width:50%;padding:.5rem 0 .25rem 0}._breadcrumbs_ivs52_29:only-child{width:100%}._titleMainSection_ivs52_38{align-items:baseline;flex:1 1 auto;overflow-x:hidden}._middleSection_ivs52_44{flex-grow:1;overflow-x:hidden;width:100%}._title_ivs52_38{color:var(--sapObjectHeader_Title_TextColor);flex-shrink:1;font-family:var(--sapObjectHeader_Title_FontFamily);font-size:var(--_ui5wcr_ObjectPage_title_fontsize);hyphens:auto;min-width:3rem;overflow-wrap:break-word;overflow-x:hidden;padding-block-start:.3125rem}._title_ivs52_38>*{color:inherit;font-family:inherit;font-size:inherit;hyphens:inherit;overflow-wrap:inherit}@container (min-width: 600px) and (max-width: 1023px){._title_ivs52_38{padding-block-start:.6875rem}}._subTitle_ivs52_76{color:var(--sapObjectHeader_Subtitle_TextColor);font-size:var(--sapFontSize);hyphens:auto;overflow-wrap:break-word;padding-inline-start:.5rem}._subTitle_ivs52_76>*{color:inherit;font-size:inherit;hyphens:inherit;overflow-wrap:inherit}._subTitleBottom_ivs52_91{margin-block-start:.25rem;padding-inline-start:0}._content_ivs52_96{display:flex;flex-shrink:1.6;padding-inline-start:.5rem}._toolbar_ivs52_102{align-items:center;display:flex;flex-grow:1;flex-shrink:1.6;justify-content:flex-end;min-width:3rem}._toolbar_ivs52_102>[ui5-toolbar]{border:none;padding:0}._toolbar_ivs52_102>[ui5-toolbar]:not(:first-child):last-child{flex:0 1}._toolbar_ivs52_102>[data-component-name=Toolbar]:not(:first-child):last-child{flex-shrink:0;width:unset}._toolbar_ivs52_102>[ui5-toolbar]:only-child{flex-grow:1;flex-shrink:0}._actionsSeparator_ivs52_130{background:var(--sapToolbar_SeparatorColor);flex-shrink:0;height:var(--_ui5-v2-7-3_dynamic_page_title_actions_separator_height);width:.0625rem}._clickArea_ivs52_137{inset:0;position:absolute}}`;
var classNames7 = {
  "container": "_container_ivs52_1",
  "phone": "_phone_ivs52_25",
  "breadcrumbs": "_breadcrumbs_ivs52_29",
  "titleMainSection": "_titleMainSection_ivs52_38",
  "middleSection": "_middleSection_ivs52_44",
  "title": "_title_ivs52_38",
  "subTitle": "_subTitle_ivs52_76",
  "subTitleBottom": "_subTitleBottom_ivs52_91",
  "content": "_content_ivs52_96",
  "toolbar": "_toolbar_ivs52_102",
  "actionsSeparator": "_actionsSeparator_ivs52_130",
  "clickArea": "_clickArea_ivs52_137"
};

// node_modules/@ui5/webcomponents-react/dist/components/ObjectPageTitle/index.js
var import_jsx_runtime160 = __toESM(require_jsx_runtime(), 1);
var ObjectPageTitle = (0, import_react33.forwardRef)((props, ref) => {
  var _a, _b;
  const {
    actionsBar,
    breadcrumbs,
    children,
    header: header3,
    subHeader,
    navigationBar,
    className,
    onToggleHeaderContentVisibility,
    expandedContent,
    snappedContent,
    ...rest
  } = props;
  useStylesheet(styleData7, ObjectPageTitle.displayName);
  const [componentRef, dynamicPageTitleRef] = useSyncRef(ref);
  const [showNavigationInTopArea, setShowNavigationInTopArea] = (0, import_react33.useState)(void 0);
  const isMounted = (0, import_react33.useRef)(false);
  const [isPhone3, setIsPhone] = (0, import_react33.useState)(((_b = Device_exports.getCurrentRange((_a = dynamicPageTitleRef.current) == null ? void 0 : _a.getBoundingClientRect().width)) == null ? void 0 : _b.name) === "Phone");
  const containerClasses = clsx(classNames7.container, isPhone3 && classNames7.phone, className);
  const toolbarContainerRef = (0, import_react33.useRef)(null);
  (0, import_react33.useEffect)(() => {
    isMounted.current = true;
    return () => {
      isMounted.current = false;
    };
  }, [isMounted]);
  const onHeaderClick = (e) => {
    if (typeof onToggleHeaderContentVisibility === "function") {
      onToggleHeaderContentVisibility(e);
    }
  };
  (0, import_react33.useEffect)(() => {
    const debouncedObserverFn = debounce(([titleContainer]) => {
      var _a2;
      const borderBoxSize = Array.isArray(titleContainer.borderBoxSize) ? titleContainer.borderBoxSize[0] : titleContainer.borderBoxSize;
      const titleContainerWidth = (borderBoxSize == null ? void 0 : borderBoxSize.inlineSize) ?? titleContainer.target.getBoundingClientRect().width;
      setIsPhone(((_a2 = Device_exports.getCurrentRange(titleContainerWidth)) == null ? void 0 : _a2.name) === "Phone");
      if (titleContainerWidth < 1280 && !showNavigationInTopArea === true && isMounted.current) {
        setShowNavigationInTopArea(true);
      } else if (titleContainerWidth >= 1280 && !showNavigationInTopArea === false && isMounted.current) {
        setShowNavigationInTopArea(false);
      }
    }, 150);
    const observer = new ResizeObserver(debouncedObserverFn);
    if (dynamicPageTitleRef.current) {
      observer.observe(dynamicPageTitleRef.current);
    }
    return () => {
      debouncedObserverFn.cancel();
      observer.disconnect();
    };
  }, [dynamicPageTitleRef.current, showNavigationInTopArea, isMounted]);
  const [wcrNavToolbar, setWcrNavToolbar] = (0, import_react33.useState)(null);
  (0, import_react33.useEffect)(() => {
    var _a2;
    if ((0, import_react33.isValidElement)(navigationBar) && ((_a2 = navigationBar == null ? void 0 : navigationBar.type) == null ? void 0 : _a2._displayName) === "UI5WCRToolbar") {
      setWcrNavToolbar((0, import_react33.cloneElement)(navigationBar, {
        numberOfAlwaysVisibleItems: Infinity
      }));
    }
  }, [navigationBar]);
  (0, import_react33.useEffect)(() => {
    const toolbarContainer = toolbarContainerRef.current;
    const updateNavigationToolbar = (container) => {
      if (container.children.length >= 2) {
        const lastChild = container.lastElementChild;
        if (lastChild && lastChild.matches("[ui5-toolbar]")) {
          Array.from(lastChild.children).forEach((item2) => {
            item2.setAttribute("overflow-priority", "NeverOverflow");
          });
        }
      }
    };
    const observer = new MutationObserver(([toolbarContainerMutation]) => {
      if (toolbarContainerMutation.type === "childList") {
        updateNavigationToolbar(toolbarContainerMutation.target);
      }
    });
    const config = {
      childList: true,
      subtree: true
    };
    if (toolbarContainer) {
      updateNavigationToolbar(toolbarContainer);
      observer.observe(toolbarContainer, config);
    }
    return () => {
      observer.disconnect();
    };
  }, []);
  return (0, import_jsx_runtime160.jsxs)(FlexBox, {
    className: containerClasses,
    ref: componentRef,
    "data-component-name": "ObjectPageTitle",
    direction: FlexBoxDirection.Column,
    justifyContent: FlexBoxJustifyContent.SpaceBetween,
    ...rest,
    children: [(0, import_jsx_runtime160.jsx)("span", {
      className: classNames7.clickArea,
      onClick: onHeaderClick,
      "data-component-name": "ObjectPageTitleClickElement"
    }), (breadcrumbs || navigationBar && showNavigationInTopArea) && (0, import_jsx_runtime160.jsxs)(FlexBox, {
      justifyContent: FlexBoxJustifyContent.SpaceBetween,
      "data-component-name": "ObjectPageTitleBreadcrumbs",
      children: [breadcrumbs && (0, import_jsx_runtime160.jsx)("div", {
        className: classNames7.breadcrumbs,
        onClick: stopPropagation,
        children: breadcrumbs
      }), showNavigationInTopArea && navigationBar && (0, import_jsx_runtime160.jsx)("div", {
        className: classNames7.toolbar,
        children: navigationBar
      })]
    }), (0, import_jsx_runtime160.jsxs)(FlexBox, {
      alignItems: FlexBoxAlignItems.Center,
      className: classNames7.middleSection,
      "data-component-name": "ObjectPageTitleMiddleSection",
      children: [(0, import_jsx_runtime160.jsxs)(FlexBox, {
        className: classNames7.titleMainSection,
        onClick: onHeaderClick,
        children: [header3 && (0, import_jsx_runtime160.jsx)("div", {
          className: classNames7.title,
          "data-component-name": "ObjectPageTitleHeader",
          children: header3
        }), children && (0, import_jsx_runtime160.jsx)("div", {
          className: classNames7.content,
          "data-component-name": "ObjectPageTitleContent",
          children
        })]
      }), (actionsBar || !showNavigationInTopArea && navigationBar) && (0, import_jsx_runtime160.jsxs)("div", {
        className: classNames7.toolbar,
        ref: toolbarContainerRef,
        children: [actionsBar, !showNavigationInTopArea && actionsBar && navigationBar && (0, import_jsx_runtime160.jsx)("div", {
          className: classNames7.actionsSeparator,
          "data-component-name": "ObjectPageTitleActionsSeparator",
          "aria-hidden": true
        }), !showNavigationInTopArea && (wcrNavToolbar ? wcrNavToolbar : navigationBar)]
      })]
    }), subHeader && (0, import_jsx_runtime160.jsx)(FlexBox, {
      children: (0, import_jsx_runtime160.jsx)("div", {
        className: clsx(classNames7.subTitle, classNames7.subTitleBottom),
        "data-component-name": "ObjectPageTitleSubHeader",
        children: subHeader
      })
    }), (props == null ? void 0 : props["data-header-content-visible"]) ? expandedContent : props["data-is-snapped-rendered-outside"] ? void 0 : snappedContent]
  });
});
ObjectPageTitle.displayName = "ObjectPageTitle";

// node_modules/@ui5/webcomponents/dist/types/ToolbarDesign.js
var ToolbarDesign;
(function(ToolbarDesign2) {
  ToolbarDesign2["Solid"] = "Solid";
  ToolbarDesign2["Transparent"] = "Transparent";
})(ToolbarDesign || (ToolbarDesign = {}));
var ToolbarDesign_default = ToolbarDesign;

// node_modules/@ui5/webcomponents-react/dist/components/FilterBar/index.js
var import_react38 = __toESM(require_react(), 1);

// node_modules/@ui5/webcomponents/dist/types/BusyIndicatorSize.js
var BusyIndicatorSize;
(function(BusyIndicatorSize2) {
  BusyIndicatorSize2["S"] = "S";
  BusyIndicatorSize2["M"] = "M";
  BusyIndicatorSize2["L"] = "L";
})(BusyIndicatorSize || (BusyIndicatorSize = {}));
var BusyIndicatorSize_default = BusyIndicatorSize;

// node_modules/@ui5/webcomponents-icons/dist/v4/circle-task-2.js
var name92 = "circle-task-2";
var pathData89 = "M256 0q53 0 99.5 20T437 75t55 81.5 20 99.5-20 99.5-55 81.5-81.5 55-99.5 20q-54 0-100-20t-81-55-55-81.5T0 256t20-99.5T75 75t81-55T256 0z";
var ltr89 = false;
var collection91 = "SAP-icons-v4";
var packageName89 = "@ui5/webcomponents-icons";
registerIcon(name92, { pathData: pathData89, ltr: ltr89, collection: collection91, packageName: packageName89 });

// node_modules/@ui5/webcomponents-icons/dist/v5/circle-task-2.js
var name93 = "circle-task-2";
var pathData90 = "M256 0q53 0 100 20t81.5 54.5T492 156t20 100-20 100-54.5 81.5T356 492t-100 20-100-20-81.5-54.5T20 356 0 256t20-100 54.5-81.5T156 20 256 0z";
var ltr90 = false;
var collection92 = "SAP-icons-v5";
var packageName90 = "@ui5/webcomponents-icons";
registerIcon(name93, { pathData: pathData90, ltr: ltr90, collection: collection92, packageName: packageName90 });

// node_modules/@ui5/webcomponents-icons/dist/circle-task-2.js
var circle_task_2_default = "circle-task-2";

// node_modules/@ui5/webcomponents-icons/dist/v4/collapse-group.js
var name94 = "collapse-group";
var pathData91 = "M267.5 120q-12-11-23 0l-159 157q-10 10-23 10t-22-10q-10-9-10-22t10-23l193-191q9-9 22.5-9t22.5 9l192 192q10 10 10 23t-10 23q-9 9-22.5 9t-22.5-9zm0 193q-12-11-23 0l-159 157q-10 10-23 10t-22-10q-10-9-10-22t10-23l193-191q9-9 22.5-9t22.5 9l192 192q10 10 10 23t-10 23q-9 9-22.5 9t-22.5-9z";
var ltr91 = false;
var accData57 = ICON_COLLAPSE_GROUP;
var collection93 = "SAP-icons-v4";
var packageName91 = "@ui5/webcomponents-icons";
registerIcon(name94, { pathData: pathData91, ltr: ltr91, accData: accData57, collection: collection93, packageName: packageName91 });

// node_modules/@ui5/webcomponents-icons/dist/v5/collapse-group.js
var name95 = "collapse-group";
var pathData92 = "M390 256q-10 0-18-8L256 127 140 248q-8 8-18 8-11 0-18.5-7.5T96 230q0-10 7-17L238 72q6-8 18-8 11 0 19 8l134 141q7 7 7 17 0 11-7.5 18.5T390 256zm0 192q-10 0-18-8L256 319 140 440q-8 8-18 8-11 0-18.5-7.5T96 422q0-10 7-17l135-141q6-8 18-8 11 0 19 8l134 141q7 7 7 17 0 11-7.5 18.5T390 448z";
var ltr92 = false;
var accData58 = ICON_COLLAPSE_GROUP;
var collection94 = "SAP-icons-v5";
var packageName92 = "@ui5/webcomponents-icons";
registerIcon(name95, { pathData: pathData92, ltr: ltr92, accData: accData58, collection: collection94, packageName: packageName92 });

// node_modules/@ui5/webcomponents-icons/dist/collapse-group.js
var collapse_group_default = "collapse-group";

// node_modules/@ui5/webcomponents-icons/dist/v4/expand-group.js
var name96 = "expand-group";
var pathData93 = "M425.5 234q9-9 22.5-9t22.5 9q10 10 10 23t-10 23l-192 192q-9 9-22.5 9t-22.5-9l-193-191q-10-10-10-23t10-22q9-10 22-10t23 10l159 157q11 11 23 0zm0-193q9-9 22.5-9t22.5 9q10 10 10 23t-10 23l-192 192q-9 9-22.5 9t-22.5-9L40.5 88q-10-10-10-23t10-22q9-10 22-10t23 10l159 157q5 5 11.5 5t11.5-5z";
var ltr93 = false;
var accData59 = ICON_EXPAND_GROUP;
var collection95 = "SAP-icons-v4";
var packageName93 = "@ui5/webcomponents-icons";
registerIcon(name96, { pathData: pathData93, ltr: ltr93, accData: accData59, collection: collection95, packageName: packageName93 });

// node_modules/@ui5/webcomponents-icons/dist/v5/expand-group.js
var name97 = "expand-group";
var pathData94 = "M390 64q11 0 18.5 7.5T416 90q0 10-7 17L275 248q-8 8-19 8-12 0-18-8L103 107q-7-7-7-17 0-11 7.5-18.5T122 64q10 0 18 8l116 121L372 72q8-8 18-8zm0 192q11 0 18.5 7.5T416 282q0 10-7 17L275 440q-8 8-19 8-12 0-18-8L103 299q-7-7-7-17 0-11 7.5-18.5T122 256q10 0 18 8l116 121 116-121q8-8 18-8z";
var ltr94 = false;
var accData60 = ICON_EXPAND_GROUP;
var collection96 = "SAP-icons-v5";
var packageName94 = "@ui5/webcomponents-icons";
registerIcon(name97, { pathData: pathData94, ltr: ltr94, accData: accData60, collection: collection96, packageName: packageName94 });

// node_modules/@ui5/webcomponents-icons/dist/expand-group.js
var expand_group_default = "expand-group";

// node_modules/@ui5/webcomponents-icons/dist/v4/navigation-up-arrow.js
var name98 = "navigation-up-arrow";
var pathData95 = "M86.5 380q-9 9-22.5 9t-22.5-9q-10-10-10-23t10-23l193-197q4-2 5-3 2-1 2.5-1.5t2.5-1.5q6-2 11-2 2 0 3 .5t2 .5q4 0 6 1t3.5 2 3.5 2q1 1 1.5 1t1.5 1 2 1l192 196q10 10 10 23t-10 23q-9 9-22.5 9t-22.5-9l-154-155q-16-10-32 0z";
var ltr95 = false;
var collection97 = "SAP-icons-v4";
var packageName95 = "@ui5/webcomponents-icons";
registerIcon(name98, { pathData: pathData95, ltr: ltr95, collection: collection97, packageName: packageName95 });

// node_modules/@ui5/webcomponents-icons/dist/v5/navigation-up-arrow.js
var name99 = "navigation-up-arrow";
var pathData96 = "M416 326q0 11-7.5 18.5T390 352q-10 0-18-8L256 223 140 344q-8 8-18 8-11 0-18.5-7.5T96 326q0-10 7-17l135-141q6-8 18-8 11 0 19 8l134 141q7 7 7 17z";
var ltr96 = false;
var collection98 = "SAP-icons-v5";
var packageName96 = "@ui5/webcomponents-icons";
registerIcon(name99, { pathData: pathData96, ltr: ltr96, collection: collection98, packageName: packageName96 });

// node_modules/@ui5/webcomponents-icons/dist/navigation-up-arrow.js
var navigation_up_arrow_default = "navigation-up-arrow";

// node_modules/@ui5/webcomponents-react/dist/components/FilterGroupItem/index.js
var import_react35 = __toESM(require_react(), 1);

// node_modules/@ui5/webcomponents-react/dist/internal/FilterBarDialogContext.js
var import_react34 = __toESM(require_react(), 1);
var FilterBarDialogContext = (0, import_react34.createContext)({});

// node_modules/@ui5/webcomponents-react/dist/components/FilterGroupItem/FilterGroupItem.module.css.js
var styleData8 = `@layer ui5-webcomponents-react{._filterItem_11sb2_1{flex-basis:var(--_ui5wcr_filter_group_item_flex_basis);flex-grow:1;flex-shrink:0;margin-block-end:1rem;margin-inline-end:1rem;max-width:calc(var(--_ui5wcr_filter_group_item_flex_basis));position:relative;z-index:0}._filterItem_11sb2_1[data-with-toolbar=false]{max-width:calc(var(--_ui5wcr_filter_group_item_flex_basis)*2)}._innerFilterItemContainer_11sb2_18{display:flex;flex-direction:column;justify-content:flex-start}._innerFilterItemContainer_11sb2_18>:last-child{width:100%}._loadingContainer_11sb2_28{display:flex;height:1.625rem;justify-content:center;width:100%}._dialogTableRow_11sb2_35{--_ui5wcr-ActiveIconDisplayVariable:inline-block}._dialogTableRow_11sb2_35 *{cursor:pointer}._dialogCellLabel_11sb2_42{color:var(--sapTextColor)}._dialogActiveCell_11sb2_46{justify-content:center}._dialogActiveIcon_11sb2_50{color:var(--sapNeutralColor);display:var(--_ui5wcr-ActiveIconDisplayVariable);transform:scale(-50%)}._labelContainer_11sb2_56 :not(:first-child){width:100%}._withReorderBtns_11sb2_62{--_ui5wcr-ReorderBtnsDisplay:none}._withReorderBtns_11sb2_62>[ui5-table-cell]{padding-block:0}._withReorderBtns_11sb2_62[aria-selected=true]:active,._withReorderBtns_11sb2_62[aria-selected=true]:focus{--_ui5wcr-ActiveIconDisplayVariable:none;--_ui5wcr-ReorderBtnsDisplay:flex}._withReorderHoverBtns_11sb2_76[aria-selected=true]:hover{--_ui5wcr-ReorderBtnsDisplay:flex;--_ui5wcr-ActiveIconDisplayVariable:none}._reorderBtnsContainer_11sb2_83{display:var(--_ui5wcr-ReorderBtnsDisplay)}._pseudoInvisibleText_11sb2_87{font-size:0;left:0;position:absolute;top:0;user-select:none}}`;
var classNames8 = {
  "filterItem": "_filterItem_11sb2_1",
  "innerFilterItemContainer": "_innerFilterItemContainer_11sb2_18",
  "loadingContainer": "_loadingContainer_11sb2_28",
  "dialogTableRow": "_dialogTableRow_11sb2_35",
  "dialogCellLabel": "_dialogCellLabel_11sb2_42",
  "dialogActiveCell": "_dialogActiveCell_11sb2_46",
  "dialogActiveIcon": "_dialogActiveIcon_11sb2_50",
  "labelContainer": "_labelContainer_11sb2_56",
  "withReorderBtns": "_withReorderBtns_11sb2_62",
  "withReorderHoverBtns": "_withReorderHoverBtns_11sb2_76",
  "reorderBtnsContainer": "_reorderBtnsContainer_11sb2_83",
  "pseudoInvisibleText": "_pseudoInvisibleText_11sb2_87"
};

// node_modules/@ui5/webcomponents-react/dist/components/FilterGroupItem/index.js
var import_jsx_runtime161 = __toESM(require_jsx_runtime(), 1);
var isMac2 = isMac();
var FilterGroupItem = (0, import_react35.forwardRef)((props, ref) => {
  useStylesheet(styleData8, FilterGroupItem.displayName);
  const {
    groupName = "default",
    considerGroupName,
    label = "",
    labelTooltip,
    required,
    hidden,
    hiddenInFilterBar,
    children,
    loading,
    className,
    slot,
    active,
    filterKey,
    ...rest
  } = props;
  const i18nBundle = useI18nBundle("@ui5/webcomponents-react");
  const index = props["data-index"];
  const isomporphicReorderKey = isMac2 ? "CMD" : "CTRL";
  const tableRowRef = (0, import_react35.useRef)(null);
  const {
    isFilterInDialog,
    isListView,
    withValues,
    enableReordering,
    showBtnsOnHover,
    currentReorderedItemOrderId,
    handleFocusFallback,
    onReorder,
    setShowBtnsOnHover,
    setSelectedKeys,
    setRequiredKeys,
    prevIsListView
  } = (0, import_react35.useContext)(FilterBarDialogContext);
  const listViewHasChanged = (0, import_react35.useRef)((prevIsListView == null ? void 0 : prevIsListView.current) !== isListView);
  (0, import_react35.useEffect)(() => {
    if ((prevIsListView == null ? void 0 : prevIsListView.current) !== isListView) {
      listViewHasChanged.current = true;
    }
  }, [isListView]);
  const inFB = !isFilterInDialog;
  const withReordering = enableReordering && !withValues && isListView;
  const [itemPosition, setItemPosition] = (0, import_react35.useState)(void 0);
  const handleFocus = (e) => {
    setShowBtnsOnHover(false);
    if (e.currentTarget.nextSibling === null) {
      setItemPosition("last");
    } else if (index === 0) {
      setItemPosition("first");
    } else {
      setItemPosition(void 0);
    }
  };
  (0, import_react35.useEffect)(() => {
    if (index === 0) {
      setItemPosition("first");
    }
  }, [index]);
  const handleReorder = (e) => {
    setItemPosition(void 0);
    onReorder({
      index,
      direction: e.currentTarget.dataset.reorder,
      target: tableRowRef.current,
      filterKey
    });
  };
  const handleKeyDown = (e) => {
    if (e.ctrlKey || e.metaKey) {
      const directionMap = {
        Home: "top",
        End: "bottom",
        ArrowUp: "up",
        ArrowDown: "down"
      };
      const direction = directionMap[e.key];
      if (direction) {
        setItemPosition(void 0);
        onReorder({
          index,
          direction,
          target: e.currentTarget,
          filterKey
        });
      }
    }
  };
  (0, import_react35.useEffect)(() => {
    if (withReordering && tableRowRef.current && currentReorderedItemOrderId === filterKey && typeof index === "number") {
      handleFocusFallback();
    }
  }, [withReordering, currentReorderedItemOrderId, filterKey, index]);
  (0, import_react35.useEffect)(() => {
    if (!inFB && !hidden && !(listViewHasChanged == null ? void 0 : listViewHasChanged.current)) {
      if (setSelectedKeys) {
        setSelectedKeys((prev) => {
          const keysSet = new Set(prev);
          if (hiddenInFilterBar && !required) {
            keysSet.delete(`${filterKey}`);
          } else {
            keysSet.add(`${filterKey}`);
          }
          return Array.from(keysSet);
        });
      }
      if (setRequiredKeys) {
        setRequiredKeys((prev) => ({
          ...prev,
          [`${filterKey}`]: !!required
        }));
      }
    }
    if (listViewHasChanged == null ? void 0 : listViewHasChanged.current) {
      listViewHasChanged.current = false;
    }
  }, [inFB, hidden, hiddenInFilterBar, filterKey, setSelectedKeys, isListView, required]);
  if (!required && (hidden || inFB && hiddenInFilterBar)) return null;
  if (!inFB) {
    return (
      //todo: disable selection for required fields when it's possible, or the table is fully controllable (https://github.com/SAP/ui5-webcomponents/issues/5662)
      (0, import_jsx_runtime161.jsxs)(TableRow3, {
        ref: tableRowRef,
        rowKey: `${filterKey}`,
        "data-text": label,
        "data-required": required,
        "data-component-name": "FilterBarDialogTableRow",
        className: clsx(classNames8.dialogTableRow, withReordering && classNames8.withReorderBtns, withReordering && showBtnsOnHover && classNames8.withReorderHoverBtns),
        onFocus: withReordering ? handleFocus : void 0,
        onKeyDown: withReordering ? handleKeyDown : void 0,
        "aria-live": withReordering ? "polite" : void 0,
        "aria-label": withReordering ? i18nBundle.getText(FILTER_DIALOG_REORDER_FILTERS, isomporphicReorderKey) : void 0,
        children: [(0, import_jsx_runtime161.jsx)(TableCell3, {
          "data-component-name": "FilterBarDialogTableCellFilter",
          children: (0, import_jsx_runtime161.jsxs)(FlexBox, {
            fitContainer: true,
            direction: FlexBoxDirection.Column,
            justifyContent: FlexBoxJustifyContent.Center,
            className: classNames8.labelContainer,
            "data-in-filters-dialog": true,
            children: [(0, import_jsx_runtime161.jsx)(Label, {
              className: classNames8.dialogCellLabel,
              title: labelTooltip ?? label,
              required,
              showColon: !!label && withValues,
              children: label
            }), withValues && children]
          })
        }), !withValues && (0, import_jsx_runtime161.jsxs)(TableCell3, {
          className: classNames8.dialogActiveCell,
          "data-component-name": "FilterBarDialogTableCellActive",
          children: [isListView && withReordering && (0, import_jsx_runtime161.jsxs)(FlexBox, {
            fitContainer: true,
            justifyContent: FlexBoxJustifyContent.Center,
            alignItems: FlexBoxAlignItems.Center,
            className: classNames8.reorderBtnsContainer,
            "data-component-name": "FilterBarDialogTableCellReorderBtns",
            children: [(0, import_jsx_runtime161.jsx)(Button, {
              onClick: handleReorder,
              design: ButtonDesign_default.Transparent,
              icon: collapse_group_default,
              "data-reorder": "top",
              disabled: itemPosition === "first",
              tooltip: `${i18nBundle.getText(MOVE_TO_TOP, ` (${isomporphicReorderKey}+Home)`)})`,
              "data-component-name": "FilterBarDialogReorderBtnTop"
            }), (0, import_jsx_runtime161.jsx)(Button, {
              onClick: handleReorder,
              design: ButtonDesign_default.Transparent,
              icon: navigation_up_arrow_default,
              "data-reorder": "up",
              disabled: itemPosition === "first",
              tooltip: `${i18nBundle.getText(MOVE_UP, ` (${isomporphicReorderKey}+${i18nBundle.getText(UP_ARROW)})`)}`,
              "data-component-name": "FilterBarDialogReorderBtnUp"
            }), (0, import_jsx_runtime161.jsx)(Button, {
              onClick: handleReorder,
              design: ButtonDesign_default.Transparent,
              icon: navigation_down_arrow_default,
              "data-reorder": "down",
              disabled: itemPosition === "last",
              tooltip: `${i18nBundle.getText(MOVE_DOWN, ` (${isomporphicReorderKey}+${i18nBundle.getText(DOWN_ARROW)})`)}`,
              "data-component-name": "FilterBarDialogReorderBtnDown"
            }), (0, import_jsx_runtime161.jsx)(Button, {
              onClick: handleReorder,
              design: ButtonDesign_default.Transparent,
              icon: expand_group_default,
              "data-reorder": "bottom",
              disabled: itemPosition === "last",
              tooltip: `${i18nBundle.getText(MOVE_TO_BOTTOM, ` (${isomporphicReorderKey}+End`)})`,
              "data-component-name": "FilterBarDialogReorderBtnBottom"
            })]
          }), active && (0, import_jsx_runtime161.jsxs)(import_jsx_runtime161.Fragment, {
            children: [(0, import_jsx_runtime161.jsx)(Icon, {
              name: circle_task_2_default,
              className: classNames8.dialogActiveIcon,
              "aria-hidden": true
            }), (0, import_jsx_runtime161.jsx)("span", {
              className: classNames8.pseudoInvisibleText,
              children: i18nBundle.getText(FILTER_IS_ACTIVE)
            })]
          })]
        })]
      })
    );
  }
  const labelWithGroupName = considerGroupName && groupName !== "default" ? `${label} (${groupName})` : label;
  return (0, import_jsx_runtime161.jsx)("div", {
    ref,
    slot,
    ...rest,
    className: clsx(classNames8.filterItem, className),
    children: (0, import_jsx_runtime161.jsxs)("div", {
      className: classNames8.innerFilterItemContainer,
      "data-in-filter-bar": true,
      children: [(0, import_jsx_runtime161.jsx)(FlexBox, {
        children: (0, import_jsx_runtime161.jsx)(Label, {
          title: labelTooltip ?? label,
          required,
          showColon: !!label,
          children: labelWithGroupName
        })
      }), loading ? (0, import_jsx_runtime161.jsx)(BusyIndicator, {
        className: classNames8.loadingContainer,
        active: true,
        size: BusyIndicatorSize_default.S
      }) : children]
    })
  });
});
FilterGroupItem.displayName = "FilterGroupItem";

// node_modules/@ui5/webcomponents-react/dist/components/FilterBar/FilterBar.module.css.js
var styleData9 = `@layer ui5-webcomponents-react{._outerContainer_1namm_1{background:var(--sapObjectHeader_Background)}._outerContainerWithToolbar_1namm_5{box-shadow:var(--sapContent_HeaderShadow);padding-block:.5rem 1px;padding-inline:2rem}._filterBarHeader_1namm_11{align-items:center;background:var(--sapObjectHeader_Background);box-shadow:none;display:flex;flex-wrap:wrap;min-height:3rem;padding-block-end:.5rem}._filterBarHeader_1namm_11 [data-component-name=ToolbarContent]>:first-child{margin-inline-start:0}._filterArea_1namm_25{align-items:center;background:var(--sapObjectHeader_Background);display:flex;flex-wrap:wrap;margin-block-end:1rem;padding-block-start:1rem;transition:max-height .2s ease-out,opacity .2s ease-in}._filterAreaClosed_1namm_37{margin:0;max-height:0;opacity:0;overflow-y:auto;padding:0}._filterAreaOpen_1namm_45{opacity:1}._showFiltersBtn_1namm_49{min-width:108px}._filterBarButtons_1namm_53{align-items:center;display:flex;inset-inline:auto 0;margin-block-end:1rem;margin-inline-end:1rem;position:absolute}._filterBarButtons_1namm_53>:not(:first-child){margin-inline-start:.25rem}._filterBarButtons_1namm_53>:not(:last-child){margin-inline-end:.25rem}._searchContainer_1namm_70>[ui5-input]{width:100%}._spacer_1namm_76{flex-basis:calc(var(--_ui5wcr_filter_group_item_flex_basis));flex-grow:1;flex-shrink:0;height:0;margin-block-start:0;margin-inline-end:1rem;max-width:calc(var(--_ui5wcr_filter_group_item_flex_basis)*2)}._lastSpacer_1namm_86{flex-basis:calc(var(--_ui5wcr_filter_group_item_flex_basis));flex-grow:1;flex-shrink:0;height:var(--_ui5wcr-ElementHeight);margin-inline-end:1rem;max-width:calc(var(--_ui5wcr_filter_group_item_flex_basis)*2)}._toolbar_1namm_95>:not(ui5-toolbar){flex-shrink:0}._wcToolbar_1namm_101{border:none}}`;
var classNames9 = {
  "outerContainer": "_outerContainer_1namm_1",
  "outerContainerWithToolbar": "_outerContainerWithToolbar_1namm_5",
  "filterBarHeader": "_filterBarHeader_1namm_11",
  "filterArea": "_filterArea_1namm_25",
  "filterAreaClosed": "_filterAreaClosed_1namm_37",
  "filterAreaOpen": "_filterAreaOpen_1namm_45",
  "showFiltersBtn": "_showFiltersBtn_1namm_49",
  "filterBarButtons": "_filterBarButtons_1namm_53",
  "searchContainer": "_searchContainer_1namm_70",
  "spacer": "_spacer_1namm_76",
  "lastSpacer": "_lastSpacer_1namm_86",
  "toolbar": "_toolbar_1namm_95",
  "wcToolbar": "_wcToolbar_1namm_101"
};

// node_modules/@ui5/webcomponents/dist/types/BarDesign.js
var BarDesign;
(function(BarDesign2) {
  BarDesign2["Header"] = "Header";
  BarDesign2["Subheader"] = "Subheader";
  BarDesign2["Footer"] = "Footer";
  BarDesign2["FloatingFooter"] = "FloatingFooter";
})(BarDesign || (BarDesign = {}));
var BarDesign_default = BarDesign;

// node_modules/@ui5/webcomponents-icons/dist/v4/list.js
var name100 = "list";
var pathData97 = "M79.5 64q-16 0-16 16t16 16 16-16-16-16zm0 96q-16 0-16 16t16 16 16-16-16-16zm0 96q-16 0-16 16t16 16 16-16-16-16zm0 96q-16 0-16 16t16 16 16-16-16-16zm0 96q-16 0-16 16t16 16 16-16-16-16zm96-352q-16 0-16-16t16-16h257q6 0 11 4.5t5 11.5-5 11.5-11 4.5h-257zm257 64q6 0 11 4.5t5 11.5-5 11.5-11 4.5h-257q-16 0-16-16t16-16h257zm0 96q6 0 11 4.5t5 11.5-5 11.5-11 4.5h-257q-16 0-16-16t16-16h257zm0 96q6 0 11 4.5t5 11.5-5 11.5-11 4.5h-257q-16 0-16-16t16-16h257zm0 96q6 0 11 4.5t5 11.5-5 11.5-11 4.5h-257q-16 0-16-16t16-16h257z";
var ltr97 = false;
var collection99 = "SAP-icons-v4";
var packageName97 = "@ui5/webcomponents-icons";
registerIcon(name100, { pathData: pathData97, ltr: ltr97, collection: collection99, packageName: packageName97 });

// node_modules/@ui5/webcomponents-icons/dist/v5/list.js
var name101 = "list";
var pathData98 = "M454 83H186q-11 0-18.5-7T160 58t7.5-18.5T186 32h268q11 0 18.5 7.5T480 58t-7.5 18-18.5 7zM64 32q13 0 22.5 9.5T96 64t-9.5 22.5T64 96t-22.5-9.5T32 64t9.5-22.5T64 32zm0 128q13 0 22.5 9.5T96 192t-9.5 22.5T64 224t-22.5-9.5T32 192t9.5-22.5T64 160zm390 51H186q-11 0-18.5-7t-7.5-18 7.5-18.5T186 160h268q11 0 18.5 7.5T480 186t-7.5 18-18.5 7zm0 128H186q-11 0-18.5-7t-7.5-18 7.5-18.5T186 288h268q11 0 18.5 7.5T480 314t-7.5 18-18.5 7zM64 288q13 0 22.5 9.5T96 320t-9.5 22.5T64 352t-22.5-9.5T32 320t9.5-22.5T64 288zm390 179H186q-11 0-18.5-7t-7.5-18 7.5-18.5T186 416h268q11 0 18.5 7.5T480 442t-7.5 18-18.5 7zM64 416q13 0 22.5 9.5T96 448t-9.5 22.5T64 480t-22.5-9.5T32 448t9.5-22.5T64 416z";
var ltr98 = false;
var collection100 = "SAP-icons-v5";
var packageName98 = "@ui5/webcomponents-icons";
registerIcon(name101, { pathData: pathData98, ltr: ltr98, collection: collection100, packageName: packageName98 });

// node_modules/@ui5/webcomponents-icons/dist/list.js
var list_default = "list";

// node_modules/@ui5/webcomponents-react/dist/components/FilterBar/FilterDialog.js
var import_react37 = __toESM(require_react(), 1);

// node_modules/@ui5/webcomponents-react/dist/components/MessageBox/index.js
var import_react36 = __toESM(require_react(), 1);

// node_modules/@ui5/webcomponents-react/dist/components/MessageBox/MessageBox.module.css.js
var styleData10 = `@layer ui5-webcomponents-react{._messageBox_13pdm_1[data-type=Confirm]::part(header){box-shadow:inset 0 -.0625rem var(--sapNeutralBorderColor),var(--sapContent_HeaderShadow)}._messageBox_13pdm_1[data-type=Confirm] ._header_13pdm_8{--sapContent_NonInteractiveIconColor:var(--sapNeutralElementColor)}._header_13pdm_8{align-items:center;border-bottom:1px solid var(--messageBoxBorderColor);box-sizing:border-box;color:var(--sapContent_LabelColor);display:flex;font-size:1rem;height:var(--_ui5wcr-BarHeight);text-align:center;width:100%}._header_13pdm_8 [ui5-icon]:first-child{height:1rem;width:1rem}._header_13pdm_8 [ui5-title]{font-size:1rem}._spacer_13pdm_34{width:.5rem}._confirmIcon_13pdm_38{color:var(--sapNeutralColor)}._footer_13pdm_42{align-items:center;display:flex;height:var(--_ui5wcr-BarHeight);justify-content:flex-end;width:100%}._footer_13pdm_42>*{margin:0 .25rem}._footer_13pdm_42>[ui5-button]{display:flex;min-width:4rem}}`;
var classNames10 = {
  "messageBox": "_messageBox_13pdm_1",
  "header": "_header_13pdm_8",
  "spacer": "_spacer_13pdm_34",
  "confirmIcon": "_confirmIcon_13pdm_38",
  "footer": "_footer_13pdm_42"
};

// node_modules/@ui5/webcomponents-react/dist/components/MessageBox/index.js
var import_jsx_runtime162 = __toESM(require_jsx_runtime(), 1);
var getIcon = (icon, type, classes) => {
  if ((0, import_react36.isValidElement)(icon)) return icon;
  switch (type) {
    case MessageBoxType.Confirm:
      return (0, import_jsx_runtime162.jsx)(Icon, {
        name: sys_help_2_default,
        mode: IconMode_default.Decorative,
        className: classes.confirmIcon
      });
    default:
      return null;
  }
};
var convertMessageBoxTypeToState = (type) => {
  switch (type) {
    case MessageBoxType.Information:
      return ValueState_default.Information;
    case MessageBoxType.Success:
      return ValueState_default.Positive;
    case MessageBoxType.Warning:
      return ValueState_default.Critical;
    case MessageBoxType.Error:
      return ValueState_default.Negative;
    default:
      return ValueState_default.None;
  }
};
var getActions = (actions3, type) => {
  if (actions3 && actions3.length > 0) {
    return actions3;
  }
  if (type === MessageBoxType.Confirm) {
    return [MessageBoxAction.OK, MessageBoxAction.Cancel];
  }
  if (type === MessageBoxType.Error) {
    return [MessageBoxAction.Close];
  }
  return [MessageBoxAction.OK];
};
var MessageBox = (0, import_react36.forwardRef)((props, ref) => {
  const {
    open: open2,
    type = MessageBoxType.Confirm,
    children,
    className,
    titleText,
    icon,
    actions: actions3 = [],
    emphasizedAction = MessageBoxAction.OK,
    onClose,
    initialFocus,
    ...rest
  } = props;
  useStylesheet(styleData10, MessageBox.displayName);
  const i18nBundle = useI18nBundle("@ui5/webcomponents-react");
  const actionTranslations = {
    [MessageBoxAction.Abort]: i18nBundle.getText(ABORT),
    [MessageBoxAction.Cancel]: i18nBundle.getText(CANCEL),
    [MessageBoxAction.Close]: i18nBundle.getText(CLOSE),
    [MessageBoxAction.Delete]: i18nBundle.getText(DELETE),
    [MessageBoxAction.Ignore]: i18nBundle.getText(IGNORE),
    [MessageBoxAction.No]: i18nBundle.getText(NO),
    [MessageBoxAction.OK]: i18nBundle.getText(OK),
    [MessageBoxAction.Retry]: i18nBundle.getText(RETRY),
    [MessageBoxAction.Yes]: i18nBundle.getText(YES)
  };
  const titleToRender = () => {
    if (titleText) {
      return titleText;
    }
    switch (type) {
      case MessageBoxType.Confirm:
        return i18nBundle.getText(CONFIRMATION);
      case MessageBoxType.Error:
        return i18nBundle.getText(ERROR);
      case MessageBoxType.Information:
        return i18nBundle.getText(INFORMATION);
      case MessageBoxType.Success:
        return i18nBundle.getText(SUCCESS);
      case MessageBoxType.Warning:
        return i18nBundle.getText(WARNING);
      default:
        return null;
    }
  };
  const handleDialogClose = (e) => {
    if (typeof props.onBeforeClose === "function") {
      props.onBeforeClose(e);
    }
    if (e.detail.escPressed && typeof onClose === "function") {
      onClose(void 0, e.detail.escPressed);
    }
  };
  const handleOnClose = (e) => {
    const {
      action
    } = e.currentTarget.dataset;
    if (typeof onClose === "function") {
      onClose(action);
    }
  };
  const messageBoxId = (0, import_react36.useId)();
  const internalActions = getActions(actions3, type);
  const getInitialFocus = () => {
    const actionToFocus = internalActions.find((action) => action === initialFocus);
    if (typeof actionToFocus === "string") {
      return `${messageBoxId}-action-${actionToFocus}`;
    }
    return initialFocus;
  };
  const {
    footer: _0,
    headerText: _1,
    onClose: _2,
    onBeforeClose: _3,
    ...restWithoutOmitted
  } = rest;
  const iconToRender = getIcon(icon, type, classNames10);
  const needsCustomHeader = !props.header && !!iconToRender;
  return (0, import_jsx_runtime162.jsxs)(Dialog, {
    open: open2,
    ref,
    className: clsx(classNames10.messageBox, className),
    onBeforeClose: handleDialogClose,
    accessibleNameRef: needsCustomHeader ? `${messageBoxId}-title ${messageBoxId}-text` : void 0,
    accessibleRole: PopupAccessibleRole_default.AlertDialog,
    ...restWithoutOmitted,
    headerText: titleToRender(),
    state: convertMessageBoxTypeToState(type),
    initialFocus: getInitialFocus(),
    "data-type": type,
    children: [needsCustomHeader && (0, import_jsx_runtime162.jsxs)("div", {
      slot: "header",
      className: classNames10.header,
      children: [iconToRender, iconToRender && (0, import_jsx_runtime162.jsx)("span", {
        className: classNames10.spacer
      }), (0, import_jsx_runtime162.jsx)(Title, {
        id: `${messageBoxId}-title`,
        level: TitleLevel_default.H1,
        children: titleToRender()
      })]
    }), (0, import_jsx_runtime162.jsx)(Text3, {
      id: `${messageBoxId}-text`,
      children
    }), (0, import_jsx_runtime162.jsx)("div", {
      slot: "footer",
      className: classNames10.footer,
      children: internalActions.map((action, index) => {
        var _a, _b;
        if (typeof action !== "string" && (0, import_react36.isValidElement)(action)) {
          return (0, import_react36.cloneElement)(action, {
            onClick: ((_a = action == null ? void 0 : action.props) == null ? void 0 : _a.onClick) ? (e) => {
              var _a2;
              (_a2 = action == null ? void 0 : action.props) == null ? void 0 : _a2.onClick(e);
              handleOnClose(e);
            } : handleOnClose,
            "data-action": ((_b = action == null ? void 0 : action.props) == null ? void 0 : _b["data-action"]) ?? `${index}: custom action`
          });
        }
        if (typeof action === "string") {
          return (0, import_jsx_runtime162.jsx)(Button, {
            id: `${messageBoxId}-action-${action}`,
            design: emphasizedAction === action ? ButtonDesign_default.Emphasized : ButtonDesign_default.Transparent,
            onClick: handleOnClose,
            "data-action": action,
            children: actionTranslations[action] ?? action
          }, `${action}-${index}`);
        }
        return null;
      })
    })]
  });
});
MessageBox.displayName = "MessageBox";

// node_modules/@ui5/webcomponents-react/dist/components/FilterBar/FilterBarDialog.module.css.js
var styleData11 = `@layer ui5-webcomponents-react{._tHactive_4brh3_1{justify-content:center}._groupedTableHeader_4brh3_5{display:none}._tableInGroup_4brh3_9 [ui5-table-row]:last-child{border-bottom:none}._groupPanel_4brh3_13::part(content){padding:0}._searchInputContainer_4brh3_19{height:var(--_ui5wcr-ToolbarHeight);padding-bottom:.25rem}._searchInput_4brh3_19{width:100%}._dialogComponent_4brh3_28{height:55rem;width:40rem}._dialogComponent_4brh3_28::part(content),._dialogComponent_4brh3_28::part(footer),._dialogComponent_4brh3_28::part(header){padding:0}._dialogComponent_4brh3_28[data-is-phone=true]{border-radius:0;height:100%;inset-block-start:0;inset-inline-start:0;max-height:100%;max-width:100%;width:100%}._header_4brh3_49{padding-block:.25rem 0;padding-inline:1rem;width:100%}._header_4brh3_49 *{margin-block:.25rem;margin-inline:0}._header_4brh3_49 [ui5-input]{width:100%}._subheaderContainer_4brh3_64{box-shadow:var(--sapContent_HeaderShadow);padding-block-start:.25rem;padding-inline:1rem}._subheader_4brh3_64{padding-block-end:.25rem}._subheader_4brh3_64 [data-component-name=ToolbarContent]>:last-child{margin:0}._subheader_4brh3_64 [data-component-name=ToolbarContent]>:first-child{margin-inline:0 .25rem}._footer_4brh3_83 :not(:last-child){margin-inline-end:.25rem}._showValuesBtn_4brh3_89{flex-shrink:0}._spacer_4brh3_93{flex-grow:1}._inactiveTable_4brh3_97{pointer-events:none}}`;
var classNames11 = {
  "tHactive": "_tHactive_4brh3_1",
  "groupedTableHeader": "_groupedTableHeader_4brh3_5",
  "tableInGroup": "_tableInGroup_4brh3_9",
  "groupPanel": "_groupPanel_4brh3_13",
  "searchInputContainer": "_searchInputContainer_4brh3_19",
  "searchInput": "_searchInput_4brh3_19",
  "dialogComponent": "_dialogComponent_4brh3_28",
  "header": "_header_4brh3_49",
  "subheaderContainer": "_subheaderContainer_4brh3_64",
  "subheader": "_subheader_4brh3_64",
  "footer": "_footer_4brh3_83",
  "showValuesBtn": "_showValuesBtn_4brh3_89",
  "spacer": "_spacer_4brh3_93",
  "inactiveTable": "_inactiveTable_4brh3_97"
};

// node_modules/@ui5/webcomponents-react/dist/components/FilterBar/FilterDialog.js
var import_jsx_runtime163 = __toESM(require_jsx_runtime(), 1);
addCustomCSSWithScoping("ui5-table", `
:host([data-component-name="FilterBarDialogTable"][data-with-value="false"]) #table,
:host([data-component-name="FilterBarDialogPanelTable"][data-with-value="false"]) #table {
   grid-template-columns: var(--_ui5wcr-CheckBoxWidthHeight) minmax(3rem, auto) minmax(3rem, 25%) !important;
}
:host([data-component-name="FilterBarDialogTable"][data-is-grouped]) #nodata-row {
  display: none;
}
`);
addCustomCSSWithScoping("ui5-table-header-row", `
:host([data-component-name="FilterBarDialogGroupTableHeaderRow"]) :first-child {
  visibility: hidden;
}
`);
var getActiveFilters = (activeFilterAttribute, filter) => {
  var _a, _b, _c, _d, _e;
  switch (activeFilterAttribute) {
    case "all":
      return true;
    case "visible":
      return ((_a = filter.props) == null ? void 0 : _a.hiddenInFilterBar) !== true;
    case "active":
      return (_b = filter.props) == null ? void 0 : _b.active;
    case "visibleAndActive":
      return ((_c = filter.props) == null ? void 0 : _c.hiddenInFilterBar) !== true && ((_d = filter.props) == null ? void 0 : _d.active);
    case "mandatory":
      return (_e = filter.props) == null ? void 0 : _e.required;
    default:
      return true;
  }
};
var FilterDialog = (props) => {
  const {
    open: open2,
    handleDialogClose,
    children,
    showRestoreButton,
    dialogRef,
    enableReordering,
    isPhone: isPhone3,
    handleRestoreFilters,
    handleDialogSave,
    onFiltersDialogSelectionChange,
    handleDialogSearch,
    handleDialogCancel,
    onAfterFiltersDialogOpen,
    onReorder
  } = props;
  useStylesheet(styleData11, "FilterBarDialog");
  const uniqueId = (0, import_react37.useId)();
  const [searchString, setSearchString] = (0, import_react37.useState)("");
  const [selectedFilters, setSelectedFilters] = (0, import_react37.useState)(void 0);
  const [requiredFilters, setRequiredKeys] = (0, import_react37.useState)({});
  const [showValues, toggleValues] = (0, import_react37.useReducer)((prev) => !prev, false);
  const [messageBoxOpen, setMessageBoxOpen] = (0, import_react37.useState)(false);
  const [forceRequired, setForceRequired] = (0, import_react37.useState)();
  const [showBtnsOnHover, setShowBtnsOnHover] = (0, import_react37.useState)(true);
  const [isListView, setIsListView] = (0, import_react37.useState)(true);
  const [filteredAttribute, setFilteredAttribute] = (0, import_react37.useState)("all");
  const [currentReorderedItem, setCurrentReorderedItem] = (0, import_react37.useState)({});
  const [orderedChildren, setOrderedChildren] = (0, import_react37.useState)([]);
  const [updatedIndex, setUpdatedIndex] = (0, import_react37.useState)(void 0);
  const currentReorderedItemOrderId = currentReorderedItem == null ? void 0 : currentReorderedItem.filterKey;
  const selected = (selectedFilters ?? []).join(" ");
  const dialogSearchRef = (0, import_react37.useRef)(null);
  const tableRef = (0, import_react37.useRef)(null);
  const okBtnRef = (0, import_react37.useRef)(null);
  const prevIsListView = (0, import_react37.useRef)(true);
  const selectionChangePayloadRef = (0, import_react37.useRef)({
    selectedFilterKeys: selectedFilters ?? []
  });
  const initialSelected = (0, import_react37.useRef)(void 0);
  const prevRowKey = (0, import_react37.useRef)(void 0);
  const i18nBundle = useI18nBundle("@ui5/webcomponents-react");
  const basicText = i18nBundle.getText(BASIC);
  const cancelText = i18nBundle.getText(CANCEL);
  const okText = i18nBundle.getText(OK);
  const searchForFiltersText = i18nBundle.getText(SEARCH_FOR_FILTERS);
  const filtersTitle = i18nBundle.getText(FILTERS);
  const resetText = i18nBundle.getText(RESET);
  const allText = i18nBundle.getText(ALL);
  const activeText = i18nBundle.getText(ACTIVE);
  const visibleText = i18nBundle.getText(VISIBLE);
  const visibleAndActiveText = i18nBundle.getText(VISIBLE_AND_ACTIVE);
  const mandatoryText = i18nBundle.getText(MANDATORY);
  const listViewText = i18nBundle.getText(LIST_VIEW);
  const groupViewText = i18nBundle.getText(GROUP_VIEW);
  const showValuesText = i18nBundle.getText(SHOW_VALUES);
  const hideValuesText = i18nBundle.getText(HIDE_VALUES);
  const filterText = i18nBundle.getText(FILTER);
  const fieldsByAttributeText = i18nBundle.getText(FIELDS_BY_ATTRIBUTE);
  const wasReordered = (0, import_react37.useRef)(false);
  const handleReorder = (e) => {
    wasReordered.current = true;
    setCurrentReorderedItem(e);
  };
  const handleFocusFallback = () => {
    var _a;
    const rowKey = (_a = currentReorderedItem == null ? void 0 : currentReorderedItem.target) == null ? void 0 : _a.rowKey;
    if (rowKey && tableRef.current && rowKey !== prevRowKey.current) {
      setTimeout(() => {
        const itemNav = tableRef.current._tableNavigation;
        itemNav._gridWalker.setGrid(itemNav._getNavigationItemsOfGrid());
        tableRef.current.querySelector(`[row-key="${rowKey}"]`).focus();
      }, 0);
      prevRowKey.current = rowKey;
    }
  };
  const visibleChildren = () => children.filter((item2) => {
    var _a;
    return !!(item2 == null ? void 0 : item2.props) && !((_a = item2 == null ? void 0 : item2.props) == null ? void 0 : _a.hidden);
  });
  (0, import_react37.useEffect)(() => {
    if (children.length) {
      setOrderedChildren(visibleChildren());
    }
  }, [children]);
  const renderChildren = () => {
    const searchStringLower = searchString.toLowerCase();
    const filteredChildren = searchStringLower.length > 0 || filteredAttribute !== "all" ? orderedChildren.filter((item2) => {
      var _a;
      return (searchStringLower === "" || ((_a = item2.props.label) == null ? void 0 : _a.toLowerCase().includes(searchStringLower))) && getActiveFilters(filteredAttribute, item2);
    }) : orderedChildren;
    return filteredChildren.map((child, index) => {
      return (0, import_react37.cloneElement)(child, {
        "data-index": index
      });
    });
  };
  const handleSearch = (e) => {
    if (typeof handleDialogSearch === "function") {
      handleDialogSearch(enrichEventWithDetails(e, {
        value: e.target.value,
        element: e.target
      }));
    }
    setSearchString(e.target.value);
  };
  const handleSave = (e) => {
    const orderedChildrenIds = enableReordering ? orderedChildren.map((child) => child.props.filterKey) : [];
    handleDialogSave(e, selectionChangePayloadRef.current, orderedChildrenIds);
  };
  const handleClose = (e) => {
    stopPropagation(e);
    if (e.target !== e.currentTarget) {
      return;
    }
    if (typeof handleDialogCancel === "function") {
      handleDialogCancel(true);
    }
    handleDialogClose("escPressed");
  };
  const handleCancel = () => {
    if (typeof handleDialogCancel === "function") {
      handleDialogCancel(false);
    }
    handleDialogClose("cancelButtonPressed");
  };
  const handleRestore = () => {
    setMessageBoxOpen(true);
  };
  const handleViewChange = (e) => {
    const selectedItem = e.detail.selectedItems.at(0);
    prevIsListView.current = isListView;
    setIsListView(selectedItem.dataset.id === "list");
  };
  const handleMessageBoxClose = (action) => {
    if (action === "OK") {
      const initialChildren = visibleChildren();
      const payload = {
        source: "dialog",
        selectedFilterKeys: initialSelected.current,
        previousSelectedFilterKeys: selectedFilters,
        reorderedFilterKeys: enableReordering ? initialChildren.map((child) => `${child.props.filterKey}`) : null
      };
      setSelectedFilters(initialSelected.current);
      setOrderedChildren(initialChildren);
      handleRestoreFilters(payload);
    }
    setMessageBoxOpen(false);
    setTimeout(() => {
      okBtnRef.current.focus();
    }, 50);
  };
  (0, import_react37.useEffect)(() => {
    if (orderedChildren.length && wasReordered.current) {
      if (typeof onReorder === "function") {
        onReorder({
          reorderedFilterKeys: orderedChildren.map((item2) => `${item2.props.filterKey}`)
        });
      }
      wasReordered.current = false;
    }
  }, [orderedChildren, onReorder]);
  (0, import_react37.useEffect)(() => {
    if ((currentReorderedItem == null ? void 0 : currentReorderedItem.index) != null) {
      setOrderedChildren((prev) => {
        const {
          index,
          direction
        } = currentReorderedItem;
        switch (direction) {
          case "up":
            if (index > 0) {
              setUpdatedIndex(index - 1);
              const temp = prev[index];
              prev[index] = prev[index - 1];
              prev[index - 1] = temp;
            }
            break;
          case "down":
            if (index < prev.length - 1) {
              setUpdatedIndex(index + 1);
              const temp = prev[index];
              prev[index] = prev[index + 1];
              prev[index + 1] = temp;
            }
            break;
          case "top":
            if (index > 0) {
              setUpdatedIndex(0);
              const item2 = prev.splice(index, 1)[0];
              prev.unshift(item2);
            }
            break;
          case "bottom":
            if (index < prev.length - 1) {
              setUpdatedIndex(prev.length - 1);
              const item2 = prev.splice(index, 1)[0];
              prev.push(item2);
            }
            break;
        }
        return [...prev];
      });
      void currentReorderedItem.target.focus();
    }
  }, [currentReorderedItem]);
  (0, import_react37.useEffect)(() => {
    if (updatedIndex != null) {
      prevRowKey.current = void 0;
    }
  }, [updatedIndex]);
  const handleAttributeFilterChange = (e) => {
    setFilteredAttribute(e.detail.selectedOption.dataset.id);
  };
  const fireOnFiltersDialogSelectionChange = (_selected, selectedKeys, prevSelected, prevent = false) => {
    setSelectedFilters(Array.from(_selected));
    if (!prevent && typeof onFiltersDialogSelectionChange === "function") {
      const payload = {
        toggledFilterKeys: selectedKeys,
        selected: selectedKeys.size === 1 ? _selected.has(selectedKeys.values().next().value) : void 0,
        selectedFilterKeys: _selected,
        previousSelectedFilterKeys: prevSelected
      };
      onFiltersDialogSelectionChange(payload);
    }
  };
  (0, import_react37.useEffect)(() => {
    if (selectedFilters) {
      selectionChangePayloadRef.current = {
        selectedFilterKeys: selectedFilters
      };
    }
  }, [selectedFilters]);
  const handleCheckBoxChange = (e) => {
    if (e.target.hasAttribute("ui5-table-selection")) {
      const _selected = new Set(e.target.selected.length ? e.target.selected.split(" ") : []);
      const prevSelected = new Set(selectedFilters ?? []);
      const alwaysSelected = Object.keys(requiredFilters).filter((key) => requiredFilters[key]);
      const selectedKeys = _selected.symmetricDifference(prevSelected);
      if (alwaysSelected.length) {
        setForceRequired({
          required: alwaysSelected,
          target: e.target,
          selected: _selected,
          prevSelected,
          selectedKeys
        });
        return;
      }
      fireOnFiltersDialogSelectionChange(_selected, selectedKeys, prevSelected);
    }
  };
  (0, import_react37.useEffect)(() => {
    if (forceRequired && forceRequired.target) {
      const {
        prevSelected,
        selectedKeys,
        selected: _selected,
        required,
        target
      } = forceRequired;
      required.forEach((requiredString) => {
        _selected.add(requiredString);
      });
      setTimeout(() => {
        target.selected = Array.from(_selected).join(" ");
        const prevent = selectedKeys.size === 1 && required.includes(selectedKeys.values().next().value);
        fireOnFiltersDialogSelectionChange(_selected, selectedKeys, prevSelected, prevent);
      });
      setForceRequired(void 0);
    }
  }, [forceRequired]);
  const renderGroups = () => {
    const groups = {};
    import_react37.Children.forEach(renderChildren(), (child) => {
      const childGroups = child.props.groupName ?? "default";
      if (groups[childGroups]) {
        groups[childGroups].push(child);
      } else {
        groups[childGroups] = [child];
      }
    });
    return Object.keys(groups).sort((x, y) => x === "default" ? -1 : y === "role" ? 1 : 0).map((item2, index) => {
      return (0, import_jsx_runtime163.jsx)(Panel3, {
        headerText: item2 === "default" ? basicText : item2,
        className: classNames11.groupPanel,
        children: (0, import_jsx_runtime163.jsx)(Table3, {
          className: classNames11.tableInGroup,
          "data-component-name": "FilterBarDialogPanelTable",
          "data-with-value": showValues,
          features: (0, import_jsx_runtime163.jsx)(TableSelection3, {
            mode: TableSelectionMode_default.Multiple,
            selected,
            onChange: handleCheckBoxChange
          }),
          headerRow: (0, import_jsx_runtime163.jsxs)(TableHeaderRow3, {
            className: classNames11.groupedTableHeader,
            children: [(0, import_jsx_runtime163.jsx)(TableHeaderCell3, {
              children: filterText
            }), !showValues && (0, import_jsx_runtime163.jsx)(TableHeaderCell3, {
              className: classNames11.tHactive,
              children: activeText
            })]
          }),
          children: groups[item2]
        })
      }, `${item2 === "default" ? basicText : item2}${index}`);
    });
  };
  (0, import_react37.useEffect)(() => {
    if (initialSelected.current === void 0 && selected.length) {
      initialSelected.current = selectedFilters;
    }
  }, [selected]);
  return (0, import_jsx_runtime163.jsxs)(FilterBarDialogContext.Provider, {
    value: {
      isFilterInDialog: true,
      enableReordering,
      onReorder: handleReorder,
      isListView,
      withValues: showValues,
      handleFocusFallback,
      showBtnsOnHover,
      setShowBtnsOnHover,
      currentReorderedItemOrderId,
      setSelectedKeys: setSelectedFilters,
      setRequiredKeys,
      prevIsListView
    },
    children: [(0, import_jsx_runtime163.jsxs)(Dialog, {
      open: open2,
      ref: dialogRef,
      "data-component-name": "FilterBarDialog",
      "data-is-phone": isPhone3,
      onClose: handleClose,
      onOpen: onAfterFiltersDialogOpen,
      resizable: true,
      draggable: true,
      className: classNames11.dialogComponent,
      preventFocusRestore: true,
      initialFocus: `${uniqueId}-fb-dialog-search`,
      header: (0, import_jsx_runtime163.jsx)(Bar3, {
        design: BarDesign_default.Header,
        startContent: (0, import_jsx_runtime163.jsx)(Title, {
          level: TitleLevel_default.H4,
          title: filtersTitle,
          children: filtersTitle
        }),
        endContent: showRestoreButton && (0, import_jsx_runtime163.jsx)(Button, {
          design: ButtonDesign_default.Transparent,
          onClick: handleRestore,
          children: resetText
        })
      }),
      footer: (0, import_jsx_runtime163.jsx)(Bar3, {
        design: BarDesign_default.Footer,
        endContent: (0, import_jsx_runtime163.jsxs)(FlexBox, {
          justifyContent: FlexBoxJustifyContent.End,
          className: classNames11.footer,
          children: [(0, import_jsx_runtime163.jsx)(Button, {
            ref: okBtnRef,
            onClick: handleSave,
            "data-component-name": "FilterBarDialogSaveBtn",
            design: ButtonDesign_default.Emphasized,
            children: okText
          }), (0, import_jsx_runtime163.jsx)(Button, {
            design: ButtonDesign_default.Transparent,
            onClick: handleCancel,
            "data-component-name": "FilterBarDialogCancelBtn",
            children: cancelText
          })]
        })
      }),
      children: [(0, import_jsx_runtime163.jsxs)(FlexBox, {
        direction: FlexBoxDirection.Column,
        className: classNames11.subheaderContainer,
        children: [(0, import_jsx_runtime163.jsxs)(FlexBox, {
          direction: FlexBoxDirection.Row,
          children: [(0, import_jsx_runtime163.jsxs)(Select3, {
            onChange: handleAttributeFilterChange,
            title: fieldsByAttributeText,
            accessibleName: fieldsByAttributeText,
            onClose: (e) => {
              e.stopPropagation();
            },
            children: [(0, import_jsx_runtime163.jsx)(Option3, {
              selected: filteredAttribute === "all",
              "data-id": "all",
              children: allText
            }), (0, import_jsx_runtime163.jsx)(Option3, {
              selected: filteredAttribute === "visible",
              "data-id": "visible",
              children: visibleText
            }), (0, import_jsx_runtime163.jsx)(Option3, {
              selected: filteredAttribute === "active",
              "data-id": "active",
              children: activeText
            }), (0, import_jsx_runtime163.jsx)(Option3, {
              selected: filteredAttribute === "visibleAndActive",
              "data-id": "visibleAndActive",
              children: visibleAndActiveText
            }), (0, import_jsx_runtime163.jsx)(Option3, {
              selected: filteredAttribute === "mandatory",
              "data-id": "mandatory",
              children: mandatoryText
            })]
          }), (0, import_jsx_runtime163.jsx)("span", {
            className: classNames11.spacer
          }), (0, import_jsx_runtime163.jsx)(Button, {
            design: ButtonDesign_default.Transparent,
            onClick: toggleValues,
            "aria-live": "polite",
            className: classNames11.showValuesBtn,
            children: showValues ? hideValuesText : showValuesText
          }), (0, import_jsx_runtime163.jsxs)(SegmentedButton3, {
            onSelectionChange: handleViewChange,
            children: [(0, import_jsx_runtime163.jsx)(SegmentedButtonItem3, {
              icon: list_default,
              "data-id": "list",
              selected: isListView,
              accessibleName: listViewText,
              tooltip: listViewText
            }), (0, import_jsx_runtime163.jsx)(SegmentedButtonItem3, {
              icon: group_2_default,
              "data-id": "group",
              selected: !isListView,
              accessibleName: groupViewText,
              tooltip: groupViewText
            })]
          })]
        }), (0, import_jsx_runtime163.jsx)(FlexBox, {
          className: classNames11.searchInputContainer,
          children: (0, import_jsx_runtime163.jsx)(Input, {
            id: `${uniqueId}-fb-dialog-search`,
            noTypeahead: true,
            placeholder: searchForFiltersText,
            onInput: handleSearch,
            showClearIcon: true,
            icon: (0, import_jsx_runtime163.jsx)(Icon, {
              name: search_default
            }),
            ref: dialogSearchRef,
            className: classNames11.searchInput,
            "data-component-name": "FilterBarDialogSearchInput"
          })
        })]
      }), (0, import_jsx_runtime163.jsx)(Table3, {
        ref: tableRef,
        className: !isListView && classNames11.inactiveTable,
        "data-component-name": "FilterBarDialogTable",
        "data-is-grouped": !isListView,
        "data-with-value": `${showValues}`,
        nodata: !isListView ? (0, import_jsx_runtime163.jsx)("span", {}) : void 0,
        tabIndex: !isListView ? -1 : void 0,
        features: (0, import_jsx_runtime163.jsx)(import_jsx_runtime163.Fragment, {
          children: (0, import_jsx_runtime163.jsx)(TableSelection3, {
            mode: TableSelectionMode_default.Multiple,
            onChange: handleCheckBoxChange,
            selected
          })
        }),
        headerRow: (0, import_jsx_runtime163.jsxs)(TableHeaderRow3, {
          "data-component-name": !isListView ? "FilterBarDialogGroupTableHeaderRow" : "FilterBarDialogTableHeaderRow",
          children: [(0, import_jsx_runtime163.jsx)(TableHeaderCell3, {
            children: filterText
          }), !showValues && (0, import_jsx_runtime163.jsx)(TableHeaderCell3, {
            className: classNames11.tHactive,
            children: activeText
          })]
        }),
        children: isListView && renderChildren()
      }), !isListView && renderGroups()]
    }), showRestoreButton && messageBoxOpen && (0, import_jsx_runtime163.jsx)(MessageBox, {
      open: true,
      type: MessageBoxType.Warning,
      actions: [MessageBoxAction.OK, MessageBoxAction.Cancel],
      onClose: handleMessageBoxClose,
      "data-component-name": "FilterBarDialogResetMessageBox",
      children: i18nBundle.getText(FILTER_DIALOG_RESET_WARNING)
    })]
  });
};

// node_modules/@ui5/webcomponents-react/dist/components/FilterBar/index.js
var import_jsx_runtime164 = __toESM(require_jsx_runtime(), 1);
var isPhone2 = Device_exports.isPhone();
var isTablet2 = Device_exports.isTablet();
var isDesktop2 = Device_exports.isDesktop();
var resizeObserverEntryWidth = (entry) => {
  var _a;
  if (entry.borderBoxSize.length) {
    return (_a = entry.borderBoxSize[0]) == null ? void 0 : _a.inlineSize;
  }
};
var FilterBar = (0, import_react38.forwardRef)((props, ref) => {
  const {
    hideToolbar,
    filterBarCollapsed,
    considerGroupName,
    filterContainerWidth = "13.125rem",
    activeFiltersCount,
    showClearOnFB,
    showGoOnFB,
    hideFilterConfiguration,
    showRestoreOnFB,
    showResetButton,
    hideToggleFiltersButton,
    enableReordering,
    style,
    className,
    slot,
    search,
    header: header3,
    as = "div",
    onToggleFilters,
    onFiltersDialogOpen,
    onAfterFiltersDialogOpen,
    onFiltersDialogCancel,
    onFiltersDialogClose,
    onFiltersDialogSave,
    onClear,
    onFiltersDialogSelectionChange,
    onFiltersDialogSearch,
    onGo,
    onRestore,
    onReorder,
    ...rest
  } = props;
  const children = props.children;
  const initiallyShowFilters = (() => {
    if (!hideToolbar) {
      if (filterBarCollapsed !== void 0) {
        return filterBarCollapsed;
      }
      return !(isTablet2 && !isDesktop2);
    }
    return true;
  })();
  const [showFilters, setShowFilters] = (0, import_react38.useState)(initiallyShowFilters);
  const [dialogOpen, setDialogOpen] = (0, import_react38.useState)(false);
  const dialogRef = (0, import_react38.useRef)(null);
  const filterBarButtonsRef = (0, import_react38.useRef)(null);
  const filterAreaRef = (0, import_react38.useRef)(null);
  const filterBtnRef = (0, import_react38.useRef)(null);
  const i18nBundle = useI18nBundle("@ui5/webcomponents-react");
  const uniqueId = (0, import_react38.useId)();
  const clearText = i18nBundle.getText(CLEAR);
  const restoreText = i18nBundle.getText(RESTORE);
  const showFilterBarText = i18nBundle.getText(SHOW_FILTER_BAR);
  const hideFilterBarText = i18nBundle.getText(HIDE_FILTER_BAR);
  const goText = i18nBundle.getText(GO);
  const searchText = i18nBundle.getText(SEARCH);
  const filtersText = !hideToolbar ? i18nBundle.getText(FILTERS) : i18nBundle.getText(ADAPT_FILTERS);
  (0, import_react38.useEffect)(() => {
    if (filterBarCollapsed !== void 0) {
      setShowFilters(!hideToolbar ? !filterBarCollapsed : true);
    }
  }, [setShowFilters, hideToolbar, filterBarCollapsed]);
  useStylesheet(styleData9, FilterBar.displayName);
  const filterAreaClasses = clsx(classNames9.filterArea, showFilters && (!isPhone2 || isPhone2 && hideToolbar) ? classNames9.filterAreaOpen : classNames9.filterAreaClosed);
  const handleToggle = (e) => {
    if (typeof onToggleFilters === "function") {
      onToggleFilters(enrichEventWithDetails(e, {
        visible: !showFilters
      }));
    }
    setShowFilters(!showFilters);
  };
  const handleDialogSave = (e, selectionChangePayload, orderIds) => {
    const details = {
      ...selectionChangePayload,
      reorderedFilterKeys: orderIds
    };
    if (onFiltersDialogSave) {
      onFiltersDialogSave(enrichEventWithDetails(e, details));
    }
    handleDialogClose("okButtonPressed");
  };
  const handleDialogOpen = (e) => {
    if (typeof onFiltersDialogOpen === "function") {
      onFiltersDialogOpen(e);
    }
    if (e.defaultPrevented) {
      setDialogOpen(false);
    } else {
      setDialogOpen(true);
    }
  };
  const handleDialogClose = (closeTrigger) => {
    var _a;
    if (typeof onFiltersDialogClose === "function") {
      onFiltersDialogClose(closeTrigger);
    }
    setDialogOpen(false);
    void ((_a = filterBtnRef.current) == null ? void 0 : _a.focus());
  };
  const handleGoOnFb = (e) => {
    if (typeof onGo === "function") {
      onGo(e);
    }
  };
  const safeChildren = () => {
    return import_react38.Children.toArray(children);
  };
  const renderChildren = () => {
    const childProps = {
      considerGroupName,
      ["data-with-toolbar"]: !hideToolbar
    };
    return import_react38.Children.toArray(children).filter((item2) => {
      var _a, _b, _c;
      if (!(0, import_react38.isValidElement)(item2)) {
        return false;
      }
      return (typeof item2.props.hidden === "undefined" || ((_a = item2 == null ? void 0 : item2.props) == null ? void 0 : _a.hidden) !== true) && (((_b = item2.props) == null ? void 0 : _b.required) || ((_c = item2.props) == null ? void 0 : _c.hiddenInFilterBar) !== true);
    }).map((child) => {
      if (filterContainerWidth) {
        childProps.style = {
          width: filterContainerWidth,
          ...child.props.style
        };
      }
      return (0, import_react38.cloneElement)(child, {
        ...childProps
      });
    });
  };
  const handleRestoreFilters = (payload) => {
    if (onRestore) {
      onRestore(payload);
    }
  };
  const handleFBRestore = () => {
    handleRestoreFilters({
      source: "filterBar",
      selectedFilterKeys: calculatedChildren.map((child) => `${child.props.filterKey}`),
      previousSelectedFilterKeys: null,
      reorderedFilterKeys: null
    });
  };
  const handleClear = (e) => {
    if (typeof onClear === "function") {
      onClear(e);
    }
  };
  const cssClasses = clsx(classNames9.outerContainer, className, !hideToolbar && classNames9.outerContainerWithToolbar);
  const FBButtonComponent = hideToolbar ? Button : ToolbarButton3;
  const filtersButtonText = `${filtersText}${activeFiltersCount && parseInt(activeFiltersCount, 10) ? ` (${activeFiltersCount})` : ""}`;
  const FBButtons = (0, import_jsx_runtime164.jsxs)(import_jsx_runtime164.Fragment, {
    children: [showGoOnFB && (0, import_jsx_runtime164.jsx)(FBButtonComponent, {
      text: hideToolbar ? void 0 : goText,
      onClick: handleGoOnFb,
      design: ButtonDesign_default.Emphasized,
      children: hideToolbar ? goText : void 0
    }), !hideToggleFiltersButton && !hideToolbar && !isPhone2 && (0, import_jsx_runtime164.jsx)(ToolbarButton3, {
      text: showFilters ? hideFilterBarText : showFilterBarText,
      onClick: handleToggle,
      design: ButtonDesign_default.Transparent,
      className: classNames9.showFiltersBtn,
      "aria-live": "polite"
    }), showClearOnFB && (0, import_jsx_runtime164.jsx)(FBButtonComponent, {
      text: hideToolbar ? void 0 : clearText,
      onClick: handleClear,
      design: ButtonDesign_default.Transparent,
      children: hideToolbar ? clearText : void 0
    }), showRestoreOnFB && (0, import_jsx_runtime164.jsx)(FBButtonComponent, {
      text: hideToolbar ? void 0 : restoreText,
      onClick: handleFBRestore,
      design: ButtonDesign_default.Transparent,
      children: hideToolbar ? restoreText : void 0
    }), !hideFilterConfiguration && (0, import_jsx_runtime164.jsx)(FBButtonComponent, {
      text: hideToolbar ? void 0 : filtersButtonText,
      onClick: handleDialogOpen,
      "aria-haspopup": "dialog",
      design: ButtonDesign_default.Transparent,
      ref: filterBtnRef,
      children: hideToolbar ? filtersButtonText : void 0
    })]
  });
  const [filterBarButtonsWidth, setFilterBarButtonsWidth] = (0, import_react38.useState)(void 0);
  const [filterAreaWidth, setFilterAreaWidth] = (0, import_react38.useState)(void 0);
  const [firstChildWidth, setFirstChildWidth] = (0, import_react38.useState)(void 0);
  (0, import_react38.useEffect)(() => {
    const debouncedObserverFn = debounce(([area]) => {
      var _a, _b;
      const firstChild = (_b = (_a = area.target) == null ? void 0 : _a.children) == null ? void 0 : _b[0];
      if (firstChild && firstChild.offsetWidth !== firstChildWidth) {
        setFirstChildWidth(
          firstChild.offsetWidth + 16
          /*margin*/
        );
      }
    }, 100);
    const filterAreaObserver = new ResizeObserver(debouncedObserverFn);
    if (hideToolbar && filterAreaRef.current) {
      filterAreaObserver.observe(filterAreaRef.current);
    }
    return () => {
      debouncedObserverFn.cancel();
      filterAreaObserver.disconnect();
    };
  }, [filterAreaRef.current, hideToolbar]);
  (0, import_react38.useEffect)(() => {
    const debouncedObserverFn = debounce(([area]) => {
      const filterWidth = resizeObserverEntryWidth(area);
      if (filterWidth !== filterBarButtonsWidth) {
        setFilterAreaWidth(filterWidth);
      }
    }, 100);
    const filterAreaObserver = new ResizeObserver(debouncedObserverFn);
    if (hideToolbar && filterAreaRef.current) {
      filterAreaObserver.observe(filterAreaRef.current);
    }
    return () => {
      debouncedObserverFn.cancel();
      filterAreaObserver.disconnect();
    };
  }, [filterAreaWidth, filterAreaRef.current, hideToolbar]);
  (0, import_react38.useEffect)(() => {
    const debouncedObserverFn = debounce(([buttons]) => {
      const buttonsWidth = resizeObserverEntryWidth(buttons);
      if (buttonsWidth !== filterBarButtonsWidth) {
        setFilterBarButtonsWidth(buttonsWidth);
      }
    }, 100);
    const filterBarButtonsObserver = new ResizeObserver(debouncedObserverFn);
    if (hideToolbar && filterBarButtonsRef.current) {
      filterBarButtonsObserver.observe(filterBarButtonsRef.current);
    }
    return () => {
      debouncedObserverFn.cancel();
      filterBarButtonsObserver.disconnect();
    };
  }, [filterBarButtonsRef.current, hideToolbar, filterBarButtonsWidth]);
  const calculatedChildren = renderChildren();
  const renderSpacers = () => {
    if (firstChildWidth && filterAreaWidth && filterBarButtonsWidth) {
      const spacers = [];
      const filterItemsWidth = calculatedChildren.length * firstChildWidth;
      if (filterAreaWidth - filterBarButtonsWidth > filterItemsWidth) {
        return null;
      }
      const usedSpaceLastRow = filterItemsWidth % filterAreaWidth;
      const emptySpaceLastRow = filterAreaWidth - usedSpaceLastRow;
      const numberOfSpacers = Math.floor((emptySpaceLastRow - filterBarButtonsWidth) / firstChildWidth) - 1;
      for (let i = 0; i < numberOfSpacers; i++) {
        spacers.push((0, import_jsx_runtime164.jsx)("div", {
          className: classNames9.spacer
        }, `filter-spacer-${i}`));
      }
      return spacers;
    }
    return null;
  };
  const CustomTag = as;
  return (0, import_jsx_runtime164.jsxs)(import_jsx_runtime164.Fragment, {
    children: [(0, import_jsx_runtime164.jsxs)(CustomTag, {
      ref,
      className: cssClasses,
      style: {
        ["--_ui5wcr_filter_group_item_flex_basis"]: filterContainerWidth,
        ...style
      },
      slot,
      ...rest,
      children: [!hideToolbar && (0, import_jsx_runtime164.jsxs)(FlexBox, {
        className: classNames9.toolbar,
        alignItems: FlexBoxAlignItems.Center,
        children: [header3, (0, import_jsx_runtime164.jsx)(Toolbar3, {
          className: classNames9.wcToolbar,
          design: ToolbarDesign_default.Transparent,
          children: FBButtons
        })]
      }), (0, import_jsx_runtime164.jsxs)("div", {
        className: filterAreaClasses,
        style: {
          position: "relative"
        },
        ref: filterAreaRef,
        "data-component-name": "FilterBarFilterArea",
        children: [search && (0, import_jsx_runtime164.jsx)(FilterGroupItem, {
          "data-with-toolbar": !hideToolbar,
          filterKey: `${uniqueId}-search`,
          children: (0, import_jsx_runtime164.jsx)("div", {
            className: classNames9.searchContainer,
            children: (0, import_react38.cloneElement)(search, {
              placeholder: searchText,
              noTypeahead: true,
              showClearIcon: true,
              type: InputType_default.Search,
              icon: (0, import_jsx_runtime164.jsx)(Icon, {
                name: search_default
              })
            })
          })
        }), calculatedChildren, hideToolbar && (0, import_jsx_runtime164.jsxs)(import_jsx_runtime164.Fragment, {
          children: [renderSpacers(), (0, import_jsx_runtime164.jsx)("div", {
            style: {
              width: filterBarButtonsWidth ? `${filterBarButtonsWidth}px` : "120px",
              minWidth: filterBarButtonsWidth ? `${filterBarButtonsWidth}px` : "120px"
            },
            className: classNames9.lastSpacer,
            children: (0, import_jsx_runtime164.jsx)("div", {
              className: classNames9.filterBarButtons,
              ref: filterBarButtonsRef,
              children: FBButtons
            })
          })]
        })]
      })]
    }), dialogOpen && !hideFilterConfiguration && (0, import_jsx_runtime164.jsx)(FilterDialog, {
      open: dialogOpen,
      handleDialogClose,
      handleRestoreFilters,
      showRestoreButton: showResetButton,
      onFiltersDialogSelectionChange,
      handleDialogSave,
      handleDialogSearch: onFiltersDialogSearch,
      handleDialogCancel: onFiltersDialogCancel,
      onAfterFiltersDialogOpen,
      dialogRef,
      enableReordering,
      isPhone: isPhone2,
      onReorder,
      children: safeChildren()
    })]
  });
});
FilterBar.displayName = "FilterBar";

// node_modules/@ui5/webcomponents-react/dist/components/Grid/index.js
var import_react39 = __toESM(require_react(), 1);

// node_modules/@ui5/webcomponents-react/dist/components/Grid/Grid.module.css.js
var styleData12 = `@layer ui5-webcomponents-react{._grid_1g3dq_1{display:grid;grid-template-columns:repeat(12,1fr)}._gridSpan1_1g3dq_6{grid-column:span 1}._gridSpan2_1g3dq_10{grid-column:span 2}._gridSpan3_1g3dq_14{grid-column:span 3}._gridSpan4_1g3dq_18{grid-column:span 4}._gridSpan5_1g3dq_22{grid-column:span 5}._gridSpan6_1g3dq_26{grid-column:span 6}._gridSpan7_1g3dq_30{grid-column:span 7}._gridSpan8_1g3dq_34{grid-column:span 8}._gridSpan9_1g3dq_38{grid-column:span 9}._gridSpan10_1g3dq_42{grid-column:span 10}._gridSpan11_1g3dq_46{grid-column:span 11}._gridSpan12_1g3dq_50{grid-column:span 12}._positionCenter_1g3dq_54{margin-inline:auto}._positionRight_1g3dq_58{margin-inline:auto 0}}`;
var classNames12 = {
  "grid": "_grid_1g3dq_1",
  "gridSpan1": "_gridSpan1_1g3dq_6",
  "gridSpan2": "_gridSpan2_1g3dq_10",
  "gridSpan3": "_gridSpan3_1g3dq_14",
  "gridSpan4": "_gridSpan4_1g3dq_18",
  "gridSpan5": "_gridSpan5_1g3dq_22",
  "gridSpan6": "_gridSpan6_1g3dq_26",
  "gridSpan7": "_gridSpan7_1g3dq_30",
  "gridSpan8": "_gridSpan8_1g3dq_34",
  "gridSpan9": "_gridSpan9_1g3dq_38",
  "gridSpan10": "_gridSpan10_1g3dq_42",
  "gridSpan11": "_gridSpan11_1g3dq_46",
  "gridSpan12": "_gridSpan12_1g3dq_50",
  "positionCenter": "_positionCenter_1g3dq_54",
  "positionRight": "_positionRight_1g3dq_58"
};

// node_modules/@ui5/webcomponents-react/dist/components/Grid/index.js
var import_jsx_runtime165 = __toESM(require_jsx_runtime(), 1);
var INDENT_PATTERN = /^([X][L](?<LargeDesktop>[0-9]|1[0-2]))? ?([L](?<Desktop>[0-9]|1[0-2]))? ?([M](?<Tablet>[0-9]|1[0-2]))? ?([S](?<Phone>[0-9]|1[0-2]))?$/i;
var SPAN_PATTERN = /^([X][L](?<LargeDesktop>[1-9]|1[0-2]))? ?([L](?<Desktop>[1-9]|1[0-2]))? ?([M](?<Tablet>[1-9]|1[0-2]))? ?([S](?<Phone>[1-9]|1[0-2]))?$/i;
var DefaultSpanMap = /* @__PURE__ */ new Map();
DefaultSpanMap.set("Phone", 1);
DefaultSpanMap.set("Tablet", 2);
DefaultSpanMap.set("Desktop", 4);
DefaultSpanMap.set("LargeDesktop", 4);
var DefaultIndentMap = /* @__PURE__ */ new Map();
DefaultIndentMap.set("Phone", 0);
DefaultIndentMap.set("Tablet", 0);
DefaultIndentMap.set("Desktop", 0);
DefaultIndentMap.set("LargeDesktop", 0);
var getSpanFromString = (span, currentRange) => {
  const spanConfig = SPAN_PATTERN.exec(span);
  return Number((spanConfig == null ? void 0 : spanConfig.groups[currentRange]) ?? DefaultSpanMap.get(currentRange));
};
var getIndentFromString = (indent, currentRange) => {
  const indentConfig = INDENT_PATTERN.exec(indent);
  return Number((indentConfig == null ? void 0 : indentConfig.groups[currentRange]) ?? DefaultIndentMap.get(currentRange));
};
var Grid = (0, import_react39.forwardRef)((props, ref) => {
  const {
    position,
    children,
    hSpacing = "1rem",
    vSpacing = "1rem",
    style,
    className,
    slot,
    defaultIndent = "XL0 L0 M0 S0",
    defaultSpan = "XL3 L3 M6 S12",
    ...rest
  } = props;
  useStylesheet(styleData12, Grid.displayName);
  const currentRange = useViewportRange();
  const gridClasses = clsx(classNames12.grid, GridPosition.Center === position && classNames12.positionCenter, GridPosition.Right === position && classNames12.positionRight, className);
  return (0, import_jsx_runtime165.jsx)("div", {
    ref,
    className: gridClasses,
    style: {
      rowGap: vSpacing,
      columnGap: hSpacing,
      ...style
    },
    slot,
    ...rest,
    children: flattenFragments(children, Infinity).map((child) => {
      if (!(0, import_react39.isValidElement)(child)) {
        return null;
      }
      const childSpan = getSpanFromString(child.props["data-layout-span"] ?? defaultSpan, currentRange);
      const childClass = classNames12[`gridSpan${childSpan}`];
      const childrenWithGridLayout = [(0, import_jsx_runtime165.jsx)("div", {
        className: childClass,
        children: child
      }, child.key)];
      const indentSpan = getIndentFromString(child.props["data-layout-indent"] ?? defaultIndent, currentRange);
      if (indentSpan && indentSpan > 0) {
        childrenWithGridLayout.unshift((0, import_jsx_runtime165.jsx)("span", {
          className: classNames12[`gridSpan${indentSpan}`],
          "data-component-name": "GridIndentSpacer",
          "aria-hidden": "true"
        }, `${child.key}-indent`));
      }
      return childrenWithGridLayout;
    })
  });
});
Grid.displayName = "Grid";

// node_modules/@ui5/webcomponents-react/dist/components/MessageView/index.js
var import_react41 = __toESM(require_react(), 1);

// node_modules/@ui5/webcomponents-react/dist/internal/MessageViewContext.js
var import_react40 = __toESM(require_react(), 1);
var MessageViewContext = (0, import_react40.createContext)({
  selectMessage: (_message) => {
  }
});

// node_modules/@ui5/webcomponents-react/dist/components/MessageView/MessageView.module.css.js
var styleData13 = `@layer ui5-webcomponents-react{._container_1be3f_1{display:flex;height:100%;overflow-x:hidden;overflow-y:auto;width:100%}._container_1be3f_1>*{flex-shrink:0;transition:transform .2s ease-in-out;width:100%}._showDetails_1be3f_15>*{transform:translateX(-100%)}._button_1be3f_21[data-key=Negative]:not([pressed]){color:var(--sapNegativeElementColor)}._button_1be3f_21[data-key=Critical]:not([pressed]){color:var(--sapCriticalElementColor)}._button_1be3f_21[data-key=Positive]:not([pressed]){color:var(--sapPositiveElementColor)}._button_1be3f_21[data-key=Information]:not([pressed]){color:var(--sapInformativeElementColor)}._details_1be3f_39{padding:1rem}._detailsIcon_1be3f_43{flex-shrink:0;margin:0 1rem 0 .5rem}._detailsIcon_1be3f_43[data-type=Negative]{color:var(--sapNegativeElementColor)}._detailsIcon_1be3f_43[data-type=Critical]{color:var(--sapCriticalElementColor)}._detailsIcon_1be3f_43[data-type=Positive]{color:var(--sapPositiveElementColor)}._detailsIcon_1be3f_43[data-type=Information],._detailsIcon_1be3f_43[data-type=None]{color:var(--sapInformativeElementColor)}._detailsTextContainer_1be3f_65{overflow:hidden}._detailsTitle_1be3f_69{margin-block-end:1rem}._detailsText_1be3f_65{color:var(--sapTextColor);font-family:var(--sapFontFamily);font-size:var(--sapFontSize);line-height:1.4;margin-block-end:1rem}._messagesContainer_1be3f_81{height:100%}._detailsContainer_1be3f_85{height:100%}}`;
var classNames13 = {
  "container": "_container_1be3f_1",
  "showDetails": "_showDetails_1be3f_15",
  "button": "_button_1be3f_21",
  "details": "_details_1be3f_39",
  "detailsIcon": "_detailsIcon_1be3f_43",
  "detailsTextContainer": "_detailsTextContainer_1be3f_65",
  "detailsTitle": "_detailsTitle_1be3f_69",
  "detailsText": "_detailsText_1be3f_65",
  "messagesContainer": "_messagesContainer_1be3f_81",
  "detailsContainer": "_detailsContainer_1be3f_85"
};

// node_modules/@ui5/webcomponents-react/dist/components/MessageView/utils.js
var getIconNameForType = (type) => {
  switch (type) {
    case ValueState_default.Negative:
    case "Negative":
      return error_default;
    case ValueState_default.Positive:
    case "Positive":
      return sys_enter_2_default;
    case ValueState_default.Critical:
    case "Critical":
      return alert_default;
    default:
      return information_default;
  }
};

// node_modules/@ui5/webcomponents-react/dist/components/MessageView/index.js
var import_jsx_runtime166 = __toESM(require_jsx_runtime(), 1);
var resolveMessageTypes = (children) => {
  return (children ?? []).map((message) => {
    var _a;
    return (_a = message == null ? void 0 : message.props) == null ? void 0 : _a.type;
  }).reduce((acc, type) => {
    const finalType = type === ValueState_default.None ? ValueState_default.Information : type;
    if (Object.prototype.hasOwnProperty.call(acc, finalType)) {
      acc[finalType]++;
    }
    return acc;
  }, {
    [ValueState_default.Negative]: 0,
    [ValueState_default.Critical]: 0,
    [ValueState_default.Positive]: 0,
    [ValueState_default.Information]: 0
  });
};
var resolveMessageGroups = (children) => {
  const groups = (children ?? []).reduce((acc, val) => {
    var _a;
    const groupName = ((_a = val == null ? void 0 : val.props) == null ? void 0 : _a.groupName) ?? "";
    if (Object.prototype.hasOwnProperty.call(acc, groupName)) {
      acc[groupName].push(val);
    } else {
      acc[groupName] = [val];
    }
    return acc;
  }, {});
  return Object.entries(groups).sort(([keyA], [keyB]) => {
    if (keyA === "" && keyB !== "") {
      return -1;
    }
    if (keyA !== "" && keyB === "") {
      return 1;
    }
    return 0;
  });
};
var MessageView = (0, import_react41.forwardRef)((props, ref) => {
  const {
    children,
    groupItems,
    showDetailsPageHeader,
    className,
    onItemSelect,
    ...rest
  } = props;
  useStylesheet(styleData13, MessageView.displayName);
  const [componentRef, internalRef] = useSyncRef(ref);
  const i18nBundle = useI18nBundle("@ui5/webcomponents-react");
  const [listFilter, setListFilter] = (0, import_react41.useState)("All");
  const [selectedMessage, setSelectedMessage] = (0, import_react41.useState)(null);
  const childrenArray = import_react41.Children.toArray(children);
  const messageTypes = resolveMessageTypes(childrenArray);
  const filledTypes = Object.values(messageTypes).filter((count) => count > 0).length;
  const filteredChildren = listFilter === "All" ? childrenArray : childrenArray.filter((message) => {
    var _a, _b, _c;
    if (!(0, import_react41.isValidElement)(message)) {
      return false;
    }
    const castMessage = message;
    if (listFilter === ValueState_default.Information) {
      return ((_a = castMessage == null ? void 0 : castMessage.props) == null ? void 0 : _a.type) === ValueState_default.Information || ((_b = castMessage == null ? void 0 : castMessage.props) == null ? void 0 : _b.type) === ValueState_default.None;
    }
    return ((_c = castMessage == null ? void 0 : castMessage.props) == null ? void 0 : _c.type) === listFilter;
  });
  const groupedMessages = resolveMessageGroups(filteredChildren);
  const navigateBack = (0, import_react41.useCallback)(() => {
    setSelectedMessage(null);
  }, [setSelectedMessage]);
  (0, import_react41.useEffect)(() => {
    if (internalRef.current) {
      internalRef.current.navigateBack = navigateBack;
    }
  }, [internalRef.current, navigateBack]);
  const handleListFilterChange = (e) => {
    setListFilter(e.detail.selectedItems.at(0).dataset.key);
  };
  const outerClasses = clsx(classNames13.container, className, selectedMessage && classNames13.showDetails);
  return (0, import_jsx_runtime166.jsx)("div", {
    ref: componentRef,
    ...rest,
    className: outerClasses,
    children: (0, import_jsx_runtime166.jsxs)(MessageViewContext.Provider, {
      value: {
        selectMessage: setSelectedMessage
      },
      children: [(0, import_jsx_runtime166.jsx)("div", {
        style: {
          visibility: selectedMessage ? "hidden" : "visible"
        },
        className: classNames13.messagesContainer,
        children: !selectedMessage && (0, import_jsx_runtime166.jsxs)(import_jsx_runtime166.Fragment, {
          children: [filledTypes > 1 && (0, import_jsx_runtime166.jsx)(Bar3, {
            startContent: (0, import_jsx_runtime166.jsxs)(SegmentedButton3, {
              onSelectionChange: handleListFilterChange,
              children: [(0, import_jsx_runtime166.jsx)(SegmentedButtonItem3, {
                "data-key": "All",
                selected: listFilter === "All",
                children: i18nBundle.getText(ALL)
              }), Object.entries(messageTypes).map(([valueState, count]) => {
                if (count === 0) {
                  return null;
                }
                return (0, import_jsx_runtime166.jsx)(SegmentedButtonItem3, {
                  "data-key": valueState,
                  selected: listFilter === valueState,
                  icon: getIconNameForType(valueState),
                  className: classNames13.button,
                  children: count
                }, valueState);
              })]
            })
          }), (0, import_jsx_runtime166.jsx)(List, {
            onItemClick: onItemSelect,
            noDataText: i18nBundle.getText(LIST_NO_DATA),
            separators: ListSeparator_default.Inner,
            children: groupItems ? groupedMessages.map(([groupName, items3]) => {
              if (!groupName) {
                return items3;
              }
              return (0, import_jsx_runtime166.jsx)(import_react41.Fragment, {
                children: groupName && (0, import_jsx_runtime166.jsx)(ListItemGroup, {
                  headerText: groupName,
                  children: items3
                })
              }, groupName);
            }) : filteredChildren
          })]
        })
      }), (0, import_jsx_runtime166.jsx)("div", {
        className: classNames13.detailsContainer,
        children: childrenArray.length > 0 ? (0, import_jsx_runtime166.jsxs)(import_jsx_runtime166.Fragment, {
          children: [showDetailsPageHeader && selectedMessage && (0, import_jsx_runtime166.jsx)(Bar3, {
            startContent: (0, import_jsx_runtime166.jsx)(Button, {
              design: ButtonDesign_default.Transparent,
              icon: slim_arrow_left_default,
              onClick: navigateBack
            })
          }), selectedMessage && (0, import_jsx_runtime166.jsxs)(FlexBox, {
            className: classNames13.details,
            children: [(0, import_jsx_runtime166.jsx)(Icon, {
              "data-type": selectedMessage.type ?? ValueState_default.Negative,
              name: getIconNameForType(selectedMessage.type),
              className: classNames13.detailsIcon
            }), (0, import_jsx_runtime166.jsxs)(FlexBox, {
              direction: FlexBoxDirection.Column,
              className: classNames13.detailsTextContainer,
              children: [(0, import_jsx_runtime166.jsx)(Title, {
                level: TitleLevel_default.H5,
                className: classNames13.detailsTitle,
                wrappingType: WrappingType_default.Normal,
                children: selectedMessage.titleText
              }), (0, import_jsx_runtime166.jsx)("div", {
                className: classNames13.detailsText,
                children: selectedMessage.children
              })]
            })]
          })]
        }) : null
      })]
    })
  });
});
MessageView.displayName = "MessageView";

// node_modules/@ui5/webcomponents-react/dist/components/MessageView/MessageItem.js
var import_react42 = __toESM(require_react(), 1);

// node_modules/@ui5/webcomponents-react/dist/components/MessageView/MessageItem.module.css.js
var styleData14 = `@layer ui5-webcomponents-react{._listItem_lmpco_1{height:var(--_ui5wcr-MessageViewListItemHeightSingle);min-height:0}._message_lmpco_6{box-sizing:border-box;max-width:100%;overflow:hidden;padding:.25rem 0;padding-inline-end:1rem;width:100%}._withSubtitle_lmpco_15{height:var(--_ui5wcr-MessageViewListItemHeightByLine)}._withChildren_lmpco_19{padding-inline-end:0}._iconContainer_lmpco_23{align-items:center;display:flex;height:2.25rem;justify-content:center;min-width:3rem;width:3rem}._icon_lmpco_23{height:1rem;width:1rem}._title_lmpco_37{color:var(--sapGroup_TitleTextColor);flex:1 1 auto;font-family:var(--sapFontHeaderFamily);font-size:var(--_ui5wcr-MessageItemTitleFontSize);max-width:100%;overflow:hidden;text-overflow:ellipsis;white-space:nowrap}._title_lmpco_37+._subtitle_lmpco_47{cursor:inherit;margin-block-start:.25rem}._counter_lmpco_53{color:var(--sapContent_MarkerTextColor);flex:none;font-family:var(--sapFontFamily);font-size:var(--sapFontSize);padding-inline-start:1rem}._navigation_lmpco_61{flex-shrink:0;height:.875rem;padding:0 .9375rem;width:.875rem}._typeNegative_lmpco_68 ._icon_lmpco_23{color:var(--sapNegativeElementColor)}._typePositive_lmpco_74 ._icon_lmpco_23{color:var(--sapPositiveElementColor)}._typeCritical_lmpco_80 ._icon_lmpco_23{color:var(--sapCriticalElementColor)}:is(._typeInformation_lmpco_86,._typeNone_lmpco_87) ._icon_lmpco_23{color:var(--sapInformativeElementColor)}}`;
var classNames14 = {
  "listItem": "_listItem_lmpco_1",
  "message": "_message_lmpco_6",
  "withSubtitle": "_withSubtitle_lmpco_15",
  "withChildren": "_withChildren_lmpco_19",
  "iconContainer": "_iconContainer_lmpco_23",
  "icon": "_icon_lmpco_23",
  "title": "_title_lmpco_37",
  "subtitle": "_subtitle_lmpco_47",
  "counter": "_counter_lmpco_53",
  "navigation": "_navigation_lmpco_61",
  "typeNegative": "_typeNegative_lmpco_68",
  "typePositive": "_typePositive_lmpco_74",
  "typeCritical": "_typeCritical_lmpco_80",
  "typeInformation": "_typeInformation_lmpco_86",
  "typeNone": "_typeNone_lmpco_87"
};

// node_modules/@ui5/webcomponents-react/dist/components/MessageView/MessageItem.js
var import_jsx_runtime167 = __toESM(require_jsx_runtime(), 1);
var MessageItem = (0, import_react42.forwardRef)((props, ref) => {
  const {
    titleText,
    subtitleText,
    counter,
    type = ValueState_default.Negative,
    children,
    className,
    ...rest
  } = props;
  const [isTitleTextOverflowing, setIsTitleTextIsOverflowing] = (0, import_react42.useState)(false);
  const titleTextRef = (0, import_react42.useRef)(null);
  const hasDetails = !!(children || isTitleTextOverflowing);
  useStylesheet(styleData14, MessageItem.displayName);
  const {
    selectMessage
  } = (0, import_react42.useContext)(MessageViewContext);
  const listItemClasses = clsx(classNames14.listItem, Reflect.get(classNames14, `type${type}`), className, subtitleText && classNames14.withSubtitle);
  const messageClasses = clsx(classNames14.message, hasDetails && classNames14.withChildren);
  const handleListItemClick = (e) => {
    if (hasDetails) {
      selectMessage(props);
      if (typeof rest.onClick === "function") {
        rest.onClick(e);
      }
    }
  };
  const handleKeyDown = (e) => {
    if (typeof rest.onKeyDown === "function") {
      rest.onKeyDown(e);
    }
    if (e.code === "Enter") {
      handleListItemClick(e);
    }
  };
  const hasChildren = import_react42.Children.count(children);
  (0, import_react42.useEffect)(() => {
    const titleTextObserver = new ResizeObserver(([titleTextSpanEntry]) => {
      var _a;
      const child = titleTextSpanEntry.target.children[0];
      const target = titleTextSpanEntry.target;
      const isTargetOverflowing = target.scrollWidth > target.clientWidth;
      let isChildOverflowing = false;
      if (!isTargetOverflowing) {
        const firstChild = (_a = child == null ? void 0 : child.shadowRoot) == null ? void 0 : _a.firstChild;
        if (firstChild) {
          isChildOverflowing = firstChild.scrollWidth > firstChild.clientWidth;
        }
      }
      setIsTitleTextIsOverflowing(isTargetOverflowing || isChildOverflowing);
    });
    if (!hasChildren && titleTextRef.current) {
      titleTextObserver.observe(titleTextRef.current);
    }
    return () => {
      titleTextObserver.disconnect();
    };
  }, [hasChildren]);
  return (0, import_jsx_runtime167.jsx)(ListItemCustom, {
    onClick: handleListItemClick,
    onKeyDown: handleKeyDown,
    "data-title": titleText,
    "data-type": type,
    type: hasDetails ? ListItemType_default.Active : ListItemType_default.Inactive,
    ...rest,
    className: listItemClasses,
    ref,
    children: (0, import_jsx_runtime167.jsxs)(FlexBox, {
      alignItems: FlexBoxAlignItems.Center,
      className: messageClasses,
      children: [(0, import_jsx_runtime167.jsx)("div", {
        className: classNames14.iconContainer,
        children: (0, import_jsx_runtime167.jsx)(Icon, {
          name: getIconNameForType(type),
          className: classNames14.icon
        })
      }), (0, import_jsx_runtime167.jsxs)(FlexBox, {
        direction: FlexBoxDirection.Column,
        style: {
          flex: "auto",
          whiteSpace: "nowrap",
          overflow: "hidden",
          textOverflow: "ellipsis"
        },
        children: [titleText && (0, import_jsx_runtime167.jsx)("span", {
          className: classNames14.title,
          ref: titleTextRef,
          children: titleText
        }), titleText && subtitleText && (0, import_jsx_runtime167.jsx)(Label, {
          className: classNames14.subtitle,
          children: subtitleText
        })]
      }), counter != null && (0, import_jsx_runtime167.jsx)("span", {
        className: classNames14.counter,
        children: counter
      }), hasDetails && (0, import_jsx_runtime167.jsx)(Icon, {
        className: classNames14.navigation,
        name: slim_arrow_right_default
      })]
    })
  });
});
MessageItem.displayName = "MessageItem";

// node_modules/@ui5/webcomponents-react/dist/components/MessageViewButton/index.js
var import_react43 = __toESM(require_react(), 1);

// node_modules/@ui5/webcomponents-react/dist/components/MessageViewButton/MessageViewButton.module.css.js
var styleData15 = `@layer ui5-webcomponents-react{._btn_1y8oi_1{background:var(--sapButton_Information_Background);border-color:var(--sapButton_Information_BorderColor);color:var(--sapButton_Information_TextColor);text-shadow:var(--sapContent_TextShadow)}._btn_1y8oi_1::part(button):after{border-color:var(--sapContent_FocusColor)}._btn_1y8oi_1:hover{background:var(--sapButton_Information_Hover_Background);border-color:var(--sapButton_Information_Hover_BorderColor);color:var(--sapButton_Information_Hover_TextColor)}._btn_1y8oi_1:active{background:var(--sapButton_Information_Active_Background);border-color:var(--sapButton_Information_Active_BorderColor);color:var(--sapButton_Information_Active_TextColor)}._btn_1y8oi_1:active::part(button):after{border-color:var(--sapContent_FocusColor)}._btn_1y8oi_1[data-type=Negative]{background:var(--sapButton_Negative_Background);border-color:var(--sapButton_Negative_BorderColor);color:var(--sapButton_Negative_TextColor);text-shadow:var(--sapContent_ContrastTextShadow)}._btn_1y8oi_1[data-type=Negative]::part(button):after{border-color:var(--sapContent_ContrastFocusColor)}._btn_1y8oi_1[data-type=Negative]:hover{background:var(--sapButton_Negative_Hover_Background);border-color:var(--sapButton_Negative_Hover_BorderColor);color:var(--sapButton_Negative_Hover_TextColor)}._btn_1y8oi_1[data-type=Negative]:active{background:var(--sapButton_Negative_Active_Background);border-color:var(--sapButton_Negative_Active_BorderColor);color:var(--sapButton_Negative_Active_TextColor)}._btn_1y8oi_1[data-type=Negative]:active::part(button):after{border-color:var(--sapContent_FocusColor)}._btn_1y8oi_1[data-type=Critical]{background:var(--sapButton_Critical_Background);border-color:var(--sapButton_Critical_BorderColor);color:var(--sapButton_Critical_TextColor);text-shadow:var(--sapContent_ContrastTextShadow)}._btn_1y8oi_1[data-type=Critical]::part(button):after{border-color:var(--sapContent_ContrastFocusColor)}._btn_1y8oi_1[data-type=Critical]:hover{background:var(--sapButton_Critical_Hover_Background);border-color:var(--sapButton_Critical_Hover_BorderColor);color:var(--sapButton_Critical_Hover_TextColor)}._btn_1y8oi_1[data-type=Critical]:active{background:var(--sapButton_Critical_Active_Background);border-color:var(--sapButton_Critical_Active_BorderColor);color:var(--sapButton_Critical_Active_TextColor)}._btn_1y8oi_1[data-type=Critical]:active::part(button):after{border-color:var(--sapContent_FocusColor)}._btn_1y8oi_1[data-type=Positive]{background:var(--sapButton_Success_Background);border-color:var(--sapButton_Success_BorderColor);color:var(--sapButton_Success_TextColor);text-shadow:var(--sapContent_ContrastTextShadow)}._btn_1y8oi_1[data-type=Positive]::part(button):after{border-color:var(--sapContent_ContrastFocusColor)}._btn_1y8oi_1[data-type=Positive]:hover{background:var(--sapButton_Success_Hover_Background);border-color:var(--sapButton_Success_Hover_BorderColor);color:var(--sapButton_Success_Hover_TextColor)}._btn_1y8oi_1[data-type=Positive]:active{background:var(--sapButton_Success_Active_Background);border-color:var(--sapButton_Success_Active_BorderColor);color:var(--sapButton_Success_Active_TextColor)}._btn_1y8oi_1[data-type=Positive]:active::part(button):after{border-color:var(--sapContent_FocusColor)}}`;
var classNames15 = {
  "btn": "_btn_1y8oi_1"
};

// node_modules/@ui5/webcomponents-react/dist/components/MessageViewButton/index.js
var import_jsx_runtime168 = __toESM(require_jsx_runtime(), 1);
var getTypes = (type) => {
  switch (type) {
    case ValueState_default.Negative:
      return {
        icon: error_default,
        i18nLabel: ERROR_TYPE
      };
    case ValueState_default.Positive:
      return {
        icon: sys_enter_2_default,
        i18nLabel: SUCCESS_TYPE
      };
    case ValueState_default.Critical:
      return {
        icon: alert_default,
        i18nLabel: WARNING_TYPE
      };
    default:
      return {
        icon: information_default,
        i18nLabel: INFORMATION_TYPE
      };
  }
};
var MessageViewButton = (0, import_react43.forwardRef)((props, ref) => {
  const {
    type = ValueState_default.Negative,
    counter,
    className,
    tooltip,
    accessibleName,
    ...rest
  } = props;
  useStylesheet(styleData15, MessageViewButton.displayName);
  const classes = clsx(classNames15.btn, className);
  const {
    icon,
    i18nLabel
  } = getTypes(type);
  const i18nBundle = useI18nBundle("@ui5/webcomponents-react");
  const label = i18nBundle.getText(i18nLabel);
  return (0, import_jsx_runtime168.jsx)(Button, {
    ref,
    className: classes,
    icon,
    ...rest,
    "data-type": type,
    tooltip: tooltip ?? label,
    accessibleName: accessibleName ?? label,
    children: counter > 1 && counter
  });
});
MessageViewButton.displayName = "MessageViewButton";

// node_modules/@ui5/webcomponents-react/dist/components/Modals/index.js
var import_react44 = __toESM(require_react(), 1);
var import_react_dom3 = __toESM(require_react_dom(), 1);

// node_modules/@ui5/webcomponents-react/dist/internal/getRandomId.js
var getRandomId = () => {
  if ("randomUUID" in crypto) {
    return crypto.randomUUID();
  }
  const uint32 = window.crypto.getRandomValues(new Uint32Array(1))[0];
  return uint32.toString(16);
};

// node_modules/@ui5/webcomponents-react/dist/internal/ModalStore.js
globalThis["@ui5/webcomponents-react"] ?? (globalThis["@ui5/webcomponents-react"] = {});
var STORE_LOCATION3 = globalThis["@ui5/webcomponents-react"];
function getStyleStoreListenersSymbol2() {
  return Symbol.for(`@ui5/webcomponents-react/Modals-${getCurrentRuntimeIndex()}/Listeners`);
}
function getStyleStoreSymbol2() {
  return Symbol.for(`@ui5/webcomponents-react/Modals-${getCurrentRuntimeIndex()}`);
}
var initialStore3 = [];
function getListeners3() {
  var _a;
  STORE_LOCATION3[_a = getStyleStoreListenersSymbol2()] ?? (STORE_LOCATION3[_a] = []);
  return STORE_LOCATION3[getStyleStoreListenersSymbol2()];
}
function emitChange3() {
  for (const listener of getListeners3()) {
    listener();
  }
}
function getSnapshot3() {
  var _a;
  STORE_LOCATION3[_a = getStyleStoreSymbol2()] ?? (STORE_LOCATION3[_a] = initialStore3);
  return STORE_LOCATION3[getStyleStoreSymbol2()];
}
function subscribe3(listener) {
  const listeners = getListeners3();
  STORE_LOCATION3[getStyleStoreListenersSymbol2()] = [...listeners, listener];
  return () => {
    STORE_LOCATION3[getStyleStoreListenersSymbol2()] = listeners.filter((l) => l !== listener);
  };
}
var ModalStore = {
  subscribe: subscribe3,
  getSnapshot: getSnapshot3,
  getServerSnapshot: () => {
    return initialStore3;
  },
  addModal(config) {
    STORE_LOCATION3[getStyleStoreSymbol2()] = [...getSnapshot3(), config];
    emitChange3();
  },
  removeModal(id) {
    STORE_LOCATION3[getStyleStoreSymbol2()] = getSnapshot3().filter((modal) => modal.id !== id);
    emitChange3();
  }
};

// node_modules/@ui5/webcomponents-react/dist/components/Modals/index.js
var import_jsx_runtime169 = __toESM(require_jsx_runtime(), 1);
function showDialogFn(props, container) {
  const id = getRandomId();
  const ref = (0, import_react44.createRef)();
  ModalStore.addModal({
    Component: Dialog,
    props: {
      ...props,
      open: true,
      onClose: (event) => {
        if (typeof props.onClose === "function") {
          props.onClose(event);
        }
        ModalStore.removeModal(id);
      }
    },
    ref,
    container,
    id
  });
  return {
    ref,
    close: () => {
      if (ref.current) {
        ref.current.open = false;
      }
    }
  };
}
function showPopoverFn(props, container) {
  const id = getRandomId();
  const ref = (0, import_react44.createRef)();
  ModalStore.addModal({
    Component: Popover,
    props: {
      ...props,
      open: true,
      onClose: (event) => {
        if (typeof props.onClose === "function") {
          props.onClose(event);
        }
        ModalStore.removeModal(id);
      }
    },
    ref,
    container,
    id
  });
  return {
    ref,
    close: () => {
      if (ref.current) {
        ref.current.open = false;
      }
    }
  };
}
function showResponsivePopoverFn(props, container) {
  const id = getRandomId();
  const ref = (0, import_react44.createRef)();
  ModalStore.addModal({
    Component: ResponsivePopover,
    props: {
      ...props,
      open: true,
      onClose: (event) => {
        if (typeof props.onClose === "function") {
          props.onClose(event);
        }
        ModalStore.removeModal(id);
      }
    },
    ref,
    container,
    id
  });
  return {
    ref,
    close: () => {
      if (ref.current) {
        ref.current.open = false;
      }
    }
  };
}
function showMenuFn(props, container) {
  const id = getRandomId();
  const ref = (0, import_react44.createRef)();
  ModalStore.addModal({
    Component: Menu,
    props: {
      ...props,
      open: true,
      onClose: (event) => {
        if (typeof props.onClose === "function") {
          props.onClose(event);
        }
        ModalStore.removeModal(id);
      }
    },
    ref,
    container,
    id
  });
  return {
    ref,
    close: () => {
      if (ref.current) {
        ref.current.open = false;
      }
    }
  };
}
function showMessageBoxFn(props, container) {
  const id = getRandomId();
  const ref = (0, import_react44.createRef)();
  ModalStore.addModal({
    // @ts-expect-error: props type safety is covered by the `props` property
    Component: MessageBox,
    props: {
      ...props,
      open: true,
      onClose: (event) => {
        if (typeof props.onClose === "function") {
          props.onClose(event);
        }
        ModalStore.removeModal(id);
      }
    },
    ref,
    container,
    id
  });
  return {
    ref,
    close: () => {
      if (ref.current) {
        ref.current.open = false;
      }
    }
  };
}
function showToastFn(props, container) {
  const ref = (0, import_react44.createRef)();
  const id = getRandomId();
  ModalStore.addModal({
    Component: Toast3,
    props: {
      ...props,
      open: true,
      onClose: (event) => {
        if (typeof props.onClose === "function") {
          props.onClose(event);
        }
        ModalStore.removeModal(id);
      }
    },
    ref,
    container,
    id
  });
  return {
    ref
  };
}
function ModalComponent({
  modal
}) {
  const [componentRef, modalsRef] = useSyncRef(modal.ref);
  useIsomorphicLayoutEffect(() => {
    const modalElement = modalsRef.current;
    if (modalElement) {
      requestAnimationFrame(() => {
        modalElement.open = true;
      });
    }
  }, []);
  const {
    open: _0,
    ...props
  } = modal.props;
  return (0, import_jsx_runtime169.jsx)(modal.Component, {
    ...props,
    ref: componentRef,
    "data-id": modal.id
  });
}
function Modals() {
  const modals = (0, import_react44.useSyncExternalStore)(ModalStore.subscribe, ModalStore.getSnapshot, ModalStore.getServerSnapshot);
  return (0, import_jsx_runtime169.jsx)(import_jsx_runtime169.Fragment, {
    children: modals.map((modal) => {
      if (modal == null ? void 0 : modal.Component) {
        if (modal.container) {
          return (0, import_react_dom3.createPortal)((0, import_jsx_runtime169.jsx)(ModalComponent, {
            modal
          }, modal.id), modal.container);
        }
        return (0, import_jsx_runtime169.jsx)(ModalComponent, {
          modal
        }, modal.id);
      }
    })
  });
}
Modals.displayName = "Modals";
Modals.showDialog = showDialogFn;
Modals.showPopover = showPopoverFn;
Modals.showResponsivePopover = showResponsivePopoverFn;
Modals.showMenu = showMenuFn;
Modals.showMessageBox = showMessageBoxFn;
Modals.showToast = showToastFn;

// node_modules/@ui5/webcomponents-react/dist/components/NumericSideIndicator/index.js
var import_react45 = __toESM(require_react(), 1);

// node_modules/@ui5/webcomponents-react/dist/components/NumericSideIndicator/NumericSideIndicator.module.css.js
var styleData16 = `@layer ui5-webcomponents-react{._numericSideIndicator_jbesg_1{align-items:flex-end;color:var(--sapTile_TextColor);display:flex;flex-direction:column;font-family:var(--sapFontFamily);font-size:var(--sapFontSmallSize);min-width:0;position:relative}._title_jbesg_12{max-width:100%;overflow:hidden;padding-bottom:.25rem;text-align:end;text-overflow:ellipsis}._value_jbesg_20{color:inherit;font-size:inherit;white-space:pre-line;word-wrap:break-word;word-break:break-word}._stateGood_jbesg_28{color:var(--sapPositiveTextColor)}._stateError_jbesg_32{color:var(--sapNegativeTextColor)}._stateCritical_jbesg_36{color:var(--sapCriticalTextColor)}._stateNeutral_jbesg_40{color:var(--sapNeutralTextColor)}}`;
var classNames16 = {
  "numericSideIndicator": "_numericSideIndicator_jbesg_1",
  "title": "_title_jbesg_12",
  "value": "_value_jbesg_20",
  "stateGood": "_stateGood_jbesg_28",
  "stateError": "_stateError_jbesg_32",
  "stateCritical": "_stateCritical_jbesg_36",
  "stateNeutral": "_stateNeutral_jbesg_40"
};

// node_modules/@ui5/webcomponents-react/dist/components/NumericSideIndicator/index.js
var import_jsx_runtime170 = __toESM(require_jsx_runtime(), 1);
var NumericSideIndicator = (0, import_react45.forwardRef)((props, ref) => {
  const {
    number,
    state = ValueColor.None,
    titleText,
    unit,
    className,
    ...rest
  } = props;
  useStylesheet(styleData16, NumericSideIndicator.displayName);
  return (0, import_jsx_runtime170.jsxs)("div", {
    ref,
    className: clsx(classNames16.numericSideIndicator, className),
    ...rest,
    children: [(0, import_jsx_runtime170.jsx)("span", {
      className: classNames16.title,
      children: titleText
    }), (0, import_jsx_runtime170.jsxs)(Text3, {
      className: clsx(classNames16.value, classNames16[`state${state}`]),
      children: [number, unit]
    })]
  });
});
NumericSideIndicator.displayName = "NumericSideIndicator";

// node_modules/@ui5/webcomponents-react/dist/components/ObjectPage/index.js
var import_react51 = __toESM(require_react(), 1);

// node_modules/@ui5/webcomponents-react/dist/internal/safeGetChildrenArray.js
var import_react46 = __toESM(require_react(), 1);
var safeGetChildrenArray = (children) => {
  const childArray = [];
  import_react46.Children.forEach(children, (child) => {
    if ((0, import_react46.isValidElement)(child)) {
      childArray.push(child);
    }
  });
  return childArray;
};

// node_modules/@ui5/webcomponents-react/dist/internal/useObserveHeights.js
var import_react47 = __toESM(require_react(), 1);
var useObserveHeights = (pageRef, topHeaderRef, headerContentRef, anchorBarRef, [headerCollapsed, setHeaderCollapsed], {
  noHeader,
  fixedHeader = false,
  scrollTimeout = {
    current: 0
  },
  preserveHeaderStateOnScroll
}) => {
  var _a;
  const [topHeaderHeight, setTopHeaderHeight] = (0, import_react47.useState)(0);
  const [headerContentHeight, setHeaderContentHeight] = (0, import_react47.useState)(0);
  const [isIntersecting, setIsIntersecting] = (0, import_react47.useState)(true);
  const prevScrollTop = (0, import_react47.useRef)(0);
  const onScroll = (0, import_react47.useCallback)((e) => {
    const scrollDown = prevScrollTop.current <= e.target.scrollTop;
    prevScrollTop.current = e.target.scrollTop;
    if (scrollTimeout.current >= performance.now()) {
      return;
    }
    if (scrollDown && e.target.scrollTop >= headerContentHeight && !headerCollapsed) {
      setIsIntersecting(false);
      setHeaderCollapsed(true);
    } else if (!scrollDown && e.target.scrollTop <= topHeaderHeight + Math.max(0, headerContentHeight - topHeaderHeight) && headerCollapsed) {
      setIsIntersecting(true);
      setHeaderCollapsed(false);
    }
  }, [headerContentHeight, topHeaderHeight, headerCollapsed]);
  (0, import_react47.useEffect)(() => {
    if (headerContentRef.current && headerCollapsed !== void 0) {
      setHeaderContentHeight(headerContentRef.current.getBoundingClientRect().height);
    }
  }, [headerCollapsed]);
  (0, import_react47.useEffect)(() => {
    const page = pageRef.current;
    if (!fixedHeader && !preserveHeaderStateOnScroll) {
      page.addEventListener("scroll", onScroll);
    }
    return () => {
      page.removeEventListener("scroll", onScroll);
    };
  }, [onScroll, fixedHeader, preserveHeaderStateOnScroll]);
  (0, import_react47.useEffect)(() => {
    const headerContentResizeObserver = new ResizeObserver(([header3]) => {
      const borderBoxSize = Array.isArray(header3.borderBoxSize) ? header3.borderBoxSize[0] : header3.borderBoxSize;
      setTopHeaderHeight((borderBoxSize == null ? void 0 : borderBoxSize.blockSize) ?? header3.target.getBoundingClientRect().height);
    });
    if (topHeaderRef == null ? void 0 : topHeaderRef.current) {
      headerContentResizeObserver.observe(topHeaderRef.current);
    }
    return () => {
      headerContentResizeObserver.disconnect();
    };
  }, []);
  (0, import_react47.useEffect)(() => {
    const headerContentResizeObserver = new ResizeObserver(([headerContent2]) => {
      if (isIntersecting) {
        const borderBoxSize = Array.isArray(headerContent2.borderBoxSize) ? headerContent2.borderBoxSize[0] : headerContent2.borderBoxSize;
        setHeaderContentHeight((borderBoxSize == null ? void 0 : borderBoxSize.blockSize) ?? headerContent2.target.getBoundingClientRect().height);
      }
    });
    if (headerContentRef == null ? void 0 : headerContentRef.current) {
      headerContentResizeObserver.observe(headerContentRef.current);
    }
    return () => {
      headerContentResizeObserver.disconnect();
    };
  }, [isIntersecting]);
  const anchorBarHeight = ((_a = anchorBarRef == null ? void 0 : anchorBarRef.current) == null ? void 0 : _a.offsetHeight) ?? 0;
  const totalHeaderHeight = (noHeader ? 0 : topHeaderHeight + headerContentHeight) + anchorBarHeight;
  return {
    topHeaderHeight,
    headerContentHeight,
    anchorBarHeight,
    totalHeaderHeight,
    headerCollapsed
  };
};

// node_modules/@ui5/webcomponents-react/dist/components/ObjectPageAnchorBar/index.js
var import_react48 = __toESM(require_react(), 1);

// node_modules/@ui5/webcomponents-react/dist/components/ObjectPageAnchorBar/ObjectPageAnchorBar.module.css.js
var styleData17 = `@layer ui5-webcomponents-react{._container_1n61l_1{inset-inline-start:50%;position:absolute}._container_1n61l_1:after,._container_1n61l_1:before{content:"";height:.0625rem;inset-block-start:50%;position:absolute;width:4rem}._container_1n61l_1:before{background-image:linear-gradient(to left,var(--sapObjectHeader_BorderColor),#0000);inset-inline-end:100%}._container_1n61l_1:after{background-image:linear-gradient(to right,var(--sapObjectHeader_BorderColor),#0000);inset-inline-start:100%}._anchorBarActionButton_1n61l_25{--_ui5wcr_anchor-btn-center:calc((1.5rem - var(--sapButton_BorderWidth))/2);inset-block-start:calc(var(--_ui5wcr_anchor-btn-center)*-1);inset-inline-start:calc(50% - var(--_ui5wcr_anchor-btn-center));position:absolute;z-index:3}._anchorBarActionButton_1n61l_25:not([pressed]){background-color:var(--sapObjectHeader_Background)}._anchorBarActionButtonExpandable_1n61l_37+._anchorBarActionButtonPinnable_1n61l_38{inset-inline-start:calc(50% - var(--_ui5wcr_anchor-btn-center) + 1rem)}._anchorBarActionPinnableAndExpandable_1n61l_43._anchorBarActionButtonExpandable_1n61l_37{inset-inline-start:calc(50% - var(--_ui5wcr_anchor-btn-center) - 1rem)}}`;
var classNames17 = {
  "container": "_container_1n61l_1",
  "anchorBarActionButton": "_anchorBarActionButton_1n61l_25",
  "anchorBarActionButtonExpandable": "_anchorBarActionButtonExpandable_1n61l_37",
  "anchorBarActionButtonPinnable": "_anchorBarActionButtonPinnable_1n61l_38",
  "anchorBarActionPinnableAndExpandable": "_anchorBarActionPinnableAndExpandable_1n61l_43"
};

// node_modules/@ui5/webcomponents-react/dist/components/ObjectPageAnchorBar/index.js
var import_jsx_runtime171 = __toESM(require_jsx_runtime(), 1);
var _buttonBaseMinWidth = `${cssVarVersionInfoPrefix}button_base_min_width`;
var _buttonBaseHeight = `${cssVarVersionInfoPrefix}button_base_height`;
var anchorButtonVariables = {
  [_buttonBaseMinWidth]: "1.5rem",
  [_buttonBaseHeight]: "1.5rem"
};
var ObjectPageAnchorBar = (0, import_react48.forwardRef)((props, ref) => {
  var _a;
  const {
    headerContentVisible,
    hidePinButton,
    headerPinned,
    style,
    accessibilityAttributes,
    setHeaderPinned,
    onPinButtonToggle,
    onToggleHeaderContentVisibility,
    onHoverToggleButton
  } = props;
  useStylesheet(styleData17, ObjectPageAnchorBar.displayName);
  const showHideHeaderBtnRef = (0, import_react48.useRef)(null);
  const shouldRenderHeaderPinnableButton = !hidePinButton && headerContentVisible;
  const showBothActions = shouldRenderHeaderPinnableButton;
  const onPinHeader = (0, import_react48.useCallback)((e) => {
    setHeaderPinned(e.target.pressed);
  }, [setHeaderPinned]);
  const isInitial = (0, import_react48.useRef)(true);
  (0, import_react48.useEffect)(() => {
    if (!isInitial.current && typeof onPinButtonToggle === "function") {
      onPinButtonToggle(headerPinned);
    }
    if (isInitial.current) {
      isInitial.current = false;
    }
  }, [headerPinned]);
  (0, import_react48.useEffect)(() => {
    const tagName = getUi5TagWithSuffix2("ui5-button");
    const showHideHeaderBtn = showHideHeaderBtnRef.current;
    void customElements.whenDefined(tagName).then(() => {
      if (showHideHeaderBtn) {
        showHideHeaderBtn.accessibilityAttributes = {
          expanded: !!headerContentVisible
        };
      }
    });
  }, [!!headerContentVisible]);
  const onToggleHeaderButtonClick = (e) => {
    onToggleHeaderContentVisibility(enrichEventWithDetails(e, {
      visible: !headerContentVisible
    }));
  };
  const i18nBundle = useI18nBundle("@ui5/webcomponents-react");
  return (0, import_jsx_runtime171.jsxs)("section", {
    "data-component-name": "ObjectPageAnchorBar",
    style,
    role: (_a = accessibilityAttributes == null ? void 0 : accessibilityAttributes.objectPageAnchorBar) == null ? void 0 : _a.role,
    className: !hidePinButton ? classNames17.container : null,
    ref,
    children: [(0, import_jsx_runtime171.jsx)(Button, {
      ref: showHideHeaderBtnRef,
      icon: !headerContentVisible ? slim_arrow_down_default : slim_arrow_up_default,
      "data-ui5wcr-dynamic-page-header-action": "",
      className: clsx(classNames17.anchorBarActionButton, classNames17.anchorBarActionButtonExpandable, showBothActions && classNames17.anchorBarActionPinnableAndExpandable),
      style: anchorButtonVariables,
      onClick: onToggleHeaderButtonClick,
      onMouseOver: onHoverToggleButton,
      onMouseLeave: onHoverToggleButton,
      tooltip: i18nBundle.getText(!headerContentVisible ? EXPAND_HEADER : COLLAPSE_HEADER),
      accessibleName: i18nBundle.getText(!headerContentVisible ? EXPAND_HEADER : COLLAPSE_HEADER),
      "data-component-name": "ObjectPageAnchorBarExpandBtn"
    }), shouldRenderHeaderPinnableButton && (0, import_jsx_runtime171.jsx)(ToggleButton3, {
      icon: headerPinned ? pushpin_on_default : pushpin_off_default,
      "data-ui5wcr-dynamic-page-header-action": "",
      className: clsx(classNames17.anchorBarActionButton, classNames17.anchorBarActionButtonPinnable),
      style: anchorButtonVariables,
      pressed: headerPinned,
      onClick: onPinHeader,
      tooltip: i18nBundle.getText(headerPinned ? UNPIN_HEADER : PIN_HEADER),
      accessibleName: i18nBundle.getText(headerPinned ? UNPIN_HEADER : PIN_HEADER),
      "data-component-name": "ObjectPageAnchorBarPinBtn"
    })]
  });
});
ObjectPageAnchorBar.displayName = "ObjectPageAnchorBar";

// node_modules/@ui5/webcomponents-react/dist/components/ObjectPage/CollapsedAvatar.js
var import_react49 = __toESM(require_react(), 1);

// node_modules/@ui5/webcomponents-react/dist/components/ObjectPage/CollapsedAvatar.module.css.js
var styleData18 = `@layer ui5-webcomponents-react{._base_589hq_1{align-self:center;opacity:0;padding-inline-end:1rem}._hidden_589hq_7{opacity:0}._visible_589hq_11{opacity:1;transition:opacity .5s}._imageContainer_589hq_16{display:inline-block;max-height:3rem;max-width:3rem;vertical-align:middle;width:3rem}._image_589hq_16{height:100%;width:100%}}`;
var classNames18 = {
  "base": "_base_589hq_1",
  "hidden": "_hidden_589hq_7",
  "visible": "_visible_589hq_11",
  "imageContainer": "_imageContainer_589hq_16",
  "image": "_image_589hq_16"
};

// node_modules/@ui5/webcomponents-react/dist/components/ObjectPage/CollapsedAvatar.js
var import_jsx_runtime172 = __toESM(require_jsx_runtime(), 1);
var CollapsedAvatar = (props) => {
  const {
    image,
    imageShapeCircle,
    style
  } = props;
  useStylesheet(styleData18, CollapsedAvatar.displayName);
  const [isMounted, setIsMounted] = (0, import_react49.useState)(false);
  const domRef = (0, import_react49.useRef)(null);
  const avatarContent = (0, import_react49.useMemo)(() => {
    var _a, _b;
    if (!image) return null;
    if (typeof image === "string") {
      return (0, import_jsx_runtime172.jsx)("span", {
        className: classNames18.imageContainer,
        style: {
          borderRadius: imageShapeCircle ? "50%" : 0,
          overflow: "hidden"
        },
        children: (0, import_jsx_runtime172.jsx)("img", {
          className: classNames18.image,
          src: image,
          alt: "Object Page Image"
        })
      });
    } else {
      return (0, import_react49.cloneElement)(image, {
        size: AvatarSize_default.S,
        className: ((_a = image.props) == null ? void 0 : _a.className) ? `${classNames18.imageContainer} ${(_b = image.props) == null ? void 0 : _b.className}` : classNames18.imageContainer
      });
    }
  }, [image, imageShapeCircle]);
  (0, import_react49.useEffect)(() => {
    setIsMounted(true);
  }, []);
  const containerClasses = clsx(classNames18.base, isMounted ? classNames18.visible : classNames18.hidden);
  return (0, import_jsx_runtime172.jsx)("div", {
    ref: domRef,
    className: containerClasses,
    style,
    "data-component-name": "ObjectPageCollapsedAvatar",
    children: avatarContent
  });
};
CollapsedAvatar.displayName = "CollapsedAvatar";

// node_modules/@ui5/webcomponents-react/dist/components/ObjectPage/ObjectPage.module.css.js
var styleData19 = `@layer ui5-webcomponents-react{._objectPage_ly52o_1{container:objectPage/inline-size;--_ui5wcr_ObjectPage_header_display:block;--_ui5wcr_ObjectPage_title_fontsize:var(--sapObjectHeader_Title_FontSize);background-color:var(--sapBackgroundColor);box-sizing:border-box;display:flex;flex-direction:column;font-family:var(--sapFontFamily);height:100%;max-height:100vh;overflow-x:hidden;overflow-y:auto;position:relative;scroll-behavior:smooth;white-space:normal;width:100%}._objectPage_ly52o_1[data-in-iframe=true]{scroll-behavior:auto}._objectPage_ly52o_1 section[id*=ObjectPageSection-]>div[role=heading]{display:none}._objectPage_ly52o_1 section[id*=ObjectPageSection-]~section[id*=ObjectPageSection-]>div[role=heading]{display:block}._iconTabBarMode_ly52o_34 section[data-component-name=ObjectPageSection]>div[role=heading]{display:none}._header_ly52o_39{--_ui5wcr_ObjectPage_header_display:block;background-color:var(--sapObjectHeader_Background);box-sizing:border-box;cursor:pointer;display:grid;inset-block-start:0;position:sticky;z-index:4}._header_ly52o_39 [data-component-name=ObjectPageTitle]{grid-column:2;padding-inline:0}._header_ly52o_39:has([data-component-name=ATwithImageSnappedContentContainer]) [data-component-name=ObjectPageTitle]{padding-block-end:0}._headerCollapsed_ly52o_60{--_ui5wcr_ObjectPage_header_display:none;--_ui5wcr_ObjectPage_title_fontsize:var(--sapObjectHeader_Title_SnappedFontSize)}._headerContainer_ly52o_65{background-color:var(--sapObjectHeader_Background);display:grid;grid-auto-columns:min-content calc(100% - 7rem);margin-block-end:.25rem}._headerContainer_ly52o_65 [data-component-name=ObjectPageHeaderContent]{grid-column:2}._headerHoverStyles_ly52o_76[data-not-clickable=true]{cursor:unset}._headerHoverStyles_ly52o_76[data-not-clickable=false]{background-color:var(--sapObjectHeader_Hover_Background)}._headerHoverStyles_ly52o_76[data-not-clickable=false] [data-component-name=ObjectPageTitle]{background-color:var(--sapObjectHeader_Hover_Background)}._headerImage_ly52o_90{display:inline-block;margin-inline-end:2rem;max-height:5rem;max-width:5rem;min-width:5rem}._image_ly52o_98{height:100%;width:100%}._anchorBar_ly52o_103{position:sticky;z-index:4}._tabContainer_ly52o_108{position:sticky;z-index:3}._tabContainerComponent_ly52o_113::part(content){display:none}._tabContainerComponent_ly52o_113::part(tabstrip){box-shadow:inset 0 -.0625rem var(--sapPageHeader_BorderColor),0 .125rem .25rem 0 #00000014;padding:0;padding-inline:var(--_ui5wcr_ObjectPage_tab_bar_inline_padding)}._content_ly52o_127{flex-grow:1;position:relative}@container (max-width: 599px){._content_ly52o_127,._headerContainer_ly52o_65,._header_ly52o_39{padding-inline:1rem}._tabContainer_ly52o_108{--_ui5wcr_ObjectPage_tab_bar_inline_padding:0}}@container (min-width: 600px) and (max-width: 1439px){._content_ly52o_127,._headerContainer_ly52o_65,._header_ly52o_39{padding-inline:2rem}._tabContainer_ly52o_108{--_ui5wcr_ObjectPage_tab_bar_inline_padding:1rem}}@container (min-width: 1440px){._content_ly52o_127,._headerContainer_ly52o_65,._header_ly52o_39{padding-inline:3rem}._tabContainer_ly52o_108{--_ui5wcr_ObjectPage_tab_bar_inline_padding:2rem}}._footer_ly52o_168{inset-block-end:.5rem;margin:0 .5rem;position:sticky}._footerSpacer_ly52o_174{flex-shrink:0;height:1rem}._subSectionPopover_ly52o_179::part(content){padding:0}._snappedContent_ly52o_183{grid-column:1/span 2;padding-block-end:.5rem}._clickArea_ly52o_188{inset:0;position:absolute}}`;
var classNames19 = {
  "objectPage": "_objectPage_ly52o_1",
  "iconTabBarMode": "_iconTabBarMode_ly52o_34",
  "header": "_header_ly52o_39",
  "headerCollapsed": "_headerCollapsed_ly52o_60",
  "headerContainer": "_headerContainer_ly52o_65",
  "headerHoverStyles": "_headerHoverStyles_ly52o_76",
  "headerImage": "_headerImage_ly52o_90",
  "image": "_image_ly52o_98",
  "anchorBar": "_anchorBar_ly52o_103",
  "tabContainer": "_tabContainer_ly52o_108",
  "tabContainerComponent": "_tabContainerComponent_ly52o_113",
  "content": "_content_ly52o_127",
  "footer": "_footer_ly52o_168",
  "footerSpacer": "_footerSpacer_ly52o_174",
  "subSectionPopover": "_subSectionPopover_ly52o_179",
  "snappedContent": "_snappedContent_ly52o_183",
  "clickArea": "_clickArea_ly52o_188"
};

// node_modules/@ui5/webcomponents-react/dist/components/ObjectPage/ObjectPageUtils.js
var import_react50 = __toESM(require_react(), 1);
var getSectionById = (sections, id) => {
  return safeGetChildrenArray(sections).find((objectPageSection) => {
    var _a;
    return (0, import_react50.isValidElement)(objectPageSection) && ((_a = objectPageSection.props) == null ? void 0 : _a.id) === id;
  });
};
var getSectionElementById = (objectPage, isSubSection, id) => {
  return objectPage == null ? void 0 : objectPage.querySelector(`#${isSubSection ? "ObjectPageSubSection" : "ObjectPageSection"}-${CSS.escape(id)}`);
};

// node_modules/@ui5/webcomponents-react/dist/components/ObjectPage/index.js
var import_jsx_runtime173 = __toESM(require_jsx_runtime(), 1);
var ObjectPageCssVariables = {
  headerDisplay: "--_ui5wcr_ObjectPage_header_display",
  titleFontSize: "--_ui5wcr_ObjectPage_title_fontsize"
};
var TAB_CONTAINER_HEADER_HEIGHT = 44;
var ObjectPage = (0, import_react51.forwardRef)((props, ref) => {
  var _a, _b, _c, _d, _e;
  const {
    titleArea,
    image,
    footerArea,
    mode = ObjectPageMode.Default,
    imageShapeCircle,
    className,
    style,
    slot,
    children,
    selectedSectionId,
    headerPinned: headerPinnedProp,
    headerArea,
    hidePinButton,
    preserveHeaderStateOnClick,
    accessibilityAttributes,
    placeholder,
    onSelectedSectionChange,
    onToggleHeaderArea,
    onPinButtonToggle,
    onBeforeNavigate,
    ...rest
  } = props;
  useStylesheet(styleData19, ObjectPage.displayName);
  const childrenArray = (0, import_react51.useMemo)(() => safeGetChildrenArray(children), [children]);
  const firstSectionId = (_b = (_a = childrenArray[0]) == null ? void 0 : _a.props) == null ? void 0 : _b.id;
  const [internalSelectedSectionId, setInternalSelectedSectionId] = (0, import_react51.useState)(selectedSectionId ?? firstSectionId);
  const [selectedSubSectionId, setSelectedSubSectionId] = (0, import_react51.useState)(void 0);
  const [headerPinned, setHeaderPinned] = (0, import_react51.useState)(headerPinnedProp);
  const isProgrammaticallyScrolled = (0, import_react51.useRef)(false);
  const [isMounted, setIsMounted] = (0, import_react51.useState)(false);
  const [componentRef, objectPageRef] = useSyncRef(ref);
  const topHeaderRef = (0, import_react51.useRef)(null);
  const scrollEvent = (0, import_react51.useRef)(void 0);
  const prevTopHeaderHeight = (0, import_react51.useRef)(0);
  const [componentRefHeaderContent, headerContentRef] = useSyncRef(headerArea == null ? void 0 : headerArea.ref);
  const anchorBarRef = (0, import_react51.useRef)(null);
  const objectPageContentRef = (0, import_react51.useRef)(null);
  const selectionScrollTimeout = (0, import_react51.useRef)(null);
  const isToggledRef = (0, import_react51.useRef)(false);
  const isInitial = (0, import_react51.useRef)(true);
  const [headerCollapsedInternal, setHeaderCollapsedInternal] = (0, import_react51.useState)(void 0);
  const [scrolledHeaderExpanded, setScrolledHeaderExpanded] = (0, import_react51.useState)(false);
  const scrollTimeout = (0, import_react51.useRef)(0);
  const [sectionSpacer, setSectionSpacer] = (0, import_react51.useState)(0);
  const [currentTabModeSection, setCurrentTabModeSection] = (0, import_react51.useState)(null);
  const sections = mode === ObjectPageMode.IconTabBar ? currentTabModeSection : children;
  (0, import_react51.useEffect)(() => {
    const currentSection = mode === ObjectPageMode.IconTabBar ? getSectionById(children, internalSelectedSectionId) : null;
    setCurrentTabModeSection(currentSection);
  }, [mode, children, internalSelectedSectionId]);
  const prevInternalSelectedSectionId = (0, import_react51.useRef)(internalSelectedSectionId);
  const fireOnSelectedChangedEvent = (targetEvent, index, id, section) => {
    if (typeof onSelectedSectionChange === "function" && targetEvent && prevInternalSelectedSectionId.current !== id) {
      onSelectedSectionChange(enrichEventWithDetails(targetEvent, {
        selectedSectionIndex: parseInt(index, 10),
        selectedSectionId: id,
        section
      }));
      prevInternalSelectedSectionId.current = id;
    }
  };
  const debouncedOnSectionChange = (0, import_react51.useRef)(debounce(fireOnSelectedChangedEvent, 500)).current;
  (0, import_react51.useEffect)(() => {
    return () => {
      debouncedOnSectionChange.cancel();
      clearTimeout(selectionScrollTimeout.current);
    };
  }, []);
  const {
    topHeaderHeight,
    headerContentHeight,
    anchorBarHeight,
    totalHeaderHeight,
    headerCollapsed
  } = useObserveHeights(objectPageRef, topHeaderRef, headerContentRef, anchorBarRef, [headerCollapsedInternal, setHeaderCollapsedInternal], {
    noHeader: !titleArea && !headerArea,
    fixedHeader: headerPinned,
    scrollTimeout
  });
  (0, import_react51.useEffect)(() => {
    if (typeof onToggleHeaderArea === "function" && isToggledRef.current) {
      onToggleHeaderArea(headerCollapsed !== true);
    }
  }, [headerCollapsed]);
  (0, import_react51.useEffect)(() => {
    const objectPageNode = objectPageRef.current;
    if (objectPageNode) {
      Object.assign(objectPageNode, {
        toggleHeaderArea(snapped) {
          if (typeof snapped === "boolean") {
            onToggleHeaderContentVisibility({
              detail: {
                visible: !snapped
              }
            });
          } else {
            onToggleHeaderContentVisibility({
              detail: {
                visible: !!headerCollapsed
              }
            });
          }
        }
      });
    }
  }, [headerCollapsed]);
  const avatar = (0, import_react51.useMemo)(() => {
    var _a2;
    if (!image) {
      return null;
    }
    if (typeof image === "string") {
      return (0, import_jsx_runtime173.jsx)("span", {
        className: classNames19.headerImage,
        style: {
          borderRadius: imageShapeCircle ? "50%" : 0,
          overflow: "hidden"
        },
        children: (0, import_jsx_runtime173.jsx)("img", {
          src: image,
          className: classNames19.image,
          alt: "Company Logo"
        })
      });
    } else {
      return (0, import_react51.cloneElement)(image, {
        size: AvatarSize_default.L,
        className: clsx(classNames19.headerImage, (_a2 = image.props) == null ? void 0 : _a2.className)
      });
    }
  }, [image, classNames19.headerImage, classNames19.image, imageShapeCircle]);
  const scrollToSectionById = (id, isSubSection = false) => {
    const section = getSectionElementById(objectPageRef.current, isSubSection, id);
    scrollTimeout.current = performance.now() + 500;
    if (section) {
      const safeTopHeaderHeight = topHeaderHeight || prevTopHeaderHeight.current;
      const scrollMargin = -1 + safeTopHeaderHeight + anchorBarHeight + TAB_CONTAINER_HEADER_HEIGHT + (headerPinned && !headerCollapsed ? headerContentHeight : 0);
      section.style.scrollMarginBlockStart = scrollMargin + "px";
      if (isSubSection) {
        section.focus();
      }
      const sectionRect = section.getBoundingClientRect();
      const objectPageElement = objectPageRef.current;
      const objectPageRect = objectPageElement.getBoundingClientRect();
      objectPageElement.scrollTop = sectionRect.top - objectPageRect.top + objectPageElement.scrollTop - scrollMargin;
      section.style.scrollMarginBlockStart = "";
    }
  };
  const scrollToSection = (sectionId) => {
    var _a2;
    if (!sectionId) {
      return;
    }
    if (firstSectionId === sectionId) {
      (_a2 = objectPageRef.current) == null ? void 0 : _a2.scrollTo({
        top: 0
      });
    } else {
      scrollToSectionById(sectionId);
    }
    isProgrammaticallyScrolled.current = false;
  };
  const handleOnSectionSelected = (targetEvent, newSelectionSectionId, index, section) => {
    isProgrammaticallyScrolled.current = true;
    debouncedOnSectionChange.cancel();
    setSelectedSubSectionId(void 0);
    setInternalSelectedSectionId((prevSelectedSection) => {
      if (prevSelectedSection === newSelectionSectionId) {
        scrollToSection(newSelectionSectionId);
      }
      return newSelectionSectionId;
    });
    scrollEvent.current = targetEvent;
    fireOnSelectedChangedEvent(targetEvent, index, newSelectionSectionId, section);
  };
  (0, import_react51.useEffect)(() => {
    if (selectedSectionId) {
      const selectedSection = getSectionElementById(objectPageRef.current, false, selectedSectionId);
      if (selectedSection) {
        const selectedSectionIndex = Array.from(selectedSection.parentElement.querySelectorAll(':scope > [data-component-name="ObjectPageSection"]')).indexOf(selectedSection);
        handleOnSectionSelected({}, selectedSectionId, selectedSectionIndex, selectedSection);
      }
    }
  }, [selectedSectionId]);
  (0, import_react51.useEffect)(() => {
    if (mode === ObjectPageMode.Default && isProgrammaticallyScrolled.current === true && !selectedSubSectionId) {
      scrollToSection(internalSelectedSectionId);
    }
  }, [internalSelectedSectionId, mode, selectedSubSectionId]);
  (0, import_react51.useEffect)(() => {
    if (selectedSubSectionId && isProgrammaticallyScrolled.current === true && sectionSpacer) {
      scrollToSectionById(selectedSubSectionId, true);
      isProgrammaticallyScrolled.current = false;
    }
  }, [selectedSubSectionId, isProgrammaticallyScrolled.current, sectionSpacer]);
  (0, import_react51.useEffect)(() => {
    if (headerPinnedProp !== void 0) {
      setHeaderPinned(headerPinnedProp);
    }
    if (headerPinnedProp) {
      onToggleHeaderContentVisibility({
        detail: {
          visible: true
        }
      });
    }
  }, [headerPinnedProp]);
  const prevHeaderPinned = (0, import_react51.useRef)(headerPinned);
  (0, import_react51.useEffect)(() => {
    if (prevHeaderPinned.current && !headerPinned && objectPageRef.current.scrollTop > topHeaderHeight) {
      onToggleHeaderContentVisibility({
        detail: {
          visible: false
        }
      });
      prevHeaderPinned.current = false;
    }
    if (!prevHeaderPinned.current && headerPinned) {
      prevHeaderPinned.current = true;
    }
  }, [headerPinned, topHeaderHeight]);
  (0, import_react51.useEffect)(() => {
    if (!isMounted) {
      setIsMounted(true);
      return;
    }
    setSelectedSubSectionId(props.selectedSubSectionId);
    if (props.selectedSubSectionId) {
      isProgrammaticallyScrolled.current = true;
      if (mode === ObjectPageMode.IconTabBar) {
        let sectionId;
        childrenArray.forEach((section) => {
          if ((0, import_react51.isValidElement)(section) && section.props && section.props.children) {
            safeGetChildrenArray(section.props.children).forEach((subSection) => {
              var _a2;
              if ((0, import_react51.isValidElement)(subSection) && subSection.props && subSection.props.id === props.selectedSubSectionId) {
                sectionId = (_a2 = section.props) == null ? void 0 : _a2.id;
              }
            });
          }
        });
        if (sectionId) {
          setInternalSelectedSectionId(sectionId);
        }
      }
    }
  }, [props.selectedSubSectionId, isMounted]);
  const tabContainerContainerRef = (0, import_react51.useRef)(null);
  const isHeaderPinnedAndExpanded = headerPinned && !headerCollapsed;
  (0, import_react51.useEffect)(() => {
    const objectPage = objectPageRef.current;
    const tabContainerContainer = tabContainerContainerRef.current;
    if (!objectPage || !tabContainerContainer) {
      return;
    }
    const footerElement = objectPage.querySelector('[data-component-name="ObjectPageFooter"]');
    const topHeaderElement = objectPage.querySelector('[data-component-name="ObjectPageTopHeader"]');
    const calculateSpacer = ([lastSectionNodeEntry]) => {
      const lastSectionNode2 = lastSectionNodeEntry == null ? void 0 : lastSectionNodeEntry.target;
      if (!lastSectionNode2) {
        setSectionSpacer(0);
        return;
      }
      const subSections = lastSectionNode2.querySelectorAll('[id^="ObjectPageSubSection"]');
      const lastSubSection = subSections[subSections.length - 1];
      const lastSubSectionOrSection = lastSubSection ?? lastSectionNode2;
      if (currentTabModeSection && !lastSubSection || sectionNodes.length === 1 && !lastSubSection) {
        setSectionSpacer(0);
        return;
      }
      const footerHeight = (footerElement == null ? void 0 : footerElement.offsetHeight) ?? 0;
      const objectPageRect = objectPage.getBoundingClientRect();
      const tabContainerContainerRect = tabContainerContainer.getBoundingClientRect();
      const lastSubSectionOrSectionRect = lastSubSectionOrSection.getBoundingClientRect();
      let stickyHeaderBottom = 0;
      if (!isHeaderPinnedAndExpanded) {
        const topHeaderBottom = (topHeaderElement == null ? void 0 : topHeaderElement.getBoundingClientRect().bottom) ?? 0;
        stickyHeaderBottom = topHeaderBottom + tabContainerContainerRect.height;
      } else {
        stickyHeaderBottom = tabContainerContainerRect.bottom;
      }
      const spacer = Math.ceil(
        objectPageRect.bottom - stickyHeaderBottom - lastSubSectionOrSectionRect.height - footerHeight
        // section padding (8px) not included, so that the intersection observer is triggered correctly
      );
      setSectionSpacer(Math.max(spacer, 0));
    };
    const observer = new ResizeObserver(calculateSpacer);
    const sectionNodes = objectPage.querySelectorAll('[id^="ObjectPageSection"]');
    const lastSectionNode = sectionNodes[sectionNodes.length - 1];
    if (lastSectionNode) {
      observer.observe(lastSectionNode, {
        box: "border-box"
      });
    }
    return () => {
      observer.disconnect();
    };
  }, [topHeaderHeight, headerContentHeight, currentTabModeSection, children, mode, isHeaderPinnedAndExpanded]);
  const onToggleHeaderContentVisibility = (0, import_react51.useCallback)((e) => {
    var _a2, _b2;
    isToggledRef.current = true;
    scrollTimeout.current = performance.now() + 500;
    if (!e.detail.visible) {
      setHeaderCollapsedInternal(true);
      (_a2 = objectPageRef.current) == null ? void 0 : _a2.classList.add(classNames19.headerCollapsed);
    } else {
      setHeaderCollapsedInternal(false);
      setScrolledHeaderExpanded(true);
      (_b2 = objectPageRef.current) == null ? void 0 : _b2.classList.remove(classNames19.headerCollapsed);
    }
  }, []);
  const handleOnSubSectionSelected = (e) => {
    var _a2;
    isProgrammaticallyScrolled.current = true;
    if (mode === ObjectPageMode.IconTabBar) {
      const sectionId = e.detail.sectionId;
      setInternalSelectedSectionId(sectionId);
      const sectionNodes = (_a2 = objectPageRef.current) == null ? void 0 : _a2.querySelectorAll('section[data-component-name="ObjectPageSection"]');
      const currentIndex = childrenArray.findIndex((objectPageSection) => {
        var _a3;
        return (0, import_react51.isValidElement)(objectPageSection) && ((_a3 = objectPageSection.props) == null ? void 0 : _a3.id) === sectionId;
      });
      debouncedOnSectionChange(e, currentIndex, sectionId, sectionNodes[currentIndex]);
    }
    const subSectionId = e.detail.subSectionId;
    scrollTimeout.current = performance.now() + 200;
    setSelectedSubSectionId(subSectionId);
  };
  const objectPageClasses = clsx(classNames19.objectPage, className, mode === ObjectPageMode.IconTabBar && classNames19.iconTabBarMode);
  const {
    onScroll: _0,
    selectedSubSectionId: _1,
    ...propsWithoutOmitted
  } = rest;
  const visibleSectionIds = (0, import_react51.useRef)(/* @__PURE__ */ new Set());
  (0, import_react51.useEffect)(() => {
    var _a2;
    const sectionNodes = (_a2 = objectPageRef.current) == null ? void 0 : _a2.querySelectorAll('section[data-component-name="ObjectPageSection"]');
    const rootMargin = `-${(headerPinned && !headerCollapsed ? totalHeaderHeight : topHeaderHeight) + TAB_CONTAINER_HEADER_HEIGHT}px 0px 0px 0px`;
    const observer = new IntersectionObserver((entries) => {
      entries.forEach((entry) => {
        const sectionId = entry.target.id;
        if (entry.isIntersecting) {
          visibleSectionIds.current.add(sectionId);
        } else {
          visibleSectionIds.current.delete(sectionId);
        }
        let currentIndex;
        const sortedVisibleSections = Array.from(sectionNodes).filter((section, index) => {
          const isVisibleSection = visibleSectionIds.current.has(section.id);
          if (currentIndex === void 0 && isVisibleSection) {
            currentIndex = index;
          }
          return visibleSectionIds.current.has(section.id);
        });
        if (sortedVisibleSections.length > 0) {
          const section = sortedVisibleSections[0];
          const id = sortedVisibleSections[0].id.slice(18);
          setInternalSelectedSectionId(id);
          debouncedOnSectionChange(scrollEvent.current, currentIndex, id, section);
        }
      });
    }, {
      root: objectPageRef.current,
      rootMargin,
      threshold: [0]
    });
    sectionNodes.forEach((el) => {
      observer.observe(el);
    });
    return () => {
      observer.disconnect();
    };
  }, [totalHeaderHeight, headerPinned, headerCollapsed, topHeaderHeight, childrenArray.length]);
  const onTitleClick = (e) => {
    e.stopPropagation();
    if (!preserveHeaderStateOnClick) {
      onToggleHeaderContentVisibility(enrichEventWithDetails(e, {
        visible: headerCollapsed
      }));
    }
  };
  const snappedHeaderInObjPage = titleArea && titleArea.props.snappedContent && headerCollapsed === true && !!image;
  (0, import_react51.useEffect)(() => {
    if (!isInitial.current) {
      scrollTimeout.current = performance.now() + 200;
    } else {
      isInitial.current = false;
    }
  }, [snappedHeaderInObjPage]);
  const renderHeaderContentSection = () => {
    if (headerArea == null ? void 0 : headerArea.props) {
      return (0, import_react51.cloneElement)(headerArea, {
        ...headerArea.props,
        topHeaderHeight,
        style: headerCollapsed === true ? {
          ...headerArea.props.style,
          position: "absolute",
          visibility: "hidden",
          flexShrink: 0,
          insetInline: 0
        } : {
          ...headerArea.props.style,
          flexShrink: 0
        },
        headerPinned: headerPinned || scrolledHeaderExpanded,
        //@ts-expect-error: todo remove me when forwardref has been replaced
        ref: componentRefHeaderContent,
        children: (0, import_jsx_runtime173.jsxs)("div", {
          className: classNames19.headerContainer,
          "data-component-name": "ObjectPageHeaderContainer",
          children: [avatar, headerArea.props.children && (0, import_jsx_runtime173.jsx)("div", {
            "data-component-name": "ObjectPageHeaderContent",
            children: headerArea.props.children
          })]
        })
      });
    }
  };
  const onTabItemSelect = (event) => {
    var _a2;
    if (typeof onBeforeNavigate === "function") {
      const selectedTabDataset = event.detail.tab.dataset;
      const sectionIndex = parseInt(selectedTabDataset.index, 10);
      const sectionId2 = selectedTabDataset.parentId ?? selectedTabDataset.sectionId;
      const subSectionId = Object.prototype.hasOwnProperty.call(selectedTabDataset, "isSubTab") ? selectedTabDataset.sectionId : void 0;
      onBeforeNavigate(enrichEventWithDetails(event, {
        sectionIndex,
        sectionId: sectionId2,
        subSectionId
      }));
      if (event.defaultPrevented) {
        return;
      }
    }
    event.preventDefault();
    const {
      sectionId,
      index,
      isSubTab,
      parentId
    } = event.detail.tab.dataset;
    if (isSubTab !== void 0) {
      handleOnSubSectionSelected(enrichEventWithDetails(event, {
        sectionId: parentId,
        subSectionId: sectionId
      }));
    } else {
      const section = childrenArray.find((el) => {
        return el.props.id == sectionId;
      });
      handleOnSectionSelected(event, (_a2 = section == null ? void 0 : section.props) == null ? void 0 : _a2.id, index, section);
    }
  };
  const prevScrollTop = (0, import_react51.useRef)(void 0);
  const onObjectPageScroll = (0, import_react51.useCallback)((e) => {
    var _a2;
    if (!isToggledRef.current) {
      isToggledRef.current = true;
    }
    if (scrollTimeout.current >= performance.now()) {
      return;
    }
    scrollEvent.current = e;
    if (typeof props.onScroll === "function") {
      props.onScroll(e);
    }
    if (selectedSubSectionId) {
      setSelectedSubSectionId(void 0);
    }
    if (selectionScrollTimeout.current) {
      clearTimeout(selectionScrollTimeout.current);
    }
    if (!headerPinned || e.target.scrollTop === 0) {
      (_a2 = objectPageRef.current) == null ? void 0 : _a2.classList.remove(classNames19.headerCollapsed);
    }
    if (scrolledHeaderExpanded && e.target.scrollTop !== prevScrollTop.current) {
      if (e.target.scrollHeight - e.target.scrollTop === e.target.clientHeight) {
        return;
      }
      prevScrollTop.current = e.target.scrollTop;
      if (!headerPinned) {
        setHeaderCollapsedInternal(true);
      }
      setScrolledHeaderExpanded(false);
    }
  }, [topHeaderHeight, headerPinned, props.onScroll, scrolledHeaderExpanded, selectedSubSectionId]);
  const onHoverToggleButton = (0, import_react51.useCallback)((e) => {
    var _a2, _b2;
    if ((e == null ? void 0 : e.type) === "mouseover") {
      (_a2 = topHeaderRef.current) == null ? void 0 : _a2.classList.add(classNames19.headerHoverStyles);
    } else {
      (_b2 = topHeaderRef.current) == null ? void 0 : _b2.classList.remove(classNames19.headerHoverStyles);
    }
  }, [classNames19.headerHoverStyles]);
  const objectPageStyles = {
    ...style
  };
  if (headerCollapsed === true && headerArea) {
    objectPageStyles[ObjectPageCssVariables.titleFontSize] = ThemingParameters.sapObjectHeader_Title_SnappedFontSize;
  }
  return (0, import_jsx_runtime173.jsxs)("div", {
    "data-component-name": "ObjectPage",
    slot,
    className: objectPageClasses,
    style: objectPageStyles,
    ref: componentRef,
    onScroll: onObjectPageScroll,
    "data-in-iframe": window && window.self !== window.top,
    ...propsWithoutOmitted,
    children: [(0, import_jsx_runtime173.jsxs)("header", {
      onMouseOver: onHoverToggleButton,
      onMouseLeave: onHoverToggleButton,
      "data-component-name": "ObjectPageTopHeader",
      ref: topHeaderRef,
      role: (_c = accessibilityAttributes == null ? void 0 : accessibilityAttributes.objectPageTopHeader) == null ? void 0 : _c.role,
      "data-not-clickable": !!preserveHeaderStateOnClick,
      "aria-roledescription": ((_d = accessibilityAttributes == null ? void 0 : accessibilityAttributes.objectPageTopHeader) == null ? void 0 : _d.ariaRoledescription) ?? "Object Page header",
      className: classNames19.header,
      style: {
        gridAutoColumns: `min-content ${titleArea && image && headerCollapsed === true ? `calc(100% - 3rem - 1rem)` : "100%"}`
      },
      children: [(0, import_jsx_runtime173.jsx)("span", {
        className: classNames19.clickArea,
        onClick: onTitleClick,
        "data-component-name": "ObjectPageTitleAreaClickElement"
      }), titleArea && image && headerCollapsed === true && (0, import_jsx_runtime173.jsx)(CollapsedAvatar, {
        image,
        imageShapeCircle
      }), titleArea && (0, import_react51.cloneElement)(titleArea, {
        className: clsx((_e = titleArea == null ? void 0 : titleArea.props) == null ? void 0 : _e.className),
        onToggleHeaderContentVisibility: onTitleClick,
        "data-not-clickable": !!preserveHeaderStateOnClick,
        "data-header-content-visible": headerArea && headerCollapsed !== true,
        "data-is-snapped-rendered-outside": snappedHeaderInObjPage
      }), snappedHeaderInObjPage && (0, import_jsx_runtime173.jsx)("div", {
        className: classNames19.snappedContent,
        "data-component-name": "ATwithImageSnappedContentContainer",
        children: titleArea.props.snappedContent
      })]
    }), renderHeaderContentSection(), headerArea && titleArea && (0, import_jsx_runtime173.jsx)("div", {
      "data-component-name": "ObjectPageAnchorBar",
      ref: anchorBarRef,
      className: classNames19.anchorBar,
      style: {
        top: scrolledHeaderExpanded || headerPinned ? `${topHeaderHeight + (headerCollapsed === true ? 0 : headerContentHeight)}px` : `${topHeaderHeight}px`
      },
      children: (0, import_jsx_runtime173.jsx)(ObjectPageAnchorBar, {
        headerContentVisible: headerArea && headerCollapsed !== true,
        hidePinButton: !!hidePinButton,
        headerPinned,
        accessibilityAttributes,
        onToggleHeaderContentVisibility,
        setHeaderPinned,
        onHoverToggleButton,
        onPinButtonToggle
      })
    }), !placeholder && (0, import_jsx_runtime173.jsx)("div", {
      ref: tabContainerContainerRef,
      className: classNames19.tabContainer,
      "data-component-name": "ObjectPageTabContainer",
      style: {
        top: headerPinned || scrolledHeaderExpanded ? `${topHeaderHeight + (headerCollapsed === true ? 0 : headerContentHeight)}px` : `${topHeaderHeight}px`
      },
      children: (0, import_jsx_runtime173.jsx)(TabContainer3, {
        collapsed: true,
        onTabSelect: onTabItemSelect,
        "data-component-name": "ObjectPageTabContainer",
        className: classNames19.tabContainerComponent,
        children: childrenArray.map((section, index) => {
          var _a2, _b2;
          if (!(0, import_react51.isValidElement)(section) || !section.props) return null;
          const subTabs = safeGetChildrenArray(section.props.children).filter((subSection) => {
            var _a3;
            return (
              // @ts-expect-error: if the `ObjectPageSubSection` component is passed as children, the `displayName` is available. Otherwise, the default children should be rendered w/o additional logic.
              (0, import_react51.isValidElement)(subSection) && ((_a3 = subSection == null ? void 0 : subSection.type) == null ? void 0 : _a3.displayName) === "ObjectPageSubSection"
            );
          });
          return (0, import_jsx_runtime173.jsx)(Tab3, {
            "data-index": index,
            "data-section-id": section.props.id,
            text: section.props.titleText,
            selected: internalSelectedSectionId === ((_a2 = section.props) == null ? void 0 : _a2.id) || void 0,
            items: subTabs.map((item2) => {
              if (!(0, import_react51.isValidElement)(item2)) {
                return null;
              }
              return (0, import_jsx_runtime173.jsx)(Tab3, {
                "data-parent-id": section.props.id,
                "data-is-sub-tab": true,
                "data-section-id": item2.props.id,
                text: item2.props.titleText,
                selected: item2.props.id === selectedSubSectionId || void 0,
                "data-index": index,
                children: (0, import_jsx_runtime173.jsx)("span", {
                  style: {
                    display: "none"
                  }
                })
              }, item2.props.id);
            }),
            children: (0, import_jsx_runtime173.jsx)("span", {
              style: {
                display: "none"
              }
            })
          }, `Anchor-${(_b2 = section.props) == null ? void 0 : _b2.id}`);
        })
      })
    }), (0, import_jsx_runtime173.jsxs)("div", {
      "data-component-name": "ObjectPageContent",
      className: classNames19.content,
      ref: objectPageContentRef,
      children: [(0, import_jsx_runtime173.jsx)("div", {
        style: {
          height: headerCollapsed && !headerPinned ? `${headerContentHeight}px` : 0
        },
        "aria-hidden": true
      }), placeholder ? placeholder : sections, (0, import_jsx_runtime173.jsx)("div", {
        style: {
          height: `${sectionSpacer}px`
        },
        "aria-hidden": true
      })]
    }), footerArea && mode === ObjectPageMode.IconTabBar && !sectionSpacer && (0, import_jsx_runtime173.jsx)("div", {
      className: classNames19.footerSpacer,
      "data-component-name": "ObjectPageFooterSpacer",
      "aria-hidden": true
    }), footerArea && (0, import_jsx_runtime173.jsx)("footer", {
      className: classNames19.footer,
      "data-component-name": "ObjectPageFooter",
      children: footerArea
    })]
  });
});
ObjectPage.displayName = "ObjectPage";

// node_modules/@ui5/webcomponents-react/dist/components/ObjectPageSection/index.js
var import_react52 = __toESM(require_react(), 1);

// node_modules/@ui5/webcomponents-react/dist/components/ObjectPageSection/ObjectPageSection.module.css.js
var styleData20 = `@layer ui5-webcomponents-react{._section_16m7y_1 [data-component-name=ObjectPageSubSection]:not(:first-child){padding-block-start:.5rem}._headerContainer_16m7y_5{color:var(--sapGroup_TitleTextColor);font-family:var(--sapFontFamily);padding-block:.5rem}._titleContainer_16m7y_11{border-block-start:var(--_ui5wcr_ObjectPage_SectionBorderTop);box-sizing:border-box;height:2.25rem}._title_16m7y_11{color:var(--sapGroup_TitleTextColor);display:inline-block;font-family:var(--_ui5wcr_ObjectPage_SectionTitleFontFamily);font-size:var(--sapFontHeader4Size);height:var(--_ui5wcr_ObjectPage_SectionTitleHeight);line-height:var(--_ui5wcr_ObjectPage_SectionTitleLineHeight);max-width:100%;overflow:hidden;text-decoration:var(--_ui5wcr_ObjectPage_SectionTitleTextDecoration);text-overflow:ellipsis;white-space:nowrap}._uppercase_16m7y_31{text-transform:uppercase}._wrap_16m7y_35 ._titleContainer_16m7y_11{height:unset}._wrap_16m7y_35 ._title_16m7y_11{height:unset;line-height:normal;white-space:normal}._sectionContent_16m7y_46{height:100%;white-space:normal}._sectionContentInner_16m7y_51{box-sizing:border-box;font-family:var(--sapFontFamily);height:100%;padding-block:.5rem}}`;
var classNames20 = {
  "section": "_section_16m7y_1",
  "headerContainer": "_headerContainer_16m7y_5",
  "titleContainer": "_titleContainer_16m7y_11",
  "title": "_title_16m7y_11",
  "uppercase": "_uppercase_16m7y_31",
  "wrap": "_wrap_16m7y_35",
  "sectionContent": "_sectionContent_16m7y_46",
  "sectionContentInner": "_sectionContentInner_16m7y_51"
};

// node_modules/@ui5/webcomponents-react/dist/components/ObjectPageSection/index.js
var import_jsx_runtime174 = __toESM(require_jsx_runtime(), 1);
var ObjectPageSection = (0, import_react52.forwardRef)((props, ref) => {
  const {
    titleText,
    id,
    children,
    titleTextUppercase,
    className,
    style,
    hideTitleText,
    titleTextLevel = "H3",
    wrapTitleText,
    header: header3,
    ...rest
  } = props;
  useStylesheet(styleData20, ObjectPageSection.displayName);
  const htmlId = `ObjectPageSection-${id}`;
  const titleClasses = clsx(classNames20.title, titleTextUppercase && classNames20.uppercase);
  return (0, import_jsx_runtime174.jsxs)("section", {
    ref,
    role: "region",
    className: clsx(classNames20.section, wrapTitleText && classNames20.wrap, className),
    style,
    ...rest,
    id: htmlId,
    "data-component-name": "ObjectPageSection",
    children: [!!header3 && (0, import_jsx_runtime174.jsx)("div", {
      className: classNames20.headerContainer,
      children: header3
    }), !hideTitleText && (0, import_jsx_runtime174.jsx)("div", {
      role: "heading",
      "aria-level": parseInt(titleTextLevel.slice(1)),
      className: classNames20.titleContainer,
      "data-component-name": "ObjectPageSectionTitleText",
      children: (0, import_jsx_runtime174.jsx)("div", {
        className: titleClasses,
        children: titleText
      })
    }), (0, import_jsx_runtime174.jsx)("div", {
      className: classNames20.sectionContent,
      children: (0, import_jsx_runtime174.jsx)("div", {
        className: classNames20.sectionContentInner,
        "data-component-name": "ObjectPageSectionContent",
        children
      })
    })]
  });
});
ObjectPageSection.displayName = "ObjectPageSection";

// node_modules/@ui5/webcomponents-react/dist/components/ObjectPageSubSection/index.js
var import_react53 = __toESM(require_react(), 1);

// node_modules/@ui5/webcomponents-react/dist/components/ObjectPageSubSection/ObjectPageSubSection.module.css.js
var styleData21 = `@layer ui5-webcomponents-react{._objectPageSubSection_vhm0j_1:focus{outline:var(--sapContent_FocusWidth) var(--sapContent_FocusStyle) var(--sapContent_FocusColor);outline-offset:calc(var(--sapContent_FocusWidth)*-1)}._headerContainer_vhm0j_6{margin-block-end:.5rem}._headerContainer_vhm0j_6>:first-child{margin-inline:0 .25rem}._headerContainer_vhm0j_6>:last-child:not(:first-child){margin-inline:.25rem 0}._headerContainer_vhm0j_6>:not(:first-child):not(:last-child){margin-inline:.25rem}._subSectionTitle_vhm0j_20{color:var(--sapGroup_TitleTextColor);flex-grow:1;font-family:var(--sapFontHeaderFamily);font-size:var(--sapFontHeader5Size)}._subSectionContent_vhm0j_27{background-color:var(--_ui5wcr_ObjectPage_SubSectionBackgroundColor);border-radius:var(--_ui5wcr_ObjectPage_SubSectionBorderRadius);padding-block:1rem}._spacer_vhm0j_33{flex-grow:1}._uppercase_vhm0j_37{text-transform:uppercase}}`;
var classNames21 = {
  "objectPageSubSection": "_objectPageSubSection_vhm0j_1",
  "headerContainer": "_headerContainer_vhm0j_6",
  "subSectionTitle": "_subSectionTitle_vhm0j_20",
  "subSectionContent": "_subSectionContent_vhm0j_27",
  "spacer": "_spacer_vhm0j_33",
  "uppercase": "_uppercase_vhm0j_37"
};

// node_modules/@ui5/webcomponents-react/dist/components/ObjectPageSubSection/index.js
var import_jsx_runtime175 = __toESM(require_jsx_runtime(), 1);
var ObjectPageSubSection = (0, import_react53.forwardRef)((props, ref) => {
  const {
    children,
    id,
    titleText,
    className,
    style,
    actions: actions3,
    hideTitleText,
    titleTextLevel = "H4",
    titleTextUppercase,
    ...rest
  } = props;
  const htmlId = `ObjectPageSubSection-${id}`;
  useStylesheet(styleData21, ObjectPageSubSection.displayName);
  const subSectionClassName = clsx(classNames21.objectPageSubSection, className);
  return (0, import_jsx_runtime175.jsxs)("div", {
    ref,
    role: "region",
    style,
    tabIndex: -1,
    ...rest,
    className: subSectionClassName,
    id: htmlId,
    "data-component-name": "ObjectPageSubSection",
    children: [(0, import_jsx_runtime175.jsxs)(FlexBox, {
      direction: FlexBoxDirection.Row,
      justifyContent: FlexBoxJustifyContent.SpaceBetween,
      alignItems: FlexBoxAlignItems.Center,
      className: classNames21.headerContainer,
      "data-component-name": "ObjectPageSubSectionHeaderContainer",
      children: [!hideTitleText ? (0, import_jsx_runtime175.jsx)("div", {
        role: "heading",
        "aria-level": parseInt(titleTextLevel.slice(1)),
        className: clsx(classNames21.subSectionTitle, titleTextUppercase && classNames21.uppercase),
        "data-component-name": "ObjectPageSubSectionTitleText",
        children: titleText
      }) : (0, import_jsx_runtime175.jsx)("span", {
        "aria-hidden": "true",
        className: classNames21.spacer
      }), actions3 && actions3]
    }), (0, import_jsx_runtime175.jsx)("div", {
      className: classNames21.subSectionContent,
      "data-component-name": "ObjectPageSubSectionContent",
      children
    })]
  });
});
ObjectPageSubSection.displayName = "ObjectPageSubSection";

// node_modules/@ui5/webcomponents-react/dist/components/ObjectStatus/index.js
var import_react54 = __toESM(require_react(), 1);

// node_modules/@ui5/webcomponents-react/dist/components/ObjectStatus/ObjectStatus.module.css.js
var styleData22 = `@layer ui5-webcomponents-react{._normalizeCSS_176o8_1{all:unset}._objectStatus_176o8_5{display:inline-block;font-family:var(--sapFontFamily);font-size:var(--sapFontSize);font-weight:400;position:relative;text-shadow:var(--sapContent_TextShadow);vertical-align:top;width:fit-content}._icon_176o8_16{display:inline-block;height:1rem;line-height:1rem;padding-inline-end:.25rem;text-align:center;text-shadow:var(--sapContent_TextShadow);vertical-align:top;width:1rem}._icon_176o8_16[data-icon-only=true]{padding-inline-end:0}._text_176o8_31{display:inline-block;height:inherit;line-height:1rem;vertical-align:top}._emptyIndicator_176o8_38{color:var(--sapTextColor);line-height:normal}._pseudoInvisibleText_176o8_43{font-size:0;left:0;position:absolute;top:0;user-select:none}._positive_176o8_51{color:var(--sapPositiveTextColor)}._positive_176o8_51 [ui5-icon]{color:var(--sapPositiveElementColor)}._critical_176o8_59{color:var(--sapCriticalTextColor)}._critical_176o8_59 [ui5-icon]{color:var(--sapCriticalElementColor)}._negative_176o8_67{color:var(--sapNegativeTextColor)}._negative_176o8_67 [ui5-icon]{color:var(--sapNegativeElementColor)}._information_176o8_75{color:var(--sapInformativeTextColor)}._information_176o8_75 [ui5-icon]{color:var(--sapInformativeElementColor)}._none_176o8_83{color:var(--sapNeutralTextColor)}._none_176o8_83 [ui5-icon]{color:var(--sapNeutralElementColor)}._indication01_176o8_91{color:var(--sapIndicationColor_1)}._indication01_176o8_91 [ui5-icon]{color:var(--sapIndicationColor_1)}._indication02_176o8_99{color:var(--sapIndicationColor_2)}._indication02_176o8_99 [ui5-icon]{color:var(--sapIndicationColor_2)}._indication03_176o8_107{color:var(--sapIndicationColor_3)}._indication03_176o8_107 [ui5-icon]{color:var(--sapIndicationColor_3)}._indication04_176o8_115{color:var(--sapIndicationColor_4)}._indication04_176o8_115 [ui5-icon]{color:var(--sapIndicationColor_4)}._indication05_176o8_123{color:var(--sapIndicationColor_5)}._indication05_176o8_123 [ui5-icon]{color:var(--sapIndicationColor_5)}._indication06_176o8_131{color:var(--sapIndicationColor_6)}._indication06_176o8_131 [ui5-icon]{color:var(--sapIndicationColor_6)}._indication07_176o8_139{color:var(--sapIndicationColor_7)}._indication07_176o8_139 [ui5-icon]{color:var(--sapIndicationColor_7)}._indication08_176o8_147{color:var(--sapIndicationColor_8)}._indication08_176o8_147 [ui5-icon]{color:var(--sapIndicationColor_8)}._active_176o8_155{cursor:pointer}._active_176o8_155:not(._inverted_176o8_158) ._text_176o8_31{text-decoration:underline}:is(._active_176o8_155:not(._inverted_176o8_158):hover,._active_176o8_155:not(._inverted_176o8_158):active) ._text_176o8_31{text-decoration:none}._active_176o8_155:not(._inverted_176o8_158):focus{background:var(--sapContent_FocusColor);border-radius:.125rem;color:var(--sapContent_ContrastTextColor);outline:.125rem var(--sapContent_FocusColor);text-shadow:none}._active_176o8_155:not(._inverted_176o8_158):focus [ui5-icon]{color:var(--sapContent_ContrastTextColor)}._inverted_176o8_158{border-radius:var(--sapButton_BorderCornerRadius);font-family:var(--sapFontBoldFamily);font-size:var(--sapFontSmallSize);height:auto;min-height:1rem;min-width:1.375rem;padding:.1875rem .25rem}._inverted_176o8_158 ._icon_176o8_16{vertical-align:text-bottom}._inverted_176o8_158 ._icon_176o8_16:not([data-icon-only=true]),._inverted_176o8_158 [ui5-icon]{height:var(--sapFontSmallSize);width:var(--sapFontSmallSize)}._inverted_176o8_158[data-icon-only=true]{align-items:center;display:flex;height:1rem;justify-content:center;padding:.1875rem .313rem;width:1rem}._inverted_176o8_158[data-icon-only=true] [ui5-icon]{height:1rem;width:1rem}._inverted_176o8_158._active_176o8_155:focus{outline:var(--sapContent_FocusColor) var(--sapContent_FocusStyle) var(--sapContent_FocusWidth)}._large_176o8_222{font-family:var(--sapFontLightFamily);font-size:1.5rem}._large_176o8_222 ._icon_176o8_16,._large_176o8_222 [ui5-icon]{height:1.5rem;width:1.5rem}._large_176o8_222 ._icon_176o8_16{vertical-align:middle}._large_176o8_222 ._text_176o8_31{line-height:normal;vertical-align:middle}._large_176o8_222._inverted_176o8_158{font-family:var(--sapFontSemiboldDuplexFamily);font-size:1.25rem;padding:.125rem .25rem}._large_176o8_222._inverted_176o8_158 ._icon_176o8_16,._large_176o8_222._inverted_176o8_158 [ui5-icon]{height:1.25rem;width:1.25rem}._large_176o8_222._inverted_176o8_158[data-icon-only=true]{height:auto;min-width:1.75rem;padding:0 .25rem}._large_176o8_222._inverted_176o8_158 [data-icon-only=true]{height:1.5rem;width:1.5rem}:is(._large_176o8_222._inverted_176o8_158 [data-icon-only=true]) [ui5-icon]{height:1.5rem;width:1.5rem}._objectStatus_176o8_5:is(._inverted_176o8_158._negative_176o8_67){text-shadow:var(--sapContent_ContrastTextShadow);--_ui5wcr-ObjectStatus-inverted-vs-text-color:var(--sapButton_Negative_TextColor);--_ui5wcr-ObjectStatus-inverted-vs-background-color:var(--sapButton_Negative_Background);--_ui5wcr-ObjectStatus-inverted-vs-border-color:var(--sapButton_Negative_BorderColor);--_ui5wcr-ObjectStatus-inverted-vs-hover-text-color:var(--sapButton_Negative_Hover_TextColor);--_ui5wcr-ObjectStatus-inverted-vs-hover-background-color:var(--sapButton_Negative_Hover_Background);--_ui5wcr-ObjectStatus-inverted-vs-hover-border-color:var(--sapButton_Negative_Hover_BorderColor);--_ui5wcr-ObjectStatus-inverted-vs-active-text-color:var(--sapButton_Reject_Selected_TextColor);--_ui5wcr-ObjectStatus-inverted-vs-active-background-color:var(--sapButton_Negative_Active_Background);--_ui5wcr-ObjectStatus-inverted-vs-active-border-color:var(--sapButton_Negative_Active_BorderColor)}._objectStatus_176o8_5:is(._inverted_176o8_158._critical_176o8_59){text-shadow:var(--sapContent_ContrastTextShadow);--_ui5wcr-ObjectStatus-inverted-vs-text-color:var(--sapButton_Critical_TextColor);--_ui5wcr-ObjectStatus-inverted-vs-background-color:var(--sapButton_Critical_Background);--_ui5wcr-ObjectStatus-inverted-vs-border-color:var(--sapButton_Critical_BorderColor);--_ui5wcr-ObjectStatus-inverted-vs-hover-text-color:var(--sapButton_Critical_Hover_TextColor);--_ui5wcr-ObjectStatus-inverted-vs-hover-background-color:var(--sapButton_Critical_Hover_Background);--_ui5wcr-ObjectStatus-inverted-vs-hover-border-color:var(--sapButton_Critical_Hover_BorderColor);--_ui5wcr-ObjectStatus-inverted-vs-active-text-color:var(--sapButton_Attention_Selected_TextColor);--_ui5wcr-ObjectStatus-inverted-vs-active-background-color:var(--sapButton_Critical_Active_Background);--_ui5wcr-ObjectStatus-inverted-vs-active-border-color:var(--sapButton_Critical_Active_BorderColor)}._objectStatus_176o8_5:is(._inverted_176o8_158._positive_176o8_51){text-shadow:var(--sapContent_ContrastTextShadow);--_ui5wcr-ObjectStatus-inverted-vs-text-color:var(--sapButton_Success_TextColor);--_ui5wcr-ObjectStatus-inverted-vs-background-color:var(--sapButton_Success_Background);--_ui5wcr-ObjectStatus-inverted-vs-border-color:var(--sapButton_Success_BorderColor);--_ui5wcr-ObjectStatus-inverted-vs-hover-text-color:var(--sapButton_Success_Hover_TextColor);--_ui5wcr-ObjectStatus-inverted-vs-hover-background-color:var(--sapButton_Success_Hover_Background);--_ui5wcr-ObjectStatus-inverted-vs-hover-border-color:var(--sapButton_Success_Hover_BorderColor);--_ui5wcr-ObjectStatus-inverted-vs-active-text-color:var(--sapButton_Accept_Selected_TextColor);--_ui5wcr-ObjectStatus-inverted-vs-active-background-color:var(--sapButton_Success_Active_Background);--_ui5wcr-ObjectStatus-inverted-vs-active-border-color:var(--sapButton_Success_Active_BorderColor)}._objectStatus_176o8_5:is(._inverted_176o8_158._information_176o8_75){text-shadow:var(--sapContent_TextShadow);--_ui5wcr-ObjectStatus-inverted-vs-text-color:var(--sapButton_Information_TextColor);--_ui5wcr-ObjectStatus-inverted-vs-background-color:var(--sapButton_Information_Background);--_ui5wcr-ObjectStatus-inverted-vs-border-color:var(--sapButton_Information_BorderColor);--_ui5wcr-ObjectStatus-inverted-vs-hover-text-color:var(--sapButton_Information_Hover_TextColor);--_ui5wcr-ObjectStatus-inverted-vs-hover-background-color:var(--sapButton_Information_Hover_Background);--_ui5wcr-ObjectStatus-inverted-vs-hover-border-color:var(--sapButton_Information_Hover_BorderColor);--_ui5wcr-ObjectStatus-inverted-vs-active-text-color:var(--sapButton_Selected_TextColor);--_ui5wcr-ObjectStatus-inverted-vs-active-background-color:var(--sapButton_Information_Active_Background);--_ui5wcr-ObjectStatus-inverted-vs-active-border-color:var(--sapButton_Information_Active_BorderColor)}._objectStatus_176o8_5:is(._inverted_176o8_158._none_176o8_83){text-shadow:var(--sapContent_TextShadow);--_ui5wcr-ObjectStatus-inverted-vs-text-color:var(--sapTextColor);--_ui5wcr-ObjectStatus-inverted-vs-background-color:var(--sapNeutralBackground);--_ui5wcr-ObjectStatus-inverted-vs-border-color:var(--sapNeutralBorderColor);--_ui5wcr-ObjectStatus-inverted-vs-hover-text-color:var(--sapButton_Neutral_Hover_TextColor);--_ui5wcr-ObjectStatus-inverted-vs-hover-background-color:var(--sapButton_Neutral_Hover_Background);--_ui5wcr-ObjectStatus-inverted-vs-hover-border-color:var(--sapButton_Neutral_Hover_BorderColor);--_ui5wcr-ObjectStatus-inverted-vs-active-text-color:var(--sapButton_Active_TextColor);--_ui5wcr-ObjectStatus-inverted-vs-active-background-color:var(--sapButton_Neutral_Active_Background);--_ui5wcr-ObjectStatus-inverted-vs-active-border-color:var(--sapButton_Neutral_Active_BorderColor)}._objectStatus_176o8_5:is(._inverted_176o8_158):is(._negative_176o8_67,._critical_176o8_59,._positive_176o8_51,._information_176o8_75,._none_176o8_83){background:var(--_ui5wcr-ObjectStatus-inverted-vs-background-color);border:.0625rem solid var(--_ui5wcr-ObjectStatus-inverted-vs-border-color);color:var(--_ui5wcr-ObjectStatus-inverted-vs-text-color)}._objectStatus_176o8_5:is(._inverted_176o8_158):is(._negative_176o8_67,._critical_176o8_59,._positive_176o8_51,._information_176o8_75,._none_176o8_83) [ui5-icon]{color:var(--_ui5wcr-ObjectStatus-inverted-vs-text-color)}._objectStatus_176o8_5._active_176o8_155:is(._inverted_176o8_158):is(._negative_176o8_67,._critical_176o8_59,._positive_176o8_51,._information_176o8_75,._none_176o8_83):hover{background:var(--_ui5wcr-ObjectStatus-inverted-vs-hover-background-color);border:.0625rem solid var(--_ui5wcr-ObjectStatus-inverted-vs-hover-border-color);color:var(--_ui5wcr-ObjectStatus-inverted-vs-hover-text-color)}._objectStatus_176o8_5._active_176o8_155:is(._inverted_176o8_158):is(._negative_176o8_67,._critical_176o8_59,._positive_176o8_51,._information_176o8_75,._none_176o8_83):hover [ui5-icon]{color:var(--_ui5wcr-ObjectStatus-inverted-vs-hover-text-color)}._objectStatus_176o8_5._active_176o8_155:is(._inverted_176o8_158):is(._negative_176o8_67,._critical_176o8_59,._positive_176o8_51,._information_176o8_75,._none_176o8_83):active{background:var(--_ui5wcr-ObjectStatus-inverted-vs-active-background-color);border:.0625rem solid var(--_ui5wcr-ObjectStatus-inverted-vs-active-border-color);color:var(--_ui5wcr-ObjectStatus-inverted-vs-active-text-color);text-shadow:var(--sapContent_TextShadow)}._objectStatus_176o8_5._active_176o8_155:is(._inverted_176o8_158):is(._negative_176o8_67,._critical_176o8_59,._positive_176o8_51,._information_176o8_75,._none_176o8_83):active [ui5-icon]{color:var(--_ui5wcr-ObjectStatus-inverted-vs-active-text-color)}._objectStatus_176o8_5:is(._inverted_176o8_158._indication01_176o8_91){--_ui5wcr-ObjectStatus-inverted-indication-text-color:var(--sapIndicationColor_1_TextColor);--_ui5wcr-ObjectStatus-inverted-indication-background-color:var(--sapIndicationColor_1_Background);--_ui5wcr-ObjectStatus-inverted-indication-border-color:var(--sapIndicationColor_1_BorderColor);--_ui5wcr-ObjectStatus-inverted-indication-hover-background-color:var(--sapIndicationColor_1_Hover_Background);--_ui5wcr-ObjectStatus-inverted-indication-active-text-color:var(--sapIndicationColor_1_Active_TextColor);--_ui5wcr-ObjectStatus-inverted-indication-active-background-color:var(--sapIndicationColor_1_Active_Background);--_ui5wcr-ObjectStatus-inverted-indication-active-border-color:var(--sapIndicationColor_1_Active_BorderColor)}._objectStatus_176o8_5:is(._inverted_176o8_158._indication02_176o8_99){--_ui5wcr-ObjectStatus-inverted-indication-text-color:var(--sapIndicationColor_2_TextColor);--_ui5wcr-ObjectStatus-inverted-indication-background-color:var(--sapIndicationColor_2_Background);--_ui5wcr-ObjectStatus-inverted-indication-border-color:var(--sapIndicationColor_2_BorderColor);--_ui5wcr-ObjectStatus-inverted-indication-hover-background-color:var(--sapIndicationColor_2_Hover_Background);--_ui5wcr-ObjectStatus-inverted-indication-active-text-color:var(--sapIndicationColor_2_Active_TextColor);--_ui5wcr-ObjectStatus-inverted-indication-active-background-color:var(--sapIndicationColor_2_Active_Background);--_ui5wcr-ObjectStatus-inverted-indication-active-border-color:var(--sapIndicationColor_2_Active_BorderColor)}._objectStatus_176o8_5:is(._inverted_176o8_158._indication03_176o8_107){--_ui5wcr-ObjectStatus-inverted-indication-text-color:var(--sapIndicationColor_3_TextColor);--_ui5wcr-ObjectStatus-inverted-indication-background-color:var(--sapIndicationColor_3_Background);--_ui5wcr-ObjectStatus-inverted-indication-border-color:var(--sapIndicationColor_3_BorderColor);--_ui5wcr-ObjectStatus-inverted-indication-hover-background-color:var(--sapIndicationColor_3_Hover_Background);--_ui5wcr-ObjectStatus-inverted-indication-active-text-color:var(--sapIndicationColor_3_Active_TextColor);--_ui5wcr-ObjectStatus-inverted-indication-active-background-color:var(--sapIndicationColor_3_Active_Background);--_ui5wcr-ObjectStatus-inverted-indication-active-border-color:var(--sapIndicationColor_3_Active_BorderColor)}._objectStatus_176o8_5:is(._inverted_176o8_158._indication04_176o8_115){--_ui5wcr-ObjectStatus-inverted-indication-text-color:var(--sapIndicationColor_4_TextColor);--_ui5wcr-ObjectStatus-inverted-indication-background-color:var(--sapIndicationColor_4_Background);--_ui5wcr-ObjectStatus-inverted-indication-border-color:var(--sapIndicationColor_4_BorderColor);--_ui5wcr-ObjectStatus-inverted-indication-hover-background-color:var(--sapIndicationColor_4_Hover_Background);--_ui5wcr-ObjectStatus-inverted-indication-active-text-color:var(--sapIndicationColor_4_Active_TextColor);--_ui5wcr-ObjectStatus-inverted-indication-active-background-color:var(--sapIndicationColor_4_Active_Background);--_ui5wcr-ObjectStatus-inverted-indication-active-border-color:var(--sapIndicationColor_4_Active_BorderColor)}._objectStatus_176o8_5:is(._inverted_176o8_158._indication05_176o8_123){--_ui5wcr-ObjectStatus-inverted-indication-text-color:var(--sapIndicationColor_5_TextColor);--_ui5wcr-ObjectStatus-inverted-indication-background-color:var(--sapIndicationColor_5_Background);--_ui5wcr-ObjectStatus-inverted-indication-border-color:var(--sapIndicationColor_5_BorderColor);--_ui5wcr-ObjectStatus-inverted-indication-hover-background-color:var(--sapIndicationColor_5_Hover_Background);--_ui5wcr-ObjectStatus-inverted-indication-active-text-color:var(--sapIndicationColor_5_Active_TextColor);--_ui5wcr-ObjectStatus-inverted-indication-active-background-color:var(--sapIndicationColor_5_Active_Background);--_ui5wcr-ObjectStatus-inverted-indication-active-border-color:var(--sapIndicationColor_5_Active_BorderColor)}._objectStatus_176o8_5:is(._inverted_176o8_158._indication06_176o8_131){--_ui5wcr-ObjectStatus-inverted-indication-text-color:var(--sapIndicationColor_6_TextColor);--_ui5wcr-ObjectStatus-inverted-indication-background-color:var(--sapIndicationColor_6_Background);--_ui5wcr-ObjectStatus-inverted-indication-border-color:var(--sapIndicationColor_6_BorderColor);--_ui5wcr-ObjectStatus-inverted-indication-hover-background-color:var(--sapIndicationColor_6_Hover_Background);--_ui5wcr-ObjectStatus-inverted-indication-active-text-color:var(--sapIndicationColor_6_Active_TextColor);--_ui5wcr-ObjectStatus-inverted-indication-active-background-color:var(--sapIndicationColor_6_Active_Background);--_ui5wcr-ObjectStatus-inverted-indication-active-border-color:var(--sapIndicationColor_6_Active_BorderColor)}._objectStatus_176o8_5:is(._inverted_176o8_158._indication07_176o8_139){--_ui5wcr-ObjectStatus-inverted-indication-text-color:var(--sapIndicationColor_7_TextColor);--_ui5wcr-ObjectStatus-inverted-indication-background-color:var(--sapIndicationColor_7_Background);--_ui5wcr-ObjectStatus-inverted-indication-border-color:var(--sapIndicationColor_7_BorderColor);--_ui5wcr-ObjectStatus-inverted-indication-hover-background-color:var(--sapIndicationColor_7_Hover_Background);--_ui5wcr-ObjectStatus-inverted-indication-active-text-color:var(--sapIndicationColor_7_Active_TextColor);--_ui5wcr-ObjectStatus-inverted-indication-active-background-color:var(--sapIndicationColor_7_Active_Background);--_ui5wcr-ObjectStatus-inverted-indication-active-border-color:var(--sapIndicationColor_7_Active_BorderColor)}._objectStatus_176o8_5:is(._inverted_176o8_158._indication08_176o8_147){--_ui5wcr-ObjectStatus-inverted-indication-text-color:var(--sapIndicationColor_8_TextColor);--_ui5wcr-ObjectStatus-inverted-indication-background-color:var(--sapIndicationColor_8_Background);--_ui5wcr-ObjectStatus-inverted-indication-border-color:var(--sapIndicationColor_8_BorderColor);--_ui5wcr-ObjectStatus-inverted-indication-hover-background-color:var(--sapIndicationColor_8_Hover_Background);--_ui5wcr-ObjectStatus-inverted-indication-active-text-color:var(--sapIndicationColor_8_Active_TextColor);--_ui5wcr-ObjectStatus-inverted-indication-active-background-color:var(--sapIndicationColor_8_Active_Background);--_ui5wcr-ObjectStatus-inverted-indication-active-border-color:var(--sapIndicationColor_8_Active_BorderColor)}._objectStatus_176o8_5:is(._inverted_176o8_158):is(._indication01_176o8_91,._indication02_176o8_99,._indication03_176o8_107,._indication04_176o8_115,._indication05_176o8_123,._indication06_176o8_131,._indication07_176o8_139,._indication08_176o8_147){background-color:var(--_ui5wcr-ObjectStatus-inverted-indication-background-color);border:.0625rem solid var(--_ui5wcr-ObjectStatus-inverted-indication-border-color);color:var(--_ui5wcr-ObjectStatus-inverted-indication-text-color);text-shadow:var(--sapContent_ContrastTextShadow)}._objectStatus_176o8_5:is(._inverted_176o8_158):is(._indication01_176o8_91,._indication02_176o8_99,._indication03_176o8_107,._indication04_176o8_115,._indication05_176o8_123,._indication06_176o8_131,._indication07_176o8_139,._indication08_176o8_147) [ui5-icon]{color:var(--_ui5wcr-ObjectStatus-inverted-indication-text-color)}._objectStatus_176o8_5._active_176o8_155:is(._inverted_176o8_158):is(._indication01_176o8_91,._indication02_176o8_99,._indication03_176o8_107,._indication04_176o8_115,._indication05_176o8_123,._indication06_176o8_131,._indication07_176o8_139,._indication08_176o8_147):hover{background:var(--_ui5wcr-ObjectStatus-inverted-indication-hover-background-color)}._objectStatus_176o8_5._active_176o8_155:is(._inverted_176o8_158):is(._indication01_176o8_91,._indication02_176o8_99,._indication03_176o8_107,._indication04_176o8_115,._indication05_176o8_123,._indication06_176o8_131,._indication07_176o8_139,._indication08_176o8_147):active{background:var(--_ui5wcr-ObjectStatus-inverted-indication-active-background-color);border:.0625rem solid var(--_ui5wcr-ObjectStatus-inverted-indication-active-border-color);color:var(--_ui5wcr-ObjectStatus-inverted-indication-active-text-color);text-shadow:var(--sapContent_TextShadow)}._objectStatus_176o8_5._active_176o8_155:is(._inverted_176o8_158):is(._indication01_176o8_91,._indication02_176o8_99,._indication03_176o8_107,._indication04_176o8_115,._indication05_176o8_123,._indication06_176o8_131,._indication07_176o8_139,._indication08_176o8_147):active [ui5-icon]{color:var(--_ui5wcr-ObjectStatus-inverted-indication-active-text-color)}}`;
var classNames22 = {
  "normalizeCSS": "_normalizeCSS_176o8_1",
  "objectStatus": "_objectStatus_176o8_5",
  "icon": "_icon_176o8_16",
  "text": "_text_176o8_31",
  "emptyIndicator": "_emptyIndicator_176o8_38",
  "pseudoInvisibleText": "_pseudoInvisibleText_176o8_43",
  "positive": "_positive_176o8_51",
  "critical": "_critical_176o8_59",
  "negative": "_negative_176o8_67",
  "information": "_information_176o8_75",
  "none": "_none_176o8_83",
  "indication01": "_indication01_176o8_91",
  "indication02": "_indication02_176o8_99",
  "indication03": "_indication03_176o8_107",
  "indication04": "_indication04_176o8_115",
  "indication05": "_indication05_176o8_123",
  "indication06": "_indication06_176o8_131",
  "indication07": "_indication07_176o8_139",
  "indication08": "_indication08_176o8_147",
  "active": "_active_176o8_155",
  "inverted": "_inverted_176o8_158",
  "large": "_large_176o8_222"
};

// node_modules/@ui5/webcomponents-react/dist/components/ObjectStatus/index.js
var import_jsx_runtime176 = __toESM(require_jsx_runtime(), 1);
var getStateSpecifics = (state, showDefaultIcon, userIcon, stateAnnouncementText, i18nTexts) => {
  const {
    indicationColorText,
    errorStateText,
    warningStateText,
    informationStateText,
    successStateText
  } = i18nTexts;
  let icon = userIcon;
  const renderDefaultIcon = showDefaultIcon && !icon;
  let invisibleText = stateAnnouncementText;
  if (!invisibleText && state.startsWith("Indication")) {
    invisibleText = `${indicationColorText} ${state.substring(state.indexOf("0") + 1)}`;
  }
  if (!invisibleText || renderDefaultIcon) {
    switch (state) {
      case ValueState_default.Negative:
        if (renderDefaultIcon) {
          icon = (0, import_jsx_runtime176.jsx)(Icon, {
            name: error_default,
            "data-component-name": "ObjectStatusDefaultIcon",
            "aria-hidden": true
          });
        }
        if (!invisibleText) {
          invisibleText = errorStateText;
        }
        break;
      case ValueState_default.Positive:
        if (renderDefaultIcon) {
          icon = (0, import_jsx_runtime176.jsx)(Icon, {
            name: sys_enter_2_default,
            "data-component-name": "ObjectStatusDefaultIcon",
            "aria-hidden": true
          });
        }
        if (!invisibleText) {
          invisibleText = successStateText;
        }
        break;
      case ValueState_default.Critical:
        if (renderDefaultIcon) {
          icon = (0, import_jsx_runtime176.jsx)(Icon, {
            name: alert_default,
            "data-component-name": "ObjectStatusDefaultIcon",
            "aria-hidden": true
          });
        }
        if (!invisibleText) {
          invisibleText = warningStateText;
        }
        break;
      case ValueState_default.Information:
        if (renderDefaultIcon) {
          icon = (0, import_jsx_runtime176.jsx)(Icon, {
            name: information_default,
            "data-component-name": "ObjectStatusDefaultIcon",
            "aria-hidden": true
          });
        }
        if (!invisibleText) {
          invisibleText = informationStateText;
        }
        break;
    }
  }
  return [icon, invisibleText];
};
var ObjectStatus = (0, import_react54.forwardRef)((props, ref) => {
  const {
    state = ValueState_default.None,
    showDefaultIcon,
    children,
    icon,
    className,
    style,
    interactive,
    inverted,
    onClick,
    emptyIndicator,
    stateAnnouncementText,
    large,
    ...rest
  } = props;
  const i18nBundle = useI18nBundle("@ui5/webcomponents-react");
  const i18nBundleWc = useI18nBundle("@ui5/webcomponents");
  useStylesheet(styleData22, ObjectStatus.displayName);
  const indicationColorText = i18nBundle.getText(INDICATION_COLOR);
  const errorStateText = i18nBundleWc.getText(VALUE_STATE_ERROR);
  const warningStateText = i18nBundleWc.getText(VALUE_STATE_WARNING);
  const informationStateText = i18nBundleWc.getText(VALUE_STATE_INFORMATION);
  const successStateText = i18nBundleWc.getText(VALUE_STATE_SUCCESS);
  const [iconToRender, invisibleText] = getStateSpecifics(state, showDefaultIcon, icon, stateAnnouncementText, {
    indicationColorText,
    errorStateText,
    warningStateText,
    informationStateText,
    successStateText
  });
  const showEmptyIndicator = emptyIndicator && !children;
  const computedChildren = showEmptyIndicator ? (0, import_jsx_runtime176.jsx)("span", {
    "aria-hidden": showEmptyIndicator,
    "data-component-name": "ObjectStatusEmptyIndicator",
    className: classNames22.emptyIndicator,
    children: "–"
  }) : children;
  const objStatusClasses = clsx(classNames22.normalizeCSS, classNames22.objectStatus, classNames22[`${state}`.toLowerCase()], interactive && classNames22.active, inverted && !showEmptyIndicator && classNames22.inverted, large && classNames22.large, className);
  const TagName = interactive ? "button" : "div";
  return (0, import_jsx_runtime176.jsxs)(
    TagName,
    {
      ref,
      className: objStatusClasses,
      style,
      onClick: interactive ? onClick : void 0,
      tabIndex: interactive ? 0 : void 0,
      "data-icon-only": !children,
      role: interactive ? "button" : "group",
      ...rest,
      children: [(0, import_jsx_runtime176.jsx)("span", {
        className: classNames22.pseudoInvisibleText,
        "data-component-name": "ObjectStatusInvisibleDescriptionContainer",
        children: interactive ? i18nBundle.getText(ARIA_OBJ_STATUS_DESC) : i18nBundle.getText(ARIA_OBJ_STATUS_DESC_INACTIVE)
      }), iconToRender && (0, import_jsx_runtime176.jsx)("span", {
        className: classNames22.icon,
        "data-icon-only": !children,
        "data-component-name": "ObjectStatusIconContainer",
        children: iconToRender
      }), computedChildren && (0, import_jsx_runtime176.jsxs)("span", {
        className: classNames22.text,
        "data-component-name": "ObjectStatusTextContainer",
        children: [computedChildren, showEmptyIndicator && (0, import_jsx_runtime176.jsx)("span", {
          className: classNames22.pseudoInvisibleText,
          "data-component-name": "ObjectStatusInvisibleEmptyTextContainer",
          children: i18nBundle.getText(EMPTY_VALUE)
        })]
      }), !!invisibleText && (computedChildren || iconToRender) && (0, import_jsx_runtime176.jsx)("span", {
        className: classNames22.pseudoInvisibleText,
        "data-component-name": "ObjectStatusInvisibleTextContainer",
        children: invisibleText
      })]
    }
  );
});
ObjectStatus.displayName = "ObjectStatus";

// node_modules/@ui5/webcomponents-react/dist/components/ResponsiveGridLayout/index.js
var import_react55 = __toESM(require_react(), 1);

// node_modules/@ui5/webcomponents-react/dist/components/ResponsiveGridLayout/ResponsiveGridLayout.module.css.js
var styleData23 = `@layer ui5-webcomponents-react{._container_lhhv3_1{display:grid}@media (max-width:599px){._container_lhhv3_1{grid-template-columns:repeat(var(--_ui5wcr-rgl-columns-s),minmax(0,1fr))}._container_lhhv3_1>*{grid-column:span var(--_ui5wcr-rgl-column-span-s)}}@media (min-width:600px) and (max-width:1023px){._container_lhhv3_1{grid-template-columns:repeat(var(--_ui5wcr-rgl-columns-m),minmax(0,1fr))}._container_lhhv3_1>*{grid-column:span var(--_ui5wcr-rgl-column-span-m)}}@media (min-width:1024px) and (max-width:1439px){._container_lhhv3_1{grid-template-columns:repeat(var(--_ui5wcr-rgl-columns-l),minmax(0,1fr))}._container_lhhv3_1>*{grid-column:span var(--_ui5wcr-rgl-column-span-l)}}@media (min-width:1440px){._container_lhhv3_1{grid-template-columns:repeat(var(--_ui5wcr-rgl-columns-xl),minmax(0,1fr))}._container_lhhv3_1>*{grid-column:span var(--_ui5wcr-rgl-column-span-xl)}}}`;
var classNames23 = {
  "container": "_container_lhhv3_1"
};

// node_modules/@ui5/webcomponents-react/dist/components/ResponsiveGridLayout/index.js
var import_jsx_runtime177 = __toESM(require_jsx_runtime(), 1);
var ResponsiveGridLayout = (0, import_react55.forwardRef)((props, ref) => {
  const {
    children,
    columnGap = "0.5rem",
    rowGap = "0.5rem",
    columnsS = 4,
    columnsM = 8,
    columnsL = 12,
    columnsXL = 16,
    columnSpanS = 1,
    columnSpanM = 1,
    columnSpanL = 1,
    columnSpanXL = 1,
    style,
    className,
    ...rest
  } = props;
  useStylesheet(styleData23, ResponsiveGridLayout.displayName);
  const finalClassNames = clsx(classNames23.container, className);
  return (0, import_jsx_runtime177.jsx)("div", {
    ref,
    className: finalClassNames,
    style: {
      rowGap,
      columnGap,
      "--_ui5wcr-rgl-columns-s": columnsS,
      "--_ui5wcr-rgl-columns-m": columnsM,
      "--_ui5wcr-rgl-columns-l": columnsL,
      "--_ui5wcr-rgl-columns-xl": columnsXL,
      "--_ui5wcr-rgl-column-span-s": columnSpanS,
      "--_ui5wcr-rgl-column-span-m": columnSpanM,
      "--_ui5wcr-rgl-column-span-l": columnSpanL,
      "--_ui5wcr-rgl-column-span-xl": columnSpanXL,
      ...style
    },
    ...rest,
    children
  });
});
ResponsiveGridLayout.displayName = "ResponsiveGridLayout";

// node_modules/@ui5/webcomponents-react/dist/components/SelectDialog/index.js
var import_react56 = __toESM(require_react(), 1);

// node_modules/@ui5/webcomponents-react/dist/components/SelectDialog/SelectDialog.module.css.js
var styleData24 = `@layer ui5-webcomponents-react{._dialog_1gi2q_1::part(header){flex-direction:column;margin-block-end:0;padding-block-end:.25rem}._dialog_1gi2q_1::part(content){padding:0}._headerContent_1gi2q_13{align-items:center;display:grid;grid-template-areas:"titleStart titleCenter cancel" "input input input";grid-template-columns:fit-content(100px) minmax(0,1fr) fit-content(100px);grid-template-rows:var(--_ui5wcr-DialogHeaderHeight) var(--_ui5wcr-DialogSubHeaderHeight);width:100%}._title_1gi2q_24{font-family:var(--sapFontHeaderFamily);font-size:var(--sapFontLargeSize);grid-column-end:titleCenter;grid-column-start:titleStart;max-width:100%;overflow:hidden;text-overflow:ellipsis}._titleCenterAlign_1gi2q_34{grid-area:titleCenter;justify-self:center}._hiddenClearBtn_1gi2q_39{grid-area:titleStart;visibility:hidden}._clearBtn_1gi2q_44{grid-area:cancel;justify-self:end}._input_1gi2q_49{grid-area:input;width:100%}._footer_1gi2q_54{align-items:center;box-sizing:border-box;display:flex;justify-content:flex-end;width:100%}._footer_1gi2q_54>*{margin-inline-start:.5rem}._inputIcon_1gi2q_66{color:var(--sapContent_IconColor);cursor:pointer}._infoBar_1gi2q_71{background-color:var(--sapInfobar_NonInteractive_Background);border-block-end:.0625rem solid var(--sapGroup_TitleBorderColor);color:var(--sapList_TextColor);height:2rem;overflow:hidden;padding-inline-start:var(--_ui5wcr-CheckBoxPaddingInline);position:sticky;top:0;z-index:1}}`;
var classNames24 = {
  "dialog": "_dialog_1gi2q_1",
  "headerContent": "_headerContent_1gi2q_13",
  "title": "_title_1gi2q_24",
  "titleCenterAlign": "_titleCenterAlign_1gi2q_34",
  "hiddenClearBtn": "_hiddenClearBtn_1gi2q_39",
  "clearBtn": "_clearBtn_1gi2q_44",
  "input": "_input_1gi2q_49",
  "footer": "_footer_1gi2q_54",
  "inputIcon": "_inputIcon_1gi2q_66",
  "infoBar": "_infoBar_1gi2q_71"
};

// node_modules/@ui5/webcomponents-react/dist/components/SelectDialog/index.js
var import_jsx_runtime178 = __toESM(require_jsx_runtime(), 1);
var SelectDialog = (0, import_react56.forwardRef)((props, ref) => {
  const {
    open: open2,
    children,
    className,
    confirmButtonText,
    confirmButtonProps,
    growing,
    headerText,
    headerTextAlignCenter,
    listProps = {},
    selectionMode = ListSelectionMode_default.Single,
    numberOfSelectedItems,
    rememberSelections,
    showClearButton,
    onClose,
    onClear,
    onConfirm,
    onLoadMore,
    onSearch,
    onSearchInput,
    onSearchReset,
    onBeforeOpen,
    onBeforeClose,
    onOpen,
    onCancel,
    ...rest
  } = props;
  useStylesheet(styleData24, SelectDialog.displayName);
  const i18nBundle = useI18nBundle("@ui5/webcomponents-react");
  const [searchValue, setSearchValue] = (0, import_react56.useState)("");
  const [selectedItems, setSelectedItems] = (0, import_react56.useState)([]);
  const [listComponentRef, listRef] = useSyncRef(listProps.ref);
  const [internalOpen, setInternalOpen] = (0, import_react56.useState)(open2);
  (0, import_react56.useEffect)(() => {
    setInternalOpen(open2);
  }, [open2]);
  const handleBeforeOpen = (e) => {
    var _a, _b;
    const localSelectedItems = ((_a = listRef.current) == null ? void 0 : _a.getSelectedItems()) ?? [];
    if (typeof onBeforeOpen === "function") {
      onBeforeOpen(e);
    }
    if (selectionMode === ListSelectionMode_default.Multiple && ((_b = listRef.current) == null ? void 0 : _b.hasData)) {
      setSelectedItems(localSelectedItems);
    }
  };
  const handleAfterOpen = (e) => {
    var _a;
    if (typeof onOpen === "function") {
      onOpen(e);
    }
    (_a = listRef.current) == null ? void 0 : _a.focusFirstItem();
  };
  const handleSearchInput = (e) => {
    if (typeof onSearchInput === "function") {
      onSearchInput(enrichEventWithDetails(e, {
        value: e.target.value
      }));
    }
    setSearchValue(e.target.value);
  };
  const handleSearchSubmit = (e) => {
    if (typeof onSearch === "function") {
      if (e.type === "keyup" && e.code === "Enter") {
        onSearch(enrichEventWithDetails(e, {
          value: e.target.value
        }));
      }
      if (e.type === "click") {
        onSearch(enrichEventWithDetails(e, {
          value: searchValue
        }));
      }
    }
  };
  const handleResetSearch = (e) => {
    if (typeof onSearchReset === "function") {
      onSearchReset(enrichEventWithDetails(e, {
        prevValue: searchValue
      }));
    }
    setSearchValue("");
  };
  const handleSelectionChange = (e) => {
    if (typeof (listProps == null ? void 0 : listProps.onSelectionChange) === "function") {
      listProps.onSelectionChange(e);
    }
    if (selectionMode === ListSelectionMode_default.Multiple) {
      setSelectedItems(e.detail.selectedItems);
    } else {
      if (typeof onConfirm === "function") {
        onConfirm(e);
      }
      setInternalOpen(false);
    }
  };
  const handleClose = (e) => {
    setInternalOpen(false);
    if (typeof onCancel === "function") {
      onCancel(e);
    }
  };
  const handleClear = (e) => {
    var _a;
    if (typeof onClear === "function") {
      onClear(enrichEventWithDetails(e, {
        prevSelectedItems: selectedItems
      }));
    }
    setSelectedItems([]);
    (_a = listRef.current) == null ? void 0 : _a.deselectSelectedItems();
  };
  const handleConfirm = (e) => {
    if (typeof onConfirm === "function") {
      onConfirm(enrichEventWithDetails(e, {
        selectedItems
      }));
    }
    setInternalOpen(false);
  };
  const handleAfterClose = (e) => {
    var _a;
    setInternalOpen(false);
    if (typeof onClose === "function") {
      onClose(e);
    }
    if (typeof onSearchReset === "function") {
      onSearchReset(enrichEventWithDetails(e, {
        prevValue: searchValue
      }));
    }
    setSearchValue("");
    if (!rememberSelections) {
      (_a = listRef.current) == null ? void 0 : _a.deselectSelectedItems();
    }
  };
  const handleBeforeClose = (e) => {
    if (typeof onBeforeClose === "function") {
      onBeforeClose(e);
    }
    if (typeof onCancel === "function" && e.detail.escPressed) {
      onCancel(e);
    }
  };
  return (0, import_jsx_runtime178.jsxs)(Dialog, {
    ...rest,
    open: internalOpen,
    "data-component-name": "SelectDialog",
    ref,
    className: clsx(classNames24.dialog, className),
    onClose: handleAfterClose,
    onBeforeOpen: handleBeforeOpen,
    onOpen: handleAfterOpen,
    onBeforeClose: handleBeforeClose,
    children: [(0, import_jsx_runtime178.jsxs)("div", {
      className: classNames24.headerContent,
      slot: "header",
      children: [showClearButton && headerTextAlignCenter && (0, import_jsx_runtime178.jsx)(Button, {
        onClick: handleClear,
        design: ButtonDesign_default.Transparent,
        className: classNames24.hiddenClearBtn,
        tabIndex: -1,
        "aria-hidden": "true",
        children: i18nBundle.getText(CLEAR)
      }), (0, import_jsx_runtime178.jsx)(Title, {
        className: clsx(classNames24.title, headerTextAlignCenter && classNames24.titleCenterAlign),
        children: headerText
      }), showClearButton && (0, import_jsx_runtime178.jsx)(Button, {
        onClick: handleClear,
        design: ButtonDesign_default.Transparent,
        className: classNames24.clearBtn,
        children: i18nBundle.getText(CLEAR)
      }), (0, import_jsx_runtime178.jsx)(Input, {
        className: classNames24.input,
        accessibleName: i18nBundle.getText(SEARCH),
        value: searchValue,
        placeholder: i18nBundle.getText(SEARCH),
        onInput: handleSearchInput,
        onKeyUp: handleSearchSubmit,
        type: InputType_default.Search,
        icon: (0, import_jsx_runtime178.jsxs)(import_jsx_runtime178.Fragment, {
          children: [searchValue && (0, import_jsx_runtime178.jsx)(Icon, {
            accessibleName: i18nBundle.getText(RESET),
            title: i18nBundle.getText(RESET),
            name: decline_default,
            mode: IconMode_default.Interactive,
            onClick: handleResetSearch,
            className: classNames24.inputIcon
          }), (0, import_jsx_runtime178.jsx)(Icon, {
            mode: IconMode_default.Interactive,
            name: search_default,
            className: classNames24.inputIcon,
            onClick: handleSearchSubmit,
            accessibleName: i18nBundle.getText(SEARCH),
            title: i18nBundle.getText(SEARCH)
          })]
        })
      })]
    }), selectionMode === ListSelectionMode_default.Multiple && (!!selectedItems.length || numberOfSelectedItems > 0) && (0, import_jsx_runtime178.jsx)(FlexBox, {
      alignItems: FlexBoxAlignItems.Center,
      className: classNames24.infoBar,
      children: (0, import_jsx_runtime178.jsx)(Text3, {
        children: `${i18nBundle.getText(SELECTED)}: ${numberOfSelectedItems ?? selectedItems.length}`
      })
    }), (0, import_jsx_runtime178.jsx)(List, {
      ...listProps,
      ref: listComponentRef,
      growing,
      onLoadMore,
      selectionMode,
      onSelectionChange: handleSelectionChange,
      children
    }), (0, import_jsx_runtime178.jsxs)("div", {
      slot: "footer",
      className: classNames24.footer,
      children: [selectionMode === ListSelectionMode_default.Multiple && (0, import_jsx_runtime178.jsx)(Button, {
        ...confirmButtonProps,
        onClick: handleConfirm,
        design: ButtonDesign_default.Emphasized,
        children: confirmButtonText ?? i18nBundle.getText(SELECT)
      }), (0, import_jsx_runtime178.jsx)(Button, {
        onClick: handleClose,
        design: ButtonDesign_default.Transparent,
        children: i18nBundle.getText(CANCEL)
      })]
    })]
  });
});
SelectDialog.displayName = "SelectDialog";

// node_modules/@ui5/webcomponents-react/dist/components/SplitterElement/index.js
var import_react58 = __toESM(require_react(), 1);

// node_modules/@ui5/webcomponents-react/dist/internal/SplitterLayoutContext.js
var import_react57 = __toESM(require_react(), 1);
var SplitterLayoutContext = (0, import_react57.createContext)({
  vertical: true,
  reset: false
});

// node_modules/@ui5/webcomponents-react/dist/components/SplitterElement/SplitterElement.module.css.js
var styleData25 = `@layer ui5-webcomponents-react{._splitterElement_5jt3n_1{display:flex;min-height:0;min-width:0;overflow:hidden;position:relative;will-change:flex-basis}}`;
var classNames25 = {
  "splitterElement": "_splitterElement_5jt3n_1"
};

// node_modules/@ui5/webcomponents-react/dist/components/SplitterElement/index.js
var import_jsx_runtime179 = __toESM(require_jsx_runtime(), 1);
var SplitterElement = (0, import_react58.forwardRef)((props, ref) => {
  const {
    children,
    style,
    className,
    minSize = 0,
    size = "auto",
    resizable: _0,
    ...rest
  } = props;
  const [componentRef, splitterElementRef] = useSyncRef(ref);
  const {
    vertical,
    reset
  } = (0, import_react58.useContext)(SplitterLayoutContext);
  const safariStyles = Device_exports.isSafari() ? {
    width: "min-content",
    flex: "1 1 auto"
  } : {};
  const defaultFlexStyles = size !== "auto" ? {
    flex: `0 1 ${size}`
  } : {
    flex: "1 0 min-content",
    ...safariStyles
  };
  const [flexStyles, setFlexStyles] = (0, import_react58.useState)(defaultFlexStyles);
  const [flexBasisApplied, setFlexBasisApplied] = (0, import_react58.useState)(false);
  useStylesheet(styleData25, SplitterElement.displayName);
  (0, import_react58.useEffect)(() => {
    const elementObserver = new ResizeObserver(([element]) => {
      if (element.target.getBoundingClientRect().width !== 0 && !flexBasisApplied) {
        const resetSafariStyles = Device_exports.isSafari() ? {
          width: "unset"
        } : {};
        setFlexStyles({
          flex: `0 0 ${element.target.getBoundingClientRect()[vertical ? "height" : "width"]}px`,
          ...resetSafariStyles
        });
        setFlexBasisApplied(true);
      }
    });
    if (size === "auto" && splitterElementRef.current) {
      elementObserver.observe(splitterElementRef.current);
    } else {
      setFlexStyles({
        flex: `0 1 ${size}`
      });
    }
    return () => {
      elementObserver.disconnect();
    };
  }, [size, flexBasisApplied, vertical]);
  useIsomorphicLayoutEffect(() => {
    if (reset) {
      setFlexStyles(void 0);
      setFlexBasisApplied(false);
    }
  }, [reset, size]);
  useIsomorphicLayoutEffect(() => {
    if (flexStyles === void 0) {
      setFlexStyles(defaultFlexStyles);
    }
  }, [flexStyles]);
  return (0, import_jsx_runtime179.jsx)("div", {
    ref: componentRef,
    className: clsx(classNames25.splitterElement, className),
    style: {
      minHeight: vertical && minSize ? `${minSize}px` : void 0,
      minWidth: !vertical && minSize ? `${minSize}px` : void 0,
      ...flexStyles,
      ...style
    },
    ...rest,
    "data-min-size": minSize,
    children
  });
});
SplitterElement.displayName = "SplitterElement";

// node_modules/@ui5/webcomponents-react/dist/components/SplitterLayout/index.js
var import_react61 = __toESM(require_react(), 1);

// node_modules/@ui5/webcomponents-react/dist/components/SplitterLayout/SplitterLayout.module.css.js
var styleData26 = `@layer ui5-webcomponents-react{._splitterLayout_6n3m3_1{--_ui5wcr-SplitterSize:1rem;display:flex;overflow:hidden;position:relative}._splitterLayout_6n3m3_1[data-splitter-orientation=horizontal]{flex-direction:row;width:100%}._splitterLayout_6n3m3_1[data-splitter-orientation=horizontal]>*{height:100%}._splitterLayout_6n3m3_1[data-splitter-orientation=vertical]{flex-direction:column;height:100%}._splitterLayout_6n3m3_1[data-splitter-orientation=vertical]>*{width:100%}}`;
var classNames26 = {
  "splitterLayout": "_splitterLayout_6n3m3_1"
};

// node_modules/@ui5/webcomponents-react/dist/components/SplitterLayout/useConcatSplitterElements.js
var import_react60 = __toESM(require_react(), 1);

// node_modules/@ui5/webcomponents-icons/dist/v4/horizontal-grip.js
var name102 = "horizontal-grip";
var pathData99 = "M96 224v64H32v-64h64zm256 0v64h-64v-64h64zm-192 0h64v64h-64v-64zm320 0v64h-64v-64h64z";
var ltr99 = false;
var collection101 = "SAP-icons-v4";
var packageName99 = "@ui5/webcomponents-icons";
registerIcon(name102, { pathData: pathData99, ltr: ltr99, collection: collection101, packageName: packageName99 });

// node_modules/@ui5/webcomponents-icons/dist/v5/horizontal-grip.js
var name103 = "horizontal-grip";
var pathData100 = "M96 176q0 20-14 34t-34 14-34-14-14-34 14-34 34-14 34 14 14 34zm42 0q0-20 14-34t34-14 34 14 14 34-14 34-34 14-34-14-14-34zm140 0q0-20 14-34t34-14 34 14.5 14 33.5-14 33.5-34 14.5-34-14-14-34zm138 0q0-20 14-34t34-14 34 14 14 34-14 34-34 14-34-14-14-34zM0 336q0-20 14-34t34-14 34 14 14 34-14 34-34 14-34-14-14-34zm138 0q0-20 14-34t34-14 34 14 14 34-14 34-34 14-34-14-14-34zm140 0q0-20 14-34t34-14 34 14.5 14 33.5-14 33.5-34 14.5-34-14-14-34zm138 0q0-20 14-34t34-14 34 14 14 34-14 34-34 14-34-14-14-34z";
var ltr100 = false;
var collection102 = "SAP-icons-v5";
var packageName100 = "@ui5/webcomponents-icons";
registerIcon(name103, { pathData: pathData100, ltr: ltr100, collection: collection102, packageName: packageName100 });

// node_modules/@ui5/webcomponents-icons/dist/horizontal-grip.js
var horizontal_grip_default = "horizontal-grip";

// node_modules/@ui5/webcomponents-react/dist/components/Splitter/index.js
var import_react59 = __toESM(require_react(), 1);

// node_modules/@ui5/webcomponents-react/dist/components/Splitter/Splitter.module.css.js
var styleData27 = `@layer ui5-webcomponents-react{._splitter_ce1yt_1{align-items:center;background-color:var(--sapShell_Background);box-sizing:border-box;display:flex;justify-content:center;position:relative;touch-action:none;will-change:flex}._splitter_ce1yt_1[data-splitter-vertical]:focus{outline:var(--_ui5wcr_Splitter_BarOutline);outline-offset:-.2rem}._splitter_ce1yt_1[data-splitter-vertical=horizontal]{border-inline:var(--_ui5wcr_Splitter_BarBorderStyle);cursor:col-resize;flex-direction:column;height:100%;min-width:var(--_ui5wcr-SplitterSize);width:var(--_ui5wcr-SplitterSize)}._splitter_ce1yt_1[data-splitter-vertical=horizontal]:focus{border-block:var(--_ui5wcr_Splitter_BarBorderHighContrastFix);border-inline:var(--_ui5wcr_Splitter_BarBorderFocus)}._splitter_ce1yt_1[data-splitter-vertical=horizontal] ._lineAfter_ce1yt_30,._splitter_ce1yt_1[data-splitter-vertical=horizontal] ._lineBefore_ce1yt_29{background-size:.0625rem 100%;height:4rem;width:var(--_ui5wcr-SplitterSize)}._splitter_ce1yt_1[data-splitter-vertical=horizontal] ._lineBefore_ce1yt_29{background-image:linear-gradient(to top,var(--_ui5wcr_Splitter_ContentBorderColor),#0000)}._splitter_ce1yt_1[data-splitter-vertical=horizontal] ._icon_ce1yt_38{padding:.5rem 0}._splitter_ce1yt_1[data-splitter-vertical=horizontal] ._lineAfter_ce1yt_30{background-image:linear-gradient(to bottom,var(--_ui5wcr_Splitter_ContentBorderColor),#0000)}._splitter_ce1yt_1[data-splitter-vertical=horizontal] ._gripContainer_ce1yt_44{height:2rem;width:1.5rem}._splitter_ce1yt_1[data-splitter-vertical=horizontal] ._gripButton_ce1yt_48{height:1.625rem;min-width:1.5rem}._splitter_ce1yt_1[data-splitter-vertical=vertical]{border-block:var(--_ui5wcr_Splitter_BarBorderStyle);cursor:row-resize;flex-direction:row;height:var(--_ui5wcr-SplitterSize);min-height:var(--_ui5wcr-SplitterSize);width:100%}._splitter_ce1yt_1[data-splitter-vertical=vertical]:focus{border-block:var(--_ui5wcr_Splitter_BarBorderFocus);border-inline:var(--_ui5wcr_Splitter_BarBorderHighContrastFix)}._splitter_ce1yt_1[data-splitter-vertical=vertical] ._lineAfter_ce1yt_30,._splitter_ce1yt_1[data-splitter-vertical=vertical] ._lineBefore_ce1yt_29{background-size:100% .0625rem;height:var(--_ui5wcr-SplitterSize);width:5rem}._splitter_ce1yt_1[data-splitter-vertical=vertical] ._lineBefore_ce1yt_29{background-image:linear-gradient(to left,var(--_ui5wcr_Splitter_ContentBorderColor),#0000)}:is(._splitter_ce1yt_1[data-splitter-vertical=vertical] ._lineBefore_ce1yt_29):dir(rtl){background-image:linear-gradient(to right,var(--_ui5wcr_Splitter_ContentBorderColor),#0000)}._splitter_ce1yt_1[data-splitter-vertical=vertical] ._icon_ce1yt_38{padding:0 .5rem}._splitter_ce1yt_1[data-splitter-vertical=vertical] ._lineAfter_ce1yt_30{background-image:linear-gradient(to right,var(--_ui5wcr_Splitter_ContentBorderColor),#0000)}:is(._splitter_ce1yt_1[data-splitter-vertical=vertical] ._lineAfter_ce1yt_30):dir(rtl){background-image:linear-gradient(to left,var(--_ui5wcr_Splitter_ContentBorderColor),#0000)}._splitter_ce1yt_1[data-splitter-vertical=vertical] ._gripContainer_ce1yt_44{height:1.5rem;width:2rem}._splitter_ce1yt_1[data-splitter-vertical=vertical] ._gripButton_ce1yt_48{height:1.5rem;min-width:1.625rem}._splitter_ce1yt_1:hover ._lineAfter_ce1yt_30,._splitter_ce1yt_1:hover ._lineBefore_ce1yt_29{flex-grow:1;transition:all .1s ease-in}._gripContainer_ce1yt_44{align-items:center;display:flex;justify-content:center;z-index:1}._gripButton_ce1yt_48{cursor:inherit}._gripButton_ce1yt_48:active{z-index:2}._icon_ce1yt_38{box-sizing:initial;color:var(--_ui5wcr_Splitter_IconColor)}._lineAfter_ce1yt_30,._lineBefore_ce1yt_29{background-position:50%;background-repeat:no-repeat}}`;
var classNames27 = {
  "splitter": "_splitter_ce1yt_1",
  "lineBefore": "_lineBefore_ce1yt_29",
  "lineAfter": "_lineAfter_ce1yt_30",
  "icon": "_icon_ce1yt_38",
  "gripContainer": "_gripContainer_ce1yt_44",
  "gripButton": "_gripButton_ce1yt_48"
};

// node_modules/@ui5/webcomponents-react/dist/components/Splitter/index.js
var import_jsx_runtime180 = __toESM(require_jsx_runtime(), 1);
var verticalPositionInfo = {
  start: "top",
  startUppercase: "Top",
  end: "bottom",
  position: "Y",
  positionRect: "y",
  size: "height",
  min: "minHeight",
  offset: "offsetY"
};
var horizontalPositionInfo = {
  start: "left",
  startUppercase: "Left",
  end: "right",
  position: "X",
  positionRect: "x",
  size: "width",
  min: "minWidth",
  offset: "offsetX"
};
var Splitter = (0, import_react59.forwardRef)((props, ref) => {
  const {
    vertical
  } = props;
  const i18nBundle = useI18nBundle("@ui5/webcomponents-react");
  const [componentRef, localRef] = useSyncRef(ref);
  const isRtl = useIsRTL(localRef);
  const start = (0, import_react59.useRef)(null);
  useStylesheet(styleData27, Splitter.displayName);
  const previousSiblingSize = (0, import_react59.useRef)(null);
  const nextSiblingSize = (0, import_react59.useRef)(null);
  const previousElementEnd = (0, import_react59.useRef)(null);
  const nextElementStart = (0, import_react59.useRef)(null);
  const resizerClickOffset = (0, import_react59.useRef)(0);
  const positionKeys = vertical ? verticalPositionInfo : horizontalPositionInfo;
  const [isDragging, setIsDragging] = (0, import_react59.useState)(false);
  const [isSiblings, setIsSiblings] = (0, import_react59.useState)(["previousSibling", "nextSibling"]);
  const handleSplitterMove = (e) => {
    const offset = resizerClickOffset.current;
    const previousSibling = localRef.current[isSiblings[0]];
    const nextSibling = localRef.current[isSiblings[1]];
    const currentPosition = isDragging === "touch" ? e.touches[0][`client${positionKeys.position}`] : e[`client${positionKeys.position}`];
    const sizeDiv = currentPosition - start.current;
    const splitterWidth = localRef.current.getBoundingClientRect()[positionKeys.size];
    const moveLeft = sizeDiv < 0;
    const move = () => {
      previousSibling.style.flex = `0 0 ${previousSiblingSize.current + sizeDiv}px`;
      if (nextSibling.nextSibling && previousSiblingSize.current + sizeDiv > 0) {
        nextSibling.style.flex = `0 0 ${nextSiblingSize.current - sizeDiv}px`;
      }
    };
    if (previousSiblingSize.current + sizeDiv > 0 && currentPosition + (splitterWidth - offset) <= nextElementStart.current) {
      if (parseInt(previousSibling.dataset.minSize, 10) <= previousSiblingSize.current + sizeDiv && moveLeft) {
        move();
      }
      if (nextSiblingSize.current - sizeDiv >= parseInt(nextSibling.dataset.minSize, 10) && !moveLeft) {
        move();
      }
    }
    if (!nextSibling[isSiblings[1]] && !isRtl) {
      nextSibling.style.flex = "1 0 0px";
    }
  };
  const handleFallback = (e, touchEvent) => {
    var _a, _b, _c, _d;
    if (!localRef.current) {
      return;
    }
    const prevSibling = localRef.current[isSiblings[0]];
    const nextSibling = localRef.current[isSiblings[1]];
    const prevSiblingRect = localRef.current[isSiblings[0]].getBoundingClientRect();
    const nextSiblingRect = localRef.current[isSiblings[1]].getBoundingClientRect();
    const currentPos = touchEvent ? Math.round(e.changedTouches[0][`client${positionKeys.position}`]) : e[`client${positionKeys.position}`];
    if (!localRef.current.contains(e.target) && currentPos - localRef.current[`offset${positionKeys.startUppercase}`] + 1 < 0) {
      prevSibling.style.flex = "0 0 0px";
      if ((_a = prevSibling.style) == null ? void 0 : _a[positionKeys.min]) {
        nextSibling.style.flex = `0 0 ${(nextSiblingRect == null ? void 0 : nextSiblingRect[positionKeys.size]) + ((prevSiblingRect == null ? void 0 : prevSiblingRect[positionKeys.size]) - ((_b = prevSibling.style) == null ? void 0 : _b[positionKeys.min].replace("px", "")))}px`;
      } else {
        nextSibling.style.flex = `0 0 ${(nextSiblingRect == null ? void 0 : nextSiblingRect[positionKeys.size]) + (prevSiblingRect == null ? void 0 : prevSiblingRect[positionKeys.size])}px`;
      }
    }
    if (nextElementStart.current < currentPos) {
      nextSibling.style.flex = "0 0 0px";
      if ((_c = nextSibling.style) == null ? void 0 : _c[positionKeys.min]) {
        prevSibling.style.flex = `0 0 ${(prevSiblingRect == null ? void 0 : prevSiblingRect[positionKeys.size]) + ((nextSiblingRect == null ? void 0 : nextSiblingRect[positionKeys.size]) - ((_d = nextSibling.style) == null ? void 0 : _d[positionKeys.min].replace("px", "")))}px`;
      } else {
        prevSibling.style.flex = `0 0 ${(prevSiblingRect == null ? void 0 : prevSiblingRect[positionKeys.size]) + (nextSiblingRect == null ? void 0 : nextSiblingRect[positionKeys.size])}px`;
      }
    }
  };
  const handleMoveSplitterStart = (e) => {
    var _a, _b, _c, _d;
    if (e.type === "pointerdown" && e.pointerType !== "touch") {
      return;
    }
    e.currentTarget.focus();
    e.preventDefault();
    setIsDragging(e.pointerType ?? "mouse");
    resizerClickOffset.current = e.nativeEvent[positionKeys.offset];
    previousElementEnd.current = (_a = localRef.current[isSiblings[0]].getBoundingClientRect()) == null ? void 0 : _a[positionKeys.end];
    if (localRef.current[isSiblings[1]][isSiblings[1]]) {
      nextElementStart.current = (_b = localRef.current[isSiblings[1]][isSiblings[1]].getBoundingClientRect()) == null ? void 0 : _b[positionKeys.start];
    } else {
      nextElementStart.current = localRef.current.parentElement.getBoundingClientRect()[positionKeys.end];
    }
    previousSiblingSize.current = (_c = localRef.current[isSiblings[0]].getBoundingClientRect()) == null ? void 0 : _c[positionKeys.size];
    nextSiblingSize.current = (_d = localRef.current[isSiblings[1]].getBoundingClientRect()) == null ? void 0 : _d[positionKeys.size];
    start.current = e[`client${positionKeys.position}`];
  };
  const onHandleKeyDown = (e) => {
    var _a, _b, _c, _d;
    const keyEventProperties = e.code ?? e.key;
    if (keyEventProperties === "ArrowRight" || keyEventProperties === "ArrowLeft" || keyEventProperties === "ArrowUp" || keyEventProperties === "ArrowDown") {
      e.preventDefault();
      let firstSibling = localRef.current[isSiblings[0]];
      let secondSibling = localRef.current[isSiblings[1]];
      if (keyEventProperties === "ArrowLeft" || keyEventProperties === "ArrowUp") {
        secondSibling = localRef.current[isSiblings[0]];
        firstSibling = localRef.current[isSiblings[1]];
      }
      const remainingSize = secondSibling.style[positionKeys.min] ? ((_a = secondSibling.getBoundingClientRect()) == null ? void 0 : _a[positionKeys.size]) - Number(secondSibling.style[positionKeys.min].replace("px", "")) : (_b = secondSibling.getBoundingClientRect()) == null ? void 0 : _b[positionKeys.size];
      if (document.activeElement === localRef.current) {
        const tickSize = remainingSize >= 20 ? 20 : remainingSize;
        const firstSiblingSize = (_c = firstSibling.getBoundingClientRect()) == null ? void 0 : _c[positionKeys.size];
        const secondSiblingSize = (_d = secondSibling.getBoundingClientRect()) == null ? void 0 : _d[positionKeys.size];
        secondSibling.style.flex = `0 0 ${secondSiblingSize - tickSize}px`;
        firstSibling.style.flex = `0 0 ${firstSiblingSize + tickSize}px`;
      }
    }
  };
  const end = (e) => {
    handleFallback(e, isDragging === "touch");
    setIsDragging(false);
  };
  (0, import_react59.useEffect)(() => {
    const removeEventListeners = () => {
      if (isDragging === "touch") {
        document.removeEventListener("touchmove", handleSplitterMove);
        document.removeEventListener("touchend", end);
      } else {
        document.removeEventListener("mouseup", end);
        document.removeEventListener("mousemove", handleSplitterMove);
      }
    };
    if (isDragging) {
      if (isDragging === "touch") {
        document.addEventListener("touchmove", handleSplitterMove);
        document.addEventListener("touchend", end);
      } else {
        document.addEventListener("mousemove", handleSplitterMove);
        document.addEventListener("mouseup", end);
      }
    } else {
      removeEventListeners();
    }
    return () => {
      removeEventListeners();
    };
  }, [isDragging]);
  (0, import_react59.useEffect)(() => {
    setIsSiblings(isRtl && !vertical ? ["nextSibling", "previousSibling"] : ["previousSibling", "nextSibling"]);
  }, [isRtl, vertical]);
  const currentTheme = useCurrentTheme();
  const isHighContrast = currentTheme === "sap_fiori_3_hcb" || currentTheme === "sap_fiori_3_hcw" || currentTheme === "sap_horizon_hcb" || currentTheme === "sap_horizon_hcw";
  return (0, import_jsx_runtime180.jsxs)("div", {
    className: classNames27.splitter,
    tabIndex: 0,
    onKeyDown: onHandleKeyDown,
    onPointerDown: handleMoveSplitterStart,
    onMouseDown: handleMoveSplitterStart,
    ref: componentRef,
    role: "separator",
    "data-splitter-vertical": vertical ? "vertical" : "horizontal",
    title: i18nBundle.getText(PRESS_ARROW_KEYS_TO_MOVE),
    "aria-orientation": vertical ? "vertical" : "horizontal",
    "aria-label": i18nBundle.getText(PRESS_ARROW_KEYS_TO_MOVE),
    children: [(0, import_jsx_runtime180.jsx)("div", {
      className: classNames27.lineBefore
    }), (0, import_jsx_runtime180.jsx)("div", {
      className: classNames27.gripContainer,
      children: isHighContrast ? (0, import_jsx_runtime180.jsx)(Button, {
        className: classNames27.gripButton,
        tabIndex: -1,
        icon: vertical ? horizontal_grip_default : vertical_grip_default,
        design: ButtonDesign_default.Transparent,
        "data-component-name": "SplitterLayoutSplitterGrip"
      }) : (0, import_jsx_runtime180.jsx)(Icon, {
        className: classNames27.icon,
        name: vertical ? horizontal_grip_default : vertical_grip_default,
        "data-component-name": "SplitterLayoutSplitterGrip"
      })
    }), (0, import_jsx_runtime180.jsx)("div", {
      className: classNames27.lineAfter
    })]
  });
});
Splitter.displayName = "Splitter";

// node_modules/@ui5/webcomponents-react/dist/components/SplitterLayout/useConcatSplitterElements.js
var import_jsx_runtime181 = __toESM(require_jsx_runtime(), 1);
var useConcatSplitterElements = (concatSplitterElements) => {
  return (0, import_react60.useMemo)(() => {
    if ((0, import_react60.isValidElement)(concatSplitterElements == null ? void 0 : concatSplitterElements.children)) {
      return concatSplitterElements == null ? void 0 : concatSplitterElements.children;
    }
    const childrenArray = import_react60.Children.toArray(concatSplitterElements == null ? void 0 : concatSplitterElements.children).filter(import_react60.isValidElement);
    let splitterCount = 0;
    const indicesWithSplitter = [];
    childrenArray.forEach((child, index) => {
      const splitterElementChild = childrenArray[index + splitterCount];
      const splitterElementChildMinSize = Object.prototype.hasOwnProperty.call(splitterElementChild.props, "minSize") ? splitterElementChild.props.minSize : 0;
      if (childrenArray.length - splitterCount - 1 > index && (splitterElementChild.props.resizable || splitterElementChild.props.resizable === void 0) && splitterElementChildMinSize !== void 0) {
        childrenArray.splice(index + splitterCount + 1, 0, (0, import_jsx_runtime181.jsx)(Splitter, {
          height: concatSplitterElements == null ? void 0 : concatSplitterElements.height,
          width: concatSplitterElements == null ? void 0 : concatSplitterElements.width,
          vertical: concatSplitterElements == null ? void 0 : concatSplitterElements.vertical
        }, `splitter${index}`));
        indicesWithSplitter.push(index + 1 + splitterCount - 1);
        ++splitterCount;
      } else if (index > 0 && (splitterElementChild == null ? void 0 : splitterElementChild.props.resizable) === false) {
        const indexOfSplitter = childrenArray.findIndex((element) => element === splitterElementChild) - 1;
        if (childrenArray[indexOfSplitter].props.minSize === void 0) {
          childrenArray.splice(indexOfSplitter, 1);
        }
        indicesWithSplitter.pop();
        --splitterCount;
      }
    });
    indicesWithSplitter.forEach((index) => {
      var _a, _b;
      const size = (_b = (_a = childrenArray[index]) == null ? void 0 : _a.props) == null ? void 0 : _b.size;
      if (size && size !== "auto") {
        childrenArray[index] = (0, import_react60.cloneElement)(childrenArray[index], {
          size: `calc(${size} - var(--_ui5wcr-SplitterSize))`
        });
      }
    });
    return childrenArray;
  }, [concatSplitterElements]);
};

// node_modules/@ui5/webcomponents-react/dist/components/SplitterLayout/index.js
var import_jsx_runtime182 = __toESM(require_jsx_runtime(), 1);
var SplitterLayout = (0, import_react61.forwardRef)((props, ref) => {
  const {
    vertical,
    children,
    title: title4,
    style,
    className,
    options,
    ...rest
  } = props;
  const [componentRef, sLRef] = useSyncRef(ref);
  const [reset, setReset] = (0, import_react61.useState)(void 0);
  const prevSize = (0, import_react61.useRef)({
    width: void 0,
    height: void 0
  });
  const initialChildren = (0, import_react61.useRef)(true);
  const initialCustomDep = (0, import_react61.useRef)(true);
  const layoutElements = useConcatSplitterElements({
    children: children ?? [],
    width: style == null ? void 0 : style.width,
    height: style == null ? void 0 : style.height,
    vertical
  });
  useStylesheet(styleData26, SplitterLayout.displayName);
  (0, import_react61.useEffect)(() => {
    if (!initialChildren.current && (options == null ? void 0 : options.resetOnChildrenChange)) {
      setReset(true);
    }
    initialChildren.current = false;
  }, [children, options == null ? void 0 : options.resetOnChildrenChange]);
  (0, import_react61.useEffect)(() => {
    if (!initialCustomDep.current) {
      setReset(true);
    }
    initialCustomDep.current = false;
  }, (options == null ? void 0 : options.resetOnCustomDepsChange) ?? []);
  (0, import_react61.useEffect)(() => {
    if (options == null ? void 0 : options.resetOnSizeChange) {
      const layoutObserver = new ResizeObserver(debounce(([container]) => {
        const containerRect = container.target.getBoundingClientRect();
        if (!vertical && containerRect.width !== prevSize.current.width) {
          prevSize.current.width = containerRect.width;
          setReset(true);
        } else if (vertical && containerRect.height !== prevSize.current.height) {
          prevSize.current.height = containerRect.height;
          setReset(true);
        }
      }, 60));
      layoutObserver.observe(sLRef.current);
      return () => {
        layoutObserver.disconnect();
      };
    }
  }, [vertical, options == null ? void 0 : options.resetOnSizeChange]);
  (0, import_react61.useEffect)(() => {
    if (reset) {
      setReset(false);
    }
  }, [reset]);
  return (0, import_jsx_runtime182.jsx)(SplitterLayoutContext.Provider, {
    value: {
      vertical,
      reset
    },
    children: (0, import_jsx_runtime182.jsx)("div", {
      style: {
        flexDirection: vertical ? "column" : "row",
        ...style
      },
      title: title4,
      ...rest,
      className: clsx(classNames26.splitterLayout, className),
      ref: componentRef,
      "data-splitter-vertical": vertical,
      children: layoutElements
    })
  });
});
SplitterLayout.displayName = "SplitterLayout";

// node_modules/@ui5/webcomponents-react/dist/components/ThemeProvider/index.js
var import_react62 = __toESM(require_react(), 1);

// node_modules/@ui5/webcomponents-react/dist/components/ThemeProvider/ThemeProvider.css.js
var styleData28 = `@layer ui5-webcomponents-react{:root{--_ui5wcr-AnalyticalTableExpandButtonHeight:2.25rem;--_ui5wcr-AnalyticalTableExpandIconHeight:1rem;--_ui5wcr-AnalyticalTableExpandIndicatorWidth:1.875rem;--_ui5wcr-AnalyticalTableHeaderRowHeight:44px;--_ui5wcr-AnalyticalTableRowHeight:44px;--_ui5wcr-AnalyticalTableSelectionColumnWidth:44px;--_ui5wcr-AnalyticalTableTreePaddingLevel1:1rem;--_ui5wcr-AnalyticalTableTreePaddingLevel2:1.5rem;--_ui5wcr-AnalyticalTableTreePaddingLevel3:2rem;--_ui5wcr-BarHeight:2.75rem;--_ui5wcr-ButtonTopBottomPadding:0.25rem 0;--_ui5wcr-CheckBoxPaddingInline:0.6875rem;--_ui5wcr-CheckBoxWidthHeight:2.75rem;--_ui5wcr-DialogHeaderHeight:2.75rem;--_ui5wcr-DialogSubHeaderHeight:3rem;--_ui5wcr-ElementHeight:var(--sapElement_Height);--_ui5wcr-FormGroupTitleHeight:2.75rem;--_ui5wcr-MessageItemTitleFontSize:var(--sapFontHeader5Size);--_ui5wcr-MessageViewListItemHeightByLine:3.325rem;--_ui5wcr-MessageViewListItemHeightSingle:2.75rem;--_ui5wcr-SplitterSize:1rem;--_ui5wcr-ToolbarHeight:2.75rem;--_ui5wcr-ToolbarPopoverContentPadding:0.25rem 0.5rem;--_ui5wcr-ToolbarSeparatorHeight:2rem}.sapUiSizeCompact,.ui5-content-density-compact,[data-ui5-compact-size]{--_ui5wcr-AnalyticalTableExpandButtonHeight:1.5rem;--_ui5wcr-AnalyticalTableExpandIconHeight:0.75rem;--_ui5wcr-AnalyticalTableExpandIndicatorWidth:1.625rem;--_ui5wcr-AnalyticalTableHeaderRowHeight:32px;--_ui5wcr-AnalyticalTableRowHeight:32px;--_ui5wcr-AnalyticalTableSelectionColumnWidth:32px;--_ui5wcr-AnalyticalTableTreePaddingLevel1:1.5rem;--_ui5wcr-AnalyticalTableTreePaddingLevel2:2.25rem;--_ui5wcr-AnalyticalTableTreePaddingLevel3:2.75rem;--_ui5wcr-BarHeight:2.5rem;--_ui5wcr-ButtonTopBottomPadding:0.1875rem 0;--_ui5wcr-CheckBoxPaddingInline:0.5rem;--_ui5wcr-CheckBoxWidthHeight:2rem;--_ui5wcr-DialogHeaderHeight:2.5rem;--_ui5wcr-DialogSubHeaderHeight:2.25rem;--_ui5wcr-ElementHeight:var(--sapElement_Compact_Height);--_ui5wcr-FormGroupTitleHeight:2rem;--_ui5wcr-MessageItemTitleFontSize:var(--sapFontHeader6Size);--_ui5wcr-MessageViewListItemHeightByLine:3.25rem;--_ui5wcr-MessageViewListItemHeightSingle:2rem;--_ui5wcr-ToolbarHeight:2rem;--_ui5wcr-ToolbarPopoverContentPadding:0.1875rem 0.375rem;--_ui5wcr-ToolbarSeparatorHeight:1.5rem}:root{--_ui5wcr_Scrollbar_Border:none;--_ui5wcr_Splitter_IconColor:var(--sapButton_Lite_TextColor);--_ui5wcr_Splitter_BarOutline:none;--_ui5wcr_Toolbar_FocusShadow:none;--_ui5wcr_Toolbar_FocusOutline:var(--sapContent_FocusWidth) var(--sapContent_FocusStyle) var(--sapContent_FocusColor);--_ui5wcr_Scrollbar_BorderRadius:var(--sapElement_BorderCornerRadius);--_ui5wcr_Splitter_BarBorderFocus:var(--sapContent_FocusWidth) solid var(--sapContent_FocusColor);--_ui5wcr_Splitter_BarBorderStyle:none;--_ui5wcr_ActionSheet_HeaderBoxShadow:none;--_ui5wcr_ObjectPage_SectionBorderTop:0.0625rem solid var(--sapGroup_TitleBorderColor);--_ui5wcr_Splitter_ContentBorderColor:var(--sapHighlightColor);--_ui5wcr_ObjectPage_PaddingBlockStart:2rem;--_ui5wcr_ObjectPage_SectionTitleHeight:2.25rem;--_ui5wcr-AnalyticalTable-OuterCellBorder:1px solid var(--sapList_BorderColor);--_ui5wcr-AnalyticalTable-HeaderFontFamily:var(--sapFontFamily);--_ui5wcr-AnalyticalTable-OuterBorderBlock:1px solid var(--sapList_BorderColor);--_ui5wcr-AnalyticalTable-HeaderBorderWidth:0.0625rem;--_ui5wcr-AnalyticalTable-OuterBorderInline:1px solid var(--sapList_BorderColor);--_ui5wcr_ActionSheet_MobileHeaderBoxShadow:none;--_ui5wcr_ActionSheet_MobileHeaderTextColor:var(--sapContent_ContrastTextColor);--_ui5wcr_ObjectPage_SectionTitleFontFamily:var(--sapFontFamily);--_ui5wcr_ObjectPage_SectionTitleLineHeight:2.25rem;--_ui5wcr_ObjectPage_SubSectionBorderRadius:0;--_ui5wcr_Splitter_BarBorderHighContrastFix:var(--sapContent_FocusWidth) solid var(--sapContent_FocusColor);--_ui5wcr_ActionSheet_MobileHeaderBackground:#0000;--_ui5wcr_ActionSheet_MobileHeaderBorderRadius:0;--_ui5wcr_ObjectPage_SubSectionBackgroundColor:#0000;--_ui5wcr-AnalyticalTable-HeaderActiveTextColor:var(--sapList_HeaderTextColor);--_ui5wcr_ObjectPage_SectionTitleTextDecoration:none;--_ui5wcr_Form_HeaderBorderWidth:var(--sapList_BorderWidth)}[data-sap-theme=sap_belize]{--_ui5wcr_ActionSheet_BoxShadow:var(--sapContent_HeaderShadow);--_ui5wcr_Scrollbar_BorderRadius:0;--_ui5wcr_Splitter_BarBorderFocus:.0625rem dotted var(--sapContent_FocusColor);--_ui5wcr_ActionSheet_TopBorderRadius:var(--sapElement_BorderCornerRadius);--_ui5wcr_Splitter_BarBorderHighContrastFix:.0625rem dotted var(--sapContent_FocusColor)}[data-sap-theme=sap_belize_hcb]{--_ui5wcr_Scrollbar_Border:0.0625rem solid #999;--_ui5wcr_ActionSheet_BoxShadow:var(--sapContent_HeaderShadow);--_ui5wcr_Scrollbar_BorderRadius:0;--_ui5wcr_ActionSheet_TopBorderRadius:var(--sapElement_BorderCornerRadius)}[data-sap-theme=sap_belize_hcw]{--_ui5wcr_Scrollbar_Border:0.0625rem solid #585858;--_ui5wcr_ActionSheet_BoxShadow:var(--sapContent_HeaderShadow);--_ui5wcr_Scrollbar_BorderRadius:0;--_ui5wcr_ActionSheet_TopBorderRadius:var(--sapElement_BorderCornerRadius)}[data-sap-theme=sap_fiori_3]{--_ui5wcr_ActionSheet_BoxShadow:var(--sapContent_HeaderShadow);--_ui5wcr_Splitter_BarBorderFocus:.0625rem dotted var(--sapContent_FocusColor);--_ui5wcr_ActionSheet_TopBorderRadius:var(--sapElement_BorderCornerRadius);--_ui5wcr_Splitter_BarBorderHighContrastFix:.0625rem dotted var(--sapContent_FocusColor)}[data-sap-theme=sap_fiori_3_dark]{--_ui5wcr_ActionSheet_BoxShadow:var(--sapContent_HeaderShadow);--_ui5wcr_Splitter_BarBorderFocus:.0625rem dotted var(--sapContent_FocusColor);--_ui5wcr_ActionSheet_TopBorderRadius:var(--sapElement_BorderCornerRadius);--_ui5wcr_Splitter_BarBorderHighContrastFix:.0625rem dotted var(--sapContent_FocusColor)}[data-sap-theme=sap_fiori_3_hcb]{--_ui5wcr_Splitter_BarOutline:0.15rem dotted var(--sapGroup_ContentBorderColor);--_ui5wcr_ActionSheet_BoxShadow:var(--sapContent_HeaderShadow);--_ui5wcr_Splitter_BarBorderFocus:solid var(--sapGroup_ContentBorderColor) 0.0625rem;--_ui5wcr_Splitter_BarBorderStyle:solid var(--sapGroup_ContentBorderColor) 0.0625rem;--_ui5wcr_ActionSheet_TopBorderRadius:var(--sapElement_BorderCornerRadius);--_ui5wcr_Splitter_ContentBorderColor:var(--sapGroup_ContentBorderColor);--_ui5wcr_Splitter_BarBorderHighContrastFix:none;--_ui5wcr_Form_HeaderBorderWidth:calc(var(--sapList_BorderWidth)*3)}[data-sap-theme=sap_fiori_3_hcw]{--_ui5wcr_Splitter_BarOutline:0.15rem dotted var(--sapGroup_ContentBorderColor);--_ui5wcr_ActionSheet_BoxShadow:var(--sapContent_HeaderShadow);--_ui5wcr_Splitter_BarBorderFocus:solid var(--sapGroup_ContentBorderColor) 0.0625rem;--_ui5wcr_Splitter_BarBorderStyle:solid var(--sapGroup_ContentBorderColor) 0.0625rem;--_ui5wcr_ActionSheet_TopBorderRadius:var(--sapElement_BorderCornerRadius);--_ui5wcr_Splitter_ContentBorderColor:var(--sapGroup_ContentBorderColor);--_ui5wcr_Splitter_BarBorderHighContrastFix:none;--_ui5wcr_Form_HeaderBorderWidth:calc(var(--sapList_BorderWidth)*3)}[data-sap-theme=sap_horizon]{--_ui5wcr_Toolbar_FocusShadow:inset 0 0 0 0.125rem var(--sapContent_FocusColor);--_ui5wcr_Toolbar_FocusOutline:none;--_ui5wcr_ActionSheet_HeaderBoxShadow:var(--sapContent_HeaderShadow);--_ui5wcr_ObjectPage_SectionBorderTop:none;--_ui5wcr_Splitter_ContentBorderColor:var(--sapGroup_ContentBorderColor);--_ui5wcr_ObjectPage_PaddingBlockStart:0.5rem;--_ui5wcr_ObjectPage_SectionTitleHeight:2.75rem;--_ui5wcr-AnalyticalTable-OuterCellBorder:1px solid #0000;--_ui5wcr-AnalyticalTable-HeaderFontFamily:var(--sapFontBoldFamily);--_ui5wcr-AnalyticalTable-OuterBorderBlock:none;--_ui5wcr-AnalyticalTable-OuterBorderInline:none;--_ui5wcr_ActionSheet_MobileHeaderBoxShadow:var(--sapContent_Shadow2);--_ui5wcr_ActionSheet_MobileHeaderTextColor:var(--sapPageHeader_TextColor);--_ui5wcr_ObjectPage_SectionTitleFontFamily:var(--sapFontBoldFamily);--_ui5wcr_ObjectPage_SectionTitleLineHeight:4rem;--_ui5wcr_ObjectPage_SubSectionBorderRadius:var(--sapElement_BorderCornerRadius);--_ui5wcr_ActionSheet_MobileHeaderBackground:var(--sapPageHeader_Background);--_ui5wcr_ActionSheet_MobileHeaderBorderRadius:var(--sapPopover_BorderCornerRadius);--_ui5wcr_ObjectPage_SubSectionBackgroundColor:var(--sapGroup_ContentBackground)}[data-sap-theme=sap_horizon_dark]{--_ui5wcr_Toolbar_FocusShadow:inset 0 0 0 0.125rem var(--sapContent_FocusColor);--_ui5wcr_Toolbar_FocusOutline:none;--_ui5wcr_ActionSheet_HeaderBoxShadow:var(--sapContent_HeaderShadow);--_ui5wcr_ObjectPage_SectionBorderTop:none;--_ui5wcr_Splitter_ContentBorderColor:var(--sapGroup_ContentBorderColor);--_ui5wcr_ObjectPage_PaddingBlockStart:0.5rem;--_ui5wcr_ObjectPage_SectionTitleHeight:2.75rem;--_ui5wcr-AnalyticalTable-OuterCellBorder:1px solid #0000;--_ui5wcr-AnalyticalTable-HeaderFontFamily:var(--sapFontBoldFamily);--_ui5wcr-AnalyticalTable-OuterBorderBlock:none;--_ui5wcr-AnalyticalTable-OuterBorderInline:none;--_ui5wcr_ActionSheet_MobileHeaderBoxShadow:var(--sapContent_Shadow2);--_ui5wcr_ActionSheet_MobileHeaderTextColor:var(--sapPageHeader_TextColor);--_ui5wcr_ObjectPage_SectionTitleFontFamily:var(--sapFontBoldFamily);--_ui5wcr_ObjectPage_SectionTitleLineHeight:4rem;--_ui5wcr_ObjectPage_SubSectionBorderRadius:var(--sapElement_BorderCornerRadius);--_ui5wcr_ActionSheet_MobileHeaderBackground:var(--sapPageHeader_Background);--_ui5wcr_ActionSheet_MobileHeaderBorderRadius:var(--sapPopover_BorderCornerRadius);--_ui5wcr_ObjectPage_SubSectionBackgroundColor:var(--sapGroup_ContentBackground)}[data-sap-theme=sap_horizon_hcb]{--_ui5wcr_Splitter_BarOutline:0.15rem dotted var(--sapGroup_ContentBorderColor);--_ui5wcr_Splitter_BarBorderFocus:solid var(--sapGroup_ContentBorderColor) 0.0625rem;--_ui5wcr_Splitter_BarBorderStyle:solid var(--sapGroup_ContentBorderColor) 0.0625rem;--_ui5wcr_ActionSheet_HeaderBoxShadow:var(--sapContent_HeaderShadow);--_ui5wcr_ObjectPage_SectionBorderTop:none;--_ui5wcr_Splitter_ContentBorderColor:var(--sapGroup_ContentBorderColor);--_ui5wcr-AnalyticalTable-OuterCellBorder:1px solid #0000;--_ui5wcr-AnalyticalTable-HeaderFontFamily:var(--sapFontBoldFamily);--_ui5wcr-AnalyticalTable-HeaderBorderWidth:0.188rem;--_ui5wcr-AnalyticalTable-OuterBorderInline:none;--_ui5wcr_ActionSheet_MobileHeaderBoxShadow:var(--sapContent_Shadow2);--_ui5wcr_ActionSheet_MobileHeaderTextColor:var(--sapPageHeader_TextColor);--_ui5wcr_ObjectPage_SectionTitleFontFamily:var(--sapFontBoldFamily);--_ui5wcr_ObjectPage_SubSectionBorderRadius:var(--sapElement_BorderCornerRadius);--_ui5wcr_Splitter_BarBorderHighContrastFix:none;--_ui5wcr_ActionSheet_MobileHeaderBackground:var(--sapPageHeader_Background);--_ui5wcr_ActionSheet_MobileHeaderBorderRadius:var(--sapPopover_BorderCornerRadius);--_ui5wcr_ObjectPage_SubSectionBackgroundColor:var(--sapGroup_ContentBackground);--_ui5wcr-AnalyticalTable-HeaderActiveTextColor:var(--sapContent_ContrastTextColor);--_ui5wcr_ObjectPage_SectionTitleTextDecoration:underline var(--sapList_SelectionBorderColor);--_ui5wcr_Form_HeaderBorderWidth:calc(var(--sapList_BorderWidth)*3)}[data-sap-theme=sap_horizon_hcw]{--_ui5wcr_Splitter_BarOutline:0.15rem dotted var(--sapGroup_ContentBorderColor);--_ui5wcr_Splitter_BarBorderFocus:solid var(--sapGroup_ContentBorderColor) 0.0625rem;--_ui5wcr_Splitter_BarBorderStyle:solid var(--sapGroup_ContentBorderColor) 0.0625rem;--_ui5wcr_ActionSheet_HeaderBoxShadow:var(--sapContent_HeaderShadow);--_ui5wcr_ObjectPage_SectionBorderTop:none;--_ui5wcr_Splitter_ContentBorderColor:var(--sapGroup_ContentBorderColor);--_ui5wcr-AnalyticalTable-OuterCellBorder:1px solid #0000;--_ui5wcr-AnalyticalTable-HeaderFontFamily:var(--sapFontBoldFamily);--_ui5wcr-AnalyticalTable-HeaderBorderWidth:0.188rem;--_ui5wcr-AnalyticalTable-OuterBorderInline:none;--_ui5wcr_ActionSheet_MobileHeaderBoxShadow:var(--sapContent_Shadow2);--_ui5wcr_ActionSheet_MobileHeaderTextColor:var(--sapPageHeader_TextColor);--_ui5wcr_ObjectPage_SectionTitleFontFamily:var(--sapFontBoldFamily);--_ui5wcr_ObjectPage_SubSectionBorderRadius:var(--sapElement_BorderCornerRadius);--_ui5wcr_Splitter_BarBorderHighContrastFix:none;--_ui5wcr_ActionSheet_MobileHeaderBackground:var(--sapPageHeader_Background);--_ui5wcr_ActionSheet_MobileHeaderBorderRadius:var(--sapPopover_BorderCornerRadius);--_ui5wcr_ObjectPage_SubSectionBackgroundColor:var(--sapGroup_ContentBackground);--_ui5wcr-AnalyticalTable-HeaderActiveTextColor:var(--sapContent_ContrastTextColor);--_ui5wcr_ObjectPage_SectionTitleTextDecoration:underline var(--sapList_SelectionBorderColor);--_ui5wcr_Form_HeaderBorderWidth:calc(var(--sapList_BorderWidth)*3)}:not(.ui5-content-native-scrollbars)::-webkit-scrollbar{background-color:var(--sapScrollBar_TrackColor);-webkit-border-start:var(--_ui5wcr_Scrollbar_Border)}:not(.ui5-content-native-scrollbars)::-webkit-scrollbar-thumb{background-color:var(--sapScrollBar_FaceColor);border-radius:var(--_ui5wcr_Scrollbar_BorderRadius)}:is(:not(.ui5-content-native-scrollbars)::-webkit-scrollbar-thumb):hover{background-color:var(--sapScrollBar_Hover_FaceColor)}:is(:not(.ui5-content-native-scrollbars)::-webkit-scrollbar-thumb):horizontal{height:var(--sapScrollBar_Dimension)}:is(:not(.ui5-content-native-scrollbars)::-webkit-scrollbar-thumb):vertical{width:var(--sapScrollBar_Dimension)}:not(.ui5-content-native-scrollbars)::-webkit-scrollbar-corner{background-color:var(--sapScrollBar_TrackColor)}:not(.ui5-content-native-scrollbars)::-webkit-scrollbar:horizontal{height:var(--sapScrollBar_Dimension)}:not(.ui5-content-native-scrollbars)::-webkit-scrollbar:vertical{width:var(--sapScrollBar_Dimension)}}`;

// node_modules/@ui5/webcomponents-react/dist/components/ThemeProvider/index.js
var import_jsx_runtime183 = __toESM(require_jsx_runtime(), 1);
var _versionInfoInjected = false;
var InternalUI5WCVVarNames = {
  "--_ui5wcr_card_header_focus_offset": `var(${getScopedVarName("--_ui5_card_header_focus_offset")})`,
  "--_ui5wcr_card_header_focus_border": `var(${getScopedVarName("--_ui5_card_header_focus_border")})`,
  "--_ui5wcr_card_header_focus_radius": `var(${getScopedVarName("--_ui5_card_header_focus_radius")})`,
  "--_ui5wcr_card_header_focus_bottom_radius": `var(${getScopedVarName("--_ui5_card_header_focus_bottom_radius")})`,
  "--_ui5wcr_popup_header_font_family": `var(${getScopedVarName("--_ui5_popup_header_font_family")})`
};
var ui5WcVariablesStyle = `:root {${Object.entries(InternalUI5WCVVarNames).map(([key, value]) => {
  return `${key}: ${value};`;
}).join(" ")}}`;
function ThemeProviderStyles() {
  const uniqueId = (0, import_react62.useId)();
  useStylesheet(styleData28, `${ThemeProvider.displayName}-${uniqueId}`);
  useStylesheet(ui5WcVariablesStyle, `${ThemeProvider.displayName}-css-vars-${uniqueId}`, {
    alwaysInject: true
  });
  return null;
}
var ThemeProvider = (props) => {
  const {
    children,
    staticCssInjected = false
  } = props;
  useIsomorphicLayoutEffect(() => {
    document.documentElement.setAttribute("data-sap-theme", getTheme());
    const handler = (newTheme) => {
      document.documentElement.setAttribute("data-sap-theme", newTheme);
    };
    attachThemeLoaded(handler);
    return () => {
      detachThemeLoaded(handler);
    };
  }, []);
  useIsomorphicLayoutEffect(() => {
    StyleStore.setStaticCssInjected(staticCssInjected);
  }, [staticCssInjected]);
  useIsomorphicLayoutEffect(() => {
    attachLanguageChange(I18nStore.handleLanguageChange);
    return () => {
      detachLanguageChange(I18nStore.handleLanguageChange);
    };
  }, []);
  (0, import_react62.useEffect)(() => {
    var _a;
    if (_versionInfoInjected) {
      return;
    }
    globalThis["@ui5/webcomponents-react"] ?? (globalThis["@ui5/webcomponents-react"] = {});
    (_a = globalThis["@ui5/webcomponents-react"]).Runtimes ?? (_a.Runtimes = []);
    globalThis["@ui5/webcomponents-react"].Runtimes.push(VersionInfo_default2);
    _versionInfoInjected = true;
    return () => {
      globalThis["@ui5/webcomponents-react"].Runtimes = globalThis["@ui5/webcomponents-react"].Runtimes.filter((info) => info !== VersionInfo_default2);
      _versionInfoInjected = false;
    };
  }, []);
  return (0, import_jsx_runtime183.jsxs)(import_jsx_runtime183.Fragment, {
    children: [(0, import_jsx_runtime183.jsx)(ThemeProviderStyles, {}), children]
  });
};
ThemeProvider.displayName = "ThemeProvider";

// node_modules/@ui5/webcomponents-fiori/dist/illustrations/sapIllus-Dialog-UnableToLoad.js
var sapIllus_Dialog_UnableToLoad_default = `<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" width="160" height="160" viewBox="0 0 160 160" id="sapIllus-Dialog-UnableToLoad">
    <ellipse class="sapIllus_BackgroundColor" cx="80" cy="147" rx="37" ry="6"/>
    <path class="sapIllus_ObjectFillColor" d="M80.5,34.1171A45.3829,45.3829,0,1,0,125.8828,79.5,45.4338,45.4338,0,0,0,80.5,34.1171ZM80.5,114A34.5,34.5,0,1,1,115,79.5,34.5,34.5,0,0,1,80.5,114Z"/>
    <circle class="sapIllus_Layering1" cx="80.5" cy="79.5" r="34.5"/>
    <path class="sapIllus_StrokeDetailColor" d="M80.5,33A46.5,46.5,0,1,0,127,79.5,46.5524,46.5524,0,0,0,80.5,33Zm0,91.8829A45.3829,45.3829,0,1,1,125.8828,79.5,45.4343,45.4343,0,0,1,80.5,124.8829Z"/>
    <path class="sapIllus_PatternHighlight" d="M80.5,45a34.5006,34.5006,0,0,0-22.4263,60.7175l44.1372-53.031A34.3563,34.3563,0,0,0,80.5,45Z"/>
      <path class="sapIllus_Layering1" d="M60.9985,24.7178a1.0014,1.0014,0,0,1-1.0014-1.0009l-.003-7.7149A1.0017,1.0017,0,0,1,60.9956,15h0a1.0014,1.0014,0,0,1,1.0015,1.001L62,23.7159a1.0016,1.0016,0,0,1-1.0015,1.0019Z"/>
      <path class="sapIllus_Layering1" d="M32.6348,44.3431a1.0019,1.0019,0,0,1-.3418-.0606L25.0518,41.65a1,1,0,0,1,.6835-1.88l7.2413,2.6323a1.0005,1.0005,0,0,1-.3418,1.9405Z"/>
      <path class="sapIllus_Layering1" d="M44.5342,31.52a1,1,0,0,1-.82-.4263L36.9121,21.39a1,1,0,0,1,1.6387-1.1474l6.8017,9.7041a1,1,0,0,1-.8183,1.5737Z"/>
    <path class="sapIllus_ObjectFillColor" d="M84.7346,79.5l9.9067-9.9067a1.1849,1.1849,0,0,0,0-1.6758l-2.5588-2.5588a1.1849,1.1849,0,0,0-1.6758,0L80.5,75.2654l-9.9067-9.9067a1.1849,1.1849,0,0,0-1.6758,0l-2.5588,2.5588a1.1849,1.1849,0,0,0,0,1.6758L76.2654,79.5l-9.9067,9.9067a1.1849,1.1849,0,0,0,0,1.6758l2.5588,2.5588a1.1849,1.1849,0,0,0,1.6758,0L80.5,83.7346l9.9067,9.9067a1.1849,1.1849,0,0,0,1.6758,0l2.5588-2.5588a1.1849,1.1849,0,0,0,0-1.6758Z"/>
</svg>
`;

// node_modules/@ui5/webcomponents-fiori/dist/illustrations/sapIllus-Scene-UnableToLoad.js
var sapIllus_Scene_UnableToLoad_default = `<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" width="320" height="240" viewBox="0 0 320 240" id="sapIllus-Scene-UnableToLoad">
    <path class="sapIllus_BackgroundColor" d="M300.0626,58.9336,190.7032,42.5048a4.9315,4.9315,0,0,0-5.6094,4.1441l-3.1711,21.1085V58.76H137.6374l-2.12-12.2179a4.9315,4.9315,0,0,0-5.702-4.016L20.87,61.4265a5.0915,5.0915,0,0,0-4.2535,5.7L39.8215,199.5946a4.9442,4.9442,0,0,0,5.7168,4.0265L154.2577,184.76h13.6a4.8879,4.8879,0,0,0,1.4188.4639l109.3465,16.4269a4.9316,4.9316,0,0,0,5.61-4.1442L304.2068,64.543A4.9316,4.9316,0,0,0,300.0626,58.9336Z"/>
    <path class="sapIllus_Layering1" d="M239.4991,111.3377l-6.542-.9827a.4868.4868,0,0,0-.5539.4092l-2.7608,18.3766,7.5054,1.1275,2.7608-18.3766A.4872.4872,0,0,0,239.4991,111.3377Z"/>
    <path class="sapIllus_AccentColor" d="M259.3224,106.8766l-6.542-.9829a.487.487,0,0,0-.554.4093L248.33,132.24l7.5054,1.1275,3.8965-25.9371A.487.487,0,0,0,259.3224,106.8766Z"/>
    <path class="sapIllus_BrandColorSecondary" d="M280.4464,91.7325l-6.5421-.9828a.487.487,0,0,0-.554.4092l-6.5984,43.9228,7.5053,1.1276,6.5985-43.9229A.487.487,0,0,0,280.4464,91.7325Z"/>
    <path class="sapIllus_Layering1" d="M283.5028,138.0983a.5593.5593,0,0,1-.0752-.0054L196.3231,125.007a.5.5,0,0,1-.42-.5689l8.4824-56.46a.5.5,0,1,1,.9883.1484l-8.4082,55.9658,86.61,13.0113a.5.5,0,0,1-.0732.9946Z"/>
    <path class="sapIllus_Layering2" d="M220.13,117.2578h9.4008a.6368.6368,0,0,1,.6368.6368v65.6522a.6367.6367,0,0,1-.6367.6367H220.13a.6368.6368,0,0,1-.6368-.6368V117.8946a.6368.6368,0,0,1,.6368-.6368Z" transform="translate(42.3814 350.6652) rotate(-81.4564)"/>
    <path class="sapIllus_Layering2" d="M266.768,149.3689h9.4009a.6367.6367,0,0,1,.6367.6367v15.4427a.6368.6368,0,0,1-.6368.6368h-9.4009a.6367.6367,0,0,1-.6367-.6367V150.0057a.6368.6368,0,0,1,.6368-.6368Z" transform="translate(75.1617 402.7506) rotate(-81.4564)"/>
    <rect class="sapIllus_Layering2" x="84.4317" y="126.0045" width="57.3026" height="8.4891" rx="0.4016" transform="translate(-20.3543 20.9464) rotate(-9.7133)"/>
    <rect class="sapIllus_Layering2" x="87.2012" y="142.1844" width="57.3026" height="8.4891" rx="0.4016" transform="translate(-23.0444 21.6456) rotate(-9.7133)"/>
    <rect class="sapIllus_Layering2" x="76.5112" y="80.1348" width="57.3026" height="8.4891" rx="0.4016" transform="translate(-12.7288 18.9525) rotate(-9.7133)"/>
    <rect class="sapIllus_Layering2" x="79.2807" y="96.3147" width="57.3026" height="8.4891" rx="0.4016" transform="translate(-15.4189 19.6517) rotate(-9.7133)"/>
    <rect class="sapIllus_Layering2" x="39.4189" y="89.8533" width="21.5605" height="8.4891" rx="0.4016" transform="translate(-15.1562 9.8184) rotate(-9.7132)"/>
    <rect class="sapIllus_Layering2" x="42.1885" y="106.0332" width="21.5605" height="8.4891" rx="0.4016" transform="translate(-17.8464 10.5176) rotate(-9.7132)"/>
    <path class="sapIllus_PatternShadow" d="M127.973,39.2952l71.0214.83c.5314,0,36.5451,29.7241,36.5451,29.7241a1.9462,1.9462,0,0,1,.5373,1.3426l-.0089,107.758a5.4846,5.4846,0,0,1-.0784.9738,7.9433,7.9433,0,0,1-1.6314,3.5878l-.0284.0348a5.8887,5.8887,0,0,1-4.57,2.0808l-107.3309.06a6.9006,6.9006,0,0,0-.7655.049,5.0685,5.0685,0,0,1-5.7387-6.0058,5.914,5.914,0,0,0,.0663-.944L115.963,51.1683Z"/>
    <path class="sapIllus_ObjectFillColor" d="M222.4069,176.1651H105.8575a2.4365,2.4365,0,0,1-2.4365-2.4365V31.7062a2.4365,2.4365,0,0,1,2.4365-2.4365h81.53a3,3,0,0,1,1.9007.679l35.0594,28.7144a1.3528,1.3528,0,0,1,.4957,1.0467V173.7286A2.4364,2.4364,0,0,1,222.4069,176.1651Z"/>
    <path class="sapIllus_Layering2" d="M189.27,29.9338a1.8625,1.8625,0,0,0-2.6358.2289,2.3009,2.3009,0,0,0-.4859,1.4179V58.8491a2.5308,2.5308,0,0,0,2.5308,2.5309h33.8533l.0382,0a1.8687,1.8687,0,0,0,1.0368-3.3228Z"/>
    <path class="sapIllus_StrokeDetailColor" d="M224.6289,58.2476l-.3533-.2893,0,0L189.4209,29.4117a2.1467,2.1467,0,0,0-.25-.1464c-.037-.022-.0733-.0443-.1109-.0648a2.1862,2.1862,0,0,0-.3718-.17,3.4918,3.4918,0,0,0-1.3-.261H105.9535a3.0327,3.0327,0,0,0-3.0326,3.0326v141.83a3.1173,3.1173,0,0,0,3.0326,3.13H221.8914a3.1172,3.1172,0,0,0,3.0326-3.13V59.7573C224.924,59.1724,224.9505,58.5117,224.6289,58.2476ZM188.7879,60.88a1.9066,1.9066,0,0,1-1.9066-1.9066V31.5806a1.8091,1.8091,0,0,1,.7959-1.5c.1709-.1167.1412-.1738.3482-.1738a1.1756,1.1756,0,0,1,.3.0531,2.5049,2.5049,0,0,1,.6459.3751L223.4745,59.09a1.23,1.23,0,0,1,.4433.8759.9012.9012,0,0,1-.4066.7919l-13.79.1226Zm33.1035,114.8825H105.9535a2.1179,2.1179,0,0,1-2.0326-2.13V31.8022a2.0326,2.0326,0,0,1,2.0326-2.0326h80.44a.0915.0915,0,0,1,.0719.1493,2.7926,2.7926,0,0,0-.5532,1.6617V58.9733a2.9066,2.9066,0,0,0,2.9066,2.9066h0l.0214.0024,35.0824,7.9961s.0017.1278.0017.1727V173.6325A2.1179,2.1179,0,0,1,221.8914,175.7624Z"/>
    <path class="sapIllus_BrandColorSecondary" d="M191.9342,122.0753a1.2634,1.2634,0,0,0-.667-.709l-5.5528-2.45a1.2321,1.2321,0,0,0-1.61.6035,21.4467,21.4467,0,1,1-11.0664-29.0195l-4.9971,5.4082a.9762.9762,0,0,0-.17,1.0737.9941.9941,0,0,0,.9267.5669l16.9346-.67a1.1992,1.1992,0,0,0,1.1485-1.2422l-.6661-16.9351a.9778.9778,0,0,0-1.6953-.625l-5.4267,5.8716a29.96,29.96,0,1,0-14.3233,56.2788h.003a29.9989,29.9989,0,0,0,27.124-17.19A1.2323,1.2323,0,0,0,191.9342,122.0753Z"/>
    <ellipse class="sapIllus_Layering2" cx="163.4227" cy="212.7599" rx="60.5" ry="6"/>
    <path class="sapIllus_Layering1" d="M58.83,132.3347A13.3971,13.3971,0,1,0,74.7245,143.25a.2378.2378,0,0,0-.276-.1924l-12.8634,2.3891a.0754.0754,0,0,1-.0879-.06l-2.389-12.863A.2378.2378,0,0,0,58.83,132.3347Z"/>
    <path class="sapIllus_AccentColor" d="M61.7265,129.9707,63.9328,141.85a.2352.2352,0,0,0,.2742.1883l11.88-2.2064a.1476.1476,0,0,0,.1167-.1723,12.465,12.465,0,0,0-14.3579-9.86A.1477.1477,0,0,0,61.7265,129.9707Z"/>
</svg>
`;

// node_modules/@ui5/webcomponents-fiori/dist/illustrations/sapIllus-Spot-UnableToLoad.js
var sapIllus_Spot_UnableToLoad_default = `<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" width="128" height="128" viewBox="0 0 128 128" id="sapIllus-Spot-UnableToLoad">
    <circle class="sapIllus_ObjectFillColor" cx="63.767" cy="65.2108" r="40.5032"/>
      <path class="sapIllus_Layering1" d="M46.84,16.3352a.999.999,0,0,1-.9981-.9624L45.59,8.6408a1.0005,1.0005,0,0,1,.9619-1.0371,1.017,1.017,0,0,1,1.0361.9619l.252,6.732a1.0006,1.0006,0,0,1-.9619,1.0371Z"/>
      <path class="sapIllus_Layering1" d="M22.1078,35.071a.9864.9864,0,0,1-.3066-.0488l-6.4121-2.0654a1,1,0,1,1,.6133-1.9034l6.4121,2.0655a1,1,0,0,1-.3067,1.9521Z"/>
      <path class="sapIllus_Layering1" d="M33.019,23.77a.9981.9981,0,0,1-.7979-.396l-6.2568-8.26a1,1,0,0,1,1.5937-1.208l6.2569,8.26a1,1,0,0,1-.7959,1.604Z"/>
    <circle class="sapIllus_Layering1" cx="63.7534" cy="65.102" r="30.5"/>
    <path class="sapIllus_PatternHighlight" d="M81.5385,40.4286a30.4973,30.4973,0,0,0-43.164,41.6781Z"/>
    <path class="sapIllus_StrokeDetailColor" d="M63.767,106.7112a41.5,41.5,0,1,1,41.5-41.5A41.5474,41.5474,0,0,1,63.767,106.7112Zm0-82.0036A40.5033,40.5033,0,1,0,104.27,65.2107,40.5487,40.5487,0,0,0,63.767,24.7076Z"/>
    <path class="sapIllus_ObjectFillColor" d="M67.867,65.9654l9.5671-9.5672a1.1849,1.1849,0,0,0,0-1.6758l-2.425-2.425a1.1849,1.1849,0,0,0-1.6758,0l-9.5671,9.5671L54.199,52.2974a1.1849,1.1849,0,0,0-1.6758,0l-2.425,2.425a1.1849,1.1849,0,0,0,0,1.6758l9.5671,9.5672-9.5671,9.5671a1.1849,1.1849,0,0,0,0,1.6758l2.425,2.425a1.1849,1.1849,0,0,0,1.6758,0l9.5672-9.5671,9.5671,9.5671a1.1849,1.1849,0,0,0,1.6758,0l2.425-2.425a1.1849,1.1849,0,0,0,0-1.6758Z"/>
</svg>
`;

// node_modules/@ui5/webcomponents-fiori/dist/illustrations/UnableToLoad.js
var name104 = "UnableToLoad";
var set3 = "fiori";
var collection103 = "V4";
var title3 = IM_TITLE_UNABLETOLOAD;
var subtitle3 = IM_SUBTITLE_UNABLETOLOAD;
registerIllustration(name104, {
  dialogSvg: sapIllus_Dialog_UnableToLoad_default,
  sceneSvg: sapIllus_Scene_UnableToLoad_default,
  spotSvg: sapIllus_Spot_UnableToLoad_default,
  dotSvg: sapIllus_Spot_UnableToLoad_default,
  title: title3,
  subtitle: subtitle3,
  set: set3,
  collection: collection103
});

// node_modules/@ui5/webcomponents-react/dist/components/VariantManagement/index.js
var import_react67 = __toESM(require_react(), 1);

// node_modules/@ui5/webcomponents-react/dist/internal/VariantManagementContext.js
var import_react63 = __toESM(require_react(), 1);
var VariantManagementContext = (0, import_react63.createContext)({
  selectVariantItem: (_selectedVariant) => {
  },
  selectedVariant: void 0
});

// node_modules/@ui5/webcomponents-react/dist/components/VariantManagement/ManageViewsDialog.js
var import_react65 = __toESM(require_react(), 1);

// node_modules/@ui5/webcomponents-react/dist/components/VariantManagement/ManageViewsDialog.module.css.js
var styleData29 = `@layer ui5-webcomponents-react{._manageViewsDialog_3s6rx_1{width:100%}._manageViewsDialog_3s6rx_1::part(content),._manageViewsDialog_3s6rx_1::part(header){padding:0}._manageViewsDialog_3s6rx_1::part(footer){border-block-start:none;padding:0}@media (min-width:1024px){._manageViewsDialog_3s6rx_1{width:70vw}}._headerText_3s6rx_21{align-self:start;display:inline-block;font-family:var(--_ui5wcr_popup_header_font_family);font-size:1rem;line-height:var(--_ui5wcr_popup_default_header_height);margin:0;max-height:var(--_ui5wcr_popup_default_header_height);max-width:100%;min-height:var(--_ui5wcr_popup_default_header_height);overflow:hidden;padding-inline-start:1rem;text-align:center;text-overflow:ellipsis;white-space:nowrap}._search_3s6rx_38{margin-block-end:.5rem;width:calc(100% - 2rem)}._inputIcon_3s6rx_43{color:var(--sapContent_IconColor);cursor:pointer}}`;
var classNames28 = {
  "manageViewsDialog": "_manageViewsDialog_3s6rx_1",
  "headerText": "_headerText_3s6rx_21",
  "search": "_search_3s6rx_38",
  "inputIcon": "_inputIcon_3s6rx_43"
};

// node_modules/@ui5/webcomponents-react/dist/components/VariantManagement/ManageViewsTableRows.js
var import_react64 = __toESM(require_react(), 1);
var import_jsx_runtime184 = __toESM(require_jsx_runtime(), 1);
var ManageViewsTableRows = (props) => {
  const {
    variantNames,
    changedVariantNames,
    setChangedVariantNames,
    handleRowChange,
    handleDelete,
    defaultView,
    setDefaultView,
    showShare,
    showApplyAutomatically,
    showSetAsDefault,
    showCreatedBy,
    labelReadOnly,
    favorite,
    children,
    global: global2,
    isDefault,
    applyAutomatically,
    applyAutomaticallyText,
    author,
    setInvalidVariants,
    hideDelete,
    showOnlyFavorites
  } = props;
  const i18nBundle = useI18nBundle("@ui5/webcomponents-react");
  const errorTextAlreadyExists = i18nBundle.getText(VARIANT_MANAGEMENT_ERROR_DUPLICATE);
  const errorTextEmpty = i18nBundle.getText(SPECIFY_VIEW_NAME);
  const publicText = i18nBundle.getText(PUBLIC);
  const privateText = i18nBundle.getText(PRIVATE);
  const a11yFavoriteText = i18nBundle.getText(MARK_AS_FAVORITE);
  const a11yStandardText = i18nBundle.getText(MARK_AS_STANDARD);
  const a11yDeleteText = i18nBundle.getText(DELETE_VIEW);
  const a11yApplyAutomaticallyText = i18nBundle.getText(APPLY_AUTOMATICALLY);
  const favoriteIconTitleText = i18nBundle.getText(SELECTED_AS_FAVORITE);
  const unfavoriteIconTitleText = i18nBundle.getText(UNSELECTED_AS_FAVORITE);
  const inputPlaceHolder = i18nBundle.getText(VIEW);
  const [internalFavorite, setFavorite] = (0, import_react64.useReducer)((prev) => {
    return !prev;
  }, !!favorite);
  const iconName = internalFavorite ? favorite_default : unfavorite_default;
  const inputRef = (0, import_react64.useRef)(void 0);
  const [variantNameInvalid, setVariantNameInvalid] = (0, import_react64.useState)(false);
  const onFavoriteClick = (e) => {
    setFavorite();
    handleRowChange(e, {
      currentVariant: children,
      favorite: !internalFavorite
    });
  };
  const handleVariantInput = (e) => {
    var _a, _b;
    if (typeof ((_a = props.manageViewsInputProps) == null ? void 0 : _a.onInput) === "function") {
      (_b = props.manageViewsInputProps) == null ? void 0 : _b.onInput(e);
    }
    const trimmedValue = trimAndRemoveSpaces(e.target.value);
    if (children !== trimmedValue && (variantNames.includes(trimmedValue) || Array.from(changedVariantNames.values()).includes(trimmedValue))) {
      setVariantNameInvalid(errorTextAlreadyExists);
      setInvalidVariants((prev) => ({
        ...prev,
        [`${children}`]: inputRef.current
      }));
      handleRowChange(e, {
        currentVariant: children,
        children: trimmedValue
      });
    } else if (trimmedValue.length === 0) {
      setVariantNameInvalid(errorTextEmpty);
      setInvalidVariants((prev) => ({
        ...prev,
        [children]: inputRef.current
      }));
      handleRowChange(e, {
        currentVariant: children,
        children: trimmedValue
      });
    } else if (e.isInvalid) {
      setInvalidVariants((prev) => ({
        ...prev,
        [`${children}`]: inputRef.current
      }));
    } else {
      setVariantNameInvalid(false);
      setInvalidVariants((prev) => {
        const invalidRows = {
          ...prev
        };
        if (Object.prototype.hasOwnProperty.call(prev, children)) {
          delete invalidRows[children];
        }
        return invalidRows;
      });
      handleRowChange(e, {
        currentVariant: children,
        children: trimmedValue
      });
    }
  };
  const handleVariantChange = (e) => {
    var _a, _b;
    if (typeof ((_a = props.manageViewsInputProps) == null ? void 0 : _a.onChange) === "function") {
      (_b = props.manageViewsInputProps) == null ? void 0 : _b.onChange(e);
    }
    const trimmedValue = trimAndRemoveSpaces(e.target.value);
    setChangedVariantNames((prev) => {
      const currentChangedVariants = new Map(prev);
      currentChangedVariants.set(children, trimmedValue);
      return currentChangedVariants;
    });
  };
  const handleDefaultChange = () => {
    setDefaultView(children);
  };
  const handleApplyAutomaticallyChange = (e) => {
    handleRowChange(e, {
      currentVariant: children,
      applyAutomatically: e.target.checked
    });
  };
  const renderView = () => {
    var _a, _b;
    if (labelReadOnly) {
      return (0, import_jsx_runtime184.jsx)(Text3, {
        style: {
          fontFamily: isDefault ? ThemingParameters.sapFontBoldFamily : ThemingParameters.sapFontFamily
        },
        children
      });
    }
    return (0, import_jsx_runtime184.jsx)(Input, {
      placeholder: inputPlaceHolder,
      ref: inputRef,
      ...props.manageViewsInputProps,
      valueStateMessage: ((_a = props.manageViewsInputProps) == null ? void 0 : _a.valueStateMessage) ?? (0, import_jsx_runtime184.jsx)("div", {
        children: variantNameInvalid
      }),
      valueState: ((_b = props.manageViewsInputProps) == null ? void 0 : _b.valueState) ?? (!variantNameInvalid ? ValueState_default.None : ValueState_default.Negative),
      value: children,
      onInput: handleVariantInput,
      onChange: handleVariantChange
    });
  };
  return (0, import_jsx_runtime184.jsxs)(TableRow3, {
    "data-id": children,
    children: [showOnlyFavorites && (0, import_jsx_runtime184.jsx)(TableCell3, {
      children: isDefault ? (0, import_jsx_runtime184.jsx)(Icon, {
        name: favorite_default,
        style: {
          color: ThemingParameters.sapContent_NonInteractiveIconColor
        }
      }) : (0, import_jsx_runtime184.jsx)(Icon, {
        accessibleName: a11yFavoriteText,
        title: iconName === favorite_default ? favoriteIconTitleText : unfavoriteIconTitleText,
        name: iconName,
        mode: IconMode_default.Interactive,
        style: {
          color: ThemingParameters.sapContent_MarkerIconColor,
          cursor: "pointer"
        },
        onClick: onFavoriteClick
      })
    }), (0, import_jsx_runtime184.jsx)(TableCell3, {
      children: renderView()
    }), showShare && (0, import_jsx_runtime184.jsx)(TableCell3, {
      children: global2 ? publicText : privateText
    }), showSetAsDefault && (0, import_jsx_runtime184.jsx)(TableCell3, {
      children: (0, import_jsx_runtime184.jsx)(RadioButton, {
        accessibleName: a11yStandardText,
        checked: defaultView !== void 0 ? defaultView === children : isDefault,
        onChange: handleDefaultChange
      })
    }), showApplyAutomatically && (0, import_jsx_runtime184.jsx)(TableCell3, {
      children: (0, import_jsx_runtime184.jsx)(CheckBox, {
        accessibleName: a11yApplyAutomaticallyText,
        checked: applyAutomatically,
        onChange: handleApplyAutomaticallyChange,
        text: applyAutomaticallyText
      })
    }), showCreatedBy && (0, import_jsx_runtime184.jsx)(TableCell3, {
      children: (0, import_jsx_runtime184.jsx)(Text3, {
        children: author
      })
    }), (0, import_jsx_runtime184.jsx)(TableCell3, {
      children: !(hideDelete ?? global2) && (0, import_jsx_runtime184.jsx)(Button, {
        tooltip: a11yDeleteText,
        accessibleName: a11yDeleteText,
        icon: decline_default,
        design: ButtonDesign_default.Transparent,
        onClick: handleDelete,
        "data-children": children
      })
    })]
  }, `${children}`);
};

// node_modules/@ui5/webcomponents-react/dist/components/VariantManagement/ManageViewsDialog.js
var import_jsx_runtime185 = __toESM(require_jsx_runtime(), 1);
var ManageViewsDialog = (props) => {
  const {
    children,
    onAfterClose,
    handleSaveManageViews,
    showShare,
    showApplyAutomatically,
    showSetAsDefault,
    showCreatedBy,
    variantNames,
    showOnlyFavorites,
    onManageViewsCancel
  } = props;
  const uniqueId = (0, import_react65.useId)();
  const i18nBundle = useI18nBundle("@ui5/webcomponents-react");
  const cancelText = i18nBundle.getText(CANCEL);
  const saveText = i18nBundle.getText(SAVE);
  const viewHeaderText = i18nBundle.getText(VIEW);
  const sharingHeaderText = i18nBundle.getText(SHARING);
  const defaultHeaderText = i18nBundle.getText(DEFAULT);
  const applyAutomaticallyHeaderText = i18nBundle.getText(APPLY_AUTOMATICALLY);
  const createdByHeaderText = i18nBundle.getText(CREATED_BY);
  const manageViewsText = i18nBundle.getText(MANAGE_VIEWS);
  const searchText = i18nBundle.getText(SEARCH);
  const [changedVariantNames, setChangedVariantNames] = (0, import_react65.useState)(/* @__PURE__ */ new Map());
  const [invalidVariants, setInvalidVariants] = (0, import_react65.useState)({});
  const [hasApplyAutomaticallyText, setHasApplyAutomaticallyText] = (0, import_react65.useState)(false);
  useStylesheet(styleData29, "ManageViewsDialog");
  const headerRow = (0, import_jsx_runtime185.jsxs)(TableHeaderRow3, {
    sticky: true,
    children: [showOnlyFavorites && (0, import_jsx_runtime185.jsx)(TableHeaderCell3, {}, "favorite-variant-item"), (0, import_jsx_runtime185.jsx)(TableHeaderCell3, {
      importance: 10,
      "min-width": "18rem",
      children: viewHeaderText
    }), showShare && (0, import_jsx_runtime185.jsx)(TableHeaderCell3, {
      minWidth: "7.5rem",
      maxWidth: "8rem",
      children: sharingHeaderText
    }), showSetAsDefault && (0, import_jsx_runtime185.jsx)(TableHeaderCell3, {
      minWidth: "8rem",
      maxWidth: "8rem",
      children: defaultHeaderText
    }), showApplyAutomatically && (0, import_jsx_runtime185.jsx)(TableHeaderCell3, {
      minWidth: hasApplyAutomaticallyText ? "25rem" : "5rem",
      children: applyAutomaticallyHeaderText
    }), showCreatedBy && (0, import_jsx_runtime185.jsx)(TableHeaderCell3, {
      minWidth: "10rem",
      children: createdByHeaderText
    }), (0, import_jsx_runtime185.jsx)(TableHeaderCell3, {
      importance: 9,
      width: "3rem"
    }, "delete-variant-item")]
  });
  const [childrenProps, setChildrenProps] = (0, import_react65.useState)(import_react65.Children.map(children, (child) => {
    if (!(0, import_react65.isValidElement)(child)) {
      return {};
    }
    return child.props;
  }));
  (0, import_react65.useEffect)(() => {
    let _hasApplyAutomaticallyText = false;
    setChildrenProps(import_react65.Children.map(children, (child) => {
      var _a;
      if (!(0, import_react65.isValidElement)(child)) {
        return {};
      }
      if ((_a = child.props) == null ? void 0 : _a.applyAutomaticallyText) {
        _hasApplyAutomaticallyText = true;
      }
      return child.props;
    }));
    setHasApplyAutomaticallyText(_hasApplyAutomaticallyText);
  }, [children]);
  const [filteredProps, setFilteredProps] = (0, import_react65.useState)(childrenProps);
  (0, import_react65.useEffect)(() => {
    setFilteredProps(childrenProps);
  }, [childrenProps]);
  const [defaultView, setDefaultView] = (0, import_react65.useState)();
  const changedTableRows = (0, import_react65.useRef)({});
  const handleTableRowChange = (e, payload) => {
    if (payload) {
      changedTableRows.current[payload.currentVariant] = {
        ...changedTableRows.current[payload.currentVariant] ?? {},
        ...payload
      };
    }
  };
  const deletedTableRows = (0, import_react65.useRef)(/* @__PURE__ */ new Set([]));
  const handleDelete = (e) => {
    deletedTableRows.current.add(e.target.dataset.children);
    setChildrenProps((prev) => prev.filter((item2) => item2.children !== e.target.dataset.children).map((item2) => {
      if (Object.prototype.hasOwnProperty.call(changedTableRows.current, item2.children)) {
        return {
          ...item2,
          ...changedTableRows.current[item2.children]
        };
      }
      return item2;
    }));
  };
  const handleSave = (e) => {
    if (Object.keys(invalidVariants).length === 0) {
      handleSaveManageViews(e, {
        updatedRows: changedTableRows.current,
        defaultView,
        deletedRows: deletedTableRows.current
      });
    } else {
      void Object.values(invalidVariants)[0].focus();
    }
  };
  const handleClose = (e) => {
    if (e.detail.escPressed) {
      handleCancel(e);
    } else {
      onAfterClose(e);
    }
  };
  const handleCancel = (e) => {
    if (typeof onManageViewsCancel === "function") {
      onManageViewsCancel(enrichEventWithDetails(e, {
        invalidVariants
      }));
    }
    setInvalidVariants((prev) => {
      Object.values(prev).forEach((item2) => {
        item2.isInvalid = false;
      });
      return {};
    });
    onAfterClose(e);
  };
  const handleSearchInput = (e) => {
    const lowerCaseVal = e.target.value.toLowerCase();
    setFilteredProps(childrenProps.filter((item2) => {
      var _a, _b, _c, _d;
      return ((_b = (_a = item2.children) == null ? void 0 : _a.toLowerCase()) == null ? void 0 : _b.includes(lowerCaseVal)) || ((_d = (_c = item2.author) == null ? void 0 : _c.toLowerCase()) == null ? void 0 : _d.includes(lowerCaseVal));
    }));
  };
  return (0, import_jsx_runtime185.jsx)(Dialog, {
    open: true,
    className: classNames28.manageViewsDialog,
    "data-component-name": "VariantManagementManageViewsDialog",
    onClose: onAfterClose,
    onBeforeClose: handleClose,
    headerText: manageViewsText,
    initialFocus: `search-${uniqueId}`,
    style: {
      "--_ui5wcr_popup_default_header_height": `var(${getScopedVarName("--_ui5_popup_default_header_height")})`
    },
    header: (0, import_jsx_runtime185.jsxs)(FlexBox, {
      direction: FlexBoxDirection.Column,
      style: {
        width: "100%"
      },
      alignItems: FlexBoxAlignItems.Center,
      children: [(0, import_jsx_runtime185.jsx)("h2", {
        className: classNames28.headerText,
        children: manageViewsText
      }), (0, import_jsx_runtime185.jsx)(Input, {
        id: `search-${uniqueId}`,
        className: classNames28.search,
        placeholder: searchText,
        showClearIcon: true,
        icon: (0, import_jsx_runtime185.jsx)(Icon, {
          name: search_default,
          className: classNames28.inputIcon
        }),
        onInput: handleSearchInput
      })]
    }),
    resizable: true,
    footer: (0, import_jsx_runtime185.jsx)(Bar3, {
      design: BarDesign_default.Footer,
      endContent: (0, import_jsx_runtime185.jsxs)(import_jsx_runtime185.Fragment, {
        children: [(0, import_jsx_runtime185.jsx)(Button, {
          design: ButtonDesign_default.Emphasized,
          onClick: handleSave,
          children: saveText
        }), (0, import_jsx_runtime185.jsx)(Button, {
          design: ButtonDesign_default.Transparent,
          onClick: handleCancel,
          children: cancelText
        })]
      })
    }),
    children: (0, import_jsx_runtime185.jsx)(Table3, {
      headerRow,
      role: "table",
      overflowMode: TableOverflowMode_default.Popin,
      children: filteredProps.map((itemProps) => {
        return (0, import_react65.createElement)(ManageViewsTableRows, {
          ...itemProps,
          setInvalidVariants,
          setChangedVariantNames,
          changedVariantNames,
          variantNames,
          handleRowChange: handleTableRowChange,
          handleDelete,
          defaultView,
          setDefaultView,
          showShare,
          showApplyAutomatically,
          showSetAsDefault,
          showCreatedBy,
          key: itemProps == null ? void 0 : itemProps.children,
          showOnlyFavorites
        });
      })
    })
  });
};

// node_modules/@ui5/webcomponents-react/dist/components/VariantManagement/SaveViewDialog.js
var import_react66 = __toESM(require_react(), 1);

// node_modules/@ui5/webcomponents-react/dist/components/VariantManagement/SaveViewDialog.module.css.js
var styleData30 = `@layer ui5-webcomponents-react{._dialog_1vfct_1::part(footer){border-block-start:none;padding:0}._input_1vfct_8{margin-block:.1875rem;width:100%}._checkBoxesContainer_1vfct_13{padding-inline:.5rem}}`;
var classNames29 = {
  "dialog": "_dialog_1vfct_1",
  "input": "_input_1vfct_8",
  "checkBoxesContainer": "_checkBoxesContainer_1vfct_13"
};

// node_modules/@ui5/webcomponents-react/dist/components/VariantManagement/SaveViewDialog.js
var import_jsx_runtime186 = __toESM(require_jsx_runtime(), 1);
var SaveViewDialog = (props) => {
  const {
    onAfterClose,
    handleSave,
    selectedVariant,
    showShare,
    showApplyAutomatically,
    showSetAsDefault,
    variantNames,
    saveViewInputProps,
    onSaveViewCancel
  } = props;
  const saveViewDialogRef = (0, import_react66.useRef)(null);
  const inputRef = (0, import_react66.useRef)(void 0);
  const i18nBundle = useI18nBundle("@ui5/webcomponents-react");
  useStylesheet(styleData30, "SaveViewDialog");
  const uniqueId = (0, import_react66.useId)();
  const cancelText = i18nBundle.getText(CANCEL);
  const saveText = i18nBundle.getText(SAVE);
  const headingText = i18nBundle.getText(SAVE_VIEW);
  const defaultCbLabel = i18nBundle.getText(SET_AS_DEFAULT);
  const publicCbLabel = i18nBundle.getText(PUBLIC);
  const applyAutomaticallyCbLabel = i18nBundle.getText(APPLY_AUTOMATICALLY);
  const inputLabelText = i18nBundle.getText(VIEW);
  const errorTextAlreadyExists = i18nBundle.getText(VARIANT_MANAGEMENT_ERROR_DUPLICATE);
  const errorTextEmpty = i18nBundle.getText(SPECIFY_VIEW_NAME);
  const [isDefault, setDefault] = (0, import_react66.useState)(selectedVariant.isDefault);
  const [isPublic, setPublic] = (0, import_react66.useState)(selectedVariant.global);
  const [applyAutomatically, setApplyAutomatically] = (0, import_react66.useState)(selectedVariant.applyAutomatically);
  const [variantName, setVariantName] = (0, import_react66.useState)(selectedVariant.children);
  const [variantNameInvalid, setVariantNameInvalid] = (0, import_react66.useState)(false);
  const [isInvalid, setIsInvalid] = (0, import_react66.useState)(false);
  const handleInputChange = (e) => {
    if (typeof (saveViewInputProps == null ? void 0 : saveViewInputProps.onInput) === "function") {
      saveViewInputProps.onInput(e);
    }
    const trimmedValue = trimAndRemoveSpaces(e.target.value);
    setVariantName(trimmedValue);
    if (variantNames.includes(trimmedValue)) {
      setVariantNameInvalid(errorTextAlreadyExists);
    } else if (trimmedValue.length === 0) {
      setVariantNameInvalid(errorTextEmpty);
    } else if (e.isInvalid) {
      setIsInvalid(true);
    } else {
      setVariantNameInvalid(false);
      setIsInvalid(false);
    }
  };
  const onSave = (e) => {
    var _a, _b, _c;
    if (variantNames.includes(variantName)) {
      setVariantNameInvalid(errorTextAlreadyExists);
      (_a = inputRef.current) == null ? void 0 : _a.focus();
    } else if (variantName.length === 0) {
      setVariantNameInvalid(errorTextEmpty);
      (_b = inputRef.current) == null ? void 0 : _b.focus();
    } else if (isInvalid) {
      (_c = inputRef.current) == null ? void 0 : _c.focus();
    } else {
      setVariantNameInvalid(false);
      handleSave(e, {
        ...selectedVariant,
        children: variantName,
        isDefault,
        global: isPublic,
        applyAutomatically
      });
    }
  };
  const handleClose = (e) => {
    if (e.detail.escPressed) {
      handleCancel(e);
    } else {
      onAfterClose(e);
    }
  };
  const handleCancel = (e) => {
    if (typeof onSaveViewCancel === "function") {
      onSaveViewCancel(enrichEventWithDetails(e, {
        ...selectedVariant,
        children: variantName,
        isDefault,
        global: isPublic,
        applyAutomatically,
        isInvalid
      }));
    }
    setIsInvalid(false);
    inputRef.current.isInvalid = false;
    saveViewDialogRef.current.open = false;
  };
  const handleChangeDefault = (e) => {
    setDefault(e.target.checked);
  };
  const handleChangePublic = (e) => {
    setPublic(e.target.checked);
  };
  const handleChangeApplyAutomatically = (e) => {
    setApplyAutomatically(e.target.checked);
  };
  return (0, import_jsx_runtime186.jsx)(Dialog, {
    open: true,
    className: classNames29.dialog,
    ref: saveViewDialogRef,
    headerText: headingText,
    onClose: onAfterClose,
    onBeforeClose: handleClose,
    initialFocus: `view-${uniqueId}`,
    footer: (0, import_jsx_runtime186.jsx)(Bar3, {
      design: BarDesign_default.Footer,
      endContent: (0, import_jsx_runtime186.jsxs)(import_jsx_runtime186.Fragment, {
        children: [(0, import_jsx_runtime186.jsx)(Button, {
          design: ButtonDesign_default.Emphasized,
          onClick: onSave,
          children: saveText
        }), (0, import_jsx_runtime186.jsx)(Button, {
          design: ButtonDesign_default.Transparent,
          onClick: handleCancel,
          children: cancelText
        })]
      })
    }),
    children: (0, import_jsx_runtime186.jsxs)(FlexBox, {
      direction: FlexBoxDirection.Column,
      alignItems: FlexBoxAlignItems.Start,
      children: [(0, import_jsx_runtime186.jsx)(Label, {
        for: `view-${uniqueId}`,
        showColon: true,
        children: inputLabelText
      }), (0, import_jsx_runtime186.jsx)(Input, {
        accessibleName: inputLabelText,
        ref: inputRef,
        ...saveViewInputProps,
        valueState: (saveViewInputProps == null ? void 0 : saveViewInputProps.valueState) ?? (!variantNameInvalid ? "None" : "Negative"),
        valueStateMessage: (saveViewInputProps == null ? void 0 : saveViewInputProps.valueStateMessage) ?? (0, import_jsx_runtime186.jsx)("div", {
          children: variantNameInvalid
        }),
        className: clsx(classNames29.input, saveViewInputProps == null ? void 0 : saveViewInputProps.className),
        id: `view-${uniqueId}`,
        value: variantName,
        onInput: handleInputChange
      }), (0, import_jsx_runtime186.jsxs)(FlexBox, {
        alignItems: FlexBoxAlignItems.Start,
        direction: FlexBoxDirection.Column,
        className: classNames29.checkBoxesContainer,
        children: [showSetAsDefault && (0, import_jsx_runtime186.jsx)(CheckBox, {
          onChange: handleChangeDefault,
          text: defaultCbLabel,
          checked: isDefault
        }), showShare && (0, import_jsx_runtime186.jsx)(CheckBox, {
          onChange: handleChangePublic,
          text: publicCbLabel,
          checked: isPublic
        }), showApplyAutomatically && (0, import_jsx_runtime186.jsx)(CheckBox, {
          onChange: handleChangeApplyAutomatically,
          text: applyAutomaticallyCbLabel,
          checked: applyAutomatically
        })]
      })]
    })
  });
};

// node_modules/@ui5/webcomponents-react/dist/components/VariantManagement/VariantManagement.module.css.js
var styleData31 = `@layer ui5-webcomponents-react{._container_39dnl_1{align-items:center;display:flex;flex-wrap:nowrap;text-align:center}._title_39dnl_8{color:var(--sapLinkColor);cursor:pointer;text-shadow:var(--sapContent_TextShadow)}._title_39dnl_8:hover{color:var(--sapLink_Hover_Color)}._title_39dnl_8:active{color:var(--sapLink_Active_Color)}._disabled_39dnl_22 ._title_39dnl_8{color:var(--sapGroup_TitleTextColor);cursor:default}:is(._disabled_39dnl_22 ._title_39dnl_8):hover{color:var(--sapGroup_TitleTextColor)}._dirtyState_39dnl_33{color:var(--sapGroup_TitleTextColor);flex-grow:1;font-family:var(--sapFontBoldFamily);font-size:var(--sapFontSize);padding-inline:.125rem}._dirtyStateText_39dnl_41{font-size:var(--sapFontSmallSize);font-weight:400}._navDownBtn_39dnl_46{margin-inline-start:.125rem}._footer_39dnl_50>:last-child{margin-inline-end:0}._inputIcon_39dnl_56{color:var(--sapContent_IconColor);cursor:pointer}._searchInputContainer_39dnl_61{padding:.25rem 1rem}._searchInput_39dnl_61{width:100%}._popover_39dnl_69{min-width:25rem}._popover_39dnl_69::part(content){padding:0}._popover_39dnl_69::part(footer){border-block-start:none;padding:0}}`;
var classNames30 = {
  "container": "_container_39dnl_1",
  "title": "_title_39dnl_8",
  "disabled": "_disabled_39dnl_22",
  "dirtyState": "_dirtyState_39dnl_33",
  "dirtyStateText": "_dirtyStateText_39dnl_41",
  "navDownBtn": "_navDownBtn_39dnl_46",
  "footer": "_footer_39dnl_50",
  "inputIcon": "_inputIcon_39dnl_56",
  "searchInputContainer": "_searchInputContainer_39dnl_61",
  "searchInput": "_searchInput_39dnl_61",
  "popover": "_popover_39dnl_69"
};

// node_modules/@ui5/webcomponents-react/dist/components/VariantManagement/index.js
var import_jsx_runtime187 = __toESM(require_jsx_runtime(), 1);
var booleanProps = {
  favorite: true,
  global: true,
  isDefault: true,
  labelReadOnly: true,
  applyAutomatically: true,
  readOnly: true,
  hideDelete: true
};
var VariantManagement = (0, import_react67.forwardRef)((props, ref) => {
  const i18nBundle = useI18nBundle("@ui5/webcomponents-react");
  const {
    titleText = i18nBundle.getText(MY_VIEWS),
    className,
    style,
    placement = PopoverPlacement_default.Bottom,
    level = TitleLevel_default.H4,
    size = TitleLevel_default.H4,
    onSelect,
    closeOnItemSelect,
    disabled,
    onSaveAs,
    onSaveManageViews,
    showOnlyFavorites,
    inErrorState,
    hideShare,
    children,
    hideManageVariants,
    hideApplyAutomatically,
    hideSetAsDefault,
    hideCreatedBy,
    hideSaveAs,
    dirtyStateText = "*",
    dirtyState,
    onSave,
    onManageViewsCancel,
    onSaveViewCancel,
    ...rest
  } = props;
  useStylesheet(styleData31, VariantManagement.displayName);
  const popoverRef = (0, import_react67.useRef)(null);
  const [safeChildren, setSafeChildren] = (0, import_react67.useState)(import_react67.Children.toArray(children));
  (0, import_react67.useEffect)(() => {
    setSafeChildren(import_react67.Children.toArray(children));
  }, [children]);
  const [popoverOpen, setPopoverOpen] = (0, import_react67.useState)(false);
  const [manageViewsDialogOpen, setManageViewsDialogOpen] = (0, import_react67.useState)(false);
  const [saveAsDialogOpen, setSaveAsDialogOpen] = (0, import_react67.useState)(false);
  const [selectedVariant, setSelectedVariantState] = (0, import_react67.useState)(() => {
    const currentSelectedVariant = safeChildren.find((item2) => (0, import_react67.isValidElement)(item2) && item2.props.selected);
    if (currentSelectedVariant) {
      return {
        ...currentSelectedVariant.props,
        variantItem: currentSelectedVariant.ref
      };
    }
  });
  const setSelectedVariant = (variant) => {
    if (variant) {
      const stringToBoolVariant = Object.entries(variant).reduce((acc, [key, val]) => {
        if (booleanProps[key]) {
          if (typeof val === "boolean") {
            acc[key] = val;
            return acc;
          }
          if (val === "false") {
            acc[key] = false;
            return acc;
          }
          if (val === "true") {
            acc[key] = true;
            return acc;
          }
          if (import_react67.version.startsWith("19") && val === "") {
            acc[key] = true;
            return acc;
          }
        }
        acc[key] = val;
        return acc;
      }, {});
      setSelectedVariantState(stringToBoolVariant);
    } else {
      setSelectedVariantState(variant);
    }
  };
  const [selectedSaveViewInputProps, setSelectedSaveViewInputProps] = (0, import_react67.useState)((selectedVariant == null ? void 0 : selectedVariant.saveViewInputProps) ?? {});
  const handleClose = () => {
    setPopoverOpen(false);
  };
  const handleManageClick = () => {
    setManageViewsDialogOpen(true);
    handleClose();
  };
  const handleManageClose = () => {
    setManageViewsDialogOpen(false);
  };
  const handleOpenSaveAsDialog = () => {
    setSaveAsDialogOpen(true);
    handleClose();
  };
  const handleSaveAsClose = () => {
    setSaveAsDialogOpen(false);
  };
  const handleSave = (e) => {
    if (typeof onSave === "function") {
      onSave(enrichEventWithDetails(e, selectedVariant));
    }
  };
  const handleSaveView = (e, selectedVariant2) => {
    if (typeof onSaveAs === "function") {
      onSaveAs(enrichEventWithDetails(e, selectedVariant2));
    }
    setSelectedVariant(selectedVariant2);
    if (!e.defaultPrevented) {
      handleSaveAsClose();
    }
  };
  const handleSaveManageViews = (e, payload) => {
    const {
      defaultView,
      updatedRows,
      deletedRows
    } = payload;
    const callbackProperties = {
      deletedVariants: [],
      prevVariants: [],
      updatedVariants: [],
      variants: []
    };
    setSafeChildren((prev) => import_react67.Children.toArray(prev.map((child) => {
      if (!(0, import_react67.isValidElement)(child)) {
        return false;
      }
      const castChild = child;
      let updatedProps = {};
      const currentVariant = popoverRef.current.querySelector(`ui5-li[data-children="${castChild.props.children}"]`);
      callbackProperties.prevVariants.push(castChild.props);
      if (defaultView) {
        if (defaultView === castChild.props.children) {
          updatedProps.isDefault = true;
        } else if (castChild.props.isDefault) {
          updatedProps.isDefault = false;
        }
      }
      if (Object.keys(updatedRows).includes(castChild.props.children)) {
        const {
          currentVariant: _0,
          ...rest2
        } = updatedRows[castChild.props.children];
        updatedProps = {
          ...updatedProps,
          ...rest2
        };
      }
      if (deletedRows.has(castChild.props.children)) {
        callbackProperties.deletedVariants.push(castChild.props);
        return false;
      }
      if (Object.keys(updatedProps).length > 0) {
        callbackProperties.updatedVariants.push({
          ...castChild.props,
          ...updatedProps,
          variantItem: currentVariant,
          prevVariant: {
            ...castChild.props
          }
        });
      }
      callbackProperties.variants.push({
        ...castChild.props,
        ...updatedProps,
        variantItem: currentVariant
      });
      return (0, import_react67.cloneElement)(castChild, updatedProps);
    })));
    if (typeof onSaveManageViews === "function") {
      onSaveManageViews(enrichEventWithDetails(e, callbackProperties));
    }
    if (!e.defaultPrevented) {
      handleManageClose();
    }
  };
  const handleOpenVariantManagement = (0, import_react67.useCallback)((e) => {
    popoverRef.current.opener = e.target;
    setPopoverOpen(true);
  }, [popoverRef]);
  const handleCloseVariantManagement = (e) => {
    stopPropagation(e);
    setPopoverOpen(false);
  };
  const searchText = i18nBundle.getText(SEARCH);
  const saveAsText = i18nBundle.getText(SAVE_AS);
  const manageText = i18nBundle.getText(MANAGE);
  const saveText = i18nBundle.getText(SAVE);
  const a11ySearchText = i18nBundle.getText(SEARCH_VARIANT);
  const selectViewText = i18nBundle.getText(SELECT_VIEW);
  const variantManagementClasses = clsx(classNames30.container, disabled && classNames30.disabled, className);
  const dirtyStateClasses = clsx(classNames30.dirtyState, dirtyStateText !== "*" && classNames30.dirtyStateText);
  const selectVariantEventRef = (0, import_react67.useRef)(void 0);
  (0, import_react67.useEffect)(() => {
    if (selectVariantEventRef.current) {
      if (typeof onSelect === "function") {
        onSelect(enrichEventWithDetails(selectVariantEventRef.current, {
          selectedVariant
        }));
        selectVariantEventRef.current = void 0;
      }
    }
  }, [selectedVariant, onSelect]);
  (0, import_react67.useEffect)(() => {
    const selectedChild = safeChildren.find((item2) => (0, import_react67.isValidElement)(item2) && item2.props.children === (selectedVariant == null ? void 0 : selectedVariant.children));
    setSelectedSaveViewInputProps((selectedChild == null ? void 0 : selectedChild.props.saveViewInputProps) ?? {});
  }, [selectedVariant, safeChildren]);
  const handleVariantItemSelect = (e) => {
    const targetItem = e.detail.targetItem;
    const dataset = targetItem.dataset;
    setSelectedVariant({
      ...dataset,
      variantItem: targetItem
    });
    selectVariantEventRef.current = e;
    if (closeOnItemSelect) {
      handleClose();
    }
  };
  const variantNames = safeChildren.map((item2) => {
    var _a;
    return (0, import_react67.isValidElement)(item2) && typeof ((_a = item2.props) == null ? void 0 : _a.children) === "string" ? item2.props.children : "";
  });
  const [favoriteChildren, setFavoriteChildren] = (0, import_react67.useState)(void 0);
  (0, import_react67.useEffect)(() => {
    if (showOnlyFavorites) {
      setFavoriteChildren(safeChildren.filter((child) => {
        return (0, import_react67.isValidElement)(child) && (child.props.favorite || child.props.isDefault);
      }));
    }
    if (!showOnlyFavorites && (favoriteChildren == null ? void 0 : favoriteChildren.length) > 0) {
      setFavoriteChildren(void 0);
    }
  }, [showOnlyFavorites, safeChildren]);
  const safeChildrenWithFavorites = favoriteChildren ?? safeChildren;
  const showInput = safeChildrenWithFavorites.length > 10;
  const [filteredChildren, setFilteredChildren] = (0, import_react67.useState)(void 0);
  const [searchValue, setSearchValue] = (0, import_react67.useState)("");
  const handleSearchInput = (e) => {
    setSearchValue(e.target.value);
    setFilteredChildren(safeChildrenWithFavorites.filter((child) => {
      var _a;
      return typeof ((_a = child == null ? void 0 : child.props) == null ? void 0 : _a.children) === "string" && child.props.children.toLowerCase().includes(e.target.value.toLowerCase());
    }));
  };
  (0, import_react67.useEffect)(() => {
    if (filteredChildren) {
      setFilteredChildren(safeChildrenWithFavorites.filter((child) => {
        var _a;
        return typeof ((_a = child == null ? void 0 : child.props) == null ? void 0 : _a.children) === "string" && child.props.children.toLowerCase().includes(searchValue);
      }));
    }
  }, [safeChildrenWithFavorites]);
  const showSaveBtn = dirtyState && selectedVariant && !selectedVariant.readOnly;
  return (0, import_jsx_runtime187.jsx)("div", {
    className: variantManagementClasses,
    style,
    ...rest,
    ref,
    children: (0, import_jsx_runtime187.jsxs)(VariantManagementContext.Provider, {
      value: {
        selectVariantItem: setSelectedVariant,
        selectedVariant
      },
      children: [(0, import_jsx_runtime187.jsxs)(FlexBox, {
        onClick: disabled ? void 0 : handleOpenVariantManagement,
        children: [(0, import_jsx_runtime187.jsx)(Title, {
          level,
          size,
          className: classNames30.title,
          "data-component-name": "VariantManagementTitle",
          children: selectedVariant == null ? void 0 : selectedVariant.children
        }), dirtyState && (0, import_jsx_runtime187.jsx)("div", {
          className: dirtyStateClasses,
          children: dirtyStateText
        })]
      }), (0, import_jsx_runtime187.jsx)(Button, {
        className: clsx(classNames30.navDownBtn, "ui5-content-density-compact"),
        tooltip: selectViewText,
        accessibleName: selectViewText,
        onClick: disabled ? void 0 : handleOpenVariantManagement,
        design: ButtonDesign_default.Transparent,
        icon: navigation_down_arrow_default,
        disabled
      }), (0, import_jsx_runtime187.jsx)(ResponsivePopover, {
        open: popoverOpen,
        className: classNames30.popover,
        ref: popoverRef,
        headerText: titleText,
        placement,
        footer: (showSaveBtn || !hideSaveAs || !hideManageVariants) && (0, import_jsx_runtime187.jsx)(Bar3, {
          design: BarDesign_default.Footer,
          className: classNames30.footer,
          endContent: (0, import_jsx_runtime187.jsxs)(import_jsx_runtime187.Fragment, {
            children: [!inErrorState && showSaveBtn && (0, import_jsx_runtime187.jsx)(Button, {
              onClick: handleSave,
              design: ButtonDesign_default.Emphasized,
              children: saveText
            }), !inErrorState && !hideSaveAs && (0, import_jsx_runtime187.jsx)(Button, {
              onClick: handleOpenSaveAsDialog,
              design: showSaveBtn ? ButtonDesign_default.Transparent : ButtonDesign_default.Emphasized,
              disabled: !selectedVariant || Object.keys(selectedVariant).length === 0,
              children: saveAsText
            }), !inErrorState && !hideManageVariants && (0, import_jsx_runtime187.jsx)(Button, {
              onClick: handleManageClick,
              design: showSaveBtn || !hideSaveAs ? ButtonDesign_default.Transparent : ButtonDesign_default.Emphasized,
              children: manageText
            })]
          })
        }),
        onClose: handleCloseVariantManagement,
        children: inErrorState ? (0, import_jsx_runtime187.jsx)(IllustratedMessage3, {
          name: IllustrationMessageType_default.UnableToLoad
        }) : (0, import_jsx_runtime187.jsx)(List, {
          onSelectionChange: handleVariantItemSelect,
          selectionMode: ListSelectionMode_default.Single,
          header: showInput ? (0, import_jsx_runtime187.jsx)("div", {
            className: classNames30.searchInputContainer,
            tabIndex: -1,
            children: (0, import_jsx_runtime187.jsx)(Input, {
              className: classNames30.searchInput,
              accessibleName: a11ySearchText,
              value: searchValue,
              placeholder: searchText,
              onInput: handleSearchInput,
              showClearIcon: true,
              icon: (0, import_jsx_runtime187.jsx)(Icon, {
                name: search_default,
                className: classNames30.inputIcon
              })
            })
          }) : void 0,
          children: filteredChildren ?? safeChildrenWithFavorites
        })
      }), manageViewsDialogOpen && (0, import_jsx_runtime187.jsx)(ManageViewsDialog, {
        onAfterClose: handleManageClose,
        onManageViewsCancel,
        handleSaveManageViews,
        showShare: !hideShare,
        showApplyAutomatically: !hideApplyAutomatically,
        showCreatedBy: !hideCreatedBy,
        showSetAsDefault: !hideSetAsDefault,
        variantNames,
        showOnlyFavorites,
        children: safeChildren
      }), saveAsDialogOpen && (0, import_jsx_runtime187.jsx)(SaveViewDialog, {
        onSaveViewCancel,
        saveViewInputProps: selectedSaveViewInputProps,
        showShare: !hideShare,
        showApplyAutomatically: !hideApplyAutomatically,
        showSetAsDefault: !hideSetAsDefault,
        onAfterClose: handleSaveAsClose,
        handleSave: handleSaveView,
        selectedVariant,
        variantNames
      })]
    })
  });
});
VariantManagement.displayName = "VariantManagement";

// node_modules/@ui5/webcomponents-react/dist/components/VariantManagement/VariantItem.js
var import_react68 = __toESM(require_react(), 1);

// node_modules/@ui5/webcomponents-react/dist/components/VariantManagement/VariantItem.module.css.js
var styleData32 = `@layer ui5-webcomponents-react{._variantItem_1kzuh_1::part(title){text-align:start}}`;
var classNames31 = {
  "variantItem": "_variantItem_1kzuh_1"
};

// node_modules/@ui5/webcomponents-react/dist/components/VariantManagement/VariantItem.js
var import_jsx_runtime188 = __toESM(require_jsx_runtime(), 1);
var VariantItem = (0, import_react68.forwardRef)((props, ref) => {
  const {
    isDefault,
    author,
    favorite,
    global: global2,
    labelReadOnly,
    applyAutomatically,
    applyAutomaticallyText,
    readOnly,
    selected,
    children,
    hideDelete
  } = props;
  useStylesheet(styleData32, VariantItem.displayName);
  const {
    selectVariantItem,
    selectedVariant
  } = (0, import_react68.useContext)(VariantManagementContext);
  const [componentRef, consolidatedRef] = useSyncRef(ref);
  (0, import_react68.useEffect)(() => {
    if (selected) {
      selectVariantItem({
        ...props,
        variantItem: consolidatedRef.current
      });
    }
  }, [selected]);
  const {
    manageViewsInputProps: _0,
    saveViewInputProps: _1,
    ...rest
  } = props;
  return (0, import_jsx_runtime188.jsx)(ListItemStandard3, {
    ...rest,
    ref: componentRef,
    className: clsx(classNames31.variantItem),
    "data-is-default": isDefault,
    "data-author": author,
    "data-favorite": favorite,
    "data-global": global2,
    "data-label-read-only": labelReadOnly,
    "data-apply-automatically": applyAutomatically,
    "data-apply-automatically-text": applyAutomaticallyText,
    "data-read-only": readOnly,
    "data-children": children,
    "data-hide-delete": hideDelete,
    selected: (selectedVariant == null ? void 0 : selectedVariant.children) === children
  });
});
VariantItem.displayName = "VariantItem";

// node_modules/@ui5/webcomponents-react/dist/index.js
var version3 = VersionInfo_default2.version;
export {
  ActionSheet,
  AnalyticalCardHeader,
  AnalyticalTable,
  AnalyticalTableHooks_exports as AnalyticalTableHooks,
  AnalyticalTablePopinDisplay,
  AnalyticalTableScaleWidthMode,
  AnalyticalTableScrollMode,
  AnalyticalTableSelectionBehavior,
  AnalyticalTableSelectionMode,
  AnalyticalTableSubComponentsBehavior,
  AnalyticalTableVisibleRowCountMode,
  Avatar3 as Avatar,
  AvatarGroup3 as AvatarGroup,
  Bar3 as Bar,
  BarcodeScannerDialog3 as BarcodeScannerDialog,
  Breadcrumbs3 as Breadcrumbs,
  BreadcrumbsItem3 as BreadcrumbsItem,
  BusyIndicator,
  Button,
  ButtonBadge3 as ButtonBadge,
  Calendar3 as Calendar,
  CalendarDate4 as CalendarDate,
  CalendarDateRange3 as CalendarDateRange,
  CalendarLegend3 as CalendarLegend,
  CalendarLegendItem3 as CalendarLegendItem,
  Card3 as Card,
  CardHeader3 as CardHeader,
  Carousel3 as Carousel,
  CheckBox,
  ColorPalette3 as ColorPalette,
  ColorPaletteItem3 as ColorPaletteItem,
  ColorPalettePopover3 as ColorPalettePopover,
  ColorPicker,
  ComboBox3 as ComboBox,
  ComboBoxItem3 as ComboBoxItem,
  ComboBoxItemGroup3 as ComboBoxItemGroup,
  ContentDensity,
  DatePicker3 as DatePicker,
  DateRangePicker3 as DateRangePicker,
  DateTimePicker3 as DateTimePicker,
  DeviationIndicator,
  Dialog,
  DynamicPage3 as DynamicPage,
  DynamicPageHeader3 as DynamicPageHeader,
  DynamicPageTitle3 as DynamicPageTitle,
  DynamicSideContent3 as DynamicSideContent,
  ExpandableText3 as ExpandableText,
  FileUploader3 as FileUploader,
  FilterBar,
  FilterGroupItem,
  FilterItem3 as FilterItem,
  FilterItemOption3 as FilterItemOption,
  FlexBox,
  FlexBoxAlignItems,
  FlexBoxDirection,
  FlexBoxJustifyContent,
  FlexBoxWrap,
  FlexibleColumnLayout3 as FlexibleColumnLayout,
  Form3 as Form,
  FormGroup3 as FormGroup,
  FormItem3 as FormItem,
  Grid,
  GridPosition,
  Icon,
  IllustratedMessage3 as IllustratedMessage,
  IndicationColor,
  Input,
  Label,
  Link3 as Link,
  List,
  ListItemCustom,
  ListItemGroup,
  ListItemStandard3 as ListItemStandard,
  MediaGallery3 as MediaGallery,
  MediaGalleryItem3 as MediaGalleryItem,
  Menu,
  MenuItem,
  MenuSeparator,
  MessageBox,
  MessageBoxAction,
  MessageBoxType,
  MessageItem,
  MessageStrip3 as MessageStrip,
  MessageView,
  MessageViewButton,
  Modals,
  MultiComboBox3 as MultiComboBox,
  MultiComboBoxItem3 as MultiComboBoxItem,
  MultiComboBoxItemGroup3 as MultiComboBoxItemGroup,
  MultiInput3 as MultiInput,
  NavigationLayout3 as NavigationLayout,
  NotificationList3 as NotificationList,
  NotificationListGroupItem3 as NotificationListGroupItem,
  NotificationListItem3 as NotificationListItem,
  NumericSideIndicator,
  ObjectPage,
  ObjectPageHeader,
  ObjectPageMode,
  ObjectPageSection,
  ObjectPageSubSection,
  ObjectPageTitle,
  ObjectStatus,
  Option3 as Option,
  OptionCustom3 as OptionCustom,
  Page3 as Page,
  Panel3 as Panel,
  Popover,
  ProductSwitch3 as ProductSwitch,
  ProductSwitchItem3 as ProductSwitchItem,
  ProgressIndicator3 as ProgressIndicator,
  RadioButton,
  RangeSlider3 as RangeSlider,
  RatingIndicator3 as RatingIndicator,
  ResponsiveGridLayout,
  ResponsivePopover,
  SegmentedButton3 as SegmentedButton,
  SegmentedButtonItem3 as SegmentedButtonItem,
  Select3 as Select,
  SelectDialog,
  ShellBar3 as ShellBar,
  ShellBarItem3 as ShellBarItem,
  ShellBarSpacer3 as ShellBarSpacer,
  SideNavigation3 as SideNavigation,
  SideNavigationGroup3 as SideNavigationGroup,
  SideNavigationItem3 as SideNavigationItem,
  SideNavigationSubItem3 as SideNavigationSubItem,
  Size,
  Slider,
  SortItem3 as SortItem,
  SpecialCalendarDate3 as SpecialCalendarDate,
  SplitButton3 as SplitButton,
  SplitterElement,
  SplitterLayout,
  StepInput3 as StepInput,
  SuggestionItem,
  SuggestionItemCustom3 as SuggestionItemCustom,
  SuggestionItemGroup,
  Switch3 as Switch,
  Tab3 as Tab,
  TabContainer3 as TabContainer,
  TabSeparator3 as TabSeparator,
  Table3 as Table,
  TableCell3 as TableCell,
  TableGrowing3 as TableGrowing,
  TableHeaderCell3 as TableHeaderCell,
  TableHeaderRow3 as TableHeaderRow,
  TablePlaceholder,
  TableRow3 as TableRow,
  TableRowAction3 as TableRowAction,
  TableRowActionNavigation3 as TableRowActionNavigation,
  TableSelection3 as TableSelection,
  TableVirtualizer3 as TableVirtualizer,
  Tag3 as Tag,
  Text3 as Text,
  TextAlign,
  TextArea3 as TextArea,
  Theme,
  ThemeProvider,
  TimePicker3 as TimePicker,
  Timeline3 as Timeline,
  TimelineGroupItem3 as TimelineGroupItem,
  TimelineItem3 as TimelineItem,
  Title,
  Toast3 as Toast,
  ToggleButton3 as ToggleButton,
  Token3 as Token,
  Tokenizer3 as Tokenizer,
  Toolbar3 as Toolbar,
  ToolbarButton3 as ToolbarButton,
  ToolbarSelect3 as ToolbarSelect,
  ToolbarSelectOption3 as ToolbarSelectOption,
  ToolbarSeparator3 as ToolbarSeparator,
  ToolbarSpacer3 as ToolbarSpacer,
  Tree3 as Tree,
  TreeItem3 as TreeItem,
  TreeItemCustom3 as TreeItemCustom,
  UploadCollection3 as UploadCollection,
  UploadCollectionItem3 as UploadCollectionItem,
  UserMenu3 as UserMenu,
  UserMenuAccount3 as UserMenuAccount,
  UserMenuItem3 as UserMenuItem,
  ValueColor,
  VariantItem,
  VariantManagement,
  VerticalAlign,
  ViewSettingsDialog3 as ViewSettingsDialog,
  Wizard3 as Wizard,
  WizardStep3 as WizardStep,
  resolveMessageGroups,
  resolveMessageTypes,
  version3 as version,
  withWebComponent
};
/*! Bundled license information:

@ui5/webcomponents-localization/dist/sap/base/i18n/date/TimezoneUtils.js:
  (*!
   * OpenUI5
   * (c) Copyright 2009-2024 SAP SE or an SAP affiliate company.
   * Licensed under the Apache License, Version 2.0 - see LICENSE.txt.
   *)

@ui5/webcomponents-localization/dist/sap/ui/core/format/TimezoneUtil.js:
  (*!
   * OpenUI5
   * (c) Copyright 2009-2024 SAP SE or an SAP affiliate company.
   * Licensed under the Apache License, Version 2.0 - see LICENSE.txt.
   *)

@ui5/webcomponents-localization/dist/sap/ui/core/date/UI5Date.js:
  (*!
   * OpenUI5
   * (c) Copyright 2009-2024 SAP SE or an SAP affiliate company.
   * Licensed under the Apache License, Version 2.0 - see LICENSE.txt.
   *)

@ui5/webcomponents-localization/dist/sap/base/assert.js:
  (*!
   * OpenUI5
   * (c) Copyright 2009-2024 SAP SE or an SAP affiliate company.
   * Licensed under the Apache License, Version 2.0 - see LICENSE.txt.
   *)

@ui5/webcomponents-localization/dist/sap/base/util/array/uniqueSort.js:
  (*!
   * OpenUI5
   * (c) Copyright 2009-2024 SAP SE or an SAP affiliate company.
   * Licensed under the Apache License, Version 2.0 - see LICENSE.txt.
   *)

@ui5/webcomponents-localization/dist/sap/ui/base/Metadata.js:
  (*!
   * OpenUI5
   * (c) Copyright 2009-2024 SAP SE or an SAP affiliate company.
   * Licensed under the Apache License, Version 2.0 - see LICENSE.txt.
   *)

@ui5/webcomponents-localization/dist/sap/ui/base/Object.js:
  (*!
   * OpenUI5
   * (c) Copyright 2009-2024 SAP SE or an SAP affiliate company.
   * Licensed under the Apache License, Version 2.0 - see LICENSE.txt.
   *)
  (*!oObject[sMethodName] for 'lazy' loading interface methods ;-) *)

@ui5/webcomponents-localization/dist/sap/base/util/isPlainObject.js:
  (*!
   * OpenUI5
   * (c) Copyright 2009-2024 SAP SE or an SAP affiliate company.
   * Licensed under the Apache License, Version 2.0 - see LICENSE.txt.
   *)

@ui5/webcomponents-localization/dist/sap/ui/base/DataType.js:
  (*!
   * OpenUI5
   * (c) Copyright 2009-2024 SAP SE or an SAP affiliate company.
   * Licensed under the Apache License, Version 2.0 - see LICENSE.txt.
   *)

@ui5/webcomponents-localization/dist/sap/base/i18n/date/CalendarType.js:
  (*!
   * OpenUI5
   * (c) Copyright 2009-2024 SAP SE or an SAP affiliate company.
   * Licensed under the Apache License, Version 2.0 - see LICENSE.txt.
   *)

@ui5/webcomponents-localization/dist/sap/ui/core/CalendarType.js:
  (*!
   * OpenUI5
   * (c) Copyright 2009-2024 SAP SE or an SAP affiliate company.
   * Licensed under the Apache License, Version 2.0 - see LICENSE.txt.
   *)

@ui5/webcomponents-localization/dist/sap/base/i18n/LanguageTag.js:
  (*!
   * OpenUI5
   * (c) Copyright 2009-2024 SAP SE or an SAP affiliate company.
   * Licensed under the Apache License, Version 2.0 - see LICENSE.txt.
   *)

@ui5/webcomponents-localization/dist/sap/ui/core/Locale.js:
  (*!
   * OpenUI5
   * (c) Copyright 2009-2024 SAP SE or an SAP affiliate company.
   * Licensed under the Apache License, Version 2.0 - see LICENSE.txt.
   *)

@ui5/webcomponents-localization/dist/sap/base/util/_merge.js:
  (*!
   * OpenUI5
   * (c) Copyright 2009-2024 SAP SE or an SAP affiliate company.
   * Licensed under the Apache License, Version 2.0 - see LICENSE.txt.
   *)

@ui5/webcomponents-localization/dist/sap/base/util/extend.js:
  (*!
   * OpenUI5
   * (c) Copyright 2009-2024 SAP SE or an SAP affiliate company.
   * Licensed under the Apache License, Version 2.0 - see LICENSE.txt.
   *)

@ui5/webcomponents-localization/dist/sap/base/i18n/date/CalendarWeekNumbering.js:
  (*!
   * OpenUI5
   * (c) Copyright 2009-2024 SAP SE or an SAP affiliate company.
   * Licensed under the Apache License, Version 2.0 - see LICENSE.txt.
   *)

@ui5/webcomponents-localization/dist/sap/ui/core/date/CalendarWeekNumbering.js:
  (*!
   * OpenUI5
   * (c) Copyright 2009-2024 SAP SE or an SAP affiliate company.
   * Licensed under the Apache License, Version 2.0 - see LICENSE.txt.
   *)

@ui5/webcomponents-localization/dist/sap/ui/core/LocaleData.js:
  (*!
  * OpenUI5
  * (c) Copyright 2009-2024 SAP SE or an SAP affiliate company.
  * Licensed under the Apache License, Version 2.0 - see LICENSE.txt.
  *)

@ui5/webcomponents-localization/dist/sap/ui/core/date/CalendarUtils.js:
  (*!
   * OpenUI5
   * (c) Copyright 2009-2024 SAP SE or an SAP affiliate company.
   * Licensed under the Apache License, Version 2.0 - see LICENSE.txt.
   *)

@ui5/webcomponents-localization/dist/sap/ui/core/date/UniversalDate.js:
  (*!
  * OpenUI5
  * (c) Copyright 2009-2024 SAP SE or an SAP affiliate company.
  * Licensed under the Apache License, Version 2.0 - see LICENSE.txt.
  *)

@ui5/webcomponents-localization/dist/sap/base/strings/formatMessage.js:
  (*!
   * OpenUI5
   * (c) Copyright 2009-2024 SAP SE or an SAP affiliate company.
   * Licensed under the Apache License, Version 2.0 - see LICENSE.txt.
   *)

@ui5/webcomponents-localization/dist/sap/base/util/deepEqual.js:
  (*!
   * OpenUI5
   * (c) Copyright 2009-2024 SAP SE or an SAP affiliate company.
   * Licensed under the Apache License, Version 2.0 - see LICENSE.txt.
   *)

@ui5/webcomponents-localization/dist/sap/ui/core/format/DateFormat.js:
  (*!
   * OpenUI5
   * (c) Copyright 2009-2024 SAP SE or an SAP affiliate company.
   * Licensed under the Apache License, Version 2.0 - see LICENSE.txt.
   *)

@ui5/webcomponents-localization/dist/sap/ui/core/date/Gregorian.js:
  (*!
   * OpenUI5
   * (c) Copyright 2009-2024 SAP SE or an SAP affiliate company.
   * Licensed under the Apache License, Version 2.0 - see LICENSE.txt.
   *)
*/
//# sourceMappingURL=@ui5_webcomponents-react.js.map
